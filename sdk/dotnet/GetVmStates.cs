// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Outscale
{
    public static class GetVmStates
    {
        /// <summary>
        /// Provides information about VM states.
        /// 
        /// For more information on this resource, see the [User Guide](https://docs.outscale.com/en/userguide/About-Instance-Lifecycle.html).  
        /// For more information on this resource actions, see the [API documentation](https://docs.outscale.com/api#readvmsstate).
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Outscale = Pulumi.Outscale;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var vmStates01 = Outscale.GetVmStates.Invoke(new()
        ///     {
        ///         Filters = new[]
        ///         {
        ///             new Outscale.Inputs.GetVmStatesFilterInputArgs
        ///             {
        ///                 Name = "vm_ids",
        ///                 Values = new[]
        ///                 {
        ///                     "i-12345678",
        ///                     "i-87654321",
        ///                 },
        ///             },
        ///             new Outscale.Inputs.GetVmStatesFilterInputArgs
        ///             {
        ///                 Name = "vm_states",
        ///                 Values = new[]
        ///                 {
        ///                     "running",
        ///                 },
        ///             },
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetVmStatesResult> InvokeAsync(GetVmStatesArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetVmStatesResult>("outscale:index/getVmStates:getVmStates", args ?? new GetVmStatesArgs(), options.WithDefaults());

        /// <summary>
        /// Provides information about VM states.
        /// 
        /// For more information on this resource, see the [User Guide](https://docs.outscale.com/en/userguide/About-Instance-Lifecycle.html).  
        /// For more information on this resource actions, see the [API documentation](https://docs.outscale.com/api#readvmsstate).
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Outscale = Pulumi.Outscale;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var vmStates01 = Outscale.GetVmStates.Invoke(new()
        ///     {
        ///         Filters = new[]
        ///         {
        ///             new Outscale.Inputs.GetVmStatesFilterInputArgs
        ///             {
        ///                 Name = "vm_ids",
        ///                 Values = new[]
        ///                 {
        ///                     "i-12345678",
        ///                     "i-87654321",
        ///                 },
        ///             },
        ///             new Outscale.Inputs.GetVmStatesFilterInputArgs
        ///             {
        ///                 Name = "vm_states",
        ///                 Values = new[]
        ///                 {
        ///                     "running",
        ///                 },
        ///             },
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetVmStatesResult> Invoke(GetVmStatesInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetVmStatesResult>("outscale:index/getVmStates:getVmStates", args ?? new GetVmStatesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetVmStatesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// If true, includes the status of all VMs. By default or if set to false, only includes the status of running VMs.
        /// </summary>
        [Input("allVms")]
        public bool? AllVms { get; set; }

        [Input("filters")]
        private List<Inputs.GetVmStatesFilterArgs>? _filters;

        /// <summary>
        /// A combination of a filter name and one or more filter values. You can specify this argument for as many filter names as you need. The filter name can be any of the following:
        /// </summary>
        public List<Inputs.GetVmStatesFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetVmStatesFilterArgs>());
            set => _filters = value;
        }

        [Input("vmIds")]
        private List<string>? _vmIds;

        /// <summary>
        /// One or more IDs of VMs.
        /// </summary>
        public List<string> VmIds
        {
            get => _vmIds ?? (_vmIds = new List<string>());
            set => _vmIds = value;
        }

        public GetVmStatesArgs()
        {
        }
        public static new GetVmStatesArgs Empty => new GetVmStatesArgs();
    }

    public sealed class GetVmStatesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// If true, includes the status of all VMs. By default or if set to false, only includes the status of running VMs.
        /// </summary>
        [Input("allVms")]
        public Input<bool>? AllVms { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetVmStatesFilterInputArgs>? _filters;

        /// <summary>
        /// A combination of a filter name and one or more filter values. You can specify this argument for as many filter names as you need. The filter name can be any of the following:
        /// </summary>
        public InputList<Inputs.GetVmStatesFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetVmStatesFilterInputArgs>());
            set => _filters = value;
        }

        [Input("vmIds")]
        private InputList<string>? _vmIds;

        /// <summary>
        /// One or more IDs of VMs.
        /// </summary>
        public InputList<string> VmIds
        {
            get => _vmIds ?? (_vmIds = new InputList<string>());
            set => _vmIds = value;
        }

        public GetVmStatesInvokeArgs()
        {
        }
        public static new GetVmStatesInvokeArgs Empty => new GetVmStatesInvokeArgs();
    }


    [OutputType]
    public sealed class GetVmStatesResult
    {
        public readonly bool? AllVms;
        public readonly ImmutableArray<Outputs.GetVmStatesFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string RequestId;
        public readonly ImmutableArray<string> VmIds;
        /// <summary>
        /// Information about one or more VM states.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetVmStatesVmStateResult> VmStates;

        [OutputConstructor]
        private GetVmStatesResult(
            bool? allVms,

            ImmutableArray<Outputs.GetVmStatesFilterResult> filters,

            string id,

            string requestId,

            ImmutableArray<string> vmIds,

            ImmutableArray<Outputs.GetVmStatesVmStateResult> vmStates)
        {
            AllVms = allVms;
            Filters = filters;
            Id = id;
            RequestId = requestId;
            VmIds = vmIds;
            VmStates = vmStates;
        }
    }
}
