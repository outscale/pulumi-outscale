// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Outscale.Outputs
{

    [OutputType]
    public sealed class GetSnapshotsSnapshotResult
    {
        /// <summary>
        /// The account alias of the owner of the snapshot.
        /// </summary>
        public readonly string AccountAlias;
        /// <summary>
        /// The account ID of the owner of the snapshot.
        /// </summary>
        public readonly string AccountId;
        /// <summary>
        /// The date and time of creation of the snapshot.
        /// </summary>
        public readonly string CreationDate;
        /// <summary>
        /// The description of the snapshot.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// Permissions for the resource.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSnapshotsSnapshotPermissionsToCreateVolumeResult> PermissionsToCreateVolumes;
        /// <summary>
        /// The progress of the snapshot, as a percentage.
        /// </summary>
        public readonly int Progress;
        /// <summary>
        /// The ID of the snapshot.
        /// </summary>
        public readonly string SnapshotId;
        /// <summary>
        /// The state of the snapshot (`in-queue` \| `completed` \| `error`).
        /// </summary>
        public readonly string State;
        /// <summary>
        /// The key/value combinations of the tags associated with the snapshots, in the following format: `TAGKEY=TAGVALUE`.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSnapshotsSnapshotTagResult> Tags;
        /// <summary>
        /// The ID of the volume used to create the snapshot.
        /// </summary>
        public readonly string VolumeId;
        /// <summary>
        /// The size of the volume used to create the snapshot, in gibibytes (GiB).
        /// </summary>
        public readonly int VolumeSize;

        [OutputConstructor]
        private GetSnapshotsSnapshotResult(
            string accountAlias,

            string accountId,

            string creationDate,

            string description,

            ImmutableArray<Outputs.GetSnapshotsSnapshotPermissionsToCreateVolumeResult> permissionsToCreateVolumes,

            int progress,

            string snapshotId,

            string state,

            ImmutableArray<Outputs.GetSnapshotsSnapshotTagResult> tags,

            string volumeId,

            int volumeSize)
        {
            AccountAlias = accountAlias;
            AccountId = accountId;
            CreationDate = creationDate;
            Description = description;
            PermissionsToCreateVolumes = permissionsToCreateVolumes;
            Progress = progress;
            SnapshotId = snapshotId;
            State = state;
            Tags = tags;
            VolumeId = volumeId;
            VolumeSize = volumeSize;
        }
    }
}
