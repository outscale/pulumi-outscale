// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Outscale.Outputs
{

    [OutputType]
    public sealed class VmPrimaryNic
    {
        /// <summary>
        /// The account ID of the owner of the NIC.
        /// </summary>
        public readonly string? AccountId;
        /// <summary>
        /// If true, the NIC is deleted when the VM is terminated. You can specify this parameter only for a new NIC. To modify this value for an existing NIC, see [UpdateNic](https://docs.outscale.com/api#updatenic).
        /// </summary>
        public readonly bool? DeleteOnVmDeletion;
        /// <summary>
        /// The description of the NIC, if you are creating a NIC when creating the VM.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// The index of the VM device for the NIC attachment (must be `0`). This parameter is required if you create a NIC when creating the VM.
        /// </summary>
        public readonly int DeviceNumber;
        /// <summary>
        /// (Net only) If true, the source/destination check is enabled. If false, it is disabled. This value must be false for a NAT VM to perform network address translation (NAT) in a Net.
        /// </summary>
        public readonly bool? IsSourceDestChecked;
        /// <summary>
        /// Information about the network interface card (NIC).
        /// </summary>
        public readonly ImmutableArray<Outputs.VmPrimaryNicLinkNic> LinkNics;
        /// <summary>
        /// Information about the public IP associated with the NIC.
        /// </summary>
        public readonly ImmutableArray<Outputs.VmPrimaryNicLinkPublicIp> LinkPublicIps;
        /// <summary>
        /// The Media Access Control (MAC) address of the NIC.
        /// </summary>
        public readonly string? MacAddress;
        /// <summary>
        /// The ID of the Net for the NIC.
        /// </summary>
        public readonly string? NetId;
        /// <summary>
        /// The ID of the NIC, if you are attaching an existing NIC when creating a VM.
        /// </summary>
        public readonly string? NicId;
        /// <summary>
        /// The name of the private DNS.
        /// </summary>
        public readonly string? PrivateDnsName;
        /// <summary>
        /// One or more private IPs of the VM.
        /// </summary>
        public readonly ImmutableArray<Outputs.VmPrimaryNicPrivateIp> PrivateIps;
        /// <summary>
        /// The number of secondary private IPs, if you create a NIC when creating a VM. This parameter cannot be specified if you specified more than one private IP in the `private_ips` parameter.
        /// </summary>
        public readonly int? SecondaryPrivateIpCount;
        /// <summary>
        /// One or more IDs of security group for the VMs.
        /// </summary>
        public readonly ImmutableArray<string> SecurityGroupIds;
        /// <summary>
        /// One or more security groups associated with the VM.
        /// </summary>
        public readonly ImmutableArray<Outputs.VmPrimaryNicSecurityGroup> SecurityGroups;
        /// <summary>
        /// The state of the VM (`running` | `stopped`). If set to `stopped`, the VM is stopped regardless of the value of the `vm_initiated_shutdown_behavior` argument.
        /// </summary>
        public readonly string? State;
        /// <summary>
        /// The ID of the Subnet in which you want to create the VM. If you specify this parameter, you must not specify the `nics` parameter.
        /// </summary>
        public readonly string? SubnetId;

        [OutputConstructor]
        private VmPrimaryNic(
            string? accountId,

            bool? deleteOnVmDeletion,

            string? description,

            int deviceNumber,

            bool? isSourceDestChecked,

            ImmutableArray<Outputs.VmPrimaryNicLinkNic> linkNics,

            ImmutableArray<Outputs.VmPrimaryNicLinkPublicIp> linkPublicIps,

            string? macAddress,

            string? netId,

            string? nicId,

            string? privateDnsName,

            ImmutableArray<Outputs.VmPrimaryNicPrivateIp> privateIps,

            int? secondaryPrivateIpCount,

            ImmutableArray<string> securityGroupIds,

            ImmutableArray<Outputs.VmPrimaryNicSecurityGroup> securityGroups,

            string? state,

            string? subnetId)
        {
            AccountId = accountId;
            DeleteOnVmDeletion = deleteOnVmDeletion;
            Description = description;
            DeviceNumber = deviceNumber;
            IsSourceDestChecked = isSourceDestChecked;
            LinkNics = linkNics;
            LinkPublicIps = linkPublicIps;
            MacAddress = macAddress;
            NetId = netId;
            NicId = nicId;
            PrivateDnsName = privateDnsName;
            PrivateIps = privateIps;
            SecondaryPrivateIpCount = secondaryPrivateIpCount;
            SecurityGroupIds = securityGroupIds;
            SecurityGroups = securityGroups;
            State = state;
            SubnetId = subnetId;
        }
    }
}
