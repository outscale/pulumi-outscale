// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Outscale.Outputs
{

    [OutputType]
    public sealed class GetNicLinkNicResult
    {
        /// <summary>
        /// If true, the NIC is deleted when the VM is terminated.
        /// </summary>
        public readonly string DeleteOnVmDeletion;
        /// <summary>
        /// The device index for the NIC attachment (between `1` and `7`, both included).
        /// </summary>
        public readonly int DeviceNumber;
        /// <summary>
        /// The ID of the NIC to attach.
        /// </summary>
        public readonly string LinkNicId;
        /// <summary>
        /// The state of the NIC (`available` \| `attaching` \| `in-use` \| `detaching`).
        /// </summary>
        public readonly string State;
        /// <summary>
        /// The account ID of the owner of the VM.
        /// </summary>
        public readonly string VmAccountId;
        /// <summary>
        /// The ID of the VM.
        /// </summary>
        public readonly string VmId;

        [OutputConstructor]
        private GetNicLinkNicResult(
            string deleteOnVmDeletion,

            int deviceNumber,

            string linkNicId,

            string state,

            string vmAccountId,

            string vmId)
        {
            DeleteOnVmDeletion = deleteOnVmDeletion;
            DeviceNumber = deviceNumber;
            LinkNicId = linkNicId;
            State = state;
            VmAccountId = vmAccountId;
            VmId = vmId;
        }
    }
}
