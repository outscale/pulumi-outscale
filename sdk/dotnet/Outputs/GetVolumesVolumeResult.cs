// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Outscale.Outputs
{

    [OutputType]
    public sealed class GetVolumesVolumeResult
    {
        /// <summary>
        /// The date and time of creation of the volume.
        /// </summary>
        public readonly string CreationDate;
        /// <summary>
        /// The number of I/O operations per second (IOPS):&lt;br /&gt;- For `io1` volumes, the number of provisioned IOPS.&lt;br /&gt;- For `gp2` volumes, the baseline performance of the volume.
        /// </summary>
        public readonly int Iops;
        /// <summary>
        /// Information about your volume attachment.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetVolumesVolumeLinkedVolumeResult> LinkedVolumes;
        /// <summary>
        /// The size of the volume, in gibibytes (GiB).
        /// </summary>
        public readonly int Size;
        /// <summary>
        /// The snapshot from which the volume was created.
        /// </summary>
        public readonly string SnapshotId;
        /// <summary>
        /// The state of the volume (`creating` \| `available` \| `in-use` \| `updating` \| `deleting` \| `error`).
        /// </summary>
        public readonly string State;
        /// <summary>
        /// The Subregion in which the volume was created.
        /// </summary>
        public readonly string SubregionName;
        /// <summary>
        /// The key/value combinations of the tags associated with the volumes, in the following format: `TAGKEY=TAGVALUE`.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetVolumesVolumeTagResult> Tags;
        /// <summary>
        /// The ID of the volume.
        /// </summary>
        public readonly string VolumeId;
        /// <summary>
        /// The type of the volume (`standard` \| `gp2` \| `io1`).
        /// </summary>
        public readonly string VolumeType;

        [OutputConstructor]
        private GetVolumesVolumeResult(
            string creationDate,

            int iops,

            ImmutableArray<Outputs.GetVolumesVolumeLinkedVolumeResult> linkedVolumes,

            int size,

            string snapshotId,

            string state,

            string subregionName,

            ImmutableArray<Outputs.GetVolumesVolumeTagResult> tags,

            string volumeId,

            string volumeType)
        {
            CreationDate = creationDate;
            Iops = iops;
            LinkedVolumes = linkedVolumes;
            Size = size;
            SnapshotId = snapshotId;
            State = state;
            SubregionName = subregionName;
            Tags = tags;
            VolumeId = volumeId;
            VolumeType = volumeType;
        }
    }
}
