// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Outscale.Outputs
{

    [OutputType]
    public sealed class GetRouteTablesRouteTableResult
    {
        /// <summary>
        /// One or more associations between the route table and Subnets.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetRouteTablesRouteTableLinkRouteTableResult> LinkRouteTables;
        /// <summary>
        /// The ID of the Net for the route table.
        /// </summary>
        public readonly string NetId;
        /// <summary>
        /// Information about virtual gateways propagating routes.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetRouteTablesRouteTableRoutePropagatingVirtualGatewayResult> RoutePropagatingVirtualGateways;
        /// <summary>
        /// The ID of the route table.
        /// </summary>
        public readonly string RouteTableId;
        /// <summary>
        /// One or more routes in the route table.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetRouteTablesRouteTableRouteResult> Routes;
        /// <summary>
        /// One or more tags associated with the route table.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetRouteTablesRouteTableTagResult> Tags;

        [OutputConstructor]
        private GetRouteTablesRouteTableResult(
            ImmutableArray<Outputs.GetRouteTablesRouteTableLinkRouteTableResult> linkRouteTables,

            string netId,

            ImmutableArray<Outputs.GetRouteTablesRouteTableRoutePropagatingVirtualGatewayResult> routePropagatingVirtualGateways,

            string routeTableId,

            ImmutableArray<Outputs.GetRouteTablesRouteTableRouteResult> routes,

            ImmutableArray<Outputs.GetRouteTablesRouteTableTagResult> tags)
        {
            LinkRouteTables = linkRouteTables;
            NetId = netId;
            RoutePropagatingVirtualGateways = routePropagatingVirtualGateways;
            RouteTableId = routeTableId;
            Routes = routes;
            Tags = tags;
        }
    }
}
