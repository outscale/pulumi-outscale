// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Outscale.Outputs
{

    [OutputType]
    public sealed class GetVmsVmPrimaryNicResult
    {
        /// <summary>
        /// The account ID of the owner of the NIC.
        /// </summary>
        public readonly string AccountId;
        /// <summary>
        /// If true, the NIC is deleted when the VM is terminated.
        /// </summary>
        public readonly bool DeleteOnVmDeletion;
        /// <summary>
        /// The description of the NIC.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The device index for the NIC attachment (between `1` and `7`, both included).
        /// </summary>
        public readonly int DeviceNumber;
        /// <summary>
        /// (Net only) If true, the source/destination check is enabled. If false, it is disabled.
        /// </summary>
        public readonly bool IsSourceDestChecked;
        /// <summary>
        /// Information about the network interface card (NIC).
        /// </summary>
        public readonly ImmutableArray<Outputs.GetVmsVmPrimaryNicLinkNicResult> LinkNics;
        /// <summary>
        /// Information about the public IP associated with the NIC.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetVmsVmPrimaryNicLinkPublicIpResult> LinkPublicIps;
        /// <summary>
        /// The Media Access Control (MAC) address of the NIC.
        /// </summary>
        public readonly string MacAddress;
        /// <summary>
        /// The ID of the Net for the NIC.
        /// </summary>
        public readonly string NetId;
        /// <summary>
        /// The ID of the NIC.
        /// </summary>
        public readonly string NicId;
        /// <summary>
        /// The name of the private DNS.
        /// </summary>
        public readonly string PrivateDnsName;
        /// <summary>
        /// The private IP or IPs of the NIC.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetVmsVmPrimaryNicPrivateIpResult> PrivateIps;
        public readonly int SecondaryPrivateIpCount;
        /// <summary>
        /// The IDs of the security groups for the VMs (only in the public Cloud).
        /// </summary>
        public readonly ImmutableArray<string> SecurityGroupIds;
        /// <summary>
        /// One or more security groups associated with the VM.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetVmsVmPrimaryNicSecurityGroupResult> SecurityGroups;
        /// <summary>
        /// The state of the VM (`pending` \| `running` \| `stopping` \| `stopped` \| `shutting-down` \| `terminated` \| `quarantine`).
        /// </summary>
        public readonly string State;
        /// <summary>
        /// The ID of the Subnet for the VM.
        /// </summary>
        public readonly string SubnetId;

        [OutputConstructor]
        private GetVmsVmPrimaryNicResult(
            string accountId,

            bool deleteOnVmDeletion,

            string description,

            int deviceNumber,

            bool isSourceDestChecked,

            ImmutableArray<Outputs.GetVmsVmPrimaryNicLinkNicResult> linkNics,

            ImmutableArray<Outputs.GetVmsVmPrimaryNicLinkPublicIpResult> linkPublicIps,

            string macAddress,

            string netId,

            string nicId,

            string privateDnsName,

            ImmutableArray<Outputs.GetVmsVmPrimaryNicPrivateIpResult> privateIps,

            int secondaryPrivateIpCount,

            ImmutableArray<string> securityGroupIds,

            ImmutableArray<Outputs.GetVmsVmPrimaryNicSecurityGroupResult> securityGroups,

            string state,

            string subnetId)
        {
            AccountId = accountId;
            DeleteOnVmDeletion = deleteOnVmDeletion;
            Description = description;
            DeviceNumber = deviceNumber;
            IsSourceDestChecked = isSourceDestChecked;
            LinkNics = linkNics;
            LinkPublicIps = linkPublicIps;
            MacAddress = macAddress;
            NetId = netId;
            NicId = nicId;
            PrivateDnsName = privateDnsName;
            PrivateIps = privateIps;
            SecondaryPrivateIpCount = secondaryPrivateIpCount;
            SecurityGroupIds = securityGroupIds;
            SecurityGroups = securityGroups;
            State = state;
            SubnetId = subnetId;
        }
    }
}
