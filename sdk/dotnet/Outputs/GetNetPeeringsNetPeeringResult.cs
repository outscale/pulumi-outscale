// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Outscale.Outputs
{

    [OutputType]
    public sealed class GetNetPeeringsNetPeeringResult
    {
        /// <summary>
        /// Information about the accepter Net.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetNetPeeringsNetPeeringAccepterNetResult> AccepterNets;
        /// <summary>
        /// The ID of the Net peering.
        /// </summary>
        public readonly string NetPeeringId;
        /// <summary>
        /// Information about the source Net.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetNetPeeringsNetPeeringSourceNetResult> SourceNets;
        /// <summary>
        /// Information about the state of the Net peering.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetNetPeeringsNetPeeringStateResult> States;
        /// <summary>
        /// One or more tags associated with the Net peering.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetNetPeeringsNetPeeringTagResult> Tags;

        [OutputConstructor]
        private GetNetPeeringsNetPeeringResult(
            ImmutableArray<Outputs.GetNetPeeringsNetPeeringAccepterNetResult> accepterNets,

            string netPeeringId,

            ImmutableArray<Outputs.GetNetPeeringsNetPeeringSourceNetResult> sourceNets,

            ImmutableArray<Outputs.GetNetPeeringsNetPeeringStateResult> states,

            ImmutableArray<Outputs.GetNetPeeringsNetPeeringTagResult> tags)
        {
            AccepterNets = accepterNets;
            NetPeeringId = netPeeringId;
            SourceNets = sourceNets;
            States = states;
            Tags = tags;
        }
    }
}
