// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Outscale.Outputs
{

    [OutputType]
    public sealed class GetNetAccessPointsNetAccessPointResult
    {
        /// <summary>
        /// The ID of the Net access point.
        /// </summary>
        public readonly string NetAccessPointId;
        /// <summary>
        /// The ID of the Net with which the Net access point is associated.
        /// </summary>
        public readonly string NetId;
        /// <summary>
        /// The ID of the route tables associated with the Net access point.
        /// </summary>
        public readonly ImmutableArray<string> RouteTableIds;
        /// <summary>
        /// The name of the service with which the Net access point is associated.
        /// </summary>
        public readonly string ServiceName;
        /// <summary>
        /// The state of the Net access point (`pending` \| `available` \| `deleting` \| `deleted`).
        /// </summary>
        public readonly string State;
        /// <summary>
        /// One or more tags associated with the Net access point.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetNetAccessPointsNetAccessPointTagResult> Tags;

        [OutputConstructor]
        private GetNetAccessPointsNetAccessPointResult(
            string netAccessPointId,

            string netId,

            ImmutableArray<string> routeTableIds,

            string serviceName,

            string state,

            ImmutableArray<Outputs.GetNetAccessPointsNetAccessPointTagResult> tags)
        {
            NetAccessPointId = netAccessPointId;
            NetId = netId;
            RouteTableIds = routeTableIds;
            ServiceName = serviceName;
            State = state;
            Tags = tags;
        }
    }
}
