// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Outscale
{
    public static class GetInternetService
    {
        /// <summary>
        /// Provides information about an Internet service.
        /// 
        /// For more information on this resource, see the [User Guide](https://docs.outscale.com/en/userguide/About-Internet-Services.html).  
        /// For more information on this resource actions, see the [API documentation](https://docs.outscale.com/api#3ds-outscale-api-internetservice).
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Outscale = Pulumi.Outscale;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var internetService01 = Outscale.GetInternetService.Invoke(new()
        ///     {
        ///         Filters = new[]
        ///         {
        ///             new Outscale.Inputs.GetInternetServiceFilterInputArgs
        ///             {
        ///                 Name = "internet_service_ids",
        ///                 Values = new[]
        ///                 {
        ///                     "igw-12345678",
        ///                 },
        ///             },
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetInternetServiceResult> InvokeAsync(GetInternetServiceArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetInternetServiceResult>("outscale:index/getInternetService:getInternetService", args ?? new GetInternetServiceArgs(), options.WithDefaults());

        /// <summary>
        /// Provides information about an Internet service.
        /// 
        /// For more information on this resource, see the [User Guide](https://docs.outscale.com/en/userguide/About-Internet-Services.html).  
        /// For more information on this resource actions, see the [API documentation](https://docs.outscale.com/api#3ds-outscale-api-internetservice).
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Outscale = Pulumi.Outscale;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var internetService01 = Outscale.GetInternetService.Invoke(new()
        ///     {
        ///         Filters = new[]
        ///         {
        ///             new Outscale.Inputs.GetInternetServiceFilterInputArgs
        ///             {
        ///                 Name = "internet_service_ids",
        ///                 Values = new[]
        ///                 {
        ///                     "igw-12345678",
        ///                 },
        ///             },
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetInternetServiceResult> Invoke(GetInternetServiceInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetInternetServiceResult>("outscale:index/getInternetService:getInternetService", args ?? new GetInternetServiceInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Provides information about an Internet service.
        /// 
        /// For more information on this resource, see the [User Guide](https://docs.outscale.com/en/userguide/About-Internet-Services.html).  
        /// For more information on this resource actions, see the [API documentation](https://docs.outscale.com/api#3ds-outscale-api-internetservice).
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Outscale = Pulumi.Outscale;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var internetService01 = Outscale.GetInternetService.Invoke(new()
        ///     {
        ///         Filters = new[]
        ///         {
        ///             new Outscale.Inputs.GetInternetServiceFilterInputArgs
        ///             {
        ///                 Name = "internet_service_ids",
        ///                 Values = new[]
        ///                 {
        ///                     "igw-12345678",
        ///                 },
        ///             },
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetInternetServiceResult> Invoke(GetInternetServiceInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetInternetServiceResult>("outscale:index/getInternetService:getInternetService", args ?? new GetInternetServiceInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetInternetServiceArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private List<Inputs.GetInternetServiceFilterArgs>? _filters;

        /// <summary>
        /// A combination of a filter name and one or more filter values. You can specify this argument for as many filter names as you need. The filter name can be any of the following:
        /// </summary>
        public List<Inputs.GetInternetServiceFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetInternetServiceFilterArgs>());
            set => _filters = value;
        }

        public GetInternetServiceArgs()
        {
        }
        public static new GetInternetServiceArgs Empty => new GetInternetServiceArgs();
    }

    public sealed class GetInternetServiceInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private InputList<Inputs.GetInternetServiceFilterInputArgs>? _filters;

        /// <summary>
        /// A combination of a filter name and one or more filter values. You can specify this argument for as many filter names as you need. The filter name can be any of the following:
        /// </summary>
        public InputList<Inputs.GetInternetServiceFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetInternetServiceFilterInputArgs>());
            set => _filters = value;
        }

        public GetInternetServiceInvokeArgs()
        {
        }
        public static new GetInternetServiceInvokeArgs Empty => new GetInternetServiceInvokeArgs();
    }


    [OutputType]
    public sealed class GetInternetServiceResult
    {
        public readonly ImmutableArray<Outputs.GetInternetServiceFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The ID of the internet service.
        /// </summary>
        public readonly string InternetServiceId;
        /// <summary>
        /// The ID of the Net attached to the internet service.
        /// </summary>
        public readonly string NetId;
        public readonly string RequestId;
        /// <summary>
        /// The state of the attachment of the internet service to the Net (always `available`).
        /// </summary>
        public readonly string State;
        /// <summary>
        /// One or more tags associated with the internet service.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetInternetServiceTagResult> Tags;

        [OutputConstructor]
        private GetInternetServiceResult(
            ImmutableArray<Outputs.GetInternetServiceFilterResult> filters,

            string id,

            string internetServiceId,

            string netId,

            string requestId,

            string state,

            ImmutableArray<Outputs.GetInternetServiceTagResult> tags)
        {
            Filters = filters;
            Id = id;
            InternetServiceId = internetServiceId;
            NetId = netId;
            RequestId = requestId;
            State = state;
            Tags = tags;
        }
    }
}
