// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Outscale
{
    public static class GetImages
    {
        /// <summary>
        /// Provides information about images.
        /// 
        /// For more information on this resource, see the [User Guide](https://docs.outscale.com/en/userguide/About-OMIs.html).  
        /// For more information on this resource actions, see the [API documentation](https://docs.outscale.com/api#3ds-outscale-api-image).
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Outscale = Pulumi.Outscale;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var images01 = Outscale.GetImages.Invoke(new()
        ///     {
        ///         Filters = new[]
        ///         {
        ///             new Outscale.Inputs.GetImagesFilterInputArgs
        ///             {
        ///                 Name = "account_aliases",
        ///                 Values = new[]
        ///                 {
        ///                     "Outscale",
        ///                 },
        ///             },
        ///             new Outscale.Inputs.GetImagesFilterInputArgs
        ///             {
        ///                 Name = "image_names",
        ///                 Values = new[]
        ///                 {
        ///                     "Ubuntu*",
        ///                     "RockyLinux*",
        ///                 },
        ///             },
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetImagesResult> InvokeAsync(GetImagesArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetImagesResult>("outscale:index/getImages:getImages", args ?? new GetImagesArgs(), options.WithDefaults());

        /// <summary>
        /// Provides information about images.
        /// 
        /// For more information on this resource, see the [User Guide](https://docs.outscale.com/en/userguide/About-OMIs.html).  
        /// For more information on this resource actions, see the [API documentation](https://docs.outscale.com/api#3ds-outscale-api-image).
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Outscale = Pulumi.Outscale;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var images01 = Outscale.GetImages.Invoke(new()
        ///     {
        ///         Filters = new[]
        ///         {
        ///             new Outscale.Inputs.GetImagesFilterInputArgs
        ///             {
        ///                 Name = "account_aliases",
        ///                 Values = new[]
        ///                 {
        ///                     "Outscale",
        ///                 },
        ///             },
        ///             new Outscale.Inputs.GetImagesFilterInputArgs
        ///             {
        ///                 Name = "image_names",
        ///                 Values = new[]
        ///                 {
        ///                     "Ubuntu*",
        ///                     "RockyLinux*",
        ///                 },
        ///             },
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetImagesResult> Invoke(GetImagesInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetImagesResult>("outscale:index/getImages:getImages", args ?? new GetImagesInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Provides information about images.
        /// 
        /// For more information on this resource, see the [User Guide](https://docs.outscale.com/en/userguide/About-OMIs.html).  
        /// For more information on this resource actions, see the [API documentation](https://docs.outscale.com/api#3ds-outscale-api-image).
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Outscale = Pulumi.Outscale;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var images01 = Outscale.GetImages.Invoke(new()
        ///     {
        ///         Filters = new[]
        ///         {
        ///             new Outscale.Inputs.GetImagesFilterInputArgs
        ///             {
        ///                 Name = "account_aliases",
        ///                 Values = new[]
        ///                 {
        ///                     "Outscale",
        ///                 },
        ///             },
        ///             new Outscale.Inputs.GetImagesFilterInputArgs
        ///             {
        ///                 Name = "image_names",
        ///                 Values = new[]
        ///                 {
        ///                     "Ubuntu*",
        ///                     "RockyLinux*",
        ///                 },
        ///             },
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetImagesResult> Invoke(GetImagesInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetImagesResult>("outscale:index/getImages:getImages", args ?? new GetImagesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetImagesArgs : global::Pulumi.InvokeArgs
    {
        [Input("accountIds")]
        private List<string>? _accountIds;

        /// <summary>
        /// One or more account IDs that the permission is associated with.
        /// </summary>
        public List<string> AccountIds
        {
            get => _accountIds ?? (_accountIds = new List<string>());
            set => _accountIds = value;
        }

        [Input("filters")]
        private List<Inputs.GetImagesFilterArgs>? _filters;

        /// <summary>
        /// A combination of a filter name and one or more filter values. You can specify this argument for as many filter names as you need. The filter name can be any of the following:
        /// </summary>
        public List<Inputs.GetImagesFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetImagesFilterArgs>());
            set => _filters = value;
        }

        [Input("imageIds")]
        private List<string>? _imageIds;
        public List<string> ImageIds
        {
            get => _imageIds ?? (_imageIds = new List<string>());
            set => _imageIds = value;
        }

        [Input("permissions")]
        private List<string>? _permissions;
        public List<string> Permissions
        {
            get => _permissions ?? (_permissions = new List<string>());
            set => _permissions = value;
        }

        public GetImagesArgs()
        {
        }
        public static new GetImagesArgs Empty => new GetImagesArgs();
    }

    public sealed class GetImagesInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("accountIds")]
        private InputList<string>? _accountIds;

        /// <summary>
        /// One or more account IDs that the permission is associated with.
        /// </summary>
        public InputList<string> AccountIds
        {
            get => _accountIds ?? (_accountIds = new InputList<string>());
            set => _accountIds = value;
        }

        [Input("filters")]
        private InputList<Inputs.GetImagesFilterInputArgs>? _filters;

        /// <summary>
        /// A combination of a filter name and one or more filter values. You can specify this argument for as many filter names as you need. The filter name can be any of the following:
        /// </summary>
        public InputList<Inputs.GetImagesFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetImagesFilterInputArgs>());
            set => _filters = value;
        }

        [Input("imageIds")]
        private InputList<string>? _imageIds;
        public InputList<string> ImageIds
        {
            get => _imageIds ?? (_imageIds = new InputList<string>());
            set => _imageIds = value;
        }

        [Input("permissions")]
        private InputList<string>? _permissions;
        public InputList<string> Permissions
        {
            get => _permissions ?? (_permissions = new InputList<string>());
            set => _permissions = value;
        }

        public GetImagesInvokeArgs()
        {
        }
        public static new GetImagesInvokeArgs Empty => new GetImagesInvokeArgs();
    }


    [OutputType]
    public sealed class GetImagesResult
    {
        /// <summary>
        /// One or more account IDs that the permission is associated with.
        /// </summary>
        public readonly ImmutableArray<string> AccountIds;
        public readonly ImmutableArray<Outputs.GetImagesFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<string> ImageIds;
        /// <summary>
        /// Information about one or more OMIs.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetImagesImageResult> Images;
        public readonly ImmutableArray<string> Permissions;
        public readonly string RequestId;

        [OutputConstructor]
        private GetImagesResult(
            ImmutableArray<string> accountIds,

            ImmutableArray<Outputs.GetImagesFilterResult> filters,

            string id,

            ImmutableArray<string> imageIds,

            ImmutableArray<Outputs.GetImagesImageResult> images,

            ImmutableArray<string> permissions,

            string requestId)
        {
            AccountIds = accountIds;
            Filters = filters;
            Id = id;
            ImageIds = imageIds;
            Images = images;
            Permissions = permissions;
            RequestId = requestId;
        }
    }
}
