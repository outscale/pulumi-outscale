// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Outscale
{
    /// <summary>
    /// Manages a Net access point.
    /// 
    /// For more information on this resource, see the [User Guide](https://docs.outscale.com/en/userguide/About-VPC-Endpoints.html).\
    /// For more information on this resource actions, see the [API documentation](https://docs.outscale.com/api#3ds-outscale-api-netaccesspoint).
    /// 
    /// ## Example Usage
    /// ### Required resources
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Outscale = Pulumi.Outscale;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var net01 = new Outscale.Net("net01", new()
    ///     {
    ///         IpRange = "10.0.0.0/16",
    ///     });
    /// 
    ///     var routeTable01 = new Outscale.RouteTable("routeTable01", new()
    ///     {
    ///         NetId = net01.NetId,
    ///     });
    /// 
    /// });
    /// ```
    /// ### Create a Net access point
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Outscale = Pulumi.Outscale;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var netAccessPoint01 = new Outscale.NetAccessPoint("netAccessPoint01", new()
    ///     {
    ///         NetId = outscale_net.Net01.Net_id,
    ///         RouteTableIds = new[]
    ///         {
    ///             outscale_route_table.Route_table01.Route_table_id,
    ///         },
    ///         ServiceName = "com.outscale.eu-west-2.api",
    ///         Tags = new[]
    ///         {
    ///             new Outscale.Inputs.NetAccessPointTagArgs
    ///             {
    ///                 Key = "name",
    ///                 Value = "terraform-net-access-point",
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// A Net access point can be imported using its ID. For exampleconsole
    /// 
    /// ```sh
    ///  $ pulumi import outscale:index/netAccessPoint:NetAccessPoint ImportedNetAccessPoint vpce-87654321
    /// ```
    /// </summary>
    [OutscaleResourceType("outscale:index/netAccessPoint:NetAccessPoint")]
    public partial class NetAccessPoint : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The ID of the Net access point.
        /// </summary>
        [Output("netAccessPointId")]
        public Output<string> NetAccessPointId { get; private set; } = null!;

        /// <summary>
        /// The ID of the Net.
        /// </summary>
        [Output("netId")]
        public Output<string> NetId { get; private set; } = null!;

        [Output("requestId")]
        public Output<string> RequestId { get; private set; } = null!;

        /// <summary>
        /// One or more IDs of route tables to use for the connection.
        /// </summary>
        [Output("routeTableIds")]
        public Output<ImmutableArray<string>> RouteTableIds { get; private set; } = null!;

        /// <summary>
        /// The name of the service (in the format `com.outscale.region.service`).
        /// </summary>
        [Output("serviceName")]
        public Output<string> ServiceName { get; private set; } = null!;

        /// <summary>
        /// The state of the Net access point (`pending` \| `available` \| `deleting` \| `deleted`).
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// A tag to add to this resource. You can specify this argument several times.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<Outputs.NetAccessPointTag>> Tags { get; private set; } = null!;


        /// <summary>
        /// Create a NetAccessPoint resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public NetAccessPoint(string name, NetAccessPointArgs args, CustomResourceOptions? options = null)
            : base("outscale:index/netAccessPoint:NetAccessPoint", name, args ?? new NetAccessPointArgs(), MakeResourceOptions(options, ""))
        {
        }

        private NetAccessPoint(string name, Input<string> id, NetAccessPointState? state = null, CustomResourceOptions? options = null)
            : base("outscale:index/netAccessPoint:NetAccessPoint", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing NetAccessPoint resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static NetAccessPoint Get(string name, Input<string> id, NetAccessPointState? state = null, CustomResourceOptions? options = null)
        {
            return new NetAccessPoint(name, id, state, options);
        }
    }

    public sealed class NetAccessPointArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the Net.
        /// </summary>
        [Input("netId", required: true)]
        public Input<string> NetId { get; set; } = null!;

        [Input("routeTableIds")]
        private InputList<string>? _routeTableIds;

        /// <summary>
        /// One or more IDs of route tables to use for the connection.
        /// </summary>
        public InputList<string> RouteTableIds
        {
            get => _routeTableIds ?? (_routeTableIds = new InputList<string>());
            set => _routeTableIds = value;
        }

        /// <summary>
        /// The name of the service (in the format `com.outscale.region.service`).
        /// </summary>
        [Input("serviceName", required: true)]
        public Input<string> ServiceName { get; set; } = null!;

        [Input("tags")]
        private InputList<Inputs.NetAccessPointTagArgs>? _tags;

        /// <summary>
        /// A tag to add to this resource. You can specify this argument several times.
        /// </summary>
        public InputList<Inputs.NetAccessPointTagArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.NetAccessPointTagArgs>());
            set => _tags = value;
        }

        public NetAccessPointArgs()
        {
        }
        public static new NetAccessPointArgs Empty => new NetAccessPointArgs();
    }

    public sealed class NetAccessPointState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the Net access point.
        /// </summary>
        [Input("netAccessPointId")]
        public Input<string>? NetAccessPointId { get; set; }

        /// <summary>
        /// The ID of the Net.
        /// </summary>
        [Input("netId")]
        public Input<string>? NetId { get; set; }

        [Input("requestId")]
        public Input<string>? RequestId { get; set; }

        [Input("routeTableIds")]
        private InputList<string>? _routeTableIds;

        /// <summary>
        /// One or more IDs of route tables to use for the connection.
        /// </summary>
        public InputList<string> RouteTableIds
        {
            get => _routeTableIds ?? (_routeTableIds = new InputList<string>());
            set => _routeTableIds = value;
        }

        /// <summary>
        /// The name of the service (in the format `com.outscale.region.service`).
        /// </summary>
        [Input("serviceName")]
        public Input<string>? ServiceName { get; set; }

        /// <summary>
        /// The state of the Net access point (`pending` \| `available` \| `deleting` \| `deleted`).
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        [Input("tags")]
        private InputList<Inputs.NetAccessPointTagGetArgs>? _tags;

        /// <summary>
        /// A tag to add to this resource. You can specify this argument several times.
        /// </summary>
        public InputList<Inputs.NetAccessPointTagGetArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.NetAccessPointTagGetArgs>());
            set => _tags = value;
        }

        public NetAccessPointState()
        {
        }
        public static new NetAccessPointState Empty => new NetAccessPointState();
    }
}
