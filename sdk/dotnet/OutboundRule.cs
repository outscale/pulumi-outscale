// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Outscale
{
    [OutscaleResourceType("outscale:index/outboundRule:OutboundRule")]
    public partial class OutboundRule : global::Pulumi.CustomResource
    {
        [Output("flow")]
        public Output<string> Flow { get; private set; } = null!;

        [Output("fromPortRange")]
        public Output<int?> FromPortRange { get; private set; } = null!;

        [Output("ipProtocol")]
        public Output<string?> IpProtocol { get; private set; } = null!;

        [Output("ipRange")]
        public Output<string?> IpRange { get; private set; } = null!;

        [Output("netId")]
        public Output<string> NetId { get; private set; } = null!;

        [Output("requestId")]
        public Output<string> RequestId { get; private set; } = null!;

        [Output("rules")]
        public Output<ImmutableArray<Outputs.OutboundRuleRule>> Rules { get; private set; } = null!;

        [Output("securityGroupAccountIdToLink")]
        public Output<string?> SecurityGroupAccountIdToLink { get; private set; } = null!;

        [Output("securityGroupId")]
        public Output<string> SecurityGroupId { get; private set; } = null!;

        [Output("securityGroupName")]
        public Output<string> SecurityGroupName { get; private set; } = null!;

        [Output("securityGroupNameToLink")]
        public Output<string?> SecurityGroupNameToLink { get; private set; } = null!;

        [Output("toPortRange")]
        public Output<int?> ToPortRange { get; private set; } = null!;


        /// <summary>
        /// Create a OutboundRule resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public OutboundRule(string name, OutboundRuleArgs args, CustomResourceOptions? options = null)
            : base("outscale:index/outboundRule:OutboundRule", name, args ?? new OutboundRuleArgs(), MakeResourceOptions(options, ""))
        {
        }

        private OutboundRule(string name, Input<string> id, OutboundRuleState? state = null, CustomResourceOptions? options = null)
            : base("outscale:index/outboundRule:OutboundRule", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing OutboundRule resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static OutboundRule Get(string name, Input<string> id, OutboundRuleState? state = null, CustomResourceOptions? options = null)
        {
            return new OutboundRule(name, id, state, options);
        }
    }

    public sealed class OutboundRuleArgs : global::Pulumi.ResourceArgs
    {
        [Input("flow", required: true)]
        public Input<string> Flow { get; set; } = null!;

        [Input("fromPortRange")]
        public Input<int>? FromPortRange { get; set; }

        [Input("ipProtocol")]
        public Input<string>? IpProtocol { get; set; }

        [Input("ipRange")]
        public Input<string>? IpRange { get; set; }

        [Input("rules")]
        private InputList<Inputs.OutboundRuleRuleArgs>? _rules;
        public InputList<Inputs.OutboundRuleRuleArgs> Rules
        {
            get => _rules ?? (_rules = new InputList<Inputs.OutboundRuleRuleArgs>());
            set => _rules = value;
        }

        [Input("securityGroupAccountIdToLink")]
        public Input<string>? SecurityGroupAccountIdToLink { get; set; }

        [Input("securityGroupId", required: true)]
        public Input<string> SecurityGroupId { get; set; } = null!;

        [Input("securityGroupNameToLink")]
        public Input<string>? SecurityGroupNameToLink { get; set; }

        [Input("toPortRange")]
        public Input<int>? ToPortRange { get; set; }

        public OutboundRuleArgs()
        {
        }
        public static new OutboundRuleArgs Empty => new OutboundRuleArgs();
    }

    public sealed class OutboundRuleState : global::Pulumi.ResourceArgs
    {
        [Input("flow")]
        public Input<string>? Flow { get; set; }

        [Input("fromPortRange")]
        public Input<int>? FromPortRange { get; set; }

        [Input("ipProtocol")]
        public Input<string>? IpProtocol { get; set; }

        [Input("ipRange")]
        public Input<string>? IpRange { get; set; }

        [Input("netId")]
        public Input<string>? NetId { get; set; }

        [Input("requestId")]
        public Input<string>? RequestId { get; set; }

        [Input("rules")]
        private InputList<Inputs.OutboundRuleRuleGetArgs>? _rules;
        public InputList<Inputs.OutboundRuleRuleGetArgs> Rules
        {
            get => _rules ?? (_rules = new InputList<Inputs.OutboundRuleRuleGetArgs>());
            set => _rules = value;
        }

        [Input("securityGroupAccountIdToLink")]
        public Input<string>? SecurityGroupAccountIdToLink { get; set; }

        [Input("securityGroupId")]
        public Input<string>? SecurityGroupId { get; set; }

        [Input("securityGroupName")]
        public Input<string>? SecurityGroupName { get; set; }

        [Input("securityGroupNameToLink")]
        public Input<string>? SecurityGroupNameToLink { get; set; }

        [Input("toPortRange")]
        public Input<int>? ToPortRange { get; set; }

        public OutboundRuleState()
        {
        }
        public static new OutboundRuleState Empty => new OutboundRuleState();
    }
}
