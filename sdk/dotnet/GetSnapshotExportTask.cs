// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Outscale
{
    public static class GetSnapshotExportTask
    {
        /// <summary>
        /// Provides information about a snapshot export task.
        /// 
        /// For more information on this resource, see the [User Guide](https://docs.outscale.com/en/userguide/About-Snapshots.html).  
        /// For more information on this resource actions, see the [API documentation](https://docs.outscale.com/api#3ds-outscale-api-snapshot).
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Outscale = Pulumi.Outscale;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var snapshotExportTask01 = Outscale.GetSnapshotExportTask.Invoke(new()
        ///     {
        ///         Filters = new[]
        ///         {
        ///             new Outscale.Inputs.GetSnapshotExportTaskFilterInputArgs
        ///             {
        ///                 Name = "task_ids",
        ///                 Values = new[]
        ///                 {
        ///                     "snap-export-12345678",
        ///                 },
        ///             },
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetSnapshotExportTaskResult> InvokeAsync(GetSnapshotExportTaskArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSnapshotExportTaskResult>("outscale:index/getSnapshotExportTask:getSnapshotExportTask", args ?? new GetSnapshotExportTaskArgs(), options.WithDefaults());

        /// <summary>
        /// Provides information about a snapshot export task.
        /// 
        /// For more information on this resource, see the [User Guide](https://docs.outscale.com/en/userguide/About-Snapshots.html).  
        /// For more information on this resource actions, see the [API documentation](https://docs.outscale.com/api#3ds-outscale-api-snapshot).
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Outscale = Pulumi.Outscale;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var snapshotExportTask01 = Outscale.GetSnapshotExportTask.Invoke(new()
        ///     {
        ///         Filters = new[]
        ///         {
        ///             new Outscale.Inputs.GetSnapshotExportTaskFilterInputArgs
        ///             {
        ///                 Name = "task_ids",
        ///                 Values = new[]
        ///                 {
        ///                     "snap-export-12345678",
        ///                 },
        ///             },
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetSnapshotExportTaskResult> Invoke(GetSnapshotExportTaskInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSnapshotExportTaskResult>("outscale:index/getSnapshotExportTask:getSnapshotExportTask", args ?? new GetSnapshotExportTaskInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Provides information about a snapshot export task.
        /// 
        /// For more information on this resource, see the [User Guide](https://docs.outscale.com/en/userguide/About-Snapshots.html).  
        /// For more information on this resource actions, see the [API documentation](https://docs.outscale.com/api#3ds-outscale-api-snapshot).
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Outscale = Pulumi.Outscale;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var snapshotExportTask01 = Outscale.GetSnapshotExportTask.Invoke(new()
        ///     {
        ///         Filters = new[]
        ///         {
        ///             new Outscale.Inputs.GetSnapshotExportTaskFilterInputArgs
        ///             {
        ///                 Name = "task_ids",
        ///                 Values = new[]
        ///                 {
        ///                     "snap-export-12345678",
        ///                 },
        ///             },
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetSnapshotExportTaskResult> Invoke(GetSnapshotExportTaskInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetSnapshotExportTaskResult>("outscale:index/getSnapshotExportTask:getSnapshotExportTask", args ?? new GetSnapshotExportTaskInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSnapshotExportTaskArgs : global::Pulumi.InvokeArgs
    {
        [Input("dryRun")]
        public bool? DryRun { get; set; }

        [Input("filters")]
        private List<Inputs.GetSnapshotExportTaskFilterArgs>? _filters;

        /// <summary>
        /// A combination of a filter name and one or more filter values. You can specify this argument for as many filter names as you need. The filter name can be any of the following:
        /// </summary>
        public List<Inputs.GetSnapshotExportTaskFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetSnapshotExportTaskFilterArgs>());
            set => _filters = value;
        }

        public GetSnapshotExportTaskArgs()
        {
        }
        public static new GetSnapshotExportTaskArgs Empty => new GetSnapshotExportTaskArgs();
    }

    public sealed class GetSnapshotExportTaskInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("dryRun")]
        public Input<bool>? DryRun { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetSnapshotExportTaskFilterInputArgs>? _filters;

        /// <summary>
        /// A combination of a filter name and one or more filter values. You can specify this argument for as many filter names as you need. The filter name can be any of the following:
        /// </summary>
        public InputList<Inputs.GetSnapshotExportTaskFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetSnapshotExportTaskFilterInputArgs>());
            set => _filters = value;
        }

        public GetSnapshotExportTaskInvokeArgs()
        {
        }
        public static new GetSnapshotExportTaskInvokeArgs Empty => new GetSnapshotExportTaskInvokeArgs();
    }


    [OutputType]
    public sealed class GetSnapshotExportTaskResult
    {
        /// <summary>
        /// If the snapshot export task fails, an error message appears.
        /// </summary>
        public readonly string Comment;
        public readonly bool DryRun;
        public readonly ImmutableArray<Outputs.GetSnapshotExportTaskFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Information about the snapshot export task.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSnapshotExportTaskOsuExportResult> OsuExports;
        /// <summary>
        /// The progress of the snapshot export task, as a percentage.
        /// </summary>
        public readonly int Progress;
        public readonly string RequestId;
        /// <summary>
        /// The ID of the snapshot to be exported.
        /// </summary>
        public readonly string SnapshotId;
        /// <summary>
        /// The state of the snapshot export task (`pending` \| `active` \| `completed` \| `failed`).
        /// </summary>
        public readonly string State;
        /// <summary>
        /// One or more tags associated with the snapshot export task.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSnapshotExportTaskTagResult> Tags;
        /// <summary>
        /// The ID of the snapshot export task.
        /// </summary>
        public readonly string TaskId;

        [OutputConstructor]
        private GetSnapshotExportTaskResult(
            string comment,

            bool dryRun,

            ImmutableArray<Outputs.GetSnapshotExportTaskFilterResult> filters,

            string id,

            ImmutableArray<Outputs.GetSnapshotExportTaskOsuExportResult> osuExports,

            int progress,

            string requestId,

            string snapshotId,

            string state,

            ImmutableArray<Outputs.GetSnapshotExportTaskTagResult> tags,

            string taskId)
        {
            Comment = comment;
            DryRun = dryRun;
            Filters = filters;
            Id = id;
            OsuExports = osuExports;
            Progress = progress;
            RequestId = requestId;
            SnapshotId = snapshotId;
            State = state;
            Tags = tags;
            TaskId = taskId;
        }
    }
}
