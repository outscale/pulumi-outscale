// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Outscale
{
    public static class GetSecurityGroup
    {
        /// <summary>
        /// Provides information about a security group.
        /// 
        /// For more information on this resource, see the [User Guide](https://docs.outscale.com/en/userguide/About-Security-Groups.html).  
        /// For more information on this resource actions, see the [API documentation](https://docs.outscale.com/api#3ds-outscale-api-securitygroup).
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Outscale = Pulumi.Outscale;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var securityGroup01 = Outscale.GetSecurityGroup.Invoke(new()
        ///     {
        ///         Filters = new[]
        ///         {
        ///             new Outscale.Inputs.GetSecurityGroupFilterInputArgs
        ///             {
        ///                 Name = "security_group_ids",
        ///                 Values = new[]
        ///                 {
        ///                     "sg-12345678",
        ///                 },
        ///             },
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetSecurityGroupResult> InvokeAsync(GetSecurityGroupArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSecurityGroupResult>("outscale:index/getSecurityGroup:getSecurityGroup", args ?? new GetSecurityGroupArgs(), options.WithDefaults());

        /// <summary>
        /// Provides information about a security group.
        /// 
        /// For more information on this resource, see the [User Guide](https://docs.outscale.com/en/userguide/About-Security-Groups.html).  
        /// For more information on this resource actions, see the [API documentation](https://docs.outscale.com/api#3ds-outscale-api-securitygroup).
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Outscale = Pulumi.Outscale;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var securityGroup01 = Outscale.GetSecurityGroup.Invoke(new()
        ///     {
        ///         Filters = new[]
        ///         {
        ///             new Outscale.Inputs.GetSecurityGroupFilterInputArgs
        ///             {
        ///                 Name = "security_group_ids",
        ///                 Values = new[]
        ///                 {
        ///                     "sg-12345678",
        ///                 },
        ///             },
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetSecurityGroupResult> Invoke(GetSecurityGroupInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSecurityGroupResult>("outscale:index/getSecurityGroup:getSecurityGroup", args ?? new GetSecurityGroupInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSecurityGroupArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private List<Inputs.GetSecurityGroupFilterArgs>? _filters;

        /// <summary>
        /// A combination of a filter name and one or more filter values. You can specify this argument for as many filter names as you need. The filter name can be any of the following:
        /// </summary>
        public List<Inputs.GetSecurityGroupFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetSecurityGroupFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The ID of the security group.
        /// </summary>
        [Input("securityGroupId")]
        public string? SecurityGroupId { get; set; }

        /// <summary>
        /// The name of the security group.
        /// </summary>
        [Input("securityGroupName")]
        public string? SecurityGroupName { get; set; }

        public GetSecurityGroupArgs()
        {
        }
        public static new GetSecurityGroupArgs Empty => new GetSecurityGroupArgs();
    }

    public sealed class GetSecurityGroupInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private InputList<Inputs.GetSecurityGroupFilterInputArgs>? _filters;

        /// <summary>
        /// A combination of a filter name and one or more filter values. You can specify this argument for as many filter names as you need. The filter name can be any of the following:
        /// </summary>
        public InputList<Inputs.GetSecurityGroupFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetSecurityGroupFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The ID of the security group.
        /// </summary>
        [Input("securityGroupId")]
        public Input<string>? SecurityGroupId { get; set; }

        /// <summary>
        /// The name of the security group.
        /// </summary>
        [Input("securityGroupName")]
        public Input<string>? SecurityGroupName { get; set; }

        public GetSecurityGroupInvokeArgs()
        {
        }
        public static new GetSecurityGroupInvokeArgs Empty => new GetSecurityGroupInvokeArgs();
    }


    [OutputType]
    public sealed class GetSecurityGroupResult
    {
        /// <summary>
        /// The account ID that owns the source or destination security group.
        /// </summary>
        public readonly string AccountId;
        /// <summary>
        /// The description of the security group.
        /// </summary>
        public readonly string Description;
        public readonly ImmutableArray<Outputs.GetSecurityGroupFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The inbound rules associated with the security group.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSecurityGroupInboundRuleResult> InboundRules;
        /// <summary>
        /// The ID of the Net for the security group.
        /// </summary>
        public readonly string NetId;
        /// <summary>
        /// The outbound rules associated with the security group.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSecurityGroupOutboundRuleResult> OutboundRules;
        public readonly string RequestId;
        /// <summary>
        /// The ID of the security group.
        /// </summary>
        public readonly string SecurityGroupId;
        /// <summary>
        /// The name of the security group.
        /// </summary>
        public readonly string SecurityGroupName;
        /// <summary>
        /// One or more tags associated with the security group.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSecurityGroupTagResult> Tags;

        [OutputConstructor]
        private GetSecurityGroupResult(
            string accountId,

            string description,

            ImmutableArray<Outputs.GetSecurityGroupFilterResult> filters,

            string id,

            ImmutableArray<Outputs.GetSecurityGroupInboundRuleResult> inboundRules,

            string netId,

            ImmutableArray<Outputs.GetSecurityGroupOutboundRuleResult> outboundRules,

            string requestId,

            string securityGroupId,

            string securityGroupName,

            ImmutableArray<Outputs.GetSecurityGroupTagResult> tags)
        {
            AccountId = accountId;
            Description = description;
            Filters = filters;
            Id = id;
            InboundRules = inboundRules;
            NetId = netId;
            OutboundRules = outboundRules;
            RequestId = requestId;
            SecurityGroupId = securityGroupId;
            SecurityGroupName = securityGroupName;
            Tags = tags;
        }
    }
}
