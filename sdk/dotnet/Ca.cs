// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Outscale
{
    /// <summary>
    /// Manages a Certificate Authority (CA).
    /// 
    /// For more information on this resource, see the [User Guide](https://docs.outscale.com/en/userguide/About-API-Access-Rules.html).\
    /// For more information on this resource actions, see the [API documentation](https://docs.outscale.com/api#3ds-outscale-api-ca).
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.IO;
    /// using System.Linq;
    /// using Pulumi;
    /// using Outscale = Pulumi.Outscale;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var ca01 = new Outscale.Ca("ca01", new()
    ///     {
    ///         CaPem = File.ReadAllText("&lt;PATH&gt;"),
    ///         Description = "Terraform certificate authority",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// A CA can be imported using its ID. For exampleconsole
    /// 
    /// ```sh
    ///  $ pulumi import outscale:index/ca:Ca ImportedCa ca-12345678
    /// ```
    /// </summary>
    [OutscaleResourceType("outscale:index/ca:Ca")]
    public partial class Ca : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The fingerprint of the CA.
        /// </summary>
        [Output("caFingerprint")]
        public Output<string> CaFingerprint { get; private set; } = null!;

        /// <summary>
        /// The ID of the CA.
        /// </summary>
        [Output("caId")]
        public Output<string> CaId { get; private set; } = null!;

        /// <summary>
        /// The CA in PEM format.
        /// </summary>
        [Output("caPem")]
        public Output<string?> CaPem { get; private set; } = null!;

        /// <summary>
        /// The description of the CA.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        [Output("requestId")]
        public Output<string> RequestId { get; private set; } = null!;


        /// <summary>
        /// Create a Ca resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Ca(string name, CaArgs? args = null, CustomResourceOptions? options = null)
            : base("outscale:index/ca:Ca", name, args ?? new CaArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Ca(string name, Input<string> id, CaState? state = null, CustomResourceOptions? options = null)
            : base("outscale:index/ca:Ca", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Ca resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Ca Get(string name, Input<string> id, CaState? state = null, CustomResourceOptions? options = null)
        {
            return new Ca(name, id, state, options);
        }
    }

    public sealed class CaArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The CA in PEM format.
        /// </summary>
        [Input("caPem")]
        public Input<string>? CaPem { get; set; }

        /// <summary>
        /// The description of the CA.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        public CaArgs()
        {
        }
        public static new CaArgs Empty => new CaArgs();
    }

    public sealed class CaState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The fingerprint of the CA.
        /// </summary>
        [Input("caFingerprint")]
        public Input<string>? CaFingerprint { get; set; }

        /// <summary>
        /// The ID of the CA.
        /// </summary>
        [Input("caId")]
        public Input<string>? CaId { get; set; }

        /// <summary>
        /// The CA in PEM format.
        /// </summary>
        [Input("caPem")]
        public Input<string>? CaPem { get; set; }

        /// <summary>
        /// The description of the CA.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("requestId")]
        public Input<string>? RequestId { get; set; }

        public CaState()
        {
        }
        public static new CaState Empty => new CaState();
    }
}
