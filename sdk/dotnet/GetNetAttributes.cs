// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Outscale
{
    public static class GetNetAttributes
    {
        /// <summary>
        /// Provides information about the attributes of a Net.
        /// 
        /// For more information on this resource, see the [User Guide](https://docs.outscale.com/en/userguide/About-DHCP-Options.html).  
        /// For more information on this resource actions, see the [API documentation](https://docs.outscale.com/api#updatenet).
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Outscale = Pulumi.Outscale;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var netAttributes01 = Outscale.GetNetAttributes.Invoke(new()
        ///     {
        ///         NetId = "vpc-12345678",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetNetAttributesResult> InvokeAsync(GetNetAttributesArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetNetAttributesResult>("outscale:index/getNetAttributes:getNetAttributes", args ?? new GetNetAttributesArgs(), options.WithDefaults());

        /// <summary>
        /// Provides information about the attributes of a Net.
        /// 
        /// For more information on this resource, see the [User Guide](https://docs.outscale.com/en/userguide/About-DHCP-Options.html).  
        /// For more information on this resource actions, see the [API documentation](https://docs.outscale.com/api#updatenet).
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Outscale = Pulumi.Outscale;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var netAttributes01 = Outscale.GetNetAttributes.Invoke(new()
        ///     {
        ///         NetId = "vpc-12345678",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetNetAttributesResult> Invoke(GetNetAttributesInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetNetAttributesResult>("outscale:index/getNetAttributes:getNetAttributes", args ?? new GetNetAttributesInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Provides information about the attributes of a Net.
        /// 
        /// For more information on this resource, see the [User Guide](https://docs.outscale.com/en/userguide/About-DHCP-Options.html).  
        /// For more information on this resource actions, see the [API documentation](https://docs.outscale.com/api#updatenet).
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Outscale = Pulumi.Outscale;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var netAttributes01 = Outscale.GetNetAttributes.Invoke(new()
        ///     {
        ///         NetId = "vpc-12345678",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetNetAttributesResult> Invoke(GetNetAttributesInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetNetAttributesResult>("outscale:index/getNetAttributes:getNetAttributes", args ?? new GetNetAttributesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetNetAttributesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the Net.
        /// </summary>
        [Input("netId", required: true)]
        public string NetId { get; set; } = null!;

        public GetNetAttributesArgs()
        {
        }
        public static new GetNetAttributesArgs Empty => new GetNetAttributesArgs();
    }

    public sealed class GetNetAttributesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the Net.
        /// </summary>
        [Input("netId", required: true)]
        public Input<string> NetId { get; set; } = null!;

        public GetNetAttributesInvokeArgs()
        {
        }
        public static new GetNetAttributesInvokeArgs Empty => new GetNetAttributesInvokeArgs();
    }


    [OutputType]
    public sealed class GetNetAttributesResult
    {
        /// <summary>
        /// The ID of the DHCP options set (or `default` if you want to associate the default one).
        /// </summary>
        public readonly string DhcpOptionsSetId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The IP range for the Net, in CIDR notation (for example, `10.0.0.0/16`).
        /// </summary>
        public readonly string IpRange;
        /// <summary>
        /// The ID of the Net.
        /// </summary>
        public readonly string NetId;
        public readonly string RequestId;
        /// <summary>
        /// The state of the Net (`pending` \| `available` \| `deleting`).
        /// </summary>
        public readonly string State;
        /// <summary>
        /// One or more tags associated with the Net.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetNetAttributesTagResult> Tags;
        /// <summary>
        /// The VM tenancy in a Net.
        /// </summary>
        public readonly string Tenancy;

        [OutputConstructor]
        private GetNetAttributesResult(
            string dhcpOptionsSetId,

            string id,

            string ipRange,

            string netId,

            string requestId,

            string state,

            ImmutableArray<Outputs.GetNetAttributesTagResult> tags,

            string tenancy)
        {
            DhcpOptionsSetId = dhcpOptionsSetId;
            Id = id;
            IpRange = ipRange;
            NetId = netId;
            RequestId = requestId;
            State = state;
            Tags = tags;
            Tenancy = tenancy;
        }
    }
}
