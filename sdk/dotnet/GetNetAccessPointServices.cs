// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Outscale
{
    public static class GetNetAccessPointServices
    {
        /// <summary>
        /// Provides information about Net access point services.
        /// 
        /// For more information on this resource, see the [User Guide](https://docs.outscale.com/en/userguide/About-Net-Access-Points.html).  
        /// For more information on this resource actions, see the [API documentation](https://docs.outscale.com/api#3ds-outscale-api-netaccesspoint).
        /// 
        /// ## Example Usage
        /// 
        /// ### List all services available to create Net access points
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Outscale = Pulumi.Outscale;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var all_services = Outscale.GetNetAccessPointServices.Invoke();
        /// 
        /// });
        /// ```
        /// 
        /// ### List one or more services according to their service IDs
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Outscale = Pulumi.Outscale;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var services01 = Outscale.GetNetAccessPointServices.Invoke(new()
        ///     {
        ///         Filters = new[]
        ///         {
        ///             new Outscale.Inputs.GetNetAccessPointServicesFilterInputArgs
        ///             {
        ///                 Name = "service_ids",
        ///                 Values = new[]
        ///                 {
        ///                     "pl-12345678",
        ///                     "pl-12345679",
        ///                 },
        ///             },
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// ### List one or more services according to their service names
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Outscale = Pulumi.Outscale;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var services02 = Outscale.GetNetAccessPointServices.Invoke(new()
        ///     {
        ///         Filters = new[]
        ///         {
        ///             new Outscale.Inputs.GetNetAccessPointServicesFilterInputArgs
        ///             {
        ///                 Name = "service_names",
        ///                 Values = new[]
        ///                 {
        ///                     "com.outscale.eu-west-2.api",
        ///                 },
        ///             },
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetNetAccessPointServicesResult> InvokeAsync(GetNetAccessPointServicesArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetNetAccessPointServicesResult>("outscale:index/getNetAccessPointServices:getNetAccessPointServices", args ?? new GetNetAccessPointServicesArgs(), options.WithDefaults());

        /// <summary>
        /// Provides information about Net access point services.
        /// 
        /// For more information on this resource, see the [User Guide](https://docs.outscale.com/en/userguide/About-Net-Access-Points.html).  
        /// For more information on this resource actions, see the [API documentation](https://docs.outscale.com/api#3ds-outscale-api-netaccesspoint).
        /// 
        /// ## Example Usage
        /// 
        /// ### List all services available to create Net access points
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Outscale = Pulumi.Outscale;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var all_services = Outscale.GetNetAccessPointServices.Invoke();
        /// 
        /// });
        /// ```
        /// 
        /// ### List one or more services according to their service IDs
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Outscale = Pulumi.Outscale;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var services01 = Outscale.GetNetAccessPointServices.Invoke(new()
        ///     {
        ///         Filters = new[]
        ///         {
        ///             new Outscale.Inputs.GetNetAccessPointServicesFilterInputArgs
        ///             {
        ///                 Name = "service_ids",
        ///                 Values = new[]
        ///                 {
        ///                     "pl-12345678",
        ///                     "pl-12345679",
        ///                 },
        ///             },
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// ### List one or more services according to their service names
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Outscale = Pulumi.Outscale;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var services02 = Outscale.GetNetAccessPointServices.Invoke(new()
        ///     {
        ///         Filters = new[]
        ///         {
        ///             new Outscale.Inputs.GetNetAccessPointServicesFilterInputArgs
        ///             {
        ///                 Name = "service_names",
        ///                 Values = new[]
        ///                 {
        ///                     "com.outscale.eu-west-2.api",
        ///                 },
        ///             },
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetNetAccessPointServicesResult> Invoke(GetNetAccessPointServicesInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetNetAccessPointServicesResult>("outscale:index/getNetAccessPointServices:getNetAccessPointServices", args ?? new GetNetAccessPointServicesInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Provides information about Net access point services.
        /// 
        /// For more information on this resource, see the [User Guide](https://docs.outscale.com/en/userguide/About-Net-Access-Points.html).  
        /// For more information on this resource actions, see the [API documentation](https://docs.outscale.com/api#3ds-outscale-api-netaccesspoint).
        /// 
        /// ## Example Usage
        /// 
        /// ### List all services available to create Net access points
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Outscale = Pulumi.Outscale;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var all_services = Outscale.GetNetAccessPointServices.Invoke();
        /// 
        /// });
        /// ```
        /// 
        /// ### List one or more services according to their service IDs
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Outscale = Pulumi.Outscale;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var services01 = Outscale.GetNetAccessPointServices.Invoke(new()
        ///     {
        ///         Filters = new[]
        ///         {
        ///             new Outscale.Inputs.GetNetAccessPointServicesFilterInputArgs
        ///             {
        ///                 Name = "service_ids",
        ///                 Values = new[]
        ///                 {
        ///                     "pl-12345678",
        ///                     "pl-12345679",
        ///                 },
        ///             },
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// ### List one or more services according to their service names
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Outscale = Pulumi.Outscale;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var services02 = Outscale.GetNetAccessPointServices.Invoke(new()
        ///     {
        ///         Filters = new[]
        ///         {
        ///             new Outscale.Inputs.GetNetAccessPointServicesFilterInputArgs
        ///             {
        ///                 Name = "service_names",
        ///                 Values = new[]
        ///                 {
        ///                     "com.outscale.eu-west-2.api",
        ///                 },
        ///             },
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetNetAccessPointServicesResult> Invoke(GetNetAccessPointServicesInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetNetAccessPointServicesResult>("outscale:index/getNetAccessPointServices:getNetAccessPointServices", args ?? new GetNetAccessPointServicesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetNetAccessPointServicesArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private List<Inputs.GetNetAccessPointServicesFilterArgs>? _filters;

        /// <summary>
        /// A combination of a filter name and one or more filter values. You can specify this argument for as many filter names as you need. The filter name can be any of the following:
        /// </summary>
        public List<Inputs.GetNetAccessPointServicesFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetNetAccessPointServicesFilterArgs>());
            set => _filters = value;
        }

        public GetNetAccessPointServicesArgs()
        {
        }
        public static new GetNetAccessPointServicesArgs Empty => new GetNetAccessPointServicesArgs();
    }

    public sealed class GetNetAccessPointServicesInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private InputList<Inputs.GetNetAccessPointServicesFilterInputArgs>? _filters;

        /// <summary>
        /// A combination of a filter name and one or more filter values. You can specify this argument for as many filter names as you need. The filter name can be any of the following:
        /// </summary>
        public InputList<Inputs.GetNetAccessPointServicesFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetNetAccessPointServicesFilterInputArgs>());
            set => _filters = value;
        }

        public GetNetAccessPointServicesInvokeArgs()
        {
        }
        public static new GetNetAccessPointServicesInvokeArgs Empty => new GetNetAccessPointServicesInvokeArgs();
    }


    [OutputType]
    public sealed class GetNetAccessPointServicesResult
    {
        public readonly ImmutableArray<Outputs.GetNetAccessPointServicesFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string RequestId;
        /// <summary>
        /// The names of the services you can use for Net access points.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetNetAccessPointServicesServiceResult> Services;

        [OutputConstructor]
        private GetNetAccessPointServicesResult(
            ImmutableArray<Outputs.GetNetAccessPointServicesFilterResult> filters,

            string id,

            string requestId,

            ImmutableArray<Outputs.GetNetAccessPointServicesServiceResult> services)
        {
            Filters = filters;
            Id = id;
            RequestId = requestId;
            Services = services;
        }
    }
}
