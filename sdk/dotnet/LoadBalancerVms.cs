// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Outscale
{
    /// <summary>
    /// Manages load balancer VMs.
    /// 
    /// For more information on this resource, see the [User Guide](https://docs.outscale.com/en/userguide/About-Load-Balancers.html).\
    /// For more information on this resource actions, see the [API documentation](https://docs.outscale.com/api#3ds-outscale-api-loadbalancer).
    /// 
    /// ## Example Usage
    /// ### Required resources
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Outscale = Pulumi.Outscale;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var outscaleVm01 = new Outscale.Vm("outscaleVm01", new()
    ///     {
    ///         ImageId = "ami-12345678",
    ///         VmType = "t2.small",
    ///         KeypairName = @var.Keypair_name,
    ///     });
    /// 
    ///     var outscaleVm02 = new Outscale.Vm("outscaleVm02", new()
    ///     {
    ///         ImageId = @var.Image_id,
    ///         VmType = @var.Vm_type,
    ///         KeypairName = @var.Keypair_name,
    ///     });
    /// 
    ///     var loadBalancer01 = new Outscale.LoadBalancer("loadBalancer01", new()
    ///     {
    ///         LoadBalancerName = "load-balancer-for-backend-vms",
    ///         SubregionNames = new[]
    ///         {
    ///             $"{@var.Region}a",
    ///         },
    ///         Listeners = new[]
    ///         {
    ///             new Outscale.Inputs.LoadBalancerListenerArgs
    ///             {
    ///                 BackendPort = 80,
    ///                 BackendProtocol = "TCP",
    ///                 LoadBalancerProtocol = "TCP",
    ///                 LoadBalancerPort = 80,
    ///             },
    ///         },
    ///         Tags = new[]
    ///         {
    ///             new Outscale.Inputs.LoadBalancerTagArgs
    ///             {
    ///                 Key = "name",
    ///                 Value = "outscale_load_balancer01",
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// ### Register VMs with a load balancer
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Outscale = Pulumi.Outscale;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var outscaleLoadBalancerVms01 = new Outscale.LoadBalancerVms("outscaleLoadBalancerVms01", new()
    ///     {
    ///         LoadBalancerName = "load-balancer-for-backend-vms",
    ///         BackendVmIds = new[]
    ///         {
    ///             outscale_vm.Outscale_vm01.Vm_id,
    ///             outscale_vm.Outscale_vm_02.Vm_id,
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// </summary>
    [OutscaleResourceType("outscale:index/loadBalancerVms:LoadBalancerVms")]
    public partial class LoadBalancerVms : global::Pulumi.CustomResource
    {
        /// <summary>
        /// One or more IDs of back-end VMs.&lt;br /&gt;
        /// Specifying the same ID several times has no effect as each back-end VM has equal weight.
        /// </summary>
        [Output("backendVmIds")]
        public Output<ImmutableArray<string>> BackendVmIds { get; private set; } = null!;

        /// <summary>
        /// The name of the load balancer.
        /// </summary>
        [Output("loadBalancerName")]
        public Output<string> LoadBalancerName { get; private set; } = null!;

        [Output("requestId")]
        public Output<string> RequestId { get; private set; } = null!;


        /// <summary>
        /// Create a LoadBalancerVms resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public LoadBalancerVms(string name, LoadBalancerVmsArgs args, CustomResourceOptions? options = null)
            : base("outscale:index/loadBalancerVms:LoadBalancerVms", name, args ?? new LoadBalancerVmsArgs(), MakeResourceOptions(options, ""))
        {
        }

        private LoadBalancerVms(string name, Input<string> id, LoadBalancerVmsState? state = null, CustomResourceOptions? options = null)
            : base("outscale:index/loadBalancerVms:LoadBalancerVms", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing LoadBalancerVms resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static LoadBalancerVms Get(string name, Input<string> id, LoadBalancerVmsState? state = null, CustomResourceOptions? options = null)
        {
            return new LoadBalancerVms(name, id, state, options);
        }
    }

    public sealed class LoadBalancerVmsArgs : global::Pulumi.ResourceArgs
    {
        [Input("backendVmIds", required: true)]
        private InputList<string>? _backendVmIds;

        /// <summary>
        /// One or more IDs of back-end VMs.&lt;br /&gt;
        /// Specifying the same ID several times has no effect as each back-end VM has equal weight.
        /// </summary>
        public InputList<string> BackendVmIds
        {
            get => _backendVmIds ?? (_backendVmIds = new InputList<string>());
            set => _backendVmIds = value;
        }

        /// <summary>
        /// The name of the load balancer.
        /// </summary>
        [Input("loadBalancerName", required: true)]
        public Input<string> LoadBalancerName { get; set; } = null!;

        public LoadBalancerVmsArgs()
        {
        }
        public static new LoadBalancerVmsArgs Empty => new LoadBalancerVmsArgs();
    }

    public sealed class LoadBalancerVmsState : global::Pulumi.ResourceArgs
    {
        [Input("backendVmIds")]
        private InputList<string>? _backendVmIds;

        /// <summary>
        /// One or more IDs of back-end VMs.&lt;br /&gt;
        /// Specifying the same ID several times has no effect as each back-end VM has equal weight.
        /// </summary>
        public InputList<string> BackendVmIds
        {
            get => _backendVmIds ?? (_backendVmIds = new InputList<string>());
            set => _backendVmIds = value;
        }

        /// <summary>
        /// The name of the load balancer.
        /// </summary>
        [Input("loadBalancerName")]
        public Input<string>? LoadBalancerName { get; set; }

        [Input("requestId")]
        public Input<string>? RequestId { get; set; }

        public LoadBalancerVmsState()
        {
        }
        public static new LoadBalancerVmsState Empty => new LoadBalancerVmsState();
    }
}
