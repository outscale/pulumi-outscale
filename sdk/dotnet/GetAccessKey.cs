// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Outscale
{
    public static class GetAccessKey
    {
        /// <summary>
        /// Provides information about an access key.
        /// 
        /// For more information on this resource, see the [User Guide](https://docs.outscale.com/en/userguide/About-Access-Keys.html).  
        /// For more information on this resource actions, see the [API documentation](https://docs.outscale.com/api#3ds-outscale-api-accesskey).
        /// 
        /// ## Example Usage
        /// 
        /// ### Get one of your own access keys (root account or user)
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Outscale = Pulumi.Outscale;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var accessKey01 = Outscale.GetAccessKey.Invoke(new()
        ///     {
        ///         Filters = new[]
        ///         {
        ///             new Outscale.Inputs.GetAccessKeyFilterInputArgs
        ///             {
        ///                 Name = "access_key_ids",
        ///                 Values = new[]
        ///                 {
        ///                     "ABCDEFGHIJ0123456789",
        ///                 },
        ///             },
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// ### Get the access key of another user
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Outscale = Pulumi.Outscale;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var accessKey01 = Outscale.GetAccessKey.Invoke(new()
        ///     {
        ///         UserName = "user_name",
        ///         Filters = new[]
        ///         {
        ///             new Outscale.Inputs.GetAccessKeyFilterInputArgs
        ///             {
        ///                 Name = "access_key_ids",
        ///                 Values = new[]
        ///                 {
        ///                     "XXXXXXXXX",
        ///                 },
        ///             },
        ///             new Outscale.Inputs.GetAccessKeyFilterInputArgs
        ///             {
        ///                 Name = "states",
        ///                 Values = new[]
        ///                 {
        ///                     "ACTIVE",
        ///                 },
        ///             },
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetAccessKeyResult> InvokeAsync(GetAccessKeyArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAccessKeyResult>("outscale:index/getAccessKey:getAccessKey", args ?? new GetAccessKeyArgs(), options.WithDefaults());

        /// <summary>
        /// Provides information about an access key.
        /// 
        /// For more information on this resource, see the [User Guide](https://docs.outscale.com/en/userguide/About-Access-Keys.html).  
        /// For more information on this resource actions, see the [API documentation](https://docs.outscale.com/api#3ds-outscale-api-accesskey).
        /// 
        /// ## Example Usage
        /// 
        /// ### Get one of your own access keys (root account or user)
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Outscale = Pulumi.Outscale;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var accessKey01 = Outscale.GetAccessKey.Invoke(new()
        ///     {
        ///         Filters = new[]
        ///         {
        ///             new Outscale.Inputs.GetAccessKeyFilterInputArgs
        ///             {
        ///                 Name = "access_key_ids",
        ///                 Values = new[]
        ///                 {
        ///                     "ABCDEFGHIJ0123456789",
        ///                 },
        ///             },
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// ### Get the access key of another user
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Outscale = Pulumi.Outscale;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var accessKey01 = Outscale.GetAccessKey.Invoke(new()
        ///     {
        ///         UserName = "user_name",
        ///         Filters = new[]
        ///         {
        ///             new Outscale.Inputs.GetAccessKeyFilterInputArgs
        ///             {
        ///                 Name = "access_key_ids",
        ///                 Values = new[]
        ///                 {
        ///                     "XXXXXXXXX",
        ///                 },
        ///             },
        ///             new Outscale.Inputs.GetAccessKeyFilterInputArgs
        ///             {
        ///                 Name = "states",
        ///                 Values = new[]
        ///                 {
        ///                     "ACTIVE",
        ///                 },
        ///             },
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetAccessKeyResult> Invoke(GetAccessKeyInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAccessKeyResult>("outscale:index/getAccessKey:getAccessKey", args ?? new GetAccessKeyInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Provides information about an access key.
        /// 
        /// For more information on this resource, see the [User Guide](https://docs.outscale.com/en/userguide/About-Access-Keys.html).  
        /// For more information on this resource actions, see the [API documentation](https://docs.outscale.com/api#3ds-outscale-api-accesskey).
        /// 
        /// ## Example Usage
        /// 
        /// ### Get one of your own access keys (root account or user)
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Outscale = Pulumi.Outscale;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var accessKey01 = Outscale.GetAccessKey.Invoke(new()
        ///     {
        ///         Filters = new[]
        ///         {
        ///             new Outscale.Inputs.GetAccessKeyFilterInputArgs
        ///             {
        ///                 Name = "access_key_ids",
        ///                 Values = new[]
        ///                 {
        ///                     "ABCDEFGHIJ0123456789",
        ///                 },
        ///             },
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// ### Get the access key of another user
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Outscale = Pulumi.Outscale;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var accessKey01 = Outscale.GetAccessKey.Invoke(new()
        ///     {
        ///         UserName = "user_name",
        ///         Filters = new[]
        ///         {
        ///             new Outscale.Inputs.GetAccessKeyFilterInputArgs
        ///             {
        ///                 Name = "access_key_ids",
        ///                 Values = new[]
        ///                 {
        ///                     "XXXXXXXXX",
        ///                 },
        ///             },
        ///             new Outscale.Inputs.GetAccessKeyFilterInputArgs
        ///             {
        ///                 Name = "states",
        ///                 Values = new[]
        ///                 {
        ///                     "ACTIVE",
        ///                 },
        ///             },
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetAccessKeyResult> Invoke(GetAccessKeyInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetAccessKeyResult>("outscale:index/getAccessKey:getAccessKey", args ?? new GetAccessKeyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAccessKeyArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the access key.
        /// </summary>
        [Input("accessKeyId")]
        public string? AccessKeyId { get; set; }

        [Input("filters")]
        private List<Inputs.GetAccessKeyFilterArgs>? _filters;

        /// <summary>
        /// A combination of a filter name and one or more filter values. You can specify this argument for as many filter names as you need. The filter name can be any of the following:
        /// </summary>
        public List<Inputs.GetAccessKeyFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetAccessKeyFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The state of the access key (`ACTIVE` if the key is valid for API calls, or `INACTIVE` if not).
        /// </summary>
        [Input("state")]
        public string? State { get; set; }

        /// <summary>
        /// The name of the EIM user. By default, the user who sends the request (which can be the root account).
        /// </summary>
        [Input("userName")]
        public string? UserName { get; set; }

        public GetAccessKeyArgs()
        {
        }
        public static new GetAccessKeyArgs Empty => new GetAccessKeyArgs();
    }

    public sealed class GetAccessKeyInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the access key.
        /// </summary>
        [Input("accessKeyId")]
        public Input<string>? AccessKeyId { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetAccessKeyFilterInputArgs>? _filters;

        /// <summary>
        /// A combination of a filter name and one or more filter values. You can specify this argument for as many filter names as you need. The filter name can be any of the following:
        /// </summary>
        public InputList<Inputs.GetAccessKeyFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetAccessKeyFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The state of the access key (`ACTIVE` if the key is valid for API calls, or `INACTIVE` if not).
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// The name of the EIM user. By default, the user who sends the request (which can be the root account).
        /// </summary>
        [Input("userName")]
        public Input<string>? UserName { get; set; }

        public GetAccessKeyInvokeArgs()
        {
        }
        public static new GetAccessKeyInvokeArgs Empty => new GetAccessKeyInvokeArgs();
    }


    [OutputType]
    public sealed class GetAccessKeyResult
    {
        /// <summary>
        /// The ID of the access key.
        /// </summary>
        public readonly string? AccessKeyId;
        /// <summary>
        /// The date and time (UTC) at which the access key was created.
        /// </summary>
        public readonly string CreationDate;
        /// <summary>
        /// The date and time (UTC) at which the access key expires.
        /// </summary>
        public readonly string ExpirationDate;
        public readonly ImmutableArray<Outputs.GetAccessKeyFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The date and time (UTC) at which the access key was last modified.
        /// </summary>
        public readonly string LastModificationDate;
        public readonly string RequestId;
        /// <summary>
        /// The state of the access key (`ACTIVE` if the key is valid for API calls, or `INACTIVE` if not).
        /// </summary>
        public readonly string? State;
        public readonly string? UserName;

        [OutputConstructor]
        private GetAccessKeyResult(
            string? accessKeyId,

            string creationDate,

            string expirationDate,

            ImmutableArray<Outputs.GetAccessKeyFilterResult> filters,

            string id,

            string lastModificationDate,

            string requestId,

            string? state,

            string? userName)
        {
            AccessKeyId = accessKeyId;
            CreationDate = creationDate;
            ExpirationDate = expirationDate;
            Filters = filters;
            Id = id;
            LastModificationDate = lastModificationDate;
            RequestId = requestId;
            State = state;
            UserName = userName;
        }
    }
}
