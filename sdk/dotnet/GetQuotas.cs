// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Outscale
{
    public static class GetQuotas
    {
        /// <summary>
        /// Provides information about quotas.
        /// 
        /// For more information on this resource, see the [User Guide](https://docs.outscale.com/en/userguide/About-Your-Account.html).  
        /// For more information on this resource actions, see the [API documentation](https://docs.outscale.com/api#readquotas).
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// ### Read specific quotas
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Outscale = Pulumi.Outscale;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var vpcQuotas01 = Outscale.GetQuotas.Invoke(new()
        ///     {
        ///         Filters = new[]
        ///         {
        ///             new Outscale.Inputs.GetQuotasFilterInputArgs
        ///             {
        ///                 Name = "collections",
        ///                 Values = new[]
        ///                 {
        ///                     "VPC",
        ///                 },
        ///             },
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% example %}}
        /// ### Read all quotas
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Outscale = Pulumi.Outscale;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var allQuotas = Outscale.GetQuotas.Invoke();
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetQuotasResult> InvokeAsync(GetQuotasArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetQuotasResult>("outscale:index/getQuotas:getQuotas", args ?? new GetQuotasArgs(), options.WithDefaults());

        /// <summary>
        /// Provides information about quotas.
        /// 
        /// For more information on this resource, see the [User Guide](https://docs.outscale.com/en/userguide/About-Your-Account.html).  
        /// For more information on this resource actions, see the [API documentation](https://docs.outscale.com/api#readquotas).
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// ### Read specific quotas
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Outscale = Pulumi.Outscale;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var vpcQuotas01 = Outscale.GetQuotas.Invoke(new()
        ///     {
        ///         Filters = new[]
        ///         {
        ///             new Outscale.Inputs.GetQuotasFilterInputArgs
        ///             {
        ///                 Name = "collections",
        ///                 Values = new[]
        ///                 {
        ///                     "VPC",
        ///                 },
        ///             },
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% example %}}
        /// ### Read all quotas
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Outscale = Pulumi.Outscale;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var allQuotas = Outscale.GetQuotas.Invoke();
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetQuotasResult> Invoke(GetQuotasInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetQuotasResult>("outscale:index/getQuotas:getQuotas", args ?? new GetQuotasInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetQuotasArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private List<Inputs.GetQuotasFilterArgs>? _filters;

        /// <summary>
        /// A combination of a filter name and one or more filter values. You can specify this argument for as many filter names as you need. The filter name can be any of the following:
        /// </summary>
        public List<Inputs.GetQuotasFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetQuotasFilterArgs>());
            set => _filters = value;
        }

        public GetQuotasArgs()
        {
        }
        public static new GetQuotasArgs Empty => new GetQuotasArgs();
    }

    public sealed class GetQuotasInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private InputList<Inputs.GetQuotasFilterInputArgs>? _filters;

        /// <summary>
        /// A combination of a filter name and one or more filter values. You can specify this argument for as many filter names as you need. The filter name can be any of the following:
        /// </summary>
        public InputList<Inputs.GetQuotasFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetQuotasFilterInputArgs>());
            set => _filters = value;
        }

        public GetQuotasInvokeArgs()
        {
        }
        public static new GetQuotasInvokeArgs Empty => new GetQuotasInvokeArgs();
    }


    [OutputType]
    public sealed class GetQuotasResult
    {
        public readonly ImmutableArray<Outputs.GetQuotasFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// One or more quotas associated with the user.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetQuotasQuotaResult> Quotas;
        public readonly string RequestId;

        [OutputConstructor]
        private GetQuotasResult(
            ImmutableArray<Outputs.GetQuotasFilterResult> filters,

            string id,

            ImmutableArray<Outputs.GetQuotasQuotaResult> quotas,

            string requestId)
        {
            Filters = filters;
            Id = id;
            Quotas = quotas;
            RequestId = requestId;
        }
    }
}
