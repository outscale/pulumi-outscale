// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Immutable;

namespace Pulumi.Outscale
{
    public static class Config
    {
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "IDE1006", Justification = 
        "Double underscore prefix used to avoid conflicts with variable names.")]
        private sealed class __Value<T>
        {
            private readonly Func<T> _getter;
            private T _value = default!;
            private bool _set;

            public __Value(Func<T> getter)
            {
                _getter = getter;
            }

            public T Get() => _set ? _value : _getter();

            public void Set(T value)
            {
                _value = value;
                _set = true;
            }
        }

        private static readonly global::Pulumi.Config __config = new global::Pulumi.Config("outscale");

        private static readonly __Value<string?> _accessKeyId = new __Value<string?>(() => __config.Get("accessKeyId") ?? Utilities.GetEnv("OUTSCALE_ACCESSKEYID"));
        /// <summary>
        /// The Access Key ID for API operations
        /// </summary>
        public static string? AccessKeyId
        {
            get => _accessKeyId.Get();
            set => _accessKeyId.Set(value);
        }

        private static readonly __Value<ImmutableArray<Pulumi.Outscale.Config.Types.Endpoints>> _endpoints = new __Value<ImmutableArray<Pulumi.Outscale.Config.Types.Endpoints>>(() => __config.GetObject<ImmutableArray<Pulumi.Outscale.Config.Types.Endpoints>>("endpoints"));
        public static ImmutableArray<Pulumi.Outscale.Config.Types.Endpoints> Endpoints
        {
            get => _endpoints.Get();
            set => _endpoints.Set(value);
        }

        private static readonly __Value<bool?> _insecure = new __Value<bool?>(() => __config.GetBoolean("insecure"));
        /// <summary>
        /// tls insecure connection
        /// </summary>
        public static bool? Insecure
        {
            get => _insecure.Get();
            set => _insecure.Set(value);
        }

        private static readonly __Value<string?> _region = new __Value<string?>(() => __config.Get("region") ?? Utilities.GetEnv("OUTSCALE_REGION"));
        /// <summary>
        /// The Region for API operations.
        /// </summary>
        public static string? Region
        {
            get => _region.Get();
            set => _region.Set(value);
        }

        private static readonly __Value<string?> _secretKeyId = new __Value<string?>(() => __config.Get("secretKeyId") ?? Utilities.GetEnv("OUTSCALE_SECRETKEYID"));
        /// <summary>
        /// The Secret Key ID for API operations.
        /// </summary>
        public static string? SecretKeyId
        {
            get => _secretKeyId.Get();
            set => _secretKeyId.Set(value);
        }

        private static readonly __Value<string?> _x509CertPath = new __Value<string?>(() => __config.Get("x509CertPath"));
        /// <summary>
        /// The path to your x509 cert
        /// </summary>
        public static string? X509CertPath
        {
            get => _x509CertPath.Get();
            set => _x509CertPath.Set(value);
        }

        private static readonly __Value<string?> _x509KeyPath = new __Value<string?>(() => __config.Get("x509KeyPath"));
        /// <summary>
        /// The path to your x509 key
        /// </summary>
        public static string? X509KeyPath
        {
            get => _x509KeyPath.Get();
            set => _x509KeyPath.Set(value);
        }

        public static class Types
        {

             public class Endpoints
             {
            /// <summary>
            /// Use this to override the default service endpoint URL
            /// </summary>
                public string? Api { get; set; } = null!;
            }
        }
    }
}
