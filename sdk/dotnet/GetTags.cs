// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Outscale
{
    public static class GetTags
    {
        public static Task<GetTagsResult> InvokeAsync(GetTagsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetTagsResult>("outscale:index/getTags:getTags", args ?? new GetTagsArgs(), options.WithDefaults());

        public static Output<GetTagsResult> Invoke(GetTagsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetTagsResult>("outscale:index/getTags:getTags", args ?? new GetTagsInvokeArgs(), options.WithDefaults());

        public static Output<GetTagsResult> Invoke(GetTagsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetTagsResult>("outscale:index/getTags:getTags", args ?? new GetTagsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetTagsArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private List<Inputs.GetTagsFilterArgs>? _filters;
        public List<Inputs.GetTagsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetTagsFilterArgs>());
            set => _filters = value;
        }

        public GetTagsArgs()
        {
        }
        public static new GetTagsArgs Empty => new GetTagsArgs();
    }

    public sealed class GetTagsInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private InputList<Inputs.GetTagsFilterInputArgs>? _filters;
        public InputList<Inputs.GetTagsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetTagsFilterInputArgs>());
            set => _filters = value;
        }

        public GetTagsInvokeArgs()
        {
        }
        public static new GetTagsInvokeArgs Empty => new GetTagsInvokeArgs();
    }


    [OutputType]
    public sealed class GetTagsResult
    {
        public readonly ImmutableArray<Outputs.GetTagsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<Outputs.GetTagsTagResult> Tags;

        [OutputConstructor]
        private GetTagsResult(
            ImmutableArray<Outputs.GetTagsFilterResult> filters,

            string id,

            ImmutableArray<Outputs.GetTagsTagResult> tags)
        {
            Filters = filters;
            Id = id;
            Tags = tags;
        }
    }
}
