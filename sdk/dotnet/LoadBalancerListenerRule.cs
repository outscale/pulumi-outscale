// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Outscale
{
    /// <summary>
    /// Manages a load balancer listener rule.
    /// 
    /// For more information on this resource, see the [User Guide](https://docs.outscale.com/en/userguide/About-Load-Balancers.html).\
    /// For more information on this resource actions, see the [API documentation](https://docs.outscale.com/api#3ds-outscale-api-listener).
    /// 
    /// ## Example Usage
    /// 
    /// ### Required resources
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Outscale = Pulumi.Outscale;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var vm01 = new Outscale.Vm("vm01", new()
    ///     {
    ///         ImageId = imageId,
    ///         VmType = vmType,
    ///         KeypairName = keypairName,
    ///     });
    /// 
    ///     var loadBalancer01 = new Outscale.LoadBalancer("load_balancer01", new()
    ///     {
    ///         LoadBalancerName = "terraform-public-load-balancer",
    ///         SubregionNames = new[]
    ///         {
    ///             $"{region}a",
    ///         },
    ///         Listeners = new[]
    ///         {
    ///             new Outscale.Inputs.LoadBalancerListenerArgs
    ///             {
    ///                 BackendPort = 80,
    ///                 BackendProtocol = "TCP",
    ///                 LoadBalancerProtocol = "TCP",
    ///                 LoadBalancerPort = 80,
    ///             },
    ///         },
    ///         Tags = new[]
    ///         {
    ///             new Outscale.Inputs.LoadBalancerTagArgs
    ///             {
    ///                 Key = "name",
    ///                 Value = "terraform-public-load-balancer",
    ///             },
    ///         },
    ///     });
    /// 
    ///     var outscaleLoadBalancerVms01 = new Outscale.LoadBalancerVms("outscale_load_balancer_vms01", new()
    ///     {
    ///         LoadBalancerName = loadBalancer01.Id,
    ///         BackendVmIds = new[]
    ///         {
    ///             vm01.VmId,
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ### Create a listener rule based on path pattern
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Outscale = Pulumi.Outscale;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var rule01 = new Outscale.LoadBalancerListenerRule("rule01", new()
    ///     {
    ///         Listener = new Outscale.Inputs.LoadBalancerListenerRuleListenerArgs
    ///         {
    ///             LoadBalancerName = loadBalancer01.Id,
    ///             LoadBalancerPort = 80,
    ///         },
    ///         ListenerRule = new Outscale.Inputs.LoadBalancerListenerRuleListenerRuleArgs
    ///         {
    ///             Action = "forward",
    ///             ListenerRuleName = "terraform-listener-rule01",
    ///             PathPattern = "*.abc.*.abc.*.com",
    ///             Priority = 10,
    ///         },
    ///         VmIds = new[]
    ///         {
    ///             vm01.VmId,
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ### Create a listener rule based on host pattern
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Outscale = Pulumi.Outscale;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var rule02 = new Outscale.LoadBalancerListenerRule("rule02", new()
    ///     {
    ///         Listener = new Outscale.Inputs.LoadBalancerListenerRuleListenerArgs
    ///         {
    ///             LoadBalancerName = loadBalancer01.Id,
    ///             LoadBalancerPort = 80,
    ///         },
    ///         ListenerRule = new Outscale.Inputs.LoadBalancerListenerRuleListenerRuleArgs
    ///         {
    ///             Action = "forward",
    ///             ListenerRuleName = "terraform-listener-rule02",
    ///             HostNamePattern = "*.abc.-.abc.*.com",
    ///             Priority = 1,
    ///         },
    ///         VmIds = new[]
    ///         {
    ///             vm01.VmId,
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// </summary>
    [OutscaleResourceType("outscale:index/loadBalancerListenerRule:LoadBalancerListenerRule")]
    public partial class LoadBalancerListenerRule : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Information about the load balancer.
        /// </summary>
        [Output("listener")]
        public Output<Outputs.LoadBalancerListenerRuleListener> Listener { get; private set; } = null!;

        /// <summary>
        /// Information about the listener rule.
        /// </summary>
        [Output("listenerRule")]
        public Output<Outputs.LoadBalancerListenerRuleListenerRule> ListenerRule { get; private set; } = null!;

        [Output("requestId")]
        public Output<string> RequestId { get; private set; } = null!;

        /// <summary>
        /// The IDs of the backend VMs.
        /// </summary>
        [Output("vmIds")]
        public Output<ImmutableArray<string>> VmIds { get; private set; } = null!;


        /// <summary>
        /// Create a LoadBalancerListenerRule resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public LoadBalancerListenerRule(string name, LoadBalancerListenerRuleArgs args, CustomResourceOptions? options = null)
            : base("outscale:index/loadBalancerListenerRule:LoadBalancerListenerRule", name, args ?? new LoadBalancerListenerRuleArgs(), MakeResourceOptions(options, ""))
        {
        }

        private LoadBalancerListenerRule(string name, Input<string> id, LoadBalancerListenerRuleState? state = null, CustomResourceOptions? options = null)
            : base("outscale:index/loadBalancerListenerRule:LoadBalancerListenerRule", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing LoadBalancerListenerRule resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static LoadBalancerListenerRule Get(string name, Input<string> id, LoadBalancerListenerRuleState? state = null, CustomResourceOptions? options = null)
        {
            return new LoadBalancerListenerRule(name, id, state, options);
        }
    }

    public sealed class LoadBalancerListenerRuleArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Information about the load balancer.
        /// </summary>
        [Input("listener", required: true)]
        public Input<Inputs.LoadBalancerListenerRuleListenerArgs> Listener { get; set; } = null!;

        /// <summary>
        /// Information about the listener rule.
        /// </summary>
        [Input("listenerRule", required: true)]
        public Input<Inputs.LoadBalancerListenerRuleListenerRuleArgs> ListenerRule { get; set; } = null!;

        [Input("vmIds", required: true)]
        private InputList<string>? _vmIds;

        /// <summary>
        /// The IDs of the backend VMs.
        /// </summary>
        public InputList<string> VmIds
        {
            get => _vmIds ?? (_vmIds = new InputList<string>());
            set => _vmIds = value;
        }

        public LoadBalancerListenerRuleArgs()
        {
        }
        public static new LoadBalancerListenerRuleArgs Empty => new LoadBalancerListenerRuleArgs();
    }

    public sealed class LoadBalancerListenerRuleState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Information about the load balancer.
        /// </summary>
        [Input("listener")]
        public Input<Inputs.LoadBalancerListenerRuleListenerGetArgs>? Listener { get; set; }

        /// <summary>
        /// Information about the listener rule.
        /// </summary>
        [Input("listenerRule")]
        public Input<Inputs.LoadBalancerListenerRuleListenerRuleGetArgs>? ListenerRule { get; set; }

        [Input("requestId")]
        public Input<string>? RequestId { get; set; }

        [Input("vmIds")]
        private InputList<string>? _vmIds;

        /// <summary>
        /// The IDs of the backend VMs.
        /// </summary>
        public InputList<string> VmIds
        {
            get => _vmIds ?? (_vmIds = new InputList<string>());
            set => _vmIds = value;
        }

        public LoadBalancerListenerRuleState()
        {
        }
        public static new LoadBalancerListenerRuleState Empty => new LoadBalancerListenerRuleState();
    }
}
