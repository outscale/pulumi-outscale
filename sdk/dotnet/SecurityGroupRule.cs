// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Outscale
{
    /// <summary>
    /// Manages a security group rule.
    /// 
    /// For more information on this resource, see the [User Guide](https://docs.outscale.com/en/userguide/About-Security-Group-Rules.html).\
    /// For more information on this resource actions, see the [API documentation](https://docs.outscale.com/api#3ds-outscale-api-securitygrouprule).
    /// 
    /// ## Example Usage
    /// 
    /// ### Required resources
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Outscale = Pulumi.Outscale;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var securityGroup01 = new Outscale.SecurityGroup("security_group01", new()
    ///     {
    ///         Description = "Terraform target security group for SG rule from IP and SG",
    ///         SecurityGroupName = "terraform-security-group-test-01",
    ///     });
    /// 
    ///     var securityGroup02 = new Outscale.SecurityGroup("security_group02", new()
    ///     {
    ///         Description = "Terraform source security group for SG rule from SG",
    ///         SecurityGroupName = "terraform-security-group-test-02",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ### Set an inbound rule from an IP range
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Outscale = Pulumi.Outscale;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var securityGroupRule01 = new Outscale.SecurityGroupRule("security_group_rule01", new()
    ///     {
    ///         Flow = "Inbound",
    ///         SecurityGroupId = securityGroup01.SecurityGroupId,
    ///         FromPortRange = 80,
    ///         ToPortRange = 80,
    ///         IpProtocol = "tcp",
    ///         IpRange = "10.0.0.0/16",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ### Set an inbound rule from another security group
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Outscale = Pulumi.Outscale;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var securityGroupRule02 = new Outscale.SecurityGroupRule("security_group_rule02", new()
    ///     {
    ///         Flow = "Inbound",
    ///         SecurityGroupId = securityGroup01.SecurityGroupId,
    ///         Rules = new[]
    ///         {
    ///             new Outscale.Inputs.SecurityGroupRuleRuleArgs
    ///             {
    ///                 FromPortRange = 22,
    ///                 ToPortRange = 22,
    ///                 IpProtocol = "tcp",
    ///                 SecurityGroupsMembers = new[]
    ///                 {
    ///                     new Outscale.Inputs.SecurityGroupRuleRuleSecurityGroupsMemberArgs
    ///                     {
    ///                         AccountId = "012345678910",
    ///                         SecurityGroupName = "terraform-security-group-test-02",
    ///                     },
    ///                 },
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// A security group rule can be imported using the following format: `SecurityGroupId_Flow_IpProtocol_FromPortRange_ToPortRange_IpRange`.
    /// 
    /// For example:
    /// 
    /// console
    /// 
    /// ```sh
    /// $ pulumi import outscale:index/securityGroupRule:SecurityGroupRule ImportedRule sg-87654321_outbound_-1_-1_-1_10.0.0.0/16
    /// ```
    /// </summary>
    [OutscaleResourceType("outscale:index/securityGroupRule:SecurityGroupRule")]
    public partial class SecurityGroupRule : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The direction of the flow: `Inbound` or `Outbound`. You can specify `Outbound` for Nets only.
        /// </summary>
        [Output("flow")]
        public Output<string> Flow { get; private set; } = null!;

        /// <summary>
        /// The beginning of the port range for the TCP and UDP protocols, or an ICMP type number. If you specify this parameter, you cannot specify the `rules` parameter and its subparameters.
        /// </summary>
        [Output("fromPortRange")]
        public Output<int?> FromPortRange { get; private set; } = null!;

        /// <summary>
        /// The IP protocol name (`tcp`, `udp`, `icmp`, or `-1` for all protocols). By default, `-1`. In a Net, this can also be an IP protocol number. For more information, see the [IANA.org website](https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml). If you specify this parameter, you cannot specify the `rules` parameter and its subparameters.
        /// </summary>
        [Output("ipProtocol")]
        public Output<string?> IpProtocol { get; private set; } = null!;

        /// <summary>
        /// The IP range for the security group rule, in CIDR notation (for example, 10.0.0.0/16). If you specify this parameter, you cannot specify the `rules` parameter and its subparameters.
        /// </summary>
        [Output("ipRange")]
        public Output<string?> IpRange { get; private set; } = null!;

        /// <summary>
        /// The ID of the Net for the security group.
        /// </summary>
        [Output("netId")]
        public Output<string> NetId { get; private set; } = null!;

        [Output("requestId")]
        public Output<string> RequestId { get; private set; } = null!;

        /// <summary>
        /// Information about the security group rule to create. If you specify this parent parameter and its subparameters, you cannot specify the following parent parameters: `from_port_range`, `ip_protocol`, `ip_range`, and `to_port_range`.
        /// </summary>
        [Output("rules")]
        public Output<ImmutableArray<Outputs.SecurityGroupRuleRule>> Rules { get; private set; } = null!;

        /// <summary>
        /// The account ID that owns the source or destination security group specified in the `security_group_name_to_link` parameter.
        /// </summary>
        [Output("securityGroupAccountIdToLink")]
        public Output<string?> SecurityGroupAccountIdToLink { get; private set; } = null!;

        /// <summary>
        /// The ID of the security group for which you want to create a rule.
        /// </summary>
        [Output("securityGroupId")]
        public Output<string> SecurityGroupId { get; private set; } = null!;

        /// <summary>
        /// The name of the security group.
        /// </summary>
        [Output("securityGroupName")]
        public Output<string> SecurityGroupName { get; private set; } = null!;

        /// <summary>
        /// The ID of a source or destination security group that you want to link to the security group of the rule.
        /// </summary>
        [Output("securityGroupNameToLink")]
        public Output<string?> SecurityGroupNameToLink { get; private set; } = null!;

        /// <summary>
        /// The end of the port range for the TCP and UDP protocols, or an ICMP code number. If you specify this parameter, you cannot specify the `rules` parameter and its subparameters.
        /// </summary>
        [Output("toPortRange")]
        public Output<int?> ToPortRange { get; private set; } = null!;


        /// <summary>
        /// Create a SecurityGroupRule resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SecurityGroupRule(string name, SecurityGroupRuleArgs args, CustomResourceOptions? options = null)
            : base("outscale:index/securityGroupRule:SecurityGroupRule", name, args ?? new SecurityGroupRuleArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SecurityGroupRule(string name, Input<string> id, SecurityGroupRuleState? state = null, CustomResourceOptions? options = null)
            : base("outscale:index/securityGroupRule:SecurityGroupRule", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SecurityGroupRule resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SecurityGroupRule Get(string name, Input<string> id, SecurityGroupRuleState? state = null, CustomResourceOptions? options = null)
        {
            return new SecurityGroupRule(name, id, state, options);
        }
    }

    public sealed class SecurityGroupRuleArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The direction of the flow: `Inbound` or `Outbound`. You can specify `Outbound` for Nets only.
        /// </summary>
        [Input("flow", required: true)]
        public Input<string> Flow { get; set; } = null!;

        /// <summary>
        /// The beginning of the port range for the TCP and UDP protocols, or an ICMP type number. If you specify this parameter, you cannot specify the `rules` parameter and its subparameters.
        /// </summary>
        [Input("fromPortRange")]
        public Input<int>? FromPortRange { get; set; }

        /// <summary>
        /// The IP protocol name (`tcp`, `udp`, `icmp`, or `-1` for all protocols). By default, `-1`. In a Net, this can also be an IP protocol number. For more information, see the [IANA.org website](https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml). If you specify this parameter, you cannot specify the `rules` parameter and its subparameters.
        /// </summary>
        [Input("ipProtocol")]
        public Input<string>? IpProtocol { get; set; }

        /// <summary>
        /// The IP range for the security group rule, in CIDR notation (for example, 10.0.0.0/16). If you specify this parameter, you cannot specify the `rules` parameter and its subparameters.
        /// </summary>
        [Input("ipRange")]
        public Input<string>? IpRange { get; set; }

        [Input("rules")]
        private InputList<Inputs.SecurityGroupRuleRuleArgs>? _rules;

        /// <summary>
        /// Information about the security group rule to create. If you specify this parent parameter and its subparameters, you cannot specify the following parent parameters: `from_port_range`, `ip_protocol`, `ip_range`, and `to_port_range`.
        /// </summary>
        public InputList<Inputs.SecurityGroupRuleRuleArgs> Rules
        {
            get => _rules ?? (_rules = new InputList<Inputs.SecurityGroupRuleRuleArgs>());
            set => _rules = value;
        }

        /// <summary>
        /// The account ID that owns the source or destination security group specified in the `security_group_name_to_link` parameter.
        /// </summary>
        [Input("securityGroupAccountIdToLink")]
        public Input<string>? SecurityGroupAccountIdToLink { get; set; }

        /// <summary>
        /// The ID of the security group for which you want to create a rule.
        /// </summary>
        [Input("securityGroupId", required: true)]
        public Input<string> SecurityGroupId { get; set; } = null!;

        /// <summary>
        /// The ID of a source or destination security group that you want to link to the security group of the rule.
        /// </summary>
        [Input("securityGroupNameToLink")]
        public Input<string>? SecurityGroupNameToLink { get; set; }

        /// <summary>
        /// The end of the port range for the TCP and UDP protocols, or an ICMP code number. If you specify this parameter, you cannot specify the `rules` parameter and its subparameters.
        /// </summary>
        [Input("toPortRange")]
        public Input<int>? ToPortRange { get; set; }

        public SecurityGroupRuleArgs()
        {
        }
        public static new SecurityGroupRuleArgs Empty => new SecurityGroupRuleArgs();
    }

    public sealed class SecurityGroupRuleState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The direction of the flow: `Inbound` or `Outbound`. You can specify `Outbound` for Nets only.
        /// </summary>
        [Input("flow")]
        public Input<string>? Flow { get; set; }

        /// <summary>
        /// The beginning of the port range for the TCP and UDP protocols, or an ICMP type number. If you specify this parameter, you cannot specify the `rules` parameter and its subparameters.
        /// </summary>
        [Input("fromPortRange")]
        public Input<int>? FromPortRange { get; set; }

        /// <summary>
        /// The IP protocol name (`tcp`, `udp`, `icmp`, or `-1` for all protocols). By default, `-1`. In a Net, this can also be an IP protocol number. For more information, see the [IANA.org website](https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml). If you specify this parameter, you cannot specify the `rules` parameter and its subparameters.
        /// </summary>
        [Input("ipProtocol")]
        public Input<string>? IpProtocol { get; set; }

        /// <summary>
        /// The IP range for the security group rule, in CIDR notation (for example, 10.0.0.0/16). If you specify this parameter, you cannot specify the `rules` parameter and its subparameters.
        /// </summary>
        [Input("ipRange")]
        public Input<string>? IpRange { get; set; }

        /// <summary>
        /// The ID of the Net for the security group.
        /// </summary>
        [Input("netId")]
        public Input<string>? NetId { get; set; }

        [Input("requestId")]
        public Input<string>? RequestId { get; set; }

        [Input("rules")]
        private InputList<Inputs.SecurityGroupRuleRuleGetArgs>? _rules;

        /// <summary>
        /// Information about the security group rule to create. If you specify this parent parameter and its subparameters, you cannot specify the following parent parameters: `from_port_range`, `ip_protocol`, `ip_range`, and `to_port_range`.
        /// </summary>
        public InputList<Inputs.SecurityGroupRuleRuleGetArgs> Rules
        {
            get => _rules ?? (_rules = new InputList<Inputs.SecurityGroupRuleRuleGetArgs>());
            set => _rules = value;
        }

        /// <summary>
        /// The account ID that owns the source or destination security group specified in the `security_group_name_to_link` parameter.
        /// </summary>
        [Input("securityGroupAccountIdToLink")]
        public Input<string>? SecurityGroupAccountIdToLink { get; set; }

        /// <summary>
        /// The ID of the security group for which you want to create a rule.
        /// </summary>
        [Input("securityGroupId")]
        public Input<string>? SecurityGroupId { get; set; }

        /// <summary>
        /// The name of the security group.
        /// </summary>
        [Input("securityGroupName")]
        public Input<string>? SecurityGroupName { get; set; }

        /// <summary>
        /// The ID of a source or destination security group that you want to link to the security group of the rule.
        /// </summary>
        [Input("securityGroupNameToLink")]
        public Input<string>? SecurityGroupNameToLink { get; set; }

        /// <summary>
        /// The end of the port range for the TCP and UDP protocols, or an ICMP code number. If you specify this parameter, you cannot specify the `rules` parameter and its subparameters.
        /// </summary>
        [Input("toPortRange")]
        public Input<int>? ToPortRange { get; set; }

        public SecurityGroupRuleState()
        {
        }
        public static new SecurityGroupRuleState Empty => new SecurityGroupRuleState();
    }
}
