// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Outscale
{
    public static class GetAccessKeys
    {
        /// <summary>
        /// Provides information about access keys.
        /// 
        /// For more information on this resource, see the [User Guide](https://docs.outscale.com/en/userguide/About-Access-Keys.html).  
        /// For more information on this resource actions, see the [API documentation](https://docs.outscale.com/api#3ds-outscale-api-accesskey).
        /// 
        /// ## Example Usage
        /// 
        /// ### Get your own access keys (root account or user)
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Outscale = Pulumi.Outscale;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var accessKeys01 = Outscale.GetAccessKeys.Invoke(new()
        ///     {
        ///         Filters = new[]
        ///         {
        ///             new Outscale.Inputs.GetAccessKeysFilterInputArgs
        ///             {
        ///                 Name = "access_key_ids",
        ///                 Values = new[]
        ///                 {
        ///                     "ABCDEFGHIJ0123456789",
        ///                     "0123456789ABCDEFGHIJ",
        ///                 },
        ///             },
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// ### Get the access keys of another user
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Outscale = Pulumi.Outscale;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var accessKeys = Outscale.GetAccessKeys.Invoke(new()
        ///     {
        ///         UserName = "user_name",
        ///         Filters = new[]
        ///         {
        ///             new Outscale.Inputs.GetAccessKeysFilterInputArgs
        ///             {
        ///                 Name = "access_key_ids",
        ///                 Values = new[]
        ///                 {
        ///                     "XXXXXXXXX",
        ///                     "YYYYYYYYYY",
        ///                 },
        ///             },
        ///             new Outscale.Inputs.GetAccessKeysFilterInputArgs
        ///             {
        ///                 Name = "states",
        ///                 Values = new[]
        ///                 {
        ///                     "ACTIVE",
        ///                 },
        ///             },
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetAccessKeysResult> InvokeAsync(GetAccessKeysArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAccessKeysResult>("outscale:index/getAccessKeys:getAccessKeys", args ?? new GetAccessKeysArgs(), options.WithDefaults());

        /// <summary>
        /// Provides information about access keys.
        /// 
        /// For more information on this resource, see the [User Guide](https://docs.outscale.com/en/userguide/About-Access-Keys.html).  
        /// For more information on this resource actions, see the [API documentation](https://docs.outscale.com/api#3ds-outscale-api-accesskey).
        /// 
        /// ## Example Usage
        /// 
        /// ### Get your own access keys (root account or user)
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Outscale = Pulumi.Outscale;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var accessKeys01 = Outscale.GetAccessKeys.Invoke(new()
        ///     {
        ///         Filters = new[]
        ///         {
        ///             new Outscale.Inputs.GetAccessKeysFilterInputArgs
        ///             {
        ///                 Name = "access_key_ids",
        ///                 Values = new[]
        ///                 {
        ///                     "ABCDEFGHIJ0123456789",
        ///                     "0123456789ABCDEFGHIJ",
        ///                 },
        ///             },
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// ### Get the access keys of another user
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Outscale = Pulumi.Outscale;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var accessKeys = Outscale.GetAccessKeys.Invoke(new()
        ///     {
        ///         UserName = "user_name",
        ///         Filters = new[]
        ///         {
        ///             new Outscale.Inputs.GetAccessKeysFilterInputArgs
        ///             {
        ///                 Name = "access_key_ids",
        ///                 Values = new[]
        ///                 {
        ///                     "XXXXXXXXX",
        ///                     "YYYYYYYYYY",
        ///                 },
        ///             },
        ///             new Outscale.Inputs.GetAccessKeysFilterInputArgs
        ///             {
        ///                 Name = "states",
        ///                 Values = new[]
        ///                 {
        ///                     "ACTIVE",
        ///                 },
        ///             },
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetAccessKeysResult> Invoke(GetAccessKeysInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAccessKeysResult>("outscale:index/getAccessKeys:getAccessKeys", args ?? new GetAccessKeysInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Provides information about access keys.
        /// 
        /// For more information on this resource, see the [User Guide](https://docs.outscale.com/en/userguide/About-Access-Keys.html).  
        /// For more information on this resource actions, see the [API documentation](https://docs.outscale.com/api#3ds-outscale-api-accesskey).
        /// 
        /// ## Example Usage
        /// 
        /// ### Get your own access keys (root account or user)
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Outscale = Pulumi.Outscale;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var accessKeys01 = Outscale.GetAccessKeys.Invoke(new()
        ///     {
        ///         Filters = new[]
        ///         {
        ///             new Outscale.Inputs.GetAccessKeysFilterInputArgs
        ///             {
        ///                 Name = "access_key_ids",
        ///                 Values = new[]
        ///                 {
        ///                     "ABCDEFGHIJ0123456789",
        ///                     "0123456789ABCDEFGHIJ",
        ///                 },
        ///             },
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// ### Get the access keys of another user
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Outscale = Pulumi.Outscale;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var accessKeys = Outscale.GetAccessKeys.Invoke(new()
        ///     {
        ///         UserName = "user_name",
        ///         Filters = new[]
        ///         {
        ///             new Outscale.Inputs.GetAccessKeysFilterInputArgs
        ///             {
        ///                 Name = "access_key_ids",
        ///                 Values = new[]
        ///                 {
        ///                     "XXXXXXXXX",
        ///                     "YYYYYYYYYY",
        ///                 },
        ///             },
        ///             new Outscale.Inputs.GetAccessKeysFilterInputArgs
        ///             {
        ///                 Name = "states",
        ///                 Values = new[]
        ///                 {
        ///                     "ACTIVE",
        ///                 },
        ///             },
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetAccessKeysResult> Invoke(GetAccessKeysInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetAccessKeysResult>("outscale:index/getAccessKeys:getAccessKeys", args ?? new GetAccessKeysInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAccessKeysArgs : global::Pulumi.InvokeArgs
    {
        [Input("accessKeyIds")]
        private List<string>? _accessKeyIds;
        public List<string> AccessKeyIds
        {
            get => _accessKeyIds ?? (_accessKeyIds = new List<string>());
            set => _accessKeyIds = value;
        }

        [Input("filters")]
        private List<Inputs.GetAccessKeysFilterArgs>? _filters;

        /// <summary>
        /// A combination of a filter name and one or more filter values. You can specify this argument for as many filter names as you need. The filter name can be any of the following:
        /// </summary>
        public List<Inputs.GetAccessKeysFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetAccessKeysFilterArgs>());
            set => _filters = value;
        }

        [Input("states")]
        private List<string>? _states;
        public List<string> States
        {
            get => _states ?? (_states = new List<string>());
            set => _states = value;
        }

        /// <summary>
        /// The name of the EIM user. By default, the user who sends the request (which can be the root account).
        /// </summary>
        [Input("userName")]
        public string? UserName { get; set; }

        public GetAccessKeysArgs()
        {
        }
        public static new GetAccessKeysArgs Empty => new GetAccessKeysArgs();
    }

    public sealed class GetAccessKeysInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("accessKeyIds")]
        private InputList<string>? _accessKeyIds;
        public InputList<string> AccessKeyIds
        {
            get => _accessKeyIds ?? (_accessKeyIds = new InputList<string>());
            set => _accessKeyIds = value;
        }

        [Input("filters")]
        private InputList<Inputs.GetAccessKeysFilterInputArgs>? _filters;

        /// <summary>
        /// A combination of a filter name and one or more filter values. You can specify this argument for as many filter names as you need. The filter name can be any of the following:
        /// </summary>
        public InputList<Inputs.GetAccessKeysFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetAccessKeysFilterInputArgs>());
            set => _filters = value;
        }

        [Input("states")]
        private InputList<string>? _states;
        public InputList<string> States
        {
            get => _states ?? (_states = new InputList<string>());
            set => _states = value;
        }

        /// <summary>
        /// The name of the EIM user. By default, the user who sends the request (which can be the root account).
        /// </summary>
        [Input("userName")]
        public Input<string>? UserName { get; set; }

        public GetAccessKeysInvokeArgs()
        {
        }
        public static new GetAccessKeysInvokeArgs Empty => new GetAccessKeysInvokeArgs();
    }


    [OutputType]
    public sealed class GetAccessKeysResult
    {
        public readonly ImmutableArray<string> AccessKeyIds;
        /// <summary>
        /// A list of access keys.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetAccessKeysAccessKeyResult> AccessKeys;
        public readonly ImmutableArray<Outputs.GetAccessKeysFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string RequestId;
        public readonly ImmutableArray<string> States;
        public readonly string? UserName;

        [OutputConstructor]
        private GetAccessKeysResult(
            ImmutableArray<string> accessKeyIds,

            ImmutableArray<Outputs.GetAccessKeysAccessKeyResult> accessKeys,

            ImmutableArray<Outputs.GetAccessKeysFilterResult> filters,

            string id,

            string requestId,

            ImmutableArray<string> states,

            string? userName)
        {
            AccessKeyIds = accessKeyIds;
            AccessKeys = accessKeys;
            Filters = filters;
            Id = id;
            RequestId = requestId;
            States = states;
            UserName = userName;
        }
    }
}
