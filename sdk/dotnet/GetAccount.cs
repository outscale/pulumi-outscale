// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Outscale
{
    public static class GetAccount
    {
        /// <summary>
        /// Provides information about an account.
        /// 
        /// For more information on this resource, see the [User Guide](https://docs.outscale.com/en/userguide/About-Your-Account.html).  
        /// For more information on this resource actions, see the [API documentation](https://docs.outscale.com/api#3ds-outscale-api-account).
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Outscale = Pulumi.Outscale;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var account01 = Outscale.GetAccount.Invoke();
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetAccountResult> InvokeAsync(InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAccountResult>("outscale:index/getAccount:getAccount", InvokeArgs.Empty, options.WithDefaults());

        /// <summary>
        /// Provides information about an account.
        /// 
        /// For more information on this resource, see the [User Guide](https://docs.outscale.com/en/userguide/About-Your-Account.html).  
        /// For more information on this resource actions, see the [API documentation](https://docs.outscale.com/api#3ds-outscale-api-account).
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Outscale = Pulumi.Outscale;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var account01 = Outscale.GetAccount.Invoke();
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetAccountResult> Invoke(InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAccountResult>("outscale:index/getAccount:getAccount", InvokeArgs.Empty, options.WithDefaults());
    }


    [OutputType]
    public sealed class GetAccountResult
    {
        /// <summary>
        /// The ID of the account.
        /// </summary>
        public readonly string AccountId;
        /// <summary>
        /// One or more additional email addresses for the account. These addresses are used for notifications only.
        /// </summary>
        public readonly ImmutableArray<string> AdditionalEmails;
        /// <summary>
        /// The city of the account owner.
        /// </summary>
        public readonly string City;
        /// <summary>
        /// The name of the company for the account.
        /// </summary>
        public readonly string CompanyName;
        /// <summary>
        /// The country of the account owner.
        /// </summary>
        public readonly string Country;
        /// <summary>
        /// The ID of the customer.
        /// </summary>
        public readonly string CustomerId;
        /// <summary>
        /// The main email address for the account. This address is used for your credentials and for notifications.
        /// </summary>
        public readonly string Email;
        /// <summary>
        /// The first name of the account owner.
        /// </summary>
        public readonly string FirstName;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The job title of the account owner.
        /// </summary>
        public readonly string JobTitle;
        /// <summary>
        /// The last name of the account owner.
        /// </summary>
        public readonly string LastName;
        /// <summary>
        /// The mobile phone number of the account owner.
        /// </summary>
        public readonly string MobileNumber;
        /// <summary>
        /// The landline phone number of the account owner.
        /// </summary>
        public readonly string PhoneNumber;
        public readonly string RequestId;
        /// <summary>
        /// The state/province of the account.
        /// </summary>
        public readonly string StateProvince;
        /// <summary>
        /// The value added tax (VAT) number for the account.
        /// </summary>
        public readonly string VatNumber;
        /// <summary>
        /// The ZIP code of the city.
        /// </summary>
        public readonly string ZipCode;

        [OutputConstructor]
        private GetAccountResult(
            string accountId,

            ImmutableArray<string> additionalEmails,

            string city,

            string companyName,

            string country,

            string customerId,

            string email,

            string firstName,

            string id,

            string jobTitle,

            string lastName,

            string mobileNumber,

            string phoneNumber,

            string requestId,

            string stateProvince,

            string vatNumber,

            string zipCode)
        {
            AccountId = accountId;
            AdditionalEmails = additionalEmails;
            City = city;
            CompanyName = companyName;
            Country = country;
            CustomerId = customerId;
            Email = email;
            FirstName = firstName;
            Id = id;
            JobTitle = jobTitle;
            LastName = lastName;
            MobileNumber = mobileNumber;
            PhoneNumber = phoneNumber;
            RequestId = requestId;
            StateProvince = stateProvince;
            VatNumber = vatNumber;
            ZipCode = zipCode;
        }
    }
}
