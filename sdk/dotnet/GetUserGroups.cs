// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Outscale
{
    public static class GetUserGroups
    {
        /// <summary>
        /// Provides information about user groups.
        /// 
        /// For more information on this resource, see the [User Guide](https://docs.outscale.com/en/userguide/About-EIM-Groups.html).  
        /// For more information on this resource actions, see the [API documentation](https://docs.outscale.com/api.html#createusergroup).
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Outscale = Pulumi.Outscale;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var usegroups01 = Outscale.GetUserGroups.Invoke(new()
        ///     {
        ///         Filters = new[]
        ///         {
        ///             new Outscale.Inputs.GetUserGroupsFilterInputArgs
        ///             {
        ///                 Name = "user_group_ids",
        ///                 Values = new[]
        ///                 {
        ///                     "XXXXXXXXX",
        ///                     "YYYYYYYYYY",
        ///                 },
        ///             },
        ///             new Outscale.Inputs.GetUserGroupsFilterInputArgs
        ///             {
        ///                 Name = "path_prefix",
        ///                 Values = new[]
        ///                 {
        ///                     "/",
        ///                 },
        ///             },
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetUserGroupsResult> InvokeAsync(GetUserGroupsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetUserGroupsResult>("outscale:index/getUserGroups:getUserGroups", args ?? new GetUserGroupsArgs(), options.WithDefaults());

        /// <summary>
        /// Provides information about user groups.
        /// 
        /// For more information on this resource, see the [User Guide](https://docs.outscale.com/en/userguide/About-EIM-Groups.html).  
        /// For more information on this resource actions, see the [API documentation](https://docs.outscale.com/api.html#createusergroup).
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Outscale = Pulumi.Outscale;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var usegroups01 = Outscale.GetUserGroups.Invoke(new()
        ///     {
        ///         Filters = new[]
        ///         {
        ///             new Outscale.Inputs.GetUserGroupsFilterInputArgs
        ///             {
        ///                 Name = "user_group_ids",
        ///                 Values = new[]
        ///                 {
        ///                     "XXXXXXXXX",
        ///                     "YYYYYYYYYY",
        ///                 },
        ///             },
        ///             new Outscale.Inputs.GetUserGroupsFilterInputArgs
        ///             {
        ///                 Name = "path_prefix",
        ///                 Values = new[]
        ///                 {
        ///                     "/",
        ///                 },
        ///             },
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetUserGroupsResult> Invoke(GetUserGroupsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetUserGroupsResult>("outscale:index/getUserGroups:getUserGroups", args ?? new GetUserGroupsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Provides information about user groups.
        /// 
        /// For more information on this resource, see the [User Guide](https://docs.outscale.com/en/userguide/About-EIM-Groups.html).  
        /// For more information on this resource actions, see the [API documentation](https://docs.outscale.com/api.html#createusergroup).
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Outscale = Pulumi.Outscale;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var usegroups01 = Outscale.GetUserGroups.Invoke(new()
        ///     {
        ///         Filters = new[]
        ///         {
        ///             new Outscale.Inputs.GetUserGroupsFilterInputArgs
        ///             {
        ///                 Name = "user_group_ids",
        ///                 Values = new[]
        ///                 {
        ///                     "XXXXXXXXX",
        ///                     "YYYYYYYYYY",
        ///                 },
        ///             },
        ///             new Outscale.Inputs.GetUserGroupsFilterInputArgs
        ///             {
        ///                 Name = "path_prefix",
        ///                 Values = new[]
        ///                 {
        ///                     "/",
        ///                 },
        ///             },
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetUserGroupsResult> Invoke(GetUserGroupsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetUserGroupsResult>("outscale:index/getUserGroups:getUserGroups", args ?? new GetUserGroupsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetUserGroupsArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private List<Inputs.GetUserGroupsFilterArgs>? _filters;
        public List<Inputs.GetUserGroupsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetUserGroupsFilterArgs>());
            set => _filters = value;
        }

        public GetUserGroupsArgs()
        {
        }
        public static new GetUserGroupsArgs Empty => new GetUserGroupsArgs();
    }

    public sealed class GetUserGroupsInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private InputList<Inputs.GetUserGroupsFilterInputArgs>? _filters;
        public InputList<Inputs.GetUserGroupsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetUserGroupsFilterInputArgs>());
            set => _filters = value;
        }

        public GetUserGroupsInvokeArgs()
        {
        }
        public static new GetUserGroupsInvokeArgs Empty => new GetUserGroupsInvokeArgs();
    }


    [OutputType]
    public sealed class GetUserGroupsResult
    {
        public readonly ImmutableArray<Outputs.GetUserGroupsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// A list of user groups.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetUserGroupsUserGroupResult> UserGroups;

        [OutputConstructor]
        private GetUserGroupsResult(
            ImmutableArray<Outputs.GetUserGroupsFilterResult> filters,

            string id,

            ImmutableArray<Outputs.GetUserGroupsUserGroupResult> userGroups)
        {
            Filters = filters;
            Id = id;
            UserGroups = userGroups;
        }
    }
}
