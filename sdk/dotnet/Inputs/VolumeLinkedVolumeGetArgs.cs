// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Outscale.Inputs
{

    public sealed class VolumeLinkedVolumeGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// If true, the volume is deleted when terminating the VM. If false, the volume is not deleted when terminating the VM.
        /// </summary>
        [Input("deleteOnVmDeletion", required: true)]
        public Input<bool> DeleteOnVmDeletion { get; set; } = null!;

        /// <summary>
        /// The name of the device.
        /// </summary>
        [Input("deviceName", required: true)]
        public Input<string> DeviceName { get; set; } = null!;

        /// <summary>
        /// The state of the volume (`creating` \| `available` \| `in-use` \| `updating` \| `deleting` \| `error`).
        /// </summary>
        [Input("state", required: true)]
        public Input<string> State { get; set; } = null!;

        /// <summary>
        /// The ID of the VM.
        /// </summary>
        [Input("vmId", required: true)]
        public Input<string> VmId { get; set; } = null!;

        /// <summary>
        /// The ID of the volume.
        /// </summary>
        [Input("volumeId", required: true)]
        public Input<string> VolumeId { get; set; } = null!;

        public VolumeLinkedVolumeGetArgs()
        {
        }
        public static new VolumeLinkedVolumeGetArgs Empty => new VolumeLinkedVolumeGetArgs();
    }
}
