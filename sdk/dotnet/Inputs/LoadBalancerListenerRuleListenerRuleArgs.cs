// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Outscale.Inputs
{

    public sealed class LoadBalancerListenerRuleListenerRuleArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The type of action for the rule (always `forward`).
        /// </summary>
        [Input("action")]
        public Input<string>? Action { get; set; }

        /// <summary>
        /// A host-name pattern for the rule, with a maximum length of 128 characters. This host-name pattern supports maximum three wildcards, and must not contain any special characters except `-.?`.
        /// </summary>
        [Input("hostNamePattern")]
        public Input<string>? HostNamePattern { get; set; }

        /// <summary>
        /// The ID of the listener.
        /// </summary>
        [Input("listenerId")]
        public Input<int>? ListenerId { get; set; }

        /// <summary>
        /// The ID of the listener rule.
        /// </summary>
        [Input("listenerRuleId")]
        public Input<int>? ListenerRuleId { get; set; }

        /// <summary>
        /// A human-readable name for the listener rule.
        /// </summary>
        [Input("listenerRuleName", required: true)]
        public Input<string> ListenerRuleName { get; set; } = null!;

        /// <summary>
        /// A path pattern for the rule, with a maximum length of 128 characters. This path pattern supports maximum three wildcards, and must not contain any special characters except `_-.$/~&amp;quot;'@:+?`.
        /// </summary>
        [Input("pathPattern")]
        public Input<string>? PathPattern { get; set; }

        /// <summary>
        /// The priority level of the listener rule, between `1` and `19999` both included. Each rule must have a unique priority level. Otherwise, an error is returned.
        /// </summary>
        [Input("priority", required: true)]
        public Input<int> Priority { get; set; } = null!;

        public LoadBalancerListenerRuleListenerRuleArgs()
        {
        }
        public static new LoadBalancerListenerRuleListenerRuleArgs Empty => new LoadBalancerListenerRuleListenerRuleArgs();
    }
}
