// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Outscale.Inputs
{

    public sealed class LoadBalancerAttributesHealthCheckGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The number of seconds between two requests (between `5` and `600` both included).
        /// </summary>
        [Input("checkInterval")]
        public Input<int>? CheckInterval { get; set; }

        /// <summary>
        /// The number of consecutive successful requests before considering the VM as healthy (between `2` and `10` both included).
        /// </summary>
        [Input("healthyThreshold")]
        public Input<int>? HealthyThreshold { get; set; }

        /// <summary>
        /// If you use the HTTP or HTTPS protocols, the request URL path.
        /// </summary>
        [Input("path")]
        public Input<string>? Path { get; set; }

        /// <summary>
        /// The port number (between `1` and `65535`, both included).
        /// </summary>
        [Input("port", required: true)]
        public Input<int> Port { get; set; } = null!;

        /// <summary>
        /// The protocol for the URL of the VM (`HTTP` \| `HTTPS` \| `TCP` \| `SSL`).
        /// </summary>
        [Input("protocol", required: true)]
        public Input<string> Protocol { get; set; } = null!;

        /// <summary>
        /// The maximum waiting time for a response before considering the VM as unhealthy, in seconds (between `2` and `60` both included).
        /// </summary>
        [Input("timeout")]
        public Input<int>? Timeout { get; set; }

        /// <summary>
        /// The number of consecutive failed requests before considering the VM as unhealthy (between `2` and `10` both included).
        /// </summary>
        [Input("unhealthyThreshold")]
        public Input<int>? UnhealthyThreshold { get; set; }

        public LoadBalancerAttributesHealthCheckGetArgs()
        {
        }
        public static new LoadBalancerAttributesHealthCheckGetArgs Empty => new LoadBalancerAttributesHealthCheckGetArgs();
    }
}
