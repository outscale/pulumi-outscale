// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Outscale.Inputs
{

    public sealed class GetImageBlockDeviceMappingInputArgs : global::Pulumi.ResourceArgs
    {
        [Input("bsus", required: true)]
        private InputList<Inputs.GetImageBlockDeviceMappingBsusInputArgs>? _bsus;

        /// <summary>
        /// Information about the BSU volume to create.
        /// </summary>
        public InputList<Inputs.GetImageBlockDeviceMappingBsusInputArgs> Bsus
        {
            get => _bsus ?? (_bsus = new InputList<Inputs.GetImageBlockDeviceMappingBsusInputArgs>());
            set => _bsus = value;
        }

        /// <summary>
        /// The device name for the volume. For a root device, you must use `/dev/sda1`. For other volumes, you must use `/dev/sdX`, `/dev/sdXX`, `/dev/xvdX`, or `/dev/xvdXX` (where the first `X` is a letter between `b` and `z`, and the second `X` is a letter between `a` and `z`).
        /// </summary>
        [Input("deviceName", required: true)]
        public Input<string> DeviceName { get; set; } = null!;

        /// <summary>
        /// The name of the virtual device (`ephemeralN`).
        /// </summary>
        [Input("virtualDeviceName", required: true)]
        public Input<string> VirtualDeviceName { get; set; } = null!;

        public GetImageBlockDeviceMappingInputArgs()
        {
        }
        public static new GetImageBlockDeviceMappingInputArgs Empty => new GetImageBlockDeviceMappingInputArgs();
    }
}
