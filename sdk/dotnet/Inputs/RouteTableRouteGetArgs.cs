// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Outscale.Inputs
{

    public sealed class RouteTableRouteGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The method used to create the route.
        /// </summary>
        [Input("creationMethod", required: true)]
        public Input<string> CreationMethod { get; set; } = null!;

        /// <summary>
        /// The IP range used for the destination match, in CIDR notation (for example, `10.0.0.0/24`).
        /// </summary>
        [Input("destinationIpRange", required: true)]
        public Input<string> DestinationIpRange { get; set; } = null!;

        /// <summary>
        /// The ID of the OUTSCALE service.
        /// </summary>
        [Input("destinationServiceId", required: true)]
        public Input<string> DestinationServiceId { get; set; } = null!;

        /// <summary>
        /// The ID of the internet service or virtual gateway attached to the Net.
        /// </summary>
        [Input("gatewayId", required: true)]
        public Input<string> GatewayId { get; set; } = null!;

        /// <summary>
        /// The ID of a NAT service attached to the Net.
        /// </summary>
        [Input("natServiceId", required: true)]
        public Input<string> NatServiceId { get; set; } = null!;

        /// <summary>
        /// The ID of the Net access point.
        /// </summary>
        [Input("netAccessPointId", required: true)]
        public Input<string> NetAccessPointId { get; set; } = null!;

        /// <summary>
        /// The ID of the Net peering.
        /// </summary>
        [Input("netPeeringId", required: true)]
        public Input<string> NetPeeringId { get; set; } = null!;

        /// <summary>
        /// The ID of the NIC.
        /// </summary>
        [Input("nicId", required: true)]
        public Input<string> NicId { get; set; } = null!;

        /// <summary>
        /// The state of a route in the route table (always `active`).
        /// </summary>
        [Input("state", required: true)]
        public Input<string> State { get; set; } = null!;

        /// <summary>
        /// The account ID of the owner of the VM.
        /// </summary>
        [Input("vmAccountId", required: true)]
        public Input<string> VmAccountId { get; set; } = null!;

        /// <summary>
        /// The ID of a VM specified in a route in the table.
        /// </summary>
        [Input("vmId", required: true)]
        public Input<string> VmId { get; set; } = null!;

        public RouteTableRouteGetArgs()
        {
        }
        public static new RouteTableRouteGetArgs Empty => new RouteTableRouteGetArgs();
    }
}
