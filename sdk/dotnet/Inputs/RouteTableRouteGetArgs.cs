// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Outscale.Inputs
{

    public sealed class RouteTableRouteGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The method used to create the route.
        /// </summary>
        [Input("creationMethod")]
        public Input<string>? CreationMethod { get; set; }

        /// <summary>
        /// The IP range used for the destination match, in CIDR notation (for example, `10.0.0.0/24`).
        /// </summary>
        [Input("destinationIpRange")]
        public Input<string>? DestinationIpRange { get; set; }

        /// <summary>
        /// The ID of the OUTSCALE service.
        /// </summary>
        [Input("destinationServiceId")]
        public Input<string>? DestinationServiceId { get; set; }

        /// <summary>
        /// The ID of the Internet service or virtual gateway attached to the Net.
        /// </summary>
        [Input("gatewayId")]
        public Input<string>? GatewayId { get; set; }

        /// <summary>
        /// The ID of a NAT service attached to the Net.
        /// </summary>
        [Input("natServiceId")]
        public Input<string>? NatServiceId { get; set; }

        /// <summary>
        /// The ID of the Net access point.
        /// </summary>
        [Input("netAccessPointId")]
        public Input<string>? NetAccessPointId { get; set; }

        /// <summary>
        /// The ID of the Net peering.
        /// </summary>
        [Input("netPeeringId")]
        public Input<string>? NetPeeringId { get; set; }

        /// <summary>
        /// The ID of the NIC.
        /// </summary>
        [Input("nicId")]
        public Input<string>? NicId { get; set; }

        /// <summary>
        /// The state of a route in the route table (always `active`).
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// The account ID of the owner of the VM.
        /// </summary>
        [Input("vmAccountId")]
        public Input<string>? VmAccountId { get; set; }

        /// <summary>
        /// The ID of a VM specified in a route in the table.
        /// </summary>
        [Input("vmId")]
        public Input<string>? VmId { get; set; }

        public RouteTableRouteGetArgs()
        {
        }
        public static new RouteTableRouteGetArgs Empty => new RouteTableRouteGetArgs();
    }
}
