// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Outscale
{
    public static class GetSnapshots
    {
        /// <summary>
        /// Provides information about snapshots.
        /// 
        /// For more information on this resource, see the [User Guide](https://docs.outscale.com/en/userguide/About-Snapshots.html).  
        /// For more information on this resource actions, see the [API documentation](https://docs.outscale.com/api#3ds-outscale-api-snapshot).
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Outscale = Pulumi.Outscale;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var snapshots01 = Outscale.GetSnapshots.Invoke(new()
        ///     {
        ///         Filters = new[]
        ///         {
        ///             new Outscale.Inputs.GetSnapshotsFilterInputArgs
        ///             {
        ///                 Name = "tag_keys",
        ///                 Values = new[]
        ///                 {
        ///                     "env",
        ///                 },
        ///             },
        ///             new Outscale.Inputs.GetSnapshotsFilterInputArgs
        ///             {
        ///                 Name = "tag_values",
        ///                 Values = new[]
        ///                 {
        ///                     "prod",
        ///                     "test",
        ///                 },
        ///             },
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetSnapshotsResult> InvokeAsync(GetSnapshotsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSnapshotsResult>("outscale:index/getSnapshots:getSnapshots", args ?? new GetSnapshotsArgs(), options.WithDefaults());

        /// <summary>
        /// Provides information about snapshots.
        /// 
        /// For more information on this resource, see the [User Guide](https://docs.outscale.com/en/userguide/About-Snapshots.html).  
        /// For more information on this resource actions, see the [API documentation](https://docs.outscale.com/api#3ds-outscale-api-snapshot).
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Outscale = Pulumi.Outscale;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var snapshots01 = Outscale.GetSnapshots.Invoke(new()
        ///     {
        ///         Filters = new[]
        ///         {
        ///             new Outscale.Inputs.GetSnapshotsFilterInputArgs
        ///             {
        ///                 Name = "tag_keys",
        ///                 Values = new[]
        ///                 {
        ///                     "env",
        ///                 },
        ///             },
        ///             new Outscale.Inputs.GetSnapshotsFilterInputArgs
        ///             {
        ///                 Name = "tag_values",
        ///                 Values = new[]
        ///                 {
        ///                     "prod",
        ///                     "test",
        ///                 },
        ///             },
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetSnapshotsResult> Invoke(GetSnapshotsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSnapshotsResult>("outscale:index/getSnapshots:getSnapshots", args ?? new GetSnapshotsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSnapshotsArgs : global::Pulumi.InvokeArgs
    {
        [Input("accountIds")]
        private List<string>? _accountIds;

        /// <summary>
        /// The account ID of the owner of the snapshot.
        /// </summary>
        public List<string> AccountIds
        {
            get => _accountIds ?? (_accountIds = new List<string>());
            set => _accountIds = value;
        }

        [Input("filters")]
        private List<Inputs.GetSnapshotsFilterArgs>? _filters;

        /// <summary>
        /// A combination of a filter name and one or more filter values. You can specify this argument for as many filter names as you need. The filter name can be any of the following:
        /// </summary>
        public List<Inputs.GetSnapshotsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetSnapshotsFilterArgs>());
            set => _filters = value;
        }

        [Input("permissionToCreateVolumes")]
        private List<string>? _permissionToCreateVolumes;
        public List<string> PermissionToCreateVolumes
        {
            get => _permissionToCreateVolumes ?? (_permissionToCreateVolumes = new List<string>());
            set => _permissionToCreateVolumes = value;
        }

        [Input("snapshotIds")]
        private List<string>? _snapshotIds;

        /// <summary>
        /// The ID of the snapshot.
        /// </summary>
        public List<string> SnapshotIds
        {
            get => _snapshotIds ?? (_snapshotIds = new List<string>());
            set => _snapshotIds = value;
        }

        public GetSnapshotsArgs()
        {
        }
        public static new GetSnapshotsArgs Empty => new GetSnapshotsArgs();
    }

    public sealed class GetSnapshotsInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("accountIds")]
        private InputList<string>? _accountIds;

        /// <summary>
        /// The account ID of the owner of the snapshot.
        /// </summary>
        public InputList<string> AccountIds
        {
            get => _accountIds ?? (_accountIds = new InputList<string>());
            set => _accountIds = value;
        }

        [Input("filters")]
        private InputList<Inputs.GetSnapshotsFilterInputArgs>? _filters;

        /// <summary>
        /// A combination of a filter name and one or more filter values. You can specify this argument for as many filter names as you need. The filter name can be any of the following:
        /// </summary>
        public InputList<Inputs.GetSnapshotsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetSnapshotsFilterInputArgs>());
            set => _filters = value;
        }

        [Input("permissionToCreateVolumes")]
        private InputList<string>? _permissionToCreateVolumes;
        public InputList<string> PermissionToCreateVolumes
        {
            get => _permissionToCreateVolumes ?? (_permissionToCreateVolumes = new InputList<string>());
            set => _permissionToCreateVolumes = value;
        }

        [Input("snapshotIds")]
        private InputList<string>? _snapshotIds;

        /// <summary>
        /// The ID of the snapshot.
        /// </summary>
        public InputList<string> SnapshotIds
        {
            get => _snapshotIds ?? (_snapshotIds = new InputList<string>());
            set => _snapshotIds = value;
        }

        public GetSnapshotsInvokeArgs()
        {
        }
        public static new GetSnapshotsInvokeArgs Empty => new GetSnapshotsInvokeArgs();
    }


    [OutputType]
    public sealed class GetSnapshotsResult
    {
        /// <summary>
        /// The account ID of the owner of the snapshot.
        /// </summary>
        public readonly ImmutableArray<string> AccountIds;
        public readonly ImmutableArray<Outputs.GetSnapshotsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<string> PermissionToCreateVolumes;
        public readonly string RequestId;
        /// <summary>
        /// The ID of the snapshot.
        /// </summary>
        public readonly ImmutableArray<string> SnapshotIds;
        /// <summary>
        /// Information about one or more snapshots and their permissions.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSnapshotsSnapshotResult> Snapshots;

        [OutputConstructor]
        private GetSnapshotsResult(
            ImmutableArray<string> accountIds,

            ImmutableArray<Outputs.GetSnapshotsFilterResult> filters,

            string id,

            ImmutableArray<string> permissionToCreateVolumes,

            string requestId,

            ImmutableArray<string> snapshotIds,

            ImmutableArray<Outputs.GetSnapshotsSnapshotResult> snapshots)
        {
            AccountIds = accountIds;
            Filters = filters;
            Id = id;
            PermissionToCreateVolumes = permissionToCreateVolumes;
            RequestId = requestId;
            SnapshotIds = snapshotIds;
            Snapshots = snapshots;
        }
    }
}
