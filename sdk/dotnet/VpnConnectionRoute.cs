// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Outscale
{
    /// <summary>
    /// Manages a VPN connection route.
    /// 
    /// For more information on this resource, see the [User Guide](https://docs.outscale.com/en/userguide/About-Routing-Configuration-for-VPN-Connections.html).\
    /// For more information on this resource actions, see the [API documentation](https://docs.outscale.com/api#3ds-outscale-api-vpnconnection).
    /// 
    /// ## Example Usage
    /// 
    /// ### Required resources
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Outscale = Pulumi.Outscale;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var clientGateway01 = new Outscale.ClientGateway("client_gateway01", new()
    ///     {
    ///         BgpAsn = 65000,
    ///         PublicIp = "111.11.11.111",
    ///         ConnectionType = "ipsec.1",
    ///     });
    /// 
    ///     var virtualGateway01 = new Outscale.VirtualGateway("virtual_gateway01", new()
    ///     {
    ///         ConnectionType = "ipsec.1",
    ///     });
    /// 
    ///     var vpnConnection01 = new Outscale.VpnConnection("vpn_connection01", new()
    ///     {
    ///         ClientGatewayId = clientGateway01.ClientGatewayId,
    ///         VirtualGatewayId = virtualGateway01.VirtualGatewayId,
    ///         ConnectionType = "ipsec.1",
    ///         StaticRoutesOnly = true,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ### Create a static route to a VPN connection
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Outscale = Pulumi.Outscale;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var vpnConnectionRoute01 = new Outscale.VpnConnectionRoute("vpn_connection_route01", new()
    ///     {
    ///         VpnConnectionId = vpnConnection01.VpnConnectionId,
    ///         DestinationIpRange = "10.0.0.0/16",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// A VPN connection route can be imported using the VPN connection ID and the route destination IP range. For example:
    /// 
    /// console
    /// 
    /// ```sh
    /// $ pulumi import outscale:index/vpnConnectionRoute:VpnConnectionRoute ImportedRoute vpn-12345678_10.0.0.0/0
    /// ```
    /// </summary>
    [OutscaleResourceType("outscale:index/vpnConnectionRoute:VpnConnectionRoute")]
    public partial class VpnConnectionRoute : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The network prefix of the route, in CIDR notation (for example, `10.12.0.0/16`).
        /// </summary>
        [Output("destinationIpRange")]
        public Output<string> DestinationIpRange { get; private set; } = null!;

        [Output("requestId")]
        public Output<string> RequestId { get; private set; } = null!;

        /// <summary>
        /// The ID of the target VPN connection of the static route.
        /// </summary>
        [Output("vpnConnectionId")]
        public Output<string> VpnConnectionId { get; private set; } = null!;


        /// <summary>
        /// Create a VpnConnectionRoute resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public VpnConnectionRoute(string name, VpnConnectionRouteArgs args, CustomResourceOptions? options = null)
            : base("outscale:index/vpnConnectionRoute:VpnConnectionRoute", name, args ?? new VpnConnectionRouteArgs(), MakeResourceOptions(options, ""))
        {
        }

        private VpnConnectionRoute(string name, Input<string> id, VpnConnectionRouteState? state = null, CustomResourceOptions? options = null)
            : base("outscale:index/vpnConnectionRoute:VpnConnectionRoute", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing VpnConnectionRoute resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static VpnConnectionRoute Get(string name, Input<string> id, VpnConnectionRouteState? state = null, CustomResourceOptions? options = null)
        {
            return new VpnConnectionRoute(name, id, state, options);
        }
    }

    public sealed class VpnConnectionRouteArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The network prefix of the route, in CIDR notation (for example, `10.12.0.0/16`).
        /// </summary>
        [Input("destinationIpRange", required: true)]
        public Input<string> DestinationIpRange { get; set; } = null!;

        /// <summary>
        /// The ID of the target VPN connection of the static route.
        /// </summary>
        [Input("vpnConnectionId", required: true)]
        public Input<string> VpnConnectionId { get; set; } = null!;

        public VpnConnectionRouteArgs()
        {
        }
        public static new VpnConnectionRouteArgs Empty => new VpnConnectionRouteArgs();
    }

    public sealed class VpnConnectionRouteState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The network prefix of the route, in CIDR notation (for example, `10.12.0.0/16`).
        /// </summary>
        [Input("destinationIpRange")]
        public Input<string>? DestinationIpRange { get; set; }

        [Input("requestId")]
        public Input<string>? RequestId { get; set; }

        /// <summary>
        /// The ID of the target VPN connection of the static route.
        /// </summary>
        [Input("vpnConnectionId")]
        public Input<string>? VpnConnectionId { get; set; }

        public VpnConnectionRouteState()
        {
        }
        public static new VpnConnectionRouteState Empty => new VpnConnectionRouteState();
    }
}
