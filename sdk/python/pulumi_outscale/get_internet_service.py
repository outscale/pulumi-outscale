# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities
from . import outputs
from ._inputs import *

__all__ = [
    'GetInternetServiceResult',
    'AwaitableGetInternetServiceResult',
    'get_internet_service',
    'get_internet_service_output',
]

@pulumi.output_type
class GetInternetServiceResult:
    """
    A collection of values returned by getInternetService.
    """
    def __init__(__self__, filters=None, id=None, internet_service_id=None, net_id=None, request_id=None, state=None, tags=None):
        if filters and not isinstance(filters, list):
            raise TypeError("Expected argument 'filters' to be a list")
        pulumi.set(__self__, "filters", filters)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if internet_service_id and not isinstance(internet_service_id, str):
            raise TypeError("Expected argument 'internet_service_id' to be a str")
        pulumi.set(__self__, "internet_service_id", internet_service_id)
        if net_id and not isinstance(net_id, str):
            raise TypeError("Expected argument 'net_id' to be a str")
        pulumi.set(__self__, "net_id", net_id)
        if request_id and not isinstance(request_id, str):
            raise TypeError("Expected argument 'request_id' to be a str")
        pulumi.set(__self__, "request_id", request_id)
        if state and not isinstance(state, str):
            raise TypeError("Expected argument 'state' to be a str")
        pulumi.set(__self__, "state", state)
        if tags and not isinstance(tags, list):
            raise TypeError("Expected argument 'tags' to be a list")
        pulumi.set(__self__, "tags", tags)

    @property
    @pulumi.getter
    def filters(self) -> Optional[Sequence['outputs.GetInternetServiceFilterResult']]:
        return pulumi.get(self, "filters")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="internetServiceId")
    def internet_service_id(self) -> str:
        """
        The ID of the Internet service.
        """
        return pulumi.get(self, "internet_service_id")

    @property
    @pulumi.getter(name="netId")
    def net_id(self) -> str:
        """
        The ID of the Net attached to the Internet service.
        """
        return pulumi.get(self, "net_id")

    @property
    @pulumi.getter(name="requestId")
    def request_id(self) -> str:
        return pulumi.get(self, "request_id")

    @property
    @pulumi.getter
    def state(self) -> str:
        """
        The state of the attachment of the Internet service to the Net (always `available`).
        """
        return pulumi.get(self, "state")

    @property
    @pulumi.getter
    def tags(self) -> Sequence['outputs.GetInternetServiceTagResult']:
        """
        One or more tags associated with the Internet service.
        """
        return pulumi.get(self, "tags")


class AwaitableGetInternetServiceResult(GetInternetServiceResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetInternetServiceResult(
            filters=self.filters,
            id=self.id,
            internet_service_id=self.internet_service_id,
            net_id=self.net_id,
            request_id=self.request_id,
            state=self.state,
            tags=self.tags)


def get_internet_service(filters: Optional[Sequence[pulumi.InputType['GetInternetServiceFilterArgs']]] = None,
                         opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetInternetServiceResult:
    """
    Provides information about an Internet service.

    For more information on this resource, see the [User Guide](https://docs.outscale.com/en/userguide/About-Internet-Gateways.html).\\
    For more information on this resource actions, see the [API documentation](https://docs.outscale.com/api#3ds-outscale-api-internetservice).

    ## Example Usage

    ```python
    import pulumi
    import pulumi_outscale as outscale

    internet_service01 = outscale.get_internet_service(filters=[outscale.GetInternetServiceFilterArgs(
        name="internet_service_ids",
        values=["igw-12345678"],
    )])
    ```


    :param Sequence[pulumi.InputType['GetInternetServiceFilterArgs']] filters: A combination of a filter name and one or more filter values. You can specify this argument for as many filter names as you need. The filter name can be any of the following:
    """
    __args__ = dict()
    __args__['filters'] = filters
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('outscale:index/getInternetService:getInternetService', __args__, opts=opts, typ=GetInternetServiceResult).value

    return AwaitableGetInternetServiceResult(
        filters=pulumi.get(__ret__, 'filters'),
        id=pulumi.get(__ret__, 'id'),
        internet_service_id=pulumi.get(__ret__, 'internet_service_id'),
        net_id=pulumi.get(__ret__, 'net_id'),
        request_id=pulumi.get(__ret__, 'request_id'),
        state=pulumi.get(__ret__, 'state'),
        tags=pulumi.get(__ret__, 'tags'))


@_utilities.lift_output_func(get_internet_service)
def get_internet_service_output(filters: Optional[pulumi.Input[Optional[Sequence[pulumi.InputType['GetInternetServiceFilterArgs']]]]] = None,
                                opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetInternetServiceResult]:
    """
    Provides information about an Internet service.

    For more information on this resource, see the [User Guide](https://docs.outscale.com/en/userguide/About-Internet-Gateways.html).\\
    For more information on this resource actions, see the [API documentation](https://docs.outscale.com/api#3ds-outscale-api-internetservice).

    ## Example Usage

    ```python
    import pulumi
    import pulumi_outscale as outscale

    internet_service01 = outscale.get_internet_service(filters=[outscale.GetInternetServiceFilterArgs(
        name="internet_service_ids",
        values=["igw-12345678"],
    )])
    ```


    :param Sequence[pulumi.InputType['GetInternetServiceFilterArgs']] filters: A combination of a filter name and one or more filter values. You can specify this argument for as many filter names as you need. The filter name can be any of the following:
    """
    ...
