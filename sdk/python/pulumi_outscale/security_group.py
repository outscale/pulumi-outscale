# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities
from . import outputs
from ._inputs import *

__all__ = ['SecurityGroupArgs', 'SecurityGroup']

@pulumi.input_type
class SecurityGroupArgs:
    def __init__(__self__, *,
                 description: Optional[pulumi.Input[str]] = None,
                 net_id: Optional[pulumi.Input[str]] = None,
                 remove_default_outbound_rule: Optional[pulumi.Input[bool]] = None,
                 security_group_name: Optional[pulumi.Input[str]] = None,
                 tag: Optional[pulumi.Input[Mapping[str, Any]]] = None,
                 tags: Optional[pulumi.Input[Sequence[pulumi.Input['SecurityGroupTagArgs']]]] = None):
        """
        The set of arguments for constructing a SecurityGroup resource.
        :param pulumi.Input[str] description: A description for the security group, with a maximum length of 255 [ASCII printable characters](https://en.wikipedia.org/wiki/ASCII#Printable_characters).
        :param pulumi.Input[str] net_id: The ID of the Net for the security group.
        :param pulumi.Input[bool] remove_default_outbound_rule: (Net only) By default or if set to false, the security group is created with a default outbound rule allowing all outbound flows. If set to true, the security group is created without a default outbound rule. For an existing security group, setting this parameter to true deletes the security group and creates a new one.
        :param pulumi.Input[str] security_group_name: The name of the security group.<br />
               This name must not start with `sg-`.</br>
               This name must be unique and contain between 1 and 255 ASCII characters. Accented letters are not allowed.
        :param pulumi.Input[Sequence[pulumi.Input['SecurityGroupTagArgs']]] tags: A tag to add to this resource. You can specify this argument several times.
        """
        if description is not None:
            pulumi.set(__self__, "description", description)
        if net_id is not None:
            pulumi.set(__self__, "net_id", net_id)
        if remove_default_outbound_rule is not None:
            pulumi.set(__self__, "remove_default_outbound_rule", remove_default_outbound_rule)
        if security_group_name is not None:
            pulumi.set(__self__, "security_group_name", security_group_name)
        if tag is not None:
            pulumi.set(__self__, "tag", tag)
        if tags is not None:
            pulumi.set(__self__, "tags", tags)

    @property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[str]]:
        """
        A description for the security group, with a maximum length of 255 [ASCII printable characters](https://en.wikipedia.org/wiki/ASCII#Printable_characters).
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "description", value)

    @property
    @pulumi.getter(name="netId")
    def net_id(self) -> Optional[pulumi.Input[str]]:
        """
        The ID of the Net for the security group.
        """
        return pulumi.get(self, "net_id")

    @net_id.setter
    def net_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "net_id", value)

    @property
    @pulumi.getter(name="removeDefaultOutboundRule")
    def remove_default_outbound_rule(self) -> Optional[pulumi.Input[bool]]:
        """
        (Net only) By default or if set to false, the security group is created with a default outbound rule allowing all outbound flows. If set to true, the security group is created without a default outbound rule. For an existing security group, setting this parameter to true deletes the security group and creates a new one.
        """
        return pulumi.get(self, "remove_default_outbound_rule")

    @remove_default_outbound_rule.setter
    def remove_default_outbound_rule(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "remove_default_outbound_rule", value)

    @property
    @pulumi.getter(name="securityGroupName")
    def security_group_name(self) -> Optional[pulumi.Input[str]]:
        """
        The name of the security group.<br />
        This name must not start with `sg-`.</br>
        This name must be unique and contain between 1 and 255 ASCII characters. Accented letters are not allowed.
        """
        return pulumi.get(self, "security_group_name")

    @security_group_name.setter
    def security_group_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "security_group_name", value)

    @property
    @pulumi.getter
    def tag(self) -> Optional[pulumi.Input[Mapping[str, Any]]]:
        return pulumi.get(self, "tag")

    @tag.setter
    def tag(self, value: Optional[pulumi.Input[Mapping[str, Any]]]):
        pulumi.set(self, "tag", value)

    @property
    @pulumi.getter
    def tags(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['SecurityGroupTagArgs']]]]:
        """
        A tag to add to this resource. You can specify this argument several times.
        """
        return pulumi.get(self, "tags")

    @tags.setter
    def tags(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['SecurityGroupTagArgs']]]]):
        pulumi.set(self, "tags", value)


@pulumi.input_type
class _SecurityGroupState:
    def __init__(__self__, *,
                 account_id: Optional[pulumi.Input[str]] = None,
                 description: Optional[pulumi.Input[str]] = None,
                 inbound_rules: Optional[pulumi.Input[Sequence[pulumi.Input['SecurityGroupInboundRuleArgs']]]] = None,
                 net_id: Optional[pulumi.Input[str]] = None,
                 outbound_rules: Optional[pulumi.Input[Sequence[pulumi.Input['SecurityGroupOutboundRuleArgs']]]] = None,
                 remove_default_outbound_rule: Optional[pulumi.Input[bool]] = None,
                 request_id: Optional[pulumi.Input[str]] = None,
                 security_group_id: Optional[pulumi.Input[str]] = None,
                 security_group_name: Optional[pulumi.Input[str]] = None,
                 tag: Optional[pulumi.Input[Mapping[str, Any]]] = None,
                 tags: Optional[pulumi.Input[Sequence[pulumi.Input['SecurityGroupTagArgs']]]] = None):
        """
        Input properties used for looking up and filtering SecurityGroup resources.
        :param pulumi.Input[str] account_id: The account ID that owns the source or destination security group.
        :param pulumi.Input[str] description: A description for the security group, with a maximum length of 255 [ASCII printable characters](https://en.wikipedia.org/wiki/ASCII#Printable_characters).
        :param pulumi.Input[Sequence[pulumi.Input['SecurityGroupInboundRuleArgs']]] inbound_rules: The inbound rules associated with the security group.
        :param pulumi.Input[str] net_id: The ID of the Net for the security group.
        :param pulumi.Input[Sequence[pulumi.Input['SecurityGroupOutboundRuleArgs']]] outbound_rules: The outbound rules associated with the security group.
        :param pulumi.Input[bool] remove_default_outbound_rule: (Net only) By default or if set to false, the security group is created with a default outbound rule allowing all outbound flows. If set to true, the security group is created without a default outbound rule. For an existing security group, setting this parameter to true deletes the security group and creates a new one.
        :param pulumi.Input[str] security_group_id: The ID of the security group.
        :param pulumi.Input[str] security_group_name: The name of the security group.<br />
               This name must not start with `sg-`.</br>
               This name must be unique and contain between 1 and 255 ASCII characters. Accented letters are not allowed.
        :param pulumi.Input[Sequence[pulumi.Input['SecurityGroupTagArgs']]] tags: A tag to add to this resource. You can specify this argument several times.
        """
        if account_id is not None:
            pulumi.set(__self__, "account_id", account_id)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if inbound_rules is not None:
            pulumi.set(__self__, "inbound_rules", inbound_rules)
        if net_id is not None:
            pulumi.set(__self__, "net_id", net_id)
        if outbound_rules is not None:
            pulumi.set(__self__, "outbound_rules", outbound_rules)
        if remove_default_outbound_rule is not None:
            pulumi.set(__self__, "remove_default_outbound_rule", remove_default_outbound_rule)
        if request_id is not None:
            pulumi.set(__self__, "request_id", request_id)
        if security_group_id is not None:
            pulumi.set(__self__, "security_group_id", security_group_id)
        if security_group_name is not None:
            pulumi.set(__self__, "security_group_name", security_group_name)
        if tag is not None:
            pulumi.set(__self__, "tag", tag)
        if tags is not None:
            pulumi.set(__self__, "tags", tags)

    @property
    @pulumi.getter(name="accountId")
    def account_id(self) -> Optional[pulumi.Input[str]]:
        """
        The account ID that owns the source or destination security group.
        """
        return pulumi.get(self, "account_id")

    @account_id.setter
    def account_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "account_id", value)

    @property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[str]]:
        """
        A description for the security group, with a maximum length of 255 [ASCII printable characters](https://en.wikipedia.org/wiki/ASCII#Printable_characters).
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "description", value)

    @property
    @pulumi.getter(name="inboundRules")
    def inbound_rules(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['SecurityGroupInboundRuleArgs']]]]:
        """
        The inbound rules associated with the security group.
        """
        return pulumi.get(self, "inbound_rules")

    @inbound_rules.setter
    def inbound_rules(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['SecurityGroupInboundRuleArgs']]]]):
        pulumi.set(self, "inbound_rules", value)

    @property
    @pulumi.getter(name="netId")
    def net_id(self) -> Optional[pulumi.Input[str]]:
        """
        The ID of the Net for the security group.
        """
        return pulumi.get(self, "net_id")

    @net_id.setter
    def net_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "net_id", value)

    @property
    @pulumi.getter(name="outboundRules")
    def outbound_rules(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['SecurityGroupOutboundRuleArgs']]]]:
        """
        The outbound rules associated with the security group.
        """
        return pulumi.get(self, "outbound_rules")

    @outbound_rules.setter
    def outbound_rules(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['SecurityGroupOutboundRuleArgs']]]]):
        pulumi.set(self, "outbound_rules", value)

    @property
    @pulumi.getter(name="removeDefaultOutboundRule")
    def remove_default_outbound_rule(self) -> Optional[pulumi.Input[bool]]:
        """
        (Net only) By default or if set to false, the security group is created with a default outbound rule allowing all outbound flows. If set to true, the security group is created without a default outbound rule. For an existing security group, setting this parameter to true deletes the security group and creates a new one.
        """
        return pulumi.get(self, "remove_default_outbound_rule")

    @remove_default_outbound_rule.setter
    def remove_default_outbound_rule(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "remove_default_outbound_rule", value)

    @property
    @pulumi.getter(name="requestId")
    def request_id(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "request_id")

    @request_id.setter
    def request_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "request_id", value)

    @property
    @pulumi.getter(name="securityGroupId")
    def security_group_id(self) -> Optional[pulumi.Input[str]]:
        """
        The ID of the security group.
        """
        return pulumi.get(self, "security_group_id")

    @security_group_id.setter
    def security_group_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "security_group_id", value)

    @property
    @pulumi.getter(name="securityGroupName")
    def security_group_name(self) -> Optional[pulumi.Input[str]]:
        """
        The name of the security group.<br />
        This name must not start with `sg-`.</br>
        This name must be unique and contain between 1 and 255 ASCII characters. Accented letters are not allowed.
        """
        return pulumi.get(self, "security_group_name")

    @security_group_name.setter
    def security_group_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "security_group_name", value)

    @property
    @pulumi.getter
    def tag(self) -> Optional[pulumi.Input[Mapping[str, Any]]]:
        return pulumi.get(self, "tag")

    @tag.setter
    def tag(self, value: Optional[pulumi.Input[Mapping[str, Any]]]):
        pulumi.set(self, "tag", value)

    @property
    @pulumi.getter
    def tags(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['SecurityGroupTagArgs']]]]:
        """
        A tag to add to this resource. You can specify this argument several times.
        """
        return pulumi.get(self, "tags")

    @tags.setter
    def tags(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['SecurityGroupTagArgs']]]]):
        pulumi.set(self, "tags", value)


class SecurityGroup(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 description: Optional[pulumi.Input[str]] = None,
                 net_id: Optional[pulumi.Input[str]] = None,
                 remove_default_outbound_rule: Optional[pulumi.Input[bool]] = None,
                 security_group_name: Optional[pulumi.Input[str]] = None,
                 tag: Optional[pulumi.Input[Mapping[str, Any]]] = None,
                 tags: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['SecurityGroupTagArgs']]]]] = None,
                 __props__=None):
        """
        Manages a security group.

        Security groups you create to use in a Net contain a default outbound rule that allows all outbound flows.

        For more information on this resource, see the [User Guide](https://docs.outscale.com/en/userguide/About-Security-Groups.html).\\
        For more information on this resource actions, see the [API documentation](https://docs.outscale.com/api#3ds-outscale-api-securitygroup).

        ## Example Usage
        ### Optional resource

        ```python
        import pulumi
        import pulumi_outscale as outscale

        net01 = outscale.Net("net01", ip_range="10.0.0.0/16")
        ```
        ### Create a security group for a Net

        ```python
        import pulumi
        import pulumi_outscale as outscale

        security_group01 = outscale.SecurityGroup("securityGroup01",
            description="Terraform security group",
            security_group_name="terraform-security-group",
            net_id=outscale_net["net01"]["net_id"])
        ```
        ### Create a security group for a Net without the default outbound rule

        ```python
        import pulumi
        import pulumi_outscale as outscale

        security_group02 = outscale.SecurityGroup("securityGroup02",
            remove_default_outbound_rule=True,
            description="Terraform security group without outbound rule",
            security_group_name="terraform-security-group-empty",
            net_id=outscale_net["net01"]["net_id"])
        ```

        ## Import

        A security group can be imported using its ID. For exampleconsole

        ```sh
         $ pulumi import outscale:index/securityGroup:SecurityGroup ImportedSecurityGroup sg-87654321
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] description: A description for the security group, with a maximum length of 255 [ASCII printable characters](https://en.wikipedia.org/wiki/ASCII#Printable_characters).
        :param pulumi.Input[str] net_id: The ID of the Net for the security group.
        :param pulumi.Input[bool] remove_default_outbound_rule: (Net only) By default or if set to false, the security group is created with a default outbound rule allowing all outbound flows. If set to true, the security group is created without a default outbound rule. For an existing security group, setting this parameter to true deletes the security group and creates a new one.
        :param pulumi.Input[str] security_group_name: The name of the security group.<br />
               This name must not start with `sg-`.</br>
               This name must be unique and contain between 1 and 255 ASCII characters. Accented letters are not allowed.
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['SecurityGroupTagArgs']]]] tags: A tag to add to this resource. You can specify this argument several times.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: Optional[SecurityGroupArgs] = None,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Manages a security group.

        Security groups you create to use in a Net contain a default outbound rule that allows all outbound flows.

        For more information on this resource, see the [User Guide](https://docs.outscale.com/en/userguide/About-Security-Groups.html).\\
        For more information on this resource actions, see the [API documentation](https://docs.outscale.com/api#3ds-outscale-api-securitygroup).

        ## Example Usage
        ### Optional resource

        ```python
        import pulumi
        import pulumi_outscale as outscale

        net01 = outscale.Net("net01", ip_range="10.0.0.0/16")
        ```
        ### Create a security group for a Net

        ```python
        import pulumi
        import pulumi_outscale as outscale

        security_group01 = outscale.SecurityGroup("securityGroup01",
            description="Terraform security group",
            security_group_name="terraform-security-group",
            net_id=outscale_net["net01"]["net_id"])
        ```
        ### Create a security group for a Net without the default outbound rule

        ```python
        import pulumi
        import pulumi_outscale as outscale

        security_group02 = outscale.SecurityGroup("securityGroup02",
            remove_default_outbound_rule=True,
            description="Terraform security group without outbound rule",
            security_group_name="terraform-security-group-empty",
            net_id=outscale_net["net01"]["net_id"])
        ```

        ## Import

        A security group can be imported using its ID. For exampleconsole

        ```sh
         $ pulumi import outscale:index/securityGroup:SecurityGroup ImportedSecurityGroup sg-87654321
        ```

        :param str resource_name: The name of the resource.
        :param SecurityGroupArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(SecurityGroupArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 description: Optional[pulumi.Input[str]] = None,
                 net_id: Optional[pulumi.Input[str]] = None,
                 remove_default_outbound_rule: Optional[pulumi.Input[bool]] = None,
                 security_group_name: Optional[pulumi.Input[str]] = None,
                 tag: Optional[pulumi.Input[Mapping[str, Any]]] = None,
                 tags: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['SecurityGroupTagArgs']]]]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = SecurityGroupArgs.__new__(SecurityGroupArgs)

            __props__.__dict__["description"] = description
            __props__.__dict__["net_id"] = net_id
            __props__.__dict__["remove_default_outbound_rule"] = remove_default_outbound_rule
            __props__.__dict__["security_group_name"] = security_group_name
            __props__.__dict__["tag"] = tag
            __props__.__dict__["tags"] = tags
            __props__.__dict__["account_id"] = None
            __props__.__dict__["inbound_rules"] = None
            __props__.__dict__["outbound_rules"] = None
            __props__.__dict__["request_id"] = None
            __props__.__dict__["security_group_id"] = None
        super(SecurityGroup, __self__).__init__(
            'outscale:index/securityGroup:SecurityGroup',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            account_id: Optional[pulumi.Input[str]] = None,
            description: Optional[pulumi.Input[str]] = None,
            inbound_rules: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['SecurityGroupInboundRuleArgs']]]]] = None,
            net_id: Optional[pulumi.Input[str]] = None,
            outbound_rules: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['SecurityGroupOutboundRuleArgs']]]]] = None,
            remove_default_outbound_rule: Optional[pulumi.Input[bool]] = None,
            request_id: Optional[pulumi.Input[str]] = None,
            security_group_id: Optional[pulumi.Input[str]] = None,
            security_group_name: Optional[pulumi.Input[str]] = None,
            tag: Optional[pulumi.Input[Mapping[str, Any]]] = None,
            tags: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['SecurityGroupTagArgs']]]]] = None) -> 'SecurityGroup':
        """
        Get an existing SecurityGroup resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] account_id: The account ID that owns the source or destination security group.
        :param pulumi.Input[str] description: A description for the security group, with a maximum length of 255 [ASCII printable characters](https://en.wikipedia.org/wiki/ASCII#Printable_characters).
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['SecurityGroupInboundRuleArgs']]]] inbound_rules: The inbound rules associated with the security group.
        :param pulumi.Input[str] net_id: The ID of the Net for the security group.
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['SecurityGroupOutboundRuleArgs']]]] outbound_rules: The outbound rules associated with the security group.
        :param pulumi.Input[bool] remove_default_outbound_rule: (Net only) By default or if set to false, the security group is created with a default outbound rule allowing all outbound flows. If set to true, the security group is created without a default outbound rule. For an existing security group, setting this parameter to true deletes the security group and creates a new one.
        :param pulumi.Input[str] security_group_id: The ID of the security group.
        :param pulumi.Input[str] security_group_name: The name of the security group.<br />
               This name must not start with `sg-`.</br>
               This name must be unique and contain between 1 and 255 ASCII characters. Accented letters are not allowed.
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['SecurityGroupTagArgs']]]] tags: A tag to add to this resource. You can specify this argument several times.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _SecurityGroupState.__new__(_SecurityGroupState)

        __props__.__dict__["account_id"] = account_id
        __props__.__dict__["description"] = description
        __props__.__dict__["inbound_rules"] = inbound_rules
        __props__.__dict__["net_id"] = net_id
        __props__.__dict__["outbound_rules"] = outbound_rules
        __props__.__dict__["remove_default_outbound_rule"] = remove_default_outbound_rule
        __props__.__dict__["request_id"] = request_id
        __props__.__dict__["security_group_id"] = security_group_id
        __props__.__dict__["security_group_name"] = security_group_name
        __props__.__dict__["tag"] = tag
        __props__.__dict__["tags"] = tags
        return SecurityGroup(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="accountId")
    def account_id(self) -> pulumi.Output[str]:
        """
        The account ID that owns the source or destination security group.
        """
        return pulumi.get(self, "account_id")

    @property
    @pulumi.getter
    def description(self) -> pulumi.Output[Optional[str]]:
        """
        A description for the security group, with a maximum length of 255 [ASCII printable characters](https://en.wikipedia.org/wiki/ASCII#Printable_characters).
        """
        return pulumi.get(self, "description")

    @property
    @pulumi.getter(name="inboundRules")
    def inbound_rules(self) -> pulumi.Output[Sequence['outputs.SecurityGroupInboundRule']]:
        """
        The inbound rules associated with the security group.
        """
        return pulumi.get(self, "inbound_rules")

    @property
    @pulumi.getter(name="netId")
    def net_id(self) -> pulumi.Output[str]:
        """
        The ID of the Net for the security group.
        """
        return pulumi.get(self, "net_id")

    @property
    @pulumi.getter(name="outboundRules")
    def outbound_rules(self) -> pulumi.Output[Sequence['outputs.SecurityGroupOutboundRule']]:
        """
        The outbound rules associated with the security group.
        """
        return pulumi.get(self, "outbound_rules")

    @property
    @pulumi.getter(name="removeDefaultOutboundRule")
    def remove_default_outbound_rule(self) -> pulumi.Output[Optional[bool]]:
        """
        (Net only) By default or if set to false, the security group is created with a default outbound rule allowing all outbound flows. If set to true, the security group is created without a default outbound rule. For an existing security group, setting this parameter to true deletes the security group and creates a new one.
        """
        return pulumi.get(self, "remove_default_outbound_rule")

    @property
    @pulumi.getter(name="requestId")
    def request_id(self) -> pulumi.Output[str]:
        return pulumi.get(self, "request_id")

    @property
    @pulumi.getter(name="securityGroupId")
    def security_group_id(self) -> pulumi.Output[str]:
        """
        The ID of the security group.
        """
        return pulumi.get(self, "security_group_id")

    @property
    @pulumi.getter(name="securityGroupName")
    def security_group_name(self) -> pulumi.Output[str]:
        """
        The name of the security group.<br />
        This name must not start with `sg-`.</br>
        This name must be unique and contain between 1 and 255 ASCII characters. Accented letters are not allowed.
        """
        return pulumi.get(self, "security_group_name")

    @property
    @pulumi.getter
    def tag(self) -> pulumi.Output[Optional[Mapping[str, Any]]]:
        return pulumi.get(self, "tag")

    @property
    @pulumi.getter
    def tags(self) -> pulumi.Output[Optional[Sequence['outputs.SecurityGroupTag']]]:
        """
        A tag to add to this resource. You can specify this argument several times.
        """
        return pulumi.get(self, "tags")

