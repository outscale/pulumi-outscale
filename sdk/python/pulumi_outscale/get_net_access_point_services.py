# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities
from . import outputs
from ._inputs import *

__all__ = [
    'GetNetAccessPointServicesResult',
    'AwaitableGetNetAccessPointServicesResult',
    'get_net_access_point_services',
    'get_net_access_point_services_output',
]

@pulumi.output_type
class GetNetAccessPointServicesResult:
    """
    A collection of values returned by getNetAccessPointServices.
    """
    def __init__(__self__, filters=None, id=None, request_id=None, services=None):
        if filters and not isinstance(filters, list):
            raise TypeError("Expected argument 'filters' to be a list")
        pulumi.set(__self__, "filters", filters)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if request_id and not isinstance(request_id, str):
            raise TypeError("Expected argument 'request_id' to be a str")
        pulumi.set(__self__, "request_id", request_id)
        if services and not isinstance(services, list):
            raise TypeError("Expected argument 'services' to be a list")
        pulumi.set(__self__, "services", services)

    @property
    @pulumi.getter
    def filters(self) -> Optional[Sequence['outputs.GetNetAccessPointServicesFilterResult']]:
        return pulumi.get(self, "filters")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="requestId")
    def request_id(self) -> str:
        return pulumi.get(self, "request_id")

    @property
    @pulumi.getter
    def services(self) -> Sequence['outputs.GetNetAccessPointServicesServiceResult']:
        """
        The names of the services you can use for Net access points.
        """
        return pulumi.get(self, "services")


class AwaitableGetNetAccessPointServicesResult(GetNetAccessPointServicesResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetNetAccessPointServicesResult(
            filters=self.filters,
            id=self.id,
            request_id=self.request_id,
            services=self.services)


def get_net_access_point_services(filters: Optional[Sequence[pulumi.InputType['GetNetAccessPointServicesFilterArgs']]] = None,
                                  opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetNetAccessPointServicesResult:
    """
    Provides information about Net access point services.

    For more information on this resource, see the [User Guide](https://docs.outscale.com/en/userguide/About-VPC-Endpoints.html).\\
    For more information on this resource actions, see the [API documentation](https://docs.outscale.com/api#3ds-outscale-api-netaccesspoint).

    ## Example Usage
    ### List all services available to create Net access points

    ```python
    import pulumi
    import pulumi_outscale as outscale

    all_services = outscale.get_net_access_point_services()
    ```
    ### List one or more services according to their service IDs

    ```python
    import pulumi
    import pulumi_outscale as outscale

    services01 = outscale.get_net_access_point_services(filters=[outscale.GetNetAccessPointServicesFilterArgs(
        name="service_ids",
        values=[
            "pl-12345678",
            "pl-12345679",
        ],
    )])
    ```
    ### List one or more services according to their service names

    ```python
    import pulumi
    import pulumi_outscale as outscale

    services02 = outscale.get_net_access_point_services(filters=[outscale.GetNetAccessPointServicesFilterArgs(
        name="service_names",
        values=["com.outscale.eu-west-2.api"],
    )])
    ```


    :param Sequence[pulumi.InputType['GetNetAccessPointServicesFilterArgs']] filters: A combination of a filter name and one or more filter values. You can specify this argument for as many filter names as you need. The filter name can be any of the following:
    """
    __args__ = dict()
    __args__['filters'] = filters
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('outscale:index/getNetAccessPointServices:getNetAccessPointServices', __args__, opts=opts, typ=GetNetAccessPointServicesResult).value

    return AwaitableGetNetAccessPointServicesResult(
        filters=pulumi.get(__ret__, 'filters'),
        id=pulumi.get(__ret__, 'id'),
        request_id=pulumi.get(__ret__, 'request_id'),
        services=pulumi.get(__ret__, 'services'))


@_utilities.lift_output_func(get_net_access_point_services)
def get_net_access_point_services_output(filters: Optional[pulumi.Input[Optional[Sequence[pulumi.InputType['GetNetAccessPointServicesFilterArgs']]]]] = None,
                                         opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetNetAccessPointServicesResult]:
    """
    Provides information about Net access point services.

    For more information on this resource, see the [User Guide](https://docs.outscale.com/en/userguide/About-VPC-Endpoints.html).\\
    For more information on this resource actions, see the [API documentation](https://docs.outscale.com/api#3ds-outscale-api-netaccesspoint).

    ## Example Usage
    ### List all services available to create Net access points

    ```python
    import pulumi
    import pulumi_outscale as outscale

    all_services = outscale.get_net_access_point_services()
    ```
    ### List one or more services according to their service IDs

    ```python
    import pulumi
    import pulumi_outscale as outscale

    services01 = outscale.get_net_access_point_services(filters=[outscale.GetNetAccessPointServicesFilterArgs(
        name="service_ids",
        values=[
            "pl-12345678",
            "pl-12345679",
        ],
    )])
    ```
    ### List one or more services according to their service names

    ```python
    import pulumi
    import pulumi_outscale as outscale

    services02 = outscale.get_net_access_point_services(filters=[outscale.GetNetAccessPointServicesFilterArgs(
        name="service_names",
        values=["com.outscale.eu-west-2.api"],
    )])
    ```


    :param Sequence[pulumi.InputType['GetNetAccessPointServicesFilterArgs']] filters: A combination of a filter name and one or more filter values. You can specify this argument for as many filter names as you need. The filter name can be any of the following:
    """
    ...
