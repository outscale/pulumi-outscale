# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities

__all__ = ['PolicyArgs', 'Policy']

@pulumi.input_type
class PolicyArgs:
    def __init__(__self__, *,
                 document: pulumi.Input[_builtins.str],
                 policy_name: pulumi.Input[_builtins.str],
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 path: Optional[pulumi.Input[_builtins.str]] = None):
        """
        The set of arguments for constructing a Policy resource.
        :param pulumi.Input[_builtins.str] document: The policy document, corresponding to a JSON string that contains the policy. This policy document can contain a maximum of 5120 non-whitespace characters. For more information, see [EIM Reference Information](https://docs.outscale.com/en/userguide/EIM-Reference-Information.html) and [EIM Policy Generator](https://docs.outscale.com/en/userguide/EIM-Policy-Generator.html).
        :param pulumi.Input[_builtins.str] policy_name: The name of the policy.
        :param pulumi.Input[_builtins.str] description: A description for the policy.
        :param pulumi.Input[_builtins.str] path: The path of the policy.
        """
        pulumi.set(__self__, "document", document)
        pulumi.set(__self__, "policy_name", policy_name)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if path is not None:
            pulumi.set(__self__, "path", path)

    @_builtins.property
    @pulumi.getter
    def document(self) -> pulumi.Input[_builtins.str]:
        """
        The policy document, corresponding to a JSON string that contains the policy. This policy document can contain a maximum of 5120 non-whitespace characters. For more information, see [EIM Reference Information](https://docs.outscale.com/en/userguide/EIM-Reference-Information.html) and [EIM Policy Generator](https://docs.outscale.com/en/userguide/EIM-Policy-Generator.html).
        """
        return pulumi.get(self, "document")

    @document.setter
    def document(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "document", value)

    @_builtins.property
    @pulumi.getter(name="policyName")
    def policy_name(self) -> pulumi.Input[_builtins.str]:
        """
        The name of the policy.
        """
        return pulumi.get(self, "policy_name")

    @policy_name.setter
    def policy_name(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "policy_name", value)

    @_builtins.property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        A description for the policy.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "description", value)

    @_builtins.property
    @pulumi.getter
    def path(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The path of the policy.
        """
        return pulumi.get(self, "path")

    @path.setter
    def path(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "path", value)


@pulumi.input_type
class _PolicyState:
    def __init__(__self__, *,
                 creation_date: Optional[pulumi.Input[_builtins.str]] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 document: Optional[pulumi.Input[_builtins.str]] = None,
                 is_linkable: Optional[pulumi.Input[_builtins.bool]] = None,
                 last_modification_date: Optional[pulumi.Input[_builtins.str]] = None,
                 orn: Optional[pulumi.Input[_builtins.str]] = None,
                 path: Optional[pulumi.Input[_builtins.str]] = None,
                 policy_default_version_id: Optional[pulumi.Input[_builtins.str]] = None,
                 policy_id: Optional[pulumi.Input[_builtins.str]] = None,
                 policy_name: Optional[pulumi.Input[_builtins.str]] = None,
                 resources_count: Optional[pulumi.Input[_builtins.int]] = None):
        """
        Input properties used for looking up and filtering Policy resources.
        :param pulumi.Input[_builtins.str] creation_date: The date and time (UTC) at which the policy was created.
        :param pulumi.Input[_builtins.str] description: A description for the policy.
        :param pulumi.Input[_builtins.str] document: The policy document, corresponding to a JSON string that contains the policy. This policy document can contain a maximum of 5120 non-whitespace characters. For more information, see [EIM Reference Information](https://docs.outscale.com/en/userguide/EIM-Reference-Information.html) and [EIM Policy Generator](https://docs.outscale.com/en/userguide/EIM-Policy-Generator.html).
        :param pulumi.Input[_builtins.bool] is_linkable: Indicates whether the policy can be linked to a group or an EIM user.
        :param pulumi.Input[_builtins.str] last_modification_date: The date and time (UTC) at which the policy was last modified.
        :param pulumi.Input[_builtins.str] orn: The OUTSCALE Resource Name (ORN) of the policy. For more information, see [Resource Identifiers](https://docs.outscale.com/en/userguide/Resource-Identifiers.html).
        :param pulumi.Input[_builtins.str] path: The path of the policy.
        :param pulumi.Input[_builtins.str] policy_default_version_id: The ID of the policy default version.
        :param pulumi.Input[_builtins.str] policy_id: The ID of the policy.
        :param pulumi.Input[_builtins.str] policy_name: The name of the policy.
        :param pulumi.Input[_builtins.int] resources_count: The number of resources attached to the policy.
        """
        if creation_date is not None:
            pulumi.set(__self__, "creation_date", creation_date)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if document is not None:
            pulumi.set(__self__, "document", document)
        if is_linkable is not None:
            pulumi.set(__self__, "is_linkable", is_linkable)
        if last_modification_date is not None:
            pulumi.set(__self__, "last_modification_date", last_modification_date)
        if orn is not None:
            pulumi.set(__self__, "orn", orn)
        if path is not None:
            pulumi.set(__self__, "path", path)
        if policy_default_version_id is not None:
            pulumi.set(__self__, "policy_default_version_id", policy_default_version_id)
        if policy_id is not None:
            pulumi.set(__self__, "policy_id", policy_id)
        if policy_name is not None:
            pulumi.set(__self__, "policy_name", policy_name)
        if resources_count is not None:
            pulumi.set(__self__, "resources_count", resources_count)

    @_builtins.property
    @pulumi.getter(name="creationDate")
    def creation_date(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The date and time (UTC) at which the policy was created.
        """
        return pulumi.get(self, "creation_date")

    @creation_date.setter
    def creation_date(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "creation_date", value)

    @_builtins.property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        A description for the policy.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "description", value)

    @_builtins.property
    @pulumi.getter
    def document(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The policy document, corresponding to a JSON string that contains the policy. This policy document can contain a maximum of 5120 non-whitespace characters. For more information, see [EIM Reference Information](https://docs.outscale.com/en/userguide/EIM-Reference-Information.html) and [EIM Policy Generator](https://docs.outscale.com/en/userguide/EIM-Policy-Generator.html).
        """
        return pulumi.get(self, "document")

    @document.setter
    def document(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "document", value)

    @_builtins.property
    @pulumi.getter(name="isLinkable")
    def is_linkable(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Indicates whether the policy can be linked to a group or an EIM user.
        """
        return pulumi.get(self, "is_linkable")

    @is_linkable.setter
    def is_linkable(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "is_linkable", value)

    @_builtins.property
    @pulumi.getter(name="lastModificationDate")
    def last_modification_date(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The date and time (UTC) at which the policy was last modified.
        """
        return pulumi.get(self, "last_modification_date")

    @last_modification_date.setter
    def last_modification_date(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "last_modification_date", value)

    @_builtins.property
    @pulumi.getter
    def orn(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The OUTSCALE Resource Name (ORN) of the policy. For more information, see [Resource Identifiers](https://docs.outscale.com/en/userguide/Resource-Identifiers.html).
        """
        return pulumi.get(self, "orn")

    @orn.setter
    def orn(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "orn", value)

    @_builtins.property
    @pulumi.getter
    def path(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The path of the policy.
        """
        return pulumi.get(self, "path")

    @path.setter
    def path(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "path", value)

    @_builtins.property
    @pulumi.getter(name="policyDefaultVersionId")
    def policy_default_version_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The ID of the policy default version.
        """
        return pulumi.get(self, "policy_default_version_id")

    @policy_default_version_id.setter
    def policy_default_version_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "policy_default_version_id", value)

    @_builtins.property
    @pulumi.getter(name="policyId")
    def policy_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The ID of the policy.
        """
        return pulumi.get(self, "policy_id")

    @policy_id.setter
    def policy_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "policy_id", value)

    @_builtins.property
    @pulumi.getter(name="policyName")
    def policy_name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The name of the policy.
        """
        return pulumi.get(self, "policy_name")

    @policy_name.setter
    def policy_name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "policy_name", value)

    @_builtins.property
    @pulumi.getter(name="resourcesCount")
    def resources_count(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        The number of resources attached to the policy.
        """
        return pulumi.get(self, "resources_count")

    @resources_count.setter
    def resources_count(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "resources_count", value)


@pulumi.type_token("outscale:index/policy:Policy")
class Policy(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 document: Optional[pulumi.Input[_builtins.str]] = None,
                 path: Optional[pulumi.Input[_builtins.str]] = None,
                 policy_name: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        """
        Manages a policy.

        For more information on this resource, see the [User Guide](https://docs.outscale.com/en/userguide/About-Policies.html).\\
        For more information on this resource actions, see the [API documentation](https://docs.outscale.com/api.html#3ds-outscale-api-policy).

        ## Import

        A policy can be imported using its ORN. For example:

        console

        ```sh
        $ pulumi import outscale:index/policy:Policy policy1 orn
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] description: A description for the policy.
        :param pulumi.Input[_builtins.str] document: The policy document, corresponding to a JSON string that contains the policy. This policy document can contain a maximum of 5120 non-whitespace characters. For more information, see [EIM Reference Information](https://docs.outscale.com/en/userguide/EIM-Reference-Information.html) and [EIM Policy Generator](https://docs.outscale.com/en/userguide/EIM-Policy-Generator.html).
        :param pulumi.Input[_builtins.str] path: The path of the policy.
        :param pulumi.Input[_builtins.str] policy_name: The name of the policy.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: PolicyArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Manages a policy.

        For more information on this resource, see the [User Guide](https://docs.outscale.com/en/userguide/About-Policies.html).\\
        For more information on this resource actions, see the [API documentation](https://docs.outscale.com/api.html#3ds-outscale-api-policy).

        ## Import

        A policy can be imported using its ORN. For example:

        console

        ```sh
        $ pulumi import outscale:index/policy:Policy policy1 orn
        ```

        :param str resource_name: The name of the resource.
        :param PolicyArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(PolicyArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 document: Optional[pulumi.Input[_builtins.str]] = None,
                 path: Optional[pulumi.Input[_builtins.str]] = None,
                 policy_name: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = PolicyArgs.__new__(PolicyArgs)

            __props__.__dict__["description"] = description
            if document is None and not opts.urn:
                raise TypeError("Missing required property 'document'")
            __props__.__dict__["document"] = document
            __props__.__dict__["path"] = path
            if policy_name is None and not opts.urn:
                raise TypeError("Missing required property 'policy_name'")
            __props__.__dict__["policy_name"] = policy_name
            __props__.__dict__["creation_date"] = None
            __props__.__dict__["is_linkable"] = None
            __props__.__dict__["last_modification_date"] = None
            __props__.__dict__["orn"] = None
            __props__.__dict__["policy_default_version_id"] = None
            __props__.__dict__["policy_id"] = None
            __props__.__dict__["resources_count"] = None
        super(Policy, __self__).__init__(
            'outscale:index/policy:Policy',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            creation_date: Optional[pulumi.Input[_builtins.str]] = None,
            description: Optional[pulumi.Input[_builtins.str]] = None,
            document: Optional[pulumi.Input[_builtins.str]] = None,
            is_linkable: Optional[pulumi.Input[_builtins.bool]] = None,
            last_modification_date: Optional[pulumi.Input[_builtins.str]] = None,
            orn: Optional[pulumi.Input[_builtins.str]] = None,
            path: Optional[pulumi.Input[_builtins.str]] = None,
            policy_default_version_id: Optional[pulumi.Input[_builtins.str]] = None,
            policy_id: Optional[pulumi.Input[_builtins.str]] = None,
            policy_name: Optional[pulumi.Input[_builtins.str]] = None,
            resources_count: Optional[pulumi.Input[_builtins.int]] = None) -> 'Policy':
        """
        Get an existing Policy resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] creation_date: The date and time (UTC) at which the policy was created.
        :param pulumi.Input[_builtins.str] description: A description for the policy.
        :param pulumi.Input[_builtins.str] document: The policy document, corresponding to a JSON string that contains the policy. This policy document can contain a maximum of 5120 non-whitespace characters. For more information, see [EIM Reference Information](https://docs.outscale.com/en/userguide/EIM-Reference-Information.html) and [EIM Policy Generator](https://docs.outscale.com/en/userguide/EIM-Policy-Generator.html).
        :param pulumi.Input[_builtins.bool] is_linkable: Indicates whether the policy can be linked to a group or an EIM user.
        :param pulumi.Input[_builtins.str] last_modification_date: The date and time (UTC) at which the policy was last modified.
        :param pulumi.Input[_builtins.str] orn: The OUTSCALE Resource Name (ORN) of the policy. For more information, see [Resource Identifiers](https://docs.outscale.com/en/userguide/Resource-Identifiers.html).
        :param pulumi.Input[_builtins.str] path: The path of the policy.
        :param pulumi.Input[_builtins.str] policy_default_version_id: The ID of the policy default version.
        :param pulumi.Input[_builtins.str] policy_id: The ID of the policy.
        :param pulumi.Input[_builtins.str] policy_name: The name of the policy.
        :param pulumi.Input[_builtins.int] resources_count: The number of resources attached to the policy.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _PolicyState.__new__(_PolicyState)

        __props__.__dict__["creation_date"] = creation_date
        __props__.__dict__["description"] = description
        __props__.__dict__["document"] = document
        __props__.__dict__["is_linkable"] = is_linkable
        __props__.__dict__["last_modification_date"] = last_modification_date
        __props__.__dict__["orn"] = orn
        __props__.__dict__["path"] = path
        __props__.__dict__["policy_default_version_id"] = policy_default_version_id
        __props__.__dict__["policy_id"] = policy_id
        __props__.__dict__["policy_name"] = policy_name
        __props__.__dict__["resources_count"] = resources_count
        return Policy(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter(name="creationDate")
    def creation_date(self) -> pulumi.Output[_builtins.str]:
        """
        The date and time (UTC) at which the policy was created.
        """
        return pulumi.get(self, "creation_date")

    @_builtins.property
    @pulumi.getter
    def description(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        A description for the policy.
        """
        return pulumi.get(self, "description")

    @_builtins.property
    @pulumi.getter
    def document(self) -> pulumi.Output[_builtins.str]:
        """
        The policy document, corresponding to a JSON string that contains the policy. This policy document can contain a maximum of 5120 non-whitespace characters. For more information, see [EIM Reference Information](https://docs.outscale.com/en/userguide/EIM-Reference-Information.html) and [EIM Policy Generator](https://docs.outscale.com/en/userguide/EIM-Policy-Generator.html).
        """
        return pulumi.get(self, "document")

    @_builtins.property
    @pulumi.getter(name="isLinkable")
    def is_linkable(self) -> pulumi.Output[_builtins.bool]:
        """
        Indicates whether the policy can be linked to a group or an EIM user.
        """
        return pulumi.get(self, "is_linkable")

    @_builtins.property
    @pulumi.getter(name="lastModificationDate")
    def last_modification_date(self) -> pulumi.Output[_builtins.str]:
        """
        The date and time (UTC) at which the policy was last modified.
        """
        return pulumi.get(self, "last_modification_date")

    @_builtins.property
    @pulumi.getter
    def orn(self) -> pulumi.Output[_builtins.str]:
        """
        The OUTSCALE Resource Name (ORN) of the policy. For more information, see [Resource Identifiers](https://docs.outscale.com/en/userguide/Resource-Identifiers.html).
        """
        return pulumi.get(self, "orn")

    @_builtins.property
    @pulumi.getter
    def path(self) -> pulumi.Output[_builtins.str]:
        """
        The path of the policy.
        """
        return pulumi.get(self, "path")

    @_builtins.property
    @pulumi.getter(name="policyDefaultVersionId")
    def policy_default_version_id(self) -> pulumi.Output[_builtins.str]:
        """
        The ID of the policy default version.
        """
        return pulumi.get(self, "policy_default_version_id")

    @_builtins.property
    @pulumi.getter(name="policyId")
    def policy_id(self) -> pulumi.Output[_builtins.str]:
        """
        The ID of the policy.
        """
        return pulumi.get(self, "policy_id")

    @_builtins.property
    @pulumi.getter(name="policyName")
    def policy_name(self) -> pulumi.Output[_builtins.str]:
        """
        The name of the policy.
        """
        return pulumi.get(self, "policy_name")

    @_builtins.property
    @pulumi.getter(name="resourcesCount")
    def resources_count(self) -> pulumi.Output[_builtins.int]:
        """
        The number of resources attached to the policy.
        """
        return pulumi.get(self, "resources_count")

