# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities
from . import outputs
from ._inputs import *

__all__ = ['ImageLaunchPermissionArgs', 'ImageLaunchPermission']

@pulumi.input_type
class ImageLaunchPermissionArgs:
    def __init__(__self__, *,
                 image_id: pulumi.Input[str],
                 permission_additions: Optional[pulumi.Input['ImageLaunchPermissionPermissionAdditionsArgs']] = None,
                 permission_removals: Optional[pulumi.Input['ImageLaunchPermissionPermissionRemovalsArgs']] = None):
        """
        The set of arguments for constructing a ImageLaunchPermission resource.
        :param pulumi.Input[str] image_id: The ID of the OMI you want to modify.
        :param pulumi.Input['ImageLaunchPermissionPermissionAdditionsArgs'] permission_additions: Information about the users to whom you want to give permissions for the resource.
        :param pulumi.Input['ImageLaunchPermissionPermissionRemovalsArgs'] permission_removals: Information about the users from whom you want to remove permissions for the resource.
        """
        pulumi.set(__self__, "image_id", image_id)
        if permission_additions is not None:
            pulumi.set(__self__, "permission_additions", permission_additions)
        if permission_removals is not None:
            pulumi.set(__self__, "permission_removals", permission_removals)

    @property
    @pulumi.getter(name="imageId")
    def image_id(self) -> pulumi.Input[str]:
        """
        The ID of the OMI you want to modify.
        """
        return pulumi.get(self, "image_id")

    @image_id.setter
    def image_id(self, value: pulumi.Input[str]):
        pulumi.set(self, "image_id", value)

    @property
    @pulumi.getter(name="permissionAdditions")
    def permission_additions(self) -> Optional[pulumi.Input['ImageLaunchPermissionPermissionAdditionsArgs']]:
        """
        Information about the users to whom you want to give permissions for the resource.
        """
        return pulumi.get(self, "permission_additions")

    @permission_additions.setter
    def permission_additions(self, value: Optional[pulumi.Input['ImageLaunchPermissionPermissionAdditionsArgs']]):
        pulumi.set(self, "permission_additions", value)

    @property
    @pulumi.getter(name="permissionRemovals")
    def permission_removals(self) -> Optional[pulumi.Input['ImageLaunchPermissionPermissionRemovalsArgs']]:
        """
        Information about the users from whom you want to remove permissions for the resource.
        """
        return pulumi.get(self, "permission_removals")

    @permission_removals.setter
    def permission_removals(self, value: Optional[pulumi.Input['ImageLaunchPermissionPermissionRemovalsArgs']]):
        pulumi.set(self, "permission_removals", value)


@pulumi.input_type
class _ImageLaunchPermissionState:
    def __init__(__self__, *,
                 description: Optional[pulumi.Input[str]] = None,
                 image_id: Optional[pulumi.Input[str]] = None,
                 permission_additions: Optional[pulumi.Input['ImageLaunchPermissionPermissionAdditionsArgs']] = None,
                 permission_removals: Optional[pulumi.Input['ImageLaunchPermissionPermissionRemovalsArgs']] = None,
                 permissions_to_launches: Optional[pulumi.Input[Sequence[pulumi.Input['ImageLaunchPermissionPermissionsToLaunchArgs']]]] = None,
                 request_id: Optional[pulumi.Input[str]] = None):
        """
        Input properties used for looking up and filtering ImageLaunchPermission resources.
        :param pulumi.Input[str] description: The description of the OMI.
        :param pulumi.Input[str] image_id: The ID of the OMI you want to modify.
        :param pulumi.Input['ImageLaunchPermissionPermissionAdditionsArgs'] permission_additions: Information about the users to whom you want to give permissions for the resource.
        :param pulumi.Input['ImageLaunchPermissionPermissionRemovalsArgs'] permission_removals: Information about the users from whom you want to remove permissions for the resource.
        :param pulumi.Input[Sequence[pulumi.Input['ImageLaunchPermissionPermissionsToLaunchArgs']]] permissions_to_launches: Permissions for the resource.
        """
        if description is not None:
            pulumi.set(__self__, "description", description)
        if image_id is not None:
            pulumi.set(__self__, "image_id", image_id)
        if permission_additions is not None:
            pulumi.set(__self__, "permission_additions", permission_additions)
        if permission_removals is not None:
            pulumi.set(__self__, "permission_removals", permission_removals)
        if permissions_to_launches is not None:
            pulumi.set(__self__, "permissions_to_launches", permissions_to_launches)
        if request_id is not None:
            pulumi.set(__self__, "request_id", request_id)

    @property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[str]]:
        """
        The description of the OMI.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "description", value)

    @property
    @pulumi.getter(name="imageId")
    def image_id(self) -> Optional[pulumi.Input[str]]:
        """
        The ID of the OMI you want to modify.
        """
        return pulumi.get(self, "image_id")

    @image_id.setter
    def image_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "image_id", value)

    @property
    @pulumi.getter(name="permissionAdditions")
    def permission_additions(self) -> Optional[pulumi.Input['ImageLaunchPermissionPermissionAdditionsArgs']]:
        """
        Information about the users to whom you want to give permissions for the resource.
        """
        return pulumi.get(self, "permission_additions")

    @permission_additions.setter
    def permission_additions(self, value: Optional[pulumi.Input['ImageLaunchPermissionPermissionAdditionsArgs']]):
        pulumi.set(self, "permission_additions", value)

    @property
    @pulumi.getter(name="permissionRemovals")
    def permission_removals(self) -> Optional[pulumi.Input['ImageLaunchPermissionPermissionRemovalsArgs']]:
        """
        Information about the users from whom you want to remove permissions for the resource.
        """
        return pulumi.get(self, "permission_removals")

    @permission_removals.setter
    def permission_removals(self, value: Optional[pulumi.Input['ImageLaunchPermissionPermissionRemovalsArgs']]):
        pulumi.set(self, "permission_removals", value)

    @property
    @pulumi.getter(name="permissionsToLaunches")
    def permissions_to_launches(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['ImageLaunchPermissionPermissionsToLaunchArgs']]]]:
        """
        Permissions for the resource.
        """
        return pulumi.get(self, "permissions_to_launches")

    @permissions_to_launches.setter
    def permissions_to_launches(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['ImageLaunchPermissionPermissionsToLaunchArgs']]]]):
        pulumi.set(self, "permissions_to_launches", value)

    @property
    @pulumi.getter(name="requestId")
    def request_id(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "request_id")

    @request_id.setter
    def request_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "request_id", value)


class ImageLaunchPermission(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 image_id: Optional[pulumi.Input[str]] = None,
                 permission_additions: Optional[pulumi.Input[pulumi.InputType['ImageLaunchPermissionPermissionAdditionsArgs']]] = None,
                 permission_removals: Optional[pulumi.Input[pulumi.InputType['ImageLaunchPermissionPermissionRemovalsArgs']]] = None,
                 __props__=None):
        """
        Manages an image launch permission.

        For more information on this resource, see the [User Guide](https://docs.outscale.com/en/userguide/About-OMIs.html).\\
        For more information on this resource actions, see the [API documentation](https://docs.outscale.com/api#updateimage).

        ## Example Usage
        ### Add permissions

        ```python
        import pulumi
        import pulumi_outscale as outscale

        image01 = outscale.ImageLaunchPermission("image01",
            image_id="ami-12345678",
            permission_additions=outscale.ImageLaunchPermissionPermissionAdditionsArgs(
                account_ids=["012345678910"],
            ))
        ```
        ### Remove permissions

        ```python
        import pulumi
        import pulumi_outscale as outscale

        image02 = outscale.ImageLaunchPermission("image02",
            image_id="ami-12345678",
            permission_removals=outscale.ImageLaunchPermissionPermissionRemovalsArgs(
                account_ids=["012345678910"],
            ))
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] image_id: The ID of the OMI you want to modify.
        :param pulumi.Input[pulumi.InputType['ImageLaunchPermissionPermissionAdditionsArgs']] permission_additions: Information about the users to whom you want to give permissions for the resource.
        :param pulumi.Input[pulumi.InputType['ImageLaunchPermissionPermissionRemovalsArgs']] permission_removals: Information about the users from whom you want to remove permissions for the resource.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: ImageLaunchPermissionArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Manages an image launch permission.

        For more information on this resource, see the [User Guide](https://docs.outscale.com/en/userguide/About-OMIs.html).\\
        For more information on this resource actions, see the [API documentation](https://docs.outscale.com/api#updateimage).

        ## Example Usage
        ### Add permissions

        ```python
        import pulumi
        import pulumi_outscale as outscale

        image01 = outscale.ImageLaunchPermission("image01",
            image_id="ami-12345678",
            permission_additions=outscale.ImageLaunchPermissionPermissionAdditionsArgs(
                account_ids=["012345678910"],
            ))
        ```
        ### Remove permissions

        ```python
        import pulumi
        import pulumi_outscale as outscale

        image02 = outscale.ImageLaunchPermission("image02",
            image_id="ami-12345678",
            permission_removals=outscale.ImageLaunchPermissionPermissionRemovalsArgs(
                account_ids=["012345678910"],
            ))
        ```

        :param str resource_name: The name of the resource.
        :param ImageLaunchPermissionArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(ImageLaunchPermissionArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 image_id: Optional[pulumi.Input[str]] = None,
                 permission_additions: Optional[pulumi.Input[pulumi.InputType['ImageLaunchPermissionPermissionAdditionsArgs']]] = None,
                 permission_removals: Optional[pulumi.Input[pulumi.InputType['ImageLaunchPermissionPermissionRemovalsArgs']]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = ImageLaunchPermissionArgs.__new__(ImageLaunchPermissionArgs)

            if image_id is None and not opts.urn:
                raise TypeError("Missing required property 'image_id'")
            __props__.__dict__["image_id"] = image_id
            __props__.__dict__["permission_additions"] = permission_additions
            __props__.__dict__["permission_removals"] = permission_removals
            __props__.__dict__["description"] = None
            __props__.__dict__["permissions_to_launches"] = None
            __props__.__dict__["request_id"] = None
        super(ImageLaunchPermission, __self__).__init__(
            'outscale:index/imageLaunchPermission:ImageLaunchPermission',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            description: Optional[pulumi.Input[str]] = None,
            image_id: Optional[pulumi.Input[str]] = None,
            permission_additions: Optional[pulumi.Input[pulumi.InputType['ImageLaunchPermissionPermissionAdditionsArgs']]] = None,
            permission_removals: Optional[pulumi.Input[pulumi.InputType['ImageLaunchPermissionPermissionRemovalsArgs']]] = None,
            permissions_to_launches: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['ImageLaunchPermissionPermissionsToLaunchArgs']]]]] = None,
            request_id: Optional[pulumi.Input[str]] = None) -> 'ImageLaunchPermission':
        """
        Get an existing ImageLaunchPermission resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] description: The description of the OMI.
        :param pulumi.Input[str] image_id: The ID of the OMI you want to modify.
        :param pulumi.Input[pulumi.InputType['ImageLaunchPermissionPermissionAdditionsArgs']] permission_additions: Information about the users to whom you want to give permissions for the resource.
        :param pulumi.Input[pulumi.InputType['ImageLaunchPermissionPermissionRemovalsArgs']] permission_removals: Information about the users from whom you want to remove permissions for the resource.
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['ImageLaunchPermissionPermissionsToLaunchArgs']]]] permissions_to_launches: Permissions for the resource.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _ImageLaunchPermissionState.__new__(_ImageLaunchPermissionState)

        __props__.__dict__["description"] = description
        __props__.__dict__["image_id"] = image_id
        __props__.__dict__["permission_additions"] = permission_additions
        __props__.__dict__["permission_removals"] = permission_removals
        __props__.__dict__["permissions_to_launches"] = permissions_to_launches
        __props__.__dict__["request_id"] = request_id
        return ImageLaunchPermission(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter
    def description(self) -> pulumi.Output[str]:
        """
        The description of the OMI.
        """
        return pulumi.get(self, "description")

    @property
    @pulumi.getter(name="imageId")
    def image_id(self) -> pulumi.Output[str]:
        """
        The ID of the OMI you want to modify.
        """
        return pulumi.get(self, "image_id")

    @property
    @pulumi.getter(name="permissionAdditions")
    def permission_additions(self) -> pulumi.Output[Optional['outputs.ImageLaunchPermissionPermissionAdditions']]:
        """
        Information about the users to whom you want to give permissions for the resource.
        """
        return pulumi.get(self, "permission_additions")

    @property
    @pulumi.getter(name="permissionRemovals")
    def permission_removals(self) -> pulumi.Output[Optional['outputs.ImageLaunchPermissionPermissionRemovals']]:
        """
        Information about the users from whom you want to remove permissions for the resource.
        """
        return pulumi.get(self, "permission_removals")

    @property
    @pulumi.getter(name="permissionsToLaunches")
    def permissions_to_launches(self) -> pulumi.Output[Sequence['outputs.ImageLaunchPermissionPermissionsToLaunch']]:
        """
        Permissions for the resource.
        """
        return pulumi.get(self, "permissions_to_launches")

    @property
    @pulumi.getter(name="requestId")
    def request_id(self) -> pulumi.Output[str]:
        return pulumi.get(self, "request_id")

