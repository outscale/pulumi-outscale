// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Manages snapshot attributes.
 *
 * For more information on this resource, see the [User Guide](https://docs.outscale.com/en/userguide/About-Snapshots.html).\
 * For more information on this resource actions, see the [API documentation](https://docs.outscale.com/api#updatesnapshot).
 *
 * ## Example Usage
 *
 * ### Required resources
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as outscale from "@outscale/pulumi-outscale";
 *
 * const volume01 = new outscale.Volume("volume01", {
 *     subregionName: "eu-west-2a",
 *     size: 40,
 * });
 * const snapshot01 = new outscale.Snapshot("snapshot01", {
 *     volumeId: volume01.volumeId,
 *     tags: [{
 *         key: "name",
 *         value: "terraform-snapshot-test",
 *     }],
 * });
 * ```
 *
 * ### Add permissions
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as outscale from "@outscale/pulumi-outscale";
 *
 * const snapshotAttributes01 = new outscale.SnapshotAttributes("snapshot_attributes01", {
 *     snapshotId: snapshot01.snapshotId,
 *     permissionsToCreateVolumeAdditions: {
 *         accountIds: ["012345678910"],
 *     },
 * });
 * ```
 *
 * ### Remove permissions
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as outscale from "@outscale/pulumi-outscale";
 *
 * const snapshotAttributes02 = new outscale.SnapshotAttributes("snapshot_attributes02", {
 *     snapshotId: snapshot01.snapshotId,
 *     permissionsToCreateVolumeRemovals: [{
 *         accountIds: ["012345678910"],
 *     }],
 * });
 * ```
 */
export class SnapshotAttributes extends pulumi.CustomResource {
    /**
     * Get an existing SnapshotAttributes resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SnapshotAttributesState, opts?: pulumi.CustomResourceOptions): SnapshotAttributes {
        return new SnapshotAttributes(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'outscale:index/snapshotAttributes:SnapshotAttributes';

    /**
     * Returns true if the given object is an instance of SnapshotAttributes.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SnapshotAttributes {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SnapshotAttributes.__pulumiType;
    }

    /**
     * The account ID of the owner of the snapshot.
     */
    public /*out*/ readonly accountId!: pulumi.Output<string>;
    /**
     * Information about the users to whom you want to give permissions for the resource.
     */
    public readonly permissionsToCreateVolumeAdditions!: pulumi.Output<outputs.SnapshotAttributesPermissionsToCreateVolumeAdditions | undefined>;
    /**
     * Information about the users from whom you want to remove permissions for the resource.
     */
    public readonly permissionsToCreateVolumeRemovals!: pulumi.Output<outputs.SnapshotAttributesPermissionsToCreateVolumeRemoval[] | undefined>;
    public /*out*/ readonly requestId!: pulumi.Output<string>;
    /**
     * The ID of the snapshot.
     */
    public readonly snapshotId!: pulumi.Output<string>;

    /**
     * Create a SnapshotAttributes resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SnapshotAttributesArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SnapshotAttributesArgs | SnapshotAttributesState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SnapshotAttributesState | undefined;
            resourceInputs["accountId"] = state ? state.accountId : undefined;
            resourceInputs["permissionsToCreateVolumeAdditions"] = state ? state.permissionsToCreateVolumeAdditions : undefined;
            resourceInputs["permissionsToCreateVolumeRemovals"] = state ? state.permissionsToCreateVolumeRemovals : undefined;
            resourceInputs["requestId"] = state ? state.requestId : undefined;
            resourceInputs["snapshotId"] = state ? state.snapshotId : undefined;
        } else {
            const args = argsOrState as SnapshotAttributesArgs | undefined;
            if ((!args || args.snapshotId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'snapshotId'");
            }
            resourceInputs["permissionsToCreateVolumeAdditions"] = args ? args.permissionsToCreateVolumeAdditions : undefined;
            resourceInputs["permissionsToCreateVolumeRemovals"] = args ? args.permissionsToCreateVolumeRemovals : undefined;
            resourceInputs["snapshotId"] = args ? args.snapshotId : undefined;
            resourceInputs["accountId"] = undefined /*out*/;
            resourceInputs["requestId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SnapshotAttributes.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering SnapshotAttributes resources.
 */
export interface SnapshotAttributesState {
    /**
     * The account ID of the owner of the snapshot.
     */
    accountId?: pulumi.Input<string>;
    /**
     * Information about the users to whom you want to give permissions for the resource.
     */
    permissionsToCreateVolumeAdditions?: pulumi.Input<inputs.SnapshotAttributesPermissionsToCreateVolumeAdditions>;
    /**
     * Information about the users from whom you want to remove permissions for the resource.
     */
    permissionsToCreateVolumeRemovals?: pulumi.Input<pulumi.Input<inputs.SnapshotAttributesPermissionsToCreateVolumeRemoval>[]>;
    requestId?: pulumi.Input<string>;
    /**
     * The ID of the snapshot.
     */
    snapshotId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SnapshotAttributes resource.
 */
export interface SnapshotAttributesArgs {
    /**
     * Information about the users to whom you want to give permissions for the resource.
     */
    permissionsToCreateVolumeAdditions?: pulumi.Input<inputs.SnapshotAttributesPermissionsToCreateVolumeAdditions>;
    /**
     * Information about the users from whom you want to remove permissions for the resource.
     */
    permissionsToCreateVolumeRemovals?: pulumi.Input<pulumi.Input<inputs.SnapshotAttributesPermissionsToCreateVolumeRemoval>[]>;
    /**
     * The ID of the snapshot.
     */
    snapshotId: pulumi.Input<string>;
}
