// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Provides information about a keypair.
 *
 * For more information on this resource, see the [User Guide](https://docs.outscale.com/en/userguide/About-Keypairs.html).\
 * For more information on this resource actions, see the [API documentation](https://docs.outscale.com/api#3ds-outscale-api-keypair).
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as outscale from "@outscale/pulumi-outscale";
 *
 * const keypair01 = outscale.getKeypair({
 *     filters: [{
 *         name: "keypair_names",
 *         values: ["terraform-keypair-01"],
 *     }],
 * });
 * ```
 */
export function getKeypair(args?: GetKeypairArgs, opts?: pulumi.InvokeOptions): Promise<GetKeypairResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("outscale:index/getKeypair:getKeypair", {
        "filters": args.filters,
        "keypairName": args.keypairName,
    }, opts);
}

/**
 * A collection of arguments for invoking getKeypair.
 */
export interface GetKeypairArgs {
    /**
     * A combination of a filter name and one or more filter values. You can specify this argument for as many filter names as you need. The filter name can be any of the following:
     */
    filters?: inputs.GetKeypairFilter[];
    /**
     * The name of the keypair.
     */
    keypairName?: string;
}

/**
 * A collection of values returned by getKeypair.
 */
export interface GetKeypairResult {
    readonly filters?: outputs.GetKeypairFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The MD5 public key fingerprint as specified in section 4 of RFC 4716.
     */
    readonly keypairFingerprint: string;
    /**
     * The ID of the keypair.
     */
    readonly keypairId: string;
    /**
     * The name of the keypair.
     */
    readonly keypairName: string;
    /**
     * The type of the keypair (`ssh-rsa`, `ssh-ed25519`, `ecdsa-sha2-nistp256`, `ecdsa-sha2-nistp384`, or `ecdsa-sha2-nistp521`).
     */
    readonly keypairType: string;
    readonly requestId: string;
    /**
     * One or more tags associated with the keypair.
     */
    readonly tags: outputs.GetKeypairTag[];
}
/**
 * Provides information about a keypair.
 *
 * For more information on this resource, see the [User Guide](https://docs.outscale.com/en/userguide/About-Keypairs.html).\
 * For more information on this resource actions, see the [API documentation](https://docs.outscale.com/api#3ds-outscale-api-keypair).
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as outscale from "@outscale/pulumi-outscale";
 *
 * const keypair01 = outscale.getKeypair({
 *     filters: [{
 *         name: "keypair_names",
 *         values: ["terraform-keypair-01"],
 *     }],
 * });
 * ```
 */
export function getKeypairOutput(args?: GetKeypairOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetKeypairResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("outscale:index/getKeypair:getKeypair", {
        "filters": args.filters,
        "keypairName": args.keypairName,
    }, opts);
}

/**
 * A collection of arguments for invoking getKeypair.
 */
export interface GetKeypairOutputArgs {
    /**
     * A combination of a filter name and one or more filter values. You can specify this argument for as many filter names as you need. The filter name can be any of the following:
     */
    filters?: pulumi.Input<pulumi.Input<inputs.GetKeypairFilterArgs>[]>;
    /**
     * The name of the keypair.
     */
    keypairName?: pulumi.Input<string>;
}
