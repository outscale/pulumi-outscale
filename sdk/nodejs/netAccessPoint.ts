// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class NetAccessPoint extends pulumi.CustomResource {
    /**
     * Get an existing NetAccessPoint resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: NetAccessPointState, opts?: pulumi.CustomResourceOptions): NetAccessPoint {
        return new NetAccessPoint(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'outscale:index/netAccessPoint:NetAccessPoint';

    /**
     * Returns true if the given object is an instance of NetAccessPoint.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is NetAccessPoint {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === NetAccessPoint.__pulumiType;
    }

    public /*out*/ readonly netAccessPointId!: pulumi.Output<string>;
    public readonly netId!: pulumi.Output<string>;
    public /*out*/ readonly requestId!: pulumi.Output<string>;
    public readonly routeTableIds!: pulumi.Output<string[] | undefined>;
    public readonly serviceName!: pulumi.Output<string>;
    public /*out*/ readonly state!: pulumi.Output<string>;
    public readonly tags!: pulumi.Output<outputs.NetAccessPointTag[] | undefined>;

    /**
     * Create a NetAccessPoint resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: NetAccessPointArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: NetAccessPointArgs | NetAccessPointState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as NetAccessPointState | undefined;
            resourceInputs["netAccessPointId"] = state ? state.netAccessPointId : undefined;
            resourceInputs["netId"] = state ? state.netId : undefined;
            resourceInputs["requestId"] = state ? state.requestId : undefined;
            resourceInputs["routeTableIds"] = state ? state.routeTableIds : undefined;
            resourceInputs["serviceName"] = state ? state.serviceName : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
        } else {
            const args = argsOrState as NetAccessPointArgs | undefined;
            if ((!args || args.netId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'netId'");
            }
            if ((!args || args.serviceName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'serviceName'");
            }
            resourceInputs["netId"] = args ? args.netId : undefined;
            resourceInputs["routeTableIds"] = args ? args.routeTableIds : undefined;
            resourceInputs["serviceName"] = args ? args.serviceName : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["netAccessPointId"] = undefined /*out*/;
            resourceInputs["requestId"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(NetAccessPoint.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering NetAccessPoint resources.
 */
export interface NetAccessPointState {
    netAccessPointId?: pulumi.Input<string>;
    netId?: pulumi.Input<string>;
    requestId?: pulumi.Input<string>;
    routeTableIds?: pulumi.Input<pulumi.Input<string>[]>;
    serviceName?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.NetAccessPointTag>[]>;
}

/**
 * The set of arguments for constructing a NetAccessPoint resource.
 */
export interface NetAccessPointArgs {
    netId: pulumi.Input<string>;
    routeTableIds?: pulumi.Input<pulumi.Input<string>[]>;
    serviceName: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.NetAccessPointTag>[]>;
}
