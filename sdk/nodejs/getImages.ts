// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Provides information about images.
 *
 * For more information on this resource, see the [User Guide](https://docs.outscale.com/en/userguide/About-OMIs.html).\
 * For more information on this resource actions, see the [API documentation](https://docs.outscale.com/api#3ds-outscale-api-image).
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as outscale from "@pulumi/outscale";
 *
 * const images01 = outscale.getImages({
 *     filters: [
 *         {
 *             name: "account_aliases",
 *             values: ["Outscale"],
 *         },
 *         {
 *             name: "image_names",
 *             values: [
 *                 "Ubuntu*",
 *                 "RockyLinux*",
 *             ],
 *         },
 *     ],
 * });
 * ```
 */
export function getImages(args?: GetImagesArgs, opts?: pulumi.InvokeOptions): Promise<GetImagesResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("outscale:index/getImages:getImages", {
        "accountIds": args.accountIds,
        "filters": args.filters,
        "imageIds": args.imageIds,
        "permissions": args.permissions,
    }, opts);
}

/**
 * A collection of arguments for invoking getImages.
 */
export interface GetImagesArgs {
    /**
     * The account IDs of the owners of the OMIs. By default, all the OMIs for which you have launch permissions are described.
     */
    accountIds?: string[];
    /**
     * A combination of a filter name and one or more filter values. You can specify this argument for as many filter names as you need. The filter name can be any of the following:
     */
    filters?: inputs.GetImagesFilter[];
    /**
     * The IDs of the OMIs.
     */
    imageIds?: string[];
    permissions?: string[];
}

/**
 * A collection of values returned by getImages.
 */
export interface GetImagesResult {
    /**
     * One or more account IDs that the permission is associated with.
     */
    readonly accountIds?: string[];
    readonly filters?: outputs.GetImagesFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly imageIds?: string[];
    /**
     * Information about one or more OMIs.
     */
    readonly images: outputs.GetImagesImage[];
    readonly permissions?: string[];
    readonly requestId: string;
}
/**
 * Provides information about images.
 *
 * For more information on this resource, see the [User Guide](https://docs.outscale.com/en/userguide/About-OMIs.html).\
 * For more information on this resource actions, see the [API documentation](https://docs.outscale.com/api#3ds-outscale-api-image).
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as outscale from "@pulumi/outscale";
 *
 * const images01 = outscale.getImages({
 *     filters: [
 *         {
 *             name: "account_aliases",
 *             values: ["Outscale"],
 *         },
 *         {
 *             name: "image_names",
 *             values: [
 *                 "Ubuntu*",
 *                 "RockyLinux*",
 *             ],
 *         },
 *     ],
 * });
 * ```
 */
export function getImagesOutput(args?: GetImagesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetImagesResult> {
    return pulumi.output(args).apply((a: any) => getImages(a, opts))
}

/**
 * A collection of arguments for invoking getImages.
 */
export interface GetImagesOutputArgs {
    /**
     * The account IDs of the owners of the OMIs. By default, all the OMIs for which you have launch permissions are described.
     */
    accountIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A combination of a filter name and one or more filter values. You can specify this argument for as many filter names as you need. The filter name can be any of the following:
     */
    filters?: pulumi.Input<pulumi.Input<inputs.GetImagesFilterArgs>[]>;
    /**
     * The IDs of the OMIs.
     */
    imageIds?: pulumi.Input<pulumi.Input<string>[]>;
    permissions?: pulumi.Input<pulumi.Input<string>[]>;
}
