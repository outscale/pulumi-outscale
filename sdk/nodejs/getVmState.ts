// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getVmState(args?: GetVmStateArgs, opts?: pulumi.InvokeOptions): Promise<GetVmStateResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("outscale:index/getVmState:getVmState", {
        "allVms": args.allVms,
        "filters": args.filters,
        "vmId": args.vmId,
    }, opts);
}

/**
 * A collection of arguments for invoking getVmState.
 */
export interface GetVmStateArgs {
    allVms?: boolean;
    filters?: inputs.GetVmStateFilter[];
    vmId?: string;
}

/**
 * A collection of values returned by getVmState.
 */
export interface GetVmStateResult {
    readonly allVms?: boolean;
    readonly filters?: outputs.GetVmStateFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly maintenanceEvents: outputs.GetVmStateMaintenanceEvent[];
    readonly requestId: string;
    readonly subregionName: string;
    readonly vmId?: string;
    readonly vmState: string;
}
export function getVmStateOutput(args?: GetVmStateOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetVmStateResult> {
    return pulumi.output(args).apply((a: any) => getVmState(a, opts))
}

/**
 * A collection of arguments for invoking getVmState.
 */
export interface GetVmStateOutputArgs {
    allVms?: pulumi.Input<boolean>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetVmStateFilterArgs>[]>;
    vmId?: pulumi.Input<string>;
}
