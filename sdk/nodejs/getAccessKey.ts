// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Provides information about an access key.
 *
 * For more information on this resource, see the [User Guide](https://docs.outscale.com/en/userguide/About-Access-Keys.html).\
 * For more information on this resource actions, see the [API documentation](https://docs.outscale.com/api#3ds-outscale-api-accesskey).
 *
 * ## Example Usage
 *
 * ### Get one of your own access keys (root account or user)
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as outscale from "@outscale/pulumi-outscale";
 *
 * const accessKey01 = outscale.getAccessKey({
 *     filters: [{
 *         name: "access_key_ids",
 *         values: ["ABCDEFGHIJ0123456789"],
 *     }],
 * });
 * ```
 *
 * ### Get the access key of another user
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as outscale from "@outscale/pulumi-outscale";
 *
 * const accessKey01 = outscale.getAccessKey({
 *     userName: "user_name",
 *     filters: [
 *         {
 *             name: "access_key_ids",
 *             values: ["XXXXXXXXX"],
 *         },
 *         {
 *             name: "states",
 *             values: ["ACTIVE"],
 *         },
 *     ],
 * });
 * ```
 */
export function getAccessKey(args?: GetAccessKeyArgs, opts?: pulumi.InvokeOptions): Promise<GetAccessKeyResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("outscale:index/getAccessKey:getAccessKey", {
        "accessKeyId": args.accessKeyId,
        "filters": args.filters,
        "state": args.state,
        "userName": args.userName,
    }, opts);
}

/**
 * A collection of arguments for invoking getAccessKey.
 */
export interface GetAccessKeyArgs {
    /**
     * The ID of the access key.
     */
    accessKeyId?: string;
    /**
     * A combination of a filter name and one or more filter values. You can specify this argument for as many filter names as you need. The filter name can be any of the following:
     */
    filters?: inputs.GetAccessKeyFilter[];
    /**
     * The state of the access key (`ACTIVE` if the key is valid for API calls, or `INACTIVE` if not).
     */
    state?: string;
    /**
     * The name of the EIM user. By default, the user who sends the request (which can be the root account).
     */
    userName?: string;
}

/**
 * A collection of values returned by getAccessKey.
 */
export interface GetAccessKeyResult {
    /**
     * The ID of the access key.
     */
    readonly accessKeyId?: string;
    /**
     * The date and time (UTC) at which the access key was created.
     */
    readonly creationDate: string;
    /**
     * The date and time (UTC) at which the access key expires.
     */
    readonly expirationDate: string;
    readonly filters?: outputs.GetAccessKeyFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The date and time (UTC) at which the access key was last modified.
     */
    readonly lastModificationDate: string;
    readonly requestId: string;
    /**
     * The state of the access key (`ACTIVE` if the key is valid for API calls, or `INACTIVE` if not).
     */
    readonly state?: string;
    readonly userName?: string;
}
/**
 * Provides information about an access key.
 *
 * For more information on this resource, see the [User Guide](https://docs.outscale.com/en/userguide/About-Access-Keys.html).\
 * For more information on this resource actions, see the [API documentation](https://docs.outscale.com/api#3ds-outscale-api-accesskey).
 *
 * ## Example Usage
 *
 * ### Get one of your own access keys (root account or user)
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as outscale from "@outscale/pulumi-outscale";
 *
 * const accessKey01 = outscale.getAccessKey({
 *     filters: [{
 *         name: "access_key_ids",
 *         values: ["ABCDEFGHIJ0123456789"],
 *     }],
 * });
 * ```
 *
 * ### Get the access key of another user
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as outscale from "@outscale/pulumi-outscale";
 *
 * const accessKey01 = outscale.getAccessKey({
 *     userName: "user_name",
 *     filters: [
 *         {
 *             name: "access_key_ids",
 *             values: ["XXXXXXXXX"],
 *         },
 *         {
 *             name: "states",
 *             values: ["ACTIVE"],
 *         },
 *     ],
 * });
 * ```
 */
export function getAccessKeyOutput(args?: GetAccessKeyOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetAccessKeyResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("outscale:index/getAccessKey:getAccessKey", {
        "accessKeyId": args.accessKeyId,
        "filters": args.filters,
        "state": args.state,
        "userName": args.userName,
    }, opts);
}

/**
 * A collection of arguments for invoking getAccessKey.
 */
export interface GetAccessKeyOutputArgs {
    /**
     * The ID of the access key.
     */
    accessKeyId?: pulumi.Input<string>;
    /**
     * A combination of a filter name and one or more filter values. You can specify this argument for as many filter names as you need. The filter name can be any of the following:
     */
    filters?: pulumi.Input<pulumi.Input<inputs.GetAccessKeyFilterArgs>[]>;
    /**
     * The state of the access key (`ACTIVE` if the key is valid for API calls, or `INACTIVE` if not).
     */
    state?: pulumi.Input<string>;
    /**
     * The name of the EIM user. By default, the user who sends the request (which can be the root account).
     */
    userName?: pulumi.Input<string>;
}
