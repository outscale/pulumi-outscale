// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Manages a user.
 *
 * For more information on this resource, see the [User Guide](https://docs.outscale.com/en/userguide/About-EIM-Users.html).\
 * For more information on this resource actions, see the [API documentation](https://docs.outscale.com/api.html#createuser).
 *
 * ## Example Usage
 *
 * ### Creating a user
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as outscale from "@outscale/pulumi-outscale";
 *
 * const user_1 = new outscale.User("user-1", {
 *     userName: "User-TF-1",
 *     userEmail: "test-TF1@test2.fr",
 *     path: "/terraform/",
 * });
 * ```
 *
 * ### Linking a policy to a user
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as outscale from "@outscale/pulumi-outscale";
 *
 * const user_1 = new outscale.User("user-1", {
 *     userName: "User-TF-1",
 *     policies: [{
 *         policyOrn: policy_1.orn,
 *         defaultVersionId: "V1",
 *     }],
 * });
 * ```
 *
 * ## Import
 *
 * A user can be imported using its ID. For example:
 *
 * console
 *
 * ```sh
 * $ pulumi import outscale:index/user:User user1 user_id
 * ```
 */
export class User extends pulumi.CustomResource {
    /**
     * Get an existing User resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: UserState, opts?: pulumi.CustomResourceOptions): User {
        return new User(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'outscale:index/user:User';

    /**
     * Returns true if the given object is an instance of User.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is User {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === User.__pulumiType;
    }

    /**
     * The date and time (UTC) of creation of the EIM user.
     */
    public /*out*/ readonly creationDate!: pulumi.Output<string>;
    /**
     * The date and time (UTC) of the last modification of the EIM user.
     */
    public /*out*/ readonly lastModificationDate!: pulumi.Output<string>;
    /**
     * The path to the EIM user you want to create (by default, `/`). This path name must begin and end with a slash (`/`), and contain between 1 and 512 alphanumeric characters and/or slashes (`/`), or underscores (`_`).
     */
    public readonly path!: pulumi.Output<string | undefined>;
    public readonly policies!: pulumi.Output<outputs.UserPolicy[] | undefined>;
    /**
     * The email address of the EIM user.
     */
    public readonly userEmail!: pulumi.Output<string>;
    /**
     * The ID of the EIM user.
     */
    public /*out*/ readonly userId!: pulumi.Output<string>;
    /**
     * The name of the EIM user. This user name must contain between 1 and 64 alphanumeric characters and/or pluses (`+`), equals (`=`), commas (`,`), periods (`.`), at signs (`@`), dashes (`-`), or underscores (`_`).
     */
    public readonly userName!: pulumi.Output<string>;

    /**
     * Create a User resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: UserArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: UserArgs | UserState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as UserState | undefined;
            resourceInputs["creationDate"] = state ? state.creationDate : undefined;
            resourceInputs["lastModificationDate"] = state ? state.lastModificationDate : undefined;
            resourceInputs["path"] = state ? state.path : undefined;
            resourceInputs["policies"] = state ? state.policies : undefined;
            resourceInputs["userEmail"] = state ? state.userEmail : undefined;
            resourceInputs["userId"] = state ? state.userId : undefined;
            resourceInputs["userName"] = state ? state.userName : undefined;
        } else {
            const args = argsOrState as UserArgs | undefined;
            if ((!args || args.userName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'userName'");
            }
            resourceInputs["path"] = args ? args.path : undefined;
            resourceInputs["policies"] = args ? args.policies : undefined;
            resourceInputs["userEmail"] = args ? args.userEmail : undefined;
            resourceInputs["userName"] = args ? args.userName : undefined;
            resourceInputs["creationDate"] = undefined /*out*/;
            resourceInputs["lastModificationDate"] = undefined /*out*/;
            resourceInputs["userId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(User.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering User resources.
 */
export interface UserState {
    /**
     * The date and time (UTC) of creation of the EIM user.
     */
    creationDate?: pulumi.Input<string>;
    /**
     * The date and time (UTC) of the last modification of the EIM user.
     */
    lastModificationDate?: pulumi.Input<string>;
    /**
     * The path to the EIM user you want to create (by default, `/`). This path name must begin and end with a slash (`/`), and contain between 1 and 512 alphanumeric characters and/or slashes (`/`), or underscores (`_`).
     */
    path?: pulumi.Input<string>;
    policies?: pulumi.Input<pulumi.Input<inputs.UserPolicy>[]>;
    /**
     * The email address of the EIM user.
     */
    userEmail?: pulumi.Input<string>;
    /**
     * The ID of the EIM user.
     */
    userId?: pulumi.Input<string>;
    /**
     * The name of the EIM user. This user name must contain between 1 and 64 alphanumeric characters and/or pluses (`+`), equals (`=`), commas (`,`), periods (`.`), at signs (`@`), dashes (`-`), or underscores (`_`).
     */
    userName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a User resource.
 */
export interface UserArgs {
    /**
     * The path to the EIM user you want to create (by default, `/`). This path name must begin and end with a slash (`/`), and contain between 1 and 512 alphanumeric characters and/or slashes (`/`), or underscores (`_`).
     */
    path?: pulumi.Input<string>;
    policies?: pulumi.Input<pulumi.Input<inputs.UserPolicy>[]>;
    /**
     * The email address of the EIM user.
     */
    userEmail?: pulumi.Input<string>;
    /**
     * The name of the EIM user. This user name must contain between 1 and 64 alphanumeric characters and/or pluses (`+`), equals (`=`), commas (`,`), periods (`.`), at signs (`@`), dashes (`-`), or underscores (`_`).
     */
    userName: pulumi.Input<string>;
}
