// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class ApiAccessPolicy extends pulumi.CustomResource {
    /**
     * Get an existing ApiAccessPolicy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ApiAccessPolicyState, opts?: pulumi.CustomResourceOptions): ApiAccessPolicy {
        return new ApiAccessPolicy(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'outscale:index/apiAccessPolicy:ApiAccessPolicy';

    /**
     * Returns true if the given object is an instance of ApiAccessPolicy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ApiAccessPolicy {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ApiAccessPolicy.__pulumiType;
    }

    public readonly maxAccessKeyExpirationSeconds!: pulumi.Output<number>;
    public /*out*/ readonly requestId!: pulumi.Output<string>;
    public readonly requireTrustedEnv!: pulumi.Output<boolean>;

    /**
     * Create a ApiAccessPolicy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ApiAccessPolicyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ApiAccessPolicyArgs | ApiAccessPolicyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ApiAccessPolicyState | undefined;
            resourceInputs["maxAccessKeyExpirationSeconds"] = state ? state.maxAccessKeyExpirationSeconds : undefined;
            resourceInputs["requestId"] = state ? state.requestId : undefined;
            resourceInputs["requireTrustedEnv"] = state ? state.requireTrustedEnv : undefined;
        } else {
            const args = argsOrState as ApiAccessPolicyArgs | undefined;
            if ((!args || args.maxAccessKeyExpirationSeconds === undefined) && !opts.urn) {
                throw new Error("Missing required property 'maxAccessKeyExpirationSeconds'");
            }
            if ((!args || args.requireTrustedEnv === undefined) && !opts.urn) {
                throw new Error("Missing required property 'requireTrustedEnv'");
            }
            resourceInputs["maxAccessKeyExpirationSeconds"] = args ? args.maxAccessKeyExpirationSeconds : undefined;
            resourceInputs["requireTrustedEnv"] = args ? args.requireTrustedEnv : undefined;
            resourceInputs["requestId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ApiAccessPolicy.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ApiAccessPolicy resources.
 */
export interface ApiAccessPolicyState {
    maxAccessKeyExpirationSeconds?: pulumi.Input<number>;
    requestId?: pulumi.Input<string>;
    requireTrustedEnv?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a ApiAccessPolicy resource.
 */
export interface ApiAccessPolicyArgs {
    maxAccessKeyExpirationSeconds: pulumi.Input<number>;
    requireTrustedEnv: pulumi.Input<boolean>;
}
