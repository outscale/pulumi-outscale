// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Manages the API access policy.
 *
 * To activate a trusted session, first you must:
 * * Set expiration dates to all your access keys.
 * * Specify a Certificate Authority (CA) in all your API access rules.
 *
 * For more information on this resource, see the [User Guide](https://docs.outscale.com/en/userguide/About-Your-API-Access-Policy.html).\
 * For more information on this resource actions, see the [API documentation](https://docs.outscale.com/api#3ds-outscale-api-apiaccesspolicy).
 *
 * ## Example Usage
 *
 * ### Require expiration dates for your access keys
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as outscale from "@outscale/pulumi-outscale";
 *
 * const unique = new outscale.ApiAccessPolicy("unique", {
 *     maxAccessKeyExpirationSeconds: 31536000,
 *     requireTrustedEnv: false,
 * });
 * ```
 *
 * ### Activate a trusted session
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as outscale from "@outscale/pulumi-outscale";
 *
 * const unique = new outscale.ApiAccessPolicy("unique", {
 *     maxAccessKeyExpirationSeconds: 3153600000,
 *     requireTrustedEnv: true,
 * });
 * ```
 *
 * ### Deactivate a trusted session
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as outscale from "@outscale/pulumi-outscale";
 *
 * const unique = new outscale.ApiAccessPolicy("unique", {
 *     maxAccessKeyExpirationSeconds: 0,
 *     requireTrustedEnv: false,
 * });
 * ```
 */
export class ApiAccessPolicy extends pulumi.CustomResource {
    /**
     * Get an existing ApiAccessPolicy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ApiAccessPolicyState, opts?: pulumi.CustomResourceOptions): ApiAccessPolicy {
        return new ApiAccessPolicy(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'outscale:index/apiAccessPolicy:ApiAccessPolicy';

    /**
     * Returns true if the given object is an instance of ApiAccessPolicy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ApiAccessPolicy {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ApiAccessPolicy.__pulumiType;
    }

    /**
     * The maximum possible lifetime for your access keys, in seconds (between `0` and `3153600000`, both included). If set to `O`, your access keys can have unlimited lifetimes, but a trusted session cannot be activated. Otherwise, all your access keys must have an expiration date. This value must be greater than the remaining lifetime of each access key of your account.
     */
    public readonly maxAccessKeyExpirationSeconds!: pulumi.Output<number>;
    public /*out*/ readonly requestId!: pulumi.Output<string>;
    /**
     * If true, a trusted session is activated, provided that you specify the `maxAccessKeyExpirationSeconds` parameter with a value greater than `0`.<br />
     * Enabling this will require you and all your users to log in to Cockpit v2 using the WebAuthn method for multi-factor authentication. For more information, see [About Authentication > Multi-Factor Authentication](https://docs.outscale.com/en/userguide/About-Authentication.html#_multi_factor_authentication).
     */
    public readonly requireTrustedEnv!: pulumi.Output<boolean>;

    /**
     * Create a ApiAccessPolicy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ApiAccessPolicyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ApiAccessPolicyArgs | ApiAccessPolicyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ApiAccessPolicyState | undefined;
            resourceInputs["maxAccessKeyExpirationSeconds"] = state ? state.maxAccessKeyExpirationSeconds : undefined;
            resourceInputs["requestId"] = state ? state.requestId : undefined;
            resourceInputs["requireTrustedEnv"] = state ? state.requireTrustedEnv : undefined;
        } else {
            const args = argsOrState as ApiAccessPolicyArgs | undefined;
            if ((!args || args.maxAccessKeyExpirationSeconds === undefined) && !opts.urn) {
                throw new Error("Missing required property 'maxAccessKeyExpirationSeconds'");
            }
            if ((!args || args.requireTrustedEnv === undefined) && !opts.urn) {
                throw new Error("Missing required property 'requireTrustedEnv'");
            }
            resourceInputs["maxAccessKeyExpirationSeconds"] = args ? args.maxAccessKeyExpirationSeconds : undefined;
            resourceInputs["requireTrustedEnv"] = args ? args.requireTrustedEnv : undefined;
            resourceInputs["requestId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ApiAccessPolicy.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ApiAccessPolicy resources.
 */
export interface ApiAccessPolicyState {
    /**
     * The maximum possible lifetime for your access keys, in seconds (between `0` and `3153600000`, both included). If set to `O`, your access keys can have unlimited lifetimes, but a trusted session cannot be activated. Otherwise, all your access keys must have an expiration date. This value must be greater than the remaining lifetime of each access key of your account.
     */
    maxAccessKeyExpirationSeconds?: pulumi.Input<number>;
    requestId?: pulumi.Input<string>;
    /**
     * If true, a trusted session is activated, provided that you specify the `maxAccessKeyExpirationSeconds` parameter with a value greater than `0`.<br />
     * Enabling this will require you and all your users to log in to Cockpit v2 using the WebAuthn method for multi-factor authentication. For more information, see [About Authentication > Multi-Factor Authentication](https://docs.outscale.com/en/userguide/About-Authentication.html#_multi_factor_authentication).
     */
    requireTrustedEnv?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a ApiAccessPolicy resource.
 */
export interface ApiAccessPolicyArgs {
    /**
     * The maximum possible lifetime for your access keys, in seconds (between `0` and `3153600000`, both included). If set to `O`, your access keys can have unlimited lifetimes, but a trusted session cannot be activated. Otherwise, all your access keys must have an expiration date. This value must be greater than the remaining lifetime of each access key of your account.
     */
    maxAccessKeyExpirationSeconds: pulumi.Input<number>;
    /**
     * If true, a trusted session is activated, provided that you specify the `maxAccessKeyExpirationSeconds` parameter with a value greater than `0`.<br />
     * Enabling this will require you and all your users to log in to Cockpit v2 using the WebAuthn method for multi-factor authentication. For more information, see [About Authentication > Multi-Factor Authentication](https://docs.outscale.com/en/userguide/About-Authentication.html#_multi_factor_authentication).
     */
    requireTrustedEnv: pulumi.Input<boolean>;
}
