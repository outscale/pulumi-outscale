// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getSubnet(args?: GetSubnetArgs, opts?: pulumi.InvokeOptions): Promise<GetSubnetResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("outscale:index/getSubnet:getSubnet", {
        "filters": args.filters,
        "subnetId": args.subnetId,
    }, opts);
}

/**
 * A collection of arguments for invoking getSubnet.
 */
export interface GetSubnetArgs {
    filters?: inputs.GetSubnetFilter[];
    subnetId?: string;
}

/**
 * A collection of values returned by getSubnet.
 */
export interface GetSubnetResult {
    readonly availableIpsCount: number;
    readonly filters?: outputs.GetSubnetFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly ipRange: string;
    readonly mapPublicIpOnLaunch: boolean;
    readonly netId: string;
    readonly requestId: string;
    readonly state: string;
    readonly subnetId: string;
    readonly subregionName: string;
    readonly tags: outputs.GetSubnetTag[];
}
export function getSubnetOutput(args?: GetSubnetOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSubnetResult> {
    return pulumi.output(args).apply((a: any) => getSubnet(a, opts))
}

/**
 * A collection of arguments for invoking getSubnet.
 */
export interface GetSubnetOutputArgs {
    filters?: pulumi.Input<pulumi.Input<inputs.GetSubnetFilterArgs>[]>;
    subnetId?: pulumi.Input<string>;
}
