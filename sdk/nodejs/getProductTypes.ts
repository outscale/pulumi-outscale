// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Provides information about product types.
 *
 * For more information on this resource, see the [User Guide](https://docs.outscale.com/en/userguide/Software-Licenses.html).\
 * For more information on this resource actions, see the [API documentation](https://docs.outscale.com/api#3ds-outscale-api-producttype).
 *
 * ## Example Usage
 *
 * ### Read specific product types
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as outscale from "@outscale/pulumi-outscale";
 *
 * const productTypes01 = outscale.getProductTypes({
 *     filters: [{
 *         name: "product_type_ids",
 *         values: [
 *             "0001",
 *             "0002",
 *         ],
 *     }],
 * });
 * ```
 *
 * ### Read all product types
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as outscale from "@outscale/pulumi-outscale";
 *
 * const allProductTypes = outscale.getProductTypes({});
 * ```
 */
export function getProductTypes(args?: GetProductTypesArgs, opts?: pulumi.InvokeOptions): Promise<GetProductTypesResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("outscale:index/getProductTypes:getProductTypes", {
        "filters": args.filters,
    }, opts);
}

/**
 * A collection of arguments for invoking getProductTypes.
 */
export interface GetProductTypesArgs {
    /**
     * A combination of a filter name and one or more filter values. You can specify this argument for as many filter names as you need. The filter name can be any of the following:
     */
    filters?: inputs.GetProductTypesFilter[];
}

/**
 * A collection of values returned by getProductTypes.
 */
export interface GetProductTypesResult {
    readonly filters?: outputs.GetProductTypesFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Information about one or more product types.
     */
    readonly productTypes: outputs.GetProductTypesProductType[];
    readonly requestId: string;
}
/**
 * Provides information about product types.
 *
 * For more information on this resource, see the [User Guide](https://docs.outscale.com/en/userguide/Software-Licenses.html).\
 * For more information on this resource actions, see the [API documentation](https://docs.outscale.com/api#3ds-outscale-api-producttype).
 *
 * ## Example Usage
 *
 * ### Read specific product types
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as outscale from "@outscale/pulumi-outscale";
 *
 * const productTypes01 = outscale.getProductTypes({
 *     filters: [{
 *         name: "product_type_ids",
 *         values: [
 *             "0001",
 *             "0002",
 *         ],
 *     }],
 * });
 * ```
 *
 * ### Read all product types
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as outscale from "@outscale/pulumi-outscale";
 *
 * const allProductTypes = outscale.getProductTypes({});
 * ```
 */
export function getProductTypesOutput(args?: GetProductTypesOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetProductTypesResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("outscale:index/getProductTypes:getProductTypes", {
        "filters": args.filters,
    }, opts);
}

/**
 * A collection of arguments for invoking getProductTypes.
 */
export interface GetProductTypesOutputArgs {
    /**
     * A combination of a filter name and one or more filter values. You can specify this argument for as many filter names as you need. The filter name can be any of the following:
     */
    filters?: pulumi.Input<pulumi.Input<inputs.GetProductTypesFilterArgs>[]>;
}
