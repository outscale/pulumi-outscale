// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getVolume(args?: GetVolumeArgs, opts?: pulumi.InvokeOptions): Promise<GetVolumeResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("outscale:index/getVolume:getVolume", {
        "filters": args.filters,
        "requestId": args.requestId,
        "volumeId": args.volumeId,
    }, opts);
}

/**
 * A collection of arguments for invoking getVolume.
 */
export interface GetVolumeArgs {
    filters?: inputs.GetVolumeFilter[];
    requestId?: string;
    volumeId?: string;
}

/**
 * A collection of values returned by getVolume.
 */
export interface GetVolumeResult {
    readonly creationDate: string;
    readonly filters?: outputs.GetVolumeFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly iops: number;
    readonly linkedVolumes: outputs.GetVolumeLinkedVolume[];
    readonly requestId?: string;
    readonly size: number;
    readonly snapshotId: string;
    readonly state: string;
    readonly subregionName: string;
    readonly tags: outputs.GetVolumeTag[];
    readonly volumeId?: string;
    readonly volumeType: string;
}
export function getVolumeOutput(args?: GetVolumeOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetVolumeResult> {
    return pulumi.output(args).apply((a: any) => getVolume(a, opts))
}

/**
 * A collection of arguments for invoking getVolume.
 */
export interface GetVolumeOutputArgs {
    filters?: pulumi.Input<pulumi.Input<inputs.GetVolumeFilterArgs>[]>;
    requestId?: pulumi.Input<string>;
    volumeId?: pulumi.Input<string>;
}
