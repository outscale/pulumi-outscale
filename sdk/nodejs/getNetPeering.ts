// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Provides information about a Net peering.
 *
 * For more information on this resource, see the [User Guide](https://docs.outscale.com/en/userguide/About-VPC-Peering-Connections.html).\
 * For more information on this resource actions, see the [API documentation](https://docs.outscale.com/api#3ds-outscale-api-netpeering).
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as outscale from "@pulumi/outscale";
 *
 * const netPeering01 = outscale.getNetPeering({
 *     filters: [{
 *         name: "net_peering_ids",
 *         values: ["pcx-12345678"],
 *     }],
 * });
 * ```
 */
export function getNetPeering(args?: GetNetPeeringArgs, opts?: pulumi.InvokeOptions): Promise<GetNetPeeringResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("outscale:index/getNetPeering:getNetPeering", {
        "filters": args.filters,
    }, opts);
}

/**
 * A collection of arguments for invoking getNetPeering.
 */
export interface GetNetPeeringArgs {
    /**
     * A combination of a filter name and one or more filter values. You can specify this argument for as many filter names as you need. The filter name can be any of the following:
     */
    filters?: inputs.GetNetPeeringFilter[];
}

/**
 * A collection of values returned by getNetPeering.
 */
export interface GetNetPeeringResult {
    /**
     * Information about the accepter Net.
     */
    readonly accepterNets: outputs.GetNetPeeringAccepterNet[];
    readonly filters?: outputs.GetNetPeeringFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The ID of the Net peering.
     */
    readonly netPeeringId: string;
    readonly requestId: string;
    /**
     * Information about the source Net.
     */
    readonly sourceNets: outputs.GetNetPeeringSourceNet[];
    /**
     * Information about the state of the Net peering.
     */
    readonly states: outputs.GetNetPeeringState[];
    /**
     * One or more tags associated with the Net peering.
     */
    readonly tags: outputs.GetNetPeeringTag[];
}
/**
 * Provides information about a Net peering.
 *
 * For more information on this resource, see the [User Guide](https://docs.outscale.com/en/userguide/About-VPC-Peering-Connections.html).\
 * For more information on this resource actions, see the [API documentation](https://docs.outscale.com/api#3ds-outscale-api-netpeering).
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as outscale from "@pulumi/outscale";
 *
 * const netPeering01 = outscale.getNetPeering({
 *     filters: [{
 *         name: "net_peering_ids",
 *         values: ["pcx-12345678"],
 *     }],
 * });
 * ```
 */
export function getNetPeeringOutput(args?: GetNetPeeringOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNetPeeringResult> {
    return pulumi.output(args).apply((a: any) => getNetPeering(a, opts))
}

/**
 * A collection of arguments for invoking getNetPeering.
 */
export interface GetNetPeeringOutputArgs {
    /**
     * A combination of a filter name and one or more filter values. You can specify this argument for as many filter names as you need. The filter name can be any of the following:
     */
    filters?: pulumi.Input<pulumi.Input<inputs.GetNetPeeringFilterArgs>[]>;
}
