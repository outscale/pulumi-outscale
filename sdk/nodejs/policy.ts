// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Manages a policy.
 *
 * For more information on this resource, see the [User Guide](https://docs.outscale.com/en/userguide/About-Policies.html).\
 * For more information on this resource actions, see the [API documentation](https://docs.outscale.com/api.html#3ds-outscale-api-policy).
 *
 * ## Import
 *
 * A policy can be imported using its ORN. For example:
 *
 * console
 *
 * ```sh
 * $ pulumi import outscale:index/policy:Policy policy1 orn
 * ```
 */
export class Policy extends pulumi.CustomResource {
    /**
     * Get an existing Policy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: PolicyState, opts?: pulumi.CustomResourceOptions): Policy {
        return new Policy(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'outscale:index/policy:Policy';

    /**
     * Returns true if the given object is an instance of Policy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Policy {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Policy.__pulumiType;
    }

    /**
     * The date and time (UTC) at which the policy was created.
     */
    public /*out*/ readonly creationDate!: pulumi.Output<string>;
    /**
     * A description for the policy.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The policy document, corresponding to a JSON string that contains the policy. This policy document can contain a maximum of 5120 non-whitespace characters. For more information, see [EIM Reference Information](https://docs.outscale.com/en/userguide/EIM-Reference-Information.html) and [EIM Policy Generator](https://docs.outscale.com/en/userguide/EIM-Policy-Generator.html).
     */
    public readonly document!: pulumi.Output<string>;
    /**
     * Indicates whether the policy can be linked to a group or an EIM user.
     */
    public /*out*/ readonly isLinkable!: pulumi.Output<boolean>;
    /**
     * The date and time (UTC) at which the policy was last modified.
     */
    public /*out*/ readonly lastModificationDate!: pulumi.Output<string>;
    /**
     * The OUTSCALE Resource Name (ORN) of the policy. For more information, see [Resource Identifiers](https://docs.outscale.com/en/userguide/Resource-Identifiers.html).
     */
    public /*out*/ readonly orn!: pulumi.Output<string>;
    /**
     * The path of the policy.
     */
    public readonly path!: pulumi.Output<string>;
    /**
     * The ID of the policy default version.
     */
    public /*out*/ readonly policyDefaultVersionId!: pulumi.Output<string>;
    /**
     * The ID of the policy.
     */
    public /*out*/ readonly policyId!: pulumi.Output<string>;
    /**
     * The name of the policy.
     */
    public readonly policyName!: pulumi.Output<string>;
    /**
     * The number of resources attached to the policy.
     */
    public /*out*/ readonly resourcesCount!: pulumi.Output<number>;

    /**
     * Create a Policy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PolicyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: PolicyArgs | PolicyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as PolicyState | undefined;
            resourceInputs["creationDate"] = state ? state.creationDate : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["document"] = state ? state.document : undefined;
            resourceInputs["isLinkable"] = state ? state.isLinkable : undefined;
            resourceInputs["lastModificationDate"] = state ? state.lastModificationDate : undefined;
            resourceInputs["orn"] = state ? state.orn : undefined;
            resourceInputs["path"] = state ? state.path : undefined;
            resourceInputs["policyDefaultVersionId"] = state ? state.policyDefaultVersionId : undefined;
            resourceInputs["policyId"] = state ? state.policyId : undefined;
            resourceInputs["policyName"] = state ? state.policyName : undefined;
            resourceInputs["resourcesCount"] = state ? state.resourcesCount : undefined;
        } else {
            const args = argsOrState as PolicyArgs | undefined;
            if ((!args || args.document === undefined) && !opts.urn) {
                throw new Error("Missing required property 'document'");
            }
            if ((!args || args.policyName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'policyName'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["document"] = args ? args.document : undefined;
            resourceInputs["path"] = args ? args.path : undefined;
            resourceInputs["policyName"] = args ? args.policyName : undefined;
            resourceInputs["creationDate"] = undefined /*out*/;
            resourceInputs["isLinkable"] = undefined /*out*/;
            resourceInputs["lastModificationDate"] = undefined /*out*/;
            resourceInputs["orn"] = undefined /*out*/;
            resourceInputs["policyDefaultVersionId"] = undefined /*out*/;
            resourceInputs["policyId"] = undefined /*out*/;
            resourceInputs["resourcesCount"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Policy.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Policy resources.
 */
export interface PolicyState {
    /**
     * The date and time (UTC) at which the policy was created.
     */
    creationDate?: pulumi.Input<string>;
    /**
     * A description for the policy.
     */
    description?: pulumi.Input<string>;
    /**
     * The policy document, corresponding to a JSON string that contains the policy. This policy document can contain a maximum of 5120 non-whitespace characters. For more information, see [EIM Reference Information](https://docs.outscale.com/en/userguide/EIM-Reference-Information.html) and [EIM Policy Generator](https://docs.outscale.com/en/userguide/EIM-Policy-Generator.html).
     */
    document?: pulumi.Input<string>;
    /**
     * Indicates whether the policy can be linked to a group or an EIM user.
     */
    isLinkable?: pulumi.Input<boolean>;
    /**
     * The date and time (UTC) at which the policy was last modified.
     */
    lastModificationDate?: pulumi.Input<string>;
    /**
     * The OUTSCALE Resource Name (ORN) of the policy. For more information, see [Resource Identifiers](https://docs.outscale.com/en/userguide/Resource-Identifiers.html).
     */
    orn?: pulumi.Input<string>;
    /**
     * The path of the policy.
     */
    path?: pulumi.Input<string>;
    /**
     * The ID of the policy default version.
     */
    policyDefaultVersionId?: pulumi.Input<string>;
    /**
     * The ID of the policy.
     */
    policyId?: pulumi.Input<string>;
    /**
     * The name of the policy.
     */
    policyName?: pulumi.Input<string>;
    /**
     * The number of resources attached to the policy.
     */
    resourcesCount?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a Policy resource.
 */
export interface PolicyArgs {
    /**
     * A description for the policy.
     */
    description?: pulumi.Input<string>;
    /**
     * The policy document, corresponding to a JSON string that contains the policy. This policy document can contain a maximum of 5120 non-whitespace characters. For more information, see [EIM Reference Information](https://docs.outscale.com/en/userguide/EIM-Reference-Information.html) and [EIM Policy Generator](https://docs.outscale.com/en/userguide/EIM-Policy-Generator.html).
     */
    document: pulumi.Input<string>;
    /**
     * The path of the policy.
     */
    path?: pulumi.Input<string>;
    /**
     * The name of the policy.
     */
    policyName: pulumi.Input<string>;
}
