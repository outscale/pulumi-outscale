// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Provides information about a Net access point.
 *
 * For more information on this resource, see the [User Guide](https://docs.outscale.com/en/userguide/About-VPC-Endpoints.html).\
 * For more information on this resource actions, see the [API documentation](https://docs.outscale.com/api#3ds-outscale-api-netaccesspoint).
 *
 * ## Example Usage
 * ### List a Net access point
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as outscale from "@pulumi/outscale";
 *
 * const netAccessPoint01 = outscale.getNetAccessPoint({
 *     filters: [{
 *         name: "net_access_point_ids",
 *         values: ["vpce-12345678"],
 *     }],
 * });
 * ```
 * ### List a Net access point according to its Net and state
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as outscale from "@pulumi/outscale";
 *
 * const netAccessPoint02 = outscale.getNetAccessPoint({
 *     filters: [
 *         {
 *             name: "net_ids",
 *             values: ["vpc-12345678"],
 *         },
 *         {
 *             name: "states",
 *             values: ["available"],
 *         },
 *     ],
 * });
 * ```
 */
export function getNetAccessPoint(args?: GetNetAccessPointArgs, opts?: pulumi.InvokeOptions): Promise<GetNetAccessPointResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("outscale:index/getNetAccessPoint:getNetAccessPoint", {
        "filters": args.filters,
    }, opts);
}

/**
 * A collection of arguments for invoking getNetAccessPoint.
 */
export interface GetNetAccessPointArgs {
    /**
     * A combination of a filter name and one or more filter values. You can specify this argument for as many filter names as you need. The filter name can be any of the following:
     */
    filters?: inputs.GetNetAccessPointFilter[];
}

/**
 * A collection of values returned by getNetAccessPoint.
 */
export interface GetNetAccessPointResult {
    readonly filters?: outputs.GetNetAccessPointFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The ID of the Net access point.
     */
    readonly netAccessPointId: string;
    /**
     * The ID of the Net with which the Net access point is associated.
     */
    readonly netId: string;
    readonly requestId: string;
    /**
     * The ID of the route tables associated with the Net access point.
     */
    readonly routeTableIds: string[];
    /**
     * The name of the service with which the Net access point is associated.
     */
    readonly serviceName: string;
    /**
     * The state of the Net access point (`pending` \| `available` \| `deleting` \| `deleted`).
     */
    readonly state: string;
    /**
     * One or more tags associated with the Net access point.
     */
    readonly tags: outputs.GetNetAccessPointTag[];
}
/**
 * Provides information about a Net access point.
 *
 * For more information on this resource, see the [User Guide](https://docs.outscale.com/en/userguide/About-VPC-Endpoints.html).\
 * For more information on this resource actions, see the [API documentation](https://docs.outscale.com/api#3ds-outscale-api-netaccesspoint).
 *
 * ## Example Usage
 * ### List a Net access point
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as outscale from "@pulumi/outscale";
 *
 * const netAccessPoint01 = outscale.getNetAccessPoint({
 *     filters: [{
 *         name: "net_access_point_ids",
 *         values: ["vpce-12345678"],
 *     }],
 * });
 * ```
 * ### List a Net access point according to its Net and state
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as outscale from "@pulumi/outscale";
 *
 * const netAccessPoint02 = outscale.getNetAccessPoint({
 *     filters: [
 *         {
 *             name: "net_ids",
 *             values: ["vpc-12345678"],
 *         },
 *         {
 *             name: "states",
 *             values: ["available"],
 *         },
 *     ],
 * });
 * ```
 */
export function getNetAccessPointOutput(args?: GetNetAccessPointOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNetAccessPointResult> {
    return pulumi.output(args).apply((a: any) => getNetAccessPoint(a, opts))
}

/**
 * A collection of arguments for invoking getNetAccessPoint.
 */
export interface GetNetAccessPointOutputArgs {
    /**
     * A combination of a filter name and one or more filter values. You can specify this argument for as many filter names as you need. The filter name can be any of the following:
     */
    filters?: pulumi.Input<pulumi.Input<inputs.GetNetAccessPointFilterArgs>[]>;
}
