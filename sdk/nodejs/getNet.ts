// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getNet(args?: GetNetArgs, opts?: pulumi.InvokeOptions): Promise<GetNetResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("outscale:index/getNet:getNet", {
        "filters": args.filters,
        "netId": args.netId,
    }, opts);
}

/**
 * A collection of arguments for invoking getNet.
 */
export interface GetNetArgs {
    filters?: inputs.GetNetFilter[];
    netId?: string;
}

/**
 * A collection of values returned by getNet.
 */
export interface GetNetResult {
    readonly dhcpOptionsSetId: string;
    readonly filters?: outputs.GetNetFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly ipRange: string;
    readonly netId: string;
    readonly requestId: string;
    readonly state: string;
    readonly tags: outputs.GetNetTag[];
    readonly tenancy: string;
}
export function getNetOutput(args?: GetNetOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNetResult> {
    return pulumi.output(args).apply((a: any) => getNet(a, opts))
}

/**
 * A collection of arguments for invoking getNet.
 */
export interface GetNetOutputArgs {
    filters?: pulumi.Input<pulumi.Input<inputs.GetNetFilterArgs>[]>;
    netId?: pulumi.Input<string>;
}
