// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Manages a keypair.
 *
 * For more information on this resource, see the [User Guide](https://docs.outscale.com/en/userguide/About-Keypairs.html).\
 * For more information on this resource actions, see the [API documentation](https://docs.outscale.com/api#3ds-outscale-api-keypair).
 *
 * ## Example Usage
 *
 * ### Create a keypair
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as outscale from "@outscale/pulumi-outscale";
 *
 * const keypair01 = new outscale.Keypair("keypair01", {keypairName: "terraform-keypair-create"});
 * ```
 *
 * ## Import
 *
 * A keypair can be imported using its name. For example:
 *
 * console
 *
 * ```sh
 * $ pulumi import outscale:index/keypair:Keypair ImportedKeypair keypair_id
 * ```
 */
export class Keypair extends pulumi.CustomResource {
    /**
     * Get an existing Keypair resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: KeypairState, opts?: pulumi.CustomResourceOptions): Keypair {
        return new Keypair(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'outscale:index/keypair:Keypair';

    /**
     * Returns true if the given object is an instance of Keypair.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Keypair {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Keypair.__pulumiType;
    }

    /**
     * The MD5 public key fingerprint, as specified in section 4 of RFC 4716.
     */
    public /*out*/ readonly keypairFingerprint!: pulumi.Output<string>;
    /**
     * The ID of the keypair.
     */
    public /*out*/ readonly keypairId!: pulumi.Output<string>;
    /**
     * A unique name for the keypair, with a maximum length of 255 [ASCII printable characters](https://en.wikipedia.org/wiki/ASCII#Printable_characters).
     */
    public readonly keypairName!: pulumi.Output<string>;
    /**
     * The type of the keypair (`ssh-rsa`, `ssh-ed25519`, `ecdsa-sha2-nistp256`, `ecdsa-sha2-nistp384`, or `ecdsa-sha2-nistp521`).
     */
    public /*out*/ readonly keypairType!: pulumi.Output<string>;
    /**
     * The private key, returned only if you are creating a keypair (not if you are importing). When you save this private key in a .rsa file, make sure you replace the `\n` escape sequences with real line breaks.
     */
    public /*out*/ readonly privateKey!: pulumi.Output<string>;
    /**
     * The public key to import in your account, if you are importing an existing keypair. This value must be Base64-encoded.
     */
    public readonly publicKey!: pulumi.Output<string | undefined>;
    public /*out*/ readonly requestId!: pulumi.Output<string>;
    /**
     * A tag to add to this resource. You can specify this argument several times.
     */
    public readonly tags!: pulumi.Output<outputs.KeypairTag[] | undefined>;
    public readonly timeouts!: pulumi.Output<outputs.KeypairTimeouts | undefined>;

    /**
     * Create a Keypair resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: KeypairArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: KeypairArgs | KeypairState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as KeypairState | undefined;
            resourceInputs["keypairFingerprint"] = state ? state.keypairFingerprint : undefined;
            resourceInputs["keypairId"] = state ? state.keypairId : undefined;
            resourceInputs["keypairName"] = state ? state.keypairName : undefined;
            resourceInputs["keypairType"] = state ? state.keypairType : undefined;
            resourceInputs["privateKey"] = state ? state.privateKey : undefined;
            resourceInputs["publicKey"] = state ? state.publicKey : undefined;
            resourceInputs["requestId"] = state ? state.requestId : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as KeypairArgs | undefined;
            if ((!args || args.keypairName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'keypairName'");
            }
            resourceInputs["keypairName"] = args ? args.keypairName : undefined;
            resourceInputs["publicKey"] = args ? args.publicKey : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["keypairFingerprint"] = undefined /*out*/;
            resourceInputs["keypairId"] = undefined /*out*/;
            resourceInputs["keypairType"] = undefined /*out*/;
            resourceInputs["privateKey"] = undefined /*out*/;
            resourceInputs["requestId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Keypair.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Keypair resources.
 */
export interface KeypairState {
    /**
     * The MD5 public key fingerprint, as specified in section 4 of RFC 4716.
     */
    keypairFingerprint?: pulumi.Input<string>;
    /**
     * The ID of the keypair.
     */
    keypairId?: pulumi.Input<string>;
    /**
     * A unique name for the keypair, with a maximum length of 255 [ASCII printable characters](https://en.wikipedia.org/wiki/ASCII#Printable_characters).
     */
    keypairName?: pulumi.Input<string>;
    /**
     * The type of the keypair (`ssh-rsa`, `ssh-ed25519`, `ecdsa-sha2-nistp256`, `ecdsa-sha2-nistp384`, or `ecdsa-sha2-nistp521`).
     */
    keypairType?: pulumi.Input<string>;
    /**
     * The private key, returned only if you are creating a keypair (not if you are importing). When you save this private key in a .rsa file, make sure you replace the `\n` escape sequences with real line breaks.
     */
    privateKey?: pulumi.Input<string>;
    /**
     * The public key to import in your account, if you are importing an existing keypair. This value must be Base64-encoded.
     */
    publicKey?: pulumi.Input<string>;
    requestId?: pulumi.Input<string>;
    /**
     * A tag to add to this resource. You can specify this argument several times.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.KeypairTag>[]>;
    timeouts?: pulumi.Input<inputs.KeypairTimeouts>;
}

/**
 * The set of arguments for constructing a Keypair resource.
 */
export interface KeypairArgs {
    /**
     * A unique name for the keypair, with a maximum length of 255 [ASCII printable characters](https://en.wikipedia.org/wiki/ASCII#Printable_characters).
     */
    keypairName: pulumi.Input<string>;
    /**
     * The public key to import in your account, if you are importing an existing keypair. This value must be Base64-encoded.
     */
    publicKey?: pulumi.Input<string>;
    /**
     * A tag to add to this resource. You can specify this argument several times.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.KeypairTag>[]>;
    timeouts?: pulumi.Input<inputs.KeypairTimeouts>;
}
