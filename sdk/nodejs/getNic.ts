// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getNic(args?: GetNicArgs, opts?: pulumi.InvokeOptions): Promise<GetNicResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("outscale:index/getNic:getNic", {
        "filters": args.filters,
        "nicId": args.nicId,
    }, opts);
}

/**
 * A collection of arguments for invoking getNic.
 */
export interface GetNicArgs {
    filters?: inputs.GetNicFilter[];
    nicId?: string;
}

/**
 * A collection of values returned by getNic.
 */
export interface GetNicResult {
    readonly accountId: string;
    readonly description: string;
    readonly filters?: outputs.GetNicFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly isSourceDestChecked: boolean;
    readonly linkNic: outputs.GetNicLinkNic;
    readonly linkPublicIp: outputs.GetNicLinkPublicIp;
    readonly macAddress: string;
    readonly netId: string;
    readonly nicId: string;
    readonly privateDnsName: string;
    readonly privateIp: string;
    readonly privateIps: outputs.GetNicPrivateIp[];
    readonly requestId: string;
    readonly requesterManaged: boolean;
    readonly securityGroupIds: string[];
    readonly securityGroups: outputs.GetNicSecurityGroup[];
    readonly state: string;
    readonly subnetId: string;
    readonly subregionName: string;
    readonly tags: outputs.GetNicTag[];
}
export function getNicOutput(args?: GetNicOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNicResult> {
    return pulumi.output(args).apply((a: any) => getNic(a, opts))
}

/**
 * A collection of arguments for invoking getNic.
 */
export interface GetNicOutputArgs {
    filters?: pulumi.Input<pulumi.Input<inputs.GetNicFilterArgs>[]>;
    nicId?: pulumi.Input<string>;
}
