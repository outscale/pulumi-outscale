// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Manages a snapshot.
 *
 * For more information on this resource, see the [User Guide](https://docs.outscale.com/en/userguide/About-Snapshots.html).\
 * For more information on this resource actions, see the [API documentation](https://docs.outscale.com/api#3ds-outscale-api-snapshot).
 *
 * ## Example Usage
 * ### Required resource
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as outscale from "@outscale/pulumi-outscale";
 *
 * const volume01 = new outscale.Volume("volume01", {
 *     size: 40,
 *     subregionName: `${_var.region}a`,
 * });
 * ```
 * ### Create a snapshot
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as outscale from "@outscale/pulumi-outscale";
 *
 * const snapshot01 = new outscale.Snapshot("snapshot01", {volumeId: outscale_volume.volume01.volume_id});
 * ```
 * ### Copy a snapshot
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as outscale from "@outscale/pulumi-outscale";
 *
 * const snapshot02 = new outscale.Snapshot("snapshot02", {
 *     description: "Terraform snapshot copy",
 *     sourceRegionName: "eu-west-2",
 *     sourceSnapshotId: "snap-12345678",
 * });
 * ```
 *
 * ## Import
 *
 * A snapshot can be imported using its ID. For exampleconsole
 *
 * ```sh
 *  $ pulumi import outscale:index/snapshot:Snapshot ImportedSnapshot snap-12345678
 * ```
 */
export class Snapshot extends pulumi.CustomResource {
    /**
     * Get an existing Snapshot resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SnapshotState, opts?: pulumi.CustomResourceOptions): Snapshot {
        return new Snapshot(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'outscale:index/snapshot:Snapshot';

    /**
     * Returns true if the given object is an instance of Snapshot.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Snapshot {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Snapshot.__pulumiType;
    }

    /**
     * The account alias of the owner of the snapshot.
     */
    public /*out*/ readonly accountAlias!: pulumi.Output<string>;
    /**
     * The account ID of the owner of the snapshot.
     */
    public /*out*/ readonly accountId!: pulumi.Output<string>;
    /**
     * The date and time of creation of the snapshot.
     */
    public /*out*/ readonly creationDate!: pulumi.Output<string>;
    /**
     * A description for the snapshot.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * (When importing) The pre-signed URL of the snapshot you want to import, or the normal URL of the snapshot if you have permission on the OOS bucket. For more information, see [Configuring a Pre-signed URL](https://docs.outscale.com/en/userguide/Configuring-a-Pre-signed-URL.html) or [Managing Access to Your Buckets and Objects](https://docs.outscale.com/en/userguide/Managing-Access-to-Your-Buckets-and-Objects.html).
     */
    public readonly fileLocation!: pulumi.Output<string>;
    /**
     * Permissions for the resource.
     */
    public /*out*/ readonly permissionsToCreateVolumes!: pulumi.Output<outputs.SnapshotPermissionsToCreateVolume[]>;
    /**
     * The progress of the snapshot, as a percentage.
     */
    public /*out*/ readonly progress!: pulumi.Output<number>;
    public /*out*/ readonly requestId!: pulumi.Output<string>;
    /**
     * The ID of the snapshot.
     */
    public /*out*/ readonly snapshotId!: pulumi.Output<string>;
    /**
     * (When importing) The size of the snapshot you want to create in your account, in bytes. This size must be greater than or equal to the size of the original, uncompressed snapshot.
     */
    public readonly snapshotSize!: pulumi.Output<number>;
    /**
     * (When copying) The name of the source Region, which must be the same as the Region of your account.
     */
    public readonly sourceRegionName!: pulumi.Output<string>;
    /**
     * (When copying) The ID of the snapshot you want to copy.
     */
    public readonly sourceSnapshotId!: pulumi.Output<string>;
    /**
     * The state of the snapshot (`in-queue` \| `completed` \| `error`).
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * A tag to add to this resource. You can specify this argument several times.
     */
    public readonly tags!: pulumi.Output<outputs.SnapshotTag[] | undefined>;
    /**
     * (When creating) The ID of the volume you want to create a snapshot of.
     */
    public readonly volumeId!: pulumi.Output<string>;
    /**
     * The size of the volume used to create the snapshot, in gibibytes (GiB).
     */
    public /*out*/ readonly volumeSize!: pulumi.Output<number>;

    /**
     * Create a Snapshot resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: SnapshotArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SnapshotArgs | SnapshotState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SnapshotState | undefined;
            resourceInputs["accountAlias"] = state ? state.accountAlias : undefined;
            resourceInputs["accountId"] = state ? state.accountId : undefined;
            resourceInputs["creationDate"] = state ? state.creationDate : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["fileLocation"] = state ? state.fileLocation : undefined;
            resourceInputs["permissionsToCreateVolumes"] = state ? state.permissionsToCreateVolumes : undefined;
            resourceInputs["progress"] = state ? state.progress : undefined;
            resourceInputs["requestId"] = state ? state.requestId : undefined;
            resourceInputs["snapshotId"] = state ? state.snapshotId : undefined;
            resourceInputs["snapshotSize"] = state ? state.snapshotSize : undefined;
            resourceInputs["sourceRegionName"] = state ? state.sourceRegionName : undefined;
            resourceInputs["sourceSnapshotId"] = state ? state.sourceSnapshotId : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["volumeId"] = state ? state.volumeId : undefined;
            resourceInputs["volumeSize"] = state ? state.volumeSize : undefined;
        } else {
            const args = argsOrState as SnapshotArgs | undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["fileLocation"] = args ? args.fileLocation : undefined;
            resourceInputs["snapshotSize"] = args ? args.snapshotSize : undefined;
            resourceInputs["sourceRegionName"] = args ? args.sourceRegionName : undefined;
            resourceInputs["sourceSnapshotId"] = args ? args.sourceSnapshotId : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["volumeId"] = args ? args.volumeId : undefined;
            resourceInputs["accountAlias"] = undefined /*out*/;
            resourceInputs["accountId"] = undefined /*out*/;
            resourceInputs["creationDate"] = undefined /*out*/;
            resourceInputs["permissionsToCreateVolumes"] = undefined /*out*/;
            resourceInputs["progress"] = undefined /*out*/;
            resourceInputs["requestId"] = undefined /*out*/;
            resourceInputs["snapshotId"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["volumeSize"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Snapshot.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Snapshot resources.
 */
export interface SnapshotState {
    /**
     * The account alias of the owner of the snapshot.
     */
    accountAlias?: pulumi.Input<string>;
    /**
     * The account ID of the owner of the snapshot.
     */
    accountId?: pulumi.Input<string>;
    /**
     * The date and time of creation of the snapshot.
     */
    creationDate?: pulumi.Input<string>;
    /**
     * A description for the snapshot.
     */
    description?: pulumi.Input<string>;
    /**
     * (When importing) The pre-signed URL of the snapshot you want to import, or the normal URL of the snapshot if you have permission on the OOS bucket. For more information, see [Configuring a Pre-signed URL](https://docs.outscale.com/en/userguide/Configuring-a-Pre-signed-URL.html) or [Managing Access to Your Buckets and Objects](https://docs.outscale.com/en/userguide/Managing-Access-to-Your-Buckets-and-Objects.html).
     */
    fileLocation?: pulumi.Input<string>;
    /**
     * Permissions for the resource.
     */
    permissionsToCreateVolumes?: pulumi.Input<pulumi.Input<inputs.SnapshotPermissionsToCreateVolume>[]>;
    /**
     * The progress of the snapshot, as a percentage.
     */
    progress?: pulumi.Input<number>;
    requestId?: pulumi.Input<string>;
    /**
     * The ID of the snapshot.
     */
    snapshotId?: pulumi.Input<string>;
    /**
     * (When importing) The size of the snapshot you want to create in your account, in bytes. This size must be greater than or equal to the size of the original, uncompressed snapshot.
     */
    snapshotSize?: pulumi.Input<number>;
    /**
     * (When copying) The name of the source Region, which must be the same as the Region of your account.
     */
    sourceRegionName?: pulumi.Input<string>;
    /**
     * (When copying) The ID of the snapshot you want to copy.
     */
    sourceSnapshotId?: pulumi.Input<string>;
    /**
     * The state of the snapshot (`in-queue` \| `completed` \| `error`).
     */
    state?: pulumi.Input<string>;
    /**
     * A tag to add to this resource. You can specify this argument several times.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.SnapshotTag>[]>;
    /**
     * (When creating) The ID of the volume you want to create a snapshot of.
     */
    volumeId?: pulumi.Input<string>;
    /**
     * The size of the volume used to create the snapshot, in gibibytes (GiB).
     */
    volumeSize?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a Snapshot resource.
 */
export interface SnapshotArgs {
    /**
     * A description for the snapshot.
     */
    description?: pulumi.Input<string>;
    /**
     * (When importing) The pre-signed URL of the snapshot you want to import, or the normal URL of the snapshot if you have permission on the OOS bucket. For more information, see [Configuring a Pre-signed URL](https://docs.outscale.com/en/userguide/Configuring-a-Pre-signed-URL.html) or [Managing Access to Your Buckets and Objects](https://docs.outscale.com/en/userguide/Managing-Access-to-Your-Buckets-and-Objects.html).
     */
    fileLocation?: pulumi.Input<string>;
    /**
     * (When importing) The size of the snapshot you want to create in your account, in bytes. This size must be greater than or equal to the size of the original, uncompressed snapshot.
     */
    snapshotSize?: pulumi.Input<number>;
    /**
     * (When copying) The name of the source Region, which must be the same as the Region of your account.
     */
    sourceRegionName?: pulumi.Input<string>;
    /**
     * (When copying) The ID of the snapshot you want to copy.
     */
    sourceSnapshotId?: pulumi.Input<string>;
    /**
     * A tag to add to this resource. You can specify this argument several times.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.SnapshotTag>[]>;
    /**
     * (When creating) The ID of the volume you want to create a snapshot of.
     */
    volumeId?: pulumi.Input<string>;
}
