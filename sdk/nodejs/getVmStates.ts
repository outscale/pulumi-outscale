// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getVmStates(args?: GetVmStatesArgs, opts?: pulumi.InvokeOptions): Promise<GetVmStatesResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("outscale:index/getVmStates:getVmStates", {
        "allVms": args.allVms,
        "filters": args.filters,
        "vmIds": args.vmIds,
    }, opts);
}

/**
 * A collection of arguments for invoking getVmStates.
 */
export interface GetVmStatesArgs {
    allVms?: boolean;
    filters?: inputs.GetVmStatesFilter[];
    vmIds?: string[];
}

/**
 * A collection of values returned by getVmStates.
 */
export interface GetVmStatesResult {
    readonly allVms?: boolean;
    readonly filters?: outputs.GetVmStatesFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly requestId: string;
    readonly vmIds?: string[];
    readonly vmStates: outputs.GetVmStatesVmState[];
}
export function getVmStatesOutput(args?: GetVmStatesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetVmStatesResult> {
    return pulumi.output(args).apply((a: any) => getVmStates(a, opts))
}

/**
 * A collection of arguments for invoking getVmStates.
 */
export interface GetVmStatesOutputArgs {
    allVms?: pulumi.Input<boolean>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetVmStatesFilterArgs>[]>;
    vmIds?: pulumi.Input<pulumi.Input<string>[]>;
}
