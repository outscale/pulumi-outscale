// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Manages a snapshot export task.
 *
 * For more information on this resource, see the [User Guide](https://docs.outscale.com/en/userguide/About-Snapshots.html).\
 * For more information on this resource actions, see the [API documentation](https://docs.outscale.com/api#3ds-outscale-api-snapshot).
 *
 * ## Example Usage
 * ### Required resources
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as outscale from "@pulumi/outscale";
 *
 * const volume01 = new outscale.Volume("volume01", {
 *     subregionName: `${_var.region}a`,
 *     size: 40,
 * });
 * const snapshot01 = new outscale.Snapshot("snapshot01", {volumeId: volume01.volumeId});
 * ```
 * ### Create a snapshot export task
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as outscale from "@pulumi/outscale";
 *
 * const snapshotExportTask01 = new outscale.SnapshotExportTask("snapshotExportTask01", {
 *     snapshotId: outscale_snapshot.snapshot01.snapshot_id,
 *     osuExports: [{
 *         diskImageFormat: "qcow2",
 *         osuBucket: "terraform-bucket",
 *         osuPrefix: "new-export",
 *         osuApiKeys: [{
 *             apiKeyId: _var.access_key_id,
 *             secretKey: _var.secret_key_id,
 *         }],
 *     }],
 *     tags: [{
 *         key: "Name",
 *         value: "terraform-snapshot-export-task",
 *     }],
 * });
 * ```
 */
export class SnapshotExportTask extends pulumi.CustomResource {
    /**
     * Get an existing SnapshotExportTask resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SnapshotExportTaskState, opts?: pulumi.CustomResourceOptions): SnapshotExportTask {
        return new SnapshotExportTask(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'outscale:index/snapshotExportTask:SnapshotExportTask';

    /**
     * Returns true if the given object is an instance of SnapshotExportTask.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SnapshotExportTask {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SnapshotExportTask.__pulumiType;
    }

    /**
     * If the snapshot export task fails, an error message appears.
     */
    public /*out*/ readonly comment!: pulumi.Output<string>;
    /**
     * Information about the OOS export task to create.
     */
    public readonly osuExports!: pulumi.Output<outputs.SnapshotExportTaskOsuExport[]>;
    /**
     * The progress of the snapshot export task, as a percentage.
     */
    public /*out*/ readonly progress!: pulumi.Output<number>;
    public /*out*/ readonly requestId!: pulumi.Output<string>;
    /**
     * The ID of the snapshot to export.
     */
    public readonly snapshotId!: pulumi.Output<string>;
    /**
     * The state of the snapshot export task (`pending` \| `active` \| `completed` \| `failed`).
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * A tag to add to this resource. You can specify this argument several times.
     */
    public readonly tags!: pulumi.Output<outputs.SnapshotExportTaskTag[] | undefined>;
    /**
     * The ID of the snapshot export task.
     */
    public /*out*/ readonly taskId!: pulumi.Output<string>;

    /**
     * Create a SnapshotExportTask resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SnapshotExportTaskArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SnapshotExportTaskArgs | SnapshotExportTaskState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SnapshotExportTaskState | undefined;
            resourceInputs["comment"] = state ? state.comment : undefined;
            resourceInputs["osuExports"] = state ? state.osuExports : undefined;
            resourceInputs["progress"] = state ? state.progress : undefined;
            resourceInputs["requestId"] = state ? state.requestId : undefined;
            resourceInputs["snapshotId"] = state ? state.snapshotId : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["taskId"] = state ? state.taskId : undefined;
        } else {
            const args = argsOrState as SnapshotExportTaskArgs | undefined;
            if ((!args || args.osuExports === undefined) && !opts.urn) {
                throw new Error("Missing required property 'osuExports'");
            }
            if ((!args || args.snapshotId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'snapshotId'");
            }
            resourceInputs["osuExports"] = args ? args.osuExports : undefined;
            resourceInputs["snapshotId"] = args ? args.snapshotId : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["comment"] = undefined /*out*/;
            resourceInputs["progress"] = undefined /*out*/;
            resourceInputs["requestId"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["taskId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SnapshotExportTask.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering SnapshotExportTask resources.
 */
export interface SnapshotExportTaskState {
    /**
     * If the snapshot export task fails, an error message appears.
     */
    comment?: pulumi.Input<string>;
    /**
     * Information about the OOS export task to create.
     */
    osuExports?: pulumi.Input<pulumi.Input<inputs.SnapshotExportTaskOsuExport>[]>;
    /**
     * The progress of the snapshot export task, as a percentage.
     */
    progress?: pulumi.Input<number>;
    requestId?: pulumi.Input<string>;
    /**
     * The ID of the snapshot to export.
     */
    snapshotId?: pulumi.Input<string>;
    /**
     * The state of the snapshot export task (`pending` \| `active` \| `completed` \| `failed`).
     */
    state?: pulumi.Input<string>;
    /**
     * A tag to add to this resource. You can specify this argument several times.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.SnapshotExportTaskTag>[]>;
    /**
     * The ID of the snapshot export task.
     */
    taskId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SnapshotExportTask resource.
 */
export interface SnapshotExportTaskArgs {
    /**
     * Information about the OOS export task to create.
     */
    osuExports: pulumi.Input<pulumi.Input<inputs.SnapshotExportTaskOsuExport>[]>;
    /**
     * The ID of the snapshot to export.
     */
    snapshotId: pulumi.Input<string>;
    /**
     * A tag to add to this resource. You can specify this argument several times.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.SnapshotExportTaskTag>[]>;
}
