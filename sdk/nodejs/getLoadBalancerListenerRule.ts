// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Provides information about a load balancer listener rule.
 *
 * For more information on this resource, see the [User Guide](https://docs.outscale.com/en/userguide/About-Load-Balancers.html).\
 * For more information on this resource actions, see the [API documentation](https://docs.outscale.com/api#3ds-outscale-api-listener).
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as outscale from "@outscale/pulumi-outscale";
 *
 * const rule01 = outscale.getLoadBalancerListenerRule({
 *     filters: [{
 *         name: "listener_rule_names",
 *         values: ["terraform-listener-rule02"],
 *     }],
 * });
 * ```
 */
export function getLoadBalancerListenerRule(args?: GetLoadBalancerListenerRuleArgs, opts?: pulumi.InvokeOptions): Promise<GetLoadBalancerListenerRuleResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("outscale:index/getLoadBalancerListenerRule:getLoadBalancerListenerRule", {
        "filters": args.filters,
        "listenerRuleName": args.listenerRuleName,
    }, opts);
}

/**
 * A collection of arguments for invoking getLoadBalancerListenerRule.
 */
export interface GetLoadBalancerListenerRuleArgs {
    /**
     * A combination of a filter name and one or more filter values. You can specify this argument for as many filter names as you need. The filter name can be any of the following:
     */
    filters?: inputs.GetLoadBalancerListenerRuleFilter[];
    /**
     * A human-readable name for the listener rule.
     */
    listenerRuleName?: string;
}

/**
 * A collection of values returned by getLoadBalancerListenerRule.
 */
export interface GetLoadBalancerListenerRuleResult {
    /**
     * The type of action for the rule (always `forward`).
     */
    readonly action: string;
    readonly filters?: outputs.GetLoadBalancerListenerRuleFilter[];
    /**
     * A host-name pattern for the rule, with a maximum length of 128 characters. This host-name pattern supports maximum three wildcards, and must not contain any special characters except `-.?`.
     */
    readonly hostNamePattern: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The ID of the listener.
     */
    readonly listenerId: number;
    /**
     * The ID of the listener rule.
     */
    readonly listenerRuleId: number;
    /**
     * A human-readable name for the listener rule.
     */
    readonly listenerRuleName: string;
    /**
     * A path pattern for the rule, with a maximum length of 128 characters. This path pattern supports maximum three wildcards, and must not contain any special characters except `_-.$/~&quot;'@:+?`.
     */
    readonly pathPattern: string;
    /**
     * The priority level of the listener rule, between `1` and `19999` both included. Each rule must have a unique priority level. Otherwise, an error is returned.
     */
    readonly priority: number;
    readonly requestId: string;
    /**
     * The IDs of the backend VMs.
     */
    readonly vmIds: string[];
}
/**
 * Provides information about a load balancer listener rule.
 *
 * For more information on this resource, see the [User Guide](https://docs.outscale.com/en/userguide/About-Load-Balancers.html).\
 * For more information on this resource actions, see the [API documentation](https://docs.outscale.com/api#3ds-outscale-api-listener).
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as outscale from "@outscale/pulumi-outscale";
 *
 * const rule01 = outscale.getLoadBalancerListenerRule({
 *     filters: [{
 *         name: "listener_rule_names",
 *         values: ["terraform-listener-rule02"],
 *     }],
 * });
 * ```
 */
export function getLoadBalancerListenerRuleOutput(args?: GetLoadBalancerListenerRuleOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetLoadBalancerListenerRuleResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("outscale:index/getLoadBalancerListenerRule:getLoadBalancerListenerRule", {
        "filters": args.filters,
        "listenerRuleName": args.listenerRuleName,
    }, opts);
}

/**
 * A collection of arguments for invoking getLoadBalancerListenerRule.
 */
export interface GetLoadBalancerListenerRuleOutputArgs {
    /**
     * A combination of a filter name and one or more filter values. You can specify this argument for as many filter names as you need. The filter name can be any of the following:
     */
    filters?: pulumi.Input<pulumi.Input<inputs.GetLoadBalancerListenerRuleFilterArgs>[]>;
    /**
     * A human-readable name for the listener rule.
     */
    listenerRuleName?: pulumi.Input<string>;
}
