// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getSnapshotExportTask(args?: GetSnapshotExportTaskArgs, opts?: pulumi.InvokeOptions): Promise<GetSnapshotExportTaskResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("outscale:index/getSnapshotExportTask:getSnapshotExportTask", {
        "dryRun": args.dryRun,
        "filters": args.filters,
    }, opts);
}

/**
 * A collection of arguments for invoking getSnapshotExportTask.
 */
export interface GetSnapshotExportTaskArgs {
    dryRun?: boolean;
    filters?: inputs.GetSnapshotExportTaskFilter[];
}

/**
 * A collection of values returned by getSnapshotExportTask.
 */
export interface GetSnapshotExportTaskResult {
    readonly comment: string;
    readonly dryRun: boolean;
    readonly filters?: outputs.GetSnapshotExportTaskFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly osuExports: outputs.GetSnapshotExportTaskOsuExport[];
    readonly progress: number;
    readonly requestId: string;
    readonly snapshotId: string;
    readonly state: string;
    readonly tags: outputs.GetSnapshotExportTaskTag[];
    readonly taskId: string;
}
export function getSnapshotExportTaskOutput(args?: GetSnapshotExportTaskOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSnapshotExportTaskResult> {
    return pulumi.output(args).apply((a: any) => getSnapshotExportTask(a, opts))
}

/**
 * A collection of arguments for invoking getSnapshotExportTask.
 */
export interface GetSnapshotExportTaskOutputArgs {
    dryRun?: pulumi.Input<boolean>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetSnapshotExportTaskFilterArgs>[]>;
}
