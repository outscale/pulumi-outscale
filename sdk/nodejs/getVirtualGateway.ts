// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getVirtualGateway(args?: GetVirtualGatewayArgs, opts?: pulumi.InvokeOptions): Promise<GetVirtualGatewayResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("outscale:index/getVirtualGateway:getVirtualGateway", {
        "connectionType": args.connectionType,
        "filters": args.filters,
        "state": args.state,
        "virtualGatewayId": args.virtualGatewayId,
    }, opts);
}

/**
 * A collection of arguments for invoking getVirtualGateway.
 */
export interface GetVirtualGatewayArgs {
    connectionType?: string;
    filters?: inputs.GetVirtualGatewayFilter[];
    state?: string;
    virtualGatewayId?: string;
}

/**
 * A collection of values returned by getVirtualGateway.
 */
export interface GetVirtualGatewayResult {
    readonly connectionType: string;
    readonly filters?: outputs.GetVirtualGatewayFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly netToVirtualGatewayLinks: outputs.GetVirtualGatewayNetToVirtualGatewayLink[];
    readonly requestId: string;
    readonly state: string;
    readonly tags: outputs.GetVirtualGatewayTag[];
    readonly virtualGatewayId: string;
}
export function getVirtualGatewayOutput(args?: GetVirtualGatewayOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetVirtualGatewayResult> {
    return pulumi.output(args).apply((a: any) => getVirtualGateway(a, opts))
}

/**
 * A collection of arguments for invoking getVirtualGateway.
 */
export interface GetVirtualGatewayOutputArgs {
    connectionType?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetVirtualGatewayFilterArgs>[]>;
    state?: pulumi.Input<string>;
    virtualGatewayId?: pulumi.Input<string>;
}
