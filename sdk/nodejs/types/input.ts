// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface AccessKeyTimeouts {
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
     */
    create?: pulumi.Input<string>;
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
     */
    delete?: pulumi.Input<string>;
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
     */
    read?: pulumi.Input<string>;
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
     */
    update?: pulumi.Input<string>;
}

export interface ClientGatewayTag {
    /**
     * The key of the tag, with a minimum of 1 character.
     */
    key?: pulumi.Input<string>;
    /**
     * The value of the tag, between 0 and 255 characters.
     */
    value?: pulumi.Input<string>;
}

export interface DhcpOptionTag {
    /**
     * The key of the tag, with a minimum of 1 character.
     */
    key?: pulumi.Input<string>;
    /**
     * The value of the tag, between 0 and 255 characters.
     */
    value?: pulumi.Input<string>;
}

export interface FlexibleGpuTimeouts {
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
     */
    create?: pulumi.Input<string>;
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
     */
    delete?: pulumi.Input<string>;
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
     */
    read?: pulumi.Input<string>;
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
     */
    update?: pulumi.Input<string>;
}

export interface GetAccessKeyFilter {
    name: string;
    values: string[];
}

export interface GetAccessKeyFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetAccessKeysFilter {
    name: string;
    values: string[];
}

export interface GetAccessKeysFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetApiAccessRuleFilter {
    name: string;
    values: string[];
}

export interface GetApiAccessRuleFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetApiAccessRulesFilter {
    name: string;
    values: string[];
}

export interface GetApiAccessRulesFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCaFilter {
    name: string;
    values: string[];
}

export interface GetCaFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCasFilter {
    name: string;
    values: string[];
}

export interface GetCasFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetClientGatewayFilter {
    name: string;
    values: string[];
}

export interface GetClientGatewayFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetClientGatewaysFilter {
    name: string;
    values: string[];
}

export interface GetClientGatewaysFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDhcpOptionFilter {
    name: string;
    values: string[];
}

export interface GetDhcpOptionFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDhcpOptionsFilter {
    name: string;
    values: string[];
}

export interface GetDhcpOptionsFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetFlexibleGpuCatalogFilter {
    name: string;
    values: string[];
}

export interface GetFlexibleGpuCatalogFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetFlexibleGpuFilter {
    name: string;
    values: string[];
}

export interface GetFlexibleGpuFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetFlexibleGpusFilter {
    name: string;
    values: string[];
}

export interface GetFlexibleGpusFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetImageBlockDeviceMapping {
    /**
     * Information about the BSU volume to create.
     */
    bsus?: inputs.GetImageBlockDeviceMappingBsus[];
    /**
     * The device name for the volume. For a root device, you must use `/dev/sda1`. For other volumes, you must use `/dev/sdX`, `/dev/sdXX`, `/dev/xvdX`, or `/dev/xvdXX` (where the first `X` is a letter between `b` and `z`, and the second `X` is a letter between `a` and `z`).
     */
    deviceName?: string;
    /**
     * The name of the virtual device (`ephemeralN`).
     */
    virtualDeviceName?: string;
}

export interface GetImageBlockDeviceMappingArgs {
    /**
     * Information about the BSU volume to create.
     */
    bsus?: pulumi.Input<pulumi.Input<inputs.GetImageBlockDeviceMappingBsusArgs>[]>;
    /**
     * The device name for the volume. For a root device, you must use `/dev/sda1`. For other volumes, you must use `/dev/sdX`, `/dev/sdXX`, `/dev/xvdX`, or `/dev/xvdXX` (where the first `X` is a letter between `b` and `z`, and the second `X` is a letter between `a` and `z`).
     */
    deviceName?: pulumi.Input<string>;
    /**
     * The name of the virtual device (`ephemeralN`).
     */
    virtualDeviceName?: pulumi.Input<string>;
}

export interface GetImageBlockDeviceMappingBsus {
    /**
     * By default or if set to true, the volume is deleted when terminating the VM. If false, the volume is not deleted when terminating the VM.
     */
    deleteOnVmDeletion?: boolean;
    /**
     * The number of I/O operations per second (IOPS). This parameter must be specified only if you create an `io1` volume. The maximum number of IOPS allowed for `io1` volumes is `13000` with a maximum performance ratio of 300 IOPS per gibibyte.
     */
    iops?: number;
    /**
     * The ID of the snapshot used to create the volume.
     */
    snapshotId?: string;
    /**
     * The size of the volume, in gibibytes (GiB).<br />
     * If you specify a snapshot ID, the volume size must be at least equal to the snapshot size.<br />
     * If you specify a snapshot ID but no volume size, the volume is created with a size similar to the snapshot one.
     */
    volumeSize?: number;
    /**
     * The type of the volume (`standard` \| `io1` \| `gp2`). If not specified in the request, a `standard` volume is created.<br />
     * For more information about volume types, see [About Volumes > Volume Types and IOPS](https://docs.outscale.com/en/userguide/About-Volumes.html#_volume_types_and_iops).
     */
    volumeType?: string;
}

export interface GetImageBlockDeviceMappingBsusArgs {
    /**
     * By default or if set to true, the volume is deleted when terminating the VM. If false, the volume is not deleted when terminating the VM.
     */
    deleteOnVmDeletion?: pulumi.Input<boolean>;
    /**
     * The number of I/O operations per second (IOPS). This parameter must be specified only if you create an `io1` volume. The maximum number of IOPS allowed for `io1` volumes is `13000` with a maximum performance ratio of 300 IOPS per gibibyte.
     */
    iops?: pulumi.Input<number>;
    /**
     * The ID of the snapshot used to create the volume.
     */
    snapshotId?: pulumi.Input<string>;
    /**
     * The size of the volume, in gibibytes (GiB).<br />
     * If you specify a snapshot ID, the volume size must be at least equal to the snapshot size.<br />
     * If you specify a snapshot ID but no volume size, the volume is created with a size similar to the snapshot one.
     */
    volumeSize?: pulumi.Input<number>;
    /**
     * The type of the volume (`standard` \| `io1` \| `gp2`). If not specified in the request, a `standard` volume is created.<br />
     * For more information about volume types, see [About Volumes > Volume Types and IOPS](https://docs.outscale.com/en/userguide/About-Volumes.html#_volume_types_and_iops).
     */
    volumeType?: pulumi.Input<string>;
}

export interface GetImageExportTaskFilter {
    name: string;
    values: string[];
}

export interface GetImageExportTaskFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetImageExportTasksFilter {
    name: string;
    values: string[];
}

export interface GetImageExportTasksFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetImageFilter {
    name: string;
    values: string[];
}

export interface GetImageFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetImagesFilter {
    name: string;
    values: string[];
}

export interface GetImagesFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetInternetServiceFilter {
    name: string;
    values: string[];
}

export interface GetInternetServiceFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetInternetServicesFilter {
    name: string;
    values: string[];
}

export interface GetInternetServicesFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetKeypairFilter {
    name: string;
    values: string[];
}

export interface GetKeypairFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetKeypairsFilter {
    name: string;
    values: string[];
}

export interface GetKeypairsFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetLoadBalancerAccessLog {
    /**
     * If true, access logs are enabled for your load balancer. If false, they are not. If you set this to true in your request, the `osuBucketName` parameter is required.
     */
    isEnabled?: boolean;
    /**
     * The name of the OOS bucket for the access logs.
     */
    osuBucketName?: string;
    /**
     * The path to the folder of the access logs in your OOS bucket (by default, the `root` level of your bucket).
     */
    osuBucketPrefix?: string;
    /**
     * The time interval for the publication of access logs in the OOS bucket, in minutes. This value can be either `5` or `60` (by default, `60`).
     */
    publicationInterval?: number;
}

export interface GetLoadBalancerAccessLogArgs {
    /**
     * If true, access logs are enabled for your load balancer. If false, they are not. If you set this to true in your request, the `osuBucketName` parameter is required.
     */
    isEnabled?: pulumi.Input<boolean>;
    /**
     * The name of the OOS bucket for the access logs.
     */
    osuBucketName?: pulumi.Input<string>;
    /**
     * The path to the folder of the access logs in your OOS bucket (by default, the `root` level of your bucket).
     */
    osuBucketPrefix?: pulumi.Input<string>;
    /**
     * The time interval for the publication of access logs in the OOS bucket, in minutes. This value can be either `5` or `60` (by default, `60`).
     */
    publicationInterval?: pulumi.Input<number>;
}

export interface GetLoadBalancerFilter {
    name: string;
    values: string[];
}

export interface GetLoadBalancerFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetLoadBalancerHealthCheck {
    /**
     * The number of seconds between two requests (between `5` and `600` both included).
     */
    checkInterval?: number;
    /**
     * The number of consecutive successful requests before considering the VM as healthy (between `2` and `10` both included).
     */
    healthyThreshold?: number;
    /**
     * If you use the HTTP or HTTPS protocols, the request URL path.
     */
    path?: string;
    /**
     * The port number (between `1` and `65535`, both included).
     */
    port?: number;
    /**
     * The protocol for the URL of the VM (`HTTP` \| `HTTPS` \| `TCP` \| `SSL`).
     */
    protocol?: string;
    /**
     * The maximum waiting time for a response before considering the VM as unhealthy, in seconds (between `2` and `60` both included).
     */
    timeout?: number;
    /**
     * The number of consecutive failed requests before considering the VM as unhealthy (between `2` and `10` both included).
     */
    unhealthyThreshold?: number;
}

export interface GetLoadBalancerHealthCheckArgs {
    /**
     * The number of seconds between two requests (between `5` and `600` both included).
     */
    checkInterval?: pulumi.Input<number>;
    /**
     * The number of consecutive successful requests before considering the VM as healthy (between `2` and `10` both included).
     */
    healthyThreshold?: pulumi.Input<number>;
    /**
     * If you use the HTTP or HTTPS protocols, the request URL path.
     */
    path?: pulumi.Input<string>;
    /**
     * The port number (between `1` and `65535`, both included).
     */
    port?: pulumi.Input<number>;
    /**
     * The protocol for the URL of the VM (`HTTP` \| `HTTPS` \| `TCP` \| `SSL`).
     */
    protocol?: pulumi.Input<string>;
    /**
     * The maximum waiting time for a response before considering the VM as unhealthy, in seconds (between `2` and `60` both included).
     */
    timeout?: pulumi.Input<number>;
    /**
     * The number of consecutive failed requests before considering the VM as unhealthy (between `2` and `10` both included).
     */
    unhealthyThreshold?: pulumi.Input<number>;
}

export interface GetLoadBalancerListener {
    /**
     * The port on which the backend VM is listening (between `1` and `65535`, both included).
     */
    backendPort?: number;
    /**
     * The protocol for routing traffic to backend VMs (`HTTP` \| `HTTPS` \| `TCP` \| `SSL`).
     */
    backendProtocol?: string;
    /**
     * The port on which the load balancer is listening (between `1` and `65535`, both included).
     */
    loadBalancerPort?: number;
    /**
     * The routing protocol (`HTTP` \| `HTTPS` \| `TCP` \| `SSL`).
     */
    loadBalancerProtocol?: string;
    /**
     * The names of the policies. If there are no policies enabled, the list is empty.
     */
    policyNames?: string[];
    /**
     * The OUTSCALE Resource Name (ORN) of the server certificate. For more information, see [Resource Identifiers > OUTSCALE Resource Names (ORNs)](https://docs.outscale.com/en/userguide/Resource-Identifiers.html#_outscale_resource_names_orns).
     */
    serverCertificateId?: string;
}

export interface GetLoadBalancerListenerArgs {
    /**
     * The port on which the backend VM is listening (between `1` and `65535`, both included).
     */
    backendPort?: pulumi.Input<number>;
    /**
     * The protocol for routing traffic to backend VMs (`HTTP` \| `HTTPS` \| `TCP` \| `SSL`).
     */
    backendProtocol?: pulumi.Input<string>;
    /**
     * The port on which the load balancer is listening (between `1` and `65535`, both included).
     */
    loadBalancerPort?: pulumi.Input<number>;
    /**
     * The routing protocol (`HTTP` \| `HTTPS` \| `TCP` \| `SSL`).
     */
    loadBalancerProtocol?: pulumi.Input<string>;
    /**
     * The names of the policies. If there are no policies enabled, the list is empty.
     */
    policyNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The OUTSCALE Resource Name (ORN) of the server certificate. For more information, see [Resource Identifiers > OUTSCALE Resource Names (ORNs)](https://docs.outscale.com/en/userguide/Resource-Identifiers.html#_outscale_resource_names_orns).
     */
    serverCertificateId?: pulumi.Input<string>;
}

export interface GetLoadBalancerListenerRuleFilter {
    name: string;
    values: string[];
}

export interface GetLoadBalancerListenerRuleFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetLoadBalancerListenerRulesFilter {
    name: string;
    values: string[];
}

export interface GetLoadBalancerListenerRulesFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetLoadBalancerTag {
    /**
     * The key of the tag, with a minimum of 1 character.
     */
    key?: string;
    /**
     * The value of the tag, between 0 and 255 characters.
     */
    value?: string;
}

export interface GetLoadBalancerTagArgs {
    /**
     * The key of the tag, with a minimum of 1 character.
     */
    key?: pulumi.Input<string>;
    /**
     * The value of the tag, between 0 and 255 characters.
     */
    value?: pulumi.Input<string>;
}

export interface GetLoadBalancerTagsFilter {
    name: string;
    values: string[];
}

export interface GetLoadBalancerTagsFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetLoadBalancerVmHealthFilter {
    name: string;
    values: string[];
}

export interface GetLoadBalancerVmHealthFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetLoadBalancersFilter {
    name: string;
    values: string[];
}

export interface GetLoadBalancersFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetNatServiceFilter {
    name: string;
    values: string[];
}

export interface GetNatServiceFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetNatServicesFilter {
    name: string;
    values: string[];
}

export interface GetNatServicesFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetNetAccessPointFilter {
    name: string;
    values: string[];
}

export interface GetNetAccessPointFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetNetAccessPointServicesFilter {
    name: string;
    values: string[];
}

export interface GetNetAccessPointServicesFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetNetAccessPointsFilter {
    name: string;
    values: string[];
}

export interface GetNetAccessPointsFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetNetFilter {
    name: string;
    values: string[];
}

export interface GetNetFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetNetPeeringFilter {
    /**
     * The state of the Net peering (`pending-acceptance` \| `active` \| `rejected` \| `failed` \| `expired` \| `deleted`).
     */
    name: string;
    values: string[];
}

export interface GetNetPeeringFilterArgs {
    /**
     * The state of the Net peering (`pending-acceptance` \| `active` \| `rejected` \| `failed` \| `expired` \| `deleted`).
     */
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetNetPeeringsFilter {
    /**
     * The state of the Net peering (`pending-acceptance` \| `active` \| `rejected` \| `failed` \| `expired` \| `deleted`).
     */
    name: string;
    values: string[];
}

export interface GetNetPeeringsFilterArgs {
    /**
     * The state of the Net peering (`pending-acceptance` \| `active` \| `rejected` \| `failed` \| `expired` \| `deleted`).
     */
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetNetsFilter {
    name: string;
    values: string[];
}

export interface GetNetsFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetNicFilter {
    name: string;
    values: string[];
}

export interface GetNicFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetNicsFilter {
    name: string;
    values: string[];
}

export interface GetNicsFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetPoliciesFilter {
    name: string;
    values: string[];
}

export interface GetPoliciesFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetPoliciesLinkedToUserGroupFilter {
    name: string;
    values: string[];
}

export interface GetPoliciesLinkedToUserGroupFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetProductTypeFilter {
    name: string;
    values: string[];
}

export interface GetProductTypeFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetProductTypesFilter {
    name: string;
    values: string[];
}

export interface GetProductTypesFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetPublicIpFilter {
    name: string;
    values: string[];
}

export interface GetPublicIpFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetPublicIpsFilter {
    name: string;
    values: string[];
}

export interface GetPublicIpsFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetQuotaFilter {
    /**
     * The unique name of the quota.
     */
    name: string;
    values: string[];
}

export interface GetQuotaFilterArgs {
    /**
     * The unique name of the quota.
     */
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetQuotasFilter {
    /**
     * The unique name of the quota.
     */
    name: string;
    values: string[];
}

export interface GetQuotasFilterArgs {
    /**
     * The unique name of the quota.
     */
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetRouteTableFilter {
    name: string;
    values: string[];
}

export interface GetRouteTableFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetRouteTablesFilter {
    name: string;
    values: string[];
}

export interface GetRouteTablesFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetSecurityGroupFilter {
    name: string;
    values: string[];
}

export interface GetSecurityGroupFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetSecurityGroupsFilter {
    name: string;
    values: string[];
}

export interface GetSecurityGroupsFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetServerCertificateFilter {
    /**
     * The name of the server certificate.
     */
    name: string;
    values: string[];
}

export interface GetServerCertificateFilterArgs {
    /**
     * The name of the server certificate.
     */
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetServerCertificatesFilter {
    /**
     * The name of the server certificate.
     */
    name: string;
    values: string[];
}

export interface GetServerCertificatesFilterArgs {
    /**
     * The name of the server certificate.
     */
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetSnapshotExportTaskFilter {
    name: string;
    values: string[];
}

export interface GetSnapshotExportTaskFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetSnapshotExportTasksFilter {
    name: string;
    values: string[];
}

export interface GetSnapshotExportTasksFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetSnapshotFilter {
    name: string;
    values: string[];
}

export interface GetSnapshotFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetSnapshotsFilter {
    name: string;
    values: string[];
}

export interface GetSnapshotsFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetSubnetFilter {
    name: string;
    values: string[];
}

export interface GetSubnetFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetSubnetsFilter {
    name: string;
    values: string[];
}

export interface GetSubnetsFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetSubregionsFilter {
    name: string;
    values: string[];
}

export interface GetSubregionsFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetTagFilter {
    name: string;
    values: string[];
}

export interface GetTagFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetTagsFilter {
    name: string;
    values: string[];
}

export interface GetTagsFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetUserFilter {
    name: string;
    values: string[];
}

export interface GetUserFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetUserGroupUser {
    /**
     * The date and time (UTC) of creation of the EIM user.
     */
    creationDate?: string;
    /**
     * The date and time (UTC) of the last modification of the EIM user.
     */
    lastModificationDate?: string;
    /**
     * The path to the group. If not specified, it is set to a slash (`/`).
     */
    path?: string;
    /**
     * The email address of the EIM user.
     */
    userEmail?: string;
    /**
     * The ID of the EIM user.
     */
    userId?: string;
    /**
     * The name of the EIM user.
     */
    userName?: string;
}

export interface GetUserGroupUserArgs {
    /**
     * The date and time (UTC) of creation of the EIM user.
     */
    creationDate?: pulumi.Input<string>;
    /**
     * The date and time (UTC) of the last modification of the EIM user.
     */
    lastModificationDate?: pulumi.Input<string>;
    /**
     * The path to the group. If not specified, it is set to a slash (`/`).
     */
    path?: pulumi.Input<string>;
    /**
     * The email address of the EIM user.
     */
    userEmail?: pulumi.Input<string>;
    /**
     * The ID of the EIM user.
     */
    userId?: pulumi.Input<string>;
    /**
     * The name of the EIM user.
     */
    userName?: pulumi.Input<string>;
}

export interface GetUserGroupsFilter {
    /**
     * The name of the user group.
     */
    name: string;
    values: string[];
}

export interface GetUserGroupsFilterArgs {
    /**
     * The name of the user group.
     */
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetUsersFilter {
    name: string;
    values: string[];
}

export interface GetUsersFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetVirtualGatewayFilter {
    name: string;
    values: string[];
}

export interface GetVirtualGatewayFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetVirtualGatewaysFilter {
    name: string;
    values: string[];
}

export interface GetVirtualGatewaysFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetVmFilter {
    name: string;
    values: string[];
}

export interface GetVmFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetVmStateFilter {
    name: string;
    values: string[];
}

export interface GetVmStateFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetVmStatesFilter {
    name: string;
    values: string[];
}

export interface GetVmStatesFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetVmTypesFilter {
    name: string;
    values: string[];
}

export interface GetVmTypesFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetVmsFilter {
    name: string;
    values: string[];
}

export interface GetVmsFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetVolumeFilter {
    name: string;
    values: string[];
}

export interface GetVolumeFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetVolumesFilter {
    name: string;
    values: string[];
}

export interface GetVolumesFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetVpnConnectionFilter {
    name: string;
    values: string[];
}

export interface GetVpnConnectionFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetVpnConnectionsFilter {
    name: string;
    values: string[];
}

export interface GetVpnConnectionsFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ImageBlockDeviceMapping {
    /**
     * Information about the BSU volume to create.
     */
    bsus?: pulumi.Input<pulumi.Input<inputs.ImageBlockDeviceMappingBsus>[]>;
    /**
     * The device name for the volume. For a root device, you must use `/dev/sda1`. For other volumes, you must use `/dev/sdX`, `/dev/sdXX`, `/dev/xvdX`, or `/dev/xvdXX` (where the first `X` is a letter between `b` and `z`, and the second `X` is a letter between `a` and `z`).
     */
    deviceName?: pulumi.Input<string>;
    /**
     * The name of the virtual device (`ephemeralN`).
     */
    virtualDeviceName?: pulumi.Input<string>;
}

export interface ImageBlockDeviceMappingBsus {
    /**
     * By default or if set to true, the volume is deleted when terminating the VM. If false, the volume is not deleted when terminating the VM.
     */
    deleteOnVmDeletion?: pulumi.Input<boolean>;
    /**
     * The number of I/O operations per second (IOPS). This parameter must be specified only if you create an `io1` volume. The maximum number of IOPS allowed for `io1` volumes is `13000` with a maximum performance ratio of 300 IOPS per gibibyte.
     */
    iops?: pulumi.Input<number>;
    /**
     * The ID of the snapshot used to create the volume.
     */
    snapshotId?: pulumi.Input<string>;
    /**
     * The size of the volume, in gibibytes (GiB).<br />
     * If you specify a snapshot ID, the volume size must be at least equal to the snapshot size.<br />
     * If you specify a snapshot ID but no volume size, the volume is created with a size similar to the snapshot one.
     */
    volumeSize?: pulumi.Input<number>;
    /**
     * The type of the volume (`standard` \| `io1` \| `gp2`). If not specified in the request, a `standard` volume is created.<br />
     * For more information about volume types, see [About Volumes > Volume Types and IOPS](https://docs.outscale.com/en/userguide/About-Volumes.html#_volume_types_and_iops).
     */
    volumeType?: pulumi.Input<string>;
}

export interface ImageExportTaskOsuExport {
    /**
     * The format of the export disk (`qcow2` \| `raw`).
     */
    diskImageFormat: pulumi.Input<string>;
    /**
     * Information about the OOS API key.
     */
    osuApiKeys?: pulumi.Input<pulumi.Input<inputs.ImageExportTaskOsuExportOsuApiKey>[]>;
    /**
     * The name of the OOS bucket where you want to export the object.
     */
    osuBucket: pulumi.Input<string>;
    /**
     * The URL of the manifest file.
     */
    osuManifestUrl?: pulumi.Input<string>;
    /**
     * The prefix for the key of the OOS object.
     */
    osuPrefix?: pulumi.Input<string>;
}

export interface ImageExportTaskOsuExportOsuApiKey {
    /**
     * The API key of the OOS account that enables you to access the bucket.
     */
    apiKeyId: pulumi.Input<string>;
    /**
     * The secret key of the OOS account that enables you to access the bucket.
     */
    secretKey: pulumi.Input<string>;
}

export interface ImageExportTaskTag {
    /**
     * The key of the tag, with a minimum of 1 character.
     */
    key?: pulumi.Input<string>;
    /**
     * The value of the tag, between 0 and 255 characters.
     */
    value?: pulumi.Input<string>;
}

export interface ImageLaunchPermissionPermissionAdditions {
    /**
     * The account ID of one or more users to whom you want to give permissions.
     */
    accountIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * If true, the resource is public. If false, the resource is private.
     */
    globalPermission?: pulumi.Input<string>;
}

export interface ImageLaunchPermissionPermissionRemovals {
    /**
     * The account ID of one or more users from whom you want to remove permissions.
     */
    accountIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * If true, the resource is public. If false, the resource is private.
     */
    globalPermission?: pulumi.Input<string>;
}

export interface ImageLaunchPermissionPermissionsToLaunch {
    /**
     * One or more account IDs that the permission is associated with.
     */
    accountIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A global permission for all accounts.<br />
     * (Request) Set this parameter to true to make the resource public (if the parent parameter is `additions`) or to make the resource private (if the parent parameter is `removals`).<br />
     * (Response) If true, the resource is public. If false, the resource is private.
     */
    globalPermission?: pulumi.Input<string>;
}

export interface ImagePermissionsToLaunch {
    /**
     * One or more account IDs that the permission is associated with.
     */
    accountIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A global permission for all accounts.<br />
     * (Request) Set this parameter to true to make the resource public (if the parent parameter is `Additions`) or to make the resource private (if the parent parameter is `Removals`).<br />
     * (Response) If true, the resource is public. If false, the resource is private.
     */
    globalPermission?: pulumi.Input<boolean>;
}

export interface ImageStateComment {
    /**
     * The code of the change of state.
     */
    stateCode?: pulumi.Input<string>;
    /**
     * A message explaining the change of state.
     */
    stateMessage?: pulumi.Input<string>;
}

export interface ImageTag {
    /**
     * The key of the tag, with a minimum of 1 character.
     */
    key?: pulumi.Input<string>;
    /**
     * The value of the tag, between 0 and 255 characters.
     */
    value?: pulumi.Input<string>;
}

export interface InternetServiceLinkTag {
    /**
     * The key of the tag, with a minimum of 1 character.
     */
    key: pulumi.Input<string>;
    /**
     * The value of the tag, between 0 and 255 characters.
     */
    value: pulumi.Input<string>;
}

export interface InternetServiceLinkTimeouts {
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
     */
    create?: pulumi.Input<string>;
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
     */
    delete?: pulumi.Input<string>;
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
     */
    read?: pulumi.Input<string>;
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
     */
    update?: pulumi.Input<string>;
}

export interface InternetServiceTag {
    /**
     * The key of the tag, with a minimum of 1 character.
     */
    key: pulumi.Input<string>;
    /**
     * The value of the tag, between 0 and 255 characters.
     */
    value?: pulumi.Input<string>;
}

export interface InternetServiceTimeouts {
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
     */
    create?: pulumi.Input<string>;
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
     */
    delete?: pulumi.Input<string>;
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
     */
    read?: pulumi.Input<string>;
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
     */
    update?: pulumi.Input<string>;
}

export interface KeypairTag {
    /**
     * The key of the tag, with a minimum of 1 character.
     */
    key: pulumi.Input<string>;
    /**
     * The value of the tag, between 0 and 255 characters.
     */
    value?: pulumi.Input<string>;
}

export interface KeypairTimeouts {
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
     */
    create?: pulumi.Input<string>;
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
     */
    delete?: pulumi.Input<string>;
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
     */
    read?: pulumi.Input<string>;
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
     */
    update?: pulumi.Input<string>;
}

export interface LoadBalancerAccessLog {
    /**
     * If true, access logs are enabled for your load balancer. If false, they are not. If you set this to true in your request, the `osuBucketName` parameter is required.
     */
    isEnabled?: pulumi.Input<boolean>;
    /**
     * The name of the OOS bucket for the access logs.
     */
    osuBucketName?: pulumi.Input<string>;
    /**
     * The path to the folder of the access logs in your OOS bucket (by default, the `root` level of your bucket).
     */
    osuBucketPrefix?: pulumi.Input<string>;
    /**
     * The time interval for the publication of access logs in the OOS bucket, in minutes. This value can be either `5` or `60` (by default, `60`).
     */
    publicationInterval?: pulumi.Input<number>;
}

export interface LoadBalancerApplicationStickyCookiePolicy {
    /**
     * The name of the application cookie used for stickiness.
     */
    cookieName?: pulumi.Input<string>;
    /**
     * The name of the stickiness policy.
     */
    policyName?: pulumi.Input<string>;
}

export interface LoadBalancerAttributesAccessLog {
    /**
     * If true, access logs are enabled for your load balancer. If false, they are not. If you set this to true in your request, the `osuBucketName` parameter is required.
     */
    isEnabled?: pulumi.Input<boolean>;
    /**
     * The name of the OOS bucket for the access logs.
     */
    osuBucketName?: pulumi.Input<string>;
    /**
     * The path to the folder of the access logs in your OOS bucket (by default, the `root` level of your bucket).
     */
    osuBucketPrefix?: pulumi.Input<string>;
    /**
     * The time interval for the publication of access logs in the OOS bucket, in minutes. This value can be either `5` or `60` (by default, `60`).
     */
    publicationInterval?: pulumi.Input<number>;
}

export interface LoadBalancerAttributesApplicationStickyCookiePolicy {
    /**
     * The name of the application cookie used for stickiness.
     */
    cookieName?: pulumi.Input<string>;
    /**
     * The name of the stickiness policy.
     */
    policyName?: pulumi.Input<string>;
}

export interface LoadBalancerAttributesHealthCheck {
    /**
     * The number of seconds between two requests (between `5` and `600` both included).
     */
    checkInterval?: pulumi.Input<number>;
    /**
     * The number of consecutive successful requests before considering the VM as healthy (between `2` and `10` both included).
     */
    healthyThreshold?: pulumi.Input<number>;
    /**
     * If you use the HTTP or HTTPS protocols, the request URL path.
     */
    path?: pulumi.Input<string>;
    /**
     * The port number (between `1` and `65535`, both included).
     */
    port: pulumi.Input<number>;
    /**
     * The protocol for the URL of the VM (`HTTP` \| `HTTPS` \| `TCP` \| `SSL`).
     */
    protocol: pulumi.Input<string>;
    /**
     * The maximum waiting time for a response before considering the VM as unhealthy, in seconds (between `2` and `60` both included).
     */
    timeout?: pulumi.Input<number>;
    /**
     * The number of consecutive failed requests before considering the VM as unhealthy (between `2` and `10` both included).
     */
    unhealthyThreshold?: pulumi.Input<number>;
}

export interface LoadBalancerAttributesListener {
    /**
     * The port on which the backend VM is listening (between `1` and `65535`, both included).
     */
    backendPort?: pulumi.Input<number>;
    /**
     * The protocol for routing traffic to backend VMs (`HTTP` \| `HTTPS` \| `TCP` \| `SSL`).
     */
    backendProtocol?: pulumi.Input<string>;
    /**
     * The port on which the load balancer is listening (between `1` and `65535`, both included). This parameter is required if you want to update the server certificate.
     */
    loadBalancerPort?: pulumi.Input<number>;
    /**
     * The routing protocol (`HTTP` \| `HTTPS` \| `TCP` \| `SSL`).
     */
    loadBalancerProtocol?: pulumi.Input<string>;
    /**
     * The name of the policy you want to enable for the listener.
     */
    policyNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The OUTSCALE Resource Name (ORN) of the server certificate. For more information, see [Resource Identifiers > OUTSCALE Resource Names (ORNs)](https://docs.outscale.com/en/userguide/Resource-Identifiers.html#_outscale_resource_names_orns). If this parameter is specified, you must also specify the `loadBalancerPort` parameter.
     */
    serverCertificateId?: pulumi.Input<string>;
}

export interface LoadBalancerAttributesLoadBalancerStickyCookiePolicy {
    /**
     * The name of the stickiness policy.
     */
    policyName?: pulumi.Input<string>;
}

export interface LoadBalancerAttributesSourceSecurityGroup {
    /**
     * The account ID of the owner of the security group.
     */
    securityGroupAccountId?: pulumi.Input<string>;
    /**
     * The name of the security group.
     */
    securityGroupName?: pulumi.Input<string>;
}

export interface LoadBalancerAttributesTag {
    /**
     * The key of the tag, with a minimum of 1 character.
     */
    key?: pulumi.Input<string>;
    /**
     * The value of the tag, between 0 and 255 characters.
     */
    value?: pulumi.Input<string>;
}

export interface LoadBalancerHealthCheck {
    /**
     * The number of seconds between two requests (between `5` and `600` both included).
     */
    checkInterval?: pulumi.Input<number>;
    /**
     * The number of consecutive successful requests before considering the VM as healthy (between `2` and `10` both included).
     */
    healthyThreshold?: pulumi.Input<number>;
    /**
     * If you use the HTTP or HTTPS protocols, the request URL path.
     */
    path?: pulumi.Input<string>;
    /**
     * The port number (between `1` and `65535`, both included).
     */
    port?: pulumi.Input<number>;
    /**
     * The protocol for the URL of the VM (`HTTP` \| `HTTPS` \| `TCP` \| `SSL`).
     */
    protocol?: pulumi.Input<string>;
    /**
     * The maximum waiting time for a response before considering the VM as unhealthy, in seconds (between `2` and `60` both included).
     */
    timeout?: pulumi.Input<number>;
    /**
     * The number of consecutive failed requests before considering the VM as unhealthy (between `2` and `10` both included).
     */
    unhealthyThreshold?: pulumi.Input<number>;
}

export interface LoadBalancerListener {
    /**
     * The port on which the backend VM is listening (between `1` and `65535`, both included).
     */
    backendPort: pulumi.Input<number>;
    /**
     * The protocol for routing traffic to backend VMs (`HTTP` \| `HTTPS` \| `TCP` \| `SSL`).
     */
    backendProtocol: pulumi.Input<string>;
    /**
     * The port on which the load balancer is listening (between `1` and `65535`, both included).
     */
    loadBalancerPort: pulumi.Input<number>;
    /**
     * The routing protocol (`HTTP` \| `HTTPS` \| `TCP` \| `SSL`).
     */
    loadBalancerProtocol: pulumi.Input<string>;
    /**
     * The names of the policies. If there are no policies enabled, the list is empty.
     */
    policyNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The OUTSCALE Resource Name (ORN) of the server certificate. For more information, see [Resource Identifiers > OUTSCALE Resource Names (ORNs)](https://docs.outscale.com/en/userguide/Resource-Identifiers.html#_outscale_resource_names_orns).
     */
    serverCertificateId?: pulumi.Input<string>;
}

export interface LoadBalancerListenerRuleListener {
    /**
     * The name of the load balancer to which the listener is attached.
     */
    loadBalancerName: pulumi.Input<string>;
    /**
     * The port of load balancer on which the load balancer is listening (between `1` and `65535` both included).
     */
    loadBalancerPort: pulumi.Input<number>;
}

export interface LoadBalancerListenerRuleListenerRule {
    /**
     * The type of action for the rule (always `forward`).
     */
    action?: pulumi.Input<string>;
    /**
     * A host-name pattern for the rule, with a maximum length of 128 characters. This host-name pattern supports maximum three wildcards, and must not contain any special characters except `-.?`.
     */
    hostNamePattern?: pulumi.Input<string>;
    /**
     * The ID of the listener.
     */
    listenerId?: pulumi.Input<number>;
    /**
     * The ID of the listener rule.
     */
    listenerRuleId?: pulumi.Input<number>;
    /**
     * A human-readable name for the listener rule.
     */
    listenerRuleName: pulumi.Input<string>;
    /**
     * A path pattern for the rule, with a maximum length of 128 characters. This path pattern supports maximum three wildcards, and must not contain any special characters except `_-.$/~&quot;'@:+?`.
     */
    pathPattern?: pulumi.Input<string>;
    /**
     * The priority level of the listener rule, between `1` and `19999` both included. Each rule must have a unique priority level. Otherwise, an error is returned.
     */
    priority: pulumi.Input<number>;
}

export interface LoadBalancerLoadBalancerStickyCookiePolicy {
    /**
     * The name of the stickiness policy.
     */
    policyName?: pulumi.Input<string>;
}

export interface LoadBalancerPolicyAccessLog {
    /**
     * If true, access logs are enabled for your load balancer. If false, they are not. If you set this to true in your request, the `osuBucketName` parameter is required.
     */
    isEnabled?: pulumi.Input<boolean>;
    /**
     * The name of the OOS bucket for the access logs.
     */
    osuBucketName?: pulumi.Input<string>;
    /**
     * The path to the folder of the access logs in your OOS bucket (by default, the `root` level of your bucket).
     */
    osuBucketPrefix?: pulumi.Input<string>;
    /**
     * The time interval for the publication of access logs in the OOS bucket, in minutes. This value can be either `5` or `60` (by default, `60`).
     */
    publicationInterval?: pulumi.Input<number>;
}

export interface LoadBalancerPolicyApplicationStickyCookiePolicy {
    /**
     * The name of the application cookie used for stickiness. This parameter is required if you create a stickiness policy based on an application-generated cookie.
     */
    cookieName?: pulumi.Input<string>;
    /**
     * The unique name of the policy, with a maximum length of 32 alphanumeric characters and dashes (`-`).
     */
    policyName?: pulumi.Input<string>;
}

export interface LoadBalancerPolicyHealthCheck {
    /**
     * The number of seconds between two requests (between `5` and `600` both included).
     */
    checkInterval?: pulumi.Input<number>;
    /**
     * The number of consecutive successful requests before considering the VM as healthy (between `2` and `10` both included).
     */
    healthyThreshold?: pulumi.Input<number>;
    /**
     * If you use the HTTP or HTTPS protocols, the request URL path.
     */
    path?: pulumi.Input<string>;
    /**
     * The port number (between `1` and `65535`, both included).
     */
    port?: pulumi.Input<number>;
    /**
     * The protocol for the URL of the VM (`HTTP` \| `HTTPS` \| `TCP` \| `SSL`).
     */
    protocol?: pulumi.Input<string>;
    /**
     * The maximum waiting time for a response before considering the VM as unhealthy, in seconds (between `2` and `60` both included).
     */
    timeout?: pulumi.Input<number>;
    /**
     * The number of consecutive failed requests before considering the VM as unhealthy (between `2` and `10` both included).
     */
    unhealthyThreshold?: pulumi.Input<number>;
}

export interface LoadBalancerPolicyListener {
    /**
     * The port on which the backend VM is listening (between `1` and `65535`, both included).
     */
    backendPort?: pulumi.Input<number>;
    /**
     * The protocol for routing traffic to backend VMs (`HTTP` \| `HTTPS` \| `TCP` \| `SSL`).
     */
    backendProtocol?: pulumi.Input<string>;
    /**
     * The port on which the load balancer is listening (between `1` and `65535`, both included).
     */
    loadBalancerPort?: pulumi.Input<number>;
    /**
     * The routing protocol (`HTTP` \| `HTTPS` \| `TCP` \| `SSL`).
     */
    loadBalancerProtocol?: pulumi.Input<string>;
    /**
     * The names of the policies. If there are no policies enabled, the list is empty.
     */
    policyNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The OUTSCALE Resource Name (ORN) of the server certificate. For more information, see [Resource Identifiers > OUTSCALE Resource Names (ORNs)](https://docs.outscale.com/en/userguide/Resource-Identifiers.html#_outscale_resource_names_orns).
     */
    serverCertificateId?: pulumi.Input<string>;
}

export interface LoadBalancerPolicyLoadBalancerStickyCookiePolicy {
    /**
     * The unique name of the policy, with a maximum length of 32 alphanumeric characters and dashes (`-`).
     */
    policyName?: pulumi.Input<string>;
}

export interface LoadBalancerPolicySourceSecurityGroup {
    /**
     * The account ID of the owner of the security group.
     */
    securityGroupAccountId?: pulumi.Input<string>;
    /**
     * The name of the security group.
     */
    securityGroupName?: pulumi.Input<string>;
}

export interface LoadBalancerPolicyTag {
    /**
     * The key of the tag, with a minimum of 1 character.
     */
    key?: pulumi.Input<string>;
    /**
     * The value of the tag, between 0 and 255 characters.
     */
    value?: pulumi.Input<string>;
}

export interface LoadBalancerSourceSecurityGroup {
    /**
     * The account ID of the owner of the security group.
     */
    securityGroupAccountId?: pulumi.Input<string>;
    /**
     * The name of the security group.
     */
    securityGroupName?: pulumi.Input<string>;
}

export interface LoadBalancerTag {
    /**
     * The key of the tag, with a minimum of 1 character.
     */
    key?: pulumi.Input<string>;
    /**
     * The value of the tag, between 0 and 255 characters.
     */
    value?: pulumi.Input<string>;
}

export interface LoadBalancerVmsTimeouts {
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
     */
    create?: pulumi.Input<string>;
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
     */
    delete?: pulumi.Input<string>;
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
     */
    read?: pulumi.Input<string>;
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
     */
    update?: pulumi.Input<string>;
}

export interface MainRouteTableLinkTimeouts {
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
     */
    create?: pulumi.Input<string>;
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
     */
    delete?: pulumi.Input<string>;
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
     */
    read?: pulumi.Input<string>;
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
     */
    update?: pulumi.Input<string>;
}

export interface NatServicePublicIp {
    /**
     * The public IP associated with the NAT service.
     */
    publicIp?: pulumi.Input<string>;
    /**
     * The allocation ID of the public IP to associate with the NAT service.<br />
     * If the public IP is already associated with another resource, you must first disassociate it.
     */
    publicIpId?: pulumi.Input<string>;
}

export interface NatServiceTag {
    /**
     * The key of the tag, with a minimum of 1 character.
     */
    key?: pulumi.Input<string>;
    /**
     * The value of the tag, between 0 and 255 characters.
     */
    value?: pulumi.Input<string>;
}

export interface NetAccessPointTag {
    /**
     * The key of the tag, with a minimum of 1 character.
     */
    key: pulumi.Input<string>;
    /**
     * The value of the tag, between 0 and 255 characters.
     */
    value?: pulumi.Input<string>;
}

export interface NetAccessPointTimeouts {
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
     */
    create?: pulumi.Input<string>;
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
     */
    delete?: pulumi.Input<string>;
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
     */
    read?: pulumi.Input<string>;
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
     */
    update?: pulumi.Input<string>;
}

export interface NetAttributesTag {
    /**
     * The key of the tag, with a minimum of 1 character.
     */
    key: pulumi.Input<string>;
    /**
     * The value of the tag, between 0 and 255 characters.
     */
    value: pulumi.Input<string>;
}

export interface NetAttributesTimeouts {
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
     */
    create?: pulumi.Input<string>;
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
     */
    delete?: pulumi.Input<string>;
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
     */
    read?: pulumi.Input<string>;
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
     */
    update?: pulumi.Input<string>;
}

export interface NetPeeringAcceptationAccepterNet {
    /**
     * The account ID of the owner of the source Net.
     */
    accountId: pulumi.Input<string>;
    /**
     * The IP range for the source Net, in CIDR notation (for example, `10.0.0.0/16`).
     */
    ipRange: pulumi.Input<string>;
    /**
     * The ID of the source Net.
     */
    netId: pulumi.Input<string>;
}

export interface NetPeeringAcceptationSourceNet {
    /**
     * The account ID of the owner of the source Net.
     */
    accountId: pulumi.Input<string>;
    /**
     * The IP range for the source Net, in CIDR notation (for example, `10.0.0.0/16`).
     */
    ipRange: pulumi.Input<string>;
    /**
     * The ID of the source Net.
     */
    netId: pulumi.Input<string>;
}

export interface NetPeeringAcceptationState {
    /**
     * Additional information about the state of the Net peering.
     */
    message: pulumi.Input<string>;
    /**
     * The state of the Net peering (`pending-acceptance` \| `active` \| `rejected` \| `failed` \| `expired` \| `deleted`).
     */
    name: pulumi.Input<string>;
}

export interface NetPeeringAcceptationTag {
    /**
     * The key of the tag, with a minimum of 1 character.
     */
    key: pulumi.Input<string>;
    /**
     * The value of the tag, between 0 and 255 characters.
     */
    value: pulumi.Input<string>;
}

export interface NetPeeringAcceptationTimeouts {
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
     */
    create?: pulumi.Input<string>;
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
     */
    delete?: pulumi.Input<string>;
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
     */
    read?: pulumi.Input<string>;
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
     */
    update?: pulumi.Input<string>;
}

export interface NetPeeringAccepterNet {
    /**
     * The account ID of the owner of the source Net.
     */
    accountId: pulumi.Input<string>;
    /**
     * The IP range for the source Net, in CIDR notation (for example, `10.0.0.0/16`).
     */
    ipRange: pulumi.Input<string>;
    /**
     * The ID of the source Net.
     */
    netId: pulumi.Input<string>;
}

export interface NetPeeringSourceNet {
    /**
     * The account ID of the owner of the source Net.
     */
    accountId: pulumi.Input<string>;
    /**
     * The IP range for the source Net, in CIDR notation (for example, `10.0.0.0/16`).
     */
    ipRange: pulumi.Input<string>;
    /**
     * The ID of the source Net.
     */
    netId: pulumi.Input<string>;
}

export interface NetPeeringState {
    /**
     * Additional information about the state of the Net peering.
     */
    message: pulumi.Input<string>;
    /**
     * The state of the Net peering (`pending-acceptance` \| `active` \| `rejected` \| `failed` \| `expired` \| `deleted`).
     */
    name: pulumi.Input<string>;
}

export interface NetPeeringTag {
    /**
     * The key of the tag, with a minimum of 1 character.
     */
    key: pulumi.Input<string>;
    /**
     * The value of the tag, between 0 and 255 characters.
     */
    value?: pulumi.Input<string>;
}

export interface NetPeeringTimeouts {
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
     */
    create?: pulumi.Input<string>;
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
     */
    delete?: pulumi.Input<string>;
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
     */
    read?: pulumi.Input<string>;
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
     */
    update?: pulumi.Input<string>;
}

export interface NetTag {
    /**
     * The key of the tag, with a minimum of 1 character.
     */
    key: pulumi.Input<string>;
    /**
     * The value of the tag, between 0 and 255 characters.
     */
    value?: pulumi.Input<string>;
}

export interface NetTimeouts {
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
     */
    create?: pulumi.Input<string>;
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
     */
    delete?: pulumi.Input<string>;
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
     */
    read?: pulumi.Input<string>;
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
     */
    update?: pulumi.Input<string>;
}

export interface NicLinkNic {
    /**
     * If true, the NIC is deleted when the VM is terminated.
     */
    deleteOnVmDeletion?: pulumi.Input<string>;
    /**
     * The device index for the NIC attachment (between `1` and `7`, both included).
     */
    deviceNumber?: pulumi.Input<number>;
    /**
     * The ID of the NIC to attach.
     */
    linkNicId?: pulumi.Input<string>;
    /**
     * The state of the NIC (`available` \| `attaching` \| `in-use` \| `detaching`).
     */
    state?: pulumi.Input<string>;
    /**
     * The account ID of the owner of the VM.
     */
    vmAccountId?: pulumi.Input<string>;
    /**
     * The ID of the VM.
     */
    vmId?: pulumi.Input<string>;
}

export interface NicLinkPublicIp {
    /**
     * (Required in a Net) The ID representing the association of the public IP with the VM or the NIC.
     */
    linkPublicIpId?: pulumi.Input<string>;
    /**
     * The name of the public DNS.
     */
    publicDnsName?: pulumi.Input<string>;
    /**
     * The public IP associated with the NIC.
     */
    publicIp?: pulumi.Input<string>;
    /**
     * The account ID of the owner of the public IP.
     */
    publicIpAccountId?: pulumi.Input<string>;
    /**
     * The allocation ID of the public IP.
     */
    publicIpId?: pulumi.Input<string>;
}

export interface NicPrivateIp {
    /**
     * If true, the IP is the primary private IP of the NIC.
     */
    isPrimary?: pulumi.Input<boolean>;
    /**
     * Information about the public IP association.
     */
    linkPublicIps?: pulumi.Input<pulumi.Input<inputs.NicPrivateIpLinkPublicIp>[]>;
    /**
     * The name of the private DNS.
     */
    privateDnsName?: pulumi.Input<string>;
    /**
     * The private IP of the NIC.
     */
    privateIp?: pulumi.Input<string>;
}

export interface NicPrivateIpLinkPublicIp {
    /**
     * (Required in a Net) The ID representing the association of the public IP with the VM or the NIC.
     */
    linkPublicIpId?: pulumi.Input<string>;
    /**
     * The name of the public DNS.
     */
    publicDnsName?: pulumi.Input<string>;
    /**
     * The public IP associated with the NIC.
     */
    publicIp?: pulumi.Input<string>;
    /**
     * The account ID of the owner of the public IP.
     */
    publicIpAccountId?: pulumi.Input<string>;
    /**
     * The allocation ID of the public IP.
     */
    publicIpId?: pulumi.Input<string>;
}

export interface NicSecurityGroup {
    /**
     * The ID of the security group.
     */
    securityGroupId?: pulumi.Input<string>;
    /**
     * The name of the security group.
     */
    securityGroupName?: pulumi.Input<string>;
}

export interface NicTag {
    /**
     * The key of the tag, with a minimum of 1 character.
     */
    key?: pulumi.Input<string>;
    /**
     * The value of the tag, between 0 and 255 characters.
     */
    value?: pulumi.Input<string>;
}

export interface OutboundRuleRule {
    fromPortRange?: pulumi.Input<number>;
    ipProtocol?: pulumi.Input<string>;
    ipRanges?: pulumi.Input<pulumi.Input<string>[]>;
    securityGroupsMembers?: pulumi.Input<pulumi.Input<inputs.OutboundRuleRuleSecurityGroupsMember>[]>;
    serviceIds?: pulumi.Input<pulumi.Input<string>[]>;
    toPortRange?: pulumi.Input<number>;
}

export interface OutboundRuleRuleSecurityGroupsMember {
    accountId?: pulumi.Input<string>;
    securityGroupId?: pulumi.Input<string>;
    securityGroupName?: pulumi.Input<string>;
}

export interface ProviderEndpoint {
    /**
     * Use this to override the default service endpoint URL
     */
    api?: pulumi.Input<string>;
}

export interface PublicIpLinkTag {
    key?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface PublicIpTag {
    /**
     * The key of the tag, with a minimum of 1 character.
     */
    key?: pulumi.Input<string>;
    /**
     * The value of the tag, between 0 and 255 characters.
     */
    value?: pulumi.Input<string>;
}

export interface RouteTableLinkRouteTable {
    /**
     * The ID of the association between the route table and the Net or Subnet.
     */
    linkRouteTableId: pulumi.Input<string>;
    /**
     * If true, the route table is the main one.
     */
    main: pulumi.Input<boolean>;
    /**
     * The ID of the Net for which you want to create a route table.
     */
    netId: pulumi.Input<string>;
    /**
     * The ID of the route table.
     */
    routeTableId: pulumi.Input<string>;
    /**
     * The ID of the Subnet, if the route table is explicitly linked to a Subnet.
     */
    subnetId: pulumi.Input<string>;
}

export interface RouteTableLinkTimeouts {
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
     */
    create?: pulumi.Input<string>;
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
     */
    delete?: pulumi.Input<string>;
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
     */
    read?: pulumi.Input<string>;
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
     */
    update?: pulumi.Input<string>;
}

export interface RouteTableRoute {
    /**
     * The method used to create the route.
     */
    creationMethod: pulumi.Input<string>;
    /**
     * The IP range used for the destination match, in CIDR notation (for example, `10.0.0.0/24`).
     */
    destinationIpRange: pulumi.Input<string>;
    /**
     * The ID of the OUTSCALE service.
     */
    destinationServiceId: pulumi.Input<string>;
    /**
     * The ID of the internet service or virtual gateway attached to the Net.
     */
    gatewayId: pulumi.Input<string>;
    /**
     * The ID of a NAT service attached to the Net.
     */
    natServiceId: pulumi.Input<string>;
    /**
     * The ID of the Net access point.
     */
    netAccessPointId: pulumi.Input<string>;
    /**
     * The ID of the Net peering.
     */
    netPeeringId: pulumi.Input<string>;
    /**
     * The ID of the NIC.
     */
    nicId: pulumi.Input<string>;
    /**
     * The state of a route in the route table (always `active`).
     */
    state: pulumi.Input<string>;
    /**
     * The account ID of the owner of the VM.
     */
    vmAccountId: pulumi.Input<string>;
    /**
     * The ID of a VM specified in a route in the table.
     */
    vmId: pulumi.Input<string>;
}

export interface RouteTableRoutePropagatingVirtualGateway {
    /**
     * The ID of the virtual gateway.
     */
    virtualGatewayId: pulumi.Input<string>;
}

export interface RouteTableTag {
    /**
     * The key of the tag, with a minimum of 1 character.
     */
    key: pulumi.Input<string>;
    /**
     * The value of the tag, between 0 and 255 characters.
     */
    value?: pulumi.Input<string>;
}

export interface RouteTableTimeouts {
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
     */
    create?: pulumi.Input<string>;
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
     */
    delete?: pulumi.Input<string>;
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
     */
    read?: pulumi.Input<string>;
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
     */
    update?: pulumi.Input<string>;
}

export interface RouteTimeouts {
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
     */
    create?: pulumi.Input<string>;
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
     */
    delete?: pulumi.Input<string>;
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
     */
    read?: pulumi.Input<string>;
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
     */
    update?: pulumi.Input<string>;
}

export interface SecurityGroupInboundRule {
    /**
     * The beginning of the port range for the TCP and UDP protocols, or an ICMP type number.
     */
    fromPortRange?: pulumi.Input<number>;
    /**
     * The IP protocol name (`tcp`, `udp`, `icmp`, or `-1` for all protocols). By default, `-1`. In a Net, this can also be an IP protocol number. For more information, see the [IANA.org website](https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml).
     */
    ipProtocol?: pulumi.Input<string>;
    /**
     * One or more IP ranges for the security group rules, in CIDR notation (for example, `10.0.0.0/16`).
     */
    ipRanges?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Information about one or more source or destination security groups.
     */
    securityGroupsMembers?: pulumi.Input<pulumi.Input<{[key: string]: pulumi.Input<string>}>[]>;
    /**
     * The end of the port range for the TCP and UDP protocols, or an ICMP code number.
     */
    toPortRange?: pulumi.Input<number>;
}

export interface SecurityGroupOutboundRule {
    /**
     * The beginning of the port range for the TCP and UDP protocols, or an ICMP type number.
     */
    fromPortRange?: pulumi.Input<number>;
    /**
     * The IP protocol name (`tcp`, `udp`, `icmp`, or `-1` for all protocols). By default, `-1`. In a Net, this can also be an IP protocol number. For more information, see the [IANA.org website](https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml).
     */
    ipProtocol?: pulumi.Input<string>;
    /**
     * One or more IP ranges for the security group rules, in CIDR notation (for example, `10.0.0.0/16`).
     */
    ipRanges?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Information about one or more source or destination security groups.
     */
    securityGroupsMembers?: pulumi.Input<pulumi.Input<{[key: string]: pulumi.Input<string>}>[]>;
    /**
     * The end of the port range for the TCP and UDP protocols, or an ICMP code number.
     */
    toPortRange?: pulumi.Input<number>;
}

export interface SecurityGroupRuleRule {
    /**
     * The beginning of the port range for the TCP and UDP protocols, or an ICMP type number.
     */
    fromPortRange?: pulumi.Input<number>;
    /**
     * The IP protocol name (`tcp`, `udp`, `icmp`, or `-1` for all protocols). By default, `-1`. In a Net, this can also be an IP protocol number. For more information, see the [IANA.org website](https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml).
     */
    ipProtocol?: pulumi.Input<string>;
    /**
     * One or more IP ranges for the security group rules, in CIDR notation (for example, `10.0.0.0/16`).
     */
    ipRanges?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Information about one or more source or destination security groups.
     */
    securityGroupsMembers?: pulumi.Input<pulumi.Input<inputs.SecurityGroupRuleRuleSecurityGroupsMember>[]>;
    /**
     * One or more service IDs to allow traffic from a Net to access the corresponding OUTSCALE services. For more information, see [ReadNetAccessPointServices](https://docs.outscale.com/api#readnetaccesspointservices).
     */
    serviceIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The end of the port range for the TCP and UDP protocols, or an ICMP code number.
     */
    toPortRange?: pulumi.Input<number>;
}

export interface SecurityGroupRuleRuleSecurityGroupsMember {
    /**
     * The account ID that owns the source or destination security group.
     */
    accountId?: pulumi.Input<string>;
    /**
     * The ID of a source or destination security group that you want to link to the security group of the rule.
     */
    securityGroupId?: pulumi.Input<string>;
    /**
     * (Public Cloud only) The name of a source or destination security group that you want to link to the security group of the rule.
     */
    securityGroupName?: pulumi.Input<string>;
}

export interface SecurityGroupTag {
    /**
     * The key of the tag, with a minimum of 1 character.
     */
    key?: pulumi.Input<string>;
    /**
     * The value of the tag, between 0 and 255 characters.
     */
    value?: pulumi.Input<string>;
}

export interface SnapshotAttributesPermissionsToCreateVolumeAdditions {
    /**
     * The account ID of one or more users to whom you want to give permissions.
     */
    accountIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * If true, the resource is public. If false, the resource is private.
     */
    globalPermission?: pulumi.Input<boolean>;
}

export interface SnapshotAttributesPermissionsToCreateVolumeRemoval {
    /**
     * The account ID of one or more users from whom you want to remove permissions.
     */
    accountIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * If true, the resource is public. If false, the resource is private.
     */
    globalPermission?: pulumi.Input<boolean>;
}

export interface SnapshotExportTaskOsuExport {
    /**
     * The format of the export disk (`qcow2` \| `raw`).
     */
    diskImageFormat: pulumi.Input<string>;
    /**
     * Information about the OOS API key.
     */
    osuApiKeys?: pulumi.Input<pulumi.Input<inputs.SnapshotExportTaskOsuExportOsuApiKey>[]>;
    /**
     * The name of the OOS bucket where you want to export the object.
     */
    osuBucket: pulumi.Input<string>;
    /**
     * The prefix for the key of the OOS object.
     */
    osuPrefix?: pulumi.Input<string>;
}

export interface SnapshotExportTaskOsuExportOsuApiKey {
    /**
     * The API key of the OOS account that enables you to access the bucket.
     */
    apiKeyId: pulumi.Input<string>;
    /**
     * The secret key of the OOS account that enables you to access the bucket.
     */
    secretKey: pulumi.Input<string>;
}

export interface SnapshotExportTaskTag {
    /**
     * The key of the tag, with a minimum of 1 character.
     */
    key?: pulumi.Input<string>;
    /**
     * The value of the tag, between 0 and 255 characters.
     */
    value?: pulumi.Input<string>;
}

export interface SnapshotPermissionsToCreateVolume {
    /**
     * The account ID of the owner of the snapshot.
     */
    accountId?: pulumi.Input<string>;
    /**
     * A global permission for all accounts.<br />
     * (Request) Set this parameter to true to make the resource public (if the parent parameter is `Additions`) or to make the resource private (if the parent parameter is `Removals`).<br />
     * (Response) If true, the resource is public. If false, the resource is private.
     */
    globalPermission?: pulumi.Input<boolean>;
}

export interface SnapshotTag {
    /**
     * The key of the tag, with a minimum of 1 character.
     */
    key?: pulumi.Input<string>;
    /**
     * The value of the tag, between 0 and 255 characters.
     */
    value?: pulumi.Input<string>;
}

export interface SubnetTag {
    /**
     * The key of the tag, with a minimum of 1 character.
     */
    key: pulumi.Input<string>;
    /**
     * The value of the tag, between 0 and 255 characters.
     */
    value?: pulumi.Input<string>;
}

export interface SubnetTimeouts {
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
     */
    create?: pulumi.Input<string>;
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
     */
    delete?: pulumi.Input<string>;
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
     */
    read?: pulumi.Input<string>;
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
     */
    update?: pulumi.Input<string>;
}

export interface TagTag {
    key?: pulumi.Input<string>;
    resourceId?: pulumi.Input<string>;
    resourceType?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface UserGroupPolicy {
    /**
     * The date and time (UTC) of creation of the user group.
     */
    creationDate?: pulumi.Input<string>;
    /**
     * The ID of a policy version that you want to make the default one (the active one).
     */
    defaultVersionId?: pulumi.Input<string>;
    /**
     * The date and time (UTC) of the last modification of the user group.
     */
    lastModificationDate?: pulumi.Input<string>;
    policyId?: pulumi.Input<string>;
    policyName?: pulumi.Input<string>;
    policyOrn: pulumi.Input<string>;
}

export interface UserGroupUser {
    /**
     * The date and time (UTC) of creation of the user group.
     */
    creationDate?: pulumi.Input<string>;
    /**
     * The date and time (UTC) of the last modification of the user group.
     */
    lastModificationDate?: pulumi.Input<string>;
    /**
     * The path to the group. If not specified, it is set to a slash (`/`).
     */
    path?: pulumi.Input<string>;
    userId?: pulumi.Input<string>;
    userName: pulumi.Input<string>;
}

export interface UserPolicy {
    /**
     * The date and time (UTC) of creation of the EIM user.
     */
    creationDate?: pulumi.Input<string>;
    /**
     * The ID of a policy version that you want to make the default one (the active one).
     */
    defaultVersionId?: pulumi.Input<string>;
    /**
     * The date and time (UTC) of the last modification of the EIM user.
     */
    lastModificationDate?: pulumi.Input<string>;
    policyId?: pulumi.Input<string>;
    policyName?: pulumi.Input<string>;
    policyOrn: pulumi.Input<string>;
}

export interface VirtualGatewayLinkNetToVirtualGatewayLink {
    /**
     * The ID of the Net to which you want to attach the virtual gateway.
     */
    netId?: pulumi.Input<string>;
    /**
     * The state of the attachment (`attaching` \| `attached` \| `detaching` \| `detached`).
     */
    state?: pulumi.Input<string>;
}

export interface VirtualGatewayNetToVirtualGatewayLink {
    /**
     * The ID of the Net to which the virtual gateway is attached.
     */
    netId?: pulumi.Input<string>;
    /**
     * The state of the virtual gateway (`pending` \| `available` \| `deleting` \| `deleted`).
     */
    state?: pulumi.Input<string>;
}

export interface VirtualGatewayTag {
    /**
     * The key of the tag, with a minimum of 1 character.
     */
    key?: pulumi.Input<string>;
    /**
     * The value of the tag, between 0 and 255 characters.
     */
    value?: pulumi.Input<string>;
}

export interface VmActionsOnNextBoot {
    /**
     * One action to perform on the next boot of the VM (`enable` | `disable` | `setup-mode` |`none`). For more information, see [About Secure Boot](https://docs.outscale.com/en/userguide/About-Secure-Boot.html#_secure_boot_actions).
     */
    secureBoot?: pulumi.Input<string>;
}

export interface VmBlockDeviceMapping {
    /**
     * Information about the BSU volume to create.
     */
    bsu?: pulumi.Input<inputs.VmBlockDeviceMappingBsu>;
    /**
     * The name of the device.
     */
    deviceName?: pulumi.Input<string>;
    noDevice?: pulumi.Input<string>;
    virtualDeviceName?: pulumi.Input<string>;
}

export interface VmBlockDeviceMappingBsu {
    /**
     * By default or if set to true, the volume is deleted when terminating the VM. If false, the volume is not deleted when terminating the VM.
     */
    deleteOnVmDeletion?: pulumi.Input<boolean>;
    /**
     * The number of I/O operations per second (IOPS). This parameter must be specified only if you create an `io1` volume. The maximum number of IOPS allowed for `io1` volumes is `13000` with a maximum performance ratio of 300 IOPS per gibibyte.
     */
    iops?: pulumi.Input<number>;
    /**
     * The ID of the snapshot used to create the volume.
     */
    snapshotId?: pulumi.Input<string>;
    /**
     * One or more tags associated with the VM.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.VmBlockDeviceMappingBsuTag>[]>;
    /**
     * The size of the volume, in gibibytes (GiB).
     */
    volumeSize?: pulumi.Input<number>;
    volumeType?: pulumi.Input<string>;
}

export interface VmBlockDeviceMappingBsuTag {
    /**
     * The key of the tag with a minimum of 1 character.
     */
    key?: pulumi.Input<string>;
    /**
     * The value of the tag, between 0 and 255 characters.
     */
    value?: pulumi.Input<string>;
}

export interface VmBlockDeviceMappingsCreated {
    /**
     * Information about the created BSU volume.
     */
    bsus?: pulumi.Input<pulumi.Input<inputs.VmBlockDeviceMappingsCreatedBsus>[]>;
    /**
     * The name of the device.
     */
    deviceName?: pulumi.Input<string>;
}

export interface VmBlockDeviceMappingsCreatedBsus {
    /**
     * If true, the NIC is deleted when the VM is terminated.
     */
    deleteOnVmDeletion?: pulumi.Input<boolean>;
    /**
     * The date and time (UTC) at which the volume was attached to the VM, in ISO 8601 date-time format.
     */
    linkDate?: pulumi.Input<string>;
    /**
     * The state of the VM (`running` | `stopped`). If set to `stopped`, the VM is stopped regardless of the value of the `vmInitiatedShutdownBehavior` argument.
     */
    state?: pulumi.Input<string>;
    /**
     * A tag to add to this resource. You can specify this argument several times.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.VmBlockDeviceMappingsCreatedBsusTag>[]>;
    /**
     * The ID of the volume.
     */
    volumeId?: pulumi.Input<string>;
}

export interface VmBlockDeviceMappingsCreatedBsusTag {
    /**
     * The key of the tag, with a minimum of 1 character.
     */
    key?: pulumi.Input<string>;
    /**
     * The value of the tag, between 0 and 255 characters.
     */
    value?: pulumi.Input<string>;
}

export interface VmNic {
    /**
     * The account ID of the owner of the NIC.
     */
    accountId?: pulumi.Input<string>;
    /**
     * If true, the NIC is deleted when the VM is terminated. You can specify this parameter only for a new NIC. To modify this value for an existing NIC, see [UpdateNic](https://docs.outscale.com/api#updatenic).
     */
    deleteOnVmDeletion?: pulumi.Input<boolean>;
    /**
     * The description of the NIC, if you are creating a NIC when creating the VM.
     */
    description?: pulumi.Input<string>;
    /**
     * The index of the VM device for the NIC attachment (between `1` and `7`, both included). This parameter is required if you create a NIC when creating the VM.
     */
    deviceNumber: pulumi.Input<number>;
    /**
     * (Net only) If true, the source/destination check is enabled. If false, it is disabled.
     */
    isSourceDestChecked?: pulumi.Input<boolean>;
    /**
     * Information about the network interface card (NIC).
     */
    linkNics?: pulumi.Input<pulumi.Input<inputs.VmNicLinkNic>[]>;
    /**
     * Information about the public IP associated with the NIC.
     */
    linkPublicIps?: pulumi.Input<pulumi.Input<inputs.VmNicLinkPublicIp>[]>;
    /**
     * The Media Access Control (MAC) address of the NIC.
     */
    macAddress?: pulumi.Input<string>;
    /**
     * The ID of the Net for the NIC.
     */
    netId?: pulumi.Input<string>;
    /**
     * The ID of the NIC, if you are attaching an existing NIC when creating a VM.
     */
    nicId?: pulumi.Input<string>;
    /**
     * The name of the private DNS.
     */
    privateDnsName?: pulumi.Input<string>;
    /**
     * One or more private IPs to assign to the NIC, if you create a NIC when creating a VM. Only one private IP can be the primary private IP.
     */
    privateIps?: pulumi.Input<pulumi.Input<inputs.VmNicPrivateIp>[]>;
    /**
     * The number of secondary private IPs, if you create a NIC when creating a VM. This parameter cannot be specified if you specified more than one private IP in the `privateIps` parameter.
     */
    secondaryPrivateIpCount?: pulumi.Input<number>;
    /**
     * One or more IDs of security groups for the NIC, if you create a NIC when creating a VM.
     */
    securityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * One or more security groups associated with the VM.
     */
    securityGroups?: pulumi.Input<pulumi.Input<inputs.VmNicSecurityGroup>[]>;
    /**
     * The state of the VM (`running` | `stopped`). If set to `stopped`, the VM is stopped regardless of the value of the `vmInitiatedShutdownBehavior` argument.
     */
    state?: pulumi.Input<string>;
    /**
     * The ID of the Subnet for the NIC, if you create a NIC when creating a VM. This parameter is required if you create a NIC when creating the VM.
     */
    subnetId?: pulumi.Input<string>;
}

export interface VmNicLinkNic {
    /**
     * If true, the NIC is deleted when the VM is terminated.
     */
    deleteOnVmDeletion?: pulumi.Input<boolean>;
    /**
     * The device index for the NIC attachment (between `1` and `7`, both included).
     */
    deviceNumber?: pulumi.Input<string>;
    /**
     * The ID of the NIC to attach.
     */
    linkNicId?: pulumi.Input<string>;
    /**
     * The state of the VM (`running` | `stopped`). If set to `stopped`, the VM is stopped regardless of the value of the `vmInitiatedShutdownBehavior` argument.
     */
    state?: pulumi.Input<string>;
}

export interface VmNicLinkPublicIp {
    /**
     * The name of the public DNS.
     */
    publicDnsName?: pulumi.Input<string>;
    /**
     * The public IP of the VM.
     */
    publicIp?: pulumi.Input<string>;
    /**
     * The account ID of the owner of the public IP.
     */
    publicIpAccountId?: pulumi.Input<string>;
}

export interface VmNicPrivateIp {
    /**
     * If true, the IP is the primary private IP of the NIC.
     */
    isPrimary?: pulumi.Input<boolean>;
    /**
     * Information about the public IP associated with the NIC.
     */
    linkPublicIps?: pulumi.Input<pulumi.Input<inputs.VmNicPrivateIpLinkPublicIp>[]>;
    /**
     * The name of the private DNS.
     */
    privateDnsName?: pulumi.Input<string>;
    /**
     * The private IP of the NIC.
     */
    privateIp?: pulumi.Input<string>;
}

export interface VmNicPrivateIpLinkPublicIp {
    /**
     * The name of the public DNS.
     */
    publicDnsName?: pulumi.Input<string>;
    /**
     * The public IP of the VM.
     */
    publicIp?: pulumi.Input<string>;
    /**
     * The account ID of the owner of the public IP.
     */
    publicIpAccountId?: pulumi.Input<string>;
}

export interface VmNicSecurityGroup {
    /**
     * The ID of the security group.
     */
    securityGroupId?: pulumi.Input<string>;
    /**
     * The name of the security group.
     */
    securityGroupName?: pulumi.Input<string>;
}

export interface VmPrimaryNic {
    /**
     * The account ID of the owner of the NIC.
     */
    accountId?: pulumi.Input<string>;
    /**
     * If true, the NIC is deleted when the VM is terminated. You can specify this parameter only for a new NIC. To modify this value for an existing NIC, see [UpdateNic](https://docs.outscale.com/api#updatenic).
     */
    deleteOnVmDeletion?: pulumi.Input<boolean>;
    /**
     * The description of the NIC, if you are creating a NIC when creating the VM.
     */
    description?: pulumi.Input<string>;
    /**
     * The index of the VM device for the NIC attachment (must be `0`). This parameter is required if you create a NIC when creating the VM.
     */
    deviceNumber: pulumi.Input<number>;
    /**
     * (Net only) If true, the source/destination check is enabled. If false, it is disabled.
     */
    isSourceDestChecked?: pulumi.Input<boolean>;
    /**
     * Information about the network interface card (NIC).
     */
    linkNics?: pulumi.Input<pulumi.Input<inputs.VmPrimaryNicLinkNic>[]>;
    /**
     * Information about the public IP associated with the NIC.
     */
    linkPublicIps?: pulumi.Input<pulumi.Input<inputs.VmPrimaryNicLinkPublicIp>[]>;
    /**
     * The Media Access Control (MAC) address of the NIC.
     */
    macAddress?: pulumi.Input<string>;
    /**
     * The ID of the Net for the NIC.
     */
    netId?: pulumi.Input<string>;
    /**
     * The ID of the NIC, if you are attaching an existing NIC when creating a VM.
     */
    nicId?: pulumi.Input<string>;
    /**
     * The name of the private DNS.
     */
    privateDnsName?: pulumi.Input<string>;
    /**
     * One or more private IPs to assign to the NIC, if you create a NIC when creating a VM. Only one private IP can be the primary private IP.
     */
    privateIps?: pulumi.Input<pulumi.Input<inputs.VmPrimaryNicPrivateIp>[]>;
    /**
     * The number of secondary private IPs, if you create a NIC when creating a VM. This parameter cannot be specified if you specified more than one private IP in the `privateIps` parameter.
     */
    secondaryPrivateIpCount?: pulumi.Input<number>;
    /**
     * One or more IDs of security groups for the NIC, if you create a NIC when creating a VM.
     */
    securityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * One or more security groups associated with the VM.
     */
    securityGroups?: pulumi.Input<pulumi.Input<inputs.VmPrimaryNicSecurityGroup>[]>;
    /**
     * The state of the VM (`running` | `stopped`). If set to `stopped`, the VM is stopped regardless of the value of the `vmInitiatedShutdownBehavior` argument.
     */
    state?: pulumi.Input<string>;
    /**
     * The ID of the Subnet for the NIC, if you create a NIC when creating a VM. This parameter is required if you create a NIC when creating the VM.
     */
    subnetId?: pulumi.Input<string>;
}

export interface VmPrimaryNicLinkNic {
    /**
     * If true, the NIC is deleted when the VM is terminated.
     */
    deleteOnVmDeletion?: pulumi.Input<boolean>;
    /**
     * The device index for the NIC attachment (between `1` and `7`, both included).
     */
    deviceNumber?: pulumi.Input<string>;
    /**
     * The ID of the NIC to attach.
     */
    linkNicId?: pulumi.Input<string>;
    /**
     * The state of the VM (`running` | `stopped`). If set to `stopped`, the VM is stopped regardless of the value of the `vmInitiatedShutdownBehavior` argument.
     */
    state?: pulumi.Input<string>;
}

export interface VmPrimaryNicLinkPublicIp {
    /**
     * The name of the public DNS.
     */
    publicDnsName?: pulumi.Input<string>;
    /**
     * The public IP of the VM.
     */
    publicIp?: pulumi.Input<string>;
    /**
     * The account ID of the owner of the public IP.
     */
    publicIpAccountId?: pulumi.Input<string>;
}

export interface VmPrimaryNicPrivateIp {
    /**
     * If true, the IP is the primary private IP of the NIC.
     */
    isPrimary?: pulumi.Input<boolean>;
    /**
     * Information about the public IP associated with the NIC.
     */
    linkPublicIps?: pulumi.Input<pulumi.Input<inputs.VmPrimaryNicPrivateIpLinkPublicIp>[]>;
    /**
     * The name of the private DNS.
     */
    privateDnsName?: pulumi.Input<string>;
    /**
     * The private IP of the NIC.
     */
    privateIp?: pulumi.Input<string>;
}

export interface VmPrimaryNicPrivateIpLinkPublicIp {
    /**
     * The name of the public DNS.
     */
    publicDnsName?: pulumi.Input<string>;
    /**
     * The public IP of the VM.
     */
    publicIp?: pulumi.Input<string>;
    /**
     * The account ID of the owner of the public IP.
     */
    publicIpAccountId?: pulumi.Input<string>;
}

export interface VmPrimaryNicSecurityGroup {
    /**
     * The ID of the security group.
     */
    securityGroupId?: pulumi.Input<string>;
    /**
     * The name of the security group.
     */
    securityGroupName?: pulumi.Input<string>;
}

export interface VmSecurityGroup {
    /**
     * The ID of the security group.
     */
    securityGroupId?: pulumi.Input<string>;
    /**
     * The name of the security group.
     */
    securityGroupName?: pulumi.Input<string>;
}

export interface VmTag {
    /**
     * The key of the tag, with a minimum of 1 character.
     */
    key?: pulumi.Input<string>;
    /**
     * The value of the tag, between 0 and 255 characters.
     */
    value?: pulumi.Input<string>;
}

export interface VolumeLinkTimeouts {
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
     */
    create?: pulumi.Input<string>;
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
     */
    delete?: pulumi.Input<string>;
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
     */
    read?: pulumi.Input<string>;
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
     */
    update?: pulumi.Input<string>;
}

export interface VolumeLinkedVolume {
    /**
     * If true, the volume is deleted when terminating the VM. If false, the volume is not deleted when terminating the VM.
     */
    deleteOnVmDeletion: pulumi.Input<boolean>;
    /**
     * The name of the device.
     */
    deviceName: pulumi.Input<string>;
    /**
     * The state of the volume (`creating` \| `available` \| `in-use` \| `updating` \| `deleting` \| `error`).
     */
    state: pulumi.Input<string>;
    /**
     * The ID of the VM.
     */
    vmId: pulumi.Input<string>;
    /**
     * The ID of the volume.
     */
    volumeId: pulumi.Input<string>;
}

export interface VolumeTag {
    /**
     * The key of the tag, with a minimum of 1 character.
     */
    key: pulumi.Input<string>;
    /**
     * The value of the tag, between 0 and 255 characters.
     */
    value?: pulumi.Input<string>;
}

export interface VolumeTimeouts {
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
     */
    create?: pulumi.Input<string>;
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
     */
    delete?: pulumi.Input<string>;
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
     */
    read?: pulumi.Input<string>;
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
     */
    update?: pulumi.Input<string>;
}

export interface VpnConnectionRoute {
    /**
     * The IP range used for the destination match, in CIDR notation (for example, `10.0.0.0/24`).
     */
    destinationIpRange?: pulumi.Input<string>;
    /**
     * The type of route (always `static`).
     */
    routeType?: pulumi.Input<string>;
    /**
     * The state of the IPSEC tunnel (`UP` \| `DOWN`).
     */
    state?: pulumi.Input<string>;
}

export interface VpnConnectionTag {
    /**
     * The key of the tag, with a minimum of 1 character.
     */
    key?: pulumi.Input<string>;
    /**
     * The value of the tag, between 0 and 255 characters.
     */
    value?: pulumi.Input<string>;
}

export interface VpnConnectionVgwTelemetry {
    /**
     * The number of routes accepted through BGP (Border Gateway Protocol) route exchanges.
     */
    acceptedRouteCount?: pulumi.Input<number>;
    /**
     * The date and time (UTC) of the latest state update.
     */
    lastStateChangeDate?: pulumi.Input<string>;
    /**
     * The IP on the OUTSCALE side of the tunnel.
     */
    outsideIpAddress?: pulumi.Input<string>;
    /**
     * The state of the IPSEC tunnel (`UP` \| `DOWN`).
     */
    state?: pulumi.Input<string>;
    /**
     * A description of the current state of the tunnel.
     */
    stateDescription?: pulumi.Input<string>;
}
export namespace config {
}
