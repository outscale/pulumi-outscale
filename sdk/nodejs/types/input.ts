// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface ClientGatewayTag {
    key?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface DhcpOptionTag {
    key?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface GetAccessKeyFilter {
    name: string;
    values: string[];
}

export interface GetAccessKeyFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetAccessKeysFilter {
    name: string;
    values: string[];
}

export interface GetAccessKeysFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetApiAccessRuleFilter {
    name: string;
    values: string[];
}

export interface GetApiAccessRuleFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetApiAccessRulesFilter {
    name: string;
    values: string[];
}

export interface GetApiAccessRulesFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCaFilter {
    name: string;
    values: string[];
}

export interface GetCaFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCasFilter {
    name: string;
    values: string[];
}

export interface GetCasFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetClientGatewayFilter {
    name: string;
    values: string[];
}

export interface GetClientGatewayFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetClientGatewaysFilter {
    name: string;
    values: string[];
}

export interface GetClientGatewaysFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDhcpOptionFilter {
    name: string;
    values: string[];
}

export interface GetDhcpOptionFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDhcpOptionsFilter {
    name: string;
    values: string[];
}

export interface GetDhcpOptionsFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetFlexibleGpuCatalogFilter {
    name: string;
    values: string[];
}

export interface GetFlexibleGpuCatalogFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetFlexibleGpuFilter {
    name: string;
    values: string[];
}

export interface GetFlexibleGpuFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetFlexibleGpusFilter {
    name: string;
    values: string[];
}

export interface GetFlexibleGpusFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetImageBlockDeviceMapping {
    bsus?: inputs.GetImageBlockDeviceMappingBsus[];
    deviceName?: string;
    virtualDeviceName?: string;
}

export interface GetImageBlockDeviceMappingArgs {
    bsus?: pulumi.Input<pulumi.Input<inputs.GetImageBlockDeviceMappingBsusArgs>[]>;
    deviceName?: pulumi.Input<string>;
    virtualDeviceName?: pulumi.Input<string>;
}

export interface GetImageBlockDeviceMappingBsus {
    deleteOnVmDeletion?: boolean;
    iops?: number;
    snapshotId?: string;
    volumeSize?: number;
    volumeType?: string;
}

export interface GetImageBlockDeviceMappingBsusArgs {
    deleteOnVmDeletion?: pulumi.Input<boolean>;
    iops?: pulumi.Input<number>;
    snapshotId?: pulumi.Input<string>;
    volumeSize?: pulumi.Input<number>;
    volumeType?: pulumi.Input<string>;
}

export interface GetImageExportTaskFilter {
    name: string;
    values: string[];
}

export interface GetImageExportTaskFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetImageExportTasksFilter {
    name: string;
    values: string[];
}

export interface GetImageExportTasksFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetImageFilter {
    name: string;
    values: string[];
}

export interface GetImageFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetImagesFilter {
    name: string;
    values: string[];
}

export interface GetImagesFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetInternetServiceFilter {
    name: string;
    values: string[];
}

export interface GetInternetServiceFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetInternetServicesFilter {
    name: string;
    values: string[];
}

export interface GetInternetServicesFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetKeypairFilter {
    name: string;
    values: string[];
}

export interface GetKeypairFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetKeypairsFilter {
    name: string;
    values: string[];
}

export interface GetKeypairsFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetLoadBalancerAccessLog {
    isEnabled?: boolean;
    osuBucketName?: string;
    osuBucketPrefix?: string;
    publicationInterval?: number;
}

export interface GetLoadBalancerAccessLogArgs {
    isEnabled?: pulumi.Input<boolean>;
    osuBucketName?: pulumi.Input<string>;
    osuBucketPrefix?: pulumi.Input<string>;
    publicationInterval?: pulumi.Input<number>;
}

export interface GetLoadBalancerFilter {
    name: string;
    values: string[];
}

export interface GetLoadBalancerFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetLoadBalancerHealthCheck {
    checkInterval?: string;
    checkedVm?: string;
    healthyThreshold?: string;
    timeout?: string;
    unhealthyThreshold?: string;
}

export interface GetLoadBalancerHealthCheckArgs {
    checkInterval?: pulumi.Input<string>;
    checkedVm?: pulumi.Input<string>;
    healthyThreshold?: pulumi.Input<string>;
    timeout?: pulumi.Input<string>;
    unhealthyThreshold?: pulumi.Input<string>;
}

export interface GetLoadBalancerListener {
    backendPort?: number;
    backendProtocol?: string;
    loadBalancerPort?: number;
    loadBalancerProtocol?: string;
    policyNames?: string[];
    serverCertificateId?: string;
}

export interface GetLoadBalancerListenerArgs {
    backendPort?: pulumi.Input<number>;
    backendProtocol?: pulumi.Input<string>;
    loadBalancerPort?: pulumi.Input<number>;
    loadBalancerProtocol?: pulumi.Input<string>;
    policyNames?: pulumi.Input<pulumi.Input<string>[]>;
    serverCertificateId?: pulumi.Input<string>;
}

export interface GetLoadBalancerTag {
    key?: string;
    value?: string;
}

export interface GetLoadBalancerTagArgs {
    key?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface GetLoadBalancerTagsFilter {
    name: string;
    values: string[];
}

export interface GetLoadBalancerTagsFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetLoadBalancerVmHealthFilter {
    name: string;
    values: string[];
}

export interface GetLoadBalancerVmHealthFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetLoadBalancersFilter {
    name: string;
    values: string[];
}

export interface GetLoadBalancersFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetNatServiceFilter {
    name: string;
    values: string[];
}

export interface GetNatServiceFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetNatServicesFilter {
    name: string;
    values: string[];
}

export interface GetNatServicesFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetNetAccessPointFilter {
    name: string;
    values: string[];
}

export interface GetNetAccessPointFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetNetAccessPointServicesFilter {
    name: string;
    values: string[];
}

export interface GetNetAccessPointServicesFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetNetAccessPointsFilter {
    name: string;
    values: string[];
}

export interface GetNetAccessPointsFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetNetFilter {
    name: string;
    values: string[];
}

export interface GetNetFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetNetPeeringFilter {
    name: string;
    values: string[];
}

export interface GetNetPeeringFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetNetPeeringsFilter {
    name: string;
    values: string[];
}

export interface GetNetPeeringsFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetNetsFilter {
    name: string;
    values: string[];
}

export interface GetNetsFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetNicFilter {
    name: string;
    values: string[];
}

export interface GetNicFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetNicsFilter {
    name: string;
    values: string[];
}

export interface GetNicsFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetProductTypeFilter {
    name: string;
    values: string[];
}

export interface GetProductTypeFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetProductTypesFilter {
    name: string;
    values: string[];
}

export interface GetProductTypesFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetPublicIpFilter {
    name: string;
    values: string[];
}

export interface GetPublicIpFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetPublicIpsFilter {
    name: string;
    values: string[];
}

export interface GetPublicIpsFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetQuotaFilter {
    name: string;
    values: string[];
}

export interface GetQuotaFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetQuotasFilter {
    name: string;
    values: string[];
}

export interface GetQuotasFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetRouteTableFilter {
    name: string;
    values: string[];
}

export interface GetRouteTableFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetRouteTablesFilter {
    name: string;
    values: string[];
}

export interface GetRouteTablesFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetSecurityGroupFilter {
    name: string;
    values: string[];
}

export interface GetSecurityGroupFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetSecurityGroupsFilter {
    name: string;
    values: string[];
}

export interface GetSecurityGroupsFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetServerCertificateFilter {
    name: string;
    values: string[];
}

export interface GetServerCertificateFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetServerCertificatesFilter {
    name: string;
    values: string[];
}

export interface GetServerCertificatesFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetSnapshotExportTaskFilter {
    name: string;
    values: string[];
}

export interface GetSnapshotExportTaskFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetSnapshotExportTasksFilter {
    name: string;
    values: string[];
}

export interface GetSnapshotExportTasksFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetSnapshotFilter {
    name: string;
    values: string[];
}

export interface GetSnapshotFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetSnapshotsFilter {
    name: string;
    values: string[];
}

export interface GetSnapshotsFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetSubnetFilter {
    name: string;
    values: string[];
}

export interface GetSubnetFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetSubnetsFilter {
    name: string;
    values: string[];
}

export interface GetSubnetsFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetSubregionsFilter {
    name: string;
    values: string[];
}

export interface GetSubregionsFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetTagFilter {
    name: string;
    values: string[];
}

export interface GetTagFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetVirtualGatewayFilter {
    name: string;
    values: string[];
}

export interface GetVirtualGatewayFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetVirtualGatewaysFilter {
    name: string;
    values: string[];
}

export interface GetVirtualGatewaysFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetVmBlockDeviceMappingsCreated {
    bsu?: inputs.GetVmBlockDeviceMappingsCreatedBsu;
    deviceName?: string;
}

export interface GetVmBlockDeviceMappingsCreatedArgs {
    bsu?: pulumi.Input<inputs.GetVmBlockDeviceMappingsCreatedBsuArgs>;
    deviceName?: pulumi.Input<string>;
}

export interface GetVmBlockDeviceMappingsCreatedBsu {
    deleteOnVmDeletion?: boolean;
    linkDate?: string;
    state?: number;
    volumeId?: number;
}

export interface GetVmBlockDeviceMappingsCreatedBsuArgs {
    deleteOnVmDeletion?: pulumi.Input<boolean>;
    linkDate?: pulumi.Input<string>;
    state?: pulumi.Input<number>;
    volumeId?: pulumi.Input<number>;
}

export interface GetVmFilter {
    name: string;
    values: string[];
}

export interface GetVmFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetVmNic {
    accountId?: string;
    deleteOnVmDeletion?: boolean;
    description?: string;
    deviceNumber?: number;
    isSourceDestChecked?: boolean;
    linkNic?: inputs.GetVmNicLinkNic;
    linkPublicIps?: inputs.GetVmNicLinkPublicIp[];
    macAddress?: string;
    netId?: string;
    nicId?: string;
    privateDnsName?: string;
    privateIps?: inputs.GetVmNicPrivateIp[];
    secondaryPrivateIpCount?: number;
    securityGroupIds?: string[];
    securityGroups?: inputs.GetVmNicSecurityGroup[];
    securityGroupsNames?: string[];
    state?: string;
    subnetId?: string;
}

export interface GetVmNicArgs {
    accountId?: pulumi.Input<string>;
    deleteOnVmDeletion?: pulumi.Input<boolean>;
    description?: pulumi.Input<string>;
    deviceNumber?: pulumi.Input<number>;
    isSourceDestChecked?: pulumi.Input<boolean>;
    linkNic?: pulumi.Input<inputs.GetVmNicLinkNicArgs>;
    linkPublicIps?: pulumi.Input<pulumi.Input<inputs.GetVmNicLinkPublicIpArgs>[]>;
    macAddress?: pulumi.Input<string>;
    netId?: pulumi.Input<string>;
    nicId?: pulumi.Input<string>;
    privateDnsName?: pulumi.Input<string>;
    privateIps?: pulumi.Input<pulumi.Input<inputs.GetVmNicPrivateIpArgs>[]>;
    secondaryPrivateIpCount?: pulumi.Input<number>;
    securityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    securityGroups?: pulumi.Input<pulumi.Input<inputs.GetVmNicSecurityGroupArgs>[]>;
    securityGroupsNames?: pulumi.Input<pulumi.Input<string>[]>;
    state?: pulumi.Input<string>;
    subnetId?: pulumi.Input<string>;
}

export interface GetVmNicLinkNic {
    deleteOnVmDeletion?: boolean;
    deviceNumber?: string;
    linkNicId?: string;
    state?: string;
}

export interface GetVmNicLinkNicArgs {
    deleteOnVmDeletion?: pulumi.Input<boolean>;
    deviceNumber?: pulumi.Input<string>;
    linkNicId?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
}

export interface GetVmNicLinkPublicIp {
    publicDnsName?: string;
    publicIp?: string;
    publicIpAccountId?: string;
}

export interface GetVmNicLinkPublicIpArgs {
    publicDnsName?: pulumi.Input<string>;
    publicIp?: pulumi.Input<string>;
    publicIpAccountId?: pulumi.Input<string>;
}

export interface GetVmNicPrivateIp {
    isPrimary?: boolean;
    linkPublicIps?: inputs.GetVmNicPrivateIpLinkPublicIp[];
    privateDnsName?: string;
    privateIp?: string;
}

export interface GetVmNicPrivateIpArgs {
    isPrimary?: pulumi.Input<boolean>;
    linkPublicIps?: pulumi.Input<pulumi.Input<inputs.GetVmNicPrivateIpLinkPublicIpArgs>[]>;
    privateDnsName?: pulumi.Input<string>;
    privateIp?: pulumi.Input<string>;
}

export interface GetVmNicPrivateIpLinkPublicIp {
    publicDnsName?: string;
    publicIp?: string;
    publicIpAccountId?: string;
}

export interface GetVmNicPrivateIpLinkPublicIpArgs {
    publicDnsName?: pulumi.Input<string>;
    publicIp?: pulumi.Input<string>;
    publicIpAccountId?: pulumi.Input<string>;
}

export interface GetVmNicSecurityGroup {
    securityGroupId?: string;
    securityGroupName?: string;
}

export interface GetVmNicSecurityGroupArgs {
    securityGroupId?: pulumi.Input<string>;
    securityGroupName?: pulumi.Input<string>;
}

export interface GetVmStateFilter {
    name: string;
    values: string[];
}

export interface GetVmStateFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetVmStatesFilter {
    name: string;
    values: string[];
}

export interface GetVmStatesFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetVmTypesFilter {
    name: string;
    values: string[];
}

export interface GetVmTypesFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetVmsFilter {
    name: string;
    values: string[];
}

export interface GetVmsFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetVolumeFilter {
    name: string;
    values: string[];
}

export interface GetVolumeFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetVolumesFilter {
    name: string;
    values: string[];
}

export interface GetVolumesFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetVpnConnectionFilter {
    name: string;
    values: string[];
}

export interface GetVpnConnectionFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetVpnConnectionsFilter {
    name: string;
    values: string[];
}

export interface GetVpnConnectionsFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ImageBlockDeviceMapping {
    bsus?: pulumi.Input<pulumi.Input<inputs.ImageBlockDeviceMappingBsus>[]>;
    deviceName?: pulumi.Input<string>;
    virtualDeviceName?: pulumi.Input<string>;
}

export interface ImageBlockDeviceMappingBsus {
    deleteOnVmDeletion?: pulumi.Input<boolean>;
    iops?: pulumi.Input<number>;
    snapshotId?: pulumi.Input<string>;
    volumeSize?: pulumi.Input<number>;
    volumeType?: pulumi.Input<string>;
}

export interface ImageExportTaskOsuExport {
    diskImageFormat: pulumi.Input<string>;
    osuApiKeys?: pulumi.Input<pulumi.Input<inputs.ImageExportTaskOsuExportOsuApiKey>[]>;
    osuBucket: pulumi.Input<string>;
    osuManifestUrl?: pulumi.Input<string>;
    osuPrefix?: pulumi.Input<string>;
}

export interface ImageExportTaskOsuExportOsuApiKey {
    apiKeyId: pulumi.Input<string>;
    secretKey: pulumi.Input<string>;
}

export interface ImageExportTaskTag {
    key?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface ImageLaunchPermissionPermissionAdditions {
    accountIds?: pulumi.Input<pulumi.Input<string>[]>;
    globalPermission?: pulumi.Input<string>;
}

export interface ImageLaunchPermissionPermissionRemovals {
    accountIds?: pulumi.Input<pulumi.Input<string>[]>;
    globalPermission?: pulumi.Input<string>;
}

export interface ImageLaunchPermissionPermissionsToLaunch {
    accountIds?: pulumi.Input<pulumi.Input<string>[]>;
    globalPermission?: pulumi.Input<string>;
}

export interface ImagePermissionsToLaunch {
    accountIds?: pulumi.Input<pulumi.Input<string>[]>;
    globalPermission?: pulumi.Input<boolean>;
}

export interface ImageStateComment {
    stateCode?: pulumi.Input<string>;
    stateMessage?: pulumi.Input<string>;
}

export interface ImageTag {
    key?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface InternetServiceLinkTag {
    key?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface InternetServiceTag {
    key?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface LoadBalancerAccessLog {
    isEnabled?: pulumi.Input<boolean>;
    osuBucketName?: pulumi.Input<string>;
    osuBucketPrefix?: pulumi.Input<string>;
    publicationInterval?: pulumi.Input<number>;
}

export interface LoadBalancerApplicationStickyCookiePolicy {
    cookieName?: pulumi.Input<string>;
    policyName?: pulumi.Input<string>;
}

export interface LoadBalancerAttributesAccessLog {
    isEnabled?: pulumi.Input<boolean>;
    osuBucketName?: pulumi.Input<string>;
    osuBucketPrefix?: pulumi.Input<string>;
    publicationInterval?: pulumi.Input<number>;
}

export interface LoadBalancerAttributesApplicationStickyCookiePolicy {
    cookieName?: pulumi.Input<string>;
    policyName?: pulumi.Input<string>;
}

export interface LoadBalancerAttributesHealthCheck {
    checkInterval: pulumi.Input<number>;
    healthyThreshold: pulumi.Input<number>;
    path?: pulumi.Input<string>;
    port: pulumi.Input<number>;
    protocol: pulumi.Input<string>;
    timeout: pulumi.Input<number>;
    unhealthyThreshold: pulumi.Input<number>;
}

export interface LoadBalancerAttributesListener {
    backendPort?: pulumi.Input<number>;
    backendProtocol?: pulumi.Input<string>;
    loadBalancerPort?: pulumi.Input<number>;
    loadBalancerProtocol?: pulumi.Input<string>;
    policyNames?: pulumi.Input<pulumi.Input<string>[]>;
    serverCertificateId?: pulumi.Input<string>;
}

export interface LoadBalancerAttributesLoadBalancerStickyCookiePolicy {
    policyName?: pulumi.Input<string>;
}

export interface LoadBalancerAttributesSourceSecurityGroup {
    securityGroupAccountId?: pulumi.Input<string>;
    securityGroupName?: pulumi.Input<string>;
}

export interface LoadBalancerAttributesTag {
    key?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface LoadBalancerHealthCheck {
    checkInterval?: pulumi.Input<string>;
    healthyThreshold?: pulumi.Input<string>;
    path?: pulumi.Input<string>;
    port?: pulumi.Input<string>;
    protocol?: pulumi.Input<string>;
    timeout?: pulumi.Input<string>;
    unhealthyThreshold?: pulumi.Input<string>;
}

export interface LoadBalancerListener {
    backendPort: pulumi.Input<number>;
    backendProtocol: pulumi.Input<string>;
    loadBalancerPort: pulumi.Input<number>;
    loadBalancerProtocol: pulumi.Input<string>;
    policyNames?: pulumi.Input<pulumi.Input<string>[]>;
    serverCertificateId?: pulumi.Input<string>;
}

export interface LoadBalancerLoadBalancerStickyCookiePolicy {
    policyName?: pulumi.Input<string>;
}

export interface LoadBalancerPolicyAccessLog {
    isEnabled?: pulumi.Input<boolean>;
    osuBucketName?: pulumi.Input<string>;
    osuBucketPrefix?: pulumi.Input<string>;
    publicationInterval?: pulumi.Input<number>;
}

export interface LoadBalancerPolicyApplicationStickyCookiePolicy {
    cookieName?: pulumi.Input<string>;
    policyName?: pulumi.Input<string>;
}

export interface LoadBalancerPolicyHealthCheck {
    checkInterval?: pulumi.Input<string>;
    healthyThreshold?: pulumi.Input<string>;
    path?: pulumi.Input<string>;
    port?: pulumi.Input<string>;
    protocol?: pulumi.Input<string>;
    timeout?: pulumi.Input<string>;
    unhealthyThreshold?: pulumi.Input<string>;
}

export interface LoadBalancerPolicyListener {
    backendPort?: pulumi.Input<number>;
    backendProtocol?: pulumi.Input<string>;
    loadBalancerPort?: pulumi.Input<number>;
    loadBalancerProtocol?: pulumi.Input<string>;
    policyNames?: pulumi.Input<pulumi.Input<string>[]>;
    serverCertificateId?: pulumi.Input<string>;
}

export interface LoadBalancerPolicyLoadBalancerStickyCookiePolicy {
    policyName?: pulumi.Input<string>;
}

export interface LoadBalancerPolicySourceSecurityGroup {
    securityGroupAccountId?: pulumi.Input<string>;
    securityGroupName?: pulumi.Input<string>;
}

export interface LoadBalancerPolicyTag {
    key?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface LoadBalancerSourceSecurityGroup {
    securityGroupAccountId?: pulumi.Input<string>;
    securityGroupName?: pulumi.Input<string>;
}

export interface LoadBalancerTag {
    key?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface NatServicePublicIp {
    publicIp?: pulumi.Input<string>;
    publicIpId?: pulumi.Input<string>;
}

export interface NatServiceTag {
    key?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface NetAccessPointTag {
    key?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface NetAttributesTag {
    key?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface NetPeeringAccepterNet {
    accountId?: pulumi.Input<string>;
    ipRange?: pulumi.Input<string>;
    netId?: pulumi.Input<string>;
}

export interface NetPeeringAcceptionAccepterNet {
    accountId?: pulumi.Input<string>;
    ipRange?: pulumi.Input<string>;
    netId?: pulumi.Input<string>;
}

export interface NetPeeringAcceptionSourceNet {
    accountId?: pulumi.Input<string>;
    ipRange?: pulumi.Input<string>;
    netId?: pulumi.Input<string>;
}

export interface NetPeeringAcceptionState {
    message?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
}

export interface NetPeeringAcceptionTag {
    key?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface NetPeeringSourceNet {
    accountId?: pulumi.Input<string>;
    ipRange?: pulumi.Input<string>;
    netId?: pulumi.Input<string>;
}

export interface NetPeeringState {
    message?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
}

export interface NetPeeringTag {
    key?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface NetTag {
    key?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface NicLinkNic {
    deleteOnVmDeletion?: pulumi.Input<string>;
    deviceNumber?: pulumi.Input<number>;
    linkNicId?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
    vmAccountId?: pulumi.Input<string>;
    vmId?: pulumi.Input<string>;
}

export interface NicLinkPublicIp {
    linkPublicIpId?: pulumi.Input<string>;
    publicDnsName?: pulumi.Input<string>;
    publicIp?: pulumi.Input<string>;
    publicIpAccountId?: pulumi.Input<string>;
    publicIpId?: pulumi.Input<string>;
}

export interface NicPrivateIp {
    isPrimary?: pulumi.Input<boolean>;
    linkPublicIp?: pulumi.Input<inputs.NicPrivateIpLinkPublicIp>;
    privateDnsName?: pulumi.Input<string>;
    privateIp?: pulumi.Input<string>;
}

export interface NicPrivateIpLinkPublicIp {
    linkPublicIpId?: pulumi.Input<string>;
    publicDnsName?: pulumi.Input<string>;
    publicIp?: pulumi.Input<string>;
    publicIpAccountId?: pulumi.Input<string>;
    publicIpId?: pulumi.Input<string>;
}

export interface NicSecurityGroup {
    securityGroupId?: pulumi.Input<string>;
    securityGroupName?: pulumi.Input<string>;
}

export interface NicTag {
    key?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface OutboundRuleRule {
    fromPortRange?: pulumi.Input<number>;
    ipProtocol?: pulumi.Input<string>;
    ipRanges?: pulumi.Input<pulumi.Input<string>[]>;
    securityGroupsMembers?: pulumi.Input<pulumi.Input<inputs.OutboundRuleRuleSecurityGroupsMember>[]>;
    serviceIds?: pulumi.Input<pulumi.Input<string>[]>;
    toPortRange?: pulumi.Input<number>;
}

export interface OutboundRuleRuleSecurityGroupsMember {
    accountId?: pulumi.Input<string>;
    securityGroupId?: pulumi.Input<string>;
    securityGroupName?: pulumi.Input<string>;
}

export interface ProviderEndpoint {
    api?: pulumi.Input<string>;
}

export interface PublicIpLinkTag {
    key?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface PublicIpTag {
    key?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface RouteTableLinkRouteTable {
    linkRouteTableId?: pulumi.Input<string>;
    main?: pulumi.Input<boolean>;
    routeTableId?: pulumi.Input<string>;
    routeTableToSubnetLinkId?: pulumi.Input<string>;
    subnetId?: pulumi.Input<string>;
}

export interface RouteTableRoute {
    creationMethod?: pulumi.Input<string>;
    destinationIpRange?: pulumi.Input<string>;
    destinationServiceId?: pulumi.Input<string>;
    gatewayId?: pulumi.Input<string>;
    natServiceId?: pulumi.Input<string>;
    netAccessPointId?: pulumi.Input<string>;
    netPeeringId?: pulumi.Input<string>;
    nicId?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
    vmAccountId?: pulumi.Input<string>;
    vmId?: pulumi.Input<string>;
}

export interface RouteTableRoutePropagatingVirtualGateway {
    virtualGatewayId?: pulumi.Input<string>;
}

export interface RouteTableTag {
    key?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface SecurityGroupInboundRule {
    fromPortRange?: pulumi.Input<number>;
    ipProtocol?: pulumi.Input<string>;
    ipRanges?: pulumi.Input<pulumi.Input<string>[]>;
    securityGroupsMembers?: pulumi.Input<pulumi.Input<{[key: string]: any}>[]>;
    toPortRange?: pulumi.Input<number>;
}

export interface SecurityGroupOutboundRule {
    fromPortRange?: pulumi.Input<number>;
    ipProtocol?: pulumi.Input<string>;
    ipRanges?: pulumi.Input<pulumi.Input<string>[]>;
    securityGroupsMembers?: pulumi.Input<pulumi.Input<{[key: string]: any}>[]>;
    toPortRange?: pulumi.Input<number>;
}

export interface SecurityGroupRuleRule {
    fromPortRange?: pulumi.Input<number>;
    ipProtocol?: pulumi.Input<string>;
    ipRanges?: pulumi.Input<pulumi.Input<string>[]>;
    securityGroupsMembers?: pulumi.Input<pulumi.Input<inputs.SecurityGroupRuleRuleSecurityGroupsMember>[]>;
    serviceIds?: pulumi.Input<pulumi.Input<string>[]>;
    toPortRange?: pulumi.Input<number>;
}

export interface SecurityGroupRuleRuleSecurityGroupsMember {
    accountId?: pulumi.Input<string>;
    securityGroupId?: pulumi.Input<string>;
    securityGroupName?: pulumi.Input<string>;
}

export interface SecurityGroupTag {
    key?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface SnapshotAttributesPermissionsToCreateVolumeAdditions {
    accountIds?: pulumi.Input<pulumi.Input<string>[]>;
    globalPermission?: pulumi.Input<boolean>;
}

export interface SnapshotAttributesPermissionsToCreateVolumeRemoval {
    accountIds?: pulumi.Input<pulumi.Input<string>[]>;
    globalPermission?: pulumi.Input<boolean>;
}

export interface SnapshotExportTaskOsuExport {
    diskImageFormat: pulumi.Input<string>;
    osuApiKeys?: pulumi.Input<pulumi.Input<inputs.SnapshotExportTaskOsuExportOsuApiKey>[]>;
    osuBucket: pulumi.Input<string>;
    osuPrefix?: pulumi.Input<string>;
}

export interface SnapshotExportTaskOsuExportOsuApiKey {
    apiKeyId: pulumi.Input<string>;
    secretKey: pulumi.Input<string>;
}

export interface SnapshotExportTaskTag {
    key?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface SnapshotPermissionsToCreateVolume {
    accountId?: pulumi.Input<string>;
    globalPermission?: pulumi.Input<boolean>;
}

export interface SnapshotTag {
    key?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface SubnetTag {
    key?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface TagTag {
    key?: pulumi.Input<string>;
    resourceId?: pulumi.Input<string>;
    resourceType?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface VirtualGatewayLinkNetToVirtualGatewayLink {
    netId?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
}

export interface VirtualGatewayNetToVirtualGatewayLink {
    netId?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
}

export interface VirtualGatewayTag {
    key?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface VmBlockDeviceMapping {
    bsu?: pulumi.Input<inputs.VmBlockDeviceMappingBsu>;
    deviceName?: pulumi.Input<string>;
    noDevice?: pulumi.Input<string>;
    virtualDeviceName?: pulumi.Input<string>;
}

export interface VmBlockDeviceMappingBsu {
    deleteOnVmDeletion?: pulumi.Input<boolean>;
    iops?: pulumi.Input<number>;
    snapshotId?: pulumi.Input<string>;
    volumeSize?: pulumi.Input<number>;
    volumeType?: pulumi.Input<string>;
}

export interface VmBlockDeviceMappingsCreated {
    bsu?: pulumi.Input<inputs.VmBlockDeviceMappingsCreatedBsu>;
    deviceName?: pulumi.Input<string>;
}

export interface VmBlockDeviceMappingsCreatedBsu {
    deleteOnVmDeletion?: pulumi.Input<boolean>;
    linkDate?: pulumi.Input<string>;
    state?: pulumi.Input<number>;
    volumeId?: pulumi.Input<number>;
}

export interface VmNic {
    accountId?: pulumi.Input<string>;
    deleteOnVmDeletion?: pulumi.Input<boolean>;
    description?: pulumi.Input<string>;
    deviceNumber: pulumi.Input<number>;
    isSourceDestChecked?: pulumi.Input<boolean>;
    linkNic?: pulumi.Input<inputs.VmNicLinkNic>;
    linkPublicIps?: pulumi.Input<pulumi.Input<inputs.VmNicLinkPublicIp>[]>;
    macAddress?: pulumi.Input<string>;
    netId?: pulumi.Input<string>;
    nicId?: pulumi.Input<string>;
    privateDnsName?: pulumi.Input<string>;
    privateIps?: pulumi.Input<pulumi.Input<inputs.VmNicPrivateIp>[]>;
    secondaryPrivateIpCount?: pulumi.Input<number>;
    securityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    securityGroups?: pulumi.Input<pulumi.Input<inputs.VmNicSecurityGroup>[]>;
    state?: pulumi.Input<string>;
    subnetId?: pulumi.Input<string>;
}

export interface VmNicLinkNic {
    deleteOnVmDeletion?: pulumi.Input<boolean>;
    deviceNumber?: pulumi.Input<string>;
    linkNicId?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
}

export interface VmNicLinkPublicIp {
    publicDnsName?: pulumi.Input<string>;
    publicIp?: pulumi.Input<string>;
    publicIpAccountId?: pulumi.Input<string>;
}

export interface VmNicPrivateIp {
    isPrimary?: pulumi.Input<boolean>;
    linkPublicIps?: pulumi.Input<pulumi.Input<inputs.VmNicPrivateIpLinkPublicIp>[]>;
    privateDnsName?: pulumi.Input<string>;
    privateIp?: pulumi.Input<string>;
}

export interface VmNicPrivateIpLinkPublicIp {
    publicDnsName?: pulumi.Input<string>;
    publicIp?: pulumi.Input<string>;
    publicIpAccountId?: pulumi.Input<string>;
}

export interface VmNicSecurityGroup {
    securityGroupId?: pulumi.Input<string>;
    securityGroupName?: pulumi.Input<string>;
}

export interface VmSecurityGroup {
    securityGroupId?: pulumi.Input<string>;
    securityGroupName?: pulumi.Input<string>;
}

export interface VmTag {
    key?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface VolumeLinkedVolume {
    deleteOnVmDeletion?: pulumi.Input<boolean>;
    deviceName?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
    vmId?: pulumi.Input<string>;
    volumeId?: pulumi.Input<string>;
}

export interface VolumeTag {
    key?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface VpnConnectionRoute {
    destinationIpRange?: pulumi.Input<string>;
    routeType?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
}

export interface VpnConnectionTag {
    key?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface VpnConnectionVgwTelemetry {
    acceptedRouteCount?: pulumi.Input<number>;
    lastStateChangeDate?: pulumi.Input<string>;
    outsideIpAddress?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
    stateDescription?: pulumi.Input<string>;
}
export namespace config {
}
