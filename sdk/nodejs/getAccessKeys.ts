// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Provides information about access keys.
 *
 * For more information on this resource, see the [User Guide](https://docs.outscale.com/en/userguide/About-Access-Keys.html).\
 * For more information on this resource actions, see the [API documentation](https://docs.outscale.com/api#3ds-outscale-api-accesskey).
 *
 * ## Example Usage
 *
 * ### Get your own access keys (root account or user)
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as outscale from "@outscale/pulumi-outscale";
 *
 * const accessKeys01 = outscale.getAccessKeys({
 *     filters: [{
 *         name: "access_key_ids",
 *         values: [
 *             "ABCDEFGHIJ0123456789",
 *             "0123456789ABCDEFGHIJ",
 *         ],
 *     }],
 * });
 * ```
 *
 * ### Get the access keys of another user
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as outscale from "@outscale/pulumi-outscale";
 *
 * const accessKeys = outscale.getAccessKeys({
 *     userName: "user_name",
 *     filters: [
 *         {
 *             name: "access_key_ids",
 *             values: [
 *                 "XXXXXXXXX",
 *                 "YYYYYYYYYY",
 *             ],
 *         },
 *         {
 *             name: "states",
 *             values: ["ACTIVE"],
 *         },
 *     ],
 * });
 * ```
 */
export function getAccessKeys(args?: GetAccessKeysArgs, opts?: pulumi.InvokeOptions): Promise<GetAccessKeysResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("outscale:index/getAccessKeys:getAccessKeys", {
        "accessKeyIds": args.accessKeyIds,
        "filters": args.filters,
        "states": args.states,
        "userName": args.userName,
    }, opts);
}

/**
 * A collection of arguments for invoking getAccessKeys.
 */
export interface GetAccessKeysArgs {
    accessKeyIds?: string[];
    /**
     * A combination of a filter name and one or more filter values. You can specify this argument for as many filter names as you need. The filter name can be any of the following:
     */
    filters?: inputs.GetAccessKeysFilter[];
    states?: string[];
    /**
     * The name of the EIM user. By default, the user who sends the request (which can be the root account).
     */
    userName?: string;
}

/**
 * A collection of values returned by getAccessKeys.
 */
export interface GetAccessKeysResult {
    readonly accessKeyIds?: string[];
    /**
     * A list of access keys.
     */
    readonly accessKeys: outputs.GetAccessKeysAccessKey[];
    readonly filters?: outputs.GetAccessKeysFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly requestId: string;
    readonly states?: string[];
    readonly userName?: string;
}
/**
 * Provides information about access keys.
 *
 * For more information on this resource, see the [User Guide](https://docs.outscale.com/en/userguide/About-Access-Keys.html).\
 * For more information on this resource actions, see the [API documentation](https://docs.outscale.com/api#3ds-outscale-api-accesskey).
 *
 * ## Example Usage
 *
 * ### Get your own access keys (root account or user)
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as outscale from "@outscale/pulumi-outscale";
 *
 * const accessKeys01 = outscale.getAccessKeys({
 *     filters: [{
 *         name: "access_key_ids",
 *         values: [
 *             "ABCDEFGHIJ0123456789",
 *             "0123456789ABCDEFGHIJ",
 *         ],
 *     }],
 * });
 * ```
 *
 * ### Get the access keys of another user
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as outscale from "@outscale/pulumi-outscale";
 *
 * const accessKeys = outscale.getAccessKeys({
 *     userName: "user_name",
 *     filters: [
 *         {
 *             name: "access_key_ids",
 *             values: [
 *                 "XXXXXXXXX",
 *                 "YYYYYYYYYY",
 *             ],
 *         },
 *         {
 *             name: "states",
 *             values: ["ACTIVE"],
 *         },
 *     ],
 * });
 * ```
 */
export function getAccessKeysOutput(args?: GetAccessKeysOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetAccessKeysResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("outscale:index/getAccessKeys:getAccessKeys", {
        "accessKeyIds": args.accessKeyIds,
        "filters": args.filters,
        "states": args.states,
        "userName": args.userName,
    }, opts);
}

/**
 * A collection of arguments for invoking getAccessKeys.
 */
export interface GetAccessKeysOutputArgs {
    accessKeyIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A combination of a filter name and one or more filter values. You can specify this argument for as many filter names as you need. The filter name can be any of the following:
     */
    filters?: pulumi.Input<pulumi.Input<inputs.GetAccessKeysFilterArgs>[]>;
    states?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The name of the EIM user. By default, the user who sends the request (which can be the root account).
     */
    userName?: pulumi.Input<string>;
}
