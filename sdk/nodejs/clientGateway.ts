// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Manages a client gateway.
 *
 * For more information on this resource, see the [User Guide](https://docs.outscale.com/en/userguide/About-Customer-Gateways.html).\
 * For more information on this resource actions, see the [API documentation](https://docs.outscale.com/api#3ds-outscale-api-clientgateway).
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as outscale from "@outscale/pulumi-outscale";
 *
 * const clientGateway01 = new outscale.ClientGateway("clientGateway01", {
 *     bgpAsn: 65000,
 *     connectionType: "ipsec.1",
 *     publicIp: "111.11.11.111",
 *     tags: [{
 *         key: "Name",
 *         value: "client_gateway_01",
 *     }],
 * });
 * ```
 *
 * ## Import
 *
 * A client gateway can be imported using its ID. For exampleconsole
 *
 * ```sh
 *  $ pulumi import outscale:index/clientGateway:ClientGateway ImportedClientGateway cgw-12345678
 * ```
 */
export class ClientGateway extends pulumi.CustomResource {
    /**
     * Get an existing ClientGateway resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ClientGatewayState, opts?: pulumi.CustomResourceOptions): ClientGateway {
        return new ClientGateway(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'outscale:index/clientGateway:ClientGateway';

    /**
     * Returns true if the given object is an instance of ClientGateway.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ClientGateway {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ClientGateway.__pulumiType;
    }

    /**
     * The Autonomous System Number (ASN) used by the Border Gateway Protocol (BGP) to find the path to your client gateway through the Internet. This number must be between `1` and `4294967295`.
     */
    public readonly bgpAsn!: pulumi.Output<number>;
    /**
     * The ID of the client gateway.
     */
    public /*out*/ readonly clientGatewayId!: pulumi.Output<string>;
    /**
     * The communication protocol used to establish tunnel with your client gateway (only `ipsec.1` is supported).
     */
    public readonly connectionType!: pulumi.Output<string>;
    /**
     * The public fixed IPv4 address of your client gateway.
     */
    public readonly publicIp!: pulumi.Output<string>;
    public /*out*/ readonly requestId!: pulumi.Output<string>;
    /**
     * The state of the client gateway (`pending` \| `available` \| `deleting` \| `deleted`).
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * A tag to add to this resource. You can specify this argument several times.
     */
    public readonly tags!: pulumi.Output<outputs.ClientGatewayTag[] | undefined>;

    /**
     * Create a ClientGateway resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ClientGatewayArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ClientGatewayArgs | ClientGatewayState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ClientGatewayState | undefined;
            resourceInputs["bgpAsn"] = state ? state.bgpAsn : undefined;
            resourceInputs["clientGatewayId"] = state ? state.clientGatewayId : undefined;
            resourceInputs["connectionType"] = state ? state.connectionType : undefined;
            resourceInputs["publicIp"] = state ? state.publicIp : undefined;
            resourceInputs["requestId"] = state ? state.requestId : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
        } else {
            const args = argsOrState as ClientGatewayArgs | undefined;
            if ((!args || args.bgpAsn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'bgpAsn'");
            }
            if ((!args || args.connectionType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'connectionType'");
            }
            if ((!args || args.publicIp === undefined) && !opts.urn) {
                throw new Error("Missing required property 'publicIp'");
            }
            resourceInputs["bgpAsn"] = args ? args.bgpAsn : undefined;
            resourceInputs["connectionType"] = args ? args.connectionType : undefined;
            resourceInputs["publicIp"] = args ? args.publicIp : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["clientGatewayId"] = undefined /*out*/;
            resourceInputs["requestId"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ClientGateway.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ClientGateway resources.
 */
export interface ClientGatewayState {
    /**
     * The Autonomous System Number (ASN) used by the Border Gateway Protocol (BGP) to find the path to your client gateway through the Internet. This number must be between `1` and `4294967295`.
     */
    bgpAsn?: pulumi.Input<number>;
    /**
     * The ID of the client gateway.
     */
    clientGatewayId?: pulumi.Input<string>;
    /**
     * The communication protocol used to establish tunnel with your client gateway (only `ipsec.1` is supported).
     */
    connectionType?: pulumi.Input<string>;
    /**
     * The public fixed IPv4 address of your client gateway.
     */
    publicIp?: pulumi.Input<string>;
    requestId?: pulumi.Input<string>;
    /**
     * The state of the client gateway (`pending` \| `available` \| `deleting` \| `deleted`).
     */
    state?: pulumi.Input<string>;
    /**
     * A tag to add to this resource. You can specify this argument several times.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.ClientGatewayTag>[]>;
}

/**
 * The set of arguments for constructing a ClientGateway resource.
 */
export interface ClientGatewayArgs {
    /**
     * The Autonomous System Number (ASN) used by the Border Gateway Protocol (BGP) to find the path to your client gateway through the Internet. This number must be between `1` and `4294967295`.
     */
    bgpAsn: pulumi.Input<number>;
    /**
     * The communication protocol used to establish tunnel with your client gateway (only `ipsec.1` is supported).
     */
    connectionType: pulumi.Input<string>;
    /**
     * The public fixed IPv4 address of your client gateway.
     */
    publicIp: pulumi.Input<string>;
    /**
     * A tag to add to this resource. You can specify this argument several times.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.ClientGatewayTag>[]>;
}
