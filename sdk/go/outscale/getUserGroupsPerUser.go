// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package outscale

import (
	"context"
	"reflect"

	"github.com/outscale/pulumi-outscale/sdk/go/outscale/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides information about  groups that a specified user belongs to.
//
// For more information on this resource, see the [User Guide](https://docs.outscale.com/en/userguide/About-EIM-Groups.html).\
// For more information on this resource actions, see the [API documentation](https://docs.outscale.com/api.html#readusergroupsperuser).
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/outscale/pulumi-outscale/sdk/go/outscale"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := outscale.GetUserGroupsPerUser(ctx, &outscale.GetUserGroupsPerUserArgs{
//				UserName: "user_name",
//				UserPath: pulumi.StringRef("/"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetUserGroupsPerUser(ctx *pulumi.Context, args *GetUserGroupsPerUserArgs, opts ...pulumi.InvokeOption) (*GetUserGroupsPerUserResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetUserGroupsPerUserResult
	err := ctx.Invoke("outscale:index/getUserGroupsPerUser:getUserGroupsPerUser", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getUserGroupsPerUser.
type GetUserGroupsPerUserArgs struct {
	// The name of the user.
	UserName string `pulumi:"userName"`
	// The path to the user (by default, `/`).
	UserPath *string `pulumi:"userPath"`
}

// A collection of values returned by getUserGroupsPerUser.
type GetUserGroupsPerUserResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id         string                          `pulumi:"id"`
	UserGroups []GetUserGroupsPerUserUserGroup `pulumi:"userGroups"`
	UserName   string                          `pulumi:"userName"`
	UserPath   string                          `pulumi:"userPath"`
}

func GetUserGroupsPerUserOutput(ctx *pulumi.Context, args GetUserGroupsPerUserOutputArgs, opts ...pulumi.InvokeOption) GetUserGroupsPerUserResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetUserGroupsPerUserResultOutput, error) {
			args := v.(GetUserGroupsPerUserArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("outscale:index/getUserGroupsPerUser:getUserGroupsPerUser", args, GetUserGroupsPerUserResultOutput{}, options).(GetUserGroupsPerUserResultOutput), nil
		}).(GetUserGroupsPerUserResultOutput)
}

// A collection of arguments for invoking getUserGroupsPerUser.
type GetUserGroupsPerUserOutputArgs struct {
	// The name of the user.
	UserName pulumi.StringInput `pulumi:"userName"`
	// The path to the user (by default, `/`).
	UserPath pulumi.StringPtrInput `pulumi:"userPath"`
}

func (GetUserGroupsPerUserOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserGroupsPerUserArgs)(nil)).Elem()
}

// A collection of values returned by getUserGroupsPerUser.
type GetUserGroupsPerUserResultOutput struct{ *pulumi.OutputState }

func (GetUserGroupsPerUserResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserGroupsPerUserResult)(nil)).Elem()
}

func (o GetUserGroupsPerUserResultOutput) ToGetUserGroupsPerUserResultOutput() GetUserGroupsPerUserResultOutput {
	return o
}

func (o GetUserGroupsPerUserResultOutput) ToGetUserGroupsPerUserResultOutputWithContext(ctx context.Context) GetUserGroupsPerUserResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetUserGroupsPerUserResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserGroupsPerUserResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetUserGroupsPerUserResultOutput) UserGroups() GetUserGroupsPerUserUserGroupArrayOutput {
	return o.ApplyT(func(v GetUserGroupsPerUserResult) []GetUserGroupsPerUserUserGroup { return v.UserGroups }).(GetUserGroupsPerUserUserGroupArrayOutput)
}

func (o GetUserGroupsPerUserResultOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserGroupsPerUserResult) string { return v.UserName }).(pulumi.StringOutput)
}

func (o GetUserGroupsPerUserResultOutput) UserPath() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserGroupsPerUserResult) string { return v.UserPath }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetUserGroupsPerUserResultOutput{})
}
