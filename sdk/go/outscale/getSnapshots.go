// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package outscale

import (
	"context"
	"reflect"

	"github.com/outscale/pulumi-outscale/sdk/go/outscale/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides information about snapshots.
//
// For more information on this resource, see the [User Guide](https://docs.outscale.com/en/userguide/About-Snapshots.html).\
// For more information on this resource actions, see the [API documentation](https://docs.outscale.com/api#3ds-outscale-api-snapshot).
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/outscale/pulumi-outscale/sdk/go/outscale"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := outscale.GetSnapshots(ctx, &outscale.GetSnapshotsArgs{
//				Filters: []outscale.GetSnapshotsFilter{
//					{
//						Name: "tag_keys",
//						Values: []string{
//							"env",
//						},
//					},
//					{
//						Name: "tag_values",
//						Values: []string{
//							"prod",
//							"test",
//						},
//					},
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetSnapshots(ctx *pulumi.Context, args *GetSnapshotsArgs, opts ...pulumi.InvokeOption) (*GetSnapshotsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetSnapshotsResult
	err := ctx.Invoke("outscale:index/getSnapshots:getSnapshots", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSnapshots.
type GetSnapshotsArgs struct {
	// The account ID of the owner of the snapshot.
	AccountIds []string `pulumi:"accountIds"`
	// A combination of a filter name and one or more filter values. You can specify this argument for as many filter names as you need. The filter name can be any of the following:
	Filters                   []GetSnapshotsFilter `pulumi:"filters"`
	PermissionToCreateVolumes []string             `pulumi:"permissionToCreateVolumes"`
	// The ID of the snapshot.
	SnapshotIds []string `pulumi:"snapshotIds"`
}

// A collection of values returned by getSnapshots.
type GetSnapshotsResult struct {
	// The account ID of the owner of the snapshot.
	AccountIds []string             `pulumi:"accountIds"`
	Filters    []GetSnapshotsFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id                        string   `pulumi:"id"`
	PermissionToCreateVolumes []string `pulumi:"permissionToCreateVolumes"`
	RequestId                 string   `pulumi:"requestId"`
	// The ID of the snapshot.
	SnapshotIds []string `pulumi:"snapshotIds"`
	// Information about one or more snapshots and their permissions.
	Snapshots []GetSnapshotsSnapshot `pulumi:"snapshots"`
}

func GetSnapshotsOutput(ctx *pulumi.Context, args GetSnapshotsOutputArgs, opts ...pulumi.InvokeOption) GetSnapshotsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetSnapshotsResult, error) {
			args := v.(GetSnapshotsArgs)
			r, err := GetSnapshots(ctx, &args, opts...)
			var s GetSnapshotsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetSnapshotsResultOutput)
}

// A collection of arguments for invoking getSnapshots.
type GetSnapshotsOutputArgs struct {
	// The account ID of the owner of the snapshot.
	AccountIds pulumi.StringArrayInput `pulumi:"accountIds"`
	// A combination of a filter name and one or more filter values. You can specify this argument for as many filter names as you need. The filter name can be any of the following:
	Filters                   GetSnapshotsFilterArrayInput `pulumi:"filters"`
	PermissionToCreateVolumes pulumi.StringArrayInput      `pulumi:"permissionToCreateVolumes"`
	// The ID of the snapshot.
	SnapshotIds pulumi.StringArrayInput `pulumi:"snapshotIds"`
}

func (GetSnapshotsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSnapshotsArgs)(nil)).Elem()
}

// A collection of values returned by getSnapshots.
type GetSnapshotsResultOutput struct{ *pulumi.OutputState }

func (GetSnapshotsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSnapshotsResult)(nil)).Elem()
}

func (o GetSnapshotsResultOutput) ToGetSnapshotsResultOutput() GetSnapshotsResultOutput {
	return o
}

func (o GetSnapshotsResultOutput) ToGetSnapshotsResultOutputWithContext(ctx context.Context) GetSnapshotsResultOutput {
	return o
}

// The account ID of the owner of the snapshot.
func (o GetSnapshotsResultOutput) AccountIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSnapshotsResult) []string { return v.AccountIds }).(pulumi.StringArrayOutput)
}

func (o GetSnapshotsResultOutput) Filters() GetSnapshotsFilterArrayOutput {
	return o.ApplyT(func(v GetSnapshotsResult) []GetSnapshotsFilter { return v.Filters }).(GetSnapshotsFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetSnapshotsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSnapshotsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetSnapshotsResultOutput) PermissionToCreateVolumes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSnapshotsResult) []string { return v.PermissionToCreateVolumes }).(pulumi.StringArrayOutput)
}

func (o GetSnapshotsResultOutput) RequestId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSnapshotsResult) string { return v.RequestId }).(pulumi.StringOutput)
}

// The ID of the snapshot.
func (o GetSnapshotsResultOutput) SnapshotIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSnapshotsResult) []string { return v.SnapshotIds }).(pulumi.StringArrayOutput)
}

// Information about one or more snapshots and their permissions.
func (o GetSnapshotsResultOutput) Snapshots() GetSnapshotsSnapshotArrayOutput {
	return o.ApplyT(func(v GetSnapshotsResult) []GetSnapshotsSnapshot { return v.Snapshots }).(GetSnapshotsSnapshotArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetSnapshotsResultOutput{})
}
