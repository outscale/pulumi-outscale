// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package outscale

import (
	"context"
	"reflect"

	"github.com/outscale/pulumi-outscale/sdk/go/outscale/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides information about network interface cards (NICs).
//
// For more information on this resource, see the [User Guide](https://docs.outscale.com/en/userguide/About-FNIs.html).\
// For more information on this resource actions, see the [API documentation](https://docs.outscale.com/api#3ds-outscale-api-nic).
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/outscale/pulumi-outscale/sdk/go/outscale"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := outscale.GetNics(ctx, &outscale.GetNicsArgs{
//				Filters: []outscale.GetNicsFilter{
//					{
//						Name: "nic_ids",
//						Values: []string{
//							"eni-12345678",
//							"eni-87654321",
//						},
//					},
//					{
//						Name: "link_nic_vm_ids",
//						Values: []string{
//							"i-12345678",
//						},
//					},
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetNics(ctx *pulumi.Context, args *GetNicsArgs, opts ...pulumi.InvokeOption) (*GetNicsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetNicsResult
	err := ctx.Invoke("outscale:index/getNics:getNics", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getNics.
type GetNicsArgs struct {
	// A combination of a filter name and one or more filter values. You can specify this argument for as many filter names as you need. The filter name can be any of the following:
	Filters []GetNicsFilter `pulumi:"filters"`
}

// A collection of values returned by getNics.
type GetNicsResult struct {
	Filters []GetNicsFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Information about one or more NICs.
	Nics      []GetNicsNic `pulumi:"nics"`
	RequestId string       `pulumi:"requestId"`
}

func GetNicsOutput(ctx *pulumi.Context, args GetNicsOutputArgs, opts ...pulumi.InvokeOption) GetNicsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetNicsResult, error) {
			args := v.(GetNicsArgs)
			r, err := GetNics(ctx, &args, opts...)
			var s GetNicsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetNicsResultOutput)
}

// A collection of arguments for invoking getNics.
type GetNicsOutputArgs struct {
	// A combination of a filter name and one or more filter values. You can specify this argument for as many filter names as you need. The filter name can be any of the following:
	Filters GetNicsFilterArrayInput `pulumi:"filters"`
}

func (GetNicsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNicsArgs)(nil)).Elem()
}

// A collection of values returned by getNics.
type GetNicsResultOutput struct{ *pulumi.OutputState }

func (GetNicsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNicsResult)(nil)).Elem()
}

func (o GetNicsResultOutput) ToGetNicsResultOutput() GetNicsResultOutput {
	return o
}

func (o GetNicsResultOutput) ToGetNicsResultOutputWithContext(ctx context.Context) GetNicsResultOutput {
	return o
}

func (o GetNicsResultOutput) Filters() GetNicsFilterArrayOutput {
	return o.ApplyT(func(v GetNicsResult) []GetNicsFilter { return v.Filters }).(GetNicsFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetNicsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetNicsResult) string { return v.Id }).(pulumi.StringOutput)
}

// Information about one or more NICs.
func (o GetNicsResultOutput) Nics() GetNicsNicArrayOutput {
	return o.ApplyT(func(v GetNicsResult) []GetNicsNic { return v.Nics }).(GetNicsNicArrayOutput)
}

func (o GetNicsResultOutput) RequestId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNicsResult) string { return v.RequestId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetNicsResultOutput{})
}
