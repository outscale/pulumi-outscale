// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package outscale

import (
	"context"
	"reflect"

	"github.com/outscale/pulumi-outscale/sdk/go/outscale/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides information about a Net.
//
// For more information on this resource, see the [User Guide](https://docs.outscale.com/en/userguide/About-Nets.html).\
// For more information on this resource actions, see the [API documentation](https://docs.outscale.com/api#3ds-outscale-api-net).
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/outscale/pulumi-outscale/sdk/go/outscale"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := outscale.LookupNet(ctx, &outscale.LookupNetArgs{
//				Filters: []outscale.GetNetFilter{
//					{
//						Name: "net_ids",
//						Values: []string{
//							"vpc-12345678",
//						},
//					},
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupNet(ctx *pulumi.Context, args *LookupNetArgs, opts ...pulumi.InvokeOption) (*LookupNetResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupNetResult
	err := ctx.Invoke("outscale:index/getNet:getNet", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getNet.
type LookupNetArgs struct {
	// A combination of a filter name and one or more filter values. You can specify this argument for as many filter names as you need. The filter name can be any of the following:
	Filters []GetNetFilter `pulumi:"filters"`
	// The ID of the Net.
	NetId *string `pulumi:"netId"`
}

// A collection of values returned by getNet.
type LookupNetResult struct {
	// The ID of the DHCP options set (or `default` if you want to associate the default one).
	DhcpOptionsSetId string         `pulumi:"dhcpOptionsSetId"`
	Filters          []GetNetFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The IP range for the Net, in CIDR notation (for example, `10.0.0.0/16`).
	IpRange string `pulumi:"ipRange"`
	// The ID of the Net.
	NetId     string `pulumi:"netId"`
	RequestId string `pulumi:"requestId"`
	// The state of the Net (`pending` \| `available` \| `deleting`).
	State string `pulumi:"state"`
	// One or more tags associated with the Net.
	Tags []GetNetTag `pulumi:"tags"`
	// The VM tenancy in a Net.
	Tenancy string `pulumi:"tenancy"`
}

func LookupNetOutput(ctx *pulumi.Context, args LookupNetOutputArgs, opts ...pulumi.InvokeOption) LookupNetResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupNetResultOutput, error) {
			args := v.(LookupNetArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("outscale:index/getNet:getNet", args, LookupNetResultOutput{}, options).(LookupNetResultOutput), nil
		}).(LookupNetResultOutput)
}

// A collection of arguments for invoking getNet.
type LookupNetOutputArgs struct {
	// A combination of a filter name and one or more filter values. You can specify this argument for as many filter names as you need. The filter name can be any of the following:
	Filters GetNetFilterArrayInput `pulumi:"filters"`
	// The ID of the Net.
	NetId pulumi.StringPtrInput `pulumi:"netId"`
}

func (LookupNetOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNetArgs)(nil)).Elem()
}

// A collection of values returned by getNet.
type LookupNetResultOutput struct{ *pulumi.OutputState }

func (LookupNetResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNetResult)(nil)).Elem()
}

func (o LookupNetResultOutput) ToLookupNetResultOutput() LookupNetResultOutput {
	return o
}

func (o LookupNetResultOutput) ToLookupNetResultOutputWithContext(ctx context.Context) LookupNetResultOutput {
	return o
}

// The ID of the DHCP options set (or `default` if you want to associate the default one).
func (o LookupNetResultOutput) DhcpOptionsSetId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetResult) string { return v.DhcpOptionsSetId }).(pulumi.StringOutput)
}

func (o LookupNetResultOutput) Filters() GetNetFilterArrayOutput {
	return o.ApplyT(func(v LookupNetResult) []GetNetFilter { return v.Filters }).(GetNetFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupNetResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetResult) string { return v.Id }).(pulumi.StringOutput)
}

// The IP range for the Net, in CIDR notation (for example, `10.0.0.0/16`).
func (o LookupNetResultOutput) IpRange() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetResult) string { return v.IpRange }).(pulumi.StringOutput)
}

// The ID of the Net.
func (o LookupNetResultOutput) NetId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetResult) string { return v.NetId }).(pulumi.StringOutput)
}

func (o LookupNetResultOutput) RequestId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetResult) string { return v.RequestId }).(pulumi.StringOutput)
}

// The state of the Net (`pending` \| `available` \| `deleting`).
func (o LookupNetResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetResult) string { return v.State }).(pulumi.StringOutput)
}

// One or more tags associated with the Net.
func (o LookupNetResultOutput) Tags() GetNetTagArrayOutput {
	return o.ApplyT(func(v LookupNetResult) []GetNetTag { return v.Tags }).(GetNetTagArrayOutput)
}

// The VM tenancy in a Net.
func (o LookupNetResultOutput) Tenancy() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetResult) string { return v.Tenancy }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupNetResultOutput{})
}
