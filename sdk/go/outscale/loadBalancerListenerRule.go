// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package outscale

import (
	"context"
	"reflect"

	"errors"
	"github.com/outscale/pulumi-outscale/sdk/go/outscale/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a load balancer listener rule.
//
// For more information on this resource, see the [User Guide](https://docs.outscale.com/en/userguide/About-Load-Balancers.html).\
// For more information on this resource actions, see the [API documentation](https://docs.outscale.com/api#3ds-outscale-api-listener).
//
// ## Example Usage
//
// ### Required resources
//
// ```go
// package main
//
// import (
//
//	"fmt"
//
//	"github.com/outscale/pulumi-outscale/sdk/go/outscale"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			vm01, err := outscale.NewVm(ctx, "vm01", &outscale.VmArgs{
//				ImageId:     pulumi.Any(imageId),
//				VmType:      pulumi.Any(vmType),
//				KeypairName: pulumi.Any(keypairName),
//			})
//			if err != nil {
//				return err
//			}
//			loadBalancer01, err := outscale.NewLoadBalancer(ctx, "load_balancer01", &outscale.LoadBalancerArgs{
//				LoadBalancerName: pulumi.String("terraform-public-load-balancer"),
//				SubregionNames: pulumi.StringArray{
//					pulumi.Sprintf("%va", region),
//				},
//				Listeners: outscale.LoadBalancerListenerArray{
//					&outscale.LoadBalancerListenerArgs{
//						BackendPort:          pulumi.Int(80),
//						BackendProtocol:      pulumi.String("TCP"),
//						LoadBalancerProtocol: pulumi.String("TCP"),
//						LoadBalancerPort:     pulumi.Int(80),
//					},
//				},
//				Tags: outscale.LoadBalancerTagArray{
//					&outscale.LoadBalancerTagArgs{
//						Key:   pulumi.String("name"),
//						Value: pulumi.String("terraform-public-load-balancer"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = outscale.NewLoadBalancerVms(ctx, "outscale_load_balancer_vms01", &outscale.LoadBalancerVmsArgs{
//				LoadBalancerName: loadBalancer01.ID(),
//				BackendVmIds: pulumi.StringArray{
//					vm01.VmId,
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ### Create a listener rule based on path pattern
//
// ```go
// package main
//
// import (
//
//	"github.com/outscale/pulumi-outscale/sdk/go/outscale"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := outscale.NewLoadBalancerListenerRule(ctx, "rule01", &outscale.LoadBalancerListenerRuleArgs{
//				Listener: &outscale.LoadBalancerListenerRuleListenerArgs{
//					LoadBalancerName: pulumi.Any(loadBalancer01.Id),
//					LoadBalancerPort: pulumi.Int(80),
//				},
//				ListenerRule: &outscale.LoadBalancerListenerRuleListenerRuleArgs{
//					Action:           pulumi.String("forward"),
//					ListenerRuleName: pulumi.String("terraform-listener-rule01"),
//					PathPattern:      pulumi.String("*.abc.*.abc.*.com"),
//					Priority:         pulumi.Int(10),
//				},
//				VmIds: pulumi.StringArray{
//					vm01.VmId,
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ### Create a listener rule based on host pattern
//
// ```go
// package main
//
// import (
//
//	"github.com/outscale/pulumi-outscale/sdk/go/outscale"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := outscale.NewLoadBalancerListenerRule(ctx, "rule02", &outscale.LoadBalancerListenerRuleArgs{
//				Listener: &outscale.LoadBalancerListenerRuleListenerArgs{
//					LoadBalancerName: pulumi.Any(loadBalancer01.Id),
//					LoadBalancerPort: pulumi.Int(80),
//				},
//				ListenerRule: &outscale.LoadBalancerListenerRuleListenerRuleArgs{
//					Action:           pulumi.String("forward"),
//					ListenerRuleName: pulumi.String("terraform-listener-rule02"),
//					HostNamePattern:  pulumi.String("*.abc.-.abc.*.com"),
//					Priority:         pulumi.Int(1),
//				},
//				VmIds: pulumi.StringArray{
//					vm01.VmId,
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type LoadBalancerListenerRule struct {
	pulumi.CustomResourceState

	// Information about the load balancer.
	Listener LoadBalancerListenerRuleListenerOutput `pulumi:"listener"`
	// Information about the listener rule.
	ListenerRule LoadBalancerListenerRuleListenerRuleOutput `pulumi:"listenerRule"`
	RequestId    pulumi.StringOutput                        `pulumi:"requestId"`
	// The IDs of the backend VMs.
	VmIds pulumi.StringArrayOutput `pulumi:"vmIds"`
}

// NewLoadBalancerListenerRule registers a new resource with the given unique name, arguments, and options.
func NewLoadBalancerListenerRule(ctx *pulumi.Context,
	name string, args *LoadBalancerListenerRuleArgs, opts ...pulumi.ResourceOption) (*LoadBalancerListenerRule, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Listener == nil {
		return nil, errors.New("invalid value for required argument 'Listener'")
	}
	if args.ListenerRule == nil {
		return nil, errors.New("invalid value for required argument 'ListenerRule'")
	}
	if args.VmIds == nil {
		return nil, errors.New("invalid value for required argument 'VmIds'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource LoadBalancerListenerRule
	err := ctx.RegisterResource("outscale:index/loadBalancerListenerRule:LoadBalancerListenerRule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLoadBalancerListenerRule gets an existing LoadBalancerListenerRule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLoadBalancerListenerRule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LoadBalancerListenerRuleState, opts ...pulumi.ResourceOption) (*LoadBalancerListenerRule, error) {
	var resource LoadBalancerListenerRule
	err := ctx.ReadResource("outscale:index/loadBalancerListenerRule:LoadBalancerListenerRule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LoadBalancerListenerRule resources.
type loadBalancerListenerRuleState struct {
	// Information about the load balancer.
	Listener *LoadBalancerListenerRuleListener `pulumi:"listener"`
	// Information about the listener rule.
	ListenerRule *LoadBalancerListenerRuleListenerRule `pulumi:"listenerRule"`
	RequestId    *string                               `pulumi:"requestId"`
	// The IDs of the backend VMs.
	VmIds []string `pulumi:"vmIds"`
}

type LoadBalancerListenerRuleState struct {
	// Information about the load balancer.
	Listener LoadBalancerListenerRuleListenerPtrInput
	// Information about the listener rule.
	ListenerRule LoadBalancerListenerRuleListenerRulePtrInput
	RequestId    pulumi.StringPtrInput
	// The IDs of the backend VMs.
	VmIds pulumi.StringArrayInput
}

func (LoadBalancerListenerRuleState) ElementType() reflect.Type {
	return reflect.TypeOf((*loadBalancerListenerRuleState)(nil)).Elem()
}

type loadBalancerListenerRuleArgs struct {
	// Information about the load balancer.
	Listener LoadBalancerListenerRuleListener `pulumi:"listener"`
	// Information about the listener rule.
	ListenerRule LoadBalancerListenerRuleListenerRule `pulumi:"listenerRule"`
	// The IDs of the backend VMs.
	VmIds []string `pulumi:"vmIds"`
}

// The set of arguments for constructing a LoadBalancerListenerRule resource.
type LoadBalancerListenerRuleArgs struct {
	// Information about the load balancer.
	Listener LoadBalancerListenerRuleListenerInput
	// Information about the listener rule.
	ListenerRule LoadBalancerListenerRuleListenerRuleInput
	// The IDs of the backend VMs.
	VmIds pulumi.StringArrayInput
}

func (LoadBalancerListenerRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*loadBalancerListenerRuleArgs)(nil)).Elem()
}

type LoadBalancerListenerRuleInput interface {
	pulumi.Input

	ToLoadBalancerListenerRuleOutput() LoadBalancerListenerRuleOutput
	ToLoadBalancerListenerRuleOutputWithContext(ctx context.Context) LoadBalancerListenerRuleOutput
}

func (*LoadBalancerListenerRule) ElementType() reflect.Type {
	return reflect.TypeOf((**LoadBalancerListenerRule)(nil)).Elem()
}

func (i *LoadBalancerListenerRule) ToLoadBalancerListenerRuleOutput() LoadBalancerListenerRuleOutput {
	return i.ToLoadBalancerListenerRuleOutputWithContext(context.Background())
}

func (i *LoadBalancerListenerRule) ToLoadBalancerListenerRuleOutputWithContext(ctx context.Context) LoadBalancerListenerRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerListenerRuleOutput)
}

// LoadBalancerListenerRuleArrayInput is an input type that accepts LoadBalancerListenerRuleArray and LoadBalancerListenerRuleArrayOutput values.
// You can construct a concrete instance of `LoadBalancerListenerRuleArrayInput` via:
//
//	LoadBalancerListenerRuleArray{ LoadBalancerListenerRuleArgs{...} }
type LoadBalancerListenerRuleArrayInput interface {
	pulumi.Input

	ToLoadBalancerListenerRuleArrayOutput() LoadBalancerListenerRuleArrayOutput
	ToLoadBalancerListenerRuleArrayOutputWithContext(context.Context) LoadBalancerListenerRuleArrayOutput
}

type LoadBalancerListenerRuleArray []LoadBalancerListenerRuleInput

func (LoadBalancerListenerRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LoadBalancerListenerRule)(nil)).Elem()
}

func (i LoadBalancerListenerRuleArray) ToLoadBalancerListenerRuleArrayOutput() LoadBalancerListenerRuleArrayOutput {
	return i.ToLoadBalancerListenerRuleArrayOutputWithContext(context.Background())
}

func (i LoadBalancerListenerRuleArray) ToLoadBalancerListenerRuleArrayOutputWithContext(ctx context.Context) LoadBalancerListenerRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerListenerRuleArrayOutput)
}

// LoadBalancerListenerRuleMapInput is an input type that accepts LoadBalancerListenerRuleMap and LoadBalancerListenerRuleMapOutput values.
// You can construct a concrete instance of `LoadBalancerListenerRuleMapInput` via:
//
//	LoadBalancerListenerRuleMap{ "key": LoadBalancerListenerRuleArgs{...} }
type LoadBalancerListenerRuleMapInput interface {
	pulumi.Input

	ToLoadBalancerListenerRuleMapOutput() LoadBalancerListenerRuleMapOutput
	ToLoadBalancerListenerRuleMapOutputWithContext(context.Context) LoadBalancerListenerRuleMapOutput
}

type LoadBalancerListenerRuleMap map[string]LoadBalancerListenerRuleInput

func (LoadBalancerListenerRuleMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LoadBalancerListenerRule)(nil)).Elem()
}

func (i LoadBalancerListenerRuleMap) ToLoadBalancerListenerRuleMapOutput() LoadBalancerListenerRuleMapOutput {
	return i.ToLoadBalancerListenerRuleMapOutputWithContext(context.Background())
}

func (i LoadBalancerListenerRuleMap) ToLoadBalancerListenerRuleMapOutputWithContext(ctx context.Context) LoadBalancerListenerRuleMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerListenerRuleMapOutput)
}

type LoadBalancerListenerRuleOutput struct{ *pulumi.OutputState }

func (LoadBalancerListenerRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LoadBalancerListenerRule)(nil)).Elem()
}

func (o LoadBalancerListenerRuleOutput) ToLoadBalancerListenerRuleOutput() LoadBalancerListenerRuleOutput {
	return o
}

func (o LoadBalancerListenerRuleOutput) ToLoadBalancerListenerRuleOutputWithContext(ctx context.Context) LoadBalancerListenerRuleOutput {
	return o
}

// Information about the load balancer.
func (o LoadBalancerListenerRuleOutput) Listener() LoadBalancerListenerRuleListenerOutput {
	return o.ApplyT(func(v *LoadBalancerListenerRule) LoadBalancerListenerRuleListenerOutput { return v.Listener }).(LoadBalancerListenerRuleListenerOutput)
}

// Information about the listener rule.
func (o LoadBalancerListenerRuleOutput) ListenerRule() LoadBalancerListenerRuleListenerRuleOutput {
	return o.ApplyT(func(v *LoadBalancerListenerRule) LoadBalancerListenerRuleListenerRuleOutput { return v.ListenerRule }).(LoadBalancerListenerRuleListenerRuleOutput)
}

func (o LoadBalancerListenerRuleOutput) RequestId() pulumi.StringOutput {
	return o.ApplyT(func(v *LoadBalancerListenerRule) pulumi.StringOutput { return v.RequestId }).(pulumi.StringOutput)
}

// The IDs of the backend VMs.
func (o LoadBalancerListenerRuleOutput) VmIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *LoadBalancerListenerRule) pulumi.StringArrayOutput { return v.VmIds }).(pulumi.StringArrayOutput)
}

type LoadBalancerListenerRuleArrayOutput struct{ *pulumi.OutputState }

func (LoadBalancerListenerRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LoadBalancerListenerRule)(nil)).Elem()
}

func (o LoadBalancerListenerRuleArrayOutput) ToLoadBalancerListenerRuleArrayOutput() LoadBalancerListenerRuleArrayOutput {
	return o
}

func (o LoadBalancerListenerRuleArrayOutput) ToLoadBalancerListenerRuleArrayOutputWithContext(ctx context.Context) LoadBalancerListenerRuleArrayOutput {
	return o
}

func (o LoadBalancerListenerRuleArrayOutput) Index(i pulumi.IntInput) LoadBalancerListenerRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *LoadBalancerListenerRule {
		return vs[0].([]*LoadBalancerListenerRule)[vs[1].(int)]
	}).(LoadBalancerListenerRuleOutput)
}

type LoadBalancerListenerRuleMapOutput struct{ *pulumi.OutputState }

func (LoadBalancerListenerRuleMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LoadBalancerListenerRule)(nil)).Elem()
}

func (o LoadBalancerListenerRuleMapOutput) ToLoadBalancerListenerRuleMapOutput() LoadBalancerListenerRuleMapOutput {
	return o
}

func (o LoadBalancerListenerRuleMapOutput) ToLoadBalancerListenerRuleMapOutputWithContext(ctx context.Context) LoadBalancerListenerRuleMapOutput {
	return o
}

func (o LoadBalancerListenerRuleMapOutput) MapIndex(k pulumi.StringInput) LoadBalancerListenerRuleOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *LoadBalancerListenerRule {
		return vs[0].(map[string]*LoadBalancerListenerRule)[vs[1].(string)]
	}).(LoadBalancerListenerRuleOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*LoadBalancerListenerRuleInput)(nil)).Elem(), &LoadBalancerListenerRule{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadBalancerListenerRuleArrayInput)(nil)).Elem(), LoadBalancerListenerRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadBalancerListenerRuleMapInput)(nil)).Elem(), LoadBalancerListenerRuleMap{})
	pulumi.RegisterOutputType(LoadBalancerListenerRuleOutput{})
	pulumi.RegisterOutputType(LoadBalancerListenerRuleArrayOutput{})
	pulumi.RegisterOutputType(LoadBalancerListenerRuleMapOutput{})
}
