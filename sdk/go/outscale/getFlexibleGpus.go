// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package outscale

import (
	"context"
	"reflect"

	"github.com/outscale/pulumi-outscale/sdk/go/outscale/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides information about flexible GPUs.
//
// For more information on this resource, see the [User Guide](https://docs.outscale.com/en/userguide/About-Flexible-GPUs.html).\
// For more information on this resource actions, see the [API documentation](https://docs.outscale.com/api#3ds-outscale-api-flexiblegpu).
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/outscale/pulumi-outscale/sdk/go/outscale"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := outscale.GetFlexibleGpus(ctx, &outscale.GetFlexibleGpusArgs{
//				Filters: []outscale.GetFlexibleGpusFilter{
//					{
//						Name: "model_names",
//						Values: []string{
//							"nvidia-p6",
//							"nvidia-p100",
//						},
//					},
//					{
//						Name: "states",
//						Values: []string{
//							"attached",
//						},
//					},
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetFlexibleGpus(ctx *pulumi.Context, args *GetFlexibleGpusArgs, opts ...pulumi.InvokeOption) (*GetFlexibleGpusResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetFlexibleGpusResult
	err := ctx.Invoke("outscale:index/getFlexibleGpus:getFlexibleGpus", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getFlexibleGpus.
type GetFlexibleGpusArgs struct {
	// A combination of a filter name and one or more filter values. You can specify this argument for as many filter names as you need. The filter name can be any of the following:
	Filters []GetFlexibleGpusFilter `pulumi:"filters"`
}

// A collection of values returned by getFlexibleGpus.
type GetFlexibleGpusResult struct {
	Filters []GetFlexibleGpusFilter `pulumi:"filters"`
	// Information about one or more fGPUs.
	FlexibleGpuses []GetFlexibleGpusFlexibleGpus `pulumi:"flexibleGpuses"`
	// The provider-assigned unique ID for this managed resource.
	Id        string `pulumi:"id"`
	RequestId string `pulumi:"requestId"`
}

func GetFlexibleGpusOutput(ctx *pulumi.Context, args GetFlexibleGpusOutputArgs, opts ...pulumi.InvokeOption) GetFlexibleGpusResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetFlexibleGpusResultOutput, error) {
			args := v.(GetFlexibleGpusArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("outscale:index/getFlexibleGpus:getFlexibleGpus", args, GetFlexibleGpusResultOutput{}, options).(GetFlexibleGpusResultOutput), nil
		}).(GetFlexibleGpusResultOutput)
}

// A collection of arguments for invoking getFlexibleGpus.
type GetFlexibleGpusOutputArgs struct {
	// A combination of a filter name and one or more filter values. You can specify this argument for as many filter names as you need. The filter name can be any of the following:
	Filters GetFlexibleGpusFilterArrayInput `pulumi:"filters"`
}

func (GetFlexibleGpusOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFlexibleGpusArgs)(nil)).Elem()
}

// A collection of values returned by getFlexibleGpus.
type GetFlexibleGpusResultOutput struct{ *pulumi.OutputState }

func (GetFlexibleGpusResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFlexibleGpusResult)(nil)).Elem()
}

func (o GetFlexibleGpusResultOutput) ToGetFlexibleGpusResultOutput() GetFlexibleGpusResultOutput {
	return o
}

func (o GetFlexibleGpusResultOutput) ToGetFlexibleGpusResultOutputWithContext(ctx context.Context) GetFlexibleGpusResultOutput {
	return o
}

func (o GetFlexibleGpusResultOutput) Filters() GetFlexibleGpusFilterArrayOutput {
	return o.ApplyT(func(v GetFlexibleGpusResult) []GetFlexibleGpusFilter { return v.Filters }).(GetFlexibleGpusFilterArrayOutput)
}

// Information about one or more fGPUs.
func (o GetFlexibleGpusResultOutput) FlexibleGpuses() GetFlexibleGpusFlexibleGpusArrayOutput {
	return o.ApplyT(func(v GetFlexibleGpusResult) []GetFlexibleGpusFlexibleGpus { return v.FlexibleGpuses }).(GetFlexibleGpusFlexibleGpusArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetFlexibleGpusResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlexibleGpusResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetFlexibleGpusResultOutput) RequestId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlexibleGpusResult) string { return v.RequestId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetFlexibleGpusResultOutput{})
}
