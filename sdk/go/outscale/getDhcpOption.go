// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package outscale

import (
	"context"
	"reflect"

	"github.com/outscale/pulumi-outscale/sdk/go/outscale/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides information about a DHCP option.
//
// For more information on this resource, see the [User Guide](https://docs.outscale.com/en/userguide/About-DHCP-Options.html).\
// For more information on this resource actions, see the [API documentation](https://docs.outscale.com/api#3ds-outscale-api-dhcpoption).
func LookupDhcpOption(ctx *pulumi.Context, args *LookupDhcpOptionArgs, opts ...pulumi.InvokeOption) (*LookupDhcpOptionResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupDhcpOptionResult
	err := ctx.Invoke("outscale:index/getDhcpOption:getDhcpOption", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDhcpOption.
type LookupDhcpOptionArgs struct {
	// A combination of a filter name and one or more filter values. You can specify this argument for as many filter names as you need. The filter name can be any of the following:
	Filters []GetDhcpOptionFilter `pulumi:"filters"`
}

// A collection of values returned by getDhcpOption.
type LookupDhcpOptionResult struct {
	// If true, the DHCP options set is a default one. If false, it is not.
	Default bool `pulumi:"default"`
	// The ID of the DHCP options set.
	DhcpOptionsSetId string `pulumi:"dhcpOptionsSetId"`
	// The domain name.
	DomainName string `pulumi:"domainName"`
	// One or more IPs for the domain name servers.
	DomainNameServers []string              `pulumi:"domainNameServers"`
	Filters           []GetDhcpOptionFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// One or more IPs for the log servers.
	LogServers []string `pulumi:"logServers"`
	// One or more IPs for the NTP servers.
	NtpServers []string `pulumi:"ntpServers"`
	RequestId  string   `pulumi:"requestId"`
	// One or more tags associated with the DHCP options set.
	Tags []GetDhcpOptionTag `pulumi:"tags"`
}

func LookupDhcpOptionOutput(ctx *pulumi.Context, args LookupDhcpOptionOutputArgs, opts ...pulumi.InvokeOption) LookupDhcpOptionResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupDhcpOptionResult, error) {
			args := v.(LookupDhcpOptionArgs)
			r, err := LookupDhcpOption(ctx, &args, opts...)
			var s LookupDhcpOptionResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupDhcpOptionResultOutput)
}

// A collection of arguments for invoking getDhcpOption.
type LookupDhcpOptionOutputArgs struct {
	// A combination of a filter name and one or more filter values. You can specify this argument for as many filter names as you need. The filter name can be any of the following:
	Filters GetDhcpOptionFilterArrayInput `pulumi:"filters"`
}

func (LookupDhcpOptionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDhcpOptionArgs)(nil)).Elem()
}

// A collection of values returned by getDhcpOption.
type LookupDhcpOptionResultOutput struct{ *pulumi.OutputState }

func (LookupDhcpOptionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDhcpOptionResult)(nil)).Elem()
}

func (o LookupDhcpOptionResultOutput) ToLookupDhcpOptionResultOutput() LookupDhcpOptionResultOutput {
	return o
}

func (o LookupDhcpOptionResultOutput) ToLookupDhcpOptionResultOutputWithContext(ctx context.Context) LookupDhcpOptionResultOutput {
	return o
}

func (o LookupDhcpOptionResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupDhcpOptionResult] {
	return pulumix.Output[LookupDhcpOptionResult]{
		OutputState: o.OutputState,
	}
}

// If true, the DHCP options set is a default one. If false, it is not.
func (o LookupDhcpOptionResultOutput) Default() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupDhcpOptionResult) bool { return v.Default }).(pulumi.BoolOutput)
}

// The ID of the DHCP options set.
func (o LookupDhcpOptionResultOutput) DhcpOptionsSetId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDhcpOptionResult) string { return v.DhcpOptionsSetId }).(pulumi.StringOutput)
}

// The domain name.
func (o LookupDhcpOptionResultOutput) DomainName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDhcpOptionResult) string { return v.DomainName }).(pulumi.StringOutput)
}

// One or more IPs for the domain name servers.
func (o LookupDhcpOptionResultOutput) DomainNameServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupDhcpOptionResult) []string { return v.DomainNameServers }).(pulumi.StringArrayOutput)
}

func (o LookupDhcpOptionResultOutput) Filters() GetDhcpOptionFilterArrayOutput {
	return o.ApplyT(func(v LookupDhcpOptionResult) []GetDhcpOptionFilter { return v.Filters }).(GetDhcpOptionFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupDhcpOptionResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDhcpOptionResult) string { return v.Id }).(pulumi.StringOutput)
}

// One or more IPs for the log servers.
func (o LookupDhcpOptionResultOutput) LogServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupDhcpOptionResult) []string { return v.LogServers }).(pulumi.StringArrayOutput)
}

// One or more IPs for the NTP servers.
func (o LookupDhcpOptionResultOutput) NtpServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupDhcpOptionResult) []string { return v.NtpServers }).(pulumi.StringArrayOutput)
}

func (o LookupDhcpOptionResultOutput) RequestId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDhcpOptionResult) string { return v.RequestId }).(pulumi.StringOutput)
}

// One or more tags associated with the DHCP options set.
func (o LookupDhcpOptionResultOutput) Tags() GetDhcpOptionTagArrayOutput {
	return o.ApplyT(func(v LookupDhcpOptionResult) []GetDhcpOptionTag { return v.Tags }).(GetDhcpOptionTagArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDhcpOptionResultOutput{})
}
