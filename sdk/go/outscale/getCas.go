// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package outscale

import (
	"context"
	"reflect"

	"github.com/outscale/pulumi-outscale/sdk/go/outscale/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides information about Certificate Authorities (CAs).
//
// For more information on this resource, see the [User Guide](https://docs.outscale.com/en/userguide/About-API-Access-Rules.html).\
// For more information on this resource actions, see the [API documentation](https://docs.outscale.com/api#3ds-outscale-api-ca).
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/outscale/pulumi-outscale/sdk/go/outscale"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := outscale.GetCas(ctx, &outscale.GetCasArgs{
//				Filters: []outscale.GetCasFilter{
//					{
//						Name: "ca_ids",
//						Values: []string{
//							"ca-12345678",
//							"ca-87654321",
//						},
//					},
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetCas(ctx *pulumi.Context, args *GetCasArgs, opts ...pulumi.InvokeOption) (*GetCasResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetCasResult
	err := ctx.Invoke("outscale:index/getCas:getCas", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCas.
type GetCasArgs struct {
	// A combination of a filter name and one or more filter values. You can specify this argument for as many filter names as you need. The filter name can be any of the following:
	Filters []GetCasFilter `pulumi:"filters"`
}

// A collection of values returned by getCas.
type GetCasResult struct {
	// Information about one or more CAs.
	Cas     []GetCasCa     `pulumi:"cas"`
	Filters []GetCasFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id        string `pulumi:"id"`
	RequestId string `pulumi:"requestId"`
}

func GetCasOutput(ctx *pulumi.Context, args GetCasOutputArgs, opts ...pulumi.InvokeOption) GetCasResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetCasResultOutput, error) {
			args := v.(GetCasArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("outscale:index/getCas:getCas", args, GetCasResultOutput{}, options).(GetCasResultOutput), nil
		}).(GetCasResultOutput)
}

// A collection of arguments for invoking getCas.
type GetCasOutputArgs struct {
	// A combination of a filter name and one or more filter values. You can specify this argument for as many filter names as you need. The filter name can be any of the following:
	Filters GetCasFilterArrayInput `pulumi:"filters"`
}

func (GetCasOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCasArgs)(nil)).Elem()
}

// A collection of values returned by getCas.
type GetCasResultOutput struct{ *pulumi.OutputState }

func (GetCasResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCasResult)(nil)).Elem()
}

func (o GetCasResultOutput) ToGetCasResultOutput() GetCasResultOutput {
	return o
}

func (o GetCasResultOutput) ToGetCasResultOutputWithContext(ctx context.Context) GetCasResultOutput {
	return o
}

// Information about one or more CAs.
func (o GetCasResultOutput) Cas() GetCasCaArrayOutput {
	return o.ApplyT(func(v GetCasResult) []GetCasCa { return v.Cas }).(GetCasCaArrayOutput)
}

func (o GetCasResultOutput) Filters() GetCasFilterArrayOutput {
	return o.ApplyT(func(v GetCasResult) []GetCasFilter { return v.Filters }).(GetCasFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetCasResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCasResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetCasResultOutput) RequestId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCasResult) string { return v.RequestId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetCasResultOutput{})
}
