// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package outscale

import (
	"context"
	"reflect"

	"github.com/outscale/pulumi-outscale/sdk/go/outscale/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides information about virtual gateways.
//
// For more information on this resource, see the [User Guide](https://docs.outscale.com/en/userguide/About-Virtual-Gateways.html).\
// For more information on this resource actions, see the [API documentation](https://docs.outscale.com/api#3ds-outscale-api-virtualgateway).
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/outscale/pulumi-outscale/sdk/go/outscale"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := outscale.GetVirtualGateways(ctx, &outscale.GetVirtualGatewaysArgs{
//				Filters: []outscale.GetVirtualGatewaysFilter{
//					{
//						Name: "states",
//						Values: []string{
//							"available",
//						},
//					},
//					{
//						Name: "link_states",
//						Values: []string{
//							"attached",
//							"detached",
//						},
//					},
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetVirtualGateways(ctx *pulumi.Context, args *GetVirtualGatewaysArgs, opts ...pulumi.InvokeOption) (*GetVirtualGatewaysResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetVirtualGatewaysResult
	err := ctx.Invoke("outscale:index/getVirtualGateways:getVirtualGateways", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getVirtualGateways.
type GetVirtualGatewaysArgs struct {
	// A combination of a filter name and one or more filter values. You can specify this argument for as many filter names as you need. The filter name can be any of the following:
	Filters []GetVirtualGatewaysFilter `pulumi:"filters"`
	// The ID of the virtual gateway.
	VirtualGatewayIds []string `pulumi:"virtualGatewayIds"`
}

// A collection of values returned by getVirtualGateways.
type GetVirtualGatewaysResult struct {
	Filters []GetVirtualGatewaysFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id        string `pulumi:"id"`
	RequestId string `pulumi:"requestId"`
	// The ID of the virtual gateway.
	VirtualGatewayIds []string `pulumi:"virtualGatewayIds"`
	// Information about one or more virtual gateways.
	VirtualGateways []GetVirtualGatewaysVirtualGateway `pulumi:"virtualGateways"`
}

func GetVirtualGatewaysOutput(ctx *pulumi.Context, args GetVirtualGatewaysOutputArgs, opts ...pulumi.InvokeOption) GetVirtualGatewaysResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetVirtualGatewaysResultOutput, error) {
			args := v.(GetVirtualGatewaysArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("outscale:index/getVirtualGateways:getVirtualGateways", args, GetVirtualGatewaysResultOutput{}, options).(GetVirtualGatewaysResultOutput), nil
		}).(GetVirtualGatewaysResultOutput)
}

// A collection of arguments for invoking getVirtualGateways.
type GetVirtualGatewaysOutputArgs struct {
	// A combination of a filter name and one or more filter values. You can specify this argument for as many filter names as you need. The filter name can be any of the following:
	Filters GetVirtualGatewaysFilterArrayInput `pulumi:"filters"`
	// The ID of the virtual gateway.
	VirtualGatewayIds pulumi.StringArrayInput `pulumi:"virtualGatewayIds"`
}

func (GetVirtualGatewaysOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualGatewaysArgs)(nil)).Elem()
}

// A collection of values returned by getVirtualGateways.
type GetVirtualGatewaysResultOutput struct{ *pulumi.OutputState }

func (GetVirtualGatewaysResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualGatewaysResult)(nil)).Elem()
}

func (o GetVirtualGatewaysResultOutput) ToGetVirtualGatewaysResultOutput() GetVirtualGatewaysResultOutput {
	return o
}

func (o GetVirtualGatewaysResultOutput) ToGetVirtualGatewaysResultOutputWithContext(ctx context.Context) GetVirtualGatewaysResultOutput {
	return o
}

func (o GetVirtualGatewaysResultOutput) Filters() GetVirtualGatewaysFilterArrayOutput {
	return o.ApplyT(func(v GetVirtualGatewaysResult) []GetVirtualGatewaysFilter { return v.Filters }).(GetVirtualGatewaysFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetVirtualGatewaysResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualGatewaysResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetVirtualGatewaysResultOutput) RequestId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualGatewaysResult) string { return v.RequestId }).(pulumi.StringOutput)
}

// The ID of the virtual gateway.
func (o GetVirtualGatewaysResultOutput) VirtualGatewayIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetVirtualGatewaysResult) []string { return v.VirtualGatewayIds }).(pulumi.StringArrayOutput)
}

// Information about one or more virtual gateways.
func (o GetVirtualGatewaysResultOutput) VirtualGateways() GetVirtualGatewaysVirtualGatewayArrayOutput {
	return o.ApplyT(func(v GetVirtualGatewaysResult) []GetVirtualGatewaysVirtualGateway { return v.VirtualGateways }).(GetVirtualGatewaysVirtualGatewayArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetVirtualGatewaysResultOutput{})
}
