// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package outscale

import (
	"context"
	"reflect"

	"github.com/outscale/pulumi-outscale/sdk/go/outscale/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides information about Net access points.
//
// For more information on this resource, see the [User Guide](https://docs.outscale.com/en/userguide/About-Net-Access-Points.html).\
// For more information on this resource actions, see the [API documentation](https://docs.outscale.com/api#3ds-outscale-api-netaccesspoint).
//
// ## Example Usage
//
// ### List Net access points
//
// ```go
// package main
//
// import (
//
//	"github.com/outscale/pulumi-outscale/sdk/go/outscale"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := outscale.GetNetAccessPoints(ctx, &outscale.GetNetAccessPointsArgs{
//				Filters: []outscale.GetNetAccessPointsFilter{
//					{
//						Name: "net_access_point_ids",
//						Values: []string{
//							"vpce-12345678",
//							"vpce-12345679",
//						},
//					},
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ### List Net access points according to their Net and state
//
// ```go
// package main
//
// import (
//
//	"github.com/outscale/pulumi-outscale/sdk/go/outscale"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := outscale.GetNetAccessPoints(ctx, &outscale.GetNetAccessPointsArgs{
//				Filters: []outscale.GetNetAccessPointsFilter{
//					{
//						Name: "net_ids",
//						Values: []string{
//							"vpc-12345678",
//						},
//					},
//					{
//						Name: "states",
//						Values: []string{
//							"available",
//						},
//					},
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetNetAccessPoints(ctx *pulumi.Context, args *GetNetAccessPointsArgs, opts ...pulumi.InvokeOption) (*GetNetAccessPointsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetNetAccessPointsResult
	err := ctx.Invoke("outscale:index/getNetAccessPoints:getNetAccessPoints", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getNetAccessPoints.
type GetNetAccessPointsArgs struct {
	// A combination of a filter name and one or more filter values. You can specify this argument for as many filter names as you need. The filter name can be any of the following:
	Filters []GetNetAccessPointsFilter `pulumi:"filters"`
}

// A collection of values returned by getNetAccessPoints.
type GetNetAccessPointsResult struct {
	Filters []GetNetAccessPointsFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// One or more Net access points.
	NetAccessPoints []GetNetAccessPointsNetAccessPoint `pulumi:"netAccessPoints"`
	RequestId       string                             `pulumi:"requestId"`
}

func GetNetAccessPointsOutput(ctx *pulumi.Context, args GetNetAccessPointsOutputArgs, opts ...pulumi.InvokeOption) GetNetAccessPointsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetNetAccessPointsResultOutput, error) {
			args := v.(GetNetAccessPointsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("outscale:index/getNetAccessPoints:getNetAccessPoints", args, GetNetAccessPointsResultOutput{}, options).(GetNetAccessPointsResultOutput), nil
		}).(GetNetAccessPointsResultOutput)
}

// A collection of arguments for invoking getNetAccessPoints.
type GetNetAccessPointsOutputArgs struct {
	// A combination of a filter name and one or more filter values. You can specify this argument for as many filter names as you need. The filter name can be any of the following:
	Filters GetNetAccessPointsFilterArrayInput `pulumi:"filters"`
}

func (GetNetAccessPointsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetAccessPointsArgs)(nil)).Elem()
}

// A collection of values returned by getNetAccessPoints.
type GetNetAccessPointsResultOutput struct{ *pulumi.OutputState }

func (GetNetAccessPointsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetAccessPointsResult)(nil)).Elem()
}

func (o GetNetAccessPointsResultOutput) ToGetNetAccessPointsResultOutput() GetNetAccessPointsResultOutput {
	return o
}

func (o GetNetAccessPointsResultOutput) ToGetNetAccessPointsResultOutputWithContext(ctx context.Context) GetNetAccessPointsResultOutput {
	return o
}

func (o GetNetAccessPointsResultOutput) Filters() GetNetAccessPointsFilterArrayOutput {
	return o.ApplyT(func(v GetNetAccessPointsResult) []GetNetAccessPointsFilter { return v.Filters }).(GetNetAccessPointsFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetNetAccessPointsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetAccessPointsResult) string { return v.Id }).(pulumi.StringOutput)
}

// One or more Net access points.
func (o GetNetAccessPointsResultOutput) NetAccessPoints() GetNetAccessPointsNetAccessPointArrayOutput {
	return o.ApplyT(func(v GetNetAccessPointsResult) []GetNetAccessPointsNetAccessPoint { return v.NetAccessPoints }).(GetNetAccessPointsNetAccessPointArrayOutput)
}

func (o GetNetAccessPointsResultOutput) RequestId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetAccessPointsResult) string { return v.RequestId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetNetAccessPointsResultOutput{})
}
