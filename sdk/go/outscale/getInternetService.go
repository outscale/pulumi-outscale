// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package outscale

import (
	"context"
	"reflect"

	"github.com/outscale/pulumi-outscale/sdk/go/outscale/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides information about an Internet service.
//
// For more information on this resource, see the [User Guide](https://docs.outscale.com/en/userguide/About-Internet-Services.html).\
// For more information on this resource actions, see the [API documentation](https://docs.outscale.com/api#3ds-outscale-api-internetservice).
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/outscale/pulumi-outscale/sdk/go/outscale"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := outscale.LookupInternetService(ctx, &outscale.LookupInternetServiceArgs{
//				Filters: []outscale.GetInternetServiceFilter{
//					{
//						Name: "internet_service_ids",
//						Values: []string{
//							"igw-12345678",
//						},
//					},
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupInternetService(ctx *pulumi.Context, args *LookupInternetServiceArgs, opts ...pulumi.InvokeOption) (*LookupInternetServiceResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupInternetServiceResult
	err := ctx.Invoke("outscale:index/getInternetService:getInternetService", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getInternetService.
type LookupInternetServiceArgs struct {
	// A combination of a filter name and one or more filter values. You can specify this argument for as many filter names as you need. The filter name can be any of the following:
	Filters []GetInternetServiceFilter `pulumi:"filters"`
}

// A collection of values returned by getInternetService.
type LookupInternetServiceResult struct {
	Filters []GetInternetServiceFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The ID of the internet service.
	InternetServiceId string `pulumi:"internetServiceId"`
	// The ID of the Net attached to the internet service.
	NetId     string `pulumi:"netId"`
	RequestId string `pulumi:"requestId"`
	// The state of the attachment of the internet service to the Net (always `available`).
	State string `pulumi:"state"`
	// One or more tags associated with the internet service.
	Tags []GetInternetServiceTag `pulumi:"tags"`
}

func LookupInternetServiceOutput(ctx *pulumi.Context, args LookupInternetServiceOutputArgs, opts ...pulumi.InvokeOption) LookupInternetServiceResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupInternetServiceResultOutput, error) {
			args := v.(LookupInternetServiceArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("outscale:index/getInternetService:getInternetService", args, LookupInternetServiceResultOutput{}, options).(LookupInternetServiceResultOutput), nil
		}).(LookupInternetServiceResultOutput)
}

// A collection of arguments for invoking getInternetService.
type LookupInternetServiceOutputArgs struct {
	// A combination of a filter name and one or more filter values. You can specify this argument for as many filter names as you need. The filter name can be any of the following:
	Filters GetInternetServiceFilterArrayInput `pulumi:"filters"`
}

func (LookupInternetServiceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupInternetServiceArgs)(nil)).Elem()
}

// A collection of values returned by getInternetService.
type LookupInternetServiceResultOutput struct{ *pulumi.OutputState }

func (LookupInternetServiceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupInternetServiceResult)(nil)).Elem()
}

func (o LookupInternetServiceResultOutput) ToLookupInternetServiceResultOutput() LookupInternetServiceResultOutput {
	return o
}

func (o LookupInternetServiceResultOutput) ToLookupInternetServiceResultOutputWithContext(ctx context.Context) LookupInternetServiceResultOutput {
	return o
}

func (o LookupInternetServiceResultOutput) Filters() GetInternetServiceFilterArrayOutput {
	return o.ApplyT(func(v LookupInternetServiceResult) []GetInternetServiceFilter { return v.Filters }).(GetInternetServiceFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupInternetServiceResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInternetServiceResult) string { return v.Id }).(pulumi.StringOutput)
}

// The ID of the internet service.
func (o LookupInternetServiceResultOutput) InternetServiceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInternetServiceResult) string { return v.InternetServiceId }).(pulumi.StringOutput)
}

// The ID of the Net attached to the internet service.
func (o LookupInternetServiceResultOutput) NetId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInternetServiceResult) string { return v.NetId }).(pulumi.StringOutput)
}

func (o LookupInternetServiceResultOutput) RequestId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInternetServiceResult) string { return v.RequestId }).(pulumi.StringOutput)
}

// The state of the attachment of the internet service to the Net (always `available`).
func (o LookupInternetServiceResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInternetServiceResult) string { return v.State }).(pulumi.StringOutput)
}

// One or more tags associated with the internet service.
func (o LookupInternetServiceResultOutput) Tags() GetInternetServiceTagArrayOutput {
	return o.ApplyT(func(v LookupInternetServiceResult) []GetInternetServiceTag { return v.Tags }).(GetInternetServiceTagArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupInternetServiceResultOutput{})
}
