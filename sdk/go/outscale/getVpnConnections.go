// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package outscale

import (
	"context"
	"reflect"

	"github.com/outscale/pulumi-outscale/sdk/go/outscale/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides information about VPN connections.
//
// For more information on this resource, see the [User Guide](https://docs.outscale.com/en/userguide/About-VPN-Connections.html).\
// For more information on this resource actions, see the [API documentation](https://docs.outscale.com/api#3ds-outscale-api-vpnconnection).
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/outscale/pulumi-outscale/sdk/go/outscale"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := outscale.GetVpnConnections(ctx, &outscale.GetVpnConnectionsArgs{
//				Filters: []outscale.GetVpnConnectionsFilter{
//					{
//						Name: "client_gateway_ids",
//						Values: []string{
//							"cgw-12345678",
//						},
//					},
//					{
//						Name: "virtual_gateway_ids",
//						Values: []string{
//							"vgw-12345678",
//							"vgw-12345678",
//						},
//					},
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetVpnConnections(ctx *pulumi.Context, args *GetVpnConnectionsArgs, opts ...pulumi.InvokeOption) (*GetVpnConnectionsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetVpnConnectionsResult
	err := ctx.Invoke("outscale:index/getVpnConnections:getVpnConnections", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getVpnConnections.
type GetVpnConnectionsArgs struct {
	// A combination of a filter name and one or more filter values. You can specify this argument for as many filter names as you need. The filter name can be any of the following:
	Filters []GetVpnConnectionsFilter `pulumi:"filters"`
	// The IDs of the VPN connections.
	VpnConnectionIds []string `pulumi:"vpnConnectionIds"`
}

// A collection of values returned by getVpnConnections.
type GetVpnConnectionsResult struct {
	Filters []GetVpnConnectionsFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id               string   `pulumi:"id"`
	RequestId        string   `pulumi:"requestId"`
	VpnConnectionIds []string `pulumi:"vpnConnectionIds"`
	// Information about one or more VPN connections.
	VpnConnections []GetVpnConnectionsVpnConnection `pulumi:"vpnConnections"`
}

func GetVpnConnectionsOutput(ctx *pulumi.Context, args GetVpnConnectionsOutputArgs, opts ...pulumi.InvokeOption) GetVpnConnectionsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetVpnConnectionsResult, error) {
			args := v.(GetVpnConnectionsArgs)
			r, err := GetVpnConnections(ctx, &args, opts...)
			var s GetVpnConnectionsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetVpnConnectionsResultOutput)
}

// A collection of arguments for invoking getVpnConnections.
type GetVpnConnectionsOutputArgs struct {
	// A combination of a filter name and one or more filter values. You can specify this argument for as many filter names as you need. The filter name can be any of the following:
	Filters GetVpnConnectionsFilterArrayInput `pulumi:"filters"`
	// The IDs of the VPN connections.
	VpnConnectionIds pulumi.StringArrayInput `pulumi:"vpnConnectionIds"`
}

func (GetVpnConnectionsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpnConnectionsArgs)(nil)).Elem()
}

// A collection of values returned by getVpnConnections.
type GetVpnConnectionsResultOutput struct{ *pulumi.OutputState }

func (GetVpnConnectionsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpnConnectionsResult)(nil)).Elem()
}

func (o GetVpnConnectionsResultOutput) ToGetVpnConnectionsResultOutput() GetVpnConnectionsResultOutput {
	return o
}

func (o GetVpnConnectionsResultOutput) ToGetVpnConnectionsResultOutputWithContext(ctx context.Context) GetVpnConnectionsResultOutput {
	return o
}

func (o GetVpnConnectionsResultOutput) Filters() GetVpnConnectionsFilterArrayOutput {
	return o.ApplyT(func(v GetVpnConnectionsResult) []GetVpnConnectionsFilter { return v.Filters }).(GetVpnConnectionsFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetVpnConnectionsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpnConnectionsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetVpnConnectionsResultOutput) RequestId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpnConnectionsResult) string { return v.RequestId }).(pulumi.StringOutput)
}

func (o GetVpnConnectionsResultOutput) VpnConnectionIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetVpnConnectionsResult) []string { return v.VpnConnectionIds }).(pulumi.StringArrayOutput)
}

// Information about one or more VPN connections.
func (o GetVpnConnectionsResultOutput) VpnConnections() GetVpnConnectionsVpnConnectionArrayOutput {
	return o.ApplyT(func(v GetVpnConnectionsResult) []GetVpnConnectionsVpnConnection { return v.VpnConnections }).(GetVpnConnectionsVpnConnectionArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetVpnConnectionsResultOutput{})
}
