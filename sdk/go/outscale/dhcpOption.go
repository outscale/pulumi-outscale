// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package outscale

import (
	"context"
	"reflect"

	"github.com/outscale/pulumi-outscale/sdk/go/outscale/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a DHCP option.
//
// For more information on this resource, see the [User Guide](https://docs.outscale.com/en/userguide/About-DHCP-Options.html).\
// For more information on this resource actions, see the [API documentation](https://docs.outscale.com/api#3ds-outscale-api-dhcpoption).
//
// ## Example Usage
//
// ### Create a basic DHCP options set
//
// ```go
// package main
//
// import (
//
//	"github.com/outscale/pulumi-outscale/sdk/go/outscale"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := outscale.NewDhcpOption(ctx, "dhcp_option_01", &outscale.DhcpOptionArgs{
//				DomainName: pulumi.String("MyCompany.com"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ### Create a complete DHCP options set
//
// ```go
// package main
//
// import (
//
//	"github.com/outscale/pulumi-outscale/sdk/go/outscale"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := outscale.NewDhcpOption(ctx, "dhcp_option_02", &outscale.DhcpOptionArgs{
//				DomainName: pulumi.String("MyCompany.com"),
//				DomainNameServers: pulumi.StringArray{
//					pulumi.String("111.111.11.111"),
//					pulumi.String("222.222.22.222"),
//				},
//				NtpServers: pulumi.StringArray{
//					pulumi.String("111.1.1.1"),
//					pulumi.String("222.2.2.2"),
//				},
//				Tags: outscale.DhcpOptionTagArray{
//					&outscale.DhcpOptionTagArgs{
//						Key:   pulumi.String("Name"),
//						Value: pulumi.String("DHCP01"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// DHCP options can be imported using the DHCP option ID. For example:
//
// console
//
// ```sh
// $ pulumi import outscale:index/dhcpOption:DhcpOption ImportedDhcpSet dopt-87654321
// ```
type DhcpOption struct {
	pulumi.CustomResourceState

	// If true, the DHCP options set is a default one. If false, it is not.
	Default pulumi.BoolOutput `pulumi:"default"`
	// The ID of the DHCP options set.
	DhcpOptionsSetId pulumi.StringOutput `pulumi:"dhcpOptionsSetId"`
	// Specify a domain name (for example, MyCompany.com). You can specify only one domain name. You must specify at least one of the following parameters: `DomainName`, `DomainNameServers`, or `NtpServers`.
	DomainName pulumi.StringOutput `pulumi:"domainName"`
	// The IPs of domain name servers. If no IPs are specified, the `OutscaleProvidedDNS` value is set by default. You must specify at least one of the following parameters: `DomainName`, `DomainNameServers`, or `NtpServers`.
	DomainNameServers pulumi.StringArrayOutput `pulumi:"domainNameServers"`
	// The IPs of the log servers. You must specify at least one of the following parameters: `domainName`, `domainNameServers`, `logServers`, or `ntpServers`.
	LogServers pulumi.StringArrayOutput `pulumi:"logServers"`
	// The IPs of the Network Time Protocol (NTP) servers. You must specify at least one of the following parameters: `DomainName`, `DomainNameServers`, or `NtpServers`.
	NtpServers pulumi.StringArrayOutput `pulumi:"ntpServers"`
	RequestId  pulumi.StringOutput      `pulumi:"requestId"`
	// A tag to add to this resource. You can specify this argument several times.
	Tags DhcpOptionTagArrayOutput `pulumi:"tags"`
}

// NewDhcpOption registers a new resource with the given unique name, arguments, and options.
func NewDhcpOption(ctx *pulumi.Context,
	name string, args *DhcpOptionArgs, opts ...pulumi.ResourceOption) (*DhcpOption, error) {
	if args == nil {
		args = &DhcpOptionArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource DhcpOption
	err := ctx.RegisterResource("outscale:index/dhcpOption:DhcpOption", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDhcpOption gets an existing DhcpOption resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDhcpOption(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DhcpOptionState, opts ...pulumi.ResourceOption) (*DhcpOption, error) {
	var resource DhcpOption
	err := ctx.ReadResource("outscale:index/dhcpOption:DhcpOption", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DhcpOption resources.
type dhcpOptionState struct {
	// If true, the DHCP options set is a default one. If false, it is not.
	Default *bool `pulumi:"default"`
	// The ID of the DHCP options set.
	DhcpOptionsSetId *string `pulumi:"dhcpOptionsSetId"`
	// Specify a domain name (for example, MyCompany.com). You can specify only one domain name. You must specify at least one of the following parameters: `DomainName`, `DomainNameServers`, or `NtpServers`.
	DomainName *string `pulumi:"domainName"`
	// The IPs of domain name servers. If no IPs are specified, the `OutscaleProvidedDNS` value is set by default. You must specify at least one of the following parameters: `DomainName`, `DomainNameServers`, or `NtpServers`.
	DomainNameServers []string `pulumi:"domainNameServers"`
	// The IPs of the log servers. You must specify at least one of the following parameters: `domainName`, `domainNameServers`, `logServers`, or `ntpServers`.
	LogServers []string `pulumi:"logServers"`
	// The IPs of the Network Time Protocol (NTP) servers. You must specify at least one of the following parameters: `DomainName`, `DomainNameServers`, or `NtpServers`.
	NtpServers []string `pulumi:"ntpServers"`
	RequestId  *string  `pulumi:"requestId"`
	// A tag to add to this resource. You can specify this argument several times.
	Tags []DhcpOptionTag `pulumi:"tags"`
}

type DhcpOptionState struct {
	// If true, the DHCP options set is a default one. If false, it is not.
	Default pulumi.BoolPtrInput
	// The ID of the DHCP options set.
	DhcpOptionsSetId pulumi.StringPtrInput
	// Specify a domain name (for example, MyCompany.com). You can specify only one domain name. You must specify at least one of the following parameters: `DomainName`, `DomainNameServers`, or `NtpServers`.
	DomainName pulumi.StringPtrInput
	// The IPs of domain name servers. If no IPs are specified, the `OutscaleProvidedDNS` value is set by default. You must specify at least one of the following parameters: `DomainName`, `DomainNameServers`, or `NtpServers`.
	DomainNameServers pulumi.StringArrayInput
	// The IPs of the log servers. You must specify at least one of the following parameters: `domainName`, `domainNameServers`, `logServers`, or `ntpServers`.
	LogServers pulumi.StringArrayInput
	// The IPs of the Network Time Protocol (NTP) servers. You must specify at least one of the following parameters: `DomainName`, `DomainNameServers`, or `NtpServers`.
	NtpServers pulumi.StringArrayInput
	RequestId  pulumi.StringPtrInput
	// A tag to add to this resource. You can specify this argument several times.
	Tags DhcpOptionTagArrayInput
}

func (DhcpOptionState) ElementType() reflect.Type {
	return reflect.TypeOf((*dhcpOptionState)(nil)).Elem()
}

type dhcpOptionArgs struct {
	// Specify a domain name (for example, MyCompany.com). You can specify only one domain name. You must specify at least one of the following parameters: `DomainName`, `DomainNameServers`, or `NtpServers`.
	DomainName *string `pulumi:"domainName"`
	// The IPs of domain name servers. If no IPs are specified, the `OutscaleProvidedDNS` value is set by default. You must specify at least one of the following parameters: `DomainName`, `DomainNameServers`, or `NtpServers`.
	DomainNameServers []string `pulumi:"domainNameServers"`
	// The IPs of the log servers. You must specify at least one of the following parameters: `domainName`, `domainNameServers`, `logServers`, or `ntpServers`.
	LogServers []string `pulumi:"logServers"`
	// The IPs of the Network Time Protocol (NTP) servers. You must specify at least one of the following parameters: `DomainName`, `DomainNameServers`, or `NtpServers`.
	NtpServers []string `pulumi:"ntpServers"`
	// A tag to add to this resource. You can specify this argument several times.
	Tags []DhcpOptionTag `pulumi:"tags"`
}

// The set of arguments for constructing a DhcpOption resource.
type DhcpOptionArgs struct {
	// Specify a domain name (for example, MyCompany.com). You can specify only one domain name. You must specify at least one of the following parameters: `DomainName`, `DomainNameServers`, or `NtpServers`.
	DomainName pulumi.StringPtrInput
	// The IPs of domain name servers. If no IPs are specified, the `OutscaleProvidedDNS` value is set by default. You must specify at least one of the following parameters: `DomainName`, `DomainNameServers`, or `NtpServers`.
	DomainNameServers pulumi.StringArrayInput
	// The IPs of the log servers. You must specify at least one of the following parameters: `domainName`, `domainNameServers`, `logServers`, or `ntpServers`.
	LogServers pulumi.StringArrayInput
	// The IPs of the Network Time Protocol (NTP) servers. You must specify at least one of the following parameters: `DomainName`, `DomainNameServers`, or `NtpServers`.
	NtpServers pulumi.StringArrayInput
	// A tag to add to this resource. You can specify this argument several times.
	Tags DhcpOptionTagArrayInput
}

func (DhcpOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dhcpOptionArgs)(nil)).Elem()
}

type DhcpOptionInput interface {
	pulumi.Input

	ToDhcpOptionOutput() DhcpOptionOutput
	ToDhcpOptionOutputWithContext(ctx context.Context) DhcpOptionOutput
}

func (*DhcpOption) ElementType() reflect.Type {
	return reflect.TypeOf((**DhcpOption)(nil)).Elem()
}

func (i *DhcpOption) ToDhcpOptionOutput() DhcpOptionOutput {
	return i.ToDhcpOptionOutputWithContext(context.Background())
}

func (i *DhcpOption) ToDhcpOptionOutputWithContext(ctx context.Context) DhcpOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DhcpOptionOutput)
}

// DhcpOptionArrayInput is an input type that accepts DhcpOptionArray and DhcpOptionArrayOutput values.
// You can construct a concrete instance of `DhcpOptionArrayInput` via:
//
//	DhcpOptionArray{ DhcpOptionArgs{...} }
type DhcpOptionArrayInput interface {
	pulumi.Input

	ToDhcpOptionArrayOutput() DhcpOptionArrayOutput
	ToDhcpOptionArrayOutputWithContext(context.Context) DhcpOptionArrayOutput
}

type DhcpOptionArray []DhcpOptionInput

func (DhcpOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DhcpOption)(nil)).Elem()
}

func (i DhcpOptionArray) ToDhcpOptionArrayOutput() DhcpOptionArrayOutput {
	return i.ToDhcpOptionArrayOutputWithContext(context.Background())
}

func (i DhcpOptionArray) ToDhcpOptionArrayOutputWithContext(ctx context.Context) DhcpOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DhcpOptionArrayOutput)
}

// DhcpOptionMapInput is an input type that accepts DhcpOptionMap and DhcpOptionMapOutput values.
// You can construct a concrete instance of `DhcpOptionMapInput` via:
//
//	DhcpOptionMap{ "key": DhcpOptionArgs{...} }
type DhcpOptionMapInput interface {
	pulumi.Input

	ToDhcpOptionMapOutput() DhcpOptionMapOutput
	ToDhcpOptionMapOutputWithContext(context.Context) DhcpOptionMapOutput
}

type DhcpOptionMap map[string]DhcpOptionInput

func (DhcpOptionMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DhcpOption)(nil)).Elem()
}

func (i DhcpOptionMap) ToDhcpOptionMapOutput() DhcpOptionMapOutput {
	return i.ToDhcpOptionMapOutputWithContext(context.Background())
}

func (i DhcpOptionMap) ToDhcpOptionMapOutputWithContext(ctx context.Context) DhcpOptionMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DhcpOptionMapOutput)
}

type DhcpOptionOutput struct{ *pulumi.OutputState }

func (DhcpOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DhcpOption)(nil)).Elem()
}

func (o DhcpOptionOutput) ToDhcpOptionOutput() DhcpOptionOutput {
	return o
}

func (o DhcpOptionOutput) ToDhcpOptionOutputWithContext(ctx context.Context) DhcpOptionOutput {
	return o
}

// If true, the DHCP options set is a default one. If false, it is not.
func (o DhcpOptionOutput) Default() pulumi.BoolOutput {
	return o.ApplyT(func(v *DhcpOption) pulumi.BoolOutput { return v.Default }).(pulumi.BoolOutput)
}

// The ID of the DHCP options set.
func (o DhcpOptionOutput) DhcpOptionsSetId() pulumi.StringOutput {
	return o.ApplyT(func(v *DhcpOption) pulumi.StringOutput { return v.DhcpOptionsSetId }).(pulumi.StringOutput)
}

// Specify a domain name (for example, MyCompany.com). You can specify only one domain name. You must specify at least one of the following parameters: `DomainName`, `DomainNameServers`, or `NtpServers`.
func (o DhcpOptionOutput) DomainName() pulumi.StringOutput {
	return o.ApplyT(func(v *DhcpOption) pulumi.StringOutput { return v.DomainName }).(pulumi.StringOutput)
}

// The IPs of domain name servers. If no IPs are specified, the `OutscaleProvidedDNS` value is set by default. You must specify at least one of the following parameters: `DomainName`, `DomainNameServers`, or `NtpServers`.
func (o DhcpOptionOutput) DomainNameServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DhcpOption) pulumi.StringArrayOutput { return v.DomainNameServers }).(pulumi.StringArrayOutput)
}

// The IPs of the log servers. You must specify at least one of the following parameters: `domainName`, `domainNameServers`, `logServers`, or `ntpServers`.
func (o DhcpOptionOutput) LogServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DhcpOption) pulumi.StringArrayOutput { return v.LogServers }).(pulumi.StringArrayOutput)
}

// The IPs of the Network Time Protocol (NTP) servers. You must specify at least one of the following parameters: `DomainName`, `DomainNameServers`, or `NtpServers`.
func (o DhcpOptionOutput) NtpServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DhcpOption) pulumi.StringArrayOutput { return v.NtpServers }).(pulumi.StringArrayOutput)
}

func (o DhcpOptionOutput) RequestId() pulumi.StringOutput {
	return o.ApplyT(func(v *DhcpOption) pulumi.StringOutput { return v.RequestId }).(pulumi.StringOutput)
}

// A tag to add to this resource. You can specify this argument several times.
func (o DhcpOptionOutput) Tags() DhcpOptionTagArrayOutput {
	return o.ApplyT(func(v *DhcpOption) DhcpOptionTagArrayOutput { return v.Tags }).(DhcpOptionTagArrayOutput)
}

type DhcpOptionArrayOutput struct{ *pulumi.OutputState }

func (DhcpOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DhcpOption)(nil)).Elem()
}

func (o DhcpOptionArrayOutput) ToDhcpOptionArrayOutput() DhcpOptionArrayOutput {
	return o
}

func (o DhcpOptionArrayOutput) ToDhcpOptionArrayOutputWithContext(ctx context.Context) DhcpOptionArrayOutput {
	return o
}

func (o DhcpOptionArrayOutput) Index(i pulumi.IntInput) DhcpOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *DhcpOption {
		return vs[0].([]*DhcpOption)[vs[1].(int)]
	}).(DhcpOptionOutput)
}

type DhcpOptionMapOutput struct{ *pulumi.OutputState }

func (DhcpOptionMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DhcpOption)(nil)).Elem()
}

func (o DhcpOptionMapOutput) ToDhcpOptionMapOutput() DhcpOptionMapOutput {
	return o
}

func (o DhcpOptionMapOutput) ToDhcpOptionMapOutputWithContext(ctx context.Context) DhcpOptionMapOutput {
	return o
}

func (o DhcpOptionMapOutput) MapIndex(k pulumi.StringInput) DhcpOptionOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *DhcpOption {
		return vs[0].(map[string]*DhcpOption)[vs[1].(string)]
	}).(DhcpOptionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DhcpOptionInput)(nil)).Elem(), &DhcpOption{})
	pulumi.RegisterInputType(reflect.TypeOf((*DhcpOptionArrayInput)(nil)).Elem(), DhcpOptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DhcpOptionMapInput)(nil)).Elem(), DhcpOptionMap{})
	pulumi.RegisterOutputType(DhcpOptionOutput{})
	pulumi.RegisterOutputType(DhcpOptionArrayOutput{})
	pulumi.RegisterOutputType(DhcpOptionMapOutput{})
}
