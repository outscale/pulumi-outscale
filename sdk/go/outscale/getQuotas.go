// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package outscale

import (
	"context"
	"reflect"

	"github.com/outscale/pulumi-outscale/sdk/go/outscale/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides information about quotas.
//
// For more information on this resource, see the [User Guide](https://docs.outscale.com/en/userguide/About-Your-Account.html).\
// For more information on this resource actions, see the [API documentation](https://docs.outscale.com/api#readquotas).
//
// ## Example Usage
func GetQuotas(ctx *pulumi.Context, args *GetQuotasArgs, opts ...pulumi.InvokeOption) (*GetQuotasResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetQuotasResult
	err := ctx.Invoke("outscale:index/getQuotas:getQuotas", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getQuotas.
type GetQuotasArgs struct {
	// A combination of a filter name and one or more filter values. You can specify this argument for as many filter names as you need. The filter name can be any of the following:
	Filters []GetQuotasFilter `pulumi:"filters"`
}

// A collection of values returned by getQuotas.
type GetQuotasResult struct {
	Filters []GetQuotasFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// One or more quotas associated with the user.
	Quotas    []GetQuotasQuota `pulumi:"quotas"`
	RequestId string           `pulumi:"requestId"`
}

func GetQuotasOutput(ctx *pulumi.Context, args GetQuotasOutputArgs, opts ...pulumi.InvokeOption) GetQuotasResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetQuotasResult, error) {
			args := v.(GetQuotasArgs)
			r, err := GetQuotas(ctx, &args, opts...)
			var s GetQuotasResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetQuotasResultOutput)
}

// A collection of arguments for invoking getQuotas.
type GetQuotasOutputArgs struct {
	// A combination of a filter name and one or more filter values. You can specify this argument for as many filter names as you need. The filter name can be any of the following:
	Filters GetQuotasFilterArrayInput `pulumi:"filters"`
}

func (GetQuotasOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetQuotasArgs)(nil)).Elem()
}

// A collection of values returned by getQuotas.
type GetQuotasResultOutput struct{ *pulumi.OutputState }

func (GetQuotasResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetQuotasResult)(nil)).Elem()
}

func (o GetQuotasResultOutput) ToGetQuotasResultOutput() GetQuotasResultOutput {
	return o
}

func (o GetQuotasResultOutput) ToGetQuotasResultOutputWithContext(ctx context.Context) GetQuotasResultOutput {
	return o
}

func (o GetQuotasResultOutput) ToOutput(ctx context.Context) pulumix.Output[GetQuotasResult] {
	return pulumix.Output[GetQuotasResult]{
		OutputState: o.OutputState,
	}
}

func (o GetQuotasResultOutput) Filters() GetQuotasFilterArrayOutput {
	return o.ApplyT(func(v GetQuotasResult) []GetQuotasFilter { return v.Filters }).(GetQuotasFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetQuotasResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetQuotasResult) string { return v.Id }).(pulumi.StringOutput)
}

// One or more quotas associated with the user.
func (o GetQuotasResultOutput) Quotas() GetQuotasQuotaArrayOutput {
	return o.ApplyT(func(v GetQuotasResult) []GetQuotasQuota { return v.Quotas }).(GetQuotasQuotaArrayOutput)
}

func (o GetQuotasResultOutput) RequestId() pulumi.StringOutput {
	return o.ApplyT(func(v GetQuotasResult) string { return v.RequestId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetQuotasResultOutput{})
}
