// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package outscale

import (
	"context"
	"reflect"

	"github.com/outscale/pulumi-outscale/sdk/go/outscale/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides information about keypairs.
//
// For more information on this resource, see the [User Guide](https://docs.outscale.com/en/userguide/About-Keypairs.html).\
// For more information on this resource actions, see the [API documentation](https://docs.outscale.com/api#3ds-outscale-api-keypair).
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/outscale/pulumi-outscale/sdk/go/outscale"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := outscale.GetKeypairs(ctx, &outscale.GetKeypairsArgs{
//				Filters: []outscale.GetKeypairsFilter{
//					{
//						Name: "keypair_names",
//						Values: []string{
//							"terraform-keypair-01",
//							"terraform-keypair-02",
//						},
//					},
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetKeypairs(ctx *pulumi.Context, args *GetKeypairsArgs, opts ...pulumi.InvokeOption) (*GetKeypairsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetKeypairsResult
	err := ctx.Invoke("outscale:index/getKeypairs:getKeypairs", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getKeypairs.
type GetKeypairsArgs struct {
	// A combination of a filter name and one or more filter values. You can specify this argument for as many filter names as you need. The filter name can be any of the following:
	Filters []GetKeypairsFilter `pulumi:"filters"`
	// The names of the keypairs.
	KeypairNames []string `pulumi:"keypairNames"`
}

// A collection of values returned by getKeypairs.
type GetKeypairsResult struct {
	Filters []GetKeypairsFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id           string   `pulumi:"id"`
	KeypairNames []string `pulumi:"keypairNames"`
	// Information about one or more keypairs.
	Keypairs  []GetKeypairsKeypair `pulumi:"keypairs"`
	RequestId string               `pulumi:"requestId"`
}

func GetKeypairsOutput(ctx *pulumi.Context, args GetKeypairsOutputArgs, opts ...pulumi.InvokeOption) GetKeypairsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetKeypairsResult, error) {
			args := v.(GetKeypairsArgs)
			r, err := GetKeypairs(ctx, &args, opts...)
			var s GetKeypairsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetKeypairsResultOutput)
}

// A collection of arguments for invoking getKeypairs.
type GetKeypairsOutputArgs struct {
	// A combination of a filter name and one or more filter values. You can specify this argument for as many filter names as you need. The filter name can be any of the following:
	Filters GetKeypairsFilterArrayInput `pulumi:"filters"`
	// The names of the keypairs.
	KeypairNames pulumi.StringArrayInput `pulumi:"keypairNames"`
}

func (GetKeypairsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKeypairsArgs)(nil)).Elem()
}

// A collection of values returned by getKeypairs.
type GetKeypairsResultOutput struct{ *pulumi.OutputState }

func (GetKeypairsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKeypairsResult)(nil)).Elem()
}

func (o GetKeypairsResultOutput) ToGetKeypairsResultOutput() GetKeypairsResultOutput {
	return o
}

func (o GetKeypairsResultOutput) ToGetKeypairsResultOutputWithContext(ctx context.Context) GetKeypairsResultOutput {
	return o
}

func (o GetKeypairsResultOutput) Filters() GetKeypairsFilterArrayOutput {
	return o.ApplyT(func(v GetKeypairsResult) []GetKeypairsFilter { return v.Filters }).(GetKeypairsFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetKeypairsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeypairsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetKeypairsResultOutput) KeypairNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetKeypairsResult) []string { return v.KeypairNames }).(pulumi.StringArrayOutput)
}

// Information about one or more keypairs.
func (o GetKeypairsResultOutput) Keypairs() GetKeypairsKeypairArrayOutput {
	return o.ApplyT(func(v GetKeypairsResult) []GetKeypairsKeypair { return v.Keypairs }).(GetKeypairsKeypairArrayOutput)
}

func (o GetKeypairsResultOutput) RequestId() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeypairsResult) string { return v.RequestId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetKeypairsResultOutput{})
}
