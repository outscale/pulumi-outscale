// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package outscale

import (
	"context"
	"reflect"

	"github.com/outscale/pulumi-outscale/sdk/go/outscale/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides information about user groups.
//
// For more information on this resource, see the [User Guide](https://docs.outscale.com/en/userguide/About-EIM-Groups.html).\
// For more information on this resource actions, see the [API documentation](https://docs.outscale.com/api.html#createusergroup).
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/outscale/pulumi-outscale/sdk/go/outscale"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := outscale.GetUserGroups(ctx, &outscale.GetUserGroupsArgs{
//				Filters: []outscale.GetUserGroupsFilter{
//					{
//						Name: "user_group_ids",
//						Values: []string{
//							"XXXXXXXXX",
//							"YYYYYYYYYY",
//						},
//					},
//					{
//						Name: "path_prefix",
//						Values: []string{
//							"/",
//						},
//					},
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetUserGroups(ctx *pulumi.Context, args *GetUserGroupsArgs, opts ...pulumi.InvokeOption) (*GetUserGroupsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetUserGroupsResult
	err := ctx.Invoke("outscale:index/getUserGroups:getUserGroups", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getUserGroups.
type GetUserGroupsArgs struct {
	Filters []GetUserGroupsFilter `pulumi:"filters"`
}

// A collection of values returned by getUserGroups.
type GetUserGroupsResult struct {
	Filters []GetUserGroupsFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// A list of user groups.
	UserGroups []GetUserGroupsUserGroup `pulumi:"userGroups"`
}

func GetUserGroupsOutput(ctx *pulumi.Context, args GetUserGroupsOutputArgs, opts ...pulumi.InvokeOption) GetUserGroupsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetUserGroupsResultOutput, error) {
			args := v.(GetUserGroupsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("outscale:index/getUserGroups:getUserGroups", args, GetUserGroupsResultOutput{}, options).(GetUserGroupsResultOutput), nil
		}).(GetUserGroupsResultOutput)
}

// A collection of arguments for invoking getUserGroups.
type GetUserGroupsOutputArgs struct {
	Filters GetUserGroupsFilterArrayInput `pulumi:"filters"`
}

func (GetUserGroupsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserGroupsArgs)(nil)).Elem()
}

// A collection of values returned by getUserGroups.
type GetUserGroupsResultOutput struct{ *pulumi.OutputState }

func (GetUserGroupsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserGroupsResult)(nil)).Elem()
}

func (o GetUserGroupsResultOutput) ToGetUserGroupsResultOutput() GetUserGroupsResultOutput {
	return o
}

func (o GetUserGroupsResultOutput) ToGetUserGroupsResultOutputWithContext(ctx context.Context) GetUserGroupsResultOutput {
	return o
}

func (o GetUserGroupsResultOutput) Filters() GetUserGroupsFilterArrayOutput {
	return o.ApplyT(func(v GetUserGroupsResult) []GetUserGroupsFilter { return v.Filters }).(GetUserGroupsFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetUserGroupsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserGroupsResult) string { return v.Id }).(pulumi.StringOutput)
}

// A list of user groups.
func (o GetUserGroupsResultOutput) UserGroups() GetUserGroupsUserGroupArrayOutput {
	return o.ApplyT(func(v GetUserGroupsResult) []GetUserGroupsUserGroup { return v.UserGroups }).(GetUserGroupsUserGroupArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetUserGroupsResultOutput{})
}
