// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package outscale

import (
	"context"
	"reflect"

	"github.com/outscale/pulumi-outscale/sdk/go/outscale/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides information about a user group.
//
// For more information on this resource, see the [User Guide](https://docs.outscale.com/en/userguide/About-EIM-Groups.html).\
// For more information on this resource actions, see the [API documentation](https://docs.outscale.com/api.html#createusergroup).
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/outscale/pulumi-outscale/sdk/go/outscale"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := outscale.LookupUserGroup(ctx, &outscale.LookupUserGroupArgs{
//				UserGroupName: "user_group_name",
//				Path:          pulumi.StringRef("/"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupUserGroup(ctx *pulumi.Context, args *LookupUserGroupArgs, opts ...pulumi.InvokeOption) (*LookupUserGroupResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupUserGroupResult
	err := ctx.Invoke("outscale:index/getUserGroup:getUserGroup", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getUserGroup.
type LookupUserGroupArgs struct {
	// The path to the group. If not specified, it is set to a slash (`/`).
	Path *string `pulumi:"path"`
	// The name of the group.
	UserGroupName string             `pulumi:"userGroupName"`
	Users         []GetUserGroupUser `pulumi:"users"`
}

// A collection of values returned by getUserGroup.
type LookupUserGroupResult struct {
	// The date and time (UTC) of creation of the EIM user.
	CreationDate string `pulumi:"creationDate"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The date and time (UTC) of the last modification of the EIM user.
	LastModificationDate string `pulumi:"lastModificationDate"`
	// The Outscale Resource Name (ORN) of the user group. For more information, see [Resource Identifiers](https://docs.outscale.com/en/userguide/Resource-Identifiers.html).
	Orn string `pulumi:"orn"`
	// The path to the EIM user.
	Path *string `pulumi:"path"`
	// The ID of the user group.
	UserGroupId   string             `pulumi:"userGroupId"`
	UserGroupName string             `pulumi:"userGroupName"`
	Users         []GetUserGroupUser `pulumi:"users"`
}

func LookupUserGroupOutput(ctx *pulumi.Context, args LookupUserGroupOutputArgs, opts ...pulumi.InvokeOption) LookupUserGroupResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupUserGroupResultOutput, error) {
			args := v.(LookupUserGroupArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("outscale:index/getUserGroup:getUserGroup", args, LookupUserGroupResultOutput{}, options).(LookupUserGroupResultOutput), nil
		}).(LookupUserGroupResultOutput)
}

// A collection of arguments for invoking getUserGroup.
type LookupUserGroupOutputArgs struct {
	// The path to the group. If not specified, it is set to a slash (`/`).
	Path pulumi.StringPtrInput `pulumi:"path"`
	// The name of the group.
	UserGroupName pulumi.StringInput         `pulumi:"userGroupName"`
	Users         GetUserGroupUserArrayInput `pulumi:"users"`
}

func (LookupUserGroupOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupUserGroupArgs)(nil)).Elem()
}

// A collection of values returned by getUserGroup.
type LookupUserGroupResultOutput struct{ *pulumi.OutputState }

func (LookupUserGroupResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupUserGroupResult)(nil)).Elem()
}

func (o LookupUserGroupResultOutput) ToLookupUserGroupResultOutput() LookupUserGroupResultOutput {
	return o
}

func (o LookupUserGroupResultOutput) ToLookupUserGroupResultOutputWithContext(ctx context.Context) LookupUserGroupResultOutput {
	return o
}

// The date and time (UTC) of creation of the EIM user.
func (o LookupUserGroupResultOutput) CreationDate() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUserGroupResult) string { return v.CreationDate }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupUserGroupResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUserGroupResult) string { return v.Id }).(pulumi.StringOutput)
}

// The date and time (UTC) of the last modification of the EIM user.
func (o LookupUserGroupResultOutput) LastModificationDate() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUserGroupResult) string { return v.LastModificationDate }).(pulumi.StringOutput)
}

// The Outscale Resource Name (ORN) of the user group. For more information, see [Resource Identifiers](https://docs.outscale.com/en/userguide/Resource-Identifiers.html).
func (o LookupUserGroupResultOutput) Orn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUserGroupResult) string { return v.Orn }).(pulumi.StringOutput)
}

// The path to the EIM user.
func (o LookupUserGroupResultOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupUserGroupResult) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// The ID of the user group.
func (o LookupUserGroupResultOutput) UserGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUserGroupResult) string { return v.UserGroupId }).(pulumi.StringOutput)
}

func (o LookupUserGroupResultOutput) UserGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUserGroupResult) string { return v.UserGroupName }).(pulumi.StringOutput)
}

func (o LookupUserGroupResultOutput) Users() GetUserGroupUserArrayOutput {
	return o.ApplyT(func(v LookupUserGroupResult) []GetUserGroupUser { return v.Users }).(GetUserGroupUserArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupUserGroupResultOutput{})
}
