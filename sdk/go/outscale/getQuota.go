// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package outscale

import (
	"context"
	"reflect"

	"github.com/outscale/pulumi-outscale/sdk/go/outscale/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides information about a quota.
//
// For more information on this resource, see the [User Guide](https://docs.outscale.com/en/userguide/About-Your-Account.html).\
// For more information on this resource actions, see the [API documentation](https://docs.outscale.com/api#readquotas).
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/outscale/pulumi-outscale/sdk/go/outscale"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := outscale.GetQuota(ctx, &outscale.GetQuotaArgs{
//				Filters: []outscale.GetQuotaFilter{
//					{
//						Name: "collections",
//						Values: []string{
//							"LBU",
//						},
//					},
//					{
//						Name: "quota_names",
//						Values: []string{
//							"lb_listeners_limit",
//						},
//					},
//					{
//						Name: "quota_types",
//						Values: []string{
//							"global",
//						},
//					},
//					{
//						Name: "short_descriptions",
//						Values: []string{
//							"Load Balancer Listeners Limit",
//						},
//					},
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetQuota(ctx *pulumi.Context, args *GetQuotaArgs, opts ...pulumi.InvokeOption) (*GetQuotaResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetQuotaResult
	err := ctx.Invoke("outscale:index/getQuota:getQuota", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getQuota.
type GetQuotaArgs struct {
	// A combination of a filter name and one or more filter values. You can specify this argument for as many filter names as you need. The filter name can be any of the following:
	Filters []GetQuotaFilter `pulumi:"filters"`
}

// A collection of values returned by getQuota.
type GetQuotaResult struct {
	// The account ID of the owner of the quotas.
	AccountId string `pulumi:"accountId"`
	// The description of the quota.
	Description string           `pulumi:"description"`
	Filters     []GetQuotaFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The maximum value of the quota for the OUTSCALE user account (if there is no limit, `0`).
	MaxValue int `pulumi:"maxValue"`
	// The unique name of the quota.
	Name string `pulumi:"name"`
	// The group name of the quota.
	QuotaCollection string `pulumi:"quotaCollection"`
	// The resource ID if it is a resource-specific quota, `global` if it is not.
	QuotaType string `pulumi:"quotaType"`
	RequestId string `pulumi:"requestId"`
	// The description of the quota.
	ShortDescription string `pulumi:"shortDescription"`
	// The limit value currently used by the OUTSCALE user account.
	UsedValue int `pulumi:"usedValue"`
}

func GetQuotaOutput(ctx *pulumi.Context, args GetQuotaOutputArgs, opts ...pulumi.InvokeOption) GetQuotaResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetQuotaResult, error) {
			args := v.(GetQuotaArgs)
			r, err := GetQuota(ctx, &args, opts...)
			var s GetQuotaResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetQuotaResultOutput)
}

// A collection of arguments for invoking getQuota.
type GetQuotaOutputArgs struct {
	// A combination of a filter name and one or more filter values. You can specify this argument for as many filter names as you need. The filter name can be any of the following:
	Filters GetQuotaFilterArrayInput `pulumi:"filters"`
}

func (GetQuotaOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetQuotaArgs)(nil)).Elem()
}

// A collection of values returned by getQuota.
type GetQuotaResultOutput struct{ *pulumi.OutputState }

func (GetQuotaResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetQuotaResult)(nil)).Elem()
}

func (o GetQuotaResultOutput) ToGetQuotaResultOutput() GetQuotaResultOutput {
	return o
}

func (o GetQuotaResultOutput) ToGetQuotaResultOutputWithContext(ctx context.Context) GetQuotaResultOutput {
	return o
}

// The account ID of the owner of the quotas.
func (o GetQuotaResultOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v GetQuotaResult) string { return v.AccountId }).(pulumi.StringOutput)
}

// The description of the quota.
func (o GetQuotaResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetQuotaResult) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetQuotaResultOutput) Filters() GetQuotaFilterArrayOutput {
	return o.ApplyT(func(v GetQuotaResult) []GetQuotaFilter { return v.Filters }).(GetQuotaFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetQuotaResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetQuotaResult) string { return v.Id }).(pulumi.StringOutput)
}

// The maximum value of the quota for the OUTSCALE user account (if there is no limit, `0`).
func (o GetQuotaResultOutput) MaxValue() pulumi.IntOutput {
	return o.ApplyT(func(v GetQuotaResult) int { return v.MaxValue }).(pulumi.IntOutput)
}

// The unique name of the quota.
func (o GetQuotaResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetQuotaResult) string { return v.Name }).(pulumi.StringOutput)
}

// The group name of the quota.
func (o GetQuotaResultOutput) QuotaCollection() pulumi.StringOutput {
	return o.ApplyT(func(v GetQuotaResult) string { return v.QuotaCollection }).(pulumi.StringOutput)
}

// The resource ID if it is a resource-specific quota, `global` if it is not.
func (o GetQuotaResultOutput) QuotaType() pulumi.StringOutput {
	return o.ApplyT(func(v GetQuotaResult) string { return v.QuotaType }).(pulumi.StringOutput)
}

func (o GetQuotaResultOutput) RequestId() pulumi.StringOutput {
	return o.ApplyT(func(v GetQuotaResult) string { return v.RequestId }).(pulumi.StringOutput)
}

// The description of the quota.
func (o GetQuotaResultOutput) ShortDescription() pulumi.StringOutput {
	return o.ApplyT(func(v GetQuotaResult) string { return v.ShortDescription }).(pulumi.StringOutput)
}

// The limit value currently used by the OUTSCALE user account.
func (o GetQuotaResultOutput) UsedValue() pulumi.IntOutput {
	return o.ApplyT(func(v GetQuotaResult) int { return v.UsedValue }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(GetQuotaResultOutput{})
}
