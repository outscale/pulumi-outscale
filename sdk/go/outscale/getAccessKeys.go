// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package outscale

import (
	"context"
	"reflect"

	"github.com/outscale/pulumi-outscale/sdk/go/outscale/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides information about access keys.
//
// For more information on this resource, see the [User Guide](https://docs.outscale.com/en/userguide/About-Access-Keys.html).\
// For more information on this resource actions, see the [API documentation](https://docs.outscale.com/api#3ds-outscale-api-accesskey).
func GetAccessKeys(ctx *pulumi.Context, args *GetAccessKeysArgs, opts ...pulumi.InvokeOption) (*GetAccessKeysResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetAccessKeysResult
	err := ctx.Invoke("outscale:index/getAccessKeys:getAccessKeys", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAccessKeys.
type GetAccessKeysArgs struct {
	// The IDs of the access keys.
	AccessKeyIds []string `pulumi:"accessKeyIds"`
	// A combination of a filter name and one or more filter values. You can specify this argument for as many filter names as you need. The filter name can be any of the following:
	Filters []GetAccessKeysFilter `pulumi:"filters"`
	// The states of the access keys (`ACTIVE` \| `INACTIVE`).
	States []string `pulumi:"states"`
}

// A collection of values returned by getAccessKeys.
type GetAccessKeysResult struct {
	AccessKeyIds []string `pulumi:"accessKeyIds"`
	// A list of access keys.
	AccessKeys []GetAccessKeysAccessKey `pulumi:"accessKeys"`
	Filters    []GetAccessKeysFilter    `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id        string   `pulumi:"id"`
	RequestId string   `pulumi:"requestId"`
	States    []string `pulumi:"states"`
}

func GetAccessKeysOutput(ctx *pulumi.Context, args GetAccessKeysOutputArgs, opts ...pulumi.InvokeOption) GetAccessKeysResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetAccessKeysResult, error) {
			args := v.(GetAccessKeysArgs)
			r, err := GetAccessKeys(ctx, &args, opts...)
			var s GetAccessKeysResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetAccessKeysResultOutput)
}

// A collection of arguments for invoking getAccessKeys.
type GetAccessKeysOutputArgs struct {
	// The IDs of the access keys.
	AccessKeyIds pulumi.StringArrayInput `pulumi:"accessKeyIds"`
	// A combination of a filter name and one or more filter values. You can specify this argument for as many filter names as you need. The filter name can be any of the following:
	Filters GetAccessKeysFilterArrayInput `pulumi:"filters"`
	// The states of the access keys (`ACTIVE` \| `INACTIVE`).
	States pulumi.StringArrayInput `pulumi:"states"`
}

func (GetAccessKeysOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAccessKeysArgs)(nil)).Elem()
}

// A collection of values returned by getAccessKeys.
type GetAccessKeysResultOutput struct{ *pulumi.OutputState }

func (GetAccessKeysResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAccessKeysResult)(nil)).Elem()
}

func (o GetAccessKeysResultOutput) ToGetAccessKeysResultOutput() GetAccessKeysResultOutput {
	return o
}

func (o GetAccessKeysResultOutput) ToGetAccessKeysResultOutputWithContext(ctx context.Context) GetAccessKeysResultOutput {
	return o
}

func (o GetAccessKeysResultOutput) ToOutput(ctx context.Context) pulumix.Output[GetAccessKeysResult] {
	return pulumix.Output[GetAccessKeysResult]{
		OutputState: o.OutputState,
	}
}

func (o GetAccessKeysResultOutput) AccessKeyIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetAccessKeysResult) []string { return v.AccessKeyIds }).(pulumi.StringArrayOutput)
}

// A list of access keys.
func (o GetAccessKeysResultOutput) AccessKeys() GetAccessKeysAccessKeyArrayOutput {
	return o.ApplyT(func(v GetAccessKeysResult) []GetAccessKeysAccessKey { return v.AccessKeys }).(GetAccessKeysAccessKeyArrayOutput)
}

func (o GetAccessKeysResultOutput) Filters() GetAccessKeysFilterArrayOutput {
	return o.ApplyT(func(v GetAccessKeysResult) []GetAccessKeysFilter { return v.Filters }).(GetAccessKeysFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetAccessKeysResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccessKeysResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetAccessKeysResultOutput) RequestId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccessKeysResult) string { return v.RequestId }).(pulumi.StringOutput)
}

func (o GetAccessKeysResultOutput) States() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetAccessKeysResult) []string { return v.States }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetAccessKeysResultOutput{})
}
