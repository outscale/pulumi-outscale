// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package outscale

import (
	"context"
	"reflect"

	"github.com/outscale/pulumi-outscale/sdk/go/outscale/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides information about images.
//
// For more information on this resource, see the [User Guide](https://docs.outscale.com/en/userguide/About-OMIs.html).\
// For more information on this resource actions, see the [API documentation](https://docs.outscale.com/api#3ds-outscale-api-image).
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/outscale/pulumi-outscale/sdk/go/outscale"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := outscale.GetImages(ctx, &outscale.GetImagesArgs{
//				Filters: []outscale.GetImagesFilter{
//					{
//						Name: "account_aliases",
//						Values: []string{
//							"Outscale",
//						},
//					},
//					{
//						Name: "image_names",
//						Values: []string{
//							"Ubuntu*",
//							"RockyLinux*",
//						},
//					},
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetImages(ctx *pulumi.Context, args *GetImagesArgs, opts ...pulumi.InvokeOption) (*GetImagesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetImagesResult
	err := ctx.Invoke("outscale:index/getImages:getImages", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getImages.
type GetImagesArgs struct {
	// One or more account IDs that the permission is associated with.
	AccountIds []string `pulumi:"accountIds"`
	// A combination of a filter name and one or more filter values. You can specify this argument for as many filter names as you need. The filter name can be any of the following:
	Filters     []GetImagesFilter `pulumi:"filters"`
	ImageIds    []string          `pulumi:"imageIds"`
	Permissions []string          `pulumi:"permissions"`
}

// A collection of values returned by getImages.
type GetImagesResult struct {
	// One or more account IDs that the permission is associated with.
	AccountIds []string          `pulumi:"accountIds"`
	Filters    []GetImagesFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id       string   `pulumi:"id"`
	ImageIds []string `pulumi:"imageIds"`
	// Information about one or more OMIs.
	Images      []GetImagesImage `pulumi:"images"`
	Permissions []string         `pulumi:"permissions"`
	RequestId   string           `pulumi:"requestId"`
}

func GetImagesOutput(ctx *pulumi.Context, args GetImagesOutputArgs, opts ...pulumi.InvokeOption) GetImagesResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetImagesResultOutput, error) {
			args := v.(GetImagesArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("outscale:index/getImages:getImages", args, GetImagesResultOutput{}, options).(GetImagesResultOutput), nil
		}).(GetImagesResultOutput)
}

// A collection of arguments for invoking getImages.
type GetImagesOutputArgs struct {
	// One or more account IDs that the permission is associated with.
	AccountIds pulumi.StringArrayInput `pulumi:"accountIds"`
	// A combination of a filter name and one or more filter values. You can specify this argument for as many filter names as you need. The filter name can be any of the following:
	Filters     GetImagesFilterArrayInput `pulumi:"filters"`
	ImageIds    pulumi.StringArrayInput   `pulumi:"imageIds"`
	Permissions pulumi.StringArrayInput   `pulumi:"permissions"`
}

func (GetImagesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImagesArgs)(nil)).Elem()
}

// A collection of values returned by getImages.
type GetImagesResultOutput struct{ *pulumi.OutputState }

func (GetImagesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImagesResult)(nil)).Elem()
}

func (o GetImagesResultOutput) ToGetImagesResultOutput() GetImagesResultOutput {
	return o
}

func (o GetImagesResultOutput) ToGetImagesResultOutputWithContext(ctx context.Context) GetImagesResultOutput {
	return o
}

// One or more account IDs that the permission is associated with.
func (o GetImagesResultOutput) AccountIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetImagesResult) []string { return v.AccountIds }).(pulumi.StringArrayOutput)
}

func (o GetImagesResultOutput) Filters() GetImagesFilterArrayOutput {
	return o.ApplyT(func(v GetImagesResult) []GetImagesFilter { return v.Filters }).(GetImagesFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetImagesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetImagesResultOutput) ImageIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetImagesResult) []string { return v.ImageIds }).(pulumi.StringArrayOutput)
}

// Information about one or more OMIs.
func (o GetImagesResultOutput) Images() GetImagesImageArrayOutput {
	return o.ApplyT(func(v GetImagesResult) []GetImagesImage { return v.Images }).(GetImagesImageArrayOutput)
}

func (o GetImagesResultOutput) Permissions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetImagesResult) []string { return v.Permissions }).(pulumi.StringArrayOutput)
}

func (o GetImagesResultOutput) RequestId() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesResult) string { return v.RequestId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetImagesResultOutput{})
}
