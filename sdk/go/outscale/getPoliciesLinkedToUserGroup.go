// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package outscale

import (
	"context"
	"reflect"

	"github.com/outscale/pulumi-outscale/sdk/go/outscale/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides information about a link policy to user group.
//
// For more information on this resource, see the [User Guide](https://docs.outscale.com/en/userguide/About-Policies.html).\
// For more information on this resource actions, see the [API documentation](https://docs.outscale.com/api.html#readmanagedpolicieslinkedtousergroup).
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/outscale/pulumi-outscale/sdk/go/outscale"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := outscale.GetPoliciesLinkedToUserGroup(ctx, &outscale.GetPoliciesLinkedToUserGroupArgs{
//				UserGroupName: "user_group_name",
//				Filters: []outscale.GetPoliciesLinkedToUserGroupFilter{
//					{
//						Name: "user_group_ids",
//						Values: []string{
//							"XXXXXXX",
//							"YYYYYY",
//						},
//					},
//					{
//						Name: "path_prefix",
//						Values: []string{
//							"/test/",
//						},
//					},
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetPoliciesLinkedToUserGroup(ctx *pulumi.Context, args *GetPoliciesLinkedToUserGroupArgs, opts ...pulumi.InvokeOption) (*GetPoliciesLinkedToUserGroupResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetPoliciesLinkedToUserGroupResult
	err := ctx.Invoke("outscale:index/getPoliciesLinkedToUserGroup:getPoliciesLinkedToUserGroup", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getPoliciesLinkedToUserGroup.
type GetPoliciesLinkedToUserGroupArgs struct {
	Filters []GetPoliciesLinkedToUserGroupFilter `pulumi:"filters"`
	// The name of the group.
	UserGroupName string `pulumi:"userGroupName"`
}

// A collection of values returned by getPoliciesLinkedToUserGroup.
type GetPoliciesLinkedToUserGroupResult struct {
	Filters []GetPoliciesLinkedToUserGroupFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id            string                               `pulumi:"id"`
	Policies      []GetPoliciesLinkedToUserGroupPolicy `pulumi:"policies"`
	UserGroupName string                               `pulumi:"userGroupName"`
}

func GetPoliciesLinkedToUserGroupOutput(ctx *pulumi.Context, args GetPoliciesLinkedToUserGroupOutputArgs, opts ...pulumi.InvokeOption) GetPoliciesLinkedToUserGroupResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetPoliciesLinkedToUserGroupResultOutput, error) {
			args := v.(GetPoliciesLinkedToUserGroupArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("outscale:index/getPoliciesLinkedToUserGroup:getPoliciesLinkedToUserGroup", args, GetPoliciesLinkedToUserGroupResultOutput{}, options).(GetPoliciesLinkedToUserGroupResultOutput), nil
		}).(GetPoliciesLinkedToUserGroupResultOutput)
}

// A collection of arguments for invoking getPoliciesLinkedToUserGroup.
type GetPoliciesLinkedToUserGroupOutputArgs struct {
	Filters GetPoliciesLinkedToUserGroupFilterArrayInput `pulumi:"filters"`
	// The name of the group.
	UserGroupName pulumi.StringInput `pulumi:"userGroupName"`
}

func (GetPoliciesLinkedToUserGroupOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPoliciesLinkedToUserGroupArgs)(nil)).Elem()
}

// A collection of values returned by getPoliciesLinkedToUserGroup.
type GetPoliciesLinkedToUserGroupResultOutput struct{ *pulumi.OutputState }

func (GetPoliciesLinkedToUserGroupResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPoliciesLinkedToUserGroupResult)(nil)).Elem()
}

func (o GetPoliciesLinkedToUserGroupResultOutput) ToGetPoliciesLinkedToUserGroupResultOutput() GetPoliciesLinkedToUserGroupResultOutput {
	return o
}

func (o GetPoliciesLinkedToUserGroupResultOutput) ToGetPoliciesLinkedToUserGroupResultOutputWithContext(ctx context.Context) GetPoliciesLinkedToUserGroupResultOutput {
	return o
}

func (o GetPoliciesLinkedToUserGroupResultOutput) Filters() GetPoliciesLinkedToUserGroupFilterArrayOutput {
	return o.ApplyT(func(v GetPoliciesLinkedToUserGroupResult) []GetPoliciesLinkedToUserGroupFilter { return v.Filters }).(GetPoliciesLinkedToUserGroupFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetPoliciesLinkedToUserGroupResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoliciesLinkedToUserGroupResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetPoliciesLinkedToUserGroupResultOutput) Policies() GetPoliciesLinkedToUserGroupPolicyArrayOutput {
	return o.ApplyT(func(v GetPoliciesLinkedToUserGroupResult) []GetPoliciesLinkedToUserGroupPolicy { return v.Policies }).(GetPoliciesLinkedToUserGroupPolicyArrayOutput)
}

func (o GetPoliciesLinkedToUserGroupResultOutput) UserGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoliciesLinkedToUserGroupResult) string { return v.UserGroupName }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetPoliciesLinkedToUserGroupResultOutput{})
}
