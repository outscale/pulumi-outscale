// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package outscale

import (
	"context"
	"reflect"

	"github.com/outscale/pulumi-outscale/sdk/go/outscale/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type AccessKeyTimeouts struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Create *string `pulumi:"create"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
	Delete *string `pulumi:"delete"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
	Read *string `pulumi:"read"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Update *string `pulumi:"update"`
}

// AccessKeyTimeoutsInput is an input type that accepts AccessKeyTimeoutsArgs and AccessKeyTimeoutsOutput values.
// You can construct a concrete instance of `AccessKeyTimeoutsInput` via:
//
//	AccessKeyTimeoutsArgs{...}
type AccessKeyTimeoutsInput interface {
	pulumi.Input

	ToAccessKeyTimeoutsOutput() AccessKeyTimeoutsOutput
	ToAccessKeyTimeoutsOutputWithContext(context.Context) AccessKeyTimeoutsOutput
}

type AccessKeyTimeoutsArgs struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Create pulumi.StringPtrInput `pulumi:"create"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
	Delete pulumi.StringPtrInput `pulumi:"delete"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
	Read pulumi.StringPtrInput `pulumi:"read"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Update pulumi.StringPtrInput `pulumi:"update"`
}

func (AccessKeyTimeoutsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessKeyTimeouts)(nil)).Elem()
}

func (i AccessKeyTimeoutsArgs) ToAccessKeyTimeoutsOutput() AccessKeyTimeoutsOutput {
	return i.ToAccessKeyTimeoutsOutputWithContext(context.Background())
}

func (i AccessKeyTimeoutsArgs) ToAccessKeyTimeoutsOutputWithContext(ctx context.Context) AccessKeyTimeoutsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessKeyTimeoutsOutput)
}

func (i AccessKeyTimeoutsArgs) ToAccessKeyTimeoutsPtrOutput() AccessKeyTimeoutsPtrOutput {
	return i.ToAccessKeyTimeoutsPtrOutputWithContext(context.Background())
}

func (i AccessKeyTimeoutsArgs) ToAccessKeyTimeoutsPtrOutputWithContext(ctx context.Context) AccessKeyTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessKeyTimeoutsOutput).ToAccessKeyTimeoutsPtrOutputWithContext(ctx)
}

// AccessKeyTimeoutsPtrInput is an input type that accepts AccessKeyTimeoutsArgs, AccessKeyTimeoutsPtr and AccessKeyTimeoutsPtrOutput values.
// You can construct a concrete instance of `AccessKeyTimeoutsPtrInput` via:
//
//	        AccessKeyTimeoutsArgs{...}
//
//	or:
//
//	        nil
type AccessKeyTimeoutsPtrInput interface {
	pulumi.Input

	ToAccessKeyTimeoutsPtrOutput() AccessKeyTimeoutsPtrOutput
	ToAccessKeyTimeoutsPtrOutputWithContext(context.Context) AccessKeyTimeoutsPtrOutput
}

type accessKeyTimeoutsPtrType AccessKeyTimeoutsArgs

func AccessKeyTimeoutsPtr(v *AccessKeyTimeoutsArgs) AccessKeyTimeoutsPtrInput {
	return (*accessKeyTimeoutsPtrType)(v)
}

func (*accessKeyTimeoutsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessKeyTimeouts)(nil)).Elem()
}

func (i *accessKeyTimeoutsPtrType) ToAccessKeyTimeoutsPtrOutput() AccessKeyTimeoutsPtrOutput {
	return i.ToAccessKeyTimeoutsPtrOutputWithContext(context.Background())
}

func (i *accessKeyTimeoutsPtrType) ToAccessKeyTimeoutsPtrOutputWithContext(ctx context.Context) AccessKeyTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessKeyTimeoutsPtrOutput)
}

type AccessKeyTimeoutsOutput struct{ *pulumi.OutputState }

func (AccessKeyTimeoutsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessKeyTimeouts)(nil)).Elem()
}

func (o AccessKeyTimeoutsOutput) ToAccessKeyTimeoutsOutput() AccessKeyTimeoutsOutput {
	return o
}

func (o AccessKeyTimeoutsOutput) ToAccessKeyTimeoutsOutputWithContext(ctx context.Context) AccessKeyTimeoutsOutput {
	return o
}

func (o AccessKeyTimeoutsOutput) ToAccessKeyTimeoutsPtrOutput() AccessKeyTimeoutsPtrOutput {
	return o.ToAccessKeyTimeoutsPtrOutputWithContext(context.Background())
}

func (o AccessKeyTimeoutsOutput) ToAccessKeyTimeoutsPtrOutputWithContext(ctx context.Context) AccessKeyTimeoutsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AccessKeyTimeouts) *AccessKeyTimeouts {
		return &v
	}).(AccessKeyTimeoutsPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o AccessKeyTimeoutsOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessKeyTimeouts) *string { return v.Create }).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
func (o AccessKeyTimeoutsOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessKeyTimeouts) *string { return v.Delete }).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
func (o AccessKeyTimeoutsOutput) Read() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessKeyTimeouts) *string { return v.Read }).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o AccessKeyTimeoutsOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessKeyTimeouts) *string { return v.Update }).(pulumi.StringPtrOutput)
}

type AccessKeyTimeoutsPtrOutput struct{ *pulumi.OutputState }

func (AccessKeyTimeoutsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessKeyTimeouts)(nil)).Elem()
}

func (o AccessKeyTimeoutsPtrOutput) ToAccessKeyTimeoutsPtrOutput() AccessKeyTimeoutsPtrOutput {
	return o
}

func (o AccessKeyTimeoutsPtrOutput) ToAccessKeyTimeoutsPtrOutputWithContext(ctx context.Context) AccessKeyTimeoutsPtrOutput {
	return o
}

func (o AccessKeyTimeoutsPtrOutput) Elem() AccessKeyTimeoutsOutput {
	return o.ApplyT(func(v *AccessKeyTimeouts) AccessKeyTimeouts {
		if v != nil {
			return *v
		}
		var ret AccessKeyTimeouts
		return ret
	}).(AccessKeyTimeoutsOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o AccessKeyTimeoutsPtrOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccessKeyTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Create
	}).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
func (o AccessKeyTimeoutsPtrOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccessKeyTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Delete
	}).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
func (o AccessKeyTimeoutsPtrOutput) Read() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccessKeyTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Read
	}).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o AccessKeyTimeoutsPtrOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccessKeyTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Update
	}).(pulumi.StringPtrOutput)
}

type ClientGatewayTag struct {
	// The key of the tag, with a minimum of 1 character.
	Key *string `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value *string `pulumi:"value"`
}

// ClientGatewayTagInput is an input type that accepts ClientGatewayTagArgs and ClientGatewayTagOutput values.
// You can construct a concrete instance of `ClientGatewayTagInput` via:
//
//	ClientGatewayTagArgs{...}
type ClientGatewayTagInput interface {
	pulumi.Input

	ToClientGatewayTagOutput() ClientGatewayTagOutput
	ToClientGatewayTagOutputWithContext(context.Context) ClientGatewayTagOutput
}

type ClientGatewayTagArgs struct {
	// The key of the tag, with a minimum of 1 character.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ClientGatewayTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientGatewayTag)(nil)).Elem()
}

func (i ClientGatewayTagArgs) ToClientGatewayTagOutput() ClientGatewayTagOutput {
	return i.ToClientGatewayTagOutputWithContext(context.Background())
}

func (i ClientGatewayTagArgs) ToClientGatewayTagOutputWithContext(ctx context.Context) ClientGatewayTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientGatewayTagOutput)
}

// ClientGatewayTagArrayInput is an input type that accepts ClientGatewayTagArray and ClientGatewayTagArrayOutput values.
// You can construct a concrete instance of `ClientGatewayTagArrayInput` via:
//
//	ClientGatewayTagArray{ ClientGatewayTagArgs{...} }
type ClientGatewayTagArrayInput interface {
	pulumi.Input

	ToClientGatewayTagArrayOutput() ClientGatewayTagArrayOutput
	ToClientGatewayTagArrayOutputWithContext(context.Context) ClientGatewayTagArrayOutput
}

type ClientGatewayTagArray []ClientGatewayTagInput

func (ClientGatewayTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClientGatewayTag)(nil)).Elem()
}

func (i ClientGatewayTagArray) ToClientGatewayTagArrayOutput() ClientGatewayTagArrayOutput {
	return i.ToClientGatewayTagArrayOutputWithContext(context.Background())
}

func (i ClientGatewayTagArray) ToClientGatewayTagArrayOutputWithContext(ctx context.Context) ClientGatewayTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientGatewayTagArrayOutput)
}

type ClientGatewayTagOutput struct{ *pulumi.OutputState }

func (ClientGatewayTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientGatewayTag)(nil)).Elem()
}

func (o ClientGatewayTagOutput) ToClientGatewayTagOutput() ClientGatewayTagOutput {
	return o
}

func (o ClientGatewayTagOutput) ToClientGatewayTagOutputWithContext(ctx context.Context) ClientGatewayTagOutput {
	return o
}

// The key of the tag, with a minimum of 1 character.
func (o ClientGatewayTagOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientGatewayTag) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The value of the tag, between 0 and 255 characters.
func (o ClientGatewayTagOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientGatewayTag) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ClientGatewayTagArrayOutput struct{ *pulumi.OutputState }

func (ClientGatewayTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClientGatewayTag)(nil)).Elem()
}

func (o ClientGatewayTagArrayOutput) ToClientGatewayTagArrayOutput() ClientGatewayTagArrayOutput {
	return o
}

func (o ClientGatewayTagArrayOutput) ToClientGatewayTagArrayOutputWithContext(ctx context.Context) ClientGatewayTagArrayOutput {
	return o
}

func (o ClientGatewayTagArrayOutput) Index(i pulumi.IntInput) ClientGatewayTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClientGatewayTag {
		return vs[0].([]ClientGatewayTag)[vs[1].(int)]
	}).(ClientGatewayTagOutput)
}

type DhcpOptionTag struct {
	// The key of the tag, with a minimum of 1 character.
	Key *string `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value *string `pulumi:"value"`
}

// DhcpOptionTagInput is an input type that accepts DhcpOptionTagArgs and DhcpOptionTagOutput values.
// You can construct a concrete instance of `DhcpOptionTagInput` via:
//
//	DhcpOptionTagArgs{...}
type DhcpOptionTagInput interface {
	pulumi.Input

	ToDhcpOptionTagOutput() DhcpOptionTagOutput
	ToDhcpOptionTagOutputWithContext(context.Context) DhcpOptionTagOutput
}

type DhcpOptionTagArgs struct {
	// The key of the tag, with a minimum of 1 character.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (DhcpOptionTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DhcpOptionTag)(nil)).Elem()
}

func (i DhcpOptionTagArgs) ToDhcpOptionTagOutput() DhcpOptionTagOutput {
	return i.ToDhcpOptionTagOutputWithContext(context.Background())
}

func (i DhcpOptionTagArgs) ToDhcpOptionTagOutputWithContext(ctx context.Context) DhcpOptionTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DhcpOptionTagOutput)
}

// DhcpOptionTagArrayInput is an input type that accepts DhcpOptionTagArray and DhcpOptionTagArrayOutput values.
// You can construct a concrete instance of `DhcpOptionTagArrayInput` via:
//
//	DhcpOptionTagArray{ DhcpOptionTagArgs{...} }
type DhcpOptionTagArrayInput interface {
	pulumi.Input

	ToDhcpOptionTagArrayOutput() DhcpOptionTagArrayOutput
	ToDhcpOptionTagArrayOutputWithContext(context.Context) DhcpOptionTagArrayOutput
}

type DhcpOptionTagArray []DhcpOptionTagInput

func (DhcpOptionTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DhcpOptionTag)(nil)).Elem()
}

func (i DhcpOptionTagArray) ToDhcpOptionTagArrayOutput() DhcpOptionTagArrayOutput {
	return i.ToDhcpOptionTagArrayOutputWithContext(context.Background())
}

func (i DhcpOptionTagArray) ToDhcpOptionTagArrayOutputWithContext(ctx context.Context) DhcpOptionTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DhcpOptionTagArrayOutput)
}

type DhcpOptionTagOutput struct{ *pulumi.OutputState }

func (DhcpOptionTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DhcpOptionTag)(nil)).Elem()
}

func (o DhcpOptionTagOutput) ToDhcpOptionTagOutput() DhcpOptionTagOutput {
	return o
}

func (o DhcpOptionTagOutput) ToDhcpOptionTagOutputWithContext(ctx context.Context) DhcpOptionTagOutput {
	return o
}

// The key of the tag, with a minimum of 1 character.
func (o DhcpOptionTagOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DhcpOptionTag) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The value of the tag, between 0 and 255 characters.
func (o DhcpOptionTagOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DhcpOptionTag) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type DhcpOptionTagArrayOutput struct{ *pulumi.OutputState }

func (DhcpOptionTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DhcpOptionTag)(nil)).Elem()
}

func (o DhcpOptionTagArrayOutput) ToDhcpOptionTagArrayOutput() DhcpOptionTagArrayOutput {
	return o
}

func (o DhcpOptionTagArrayOutput) ToDhcpOptionTagArrayOutputWithContext(ctx context.Context) DhcpOptionTagArrayOutput {
	return o
}

func (o DhcpOptionTagArrayOutput) Index(i pulumi.IntInput) DhcpOptionTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DhcpOptionTag {
		return vs[0].([]DhcpOptionTag)[vs[1].(int)]
	}).(DhcpOptionTagOutput)
}

type FlexibleGpuTimeouts struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Create *string `pulumi:"create"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
	Delete *string `pulumi:"delete"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
	Read *string `pulumi:"read"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Update *string `pulumi:"update"`
}

// FlexibleGpuTimeoutsInput is an input type that accepts FlexibleGpuTimeoutsArgs and FlexibleGpuTimeoutsOutput values.
// You can construct a concrete instance of `FlexibleGpuTimeoutsInput` via:
//
//	FlexibleGpuTimeoutsArgs{...}
type FlexibleGpuTimeoutsInput interface {
	pulumi.Input

	ToFlexibleGpuTimeoutsOutput() FlexibleGpuTimeoutsOutput
	ToFlexibleGpuTimeoutsOutputWithContext(context.Context) FlexibleGpuTimeoutsOutput
}

type FlexibleGpuTimeoutsArgs struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Create pulumi.StringPtrInput `pulumi:"create"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
	Delete pulumi.StringPtrInput `pulumi:"delete"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
	Read pulumi.StringPtrInput `pulumi:"read"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Update pulumi.StringPtrInput `pulumi:"update"`
}

func (FlexibleGpuTimeoutsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlexibleGpuTimeouts)(nil)).Elem()
}

func (i FlexibleGpuTimeoutsArgs) ToFlexibleGpuTimeoutsOutput() FlexibleGpuTimeoutsOutput {
	return i.ToFlexibleGpuTimeoutsOutputWithContext(context.Background())
}

func (i FlexibleGpuTimeoutsArgs) ToFlexibleGpuTimeoutsOutputWithContext(ctx context.Context) FlexibleGpuTimeoutsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlexibleGpuTimeoutsOutput)
}

func (i FlexibleGpuTimeoutsArgs) ToFlexibleGpuTimeoutsPtrOutput() FlexibleGpuTimeoutsPtrOutput {
	return i.ToFlexibleGpuTimeoutsPtrOutputWithContext(context.Background())
}

func (i FlexibleGpuTimeoutsArgs) ToFlexibleGpuTimeoutsPtrOutputWithContext(ctx context.Context) FlexibleGpuTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlexibleGpuTimeoutsOutput).ToFlexibleGpuTimeoutsPtrOutputWithContext(ctx)
}

// FlexibleGpuTimeoutsPtrInput is an input type that accepts FlexibleGpuTimeoutsArgs, FlexibleGpuTimeoutsPtr and FlexibleGpuTimeoutsPtrOutput values.
// You can construct a concrete instance of `FlexibleGpuTimeoutsPtrInput` via:
//
//	        FlexibleGpuTimeoutsArgs{...}
//
//	or:
//
//	        nil
type FlexibleGpuTimeoutsPtrInput interface {
	pulumi.Input

	ToFlexibleGpuTimeoutsPtrOutput() FlexibleGpuTimeoutsPtrOutput
	ToFlexibleGpuTimeoutsPtrOutputWithContext(context.Context) FlexibleGpuTimeoutsPtrOutput
}

type flexibleGpuTimeoutsPtrType FlexibleGpuTimeoutsArgs

func FlexibleGpuTimeoutsPtr(v *FlexibleGpuTimeoutsArgs) FlexibleGpuTimeoutsPtrInput {
	return (*flexibleGpuTimeoutsPtrType)(v)
}

func (*flexibleGpuTimeoutsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlexibleGpuTimeouts)(nil)).Elem()
}

func (i *flexibleGpuTimeoutsPtrType) ToFlexibleGpuTimeoutsPtrOutput() FlexibleGpuTimeoutsPtrOutput {
	return i.ToFlexibleGpuTimeoutsPtrOutputWithContext(context.Background())
}

func (i *flexibleGpuTimeoutsPtrType) ToFlexibleGpuTimeoutsPtrOutputWithContext(ctx context.Context) FlexibleGpuTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlexibleGpuTimeoutsPtrOutput)
}

type FlexibleGpuTimeoutsOutput struct{ *pulumi.OutputState }

func (FlexibleGpuTimeoutsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlexibleGpuTimeouts)(nil)).Elem()
}

func (o FlexibleGpuTimeoutsOutput) ToFlexibleGpuTimeoutsOutput() FlexibleGpuTimeoutsOutput {
	return o
}

func (o FlexibleGpuTimeoutsOutput) ToFlexibleGpuTimeoutsOutputWithContext(ctx context.Context) FlexibleGpuTimeoutsOutput {
	return o
}

func (o FlexibleGpuTimeoutsOutput) ToFlexibleGpuTimeoutsPtrOutput() FlexibleGpuTimeoutsPtrOutput {
	return o.ToFlexibleGpuTimeoutsPtrOutputWithContext(context.Background())
}

func (o FlexibleGpuTimeoutsOutput) ToFlexibleGpuTimeoutsPtrOutputWithContext(ctx context.Context) FlexibleGpuTimeoutsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlexibleGpuTimeouts) *FlexibleGpuTimeouts {
		return &v
	}).(FlexibleGpuTimeoutsPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o FlexibleGpuTimeoutsOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlexibleGpuTimeouts) *string { return v.Create }).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
func (o FlexibleGpuTimeoutsOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlexibleGpuTimeouts) *string { return v.Delete }).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
func (o FlexibleGpuTimeoutsOutput) Read() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlexibleGpuTimeouts) *string { return v.Read }).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o FlexibleGpuTimeoutsOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlexibleGpuTimeouts) *string { return v.Update }).(pulumi.StringPtrOutput)
}

type FlexibleGpuTimeoutsPtrOutput struct{ *pulumi.OutputState }

func (FlexibleGpuTimeoutsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlexibleGpuTimeouts)(nil)).Elem()
}

func (o FlexibleGpuTimeoutsPtrOutput) ToFlexibleGpuTimeoutsPtrOutput() FlexibleGpuTimeoutsPtrOutput {
	return o
}

func (o FlexibleGpuTimeoutsPtrOutput) ToFlexibleGpuTimeoutsPtrOutputWithContext(ctx context.Context) FlexibleGpuTimeoutsPtrOutput {
	return o
}

func (o FlexibleGpuTimeoutsPtrOutput) Elem() FlexibleGpuTimeoutsOutput {
	return o.ApplyT(func(v *FlexibleGpuTimeouts) FlexibleGpuTimeouts {
		if v != nil {
			return *v
		}
		var ret FlexibleGpuTimeouts
		return ret
	}).(FlexibleGpuTimeoutsOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o FlexibleGpuTimeoutsPtrOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlexibleGpuTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Create
	}).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
func (o FlexibleGpuTimeoutsPtrOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlexibleGpuTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Delete
	}).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
func (o FlexibleGpuTimeoutsPtrOutput) Read() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlexibleGpuTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Read
	}).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o FlexibleGpuTimeoutsPtrOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlexibleGpuTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Update
	}).(pulumi.StringPtrOutput)
}

type ImageBlockDeviceMapping struct {
	// Information about the BSU volume to create.
	Bsus []ImageBlockDeviceMappingBsus `pulumi:"bsus"`
	// The device name for the volume. For a root device, you must use `/dev/sda1`. For other volumes, you must use `/dev/sdX`, `/dev/sdXX`, `/dev/xvdX`, or `/dev/xvdXX` (where the first `X` is a letter between `b` and `z`, and the second `X` is a letter between `a` and `z`).
	DeviceName *string `pulumi:"deviceName"`
	// The name of the virtual device (`ephemeralN`).
	VirtualDeviceName *string `pulumi:"virtualDeviceName"`
}

// ImageBlockDeviceMappingInput is an input type that accepts ImageBlockDeviceMappingArgs and ImageBlockDeviceMappingOutput values.
// You can construct a concrete instance of `ImageBlockDeviceMappingInput` via:
//
//	ImageBlockDeviceMappingArgs{...}
type ImageBlockDeviceMappingInput interface {
	pulumi.Input

	ToImageBlockDeviceMappingOutput() ImageBlockDeviceMappingOutput
	ToImageBlockDeviceMappingOutputWithContext(context.Context) ImageBlockDeviceMappingOutput
}

type ImageBlockDeviceMappingArgs struct {
	// Information about the BSU volume to create.
	Bsus ImageBlockDeviceMappingBsusArrayInput `pulumi:"bsus"`
	// The device name for the volume. For a root device, you must use `/dev/sda1`. For other volumes, you must use `/dev/sdX`, `/dev/sdXX`, `/dev/xvdX`, or `/dev/xvdXX` (where the first `X` is a letter between `b` and `z`, and the second `X` is a letter between `a` and `z`).
	DeviceName pulumi.StringPtrInput `pulumi:"deviceName"`
	// The name of the virtual device (`ephemeralN`).
	VirtualDeviceName pulumi.StringPtrInput `pulumi:"virtualDeviceName"`
}

func (ImageBlockDeviceMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageBlockDeviceMapping)(nil)).Elem()
}

func (i ImageBlockDeviceMappingArgs) ToImageBlockDeviceMappingOutput() ImageBlockDeviceMappingOutput {
	return i.ToImageBlockDeviceMappingOutputWithContext(context.Background())
}

func (i ImageBlockDeviceMappingArgs) ToImageBlockDeviceMappingOutputWithContext(ctx context.Context) ImageBlockDeviceMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageBlockDeviceMappingOutput)
}

// ImageBlockDeviceMappingArrayInput is an input type that accepts ImageBlockDeviceMappingArray and ImageBlockDeviceMappingArrayOutput values.
// You can construct a concrete instance of `ImageBlockDeviceMappingArrayInput` via:
//
//	ImageBlockDeviceMappingArray{ ImageBlockDeviceMappingArgs{...} }
type ImageBlockDeviceMappingArrayInput interface {
	pulumi.Input

	ToImageBlockDeviceMappingArrayOutput() ImageBlockDeviceMappingArrayOutput
	ToImageBlockDeviceMappingArrayOutputWithContext(context.Context) ImageBlockDeviceMappingArrayOutput
}

type ImageBlockDeviceMappingArray []ImageBlockDeviceMappingInput

func (ImageBlockDeviceMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ImageBlockDeviceMapping)(nil)).Elem()
}

func (i ImageBlockDeviceMappingArray) ToImageBlockDeviceMappingArrayOutput() ImageBlockDeviceMappingArrayOutput {
	return i.ToImageBlockDeviceMappingArrayOutputWithContext(context.Background())
}

func (i ImageBlockDeviceMappingArray) ToImageBlockDeviceMappingArrayOutputWithContext(ctx context.Context) ImageBlockDeviceMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageBlockDeviceMappingArrayOutput)
}

type ImageBlockDeviceMappingOutput struct{ *pulumi.OutputState }

func (ImageBlockDeviceMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageBlockDeviceMapping)(nil)).Elem()
}

func (o ImageBlockDeviceMappingOutput) ToImageBlockDeviceMappingOutput() ImageBlockDeviceMappingOutput {
	return o
}

func (o ImageBlockDeviceMappingOutput) ToImageBlockDeviceMappingOutputWithContext(ctx context.Context) ImageBlockDeviceMappingOutput {
	return o
}

// Information about the BSU volume to create.
func (o ImageBlockDeviceMappingOutput) Bsus() ImageBlockDeviceMappingBsusArrayOutput {
	return o.ApplyT(func(v ImageBlockDeviceMapping) []ImageBlockDeviceMappingBsus { return v.Bsus }).(ImageBlockDeviceMappingBsusArrayOutput)
}

// The device name for the volume. For a root device, you must use `/dev/sda1`. For other volumes, you must use `/dev/sdX`, `/dev/sdXX`, `/dev/xvdX`, or `/dev/xvdXX` (where the first `X` is a letter between `b` and `z`, and the second `X` is a letter between `a` and `z`).
func (o ImageBlockDeviceMappingOutput) DeviceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageBlockDeviceMapping) *string { return v.DeviceName }).(pulumi.StringPtrOutput)
}

// The name of the virtual device (`ephemeralN`).
func (o ImageBlockDeviceMappingOutput) VirtualDeviceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageBlockDeviceMapping) *string { return v.VirtualDeviceName }).(pulumi.StringPtrOutput)
}

type ImageBlockDeviceMappingArrayOutput struct{ *pulumi.OutputState }

func (ImageBlockDeviceMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ImageBlockDeviceMapping)(nil)).Elem()
}

func (o ImageBlockDeviceMappingArrayOutput) ToImageBlockDeviceMappingArrayOutput() ImageBlockDeviceMappingArrayOutput {
	return o
}

func (o ImageBlockDeviceMappingArrayOutput) ToImageBlockDeviceMappingArrayOutputWithContext(ctx context.Context) ImageBlockDeviceMappingArrayOutput {
	return o
}

func (o ImageBlockDeviceMappingArrayOutput) Index(i pulumi.IntInput) ImageBlockDeviceMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ImageBlockDeviceMapping {
		return vs[0].([]ImageBlockDeviceMapping)[vs[1].(int)]
	}).(ImageBlockDeviceMappingOutput)
}

type ImageBlockDeviceMappingBsus struct {
	// By default or if set to true, the volume is deleted when terminating the VM. If false, the volume is not deleted when terminating the VM.
	DeleteOnVmDeletion *bool `pulumi:"deleteOnVmDeletion"`
	// The number of I/O operations per second (IOPS). This parameter must be specified only if you create an `io1` volume. The maximum number of IOPS allowed for `io1` volumes is `13000` with a maximum performance ratio of 300 IOPS per gibibyte.
	Iops *int `pulumi:"iops"`
	// The ID of the snapshot used to create the volume.
	SnapshotId *string `pulumi:"snapshotId"`
	// The size of the volume, in gibibytes (GiB).<br />
	// If you specify a snapshot ID, the volume size must be at least equal to the snapshot size.<br />
	// If you specify a snapshot ID but no volume size, the volume is created with a size similar to the snapshot one.
	VolumeSize *int `pulumi:"volumeSize"`
	// The type of the volume (`standard` \| `io1` \| `gp2`). If not specified in the request, a `standard` volume is created.<br />
	// For more information about volume types, see [About Volumes > Volume Types and IOPS](https://docs.outscale.com/en/userguide/About-Volumes.html#_volume_types_and_iops).
	VolumeType *string `pulumi:"volumeType"`
}

// ImageBlockDeviceMappingBsusInput is an input type that accepts ImageBlockDeviceMappingBsusArgs and ImageBlockDeviceMappingBsusOutput values.
// You can construct a concrete instance of `ImageBlockDeviceMappingBsusInput` via:
//
//	ImageBlockDeviceMappingBsusArgs{...}
type ImageBlockDeviceMappingBsusInput interface {
	pulumi.Input

	ToImageBlockDeviceMappingBsusOutput() ImageBlockDeviceMappingBsusOutput
	ToImageBlockDeviceMappingBsusOutputWithContext(context.Context) ImageBlockDeviceMappingBsusOutput
}

type ImageBlockDeviceMappingBsusArgs struct {
	// By default or if set to true, the volume is deleted when terminating the VM. If false, the volume is not deleted when terminating the VM.
	DeleteOnVmDeletion pulumi.BoolPtrInput `pulumi:"deleteOnVmDeletion"`
	// The number of I/O operations per second (IOPS). This parameter must be specified only if you create an `io1` volume. The maximum number of IOPS allowed for `io1` volumes is `13000` with a maximum performance ratio of 300 IOPS per gibibyte.
	Iops pulumi.IntPtrInput `pulumi:"iops"`
	// The ID of the snapshot used to create the volume.
	SnapshotId pulumi.StringPtrInput `pulumi:"snapshotId"`
	// The size of the volume, in gibibytes (GiB).<br />
	// If you specify a snapshot ID, the volume size must be at least equal to the snapshot size.<br />
	// If you specify a snapshot ID but no volume size, the volume is created with a size similar to the snapshot one.
	VolumeSize pulumi.IntPtrInput `pulumi:"volumeSize"`
	// The type of the volume (`standard` \| `io1` \| `gp2`). If not specified in the request, a `standard` volume is created.<br />
	// For more information about volume types, see [About Volumes > Volume Types and IOPS](https://docs.outscale.com/en/userguide/About-Volumes.html#_volume_types_and_iops).
	VolumeType pulumi.StringPtrInput `pulumi:"volumeType"`
}

func (ImageBlockDeviceMappingBsusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageBlockDeviceMappingBsus)(nil)).Elem()
}

func (i ImageBlockDeviceMappingBsusArgs) ToImageBlockDeviceMappingBsusOutput() ImageBlockDeviceMappingBsusOutput {
	return i.ToImageBlockDeviceMappingBsusOutputWithContext(context.Background())
}

func (i ImageBlockDeviceMappingBsusArgs) ToImageBlockDeviceMappingBsusOutputWithContext(ctx context.Context) ImageBlockDeviceMappingBsusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageBlockDeviceMappingBsusOutput)
}

// ImageBlockDeviceMappingBsusArrayInput is an input type that accepts ImageBlockDeviceMappingBsusArray and ImageBlockDeviceMappingBsusArrayOutput values.
// You can construct a concrete instance of `ImageBlockDeviceMappingBsusArrayInput` via:
//
//	ImageBlockDeviceMappingBsusArray{ ImageBlockDeviceMappingBsusArgs{...} }
type ImageBlockDeviceMappingBsusArrayInput interface {
	pulumi.Input

	ToImageBlockDeviceMappingBsusArrayOutput() ImageBlockDeviceMappingBsusArrayOutput
	ToImageBlockDeviceMappingBsusArrayOutputWithContext(context.Context) ImageBlockDeviceMappingBsusArrayOutput
}

type ImageBlockDeviceMappingBsusArray []ImageBlockDeviceMappingBsusInput

func (ImageBlockDeviceMappingBsusArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ImageBlockDeviceMappingBsus)(nil)).Elem()
}

func (i ImageBlockDeviceMappingBsusArray) ToImageBlockDeviceMappingBsusArrayOutput() ImageBlockDeviceMappingBsusArrayOutput {
	return i.ToImageBlockDeviceMappingBsusArrayOutputWithContext(context.Background())
}

func (i ImageBlockDeviceMappingBsusArray) ToImageBlockDeviceMappingBsusArrayOutputWithContext(ctx context.Context) ImageBlockDeviceMappingBsusArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageBlockDeviceMappingBsusArrayOutput)
}

type ImageBlockDeviceMappingBsusOutput struct{ *pulumi.OutputState }

func (ImageBlockDeviceMappingBsusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageBlockDeviceMappingBsus)(nil)).Elem()
}

func (o ImageBlockDeviceMappingBsusOutput) ToImageBlockDeviceMappingBsusOutput() ImageBlockDeviceMappingBsusOutput {
	return o
}

func (o ImageBlockDeviceMappingBsusOutput) ToImageBlockDeviceMappingBsusOutputWithContext(ctx context.Context) ImageBlockDeviceMappingBsusOutput {
	return o
}

// By default or if set to true, the volume is deleted when terminating the VM. If false, the volume is not deleted when terminating the VM.
func (o ImageBlockDeviceMappingBsusOutput) DeleteOnVmDeletion() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ImageBlockDeviceMappingBsus) *bool { return v.DeleteOnVmDeletion }).(pulumi.BoolPtrOutput)
}

// The number of I/O operations per second (IOPS). This parameter must be specified only if you create an `io1` volume. The maximum number of IOPS allowed for `io1` volumes is `13000` with a maximum performance ratio of 300 IOPS per gibibyte.
func (o ImageBlockDeviceMappingBsusOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ImageBlockDeviceMappingBsus) *int { return v.Iops }).(pulumi.IntPtrOutput)
}

// The ID of the snapshot used to create the volume.
func (o ImageBlockDeviceMappingBsusOutput) SnapshotId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageBlockDeviceMappingBsus) *string { return v.SnapshotId }).(pulumi.StringPtrOutput)
}

// The size of the volume, in gibibytes (GiB).<br />
// If you specify a snapshot ID, the volume size must be at least equal to the snapshot size.<br />
// If you specify a snapshot ID but no volume size, the volume is created with a size similar to the snapshot one.
func (o ImageBlockDeviceMappingBsusOutput) VolumeSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ImageBlockDeviceMappingBsus) *int { return v.VolumeSize }).(pulumi.IntPtrOutput)
}

// The type of the volume (`standard` \| `io1` \| `gp2`). If not specified in the request, a `standard` volume is created.<br />
// For more information about volume types, see [About Volumes > Volume Types and IOPS](https://docs.outscale.com/en/userguide/About-Volumes.html#_volume_types_and_iops).
func (o ImageBlockDeviceMappingBsusOutput) VolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageBlockDeviceMappingBsus) *string { return v.VolumeType }).(pulumi.StringPtrOutput)
}

type ImageBlockDeviceMappingBsusArrayOutput struct{ *pulumi.OutputState }

func (ImageBlockDeviceMappingBsusArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ImageBlockDeviceMappingBsus)(nil)).Elem()
}

func (o ImageBlockDeviceMappingBsusArrayOutput) ToImageBlockDeviceMappingBsusArrayOutput() ImageBlockDeviceMappingBsusArrayOutput {
	return o
}

func (o ImageBlockDeviceMappingBsusArrayOutput) ToImageBlockDeviceMappingBsusArrayOutputWithContext(ctx context.Context) ImageBlockDeviceMappingBsusArrayOutput {
	return o
}

func (o ImageBlockDeviceMappingBsusArrayOutput) Index(i pulumi.IntInput) ImageBlockDeviceMappingBsusOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ImageBlockDeviceMappingBsus {
		return vs[0].([]ImageBlockDeviceMappingBsus)[vs[1].(int)]
	}).(ImageBlockDeviceMappingBsusOutput)
}

type ImageExportTaskOsuExport struct {
	// The format of the export disk (`qcow2` \| `raw`).
	DiskImageFormat string `pulumi:"diskImageFormat"`
	// Information about the OOS API key.
	OsuApiKeys []ImageExportTaskOsuExportOsuApiKey `pulumi:"osuApiKeys"`
	// The name of the OOS bucket where you want to export the object.
	OsuBucket string `pulumi:"osuBucket"`
	// The URL of the manifest file.
	OsuManifestUrl *string `pulumi:"osuManifestUrl"`
	// The prefix for the key of the OOS object.
	OsuPrefix *string `pulumi:"osuPrefix"`
}

// ImageExportTaskOsuExportInput is an input type that accepts ImageExportTaskOsuExportArgs and ImageExportTaskOsuExportOutput values.
// You can construct a concrete instance of `ImageExportTaskOsuExportInput` via:
//
//	ImageExportTaskOsuExportArgs{...}
type ImageExportTaskOsuExportInput interface {
	pulumi.Input

	ToImageExportTaskOsuExportOutput() ImageExportTaskOsuExportOutput
	ToImageExportTaskOsuExportOutputWithContext(context.Context) ImageExportTaskOsuExportOutput
}

type ImageExportTaskOsuExportArgs struct {
	// The format of the export disk (`qcow2` \| `raw`).
	DiskImageFormat pulumi.StringInput `pulumi:"diskImageFormat"`
	// Information about the OOS API key.
	OsuApiKeys ImageExportTaskOsuExportOsuApiKeyArrayInput `pulumi:"osuApiKeys"`
	// The name of the OOS bucket where you want to export the object.
	OsuBucket pulumi.StringInput `pulumi:"osuBucket"`
	// The URL of the manifest file.
	OsuManifestUrl pulumi.StringPtrInput `pulumi:"osuManifestUrl"`
	// The prefix for the key of the OOS object.
	OsuPrefix pulumi.StringPtrInput `pulumi:"osuPrefix"`
}

func (ImageExportTaskOsuExportArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageExportTaskOsuExport)(nil)).Elem()
}

func (i ImageExportTaskOsuExportArgs) ToImageExportTaskOsuExportOutput() ImageExportTaskOsuExportOutput {
	return i.ToImageExportTaskOsuExportOutputWithContext(context.Background())
}

func (i ImageExportTaskOsuExportArgs) ToImageExportTaskOsuExportOutputWithContext(ctx context.Context) ImageExportTaskOsuExportOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageExportTaskOsuExportOutput)
}

// ImageExportTaskOsuExportArrayInput is an input type that accepts ImageExportTaskOsuExportArray and ImageExportTaskOsuExportArrayOutput values.
// You can construct a concrete instance of `ImageExportTaskOsuExportArrayInput` via:
//
//	ImageExportTaskOsuExportArray{ ImageExportTaskOsuExportArgs{...} }
type ImageExportTaskOsuExportArrayInput interface {
	pulumi.Input

	ToImageExportTaskOsuExportArrayOutput() ImageExportTaskOsuExportArrayOutput
	ToImageExportTaskOsuExportArrayOutputWithContext(context.Context) ImageExportTaskOsuExportArrayOutput
}

type ImageExportTaskOsuExportArray []ImageExportTaskOsuExportInput

func (ImageExportTaskOsuExportArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ImageExportTaskOsuExport)(nil)).Elem()
}

func (i ImageExportTaskOsuExportArray) ToImageExportTaskOsuExportArrayOutput() ImageExportTaskOsuExportArrayOutput {
	return i.ToImageExportTaskOsuExportArrayOutputWithContext(context.Background())
}

func (i ImageExportTaskOsuExportArray) ToImageExportTaskOsuExportArrayOutputWithContext(ctx context.Context) ImageExportTaskOsuExportArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageExportTaskOsuExportArrayOutput)
}

type ImageExportTaskOsuExportOutput struct{ *pulumi.OutputState }

func (ImageExportTaskOsuExportOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageExportTaskOsuExport)(nil)).Elem()
}

func (o ImageExportTaskOsuExportOutput) ToImageExportTaskOsuExportOutput() ImageExportTaskOsuExportOutput {
	return o
}

func (o ImageExportTaskOsuExportOutput) ToImageExportTaskOsuExportOutputWithContext(ctx context.Context) ImageExportTaskOsuExportOutput {
	return o
}

// The format of the export disk (`qcow2` \| `raw`).
func (o ImageExportTaskOsuExportOutput) DiskImageFormat() pulumi.StringOutput {
	return o.ApplyT(func(v ImageExportTaskOsuExport) string { return v.DiskImageFormat }).(pulumi.StringOutput)
}

// Information about the OOS API key.
func (o ImageExportTaskOsuExportOutput) OsuApiKeys() ImageExportTaskOsuExportOsuApiKeyArrayOutput {
	return o.ApplyT(func(v ImageExportTaskOsuExport) []ImageExportTaskOsuExportOsuApiKey { return v.OsuApiKeys }).(ImageExportTaskOsuExportOsuApiKeyArrayOutput)
}

// The name of the OOS bucket where you want to export the object.
func (o ImageExportTaskOsuExportOutput) OsuBucket() pulumi.StringOutput {
	return o.ApplyT(func(v ImageExportTaskOsuExport) string { return v.OsuBucket }).(pulumi.StringOutput)
}

// The URL of the manifest file.
func (o ImageExportTaskOsuExportOutput) OsuManifestUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageExportTaskOsuExport) *string { return v.OsuManifestUrl }).(pulumi.StringPtrOutput)
}

// The prefix for the key of the OOS object.
func (o ImageExportTaskOsuExportOutput) OsuPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageExportTaskOsuExport) *string { return v.OsuPrefix }).(pulumi.StringPtrOutput)
}

type ImageExportTaskOsuExportArrayOutput struct{ *pulumi.OutputState }

func (ImageExportTaskOsuExportArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ImageExportTaskOsuExport)(nil)).Elem()
}

func (o ImageExportTaskOsuExportArrayOutput) ToImageExportTaskOsuExportArrayOutput() ImageExportTaskOsuExportArrayOutput {
	return o
}

func (o ImageExportTaskOsuExportArrayOutput) ToImageExportTaskOsuExportArrayOutputWithContext(ctx context.Context) ImageExportTaskOsuExportArrayOutput {
	return o
}

func (o ImageExportTaskOsuExportArrayOutput) Index(i pulumi.IntInput) ImageExportTaskOsuExportOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ImageExportTaskOsuExport {
		return vs[0].([]ImageExportTaskOsuExport)[vs[1].(int)]
	}).(ImageExportTaskOsuExportOutput)
}

type ImageExportTaskOsuExportOsuApiKey struct {
	// The API key of the OOS account that enables you to access the bucket.
	ApiKeyId string `pulumi:"apiKeyId"`
	// The secret key of the OOS account that enables you to access the bucket.
	SecretKey string `pulumi:"secretKey"`
}

// ImageExportTaskOsuExportOsuApiKeyInput is an input type that accepts ImageExportTaskOsuExportOsuApiKeyArgs and ImageExportTaskOsuExportOsuApiKeyOutput values.
// You can construct a concrete instance of `ImageExportTaskOsuExportOsuApiKeyInput` via:
//
//	ImageExportTaskOsuExportOsuApiKeyArgs{...}
type ImageExportTaskOsuExportOsuApiKeyInput interface {
	pulumi.Input

	ToImageExportTaskOsuExportOsuApiKeyOutput() ImageExportTaskOsuExportOsuApiKeyOutput
	ToImageExportTaskOsuExportOsuApiKeyOutputWithContext(context.Context) ImageExportTaskOsuExportOsuApiKeyOutput
}

type ImageExportTaskOsuExportOsuApiKeyArgs struct {
	// The API key of the OOS account that enables you to access the bucket.
	ApiKeyId pulumi.StringInput `pulumi:"apiKeyId"`
	// The secret key of the OOS account that enables you to access the bucket.
	SecretKey pulumi.StringInput `pulumi:"secretKey"`
}

func (ImageExportTaskOsuExportOsuApiKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageExportTaskOsuExportOsuApiKey)(nil)).Elem()
}

func (i ImageExportTaskOsuExportOsuApiKeyArgs) ToImageExportTaskOsuExportOsuApiKeyOutput() ImageExportTaskOsuExportOsuApiKeyOutput {
	return i.ToImageExportTaskOsuExportOsuApiKeyOutputWithContext(context.Background())
}

func (i ImageExportTaskOsuExportOsuApiKeyArgs) ToImageExportTaskOsuExportOsuApiKeyOutputWithContext(ctx context.Context) ImageExportTaskOsuExportOsuApiKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageExportTaskOsuExportOsuApiKeyOutput)
}

// ImageExportTaskOsuExportOsuApiKeyArrayInput is an input type that accepts ImageExportTaskOsuExportOsuApiKeyArray and ImageExportTaskOsuExportOsuApiKeyArrayOutput values.
// You can construct a concrete instance of `ImageExportTaskOsuExportOsuApiKeyArrayInput` via:
//
//	ImageExportTaskOsuExportOsuApiKeyArray{ ImageExportTaskOsuExportOsuApiKeyArgs{...} }
type ImageExportTaskOsuExportOsuApiKeyArrayInput interface {
	pulumi.Input

	ToImageExportTaskOsuExportOsuApiKeyArrayOutput() ImageExportTaskOsuExportOsuApiKeyArrayOutput
	ToImageExportTaskOsuExportOsuApiKeyArrayOutputWithContext(context.Context) ImageExportTaskOsuExportOsuApiKeyArrayOutput
}

type ImageExportTaskOsuExportOsuApiKeyArray []ImageExportTaskOsuExportOsuApiKeyInput

func (ImageExportTaskOsuExportOsuApiKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ImageExportTaskOsuExportOsuApiKey)(nil)).Elem()
}

func (i ImageExportTaskOsuExportOsuApiKeyArray) ToImageExportTaskOsuExportOsuApiKeyArrayOutput() ImageExportTaskOsuExportOsuApiKeyArrayOutput {
	return i.ToImageExportTaskOsuExportOsuApiKeyArrayOutputWithContext(context.Background())
}

func (i ImageExportTaskOsuExportOsuApiKeyArray) ToImageExportTaskOsuExportOsuApiKeyArrayOutputWithContext(ctx context.Context) ImageExportTaskOsuExportOsuApiKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageExportTaskOsuExportOsuApiKeyArrayOutput)
}

type ImageExportTaskOsuExportOsuApiKeyOutput struct{ *pulumi.OutputState }

func (ImageExportTaskOsuExportOsuApiKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageExportTaskOsuExportOsuApiKey)(nil)).Elem()
}

func (o ImageExportTaskOsuExportOsuApiKeyOutput) ToImageExportTaskOsuExportOsuApiKeyOutput() ImageExportTaskOsuExportOsuApiKeyOutput {
	return o
}

func (o ImageExportTaskOsuExportOsuApiKeyOutput) ToImageExportTaskOsuExportOsuApiKeyOutputWithContext(ctx context.Context) ImageExportTaskOsuExportOsuApiKeyOutput {
	return o
}

// The API key of the OOS account that enables you to access the bucket.
func (o ImageExportTaskOsuExportOsuApiKeyOutput) ApiKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v ImageExportTaskOsuExportOsuApiKey) string { return v.ApiKeyId }).(pulumi.StringOutput)
}

// The secret key of the OOS account that enables you to access the bucket.
func (o ImageExportTaskOsuExportOsuApiKeyOutput) SecretKey() pulumi.StringOutput {
	return o.ApplyT(func(v ImageExportTaskOsuExportOsuApiKey) string { return v.SecretKey }).(pulumi.StringOutput)
}

type ImageExportTaskOsuExportOsuApiKeyArrayOutput struct{ *pulumi.OutputState }

func (ImageExportTaskOsuExportOsuApiKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ImageExportTaskOsuExportOsuApiKey)(nil)).Elem()
}

func (o ImageExportTaskOsuExportOsuApiKeyArrayOutput) ToImageExportTaskOsuExportOsuApiKeyArrayOutput() ImageExportTaskOsuExportOsuApiKeyArrayOutput {
	return o
}

func (o ImageExportTaskOsuExportOsuApiKeyArrayOutput) ToImageExportTaskOsuExportOsuApiKeyArrayOutputWithContext(ctx context.Context) ImageExportTaskOsuExportOsuApiKeyArrayOutput {
	return o
}

func (o ImageExportTaskOsuExportOsuApiKeyArrayOutput) Index(i pulumi.IntInput) ImageExportTaskOsuExportOsuApiKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ImageExportTaskOsuExportOsuApiKey {
		return vs[0].([]ImageExportTaskOsuExportOsuApiKey)[vs[1].(int)]
	}).(ImageExportTaskOsuExportOsuApiKeyOutput)
}

type ImageExportTaskTag struct {
	// The key of the tag, with a minimum of 1 character.
	Key *string `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value *string `pulumi:"value"`
}

// ImageExportTaskTagInput is an input type that accepts ImageExportTaskTagArgs and ImageExportTaskTagOutput values.
// You can construct a concrete instance of `ImageExportTaskTagInput` via:
//
//	ImageExportTaskTagArgs{...}
type ImageExportTaskTagInput interface {
	pulumi.Input

	ToImageExportTaskTagOutput() ImageExportTaskTagOutput
	ToImageExportTaskTagOutputWithContext(context.Context) ImageExportTaskTagOutput
}

type ImageExportTaskTagArgs struct {
	// The key of the tag, with a minimum of 1 character.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ImageExportTaskTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageExportTaskTag)(nil)).Elem()
}

func (i ImageExportTaskTagArgs) ToImageExportTaskTagOutput() ImageExportTaskTagOutput {
	return i.ToImageExportTaskTagOutputWithContext(context.Background())
}

func (i ImageExportTaskTagArgs) ToImageExportTaskTagOutputWithContext(ctx context.Context) ImageExportTaskTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageExportTaskTagOutput)
}

// ImageExportTaskTagArrayInput is an input type that accepts ImageExportTaskTagArray and ImageExportTaskTagArrayOutput values.
// You can construct a concrete instance of `ImageExportTaskTagArrayInput` via:
//
//	ImageExportTaskTagArray{ ImageExportTaskTagArgs{...} }
type ImageExportTaskTagArrayInput interface {
	pulumi.Input

	ToImageExportTaskTagArrayOutput() ImageExportTaskTagArrayOutput
	ToImageExportTaskTagArrayOutputWithContext(context.Context) ImageExportTaskTagArrayOutput
}

type ImageExportTaskTagArray []ImageExportTaskTagInput

func (ImageExportTaskTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ImageExportTaskTag)(nil)).Elem()
}

func (i ImageExportTaskTagArray) ToImageExportTaskTagArrayOutput() ImageExportTaskTagArrayOutput {
	return i.ToImageExportTaskTagArrayOutputWithContext(context.Background())
}

func (i ImageExportTaskTagArray) ToImageExportTaskTagArrayOutputWithContext(ctx context.Context) ImageExportTaskTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageExportTaskTagArrayOutput)
}

type ImageExportTaskTagOutput struct{ *pulumi.OutputState }

func (ImageExportTaskTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageExportTaskTag)(nil)).Elem()
}

func (o ImageExportTaskTagOutput) ToImageExportTaskTagOutput() ImageExportTaskTagOutput {
	return o
}

func (o ImageExportTaskTagOutput) ToImageExportTaskTagOutputWithContext(ctx context.Context) ImageExportTaskTagOutput {
	return o
}

// The key of the tag, with a minimum of 1 character.
func (o ImageExportTaskTagOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageExportTaskTag) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The value of the tag, between 0 and 255 characters.
func (o ImageExportTaskTagOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageExportTaskTag) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ImageExportTaskTagArrayOutput struct{ *pulumi.OutputState }

func (ImageExportTaskTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ImageExportTaskTag)(nil)).Elem()
}

func (o ImageExportTaskTagArrayOutput) ToImageExportTaskTagArrayOutput() ImageExportTaskTagArrayOutput {
	return o
}

func (o ImageExportTaskTagArrayOutput) ToImageExportTaskTagArrayOutputWithContext(ctx context.Context) ImageExportTaskTagArrayOutput {
	return o
}

func (o ImageExportTaskTagArrayOutput) Index(i pulumi.IntInput) ImageExportTaskTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ImageExportTaskTag {
		return vs[0].([]ImageExportTaskTag)[vs[1].(int)]
	}).(ImageExportTaskTagOutput)
}

type ImageLaunchPermissionPermissionAdditions struct {
	// The account ID of one or more users to whom you want to give permissions.
	AccountIds []string `pulumi:"accountIds"`
	// If true, the resource is public. If false, the resource is private.
	GlobalPermission *string `pulumi:"globalPermission"`
}

// ImageLaunchPermissionPermissionAdditionsInput is an input type that accepts ImageLaunchPermissionPermissionAdditionsArgs and ImageLaunchPermissionPermissionAdditionsOutput values.
// You can construct a concrete instance of `ImageLaunchPermissionPermissionAdditionsInput` via:
//
//	ImageLaunchPermissionPermissionAdditionsArgs{...}
type ImageLaunchPermissionPermissionAdditionsInput interface {
	pulumi.Input

	ToImageLaunchPermissionPermissionAdditionsOutput() ImageLaunchPermissionPermissionAdditionsOutput
	ToImageLaunchPermissionPermissionAdditionsOutputWithContext(context.Context) ImageLaunchPermissionPermissionAdditionsOutput
}

type ImageLaunchPermissionPermissionAdditionsArgs struct {
	// The account ID of one or more users to whom you want to give permissions.
	AccountIds pulumi.StringArrayInput `pulumi:"accountIds"`
	// If true, the resource is public. If false, the resource is private.
	GlobalPermission pulumi.StringPtrInput `pulumi:"globalPermission"`
}

func (ImageLaunchPermissionPermissionAdditionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageLaunchPermissionPermissionAdditions)(nil)).Elem()
}

func (i ImageLaunchPermissionPermissionAdditionsArgs) ToImageLaunchPermissionPermissionAdditionsOutput() ImageLaunchPermissionPermissionAdditionsOutput {
	return i.ToImageLaunchPermissionPermissionAdditionsOutputWithContext(context.Background())
}

func (i ImageLaunchPermissionPermissionAdditionsArgs) ToImageLaunchPermissionPermissionAdditionsOutputWithContext(ctx context.Context) ImageLaunchPermissionPermissionAdditionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageLaunchPermissionPermissionAdditionsOutput)
}

func (i ImageLaunchPermissionPermissionAdditionsArgs) ToImageLaunchPermissionPermissionAdditionsPtrOutput() ImageLaunchPermissionPermissionAdditionsPtrOutput {
	return i.ToImageLaunchPermissionPermissionAdditionsPtrOutputWithContext(context.Background())
}

func (i ImageLaunchPermissionPermissionAdditionsArgs) ToImageLaunchPermissionPermissionAdditionsPtrOutputWithContext(ctx context.Context) ImageLaunchPermissionPermissionAdditionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageLaunchPermissionPermissionAdditionsOutput).ToImageLaunchPermissionPermissionAdditionsPtrOutputWithContext(ctx)
}

// ImageLaunchPermissionPermissionAdditionsPtrInput is an input type that accepts ImageLaunchPermissionPermissionAdditionsArgs, ImageLaunchPermissionPermissionAdditionsPtr and ImageLaunchPermissionPermissionAdditionsPtrOutput values.
// You can construct a concrete instance of `ImageLaunchPermissionPermissionAdditionsPtrInput` via:
//
//	        ImageLaunchPermissionPermissionAdditionsArgs{...}
//
//	or:
//
//	        nil
type ImageLaunchPermissionPermissionAdditionsPtrInput interface {
	pulumi.Input

	ToImageLaunchPermissionPermissionAdditionsPtrOutput() ImageLaunchPermissionPermissionAdditionsPtrOutput
	ToImageLaunchPermissionPermissionAdditionsPtrOutputWithContext(context.Context) ImageLaunchPermissionPermissionAdditionsPtrOutput
}

type imageLaunchPermissionPermissionAdditionsPtrType ImageLaunchPermissionPermissionAdditionsArgs

func ImageLaunchPermissionPermissionAdditionsPtr(v *ImageLaunchPermissionPermissionAdditionsArgs) ImageLaunchPermissionPermissionAdditionsPtrInput {
	return (*imageLaunchPermissionPermissionAdditionsPtrType)(v)
}

func (*imageLaunchPermissionPermissionAdditionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ImageLaunchPermissionPermissionAdditions)(nil)).Elem()
}

func (i *imageLaunchPermissionPermissionAdditionsPtrType) ToImageLaunchPermissionPermissionAdditionsPtrOutput() ImageLaunchPermissionPermissionAdditionsPtrOutput {
	return i.ToImageLaunchPermissionPermissionAdditionsPtrOutputWithContext(context.Background())
}

func (i *imageLaunchPermissionPermissionAdditionsPtrType) ToImageLaunchPermissionPermissionAdditionsPtrOutputWithContext(ctx context.Context) ImageLaunchPermissionPermissionAdditionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageLaunchPermissionPermissionAdditionsPtrOutput)
}

type ImageLaunchPermissionPermissionAdditionsOutput struct{ *pulumi.OutputState }

func (ImageLaunchPermissionPermissionAdditionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageLaunchPermissionPermissionAdditions)(nil)).Elem()
}

func (o ImageLaunchPermissionPermissionAdditionsOutput) ToImageLaunchPermissionPermissionAdditionsOutput() ImageLaunchPermissionPermissionAdditionsOutput {
	return o
}

func (o ImageLaunchPermissionPermissionAdditionsOutput) ToImageLaunchPermissionPermissionAdditionsOutputWithContext(ctx context.Context) ImageLaunchPermissionPermissionAdditionsOutput {
	return o
}

func (o ImageLaunchPermissionPermissionAdditionsOutput) ToImageLaunchPermissionPermissionAdditionsPtrOutput() ImageLaunchPermissionPermissionAdditionsPtrOutput {
	return o.ToImageLaunchPermissionPermissionAdditionsPtrOutputWithContext(context.Background())
}

func (o ImageLaunchPermissionPermissionAdditionsOutput) ToImageLaunchPermissionPermissionAdditionsPtrOutputWithContext(ctx context.Context) ImageLaunchPermissionPermissionAdditionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ImageLaunchPermissionPermissionAdditions) *ImageLaunchPermissionPermissionAdditions {
		return &v
	}).(ImageLaunchPermissionPermissionAdditionsPtrOutput)
}

// The account ID of one or more users to whom you want to give permissions.
func (o ImageLaunchPermissionPermissionAdditionsOutput) AccountIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ImageLaunchPermissionPermissionAdditions) []string { return v.AccountIds }).(pulumi.StringArrayOutput)
}

// If true, the resource is public. If false, the resource is private.
func (o ImageLaunchPermissionPermissionAdditionsOutput) GlobalPermission() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageLaunchPermissionPermissionAdditions) *string { return v.GlobalPermission }).(pulumi.StringPtrOutput)
}

type ImageLaunchPermissionPermissionAdditionsPtrOutput struct{ *pulumi.OutputState }

func (ImageLaunchPermissionPermissionAdditionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ImageLaunchPermissionPermissionAdditions)(nil)).Elem()
}

func (o ImageLaunchPermissionPermissionAdditionsPtrOutput) ToImageLaunchPermissionPermissionAdditionsPtrOutput() ImageLaunchPermissionPermissionAdditionsPtrOutput {
	return o
}

func (o ImageLaunchPermissionPermissionAdditionsPtrOutput) ToImageLaunchPermissionPermissionAdditionsPtrOutputWithContext(ctx context.Context) ImageLaunchPermissionPermissionAdditionsPtrOutput {
	return o
}

func (o ImageLaunchPermissionPermissionAdditionsPtrOutput) Elem() ImageLaunchPermissionPermissionAdditionsOutput {
	return o.ApplyT(func(v *ImageLaunchPermissionPermissionAdditions) ImageLaunchPermissionPermissionAdditions {
		if v != nil {
			return *v
		}
		var ret ImageLaunchPermissionPermissionAdditions
		return ret
	}).(ImageLaunchPermissionPermissionAdditionsOutput)
}

// The account ID of one or more users to whom you want to give permissions.
func (o ImageLaunchPermissionPermissionAdditionsPtrOutput) AccountIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ImageLaunchPermissionPermissionAdditions) []string {
		if v == nil {
			return nil
		}
		return v.AccountIds
	}).(pulumi.StringArrayOutput)
}

// If true, the resource is public. If false, the resource is private.
func (o ImageLaunchPermissionPermissionAdditionsPtrOutput) GlobalPermission() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ImageLaunchPermissionPermissionAdditions) *string {
		if v == nil {
			return nil
		}
		return v.GlobalPermission
	}).(pulumi.StringPtrOutput)
}

type ImageLaunchPermissionPermissionRemovals struct {
	// The account ID of one or more users from whom you want to remove permissions.
	AccountIds []string `pulumi:"accountIds"`
	// If true, the resource is public. If false, the resource is private.
	GlobalPermission *string `pulumi:"globalPermission"`
}

// ImageLaunchPermissionPermissionRemovalsInput is an input type that accepts ImageLaunchPermissionPermissionRemovalsArgs and ImageLaunchPermissionPermissionRemovalsOutput values.
// You can construct a concrete instance of `ImageLaunchPermissionPermissionRemovalsInput` via:
//
//	ImageLaunchPermissionPermissionRemovalsArgs{...}
type ImageLaunchPermissionPermissionRemovalsInput interface {
	pulumi.Input

	ToImageLaunchPermissionPermissionRemovalsOutput() ImageLaunchPermissionPermissionRemovalsOutput
	ToImageLaunchPermissionPermissionRemovalsOutputWithContext(context.Context) ImageLaunchPermissionPermissionRemovalsOutput
}

type ImageLaunchPermissionPermissionRemovalsArgs struct {
	// The account ID of one or more users from whom you want to remove permissions.
	AccountIds pulumi.StringArrayInput `pulumi:"accountIds"`
	// If true, the resource is public. If false, the resource is private.
	GlobalPermission pulumi.StringPtrInput `pulumi:"globalPermission"`
}

func (ImageLaunchPermissionPermissionRemovalsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageLaunchPermissionPermissionRemovals)(nil)).Elem()
}

func (i ImageLaunchPermissionPermissionRemovalsArgs) ToImageLaunchPermissionPermissionRemovalsOutput() ImageLaunchPermissionPermissionRemovalsOutput {
	return i.ToImageLaunchPermissionPermissionRemovalsOutputWithContext(context.Background())
}

func (i ImageLaunchPermissionPermissionRemovalsArgs) ToImageLaunchPermissionPermissionRemovalsOutputWithContext(ctx context.Context) ImageLaunchPermissionPermissionRemovalsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageLaunchPermissionPermissionRemovalsOutput)
}

func (i ImageLaunchPermissionPermissionRemovalsArgs) ToImageLaunchPermissionPermissionRemovalsPtrOutput() ImageLaunchPermissionPermissionRemovalsPtrOutput {
	return i.ToImageLaunchPermissionPermissionRemovalsPtrOutputWithContext(context.Background())
}

func (i ImageLaunchPermissionPermissionRemovalsArgs) ToImageLaunchPermissionPermissionRemovalsPtrOutputWithContext(ctx context.Context) ImageLaunchPermissionPermissionRemovalsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageLaunchPermissionPermissionRemovalsOutput).ToImageLaunchPermissionPermissionRemovalsPtrOutputWithContext(ctx)
}

// ImageLaunchPermissionPermissionRemovalsPtrInput is an input type that accepts ImageLaunchPermissionPermissionRemovalsArgs, ImageLaunchPermissionPermissionRemovalsPtr and ImageLaunchPermissionPermissionRemovalsPtrOutput values.
// You can construct a concrete instance of `ImageLaunchPermissionPermissionRemovalsPtrInput` via:
//
//	        ImageLaunchPermissionPermissionRemovalsArgs{...}
//
//	or:
//
//	        nil
type ImageLaunchPermissionPermissionRemovalsPtrInput interface {
	pulumi.Input

	ToImageLaunchPermissionPermissionRemovalsPtrOutput() ImageLaunchPermissionPermissionRemovalsPtrOutput
	ToImageLaunchPermissionPermissionRemovalsPtrOutputWithContext(context.Context) ImageLaunchPermissionPermissionRemovalsPtrOutput
}

type imageLaunchPermissionPermissionRemovalsPtrType ImageLaunchPermissionPermissionRemovalsArgs

func ImageLaunchPermissionPermissionRemovalsPtr(v *ImageLaunchPermissionPermissionRemovalsArgs) ImageLaunchPermissionPermissionRemovalsPtrInput {
	return (*imageLaunchPermissionPermissionRemovalsPtrType)(v)
}

func (*imageLaunchPermissionPermissionRemovalsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ImageLaunchPermissionPermissionRemovals)(nil)).Elem()
}

func (i *imageLaunchPermissionPermissionRemovalsPtrType) ToImageLaunchPermissionPermissionRemovalsPtrOutput() ImageLaunchPermissionPermissionRemovalsPtrOutput {
	return i.ToImageLaunchPermissionPermissionRemovalsPtrOutputWithContext(context.Background())
}

func (i *imageLaunchPermissionPermissionRemovalsPtrType) ToImageLaunchPermissionPermissionRemovalsPtrOutputWithContext(ctx context.Context) ImageLaunchPermissionPermissionRemovalsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageLaunchPermissionPermissionRemovalsPtrOutput)
}

type ImageLaunchPermissionPermissionRemovalsOutput struct{ *pulumi.OutputState }

func (ImageLaunchPermissionPermissionRemovalsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageLaunchPermissionPermissionRemovals)(nil)).Elem()
}

func (o ImageLaunchPermissionPermissionRemovalsOutput) ToImageLaunchPermissionPermissionRemovalsOutput() ImageLaunchPermissionPermissionRemovalsOutput {
	return o
}

func (o ImageLaunchPermissionPermissionRemovalsOutput) ToImageLaunchPermissionPermissionRemovalsOutputWithContext(ctx context.Context) ImageLaunchPermissionPermissionRemovalsOutput {
	return o
}

func (o ImageLaunchPermissionPermissionRemovalsOutput) ToImageLaunchPermissionPermissionRemovalsPtrOutput() ImageLaunchPermissionPermissionRemovalsPtrOutput {
	return o.ToImageLaunchPermissionPermissionRemovalsPtrOutputWithContext(context.Background())
}

func (o ImageLaunchPermissionPermissionRemovalsOutput) ToImageLaunchPermissionPermissionRemovalsPtrOutputWithContext(ctx context.Context) ImageLaunchPermissionPermissionRemovalsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ImageLaunchPermissionPermissionRemovals) *ImageLaunchPermissionPermissionRemovals {
		return &v
	}).(ImageLaunchPermissionPermissionRemovalsPtrOutput)
}

// The account ID of one or more users from whom you want to remove permissions.
func (o ImageLaunchPermissionPermissionRemovalsOutput) AccountIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ImageLaunchPermissionPermissionRemovals) []string { return v.AccountIds }).(pulumi.StringArrayOutput)
}

// If true, the resource is public. If false, the resource is private.
func (o ImageLaunchPermissionPermissionRemovalsOutput) GlobalPermission() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageLaunchPermissionPermissionRemovals) *string { return v.GlobalPermission }).(pulumi.StringPtrOutput)
}

type ImageLaunchPermissionPermissionRemovalsPtrOutput struct{ *pulumi.OutputState }

func (ImageLaunchPermissionPermissionRemovalsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ImageLaunchPermissionPermissionRemovals)(nil)).Elem()
}

func (o ImageLaunchPermissionPermissionRemovalsPtrOutput) ToImageLaunchPermissionPermissionRemovalsPtrOutput() ImageLaunchPermissionPermissionRemovalsPtrOutput {
	return o
}

func (o ImageLaunchPermissionPermissionRemovalsPtrOutput) ToImageLaunchPermissionPermissionRemovalsPtrOutputWithContext(ctx context.Context) ImageLaunchPermissionPermissionRemovalsPtrOutput {
	return o
}

func (o ImageLaunchPermissionPermissionRemovalsPtrOutput) Elem() ImageLaunchPermissionPermissionRemovalsOutput {
	return o.ApplyT(func(v *ImageLaunchPermissionPermissionRemovals) ImageLaunchPermissionPermissionRemovals {
		if v != nil {
			return *v
		}
		var ret ImageLaunchPermissionPermissionRemovals
		return ret
	}).(ImageLaunchPermissionPermissionRemovalsOutput)
}

// The account ID of one or more users from whom you want to remove permissions.
func (o ImageLaunchPermissionPermissionRemovalsPtrOutput) AccountIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ImageLaunchPermissionPermissionRemovals) []string {
		if v == nil {
			return nil
		}
		return v.AccountIds
	}).(pulumi.StringArrayOutput)
}

// If true, the resource is public. If false, the resource is private.
func (o ImageLaunchPermissionPermissionRemovalsPtrOutput) GlobalPermission() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ImageLaunchPermissionPermissionRemovals) *string {
		if v == nil {
			return nil
		}
		return v.GlobalPermission
	}).(pulumi.StringPtrOutput)
}

type ImageLaunchPermissionPermissionsToLaunch struct {
	// One or more account IDs that the permission is associated with.
	AccountIds []string `pulumi:"accountIds"`
	// A global permission for all accounts.<br />
	// (Request) Set this parameter to true to make the resource public (if the parent parameter is `additions`) or to make the resource private (if the parent parameter is `removals`).<br />
	// (Response) If true, the resource is public. If false, the resource is private.
	GlobalPermission *string `pulumi:"globalPermission"`
}

// ImageLaunchPermissionPermissionsToLaunchInput is an input type that accepts ImageLaunchPermissionPermissionsToLaunchArgs and ImageLaunchPermissionPermissionsToLaunchOutput values.
// You can construct a concrete instance of `ImageLaunchPermissionPermissionsToLaunchInput` via:
//
//	ImageLaunchPermissionPermissionsToLaunchArgs{...}
type ImageLaunchPermissionPermissionsToLaunchInput interface {
	pulumi.Input

	ToImageLaunchPermissionPermissionsToLaunchOutput() ImageLaunchPermissionPermissionsToLaunchOutput
	ToImageLaunchPermissionPermissionsToLaunchOutputWithContext(context.Context) ImageLaunchPermissionPermissionsToLaunchOutput
}

type ImageLaunchPermissionPermissionsToLaunchArgs struct {
	// One or more account IDs that the permission is associated with.
	AccountIds pulumi.StringArrayInput `pulumi:"accountIds"`
	// A global permission for all accounts.<br />
	// (Request) Set this parameter to true to make the resource public (if the parent parameter is `additions`) or to make the resource private (if the parent parameter is `removals`).<br />
	// (Response) If true, the resource is public. If false, the resource is private.
	GlobalPermission pulumi.StringPtrInput `pulumi:"globalPermission"`
}

func (ImageLaunchPermissionPermissionsToLaunchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageLaunchPermissionPermissionsToLaunch)(nil)).Elem()
}

func (i ImageLaunchPermissionPermissionsToLaunchArgs) ToImageLaunchPermissionPermissionsToLaunchOutput() ImageLaunchPermissionPermissionsToLaunchOutput {
	return i.ToImageLaunchPermissionPermissionsToLaunchOutputWithContext(context.Background())
}

func (i ImageLaunchPermissionPermissionsToLaunchArgs) ToImageLaunchPermissionPermissionsToLaunchOutputWithContext(ctx context.Context) ImageLaunchPermissionPermissionsToLaunchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageLaunchPermissionPermissionsToLaunchOutput)
}

// ImageLaunchPermissionPermissionsToLaunchArrayInput is an input type that accepts ImageLaunchPermissionPermissionsToLaunchArray and ImageLaunchPermissionPermissionsToLaunchArrayOutput values.
// You can construct a concrete instance of `ImageLaunchPermissionPermissionsToLaunchArrayInput` via:
//
//	ImageLaunchPermissionPermissionsToLaunchArray{ ImageLaunchPermissionPermissionsToLaunchArgs{...} }
type ImageLaunchPermissionPermissionsToLaunchArrayInput interface {
	pulumi.Input

	ToImageLaunchPermissionPermissionsToLaunchArrayOutput() ImageLaunchPermissionPermissionsToLaunchArrayOutput
	ToImageLaunchPermissionPermissionsToLaunchArrayOutputWithContext(context.Context) ImageLaunchPermissionPermissionsToLaunchArrayOutput
}

type ImageLaunchPermissionPermissionsToLaunchArray []ImageLaunchPermissionPermissionsToLaunchInput

func (ImageLaunchPermissionPermissionsToLaunchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ImageLaunchPermissionPermissionsToLaunch)(nil)).Elem()
}

func (i ImageLaunchPermissionPermissionsToLaunchArray) ToImageLaunchPermissionPermissionsToLaunchArrayOutput() ImageLaunchPermissionPermissionsToLaunchArrayOutput {
	return i.ToImageLaunchPermissionPermissionsToLaunchArrayOutputWithContext(context.Background())
}

func (i ImageLaunchPermissionPermissionsToLaunchArray) ToImageLaunchPermissionPermissionsToLaunchArrayOutputWithContext(ctx context.Context) ImageLaunchPermissionPermissionsToLaunchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageLaunchPermissionPermissionsToLaunchArrayOutput)
}

type ImageLaunchPermissionPermissionsToLaunchOutput struct{ *pulumi.OutputState }

func (ImageLaunchPermissionPermissionsToLaunchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageLaunchPermissionPermissionsToLaunch)(nil)).Elem()
}

func (o ImageLaunchPermissionPermissionsToLaunchOutput) ToImageLaunchPermissionPermissionsToLaunchOutput() ImageLaunchPermissionPermissionsToLaunchOutput {
	return o
}

func (o ImageLaunchPermissionPermissionsToLaunchOutput) ToImageLaunchPermissionPermissionsToLaunchOutputWithContext(ctx context.Context) ImageLaunchPermissionPermissionsToLaunchOutput {
	return o
}

// One or more account IDs that the permission is associated with.
func (o ImageLaunchPermissionPermissionsToLaunchOutput) AccountIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ImageLaunchPermissionPermissionsToLaunch) []string { return v.AccountIds }).(pulumi.StringArrayOutput)
}

// A global permission for all accounts.<br />
// (Request) Set this parameter to true to make the resource public (if the parent parameter is `additions`) or to make the resource private (if the parent parameter is `removals`).<br />
// (Response) If true, the resource is public. If false, the resource is private.
func (o ImageLaunchPermissionPermissionsToLaunchOutput) GlobalPermission() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageLaunchPermissionPermissionsToLaunch) *string { return v.GlobalPermission }).(pulumi.StringPtrOutput)
}

type ImageLaunchPermissionPermissionsToLaunchArrayOutput struct{ *pulumi.OutputState }

func (ImageLaunchPermissionPermissionsToLaunchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ImageLaunchPermissionPermissionsToLaunch)(nil)).Elem()
}

func (o ImageLaunchPermissionPermissionsToLaunchArrayOutput) ToImageLaunchPermissionPermissionsToLaunchArrayOutput() ImageLaunchPermissionPermissionsToLaunchArrayOutput {
	return o
}

func (o ImageLaunchPermissionPermissionsToLaunchArrayOutput) ToImageLaunchPermissionPermissionsToLaunchArrayOutputWithContext(ctx context.Context) ImageLaunchPermissionPermissionsToLaunchArrayOutput {
	return o
}

func (o ImageLaunchPermissionPermissionsToLaunchArrayOutput) Index(i pulumi.IntInput) ImageLaunchPermissionPermissionsToLaunchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ImageLaunchPermissionPermissionsToLaunch {
		return vs[0].([]ImageLaunchPermissionPermissionsToLaunch)[vs[1].(int)]
	}).(ImageLaunchPermissionPermissionsToLaunchOutput)
}

type ImagePermissionsToLaunch struct {
	// One or more account IDs that the permission is associated with.
	AccountIds []string `pulumi:"accountIds"`
	// A global permission for all accounts.<br />
	// (Request) Set this parameter to true to make the resource public (if the parent parameter is `Additions`) or to make the resource private (if the parent parameter is `Removals`).<br />
	// (Response) If true, the resource is public. If false, the resource is private.
	GlobalPermission *bool `pulumi:"globalPermission"`
}

// ImagePermissionsToLaunchInput is an input type that accepts ImagePermissionsToLaunchArgs and ImagePermissionsToLaunchOutput values.
// You can construct a concrete instance of `ImagePermissionsToLaunchInput` via:
//
//	ImagePermissionsToLaunchArgs{...}
type ImagePermissionsToLaunchInput interface {
	pulumi.Input

	ToImagePermissionsToLaunchOutput() ImagePermissionsToLaunchOutput
	ToImagePermissionsToLaunchOutputWithContext(context.Context) ImagePermissionsToLaunchOutput
}

type ImagePermissionsToLaunchArgs struct {
	// One or more account IDs that the permission is associated with.
	AccountIds pulumi.StringArrayInput `pulumi:"accountIds"`
	// A global permission for all accounts.<br />
	// (Request) Set this parameter to true to make the resource public (if the parent parameter is `Additions`) or to make the resource private (if the parent parameter is `Removals`).<br />
	// (Response) If true, the resource is public. If false, the resource is private.
	GlobalPermission pulumi.BoolPtrInput `pulumi:"globalPermission"`
}

func (ImagePermissionsToLaunchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ImagePermissionsToLaunch)(nil)).Elem()
}

func (i ImagePermissionsToLaunchArgs) ToImagePermissionsToLaunchOutput() ImagePermissionsToLaunchOutput {
	return i.ToImagePermissionsToLaunchOutputWithContext(context.Background())
}

func (i ImagePermissionsToLaunchArgs) ToImagePermissionsToLaunchOutputWithContext(ctx context.Context) ImagePermissionsToLaunchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImagePermissionsToLaunchOutput)
}

// ImagePermissionsToLaunchArrayInput is an input type that accepts ImagePermissionsToLaunchArray and ImagePermissionsToLaunchArrayOutput values.
// You can construct a concrete instance of `ImagePermissionsToLaunchArrayInput` via:
//
//	ImagePermissionsToLaunchArray{ ImagePermissionsToLaunchArgs{...} }
type ImagePermissionsToLaunchArrayInput interface {
	pulumi.Input

	ToImagePermissionsToLaunchArrayOutput() ImagePermissionsToLaunchArrayOutput
	ToImagePermissionsToLaunchArrayOutputWithContext(context.Context) ImagePermissionsToLaunchArrayOutput
}

type ImagePermissionsToLaunchArray []ImagePermissionsToLaunchInput

func (ImagePermissionsToLaunchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ImagePermissionsToLaunch)(nil)).Elem()
}

func (i ImagePermissionsToLaunchArray) ToImagePermissionsToLaunchArrayOutput() ImagePermissionsToLaunchArrayOutput {
	return i.ToImagePermissionsToLaunchArrayOutputWithContext(context.Background())
}

func (i ImagePermissionsToLaunchArray) ToImagePermissionsToLaunchArrayOutputWithContext(ctx context.Context) ImagePermissionsToLaunchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImagePermissionsToLaunchArrayOutput)
}

type ImagePermissionsToLaunchOutput struct{ *pulumi.OutputState }

func (ImagePermissionsToLaunchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImagePermissionsToLaunch)(nil)).Elem()
}

func (o ImagePermissionsToLaunchOutput) ToImagePermissionsToLaunchOutput() ImagePermissionsToLaunchOutput {
	return o
}

func (o ImagePermissionsToLaunchOutput) ToImagePermissionsToLaunchOutputWithContext(ctx context.Context) ImagePermissionsToLaunchOutput {
	return o
}

// One or more account IDs that the permission is associated with.
func (o ImagePermissionsToLaunchOutput) AccountIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ImagePermissionsToLaunch) []string { return v.AccountIds }).(pulumi.StringArrayOutput)
}

// A global permission for all accounts.<br />
// (Request) Set this parameter to true to make the resource public (if the parent parameter is `Additions`) or to make the resource private (if the parent parameter is `Removals`).<br />
// (Response) If true, the resource is public. If false, the resource is private.
func (o ImagePermissionsToLaunchOutput) GlobalPermission() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ImagePermissionsToLaunch) *bool { return v.GlobalPermission }).(pulumi.BoolPtrOutput)
}

type ImagePermissionsToLaunchArrayOutput struct{ *pulumi.OutputState }

func (ImagePermissionsToLaunchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ImagePermissionsToLaunch)(nil)).Elem()
}

func (o ImagePermissionsToLaunchArrayOutput) ToImagePermissionsToLaunchArrayOutput() ImagePermissionsToLaunchArrayOutput {
	return o
}

func (o ImagePermissionsToLaunchArrayOutput) ToImagePermissionsToLaunchArrayOutputWithContext(ctx context.Context) ImagePermissionsToLaunchArrayOutput {
	return o
}

func (o ImagePermissionsToLaunchArrayOutput) Index(i pulumi.IntInput) ImagePermissionsToLaunchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ImagePermissionsToLaunch {
		return vs[0].([]ImagePermissionsToLaunch)[vs[1].(int)]
	}).(ImagePermissionsToLaunchOutput)
}

type ImageStateComment struct {
	// The code of the change of state.
	StateCode *string `pulumi:"stateCode"`
	// A message explaining the change of state.
	StateMessage *string `pulumi:"stateMessage"`
}

// ImageStateCommentInput is an input type that accepts ImageStateCommentArgs and ImageStateCommentOutput values.
// You can construct a concrete instance of `ImageStateCommentInput` via:
//
//	ImageStateCommentArgs{...}
type ImageStateCommentInput interface {
	pulumi.Input

	ToImageStateCommentOutput() ImageStateCommentOutput
	ToImageStateCommentOutputWithContext(context.Context) ImageStateCommentOutput
}

type ImageStateCommentArgs struct {
	// The code of the change of state.
	StateCode pulumi.StringPtrInput `pulumi:"stateCode"`
	// A message explaining the change of state.
	StateMessage pulumi.StringPtrInput `pulumi:"stateMessage"`
}

func (ImageStateCommentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageStateComment)(nil)).Elem()
}

func (i ImageStateCommentArgs) ToImageStateCommentOutput() ImageStateCommentOutput {
	return i.ToImageStateCommentOutputWithContext(context.Background())
}

func (i ImageStateCommentArgs) ToImageStateCommentOutputWithContext(ctx context.Context) ImageStateCommentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageStateCommentOutput)
}

// ImageStateCommentArrayInput is an input type that accepts ImageStateCommentArray and ImageStateCommentArrayOutput values.
// You can construct a concrete instance of `ImageStateCommentArrayInput` via:
//
//	ImageStateCommentArray{ ImageStateCommentArgs{...} }
type ImageStateCommentArrayInput interface {
	pulumi.Input

	ToImageStateCommentArrayOutput() ImageStateCommentArrayOutput
	ToImageStateCommentArrayOutputWithContext(context.Context) ImageStateCommentArrayOutput
}

type ImageStateCommentArray []ImageStateCommentInput

func (ImageStateCommentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ImageStateComment)(nil)).Elem()
}

func (i ImageStateCommentArray) ToImageStateCommentArrayOutput() ImageStateCommentArrayOutput {
	return i.ToImageStateCommentArrayOutputWithContext(context.Background())
}

func (i ImageStateCommentArray) ToImageStateCommentArrayOutputWithContext(ctx context.Context) ImageStateCommentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageStateCommentArrayOutput)
}

type ImageStateCommentOutput struct{ *pulumi.OutputState }

func (ImageStateCommentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageStateComment)(nil)).Elem()
}

func (o ImageStateCommentOutput) ToImageStateCommentOutput() ImageStateCommentOutput {
	return o
}

func (o ImageStateCommentOutput) ToImageStateCommentOutputWithContext(ctx context.Context) ImageStateCommentOutput {
	return o
}

// The code of the change of state.
func (o ImageStateCommentOutput) StateCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageStateComment) *string { return v.StateCode }).(pulumi.StringPtrOutput)
}

// A message explaining the change of state.
func (o ImageStateCommentOutput) StateMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageStateComment) *string { return v.StateMessage }).(pulumi.StringPtrOutput)
}

type ImageStateCommentArrayOutput struct{ *pulumi.OutputState }

func (ImageStateCommentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ImageStateComment)(nil)).Elem()
}

func (o ImageStateCommentArrayOutput) ToImageStateCommentArrayOutput() ImageStateCommentArrayOutput {
	return o
}

func (o ImageStateCommentArrayOutput) ToImageStateCommentArrayOutputWithContext(ctx context.Context) ImageStateCommentArrayOutput {
	return o
}

func (o ImageStateCommentArrayOutput) Index(i pulumi.IntInput) ImageStateCommentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ImageStateComment {
		return vs[0].([]ImageStateComment)[vs[1].(int)]
	}).(ImageStateCommentOutput)
}

type ImageTag struct {
	// The key of the tag, with a minimum of 1 character.
	Key *string `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value *string `pulumi:"value"`
}

// ImageTagInput is an input type that accepts ImageTagArgs and ImageTagOutput values.
// You can construct a concrete instance of `ImageTagInput` via:
//
//	ImageTagArgs{...}
type ImageTagInput interface {
	pulumi.Input

	ToImageTagOutput() ImageTagOutput
	ToImageTagOutputWithContext(context.Context) ImageTagOutput
}

type ImageTagArgs struct {
	// The key of the tag, with a minimum of 1 character.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ImageTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageTag)(nil)).Elem()
}

func (i ImageTagArgs) ToImageTagOutput() ImageTagOutput {
	return i.ToImageTagOutputWithContext(context.Background())
}

func (i ImageTagArgs) ToImageTagOutputWithContext(ctx context.Context) ImageTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageTagOutput)
}

// ImageTagArrayInput is an input type that accepts ImageTagArray and ImageTagArrayOutput values.
// You can construct a concrete instance of `ImageTagArrayInput` via:
//
//	ImageTagArray{ ImageTagArgs{...} }
type ImageTagArrayInput interface {
	pulumi.Input

	ToImageTagArrayOutput() ImageTagArrayOutput
	ToImageTagArrayOutputWithContext(context.Context) ImageTagArrayOutput
}

type ImageTagArray []ImageTagInput

func (ImageTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ImageTag)(nil)).Elem()
}

func (i ImageTagArray) ToImageTagArrayOutput() ImageTagArrayOutput {
	return i.ToImageTagArrayOutputWithContext(context.Background())
}

func (i ImageTagArray) ToImageTagArrayOutputWithContext(ctx context.Context) ImageTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageTagArrayOutput)
}

type ImageTagOutput struct{ *pulumi.OutputState }

func (ImageTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageTag)(nil)).Elem()
}

func (o ImageTagOutput) ToImageTagOutput() ImageTagOutput {
	return o
}

func (o ImageTagOutput) ToImageTagOutputWithContext(ctx context.Context) ImageTagOutput {
	return o
}

// The key of the tag, with a minimum of 1 character.
func (o ImageTagOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageTag) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The value of the tag, between 0 and 255 characters.
func (o ImageTagOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageTag) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ImageTagArrayOutput struct{ *pulumi.OutputState }

func (ImageTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ImageTag)(nil)).Elem()
}

func (o ImageTagArrayOutput) ToImageTagArrayOutput() ImageTagArrayOutput {
	return o
}

func (o ImageTagArrayOutput) ToImageTagArrayOutputWithContext(ctx context.Context) ImageTagArrayOutput {
	return o
}

func (o ImageTagArrayOutput) Index(i pulumi.IntInput) ImageTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ImageTag {
		return vs[0].([]ImageTag)[vs[1].(int)]
	}).(ImageTagOutput)
}

type InternetServiceLinkTag struct {
	// The key of the tag, with a minimum of 1 character.
	Key string `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value string `pulumi:"value"`
}

// InternetServiceLinkTagInput is an input type that accepts InternetServiceLinkTagArgs and InternetServiceLinkTagOutput values.
// You can construct a concrete instance of `InternetServiceLinkTagInput` via:
//
//	InternetServiceLinkTagArgs{...}
type InternetServiceLinkTagInput interface {
	pulumi.Input

	ToInternetServiceLinkTagOutput() InternetServiceLinkTagOutput
	ToInternetServiceLinkTagOutputWithContext(context.Context) InternetServiceLinkTagOutput
}

type InternetServiceLinkTagArgs struct {
	// The key of the tag, with a minimum of 1 character.
	Key pulumi.StringInput `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value pulumi.StringInput `pulumi:"value"`
}

func (InternetServiceLinkTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InternetServiceLinkTag)(nil)).Elem()
}

func (i InternetServiceLinkTagArgs) ToInternetServiceLinkTagOutput() InternetServiceLinkTagOutput {
	return i.ToInternetServiceLinkTagOutputWithContext(context.Background())
}

func (i InternetServiceLinkTagArgs) ToInternetServiceLinkTagOutputWithContext(ctx context.Context) InternetServiceLinkTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InternetServiceLinkTagOutput)
}

// InternetServiceLinkTagArrayInput is an input type that accepts InternetServiceLinkTagArray and InternetServiceLinkTagArrayOutput values.
// You can construct a concrete instance of `InternetServiceLinkTagArrayInput` via:
//
//	InternetServiceLinkTagArray{ InternetServiceLinkTagArgs{...} }
type InternetServiceLinkTagArrayInput interface {
	pulumi.Input

	ToInternetServiceLinkTagArrayOutput() InternetServiceLinkTagArrayOutput
	ToInternetServiceLinkTagArrayOutputWithContext(context.Context) InternetServiceLinkTagArrayOutput
}

type InternetServiceLinkTagArray []InternetServiceLinkTagInput

func (InternetServiceLinkTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InternetServiceLinkTag)(nil)).Elem()
}

func (i InternetServiceLinkTagArray) ToInternetServiceLinkTagArrayOutput() InternetServiceLinkTagArrayOutput {
	return i.ToInternetServiceLinkTagArrayOutputWithContext(context.Background())
}

func (i InternetServiceLinkTagArray) ToInternetServiceLinkTagArrayOutputWithContext(ctx context.Context) InternetServiceLinkTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InternetServiceLinkTagArrayOutput)
}

type InternetServiceLinkTagOutput struct{ *pulumi.OutputState }

func (InternetServiceLinkTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InternetServiceLinkTag)(nil)).Elem()
}

func (o InternetServiceLinkTagOutput) ToInternetServiceLinkTagOutput() InternetServiceLinkTagOutput {
	return o
}

func (o InternetServiceLinkTagOutput) ToInternetServiceLinkTagOutputWithContext(ctx context.Context) InternetServiceLinkTagOutput {
	return o
}

// The key of the tag, with a minimum of 1 character.
func (o InternetServiceLinkTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v InternetServiceLinkTag) string { return v.Key }).(pulumi.StringOutput)
}

// The value of the tag, between 0 and 255 characters.
func (o InternetServiceLinkTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v InternetServiceLinkTag) string { return v.Value }).(pulumi.StringOutput)
}

type InternetServiceLinkTagArrayOutput struct{ *pulumi.OutputState }

func (InternetServiceLinkTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InternetServiceLinkTag)(nil)).Elem()
}

func (o InternetServiceLinkTagArrayOutput) ToInternetServiceLinkTagArrayOutput() InternetServiceLinkTagArrayOutput {
	return o
}

func (o InternetServiceLinkTagArrayOutput) ToInternetServiceLinkTagArrayOutputWithContext(ctx context.Context) InternetServiceLinkTagArrayOutput {
	return o
}

func (o InternetServiceLinkTagArrayOutput) Index(i pulumi.IntInput) InternetServiceLinkTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InternetServiceLinkTag {
		return vs[0].([]InternetServiceLinkTag)[vs[1].(int)]
	}).(InternetServiceLinkTagOutput)
}

type InternetServiceLinkTimeouts struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Create *string `pulumi:"create"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
	Delete *string `pulumi:"delete"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
	Read *string `pulumi:"read"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Update *string `pulumi:"update"`
}

// InternetServiceLinkTimeoutsInput is an input type that accepts InternetServiceLinkTimeoutsArgs and InternetServiceLinkTimeoutsOutput values.
// You can construct a concrete instance of `InternetServiceLinkTimeoutsInput` via:
//
//	InternetServiceLinkTimeoutsArgs{...}
type InternetServiceLinkTimeoutsInput interface {
	pulumi.Input

	ToInternetServiceLinkTimeoutsOutput() InternetServiceLinkTimeoutsOutput
	ToInternetServiceLinkTimeoutsOutputWithContext(context.Context) InternetServiceLinkTimeoutsOutput
}

type InternetServiceLinkTimeoutsArgs struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Create pulumi.StringPtrInput `pulumi:"create"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
	Delete pulumi.StringPtrInput `pulumi:"delete"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
	Read pulumi.StringPtrInput `pulumi:"read"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Update pulumi.StringPtrInput `pulumi:"update"`
}

func (InternetServiceLinkTimeoutsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InternetServiceLinkTimeouts)(nil)).Elem()
}

func (i InternetServiceLinkTimeoutsArgs) ToInternetServiceLinkTimeoutsOutput() InternetServiceLinkTimeoutsOutput {
	return i.ToInternetServiceLinkTimeoutsOutputWithContext(context.Background())
}

func (i InternetServiceLinkTimeoutsArgs) ToInternetServiceLinkTimeoutsOutputWithContext(ctx context.Context) InternetServiceLinkTimeoutsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InternetServiceLinkTimeoutsOutput)
}

func (i InternetServiceLinkTimeoutsArgs) ToInternetServiceLinkTimeoutsPtrOutput() InternetServiceLinkTimeoutsPtrOutput {
	return i.ToInternetServiceLinkTimeoutsPtrOutputWithContext(context.Background())
}

func (i InternetServiceLinkTimeoutsArgs) ToInternetServiceLinkTimeoutsPtrOutputWithContext(ctx context.Context) InternetServiceLinkTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InternetServiceLinkTimeoutsOutput).ToInternetServiceLinkTimeoutsPtrOutputWithContext(ctx)
}

// InternetServiceLinkTimeoutsPtrInput is an input type that accepts InternetServiceLinkTimeoutsArgs, InternetServiceLinkTimeoutsPtr and InternetServiceLinkTimeoutsPtrOutput values.
// You can construct a concrete instance of `InternetServiceLinkTimeoutsPtrInput` via:
//
//	        InternetServiceLinkTimeoutsArgs{...}
//
//	or:
//
//	        nil
type InternetServiceLinkTimeoutsPtrInput interface {
	pulumi.Input

	ToInternetServiceLinkTimeoutsPtrOutput() InternetServiceLinkTimeoutsPtrOutput
	ToInternetServiceLinkTimeoutsPtrOutputWithContext(context.Context) InternetServiceLinkTimeoutsPtrOutput
}

type internetServiceLinkTimeoutsPtrType InternetServiceLinkTimeoutsArgs

func InternetServiceLinkTimeoutsPtr(v *InternetServiceLinkTimeoutsArgs) InternetServiceLinkTimeoutsPtrInput {
	return (*internetServiceLinkTimeoutsPtrType)(v)
}

func (*internetServiceLinkTimeoutsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InternetServiceLinkTimeouts)(nil)).Elem()
}

func (i *internetServiceLinkTimeoutsPtrType) ToInternetServiceLinkTimeoutsPtrOutput() InternetServiceLinkTimeoutsPtrOutput {
	return i.ToInternetServiceLinkTimeoutsPtrOutputWithContext(context.Background())
}

func (i *internetServiceLinkTimeoutsPtrType) ToInternetServiceLinkTimeoutsPtrOutputWithContext(ctx context.Context) InternetServiceLinkTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InternetServiceLinkTimeoutsPtrOutput)
}

type InternetServiceLinkTimeoutsOutput struct{ *pulumi.OutputState }

func (InternetServiceLinkTimeoutsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InternetServiceLinkTimeouts)(nil)).Elem()
}

func (o InternetServiceLinkTimeoutsOutput) ToInternetServiceLinkTimeoutsOutput() InternetServiceLinkTimeoutsOutput {
	return o
}

func (o InternetServiceLinkTimeoutsOutput) ToInternetServiceLinkTimeoutsOutputWithContext(ctx context.Context) InternetServiceLinkTimeoutsOutput {
	return o
}

func (o InternetServiceLinkTimeoutsOutput) ToInternetServiceLinkTimeoutsPtrOutput() InternetServiceLinkTimeoutsPtrOutput {
	return o.ToInternetServiceLinkTimeoutsPtrOutputWithContext(context.Background())
}

func (o InternetServiceLinkTimeoutsOutput) ToInternetServiceLinkTimeoutsPtrOutputWithContext(ctx context.Context) InternetServiceLinkTimeoutsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InternetServiceLinkTimeouts) *InternetServiceLinkTimeouts {
		return &v
	}).(InternetServiceLinkTimeoutsPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o InternetServiceLinkTimeoutsOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InternetServiceLinkTimeouts) *string { return v.Create }).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
func (o InternetServiceLinkTimeoutsOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InternetServiceLinkTimeouts) *string { return v.Delete }).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
func (o InternetServiceLinkTimeoutsOutput) Read() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InternetServiceLinkTimeouts) *string { return v.Read }).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o InternetServiceLinkTimeoutsOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InternetServiceLinkTimeouts) *string { return v.Update }).(pulumi.StringPtrOutput)
}

type InternetServiceLinkTimeoutsPtrOutput struct{ *pulumi.OutputState }

func (InternetServiceLinkTimeoutsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InternetServiceLinkTimeouts)(nil)).Elem()
}

func (o InternetServiceLinkTimeoutsPtrOutput) ToInternetServiceLinkTimeoutsPtrOutput() InternetServiceLinkTimeoutsPtrOutput {
	return o
}

func (o InternetServiceLinkTimeoutsPtrOutput) ToInternetServiceLinkTimeoutsPtrOutputWithContext(ctx context.Context) InternetServiceLinkTimeoutsPtrOutput {
	return o
}

func (o InternetServiceLinkTimeoutsPtrOutput) Elem() InternetServiceLinkTimeoutsOutput {
	return o.ApplyT(func(v *InternetServiceLinkTimeouts) InternetServiceLinkTimeouts {
		if v != nil {
			return *v
		}
		var ret InternetServiceLinkTimeouts
		return ret
	}).(InternetServiceLinkTimeoutsOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o InternetServiceLinkTimeoutsPtrOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InternetServiceLinkTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Create
	}).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
func (o InternetServiceLinkTimeoutsPtrOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InternetServiceLinkTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Delete
	}).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
func (o InternetServiceLinkTimeoutsPtrOutput) Read() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InternetServiceLinkTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Read
	}).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o InternetServiceLinkTimeoutsPtrOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InternetServiceLinkTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Update
	}).(pulumi.StringPtrOutput)
}

type InternetServiceTag struct {
	// The key of the tag, with a minimum of 1 character.
	Key string `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value *string `pulumi:"value"`
}

// InternetServiceTagInput is an input type that accepts InternetServiceTagArgs and InternetServiceTagOutput values.
// You can construct a concrete instance of `InternetServiceTagInput` via:
//
//	InternetServiceTagArgs{...}
type InternetServiceTagInput interface {
	pulumi.Input

	ToInternetServiceTagOutput() InternetServiceTagOutput
	ToInternetServiceTagOutputWithContext(context.Context) InternetServiceTagOutput
}

type InternetServiceTagArgs struct {
	// The key of the tag, with a minimum of 1 character.
	Key pulumi.StringInput `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (InternetServiceTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InternetServiceTag)(nil)).Elem()
}

func (i InternetServiceTagArgs) ToInternetServiceTagOutput() InternetServiceTagOutput {
	return i.ToInternetServiceTagOutputWithContext(context.Background())
}

func (i InternetServiceTagArgs) ToInternetServiceTagOutputWithContext(ctx context.Context) InternetServiceTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InternetServiceTagOutput)
}

// InternetServiceTagArrayInput is an input type that accepts InternetServiceTagArray and InternetServiceTagArrayOutput values.
// You can construct a concrete instance of `InternetServiceTagArrayInput` via:
//
//	InternetServiceTagArray{ InternetServiceTagArgs{...} }
type InternetServiceTagArrayInput interface {
	pulumi.Input

	ToInternetServiceTagArrayOutput() InternetServiceTagArrayOutput
	ToInternetServiceTagArrayOutputWithContext(context.Context) InternetServiceTagArrayOutput
}

type InternetServiceTagArray []InternetServiceTagInput

func (InternetServiceTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InternetServiceTag)(nil)).Elem()
}

func (i InternetServiceTagArray) ToInternetServiceTagArrayOutput() InternetServiceTagArrayOutput {
	return i.ToInternetServiceTagArrayOutputWithContext(context.Background())
}

func (i InternetServiceTagArray) ToInternetServiceTagArrayOutputWithContext(ctx context.Context) InternetServiceTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InternetServiceTagArrayOutput)
}

type InternetServiceTagOutput struct{ *pulumi.OutputState }

func (InternetServiceTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InternetServiceTag)(nil)).Elem()
}

func (o InternetServiceTagOutput) ToInternetServiceTagOutput() InternetServiceTagOutput {
	return o
}

func (o InternetServiceTagOutput) ToInternetServiceTagOutputWithContext(ctx context.Context) InternetServiceTagOutput {
	return o
}

// The key of the tag, with a minimum of 1 character.
func (o InternetServiceTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v InternetServiceTag) string { return v.Key }).(pulumi.StringOutput)
}

// The value of the tag, between 0 and 255 characters.
func (o InternetServiceTagOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InternetServiceTag) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type InternetServiceTagArrayOutput struct{ *pulumi.OutputState }

func (InternetServiceTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InternetServiceTag)(nil)).Elem()
}

func (o InternetServiceTagArrayOutput) ToInternetServiceTagArrayOutput() InternetServiceTagArrayOutput {
	return o
}

func (o InternetServiceTagArrayOutput) ToInternetServiceTagArrayOutputWithContext(ctx context.Context) InternetServiceTagArrayOutput {
	return o
}

func (o InternetServiceTagArrayOutput) Index(i pulumi.IntInput) InternetServiceTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InternetServiceTag {
		return vs[0].([]InternetServiceTag)[vs[1].(int)]
	}).(InternetServiceTagOutput)
}

type InternetServiceTimeouts struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Create *string `pulumi:"create"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
	Delete *string `pulumi:"delete"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
	Read *string `pulumi:"read"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Update *string `pulumi:"update"`
}

// InternetServiceTimeoutsInput is an input type that accepts InternetServiceTimeoutsArgs and InternetServiceTimeoutsOutput values.
// You can construct a concrete instance of `InternetServiceTimeoutsInput` via:
//
//	InternetServiceTimeoutsArgs{...}
type InternetServiceTimeoutsInput interface {
	pulumi.Input

	ToInternetServiceTimeoutsOutput() InternetServiceTimeoutsOutput
	ToInternetServiceTimeoutsOutputWithContext(context.Context) InternetServiceTimeoutsOutput
}

type InternetServiceTimeoutsArgs struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Create pulumi.StringPtrInput `pulumi:"create"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
	Delete pulumi.StringPtrInput `pulumi:"delete"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
	Read pulumi.StringPtrInput `pulumi:"read"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Update pulumi.StringPtrInput `pulumi:"update"`
}

func (InternetServiceTimeoutsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InternetServiceTimeouts)(nil)).Elem()
}

func (i InternetServiceTimeoutsArgs) ToInternetServiceTimeoutsOutput() InternetServiceTimeoutsOutput {
	return i.ToInternetServiceTimeoutsOutputWithContext(context.Background())
}

func (i InternetServiceTimeoutsArgs) ToInternetServiceTimeoutsOutputWithContext(ctx context.Context) InternetServiceTimeoutsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InternetServiceTimeoutsOutput)
}

func (i InternetServiceTimeoutsArgs) ToInternetServiceTimeoutsPtrOutput() InternetServiceTimeoutsPtrOutput {
	return i.ToInternetServiceTimeoutsPtrOutputWithContext(context.Background())
}

func (i InternetServiceTimeoutsArgs) ToInternetServiceTimeoutsPtrOutputWithContext(ctx context.Context) InternetServiceTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InternetServiceTimeoutsOutput).ToInternetServiceTimeoutsPtrOutputWithContext(ctx)
}

// InternetServiceTimeoutsPtrInput is an input type that accepts InternetServiceTimeoutsArgs, InternetServiceTimeoutsPtr and InternetServiceTimeoutsPtrOutput values.
// You can construct a concrete instance of `InternetServiceTimeoutsPtrInput` via:
//
//	        InternetServiceTimeoutsArgs{...}
//
//	or:
//
//	        nil
type InternetServiceTimeoutsPtrInput interface {
	pulumi.Input

	ToInternetServiceTimeoutsPtrOutput() InternetServiceTimeoutsPtrOutput
	ToInternetServiceTimeoutsPtrOutputWithContext(context.Context) InternetServiceTimeoutsPtrOutput
}

type internetServiceTimeoutsPtrType InternetServiceTimeoutsArgs

func InternetServiceTimeoutsPtr(v *InternetServiceTimeoutsArgs) InternetServiceTimeoutsPtrInput {
	return (*internetServiceTimeoutsPtrType)(v)
}

func (*internetServiceTimeoutsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InternetServiceTimeouts)(nil)).Elem()
}

func (i *internetServiceTimeoutsPtrType) ToInternetServiceTimeoutsPtrOutput() InternetServiceTimeoutsPtrOutput {
	return i.ToInternetServiceTimeoutsPtrOutputWithContext(context.Background())
}

func (i *internetServiceTimeoutsPtrType) ToInternetServiceTimeoutsPtrOutputWithContext(ctx context.Context) InternetServiceTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InternetServiceTimeoutsPtrOutput)
}

type InternetServiceTimeoutsOutput struct{ *pulumi.OutputState }

func (InternetServiceTimeoutsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InternetServiceTimeouts)(nil)).Elem()
}

func (o InternetServiceTimeoutsOutput) ToInternetServiceTimeoutsOutput() InternetServiceTimeoutsOutput {
	return o
}

func (o InternetServiceTimeoutsOutput) ToInternetServiceTimeoutsOutputWithContext(ctx context.Context) InternetServiceTimeoutsOutput {
	return o
}

func (o InternetServiceTimeoutsOutput) ToInternetServiceTimeoutsPtrOutput() InternetServiceTimeoutsPtrOutput {
	return o.ToInternetServiceTimeoutsPtrOutputWithContext(context.Background())
}

func (o InternetServiceTimeoutsOutput) ToInternetServiceTimeoutsPtrOutputWithContext(ctx context.Context) InternetServiceTimeoutsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InternetServiceTimeouts) *InternetServiceTimeouts {
		return &v
	}).(InternetServiceTimeoutsPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o InternetServiceTimeoutsOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InternetServiceTimeouts) *string { return v.Create }).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
func (o InternetServiceTimeoutsOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InternetServiceTimeouts) *string { return v.Delete }).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
func (o InternetServiceTimeoutsOutput) Read() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InternetServiceTimeouts) *string { return v.Read }).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o InternetServiceTimeoutsOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InternetServiceTimeouts) *string { return v.Update }).(pulumi.StringPtrOutput)
}

type InternetServiceTimeoutsPtrOutput struct{ *pulumi.OutputState }

func (InternetServiceTimeoutsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InternetServiceTimeouts)(nil)).Elem()
}

func (o InternetServiceTimeoutsPtrOutput) ToInternetServiceTimeoutsPtrOutput() InternetServiceTimeoutsPtrOutput {
	return o
}

func (o InternetServiceTimeoutsPtrOutput) ToInternetServiceTimeoutsPtrOutputWithContext(ctx context.Context) InternetServiceTimeoutsPtrOutput {
	return o
}

func (o InternetServiceTimeoutsPtrOutput) Elem() InternetServiceTimeoutsOutput {
	return o.ApplyT(func(v *InternetServiceTimeouts) InternetServiceTimeouts {
		if v != nil {
			return *v
		}
		var ret InternetServiceTimeouts
		return ret
	}).(InternetServiceTimeoutsOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o InternetServiceTimeoutsPtrOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InternetServiceTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Create
	}).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
func (o InternetServiceTimeoutsPtrOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InternetServiceTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Delete
	}).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
func (o InternetServiceTimeoutsPtrOutput) Read() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InternetServiceTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Read
	}).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o InternetServiceTimeoutsPtrOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InternetServiceTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Update
	}).(pulumi.StringPtrOutput)
}

type KeypairTag struct {
	// The key of the tag, with a minimum of 1 character.
	Key string `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value *string `pulumi:"value"`
}

// KeypairTagInput is an input type that accepts KeypairTagArgs and KeypairTagOutput values.
// You can construct a concrete instance of `KeypairTagInput` via:
//
//	KeypairTagArgs{...}
type KeypairTagInput interface {
	pulumi.Input

	ToKeypairTagOutput() KeypairTagOutput
	ToKeypairTagOutputWithContext(context.Context) KeypairTagOutput
}

type KeypairTagArgs struct {
	// The key of the tag, with a minimum of 1 character.
	Key pulumi.StringInput `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (KeypairTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeypairTag)(nil)).Elem()
}

func (i KeypairTagArgs) ToKeypairTagOutput() KeypairTagOutput {
	return i.ToKeypairTagOutputWithContext(context.Background())
}

func (i KeypairTagArgs) ToKeypairTagOutputWithContext(ctx context.Context) KeypairTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeypairTagOutput)
}

// KeypairTagArrayInput is an input type that accepts KeypairTagArray and KeypairTagArrayOutput values.
// You can construct a concrete instance of `KeypairTagArrayInput` via:
//
//	KeypairTagArray{ KeypairTagArgs{...} }
type KeypairTagArrayInput interface {
	pulumi.Input

	ToKeypairTagArrayOutput() KeypairTagArrayOutput
	ToKeypairTagArrayOutputWithContext(context.Context) KeypairTagArrayOutput
}

type KeypairTagArray []KeypairTagInput

func (KeypairTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KeypairTag)(nil)).Elem()
}

func (i KeypairTagArray) ToKeypairTagArrayOutput() KeypairTagArrayOutput {
	return i.ToKeypairTagArrayOutputWithContext(context.Background())
}

func (i KeypairTagArray) ToKeypairTagArrayOutputWithContext(ctx context.Context) KeypairTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeypairTagArrayOutput)
}

type KeypairTagOutput struct{ *pulumi.OutputState }

func (KeypairTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeypairTag)(nil)).Elem()
}

func (o KeypairTagOutput) ToKeypairTagOutput() KeypairTagOutput {
	return o
}

func (o KeypairTagOutput) ToKeypairTagOutputWithContext(ctx context.Context) KeypairTagOutput {
	return o
}

// The key of the tag, with a minimum of 1 character.
func (o KeypairTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v KeypairTag) string { return v.Key }).(pulumi.StringOutput)
}

// The value of the tag, between 0 and 255 characters.
func (o KeypairTagOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeypairTag) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type KeypairTagArrayOutput struct{ *pulumi.OutputState }

func (KeypairTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KeypairTag)(nil)).Elem()
}

func (o KeypairTagArrayOutput) ToKeypairTagArrayOutput() KeypairTagArrayOutput {
	return o
}

func (o KeypairTagArrayOutput) ToKeypairTagArrayOutputWithContext(ctx context.Context) KeypairTagArrayOutput {
	return o
}

func (o KeypairTagArrayOutput) Index(i pulumi.IntInput) KeypairTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KeypairTag {
		return vs[0].([]KeypairTag)[vs[1].(int)]
	}).(KeypairTagOutput)
}

type KeypairTimeouts struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Create *string `pulumi:"create"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
	Delete *string `pulumi:"delete"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
	Read *string `pulumi:"read"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Update *string `pulumi:"update"`
}

// KeypairTimeoutsInput is an input type that accepts KeypairTimeoutsArgs and KeypairTimeoutsOutput values.
// You can construct a concrete instance of `KeypairTimeoutsInput` via:
//
//	KeypairTimeoutsArgs{...}
type KeypairTimeoutsInput interface {
	pulumi.Input

	ToKeypairTimeoutsOutput() KeypairTimeoutsOutput
	ToKeypairTimeoutsOutputWithContext(context.Context) KeypairTimeoutsOutput
}

type KeypairTimeoutsArgs struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Create pulumi.StringPtrInput `pulumi:"create"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
	Delete pulumi.StringPtrInput `pulumi:"delete"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
	Read pulumi.StringPtrInput `pulumi:"read"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Update pulumi.StringPtrInput `pulumi:"update"`
}

func (KeypairTimeoutsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeypairTimeouts)(nil)).Elem()
}

func (i KeypairTimeoutsArgs) ToKeypairTimeoutsOutput() KeypairTimeoutsOutput {
	return i.ToKeypairTimeoutsOutputWithContext(context.Background())
}

func (i KeypairTimeoutsArgs) ToKeypairTimeoutsOutputWithContext(ctx context.Context) KeypairTimeoutsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeypairTimeoutsOutput)
}

func (i KeypairTimeoutsArgs) ToKeypairTimeoutsPtrOutput() KeypairTimeoutsPtrOutput {
	return i.ToKeypairTimeoutsPtrOutputWithContext(context.Background())
}

func (i KeypairTimeoutsArgs) ToKeypairTimeoutsPtrOutputWithContext(ctx context.Context) KeypairTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeypairTimeoutsOutput).ToKeypairTimeoutsPtrOutputWithContext(ctx)
}

// KeypairTimeoutsPtrInput is an input type that accepts KeypairTimeoutsArgs, KeypairTimeoutsPtr and KeypairTimeoutsPtrOutput values.
// You can construct a concrete instance of `KeypairTimeoutsPtrInput` via:
//
//	        KeypairTimeoutsArgs{...}
//
//	or:
//
//	        nil
type KeypairTimeoutsPtrInput interface {
	pulumi.Input

	ToKeypairTimeoutsPtrOutput() KeypairTimeoutsPtrOutput
	ToKeypairTimeoutsPtrOutputWithContext(context.Context) KeypairTimeoutsPtrOutput
}

type keypairTimeoutsPtrType KeypairTimeoutsArgs

func KeypairTimeoutsPtr(v *KeypairTimeoutsArgs) KeypairTimeoutsPtrInput {
	return (*keypairTimeoutsPtrType)(v)
}

func (*keypairTimeoutsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KeypairTimeouts)(nil)).Elem()
}

func (i *keypairTimeoutsPtrType) ToKeypairTimeoutsPtrOutput() KeypairTimeoutsPtrOutput {
	return i.ToKeypairTimeoutsPtrOutputWithContext(context.Background())
}

func (i *keypairTimeoutsPtrType) ToKeypairTimeoutsPtrOutputWithContext(ctx context.Context) KeypairTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeypairTimeoutsPtrOutput)
}

type KeypairTimeoutsOutput struct{ *pulumi.OutputState }

func (KeypairTimeoutsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeypairTimeouts)(nil)).Elem()
}

func (o KeypairTimeoutsOutput) ToKeypairTimeoutsOutput() KeypairTimeoutsOutput {
	return o
}

func (o KeypairTimeoutsOutput) ToKeypairTimeoutsOutputWithContext(ctx context.Context) KeypairTimeoutsOutput {
	return o
}

func (o KeypairTimeoutsOutput) ToKeypairTimeoutsPtrOutput() KeypairTimeoutsPtrOutput {
	return o.ToKeypairTimeoutsPtrOutputWithContext(context.Background())
}

func (o KeypairTimeoutsOutput) ToKeypairTimeoutsPtrOutputWithContext(ctx context.Context) KeypairTimeoutsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KeypairTimeouts) *KeypairTimeouts {
		return &v
	}).(KeypairTimeoutsPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o KeypairTimeoutsOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeypairTimeouts) *string { return v.Create }).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
func (o KeypairTimeoutsOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeypairTimeouts) *string { return v.Delete }).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
func (o KeypairTimeoutsOutput) Read() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeypairTimeouts) *string { return v.Read }).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o KeypairTimeoutsOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeypairTimeouts) *string { return v.Update }).(pulumi.StringPtrOutput)
}

type KeypairTimeoutsPtrOutput struct{ *pulumi.OutputState }

func (KeypairTimeoutsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KeypairTimeouts)(nil)).Elem()
}

func (o KeypairTimeoutsPtrOutput) ToKeypairTimeoutsPtrOutput() KeypairTimeoutsPtrOutput {
	return o
}

func (o KeypairTimeoutsPtrOutput) ToKeypairTimeoutsPtrOutputWithContext(ctx context.Context) KeypairTimeoutsPtrOutput {
	return o
}

func (o KeypairTimeoutsPtrOutput) Elem() KeypairTimeoutsOutput {
	return o.ApplyT(func(v *KeypairTimeouts) KeypairTimeouts {
		if v != nil {
			return *v
		}
		var ret KeypairTimeouts
		return ret
	}).(KeypairTimeoutsOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o KeypairTimeoutsPtrOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeypairTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Create
	}).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
func (o KeypairTimeoutsPtrOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeypairTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Delete
	}).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
func (o KeypairTimeoutsPtrOutput) Read() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeypairTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Read
	}).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o KeypairTimeoutsPtrOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeypairTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Update
	}).(pulumi.StringPtrOutput)
}

type LoadBalancerAccessLog struct {
	// If true, access logs are enabled for your load balancer. If false, they are not. If you set this to true in your request, the `osuBucketName` parameter is required.
	IsEnabled *bool `pulumi:"isEnabled"`
	// The name of the OOS bucket for the access logs.
	OsuBucketName *string `pulumi:"osuBucketName"`
	// The path to the folder of the access logs in your OOS bucket (by default, the `root` level of your bucket).
	OsuBucketPrefix *string `pulumi:"osuBucketPrefix"`
	// The time interval for the publication of access logs in the OOS bucket, in minutes. This value can be either `5` or `60` (by default, `60`).
	PublicationInterval *int `pulumi:"publicationInterval"`
}

// LoadBalancerAccessLogInput is an input type that accepts LoadBalancerAccessLogArgs and LoadBalancerAccessLogOutput values.
// You can construct a concrete instance of `LoadBalancerAccessLogInput` via:
//
//	LoadBalancerAccessLogArgs{...}
type LoadBalancerAccessLogInput interface {
	pulumi.Input

	ToLoadBalancerAccessLogOutput() LoadBalancerAccessLogOutput
	ToLoadBalancerAccessLogOutputWithContext(context.Context) LoadBalancerAccessLogOutput
}

type LoadBalancerAccessLogArgs struct {
	// If true, access logs are enabled for your load balancer. If false, they are not. If you set this to true in your request, the `osuBucketName` parameter is required.
	IsEnabled pulumi.BoolPtrInput `pulumi:"isEnabled"`
	// The name of the OOS bucket for the access logs.
	OsuBucketName pulumi.StringPtrInput `pulumi:"osuBucketName"`
	// The path to the folder of the access logs in your OOS bucket (by default, the `root` level of your bucket).
	OsuBucketPrefix pulumi.StringPtrInput `pulumi:"osuBucketPrefix"`
	// The time interval for the publication of access logs in the OOS bucket, in minutes. This value can be either `5` or `60` (by default, `60`).
	PublicationInterval pulumi.IntPtrInput `pulumi:"publicationInterval"`
}

func (LoadBalancerAccessLogArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerAccessLog)(nil)).Elem()
}

func (i LoadBalancerAccessLogArgs) ToLoadBalancerAccessLogOutput() LoadBalancerAccessLogOutput {
	return i.ToLoadBalancerAccessLogOutputWithContext(context.Background())
}

func (i LoadBalancerAccessLogArgs) ToLoadBalancerAccessLogOutputWithContext(ctx context.Context) LoadBalancerAccessLogOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerAccessLogOutput)
}

// LoadBalancerAccessLogArrayInput is an input type that accepts LoadBalancerAccessLogArray and LoadBalancerAccessLogArrayOutput values.
// You can construct a concrete instance of `LoadBalancerAccessLogArrayInput` via:
//
//	LoadBalancerAccessLogArray{ LoadBalancerAccessLogArgs{...} }
type LoadBalancerAccessLogArrayInput interface {
	pulumi.Input

	ToLoadBalancerAccessLogArrayOutput() LoadBalancerAccessLogArrayOutput
	ToLoadBalancerAccessLogArrayOutputWithContext(context.Context) LoadBalancerAccessLogArrayOutput
}

type LoadBalancerAccessLogArray []LoadBalancerAccessLogInput

func (LoadBalancerAccessLogArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancerAccessLog)(nil)).Elem()
}

func (i LoadBalancerAccessLogArray) ToLoadBalancerAccessLogArrayOutput() LoadBalancerAccessLogArrayOutput {
	return i.ToLoadBalancerAccessLogArrayOutputWithContext(context.Background())
}

func (i LoadBalancerAccessLogArray) ToLoadBalancerAccessLogArrayOutputWithContext(ctx context.Context) LoadBalancerAccessLogArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerAccessLogArrayOutput)
}

type LoadBalancerAccessLogOutput struct{ *pulumi.OutputState }

func (LoadBalancerAccessLogOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerAccessLog)(nil)).Elem()
}

func (o LoadBalancerAccessLogOutput) ToLoadBalancerAccessLogOutput() LoadBalancerAccessLogOutput {
	return o
}

func (o LoadBalancerAccessLogOutput) ToLoadBalancerAccessLogOutputWithContext(ctx context.Context) LoadBalancerAccessLogOutput {
	return o
}

// If true, access logs are enabled for your load balancer. If false, they are not. If you set this to true in your request, the `osuBucketName` parameter is required.
func (o LoadBalancerAccessLogOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LoadBalancerAccessLog) *bool { return v.IsEnabled }).(pulumi.BoolPtrOutput)
}

// The name of the OOS bucket for the access logs.
func (o LoadBalancerAccessLogOutput) OsuBucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerAccessLog) *string { return v.OsuBucketName }).(pulumi.StringPtrOutput)
}

// The path to the folder of the access logs in your OOS bucket (by default, the `root` level of your bucket).
func (o LoadBalancerAccessLogOutput) OsuBucketPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerAccessLog) *string { return v.OsuBucketPrefix }).(pulumi.StringPtrOutput)
}

// The time interval for the publication of access logs in the OOS bucket, in minutes. This value can be either `5` or `60` (by default, `60`).
func (o LoadBalancerAccessLogOutput) PublicationInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LoadBalancerAccessLog) *int { return v.PublicationInterval }).(pulumi.IntPtrOutput)
}

type LoadBalancerAccessLogArrayOutput struct{ *pulumi.OutputState }

func (LoadBalancerAccessLogArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancerAccessLog)(nil)).Elem()
}

func (o LoadBalancerAccessLogArrayOutput) ToLoadBalancerAccessLogArrayOutput() LoadBalancerAccessLogArrayOutput {
	return o
}

func (o LoadBalancerAccessLogArrayOutput) ToLoadBalancerAccessLogArrayOutputWithContext(ctx context.Context) LoadBalancerAccessLogArrayOutput {
	return o
}

func (o LoadBalancerAccessLogArrayOutput) Index(i pulumi.IntInput) LoadBalancerAccessLogOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LoadBalancerAccessLog {
		return vs[0].([]LoadBalancerAccessLog)[vs[1].(int)]
	}).(LoadBalancerAccessLogOutput)
}

type LoadBalancerApplicationStickyCookiePolicy struct {
	// The name of the application cookie used for stickiness.
	CookieName *string `pulumi:"cookieName"`
	// The name of the stickiness policy.
	PolicyName *string `pulumi:"policyName"`
}

// LoadBalancerApplicationStickyCookiePolicyInput is an input type that accepts LoadBalancerApplicationStickyCookiePolicyArgs and LoadBalancerApplicationStickyCookiePolicyOutput values.
// You can construct a concrete instance of `LoadBalancerApplicationStickyCookiePolicyInput` via:
//
//	LoadBalancerApplicationStickyCookiePolicyArgs{...}
type LoadBalancerApplicationStickyCookiePolicyInput interface {
	pulumi.Input

	ToLoadBalancerApplicationStickyCookiePolicyOutput() LoadBalancerApplicationStickyCookiePolicyOutput
	ToLoadBalancerApplicationStickyCookiePolicyOutputWithContext(context.Context) LoadBalancerApplicationStickyCookiePolicyOutput
}

type LoadBalancerApplicationStickyCookiePolicyArgs struct {
	// The name of the application cookie used for stickiness.
	CookieName pulumi.StringPtrInput `pulumi:"cookieName"`
	// The name of the stickiness policy.
	PolicyName pulumi.StringPtrInput `pulumi:"policyName"`
}

func (LoadBalancerApplicationStickyCookiePolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerApplicationStickyCookiePolicy)(nil)).Elem()
}

func (i LoadBalancerApplicationStickyCookiePolicyArgs) ToLoadBalancerApplicationStickyCookiePolicyOutput() LoadBalancerApplicationStickyCookiePolicyOutput {
	return i.ToLoadBalancerApplicationStickyCookiePolicyOutputWithContext(context.Background())
}

func (i LoadBalancerApplicationStickyCookiePolicyArgs) ToLoadBalancerApplicationStickyCookiePolicyOutputWithContext(ctx context.Context) LoadBalancerApplicationStickyCookiePolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerApplicationStickyCookiePolicyOutput)
}

// LoadBalancerApplicationStickyCookiePolicyArrayInput is an input type that accepts LoadBalancerApplicationStickyCookiePolicyArray and LoadBalancerApplicationStickyCookiePolicyArrayOutput values.
// You can construct a concrete instance of `LoadBalancerApplicationStickyCookiePolicyArrayInput` via:
//
//	LoadBalancerApplicationStickyCookiePolicyArray{ LoadBalancerApplicationStickyCookiePolicyArgs{...} }
type LoadBalancerApplicationStickyCookiePolicyArrayInput interface {
	pulumi.Input

	ToLoadBalancerApplicationStickyCookiePolicyArrayOutput() LoadBalancerApplicationStickyCookiePolicyArrayOutput
	ToLoadBalancerApplicationStickyCookiePolicyArrayOutputWithContext(context.Context) LoadBalancerApplicationStickyCookiePolicyArrayOutput
}

type LoadBalancerApplicationStickyCookiePolicyArray []LoadBalancerApplicationStickyCookiePolicyInput

func (LoadBalancerApplicationStickyCookiePolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancerApplicationStickyCookiePolicy)(nil)).Elem()
}

func (i LoadBalancerApplicationStickyCookiePolicyArray) ToLoadBalancerApplicationStickyCookiePolicyArrayOutput() LoadBalancerApplicationStickyCookiePolicyArrayOutput {
	return i.ToLoadBalancerApplicationStickyCookiePolicyArrayOutputWithContext(context.Background())
}

func (i LoadBalancerApplicationStickyCookiePolicyArray) ToLoadBalancerApplicationStickyCookiePolicyArrayOutputWithContext(ctx context.Context) LoadBalancerApplicationStickyCookiePolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerApplicationStickyCookiePolicyArrayOutput)
}

type LoadBalancerApplicationStickyCookiePolicyOutput struct{ *pulumi.OutputState }

func (LoadBalancerApplicationStickyCookiePolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerApplicationStickyCookiePolicy)(nil)).Elem()
}

func (o LoadBalancerApplicationStickyCookiePolicyOutput) ToLoadBalancerApplicationStickyCookiePolicyOutput() LoadBalancerApplicationStickyCookiePolicyOutput {
	return o
}

func (o LoadBalancerApplicationStickyCookiePolicyOutput) ToLoadBalancerApplicationStickyCookiePolicyOutputWithContext(ctx context.Context) LoadBalancerApplicationStickyCookiePolicyOutput {
	return o
}

// The name of the application cookie used for stickiness.
func (o LoadBalancerApplicationStickyCookiePolicyOutput) CookieName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerApplicationStickyCookiePolicy) *string { return v.CookieName }).(pulumi.StringPtrOutput)
}

// The name of the stickiness policy.
func (o LoadBalancerApplicationStickyCookiePolicyOutput) PolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerApplicationStickyCookiePolicy) *string { return v.PolicyName }).(pulumi.StringPtrOutput)
}

type LoadBalancerApplicationStickyCookiePolicyArrayOutput struct{ *pulumi.OutputState }

func (LoadBalancerApplicationStickyCookiePolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancerApplicationStickyCookiePolicy)(nil)).Elem()
}

func (o LoadBalancerApplicationStickyCookiePolicyArrayOutput) ToLoadBalancerApplicationStickyCookiePolicyArrayOutput() LoadBalancerApplicationStickyCookiePolicyArrayOutput {
	return o
}

func (o LoadBalancerApplicationStickyCookiePolicyArrayOutput) ToLoadBalancerApplicationStickyCookiePolicyArrayOutputWithContext(ctx context.Context) LoadBalancerApplicationStickyCookiePolicyArrayOutput {
	return o
}

func (o LoadBalancerApplicationStickyCookiePolicyArrayOutput) Index(i pulumi.IntInput) LoadBalancerApplicationStickyCookiePolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LoadBalancerApplicationStickyCookiePolicy {
		return vs[0].([]LoadBalancerApplicationStickyCookiePolicy)[vs[1].(int)]
	}).(LoadBalancerApplicationStickyCookiePolicyOutput)
}

type LoadBalancerAttributesAccessLog struct {
	// If true, access logs are enabled for your load balancer. If false, they are not. If you set this to true in your request, the `osuBucketName` parameter is required.
	IsEnabled *bool `pulumi:"isEnabled"`
	// The name of the OOS bucket for the access logs.
	OsuBucketName *string `pulumi:"osuBucketName"`
	// The path to the folder of the access logs in your OOS bucket (by default, the `root` level of your bucket).
	OsuBucketPrefix *string `pulumi:"osuBucketPrefix"`
	// The time interval for the publication of access logs in the OOS bucket, in minutes. This value can be either `5` or `60` (by default, `60`).
	PublicationInterval *int `pulumi:"publicationInterval"`
}

// LoadBalancerAttributesAccessLogInput is an input type that accepts LoadBalancerAttributesAccessLogArgs and LoadBalancerAttributesAccessLogOutput values.
// You can construct a concrete instance of `LoadBalancerAttributesAccessLogInput` via:
//
//	LoadBalancerAttributesAccessLogArgs{...}
type LoadBalancerAttributesAccessLogInput interface {
	pulumi.Input

	ToLoadBalancerAttributesAccessLogOutput() LoadBalancerAttributesAccessLogOutput
	ToLoadBalancerAttributesAccessLogOutputWithContext(context.Context) LoadBalancerAttributesAccessLogOutput
}

type LoadBalancerAttributesAccessLogArgs struct {
	// If true, access logs are enabled for your load balancer. If false, they are not. If you set this to true in your request, the `osuBucketName` parameter is required.
	IsEnabled pulumi.BoolPtrInput `pulumi:"isEnabled"`
	// The name of the OOS bucket for the access logs.
	OsuBucketName pulumi.StringPtrInput `pulumi:"osuBucketName"`
	// The path to the folder of the access logs in your OOS bucket (by default, the `root` level of your bucket).
	OsuBucketPrefix pulumi.StringPtrInput `pulumi:"osuBucketPrefix"`
	// The time interval for the publication of access logs in the OOS bucket, in minutes. This value can be either `5` or `60` (by default, `60`).
	PublicationInterval pulumi.IntPtrInput `pulumi:"publicationInterval"`
}

func (LoadBalancerAttributesAccessLogArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerAttributesAccessLog)(nil)).Elem()
}

func (i LoadBalancerAttributesAccessLogArgs) ToLoadBalancerAttributesAccessLogOutput() LoadBalancerAttributesAccessLogOutput {
	return i.ToLoadBalancerAttributesAccessLogOutputWithContext(context.Background())
}

func (i LoadBalancerAttributesAccessLogArgs) ToLoadBalancerAttributesAccessLogOutputWithContext(ctx context.Context) LoadBalancerAttributesAccessLogOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerAttributesAccessLogOutput)
}

func (i LoadBalancerAttributesAccessLogArgs) ToLoadBalancerAttributesAccessLogPtrOutput() LoadBalancerAttributesAccessLogPtrOutput {
	return i.ToLoadBalancerAttributesAccessLogPtrOutputWithContext(context.Background())
}

func (i LoadBalancerAttributesAccessLogArgs) ToLoadBalancerAttributesAccessLogPtrOutputWithContext(ctx context.Context) LoadBalancerAttributesAccessLogPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerAttributesAccessLogOutput).ToLoadBalancerAttributesAccessLogPtrOutputWithContext(ctx)
}

// LoadBalancerAttributesAccessLogPtrInput is an input type that accepts LoadBalancerAttributesAccessLogArgs, LoadBalancerAttributesAccessLogPtr and LoadBalancerAttributesAccessLogPtrOutput values.
// You can construct a concrete instance of `LoadBalancerAttributesAccessLogPtrInput` via:
//
//	        LoadBalancerAttributesAccessLogArgs{...}
//
//	or:
//
//	        nil
type LoadBalancerAttributesAccessLogPtrInput interface {
	pulumi.Input

	ToLoadBalancerAttributesAccessLogPtrOutput() LoadBalancerAttributesAccessLogPtrOutput
	ToLoadBalancerAttributesAccessLogPtrOutputWithContext(context.Context) LoadBalancerAttributesAccessLogPtrOutput
}

type loadBalancerAttributesAccessLogPtrType LoadBalancerAttributesAccessLogArgs

func LoadBalancerAttributesAccessLogPtr(v *LoadBalancerAttributesAccessLogArgs) LoadBalancerAttributesAccessLogPtrInput {
	return (*loadBalancerAttributesAccessLogPtrType)(v)
}

func (*loadBalancerAttributesAccessLogPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LoadBalancerAttributesAccessLog)(nil)).Elem()
}

func (i *loadBalancerAttributesAccessLogPtrType) ToLoadBalancerAttributesAccessLogPtrOutput() LoadBalancerAttributesAccessLogPtrOutput {
	return i.ToLoadBalancerAttributesAccessLogPtrOutputWithContext(context.Background())
}

func (i *loadBalancerAttributesAccessLogPtrType) ToLoadBalancerAttributesAccessLogPtrOutputWithContext(ctx context.Context) LoadBalancerAttributesAccessLogPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerAttributesAccessLogPtrOutput)
}

type LoadBalancerAttributesAccessLogOutput struct{ *pulumi.OutputState }

func (LoadBalancerAttributesAccessLogOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerAttributesAccessLog)(nil)).Elem()
}

func (o LoadBalancerAttributesAccessLogOutput) ToLoadBalancerAttributesAccessLogOutput() LoadBalancerAttributesAccessLogOutput {
	return o
}

func (o LoadBalancerAttributesAccessLogOutput) ToLoadBalancerAttributesAccessLogOutputWithContext(ctx context.Context) LoadBalancerAttributesAccessLogOutput {
	return o
}

func (o LoadBalancerAttributesAccessLogOutput) ToLoadBalancerAttributesAccessLogPtrOutput() LoadBalancerAttributesAccessLogPtrOutput {
	return o.ToLoadBalancerAttributesAccessLogPtrOutputWithContext(context.Background())
}

func (o LoadBalancerAttributesAccessLogOutput) ToLoadBalancerAttributesAccessLogPtrOutputWithContext(ctx context.Context) LoadBalancerAttributesAccessLogPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LoadBalancerAttributesAccessLog) *LoadBalancerAttributesAccessLog {
		return &v
	}).(LoadBalancerAttributesAccessLogPtrOutput)
}

// If true, access logs are enabled for your load balancer. If false, they are not. If you set this to true in your request, the `osuBucketName` parameter is required.
func (o LoadBalancerAttributesAccessLogOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LoadBalancerAttributesAccessLog) *bool { return v.IsEnabled }).(pulumi.BoolPtrOutput)
}

// The name of the OOS bucket for the access logs.
func (o LoadBalancerAttributesAccessLogOutput) OsuBucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerAttributesAccessLog) *string { return v.OsuBucketName }).(pulumi.StringPtrOutput)
}

// The path to the folder of the access logs in your OOS bucket (by default, the `root` level of your bucket).
func (o LoadBalancerAttributesAccessLogOutput) OsuBucketPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerAttributesAccessLog) *string { return v.OsuBucketPrefix }).(pulumi.StringPtrOutput)
}

// The time interval for the publication of access logs in the OOS bucket, in minutes. This value can be either `5` or `60` (by default, `60`).
func (o LoadBalancerAttributesAccessLogOutput) PublicationInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LoadBalancerAttributesAccessLog) *int { return v.PublicationInterval }).(pulumi.IntPtrOutput)
}

type LoadBalancerAttributesAccessLogPtrOutput struct{ *pulumi.OutputState }

func (LoadBalancerAttributesAccessLogPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LoadBalancerAttributesAccessLog)(nil)).Elem()
}

func (o LoadBalancerAttributesAccessLogPtrOutput) ToLoadBalancerAttributesAccessLogPtrOutput() LoadBalancerAttributesAccessLogPtrOutput {
	return o
}

func (o LoadBalancerAttributesAccessLogPtrOutput) ToLoadBalancerAttributesAccessLogPtrOutputWithContext(ctx context.Context) LoadBalancerAttributesAccessLogPtrOutput {
	return o
}

func (o LoadBalancerAttributesAccessLogPtrOutput) Elem() LoadBalancerAttributesAccessLogOutput {
	return o.ApplyT(func(v *LoadBalancerAttributesAccessLog) LoadBalancerAttributesAccessLog {
		if v != nil {
			return *v
		}
		var ret LoadBalancerAttributesAccessLog
		return ret
	}).(LoadBalancerAttributesAccessLogOutput)
}

// If true, access logs are enabled for your load balancer. If false, they are not. If you set this to true in your request, the `osuBucketName` parameter is required.
func (o LoadBalancerAttributesAccessLogPtrOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LoadBalancerAttributesAccessLog) *bool {
		if v == nil {
			return nil
		}
		return v.IsEnabled
	}).(pulumi.BoolPtrOutput)
}

// The name of the OOS bucket for the access logs.
func (o LoadBalancerAttributesAccessLogPtrOutput) OsuBucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LoadBalancerAttributesAccessLog) *string {
		if v == nil {
			return nil
		}
		return v.OsuBucketName
	}).(pulumi.StringPtrOutput)
}

// The path to the folder of the access logs in your OOS bucket (by default, the `root` level of your bucket).
func (o LoadBalancerAttributesAccessLogPtrOutput) OsuBucketPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LoadBalancerAttributesAccessLog) *string {
		if v == nil {
			return nil
		}
		return v.OsuBucketPrefix
	}).(pulumi.StringPtrOutput)
}

// The time interval for the publication of access logs in the OOS bucket, in minutes. This value can be either `5` or `60` (by default, `60`).
func (o LoadBalancerAttributesAccessLogPtrOutput) PublicationInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LoadBalancerAttributesAccessLog) *int {
		if v == nil {
			return nil
		}
		return v.PublicationInterval
	}).(pulumi.IntPtrOutput)
}

type LoadBalancerAttributesApplicationStickyCookiePolicy struct {
	// The name of the application cookie used for stickiness.
	CookieName *string `pulumi:"cookieName"`
	// The name of the stickiness policy.
	PolicyName *string `pulumi:"policyName"`
}

// LoadBalancerAttributesApplicationStickyCookiePolicyInput is an input type that accepts LoadBalancerAttributesApplicationStickyCookiePolicyArgs and LoadBalancerAttributesApplicationStickyCookiePolicyOutput values.
// You can construct a concrete instance of `LoadBalancerAttributesApplicationStickyCookiePolicyInput` via:
//
//	LoadBalancerAttributesApplicationStickyCookiePolicyArgs{...}
type LoadBalancerAttributesApplicationStickyCookiePolicyInput interface {
	pulumi.Input

	ToLoadBalancerAttributesApplicationStickyCookiePolicyOutput() LoadBalancerAttributesApplicationStickyCookiePolicyOutput
	ToLoadBalancerAttributesApplicationStickyCookiePolicyOutputWithContext(context.Context) LoadBalancerAttributesApplicationStickyCookiePolicyOutput
}

type LoadBalancerAttributesApplicationStickyCookiePolicyArgs struct {
	// The name of the application cookie used for stickiness.
	CookieName pulumi.StringPtrInput `pulumi:"cookieName"`
	// The name of the stickiness policy.
	PolicyName pulumi.StringPtrInput `pulumi:"policyName"`
}

func (LoadBalancerAttributesApplicationStickyCookiePolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerAttributesApplicationStickyCookiePolicy)(nil)).Elem()
}

func (i LoadBalancerAttributesApplicationStickyCookiePolicyArgs) ToLoadBalancerAttributesApplicationStickyCookiePolicyOutput() LoadBalancerAttributesApplicationStickyCookiePolicyOutput {
	return i.ToLoadBalancerAttributesApplicationStickyCookiePolicyOutputWithContext(context.Background())
}

func (i LoadBalancerAttributesApplicationStickyCookiePolicyArgs) ToLoadBalancerAttributesApplicationStickyCookiePolicyOutputWithContext(ctx context.Context) LoadBalancerAttributesApplicationStickyCookiePolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerAttributesApplicationStickyCookiePolicyOutput)
}

// LoadBalancerAttributesApplicationStickyCookiePolicyArrayInput is an input type that accepts LoadBalancerAttributesApplicationStickyCookiePolicyArray and LoadBalancerAttributesApplicationStickyCookiePolicyArrayOutput values.
// You can construct a concrete instance of `LoadBalancerAttributesApplicationStickyCookiePolicyArrayInput` via:
//
//	LoadBalancerAttributesApplicationStickyCookiePolicyArray{ LoadBalancerAttributesApplicationStickyCookiePolicyArgs{...} }
type LoadBalancerAttributesApplicationStickyCookiePolicyArrayInput interface {
	pulumi.Input

	ToLoadBalancerAttributesApplicationStickyCookiePolicyArrayOutput() LoadBalancerAttributesApplicationStickyCookiePolicyArrayOutput
	ToLoadBalancerAttributesApplicationStickyCookiePolicyArrayOutputWithContext(context.Context) LoadBalancerAttributesApplicationStickyCookiePolicyArrayOutput
}

type LoadBalancerAttributesApplicationStickyCookiePolicyArray []LoadBalancerAttributesApplicationStickyCookiePolicyInput

func (LoadBalancerAttributesApplicationStickyCookiePolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancerAttributesApplicationStickyCookiePolicy)(nil)).Elem()
}

func (i LoadBalancerAttributesApplicationStickyCookiePolicyArray) ToLoadBalancerAttributesApplicationStickyCookiePolicyArrayOutput() LoadBalancerAttributesApplicationStickyCookiePolicyArrayOutput {
	return i.ToLoadBalancerAttributesApplicationStickyCookiePolicyArrayOutputWithContext(context.Background())
}

func (i LoadBalancerAttributesApplicationStickyCookiePolicyArray) ToLoadBalancerAttributesApplicationStickyCookiePolicyArrayOutputWithContext(ctx context.Context) LoadBalancerAttributesApplicationStickyCookiePolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerAttributesApplicationStickyCookiePolicyArrayOutput)
}

type LoadBalancerAttributesApplicationStickyCookiePolicyOutput struct{ *pulumi.OutputState }

func (LoadBalancerAttributesApplicationStickyCookiePolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerAttributesApplicationStickyCookiePolicy)(nil)).Elem()
}

func (o LoadBalancerAttributesApplicationStickyCookiePolicyOutput) ToLoadBalancerAttributesApplicationStickyCookiePolicyOutput() LoadBalancerAttributesApplicationStickyCookiePolicyOutput {
	return o
}

func (o LoadBalancerAttributesApplicationStickyCookiePolicyOutput) ToLoadBalancerAttributesApplicationStickyCookiePolicyOutputWithContext(ctx context.Context) LoadBalancerAttributesApplicationStickyCookiePolicyOutput {
	return o
}

// The name of the application cookie used for stickiness.
func (o LoadBalancerAttributesApplicationStickyCookiePolicyOutput) CookieName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerAttributesApplicationStickyCookiePolicy) *string { return v.CookieName }).(pulumi.StringPtrOutput)
}

// The name of the stickiness policy.
func (o LoadBalancerAttributesApplicationStickyCookiePolicyOutput) PolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerAttributesApplicationStickyCookiePolicy) *string { return v.PolicyName }).(pulumi.StringPtrOutput)
}

type LoadBalancerAttributesApplicationStickyCookiePolicyArrayOutput struct{ *pulumi.OutputState }

func (LoadBalancerAttributesApplicationStickyCookiePolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancerAttributesApplicationStickyCookiePolicy)(nil)).Elem()
}

func (o LoadBalancerAttributesApplicationStickyCookiePolicyArrayOutput) ToLoadBalancerAttributesApplicationStickyCookiePolicyArrayOutput() LoadBalancerAttributesApplicationStickyCookiePolicyArrayOutput {
	return o
}

func (o LoadBalancerAttributesApplicationStickyCookiePolicyArrayOutput) ToLoadBalancerAttributesApplicationStickyCookiePolicyArrayOutputWithContext(ctx context.Context) LoadBalancerAttributesApplicationStickyCookiePolicyArrayOutput {
	return o
}

func (o LoadBalancerAttributesApplicationStickyCookiePolicyArrayOutput) Index(i pulumi.IntInput) LoadBalancerAttributesApplicationStickyCookiePolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LoadBalancerAttributesApplicationStickyCookiePolicy {
		return vs[0].([]LoadBalancerAttributesApplicationStickyCookiePolicy)[vs[1].(int)]
	}).(LoadBalancerAttributesApplicationStickyCookiePolicyOutput)
}

type LoadBalancerAttributesHealthCheck struct {
	// The number of seconds between two requests (between `5` and `600` both included).
	CheckInterval *int `pulumi:"checkInterval"`
	// The number of consecutive successful requests before considering the VM as healthy (between `2` and `10` both included).
	HealthyThreshold *int `pulumi:"healthyThreshold"`
	// If you use the HTTP or HTTPS protocols, the request URL path.
	Path *string `pulumi:"path"`
	// The port number (between `1` and `65535`, both included).
	Port int `pulumi:"port"`
	// The protocol for the URL of the VM (`HTTP` \| `HTTPS` \| `TCP` \| `SSL`).
	Protocol string `pulumi:"protocol"`
	// The maximum waiting time for a response before considering the VM as unhealthy, in seconds (between `2` and `60` both included).
	Timeout *int `pulumi:"timeout"`
	// The number of consecutive failed requests before considering the VM as unhealthy (between `2` and `10` both included).
	UnhealthyThreshold *int `pulumi:"unhealthyThreshold"`
}

// LoadBalancerAttributesHealthCheckInput is an input type that accepts LoadBalancerAttributesHealthCheckArgs and LoadBalancerAttributesHealthCheckOutput values.
// You can construct a concrete instance of `LoadBalancerAttributesHealthCheckInput` via:
//
//	LoadBalancerAttributesHealthCheckArgs{...}
type LoadBalancerAttributesHealthCheckInput interface {
	pulumi.Input

	ToLoadBalancerAttributesHealthCheckOutput() LoadBalancerAttributesHealthCheckOutput
	ToLoadBalancerAttributesHealthCheckOutputWithContext(context.Context) LoadBalancerAttributesHealthCheckOutput
}

type LoadBalancerAttributesHealthCheckArgs struct {
	// The number of seconds between two requests (between `5` and `600` both included).
	CheckInterval pulumi.IntPtrInput `pulumi:"checkInterval"`
	// The number of consecutive successful requests before considering the VM as healthy (between `2` and `10` both included).
	HealthyThreshold pulumi.IntPtrInput `pulumi:"healthyThreshold"`
	// If you use the HTTP or HTTPS protocols, the request URL path.
	Path pulumi.StringPtrInput `pulumi:"path"`
	// The port number (between `1` and `65535`, both included).
	Port pulumi.IntInput `pulumi:"port"`
	// The protocol for the URL of the VM (`HTTP` \| `HTTPS` \| `TCP` \| `SSL`).
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// The maximum waiting time for a response before considering the VM as unhealthy, in seconds (between `2` and `60` both included).
	Timeout pulumi.IntPtrInput `pulumi:"timeout"`
	// The number of consecutive failed requests before considering the VM as unhealthy (between `2` and `10` both included).
	UnhealthyThreshold pulumi.IntPtrInput `pulumi:"unhealthyThreshold"`
}

func (LoadBalancerAttributesHealthCheckArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerAttributesHealthCheck)(nil)).Elem()
}

func (i LoadBalancerAttributesHealthCheckArgs) ToLoadBalancerAttributesHealthCheckOutput() LoadBalancerAttributesHealthCheckOutput {
	return i.ToLoadBalancerAttributesHealthCheckOutputWithContext(context.Background())
}

func (i LoadBalancerAttributesHealthCheckArgs) ToLoadBalancerAttributesHealthCheckOutputWithContext(ctx context.Context) LoadBalancerAttributesHealthCheckOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerAttributesHealthCheckOutput)
}

func (i LoadBalancerAttributesHealthCheckArgs) ToLoadBalancerAttributesHealthCheckPtrOutput() LoadBalancerAttributesHealthCheckPtrOutput {
	return i.ToLoadBalancerAttributesHealthCheckPtrOutputWithContext(context.Background())
}

func (i LoadBalancerAttributesHealthCheckArgs) ToLoadBalancerAttributesHealthCheckPtrOutputWithContext(ctx context.Context) LoadBalancerAttributesHealthCheckPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerAttributesHealthCheckOutput).ToLoadBalancerAttributesHealthCheckPtrOutputWithContext(ctx)
}

// LoadBalancerAttributesHealthCheckPtrInput is an input type that accepts LoadBalancerAttributesHealthCheckArgs, LoadBalancerAttributesHealthCheckPtr and LoadBalancerAttributesHealthCheckPtrOutput values.
// You can construct a concrete instance of `LoadBalancerAttributesHealthCheckPtrInput` via:
//
//	        LoadBalancerAttributesHealthCheckArgs{...}
//
//	or:
//
//	        nil
type LoadBalancerAttributesHealthCheckPtrInput interface {
	pulumi.Input

	ToLoadBalancerAttributesHealthCheckPtrOutput() LoadBalancerAttributesHealthCheckPtrOutput
	ToLoadBalancerAttributesHealthCheckPtrOutputWithContext(context.Context) LoadBalancerAttributesHealthCheckPtrOutput
}

type loadBalancerAttributesHealthCheckPtrType LoadBalancerAttributesHealthCheckArgs

func LoadBalancerAttributesHealthCheckPtr(v *LoadBalancerAttributesHealthCheckArgs) LoadBalancerAttributesHealthCheckPtrInput {
	return (*loadBalancerAttributesHealthCheckPtrType)(v)
}

func (*loadBalancerAttributesHealthCheckPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LoadBalancerAttributesHealthCheck)(nil)).Elem()
}

func (i *loadBalancerAttributesHealthCheckPtrType) ToLoadBalancerAttributesHealthCheckPtrOutput() LoadBalancerAttributesHealthCheckPtrOutput {
	return i.ToLoadBalancerAttributesHealthCheckPtrOutputWithContext(context.Background())
}

func (i *loadBalancerAttributesHealthCheckPtrType) ToLoadBalancerAttributesHealthCheckPtrOutputWithContext(ctx context.Context) LoadBalancerAttributesHealthCheckPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerAttributesHealthCheckPtrOutput)
}

type LoadBalancerAttributesHealthCheckOutput struct{ *pulumi.OutputState }

func (LoadBalancerAttributesHealthCheckOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerAttributesHealthCheck)(nil)).Elem()
}

func (o LoadBalancerAttributesHealthCheckOutput) ToLoadBalancerAttributesHealthCheckOutput() LoadBalancerAttributesHealthCheckOutput {
	return o
}

func (o LoadBalancerAttributesHealthCheckOutput) ToLoadBalancerAttributesHealthCheckOutputWithContext(ctx context.Context) LoadBalancerAttributesHealthCheckOutput {
	return o
}

func (o LoadBalancerAttributesHealthCheckOutput) ToLoadBalancerAttributesHealthCheckPtrOutput() LoadBalancerAttributesHealthCheckPtrOutput {
	return o.ToLoadBalancerAttributesHealthCheckPtrOutputWithContext(context.Background())
}

func (o LoadBalancerAttributesHealthCheckOutput) ToLoadBalancerAttributesHealthCheckPtrOutputWithContext(ctx context.Context) LoadBalancerAttributesHealthCheckPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LoadBalancerAttributesHealthCheck) *LoadBalancerAttributesHealthCheck {
		return &v
	}).(LoadBalancerAttributesHealthCheckPtrOutput)
}

// The number of seconds between two requests (between `5` and `600` both included).
func (o LoadBalancerAttributesHealthCheckOutput) CheckInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LoadBalancerAttributesHealthCheck) *int { return v.CheckInterval }).(pulumi.IntPtrOutput)
}

// The number of consecutive successful requests before considering the VM as healthy (between `2` and `10` both included).
func (o LoadBalancerAttributesHealthCheckOutput) HealthyThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LoadBalancerAttributesHealthCheck) *int { return v.HealthyThreshold }).(pulumi.IntPtrOutput)
}

// If you use the HTTP or HTTPS protocols, the request URL path.
func (o LoadBalancerAttributesHealthCheckOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerAttributesHealthCheck) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// The port number (between `1` and `65535`, both included).
func (o LoadBalancerAttributesHealthCheckOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v LoadBalancerAttributesHealthCheck) int { return v.Port }).(pulumi.IntOutput)
}

// The protocol for the URL of the VM (`HTTP` \| `HTTPS` \| `TCP` \| `SSL`).
func (o LoadBalancerAttributesHealthCheckOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v LoadBalancerAttributesHealthCheck) string { return v.Protocol }).(pulumi.StringOutput)
}

// The maximum waiting time for a response before considering the VM as unhealthy, in seconds (between `2` and `60` both included).
func (o LoadBalancerAttributesHealthCheckOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LoadBalancerAttributesHealthCheck) *int { return v.Timeout }).(pulumi.IntPtrOutput)
}

// The number of consecutive failed requests before considering the VM as unhealthy (between `2` and `10` both included).
func (o LoadBalancerAttributesHealthCheckOutput) UnhealthyThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LoadBalancerAttributesHealthCheck) *int { return v.UnhealthyThreshold }).(pulumi.IntPtrOutput)
}

type LoadBalancerAttributesHealthCheckPtrOutput struct{ *pulumi.OutputState }

func (LoadBalancerAttributesHealthCheckPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LoadBalancerAttributesHealthCheck)(nil)).Elem()
}

func (o LoadBalancerAttributesHealthCheckPtrOutput) ToLoadBalancerAttributesHealthCheckPtrOutput() LoadBalancerAttributesHealthCheckPtrOutput {
	return o
}

func (o LoadBalancerAttributesHealthCheckPtrOutput) ToLoadBalancerAttributesHealthCheckPtrOutputWithContext(ctx context.Context) LoadBalancerAttributesHealthCheckPtrOutput {
	return o
}

func (o LoadBalancerAttributesHealthCheckPtrOutput) Elem() LoadBalancerAttributesHealthCheckOutput {
	return o.ApplyT(func(v *LoadBalancerAttributesHealthCheck) LoadBalancerAttributesHealthCheck {
		if v != nil {
			return *v
		}
		var ret LoadBalancerAttributesHealthCheck
		return ret
	}).(LoadBalancerAttributesHealthCheckOutput)
}

// The number of seconds between two requests (between `5` and `600` both included).
func (o LoadBalancerAttributesHealthCheckPtrOutput) CheckInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LoadBalancerAttributesHealthCheck) *int {
		if v == nil {
			return nil
		}
		return v.CheckInterval
	}).(pulumi.IntPtrOutput)
}

// The number of consecutive successful requests before considering the VM as healthy (between `2` and `10` both included).
func (o LoadBalancerAttributesHealthCheckPtrOutput) HealthyThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LoadBalancerAttributesHealthCheck) *int {
		if v == nil {
			return nil
		}
		return v.HealthyThreshold
	}).(pulumi.IntPtrOutput)
}

// If you use the HTTP or HTTPS protocols, the request URL path.
func (o LoadBalancerAttributesHealthCheckPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LoadBalancerAttributesHealthCheck) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// The port number (between `1` and `65535`, both included).
func (o LoadBalancerAttributesHealthCheckPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LoadBalancerAttributesHealthCheck) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

// The protocol for the URL of the VM (`HTTP` \| `HTTPS` \| `TCP` \| `SSL`).
func (o LoadBalancerAttributesHealthCheckPtrOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LoadBalancerAttributesHealthCheck) *string {
		if v == nil {
			return nil
		}
		return &v.Protocol
	}).(pulumi.StringPtrOutput)
}

// The maximum waiting time for a response before considering the VM as unhealthy, in seconds (between `2` and `60` both included).
func (o LoadBalancerAttributesHealthCheckPtrOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LoadBalancerAttributesHealthCheck) *int {
		if v == nil {
			return nil
		}
		return v.Timeout
	}).(pulumi.IntPtrOutput)
}

// The number of consecutive failed requests before considering the VM as unhealthy (between `2` and `10` both included).
func (o LoadBalancerAttributesHealthCheckPtrOutput) UnhealthyThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LoadBalancerAttributesHealthCheck) *int {
		if v == nil {
			return nil
		}
		return v.UnhealthyThreshold
	}).(pulumi.IntPtrOutput)
}

type LoadBalancerAttributesListener struct {
	// The port on which the backend VM is listening (between `1` and `65535`, both included).
	BackendPort *int `pulumi:"backendPort"`
	// The protocol for routing traffic to backend VMs (`HTTP` \| `HTTPS` \| `TCP` \| `SSL`).
	BackendProtocol *string `pulumi:"backendProtocol"`
	// The port on which the load balancer is listening (between `1` and `65535`, both included). This parameter is required if you want to update the server certificate.
	LoadBalancerPort *int `pulumi:"loadBalancerPort"`
	// The routing protocol (`HTTP` \| `HTTPS` \| `TCP` \| `SSL`).
	LoadBalancerProtocol *string `pulumi:"loadBalancerProtocol"`
	// The name of the policy you want to enable for the listener.
	PolicyNames []string `pulumi:"policyNames"`
	// The OUTSCALE Resource Name (ORN) of the server certificate. For more information, see [Resource Identifiers > OUTSCALE Resource Names (ORNs)](https://docs.outscale.com/en/userguide/Resource-Identifiers.html#_outscale_resource_names_orns). If this parameter is specified, you must also specify the `loadBalancerPort` parameter.
	ServerCertificateId *string `pulumi:"serverCertificateId"`
}

// LoadBalancerAttributesListenerInput is an input type that accepts LoadBalancerAttributesListenerArgs and LoadBalancerAttributesListenerOutput values.
// You can construct a concrete instance of `LoadBalancerAttributesListenerInput` via:
//
//	LoadBalancerAttributesListenerArgs{...}
type LoadBalancerAttributesListenerInput interface {
	pulumi.Input

	ToLoadBalancerAttributesListenerOutput() LoadBalancerAttributesListenerOutput
	ToLoadBalancerAttributesListenerOutputWithContext(context.Context) LoadBalancerAttributesListenerOutput
}

type LoadBalancerAttributesListenerArgs struct {
	// The port on which the backend VM is listening (between `1` and `65535`, both included).
	BackendPort pulumi.IntPtrInput `pulumi:"backendPort"`
	// The protocol for routing traffic to backend VMs (`HTTP` \| `HTTPS` \| `TCP` \| `SSL`).
	BackendProtocol pulumi.StringPtrInput `pulumi:"backendProtocol"`
	// The port on which the load balancer is listening (between `1` and `65535`, both included). This parameter is required if you want to update the server certificate.
	LoadBalancerPort pulumi.IntPtrInput `pulumi:"loadBalancerPort"`
	// The routing protocol (`HTTP` \| `HTTPS` \| `TCP` \| `SSL`).
	LoadBalancerProtocol pulumi.StringPtrInput `pulumi:"loadBalancerProtocol"`
	// The name of the policy you want to enable for the listener.
	PolicyNames pulumi.StringArrayInput `pulumi:"policyNames"`
	// The OUTSCALE Resource Name (ORN) of the server certificate. For more information, see [Resource Identifiers > OUTSCALE Resource Names (ORNs)](https://docs.outscale.com/en/userguide/Resource-Identifiers.html#_outscale_resource_names_orns). If this parameter is specified, you must also specify the `loadBalancerPort` parameter.
	ServerCertificateId pulumi.StringPtrInput `pulumi:"serverCertificateId"`
}

func (LoadBalancerAttributesListenerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerAttributesListener)(nil)).Elem()
}

func (i LoadBalancerAttributesListenerArgs) ToLoadBalancerAttributesListenerOutput() LoadBalancerAttributesListenerOutput {
	return i.ToLoadBalancerAttributesListenerOutputWithContext(context.Background())
}

func (i LoadBalancerAttributesListenerArgs) ToLoadBalancerAttributesListenerOutputWithContext(ctx context.Context) LoadBalancerAttributesListenerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerAttributesListenerOutput)
}

// LoadBalancerAttributesListenerArrayInput is an input type that accepts LoadBalancerAttributesListenerArray and LoadBalancerAttributesListenerArrayOutput values.
// You can construct a concrete instance of `LoadBalancerAttributesListenerArrayInput` via:
//
//	LoadBalancerAttributesListenerArray{ LoadBalancerAttributesListenerArgs{...} }
type LoadBalancerAttributesListenerArrayInput interface {
	pulumi.Input

	ToLoadBalancerAttributesListenerArrayOutput() LoadBalancerAttributesListenerArrayOutput
	ToLoadBalancerAttributesListenerArrayOutputWithContext(context.Context) LoadBalancerAttributesListenerArrayOutput
}

type LoadBalancerAttributesListenerArray []LoadBalancerAttributesListenerInput

func (LoadBalancerAttributesListenerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancerAttributesListener)(nil)).Elem()
}

func (i LoadBalancerAttributesListenerArray) ToLoadBalancerAttributesListenerArrayOutput() LoadBalancerAttributesListenerArrayOutput {
	return i.ToLoadBalancerAttributesListenerArrayOutputWithContext(context.Background())
}

func (i LoadBalancerAttributesListenerArray) ToLoadBalancerAttributesListenerArrayOutputWithContext(ctx context.Context) LoadBalancerAttributesListenerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerAttributesListenerArrayOutput)
}

type LoadBalancerAttributesListenerOutput struct{ *pulumi.OutputState }

func (LoadBalancerAttributesListenerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerAttributesListener)(nil)).Elem()
}

func (o LoadBalancerAttributesListenerOutput) ToLoadBalancerAttributesListenerOutput() LoadBalancerAttributesListenerOutput {
	return o
}

func (o LoadBalancerAttributesListenerOutput) ToLoadBalancerAttributesListenerOutputWithContext(ctx context.Context) LoadBalancerAttributesListenerOutput {
	return o
}

// The port on which the backend VM is listening (between `1` and `65535`, both included).
func (o LoadBalancerAttributesListenerOutput) BackendPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LoadBalancerAttributesListener) *int { return v.BackendPort }).(pulumi.IntPtrOutput)
}

// The protocol for routing traffic to backend VMs (`HTTP` \| `HTTPS` \| `TCP` \| `SSL`).
func (o LoadBalancerAttributesListenerOutput) BackendProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerAttributesListener) *string { return v.BackendProtocol }).(pulumi.StringPtrOutput)
}

// The port on which the load balancer is listening (between `1` and `65535`, both included). This parameter is required if you want to update the server certificate.
func (o LoadBalancerAttributesListenerOutput) LoadBalancerPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LoadBalancerAttributesListener) *int { return v.LoadBalancerPort }).(pulumi.IntPtrOutput)
}

// The routing protocol (`HTTP` \| `HTTPS` \| `TCP` \| `SSL`).
func (o LoadBalancerAttributesListenerOutput) LoadBalancerProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerAttributesListener) *string { return v.LoadBalancerProtocol }).(pulumi.StringPtrOutput)
}

// The name of the policy you want to enable for the listener.
func (o LoadBalancerAttributesListenerOutput) PolicyNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LoadBalancerAttributesListener) []string { return v.PolicyNames }).(pulumi.StringArrayOutput)
}

// The OUTSCALE Resource Name (ORN) of the server certificate. For more information, see [Resource Identifiers > OUTSCALE Resource Names (ORNs)](https://docs.outscale.com/en/userguide/Resource-Identifiers.html#_outscale_resource_names_orns). If this parameter is specified, you must also specify the `loadBalancerPort` parameter.
func (o LoadBalancerAttributesListenerOutput) ServerCertificateId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerAttributesListener) *string { return v.ServerCertificateId }).(pulumi.StringPtrOutput)
}

type LoadBalancerAttributesListenerArrayOutput struct{ *pulumi.OutputState }

func (LoadBalancerAttributesListenerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancerAttributesListener)(nil)).Elem()
}

func (o LoadBalancerAttributesListenerArrayOutput) ToLoadBalancerAttributesListenerArrayOutput() LoadBalancerAttributesListenerArrayOutput {
	return o
}

func (o LoadBalancerAttributesListenerArrayOutput) ToLoadBalancerAttributesListenerArrayOutputWithContext(ctx context.Context) LoadBalancerAttributesListenerArrayOutput {
	return o
}

func (o LoadBalancerAttributesListenerArrayOutput) Index(i pulumi.IntInput) LoadBalancerAttributesListenerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LoadBalancerAttributesListener {
		return vs[0].([]LoadBalancerAttributesListener)[vs[1].(int)]
	}).(LoadBalancerAttributesListenerOutput)
}

type LoadBalancerAttributesLoadBalancerStickyCookiePolicy struct {
	// The name of the stickiness policy.
	PolicyName *string `pulumi:"policyName"`
}

// LoadBalancerAttributesLoadBalancerStickyCookiePolicyInput is an input type that accepts LoadBalancerAttributesLoadBalancerStickyCookiePolicyArgs and LoadBalancerAttributesLoadBalancerStickyCookiePolicyOutput values.
// You can construct a concrete instance of `LoadBalancerAttributesLoadBalancerStickyCookiePolicyInput` via:
//
//	LoadBalancerAttributesLoadBalancerStickyCookiePolicyArgs{...}
type LoadBalancerAttributesLoadBalancerStickyCookiePolicyInput interface {
	pulumi.Input

	ToLoadBalancerAttributesLoadBalancerStickyCookiePolicyOutput() LoadBalancerAttributesLoadBalancerStickyCookiePolicyOutput
	ToLoadBalancerAttributesLoadBalancerStickyCookiePolicyOutputWithContext(context.Context) LoadBalancerAttributesLoadBalancerStickyCookiePolicyOutput
}

type LoadBalancerAttributesLoadBalancerStickyCookiePolicyArgs struct {
	// The name of the stickiness policy.
	PolicyName pulumi.StringPtrInput `pulumi:"policyName"`
}

func (LoadBalancerAttributesLoadBalancerStickyCookiePolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerAttributesLoadBalancerStickyCookiePolicy)(nil)).Elem()
}

func (i LoadBalancerAttributesLoadBalancerStickyCookiePolicyArgs) ToLoadBalancerAttributesLoadBalancerStickyCookiePolicyOutput() LoadBalancerAttributesLoadBalancerStickyCookiePolicyOutput {
	return i.ToLoadBalancerAttributesLoadBalancerStickyCookiePolicyOutputWithContext(context.Background())
}

func (i LoadBalancerAttributesLoadBalancerStickyCookiePolicyArgs) ToLoadBalancerAttributesLoadBalancerStickyCookiePolicyOutputWithContext(ctx context.Context) LoadBalancerAttributesLoadBalancerStickyCookiePolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerAttributesLoadBalancerStickyCookiePolicyOutput)
}

// LoadBalancerAttributesLoadBalancerStickyCookiePolicyArrayInput is an input type that accepts LoadBalancerAttributesLoadBalancerStickyCookiePolicyArray and LoadBalancerAttributesLoadBalancerStickyCookiePolicyArrayOutput values.
// You can construct a concrete instance of `LoadBalancerAttributesLoadBalancerStickyCookiePolicyArrayInput` via:
//
//	LoadBalancerAttributesLoadBalancerStickyCookiePolicyArray{ LoadBalancerAttributesLoadBalancerStickyCookiePolicyArgs{...} }
type LoadBalancerAttributesLoadBalancerStickyCookiePolicyArrayInput interface {
	pulumi.Input

	ToLoadBalancerAttributesLoadBalancerStickyCookiePolicyArrayOutput() LoadBalancerAttributesLoadBalancerStickyCookiePolicyArrayOutput
	ToLoadBalancerAttributesLoadBalancerStickyCookiePolicyArrayOutputWithContext(context.Context) LoadBalancerAttributesLoadBalancerStickyCookiePolicyArrayOutput
}

type LoadBalancerAttributesLoadBalancerStickyCookiePolicyArray []LoadBalancerAttributesLoadBalancerStickyCookiePolicyInput

func (LoadBalancerAttributesLoadBalancerStickyCookiePolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancerAttributesLoadBalancerStickyCookiePolicy)(nil)).Elem()
}

func (i LoadBalancerAttributesLoadBalancerStickyCookiePolicyArray) ToLoadBalancerAttributesLoadBalancerStickyCookiePolicyArrayOutput() LoadBalancerAttributesLoadBalancerStickyCookiePolicyArrayOutput {
	return i.ToLoadBalancerAttributesLoadBalancerStickyCookiePolicyArrayOutputWithContext(context.Background())
}

func (i LoadBalancerAttributesLoadBalancerStickyCookiePolicyArray) ToLoadBalancerAttributesLoadBalancerStickyCookiePolicyArrayOutputWithContext(ctx context.Context) LoadBalancerAttributesLoadBalancerStickyCookiePolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerAttributesLoadBalancerStickyCookiePolicyArrayOutput)
}

type LoadBalancerAttributesLoadBalancerStickyCookiePolicyOutput struct{ *pulumi.OutputState }

func (LoadBalancerAttributesLoadBalancerStickyCookiePolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerAttributesLoadBalancerStickyCookiePolicy)(nil)).Elem()
}

func (o LoadBalancerAttributesLoadBalancerStickyCookiePolicyOutput) ToLoadBalancerAttributesLoadBalancerStickyCookiePolicyOutput() LoadBalancerAttributesLoadBalancerStickyCookiePolicyOutput {
	return o
}

func (o LoadBalancerAttributesLoadBalancerStickyCookiePolicyOutput) ToLoadBalancerAttributesLoadBalancerStickyCookiePolicyOutputWithContext(ctx context.Context) LoadBalancerAttributesLoadBalancerStickyCookiePolicyOutput {
	return o
}

// The name of the stickiness policy.
func (o LoadBalancerAttributesLoadBalancerStickyCookiePolicyOutput) PolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerAttributesLoadBalancerStickyCookiePolicy) *string { return v.PolicyName }).(pulumi.StringPtrOutput)
}

type LoadBalancerAttributesLoadBalancerStickyCookiePolicyArrayOutput struct{ *pulumi.OutputState }

func (LoadBalancerAttributesLoadBalancerStickyCookiePolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancerAttributesLoadBalancerStickyCookiePolicy)(nil)).Elem()
}

func (o LoadBalancerAttributesLoadBalancerStickyCookiePolicyArrayOutput) ToLoadBalancerAttributesLoadBalancerStickyCookiePolicyArrayOutput() LoadBalancerAttributesLoadBalancerStickyCookiePolicyArrayOutput {
	return o
}

func (o LoadBalancerAttributesLoadBalancerStickyCookiePolicyArrayOutput) ToLoadBalancerAttributesLoadBalancerStickyCookiePolicyArrayOutputWithContext(ctx context.Context) LoadBalancerAttributesLoadBalancerStickyCookiePolicyArrayOutput {
	return o
}

func (o LoadBalancerAttributesLoadBalancerStickyCookiePolicyArrayOutput) Index(i pulumi.IntInput) LoadBalancerAttributesLoadBalancerStickyCookiePolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LoadBalancerAttributesLoadBalancerStickyCookiePolicy {
		return vs[0].([]LoadBalancerAttributesLoadBalancerStickyCookiePolicy)[vs[1].(int)]
	}).(LoadBalancerAttributesLoadBalancerStickyCookiePolicyOutput)
}

type LoadBalancerAttributesSourceSecurityGroup struct {
	// The account ID of the owner of the security group.
	SecurityGroupAccountId *string `pulumi:"securityGroupAccountId"`
	// The name of the security group.
	SecurityGroupName *string `pulumi:"securityGroupName"`
}

// LoadBalancerAttributesSourceSecurityGroupInput is an input type that accepts LoadBalancerAttributesSourceSecurityGroupArgs and LoadBalancerAttributesSourceSecurityGroupOutput values.
// You can construct a concrete instance of `LoadBalancerAttributesSourceSecurityGroupInput` via:
//
//	LoadBalancerAttributesSourceSecurityGroupArgs{...}
type LoadBalancerAttributesSourceSecurityGroupInput interface {
	pulumi.Input

	ToLoadBalancerAttributesSourceSecurityGroupOutput() LoadBalancerAttributesSourceSecurityGroupOutput
	ToLoadBalancerAttributesSourceSecurityGroupOutputWithContext(context.Context) LoadBalancerAttributesSourceSecurityGroupOutput
}

type LoadBalancerAttributesSourceSecurityGroupArgs struct {
	// The account ID of the owner of the security group.
	SecurityGroupAccountId pulumi.StringPtrInput `pulumi:"securityGroupAccountId"`
	// The name of the security group.
	SecurityGroupName pulumi.StringPtrInput `pulumi:"securityGroupName"`
}

func (LoadBalancerAttributesSourceSecurityGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerAttributesSourceSecurityGroup)(nil)).Elem()
}

func (i LoadBalancerAttributesSourceSecurityGroupArgs) ToLoadBalancerAttributesSourceSecurityGroupOutput() LoadBalancerAttributesSourceSecurityGroupOutput {
	return i.ToLoadBalancerAttributesSourceSecurityGroupOutputWithContext(context.Background())
}

func (i LoadBalancerAttributesSourceSecurityGroupArgs) ToLoadBalancerAttributesSourceSecurityGroupOutputWithContext(ctx context.Context) LoadBalancerAttributesSourceSecurityGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerAttributesSourceSecurityGroupOutput)
}

// LoadBalancerAttributesSourceSecurityGroupArrayInput is an input type that accepts LoadBalancerAttributesSourceSecurityGroupArray and LoadBalancerAttributesSourceSecurityGroupArrayOutput values.
// You can construct a concrete instance of `LoadBalancerAttributesSourceSecurityGroupArrayInput` via:
//
//	LoadBalancerAttributesSourceSecurityGroupArray{ LoadBalancerAttributesSourceSecurityGroupArgs{...} }
type LoadBalancerAttributesSourceSecurityGroupArrayInput interface {
	pulumi.Input

	ToLoadBalancerAttributesSourceSecurityGroupArrayOutput() LoadBalancerAttributesSourceSecurityGroupArrayOutput
	ToLoadBalancerAttributesSourceSecurityGroupArrayOutputWithContext(context.Context) LoadBalancerAttributesSourceSecurityGroupArrayOutput
}

type LoadBalancerAttributesSourceSecurityGroupArray []LoadBalancerAttributesSourceSecurityGroupInput

func (LoadBalancerAttributesSourceSecurityGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancerAttributesSourceSecurityGroup)(nil)).Elem()
}

func (i LoadBalancerAttributesSourceSecurityGroupArray) ToLoadBalancerAttributesSourceSecurityGroupArrayOutput() LoadBalancerAttributesSourceSecurityGroupArrayOutput {
	return i.ToLoadBalancerAttributesSourceSecurityGroupArrayOutputWithContext(context.Background())
}

func (i LoadBalancerAttributesSourceSecurityGroupArray) ToLoadBalancerAttributesSourceSecurityGroupArrayOutputWithContext(ctx context.Context) LoadBalancerAttributesSourceSecurityGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerAttributesSourceSecurityGroupArrayOutput)
}

type LoadBalancerAttributesSourceSecurityGroupOutput struct{ *pulumi.OutputState }

func (LoadBalancerAttributesSourceSecurityGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerAttributesSourceSecurityGroup)(nil)).Elem()
}

func (o LoadBalancerAttributesSourceSecurityGroupOutput) ToLoadBalancerAttributesSourceSecurityGroupOutput() LoadBalancerAttributesSourceSecurityGroupOutput {
	return o
}

func (o LoadBalancerAttributesSourceSecurityGroupOutput) ToLoadBalancerAttributesSourceSecurityGroupOutputWithContext(ctx context.Context) LoadBalancerAttributesSourceSecurityGroupOutput {
	return o
}

// The account ID of the owner of the security group.
func (o LoadBalancerAttributesSourceSecurityGroupOutput) SecurityGroupAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerAttributesSourceSecurityGroup) *string { return v.SecurityGroupAccountId }).(pulumi.StringPtrOutput)
}

// The name of the security group.
func (o LoadBalancerAttributesSourceSecurityGroupOutput) SecurityGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerAttributesSourceSecurityGroup) *string { return v.SecurityGroupName }).(pulumi.StringPtrOutput)
}

type LoadBalancerAttributesSourceSecurityGroupArrayOutput struct{ *pulumi.OutputState }

func (LoadBalancerAttributesSourceSecurityGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancerAttributesSourceSecurityGroup)(nil)).Elem()
}

func (o LoadBalancerAttributesSourceSecurityGroupArrayOutput) ToLoadBalancerAttributesSourceSecurityGroupArrayOutput() LoadBalancerAttributesSourceSecurityGroupArrayOutput {
	return o
}

func (o LoadBalancerAttributesSourceSecurityGroupArrayOutput) ToLoadBalancerAttributesSourceSecurityGroupArrayOutputWithContext(ctx context.Context) LoadBalancerAttributesSourceSecurityGroupArrayOutput {
	return o
}

func (o LoadBalancerAttributesSourceSecurityGroupArrayOutput) Index(i pulumi.IntInput) LoadBalancerAttributesSourceSecurityGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LoadBalancerAttributesSourceSecurityGroup {
		return vs[0].([]LoadBalancerAttributesSourceSecurityGroup)[vs[1].(int)]
	}).(LoadBalancerAttributesSourceSecurityGroupOutput)
}

type LoadBalancerAttributesTag struct {
	// The key of the tag, with a minimum of 1 character.
	Key *string `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value *string `pulumi:"value"`
}

// LoadBalancerAttributesTagInput is an input type that accepts LoadBalancerAttributesTagArgs and LoadBalancerAttributesTagOutput values.
// You can construct a concrete instance of `LoadBalancerAttributesTagInput` via:
//
//	LoadBalancerAttributesTagArgs{...}
type LoadBalancerAttributesTagInput interface {
	pulumi.Input

	ToLoadBalancerAttributesTagOutput() LoadBalancerAttributesTagOutput
	ToLoadBalancerAttributesTagOutputWithContext(context.Context) LoadBalancerAttributesTagOutput
}

type LoadBalancerAttributesTagArgs struct {
	// The key of the tag, with a minimum of 1 character.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (LoadBalancerAttributesTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerAttributesTag)(nil)).Elem()
}

func (i LoadBalancerAttributesTagArgs) ToLoadBalancerAttributesTagOutput() LoadBalancerAttributesTagOutput {
	return i.ToLoadBalancerAttributesTagOutputWithContext(context.Background())
}

func (i LoadBalancerAttributesTagArgs) ToLoadBalancerAttributesTagOutputWithContext(ctx context.Context) LoadBalancerAttributesTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerAttributesTagOutput)
}

// LoadBalancerAttributesTagArrayInput is an input type that accepts LoadBalancerAttributesTagArray and LoadBalancerAttributesTagArrayOutput values.
// You can construct a concrete instance of `LoadBalancerAttributesTagArrayInput` via:
//
//	LoadBalancerAttributesTagArray{ LoadBalancerAttributesTagArgs{...} }
type LoadBalancerAttributesTagArrayInput interface {
	pulumi.Input

	ToLoadBalancerAttributesTagArrayOutput() LoadBalancerAttributesTagArrayOutput
	ToLoadBalancerAttributesTagArrayOutputWithContext(context.Context) LoadBalancerAttributesTagArrayOutput
}

type LoadBalancerAttributesTagArray []LoadBalancerAttributesTagInput

func (LoadBalancerAttributesTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancerAttributesTag)(nil)).Elem()
}

func (i LoadBalancerAttributesTagArray) ToLoadBalancerAttributesTagArrayOutput() LoadBalancerAttributesTagArrayOutput {
	return i.ToLoadBalancerAttributesTagArrayOutputWithContext(context.Background())
}

func (i LoadBalancerAttributesTagArray) ToLoadBalancerAttributesTagArrayOutputWithContext(ctx context.Context) LoadBalancerAttributesTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerAttributesTagArrayOutput)
}

type LoadBalancerAttributesTagOutput struct{ *pulumi.OutputState }

func (LoadBalancerAttributesTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerAttributesTag)(nil)).Elem()
}

func (o LoadBalancerAttributesTagOutput) ToLoadBalancerAttributesTagOutput() LoadBalancerAttributesTagOutput {
	return o
}

func (o LoadBalancerAttributesTagOutput) ToLoadBalancerAttributesTagOutputWithContext(ctx context.Context) LoadBalancerAttributesTagOutput {
	return o
}

// The key of the tag, with a minimum of 1 character.
func (o LoadBalancerAttributesTagOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerAttributesTag) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The value of the tag, between 0 and 255 characters.
func (o LoadBalancerAttributesTagOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerAttributesTag) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type LoadBalancerAttributesTagArrayOutput struct{ *pulumi.OutputState }

func (LoadBalancerAttributesTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancerAttributesTag)(nil)).Elem()
}

func (o LoadBalancerAttributesTagArrayOutput) ToLoadBalancerAttributesTagArrayOutput() LoadBalancerAttributesTagArrayOutput {
	return o
}

func (o LoadBalancerAttributesTagArrayOutput) ToLoadBalancerAttributesTagArrayOutputWithContext(ctx context.Context) LoadBalancerAttributesTagArrayOutput {
	return o
}

func (o LoadBalancerAttributesTagArrayOutput) Index(i pulumi.IntInput) LoadBalancerAttributesTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LoadBalancerAttributesTag {
		return vs[0].([]LoadBalancerAttributesTag)[vs[1].(int)]
	}).(LoadBalancerAttributesTagOutput)
}

type LoadBalancerHealthCheck struct {
	// The number of seconds between two requests (between `5` and `600` both included).
	CheckInterval *int `pulumi:"checkInterval"`
	// The number of consecutive successful requests before considering the VM as healthy (between `2` and `10` both included).
	HealthyThreshold *int `pulumi:"healthyThreshold"`
	// If you use the HTTP or HTTPS protocols, the request URL path.
	Path *string `pulumi:"path"`
	// The port number (between `1` and `65535`, both included).
	Port *int `pulumi:"port"`
	// The protocol for the URL of the VM (`HTTP` \| `HTTPS` \| `TCP` \| `SSL`).
	Protocol *string `pulumi:"protocol"`
	// The maximum waiting time for a response before considering the VM as unhealthy, in seconds (between `2` and `60` both included).
	Timeout *int `pulumi:"timeout"`
	// The number of consecutive failed requests before considering the VM as unhealthy (between `2` and `10` both included).
	UnhealthyThreshold *int `pulumi:"unhealthyThreshold"`
}

// LoadBalancerHealthCheckInput is an input type that accepts LoadBalancerHealthCheckArgs and LoadBalancerHealthCheckOutput values.
// You can construct a concrete instance of `LoadBalancerHealthCheckInput` via:
//
//	LoadBalancerHealthCheckArgs{...}
type LoadBalancerHealthCheckInput interface {
	pulumi.Input

	ToLoadBalancerHealthCheckOutput() LoadBalancerHealthCheckOutput
	ToLoadBalancerHealthCheckOutputWithContext(context.Context) LoadBalancerHealthCheckOutput
}

type LoadBalancerHealthCheckArgs struct {
	// The number of seconds between two requests (between `5` and `600` both included).
	CheckInterval pulumi.IntPtrInput `pulumi:"checkInterval"`
	// The number of consecutive successful requests before considering the VM as healthy (between `2` and `10` both included).
	HealthyThreshold pulumi.IntPtrInput `pulumi:"healthyThreshold"`
	// If you use the HTTP or HTTPS protocols, the request URL path.
	Path pulumi.StringPtrInput `pulumi:"path"`
	// The port number (between `1` and `65535`, both included).
	Port pulumi.IntPtrInput `pulumi:"port"`
	// The protocol for the URL of the VM (`HTTP` \| `HTTPS` \| `TCP` \| `SSL`).
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// The maximum waiting time for a response before considering the VM as unhealthy, in seconds (between `2` and `60` both included).
	Timeout pulumi.IntPtrInput `pulumi:"timeout"`
	// The number of consecutive failed requests before considering the VM as unhealthy (between `2` and `10` both included).
	UnhealthyThreshold pulumi.IntPtrInput `pulumi:"unhealthyThreshold"`
}

func (LoadBalancerHealthCheckArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerHealthCheck)(nil)).Elem()
}

func (i LoadBalancerHealthCheckArgs) ToLoadBalancerHealthCheckOutput() LoadBalancerHealthCheckOutput {
	return i.ToLoadBalancerHealthCheckOutputWithContext(context.Background())
}

func (i LoadBalancerHealthCheckArgs) ToLoadBalancerHealthCheckOutputWithContext(ctx context.Context) LoadBalancerHealthCheckOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerHealthCheckOutput)
}

// LoadBalancerHealthCheckArrayInput is an input type that accepts LoadBalancerHealthCheckArray and LoadBalancerHealthCheckArrayOutput values.
// You can construct a concrete instance of `LoadBalancerHealthCheckArrayInput` via:
//
//	LoadBalancerHealthCheckArray{ LoadBalancerHealthCheckArgs{...} }
type LoadBalancerHealthCheckArrayInput interface {
	pulumi.Input

	ToLoadBalancerHealthCheckArrayOutput() LoadBalancerHealthCheckArrayOutput
	ToLoadBalancerHealthCheckArrayOutputWithContext(context.Context) LoadBalancerHealthCheckArrayOutput
}

type LoadBalancerHealthCheckArray []LoadBalancerHealthCheckInput

func (LoadBalancerHealthCheckArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancerHealthCheck)(nil)).Elem()
}

func (i LoadBalancerHealthCheckArray) ToLoadBalancerHealthCheckArrayOutput() LoadBalancerHealthCheckArrayOutput {
	return i.ToLoadBalancerHealthCheckArrayOutputWithContext(context.Background())
}

func (i LoadBalancerHealthCheckArray) ToLoadBalancerHealthCheckArrayOutputWithContext(ctx context.Context) LoadBalancerHealthCheckArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerHealthCheckArrayOutput)
}

type LoadBalancerHealthCheckOutput struct{ *pulumi.OutputState }

func (LoadBalancerHealthCheckOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerHealthCheck)(nil)).Elem()
}

func (o LoadBalancerHealthCheckOutput) ToLoadBalancerHealthCheckOutput() LoadBalancerHealthCheckOutput {
	return o
}

func (o LoadBalancerHealthCheckOutput) ToLoadBalancerHealthCheckOutputWithContext(ctx context.Context) LoadBalancerHealthCheckOutput {
	return o
}

// The number of seconds between two requests (between `5` and `600` both included).
func (o LoadBalancerHealthCheckOutput) CheckInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LoadBalancerHealthCheck) *int { return v.CheckInterval }).(pulumi.IntPtrOutput)
}

// The number of consecutive successful requests before considering the VM as healthy (between `2` and `10` both included).
func (o LoadBalancerHealthCheckOutput) HealthyThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LoadBalancerHealthCheck) *int { return v.HealthyThreshold }).(pulumi.IntPtrOutput)
}

// If you use the HTTP or HTTPS protocols, the request URL path.
func (o LoadBalancerHealthCheckOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerHealthCheck) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// The port number (between `1` and `65535`, both included).
func (o LoadBalancerHealthCheckOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LoadBalancerHealthCheck) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// The protocol for the URL of the VM (`HTTP` \| `HTTPS` \| `TCP` \| `SSL`).
func (o LoadBalancerHealthCheckOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerHealthCheck) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// The maximum waiting time for a response before considering the VM as unhealthy, in seconds (between `2` and `60` both included).
func (o LoadBalancerHealthCheckOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LoadBalancerHealthCheck) *int { return v.Timeout }).(pulumi.IntPtrOutput)
}

// The number of consecutive failed requests before considering the VM as unhealthy (between `2` and `10` both included).
func (o LoadBalancerHealthCheckOutput) UnhealthyThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LoadBalancerHealthCheck) *int { return v.UnhealthyThreshold }).(pulumi.IntPtrOutput)
}

type LoadBalancerHealthCheckArrayOutput struct{ *pulumi.OutputState }

func (LoadBalancerHealthCheckArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancerHealthCheck)(nil)).Elem()
}

func (o LoadBalancerHealthCheckArrayOutput) ToLoadBalancerHealthCheckArrayOutput() LoadBalancerHealthCheckArrayOutput {
	return o
}

func (o LoadBalancerHealthCheckArrayOutput) ToLoadBalancerHealthCheckArrayOutputWithContext(ctx context.Context) LoadBalancerHealthCheckArrayOutput {
	return o
}

func (o LoadBalancerHealthCheckArrayOutput) Index(i pulumi.IntInput) LoadBalancerHealthCheckOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LoadBalancerHealthCheck {
		return vs[0].([]LoadBalancerHealthCheck)[vs[1].(int)]
	}).(LoadBalancerHealthCheckOutput)
}

type LoadBalancerListener struct {
	// The port on which the backend VM is listening (between `1` and `65535`, both included).
	BackendPort int `pulumi:"backendPort"`
	// The protocol for routing traffic to backend VMs (`HTTP` \| `HTTPS` \| `TCP` \| `SSL`).
	BackendProtocol string `pulumi:"backendProtocol"`
	// The port on which the load balancer is listening (between `1` and `65535`, both included).
	LoadBalancerPort int `pulumi:"loadBalancerPort"`
	// The routing protocol (`HTTP` \| `HTTPS` \| `TCP` \| `SSL`).
	LoadBalancerProtocol string `pulumi:"loadBalancerProtocol"`
	// The names of the policies. If there are no policies enabled, the list is empty.
	PolicyNames []string `pulumi:"policyNames"`
	// The OUTSCALE Resource Name (ORN) of the server certificate. For more information, see [Resource Identifiers > OUTSCALE Resource Names (ORNs)](https://docs.outscale.com/en/userguide/Resource-Identifiers.html#_outscale_resource_names_orns).
	ServerCertificateId *string `pulumi:"serverCertificateId"`
}

// LoadBalancerListenerInput is an input type that accepts LoadBalancerListenerArgs and LoadBalancerListenerOutput values.
// You can construct a concrete instance of `LoadBalancerListenerInput` via:
//
//	LoadBalancerListenerArgs{...}
type LoadBalancerListenerInput interface {
	pulumi.Input

	ToLoadBalancerListenerOutput() LoadBalancerListenerOutput
	ToLoadBalancerListenerOutputWithContext(context.Context) LoadBalancerListenerOutput
}

type LoadBalancerListenerArgs struct {
	// The port on which the backend VM is listening (between `1` and `65535`, both included).
	BackendPort pulumi.IntInput `pulumi:"backendPort"`
	// The protocol for routing traffic to backend VMs (`HTTP` \| `HTTPS` \| `TCP` \| `SSL`).
	BackendProtocol pulumi.StringInput `pulumi:"backendProtocol"`
	// The port on which the load balancer is listening (between `1` and `65535`, both included).
	LoadBalancerPort pulumi.IntInput `pulumi:"loadBalancerPort"`
	// The routing protocol (`HTTP` \| `HTTPS` \| `TCP` \| `SSL`).
	LoadBalancerProtocol pulumi.StringInput `pulumi:"loadBalancerProtocol"`
	// The names of the policies. If there are no policies enabled, the list is empty.
	PolicyNames pulumi.StringArrayInput `pulumi:"policyNames"`
	// The OUTSCALE Resource Name (ORN) of the server certificate. For more information, see [Resource Identifiers > OUTSCALE Resource Names (ORNs)](https://docs.outscale.com/en/userguide/Resource-Identifiers.html#_outscale_resource_names_orns).
	ServerCertificateId pulumi.StringPtrInput `pulumi:"serverCertificateId"`
}

func (LoadBalancerListenerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerListener)(nil)).Elem()
}

func (i LoadBalancerListenerArgs) ToLoadBalancerListenerOutput() LoadBalancerListenerOutput {
	return i.ToLoadBalancerListenerOutputWithContext(context.Background())
}

func (i LoadBalancerListenerArgs) ToLoadBalancerListenerOutputWithContext(ctx context.Context) LoadBalancerListenerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerListenerOutput)
}

// LoadBalancerListenerArrayInput is an input type that accepts LoadBalancerListenerArray and LoadBalancerListenerArrayOutput values.
// You can construct a concrete instance of `LoadBalancerListenerArrayInput` via:
//
//	LoadBalancerListenerArray{ LoadBalancerListenerArgs{...} }
type LoadBalancerListenerArrayInput interface {
	pulumi.Input

	ToLoadBalancerListenerArrayOutput() LoadBalancerListenerArrayOutput
	ToLoadBalancerListenerArrayOutputWithContext(context.Context) LoadBalancerListenerArrayOutput
}

type LoadBalancerListenerArray []LoadBalancerListenerInput

func (LoadBalancerListenerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancerListener)(nil)).Elem()
}

func (i LoadBalancerListenerArray) ToLoadBalancerListenerArrayOutput() LoadBalancerListenerArrayOutput {
	return i.ToLoadBalancerListenerArrayOutputWithContext(context.Background())
}

func (i LoadBalancerListenerArray) ToLoadBalancerListenerArrayOutputWithContext(ctx context.Context) LoadBalancerListenerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerListenerArrayOutput)
}

type LoadBalancerListenerOutput struct{ *pulumi.OutputState }

func (LoadBalancerListenerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerListener)(nil)).Elem()
}

func (o LoadBalancerListenerOutput) ToLoadBalancerListenerOutput() LoadBalancerListenerOutput {
	return o
}

func (o LoadBalancerListenerOutput) ToLoadBalancerListenerOutputWithContext(ctx context.Context) LoadBalancerListenerOutput {
	return o
}

// The port on which the backend VM is listening (between `1` and `65535`, both included).
func (o LoadBalancerListenerOutput) BackendPort() pulumi.IntOutput {
	return o.ApplyT(func(v LoadBalancerListener) int { return v.BackendPort }).(pulumi.IntOutput)
}

// The protocol for routing traffic to backend VMs (`HTTP` \| `HTTPS` \| `TCP` \| `SSL`).
func (o LoadBalancerListenerOutput) BackendProtocol() pulumi.StringOutput {
	return o.ApplyT(func(v LoadBalancerListener) string { return v.BackendProtocol }).(pulumi.StringOutput)
}

// The port on which the load balancer is listening (between `1` and `65535`, both included).
func (o LoadBalancerListenerOutput) LoadBalancerPort() pulumi.IntOutput {
	return o.ApplyT(func(v LoadBalancerListener) int { return v.LoadBalancerPort }).(pulumi.IntOutput)
}

// The routing protocol (`HTTP` \| `HTTPS` \| `TCP` \| `SSL`).
func (o LoadBalancerListenerOutput) LoadBalancerProtocol() pulumi.StringOutput {
	return o.ApplyT(func(v LoadBalancerListener) string { return v.LoadBalancerProtocol }).(pulumi.StringOutput)
}

// The names of the policies. If there are no policies enabled, the list is empty.
func (o LoadBalancerListenerOutput) PolicyNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LoadBalancerListener) []string { return v.PolicyNames }).(pulumi.StringArrayOutput)
}

// The OUTSCALE Resource Name (ORN) of the server certificate. For more information, see [Resource Identifiers > OUTSCALE Resource Names (ORNs)](https://docs.outscale.com/en/userguide/Resource-Identifiers.html#_outscale_resource_names_orns).
func (o LoadBalancerListenerOutput) ServerCertificateId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerListener) *string { return v.ServerCertificateId }).(pulumi.StringPtrOutput)
}

type LoadBalancerListenerArrayOutput struct{ *pulumi.OutputState }

func (LoadBalancerListenerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancerListener)(nil)).Elem()
}

func (o LoadBalancerListenerArrayOutput) ToLoadBalancerListenerArrayOutput() LoadBalancerListenerArrayOutput {
	return o
}

func (o LoadBalancerListenerArrayOutput) ToLoadBalancerListenerArrayOutputWithContext(ctx context.Context) LoadBalancerListenerArrayOutput {
	return o
}

func (o LoadBalancerListenerArrayOutput) Index(i pulumi.IntInput) LoadBalancerListenerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LoadBalancerListener {
		return vs[0].([]LoadBalancerListener)[vs[1].(int)]
	}).(LoadBalancerListenerOutput)
}

type LoadBalancerListenerRuleListener struct {
	// The name of the load balancer to which the listener is attached.
	LoadBalancerName string `pulumi:"loadBalancerName"`
	// The port of load balancer on which the load balancer is listening (between `1` and `65535` both included).
	LoadBalancerPort int `pulumi:"loadBalancerPort"`
}

// LoadBalancerListenerRuleListenerInput is an input type that accepts LoadBalancerListenerRuleListenerArgs and LoadBalancerListenerRuleListenerOutput values.
// You can construct a concrete instance of `LoadBalancerListenerRuleListenerInput` via:
//
//	LoadBalancerListenerRuleListenerArgs{...}
type LoadBalancerListenerRuleListenerInput interface {
	pulumi.Input

	ToLoadBalancerListenerRuleListenerOutput() LoadBalancerListenerRuleListenerOutput
	ToLoadBalancerListenerRuleListenerOutputWithContext(context.Context) LoadBalancerListenerRuleListenerOutput
}

type LoadBalancerListenerRuleListenerArgs struct {
	// The name of the load balancer to which the listener is attached.
	LoadBalancerName pulumi.StringInput `pulumi:"loadBalancerName"`
	// The port of load balancer on which the load balancer is listening (between `1` and `65535` both included).
	LoadBalancerPort pulumi.IntInput `pulumi:"loadBalancerPort"`
}

func (LoadBalancerListenerRuleListenerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerListenerRuleListener)(nil)).Elem()
}

func (i LoadBalancerListenerRuleListenerArgs) ToLoadBalancerListenerRuleListenerOutput() LoadBalancerListenerRuleListenerOutput {
	return i.ToLoadBalancerListenerRuleListenerOutputWithContext(context.Background())
}

func (i LoadBalancerListenerRuleListenerArgs) ToLoadBalancerListenerRuleListenerOutputWithContext(ctx context.Context) LoadBalancerListenerRuleListenerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerListenerRuleListenerOutput)
}

func (i LoadBalancerListenerRuleListenerArgs) ToLoadBalancerListenerRuleListenerPtrOutput() LoadBalancerListenerRuleListenerPtrOutput {
	return i.ToLoadBalancerListenerRuleListenerPtrOutputWithContext(context.Background())
}

func (i LoadBalancerListenerRuleListenerArgs) ToLoadBalancerListenerRuleListenerPtrOutputWithContext(ctx context.Context) LoadBalancerListenerRuleListenerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerListenerRuleListenerOutput).ToLoadBalancerListenerRuleListenerPtrOutputWithContext(ctx)
}

// LoadBalancerListenerRuleListenerPtrInput is an input type that accepts LoadBalancerListenerRuleListenerArgs, LoadBalancerListenerRuleListenerPtr and LoadBalancerListenerRuleListenerPtrOutput values.
// You can construct a concrete instance of `LoadBalancerListenerRuleListenerPtrInput` via:
//
//	        LoadBalancerListenerRuleListenerArgs{...}
//
//	or:
//
//	        nil
type LoadBalancerListenerRuleListenerPtrInput interface {
	pulumi.Input

	ToLoadBalancerListenerRuleListenerPtrOutput() LoadBalancerListenerRuleListenerPtrOutput
	ToLoadBalancerListenerRuleListenerPtrOutputWithContext(context.Context) LoadBalancerListenerRuleListenerPtrOutput
}

type loadBalancerListenerRuleListenerPtrType LoadBalancerListenerRuleListenerArgs

func LoadBalancerListenerRuleListenerPtr(v *LoadBalancerListenerRuleListenerArgs) LoadBalancerListenerRuleListenerPtrInput {
	return (*loadBalancerListenerRuleListenerPtrType)(v)
}

func (*loadBalancerListenerRuleListenerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LoadBalancerListenerRuleListener)(nil)).Elem()
}

func (i *loadBalancerListenerRuleListenerPtrType) ToLoadBalancerListenerRuleListenerPtrOutput() LoadBalancerListenerRuleListenerPtrOutput {
	return i.ToLoadBalancerListenerRuleListenerPtrOutputWithContext(context.Background())
}

func (i *loadBalancerListenerRuleListenerPtrType) ToLoadBalancerListenerRuleListenerPtrOutputWithContext(ctx context.Context) LoadBalancerListenerRuleListenerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerListenerRuleListenerPtrOutput)
}

type LoadBalancerListenerRuleListenerOutput struct{ *pulumi.OutputState }

func (LoadBalancerListenerRuleListenerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerListenerRuleListener)(nil)).Elem()
}

func (o LoadBalancerListenerRuleListenerOutput) ToLoadBalancerListenerRuleListenerOutput() LoadBalancerListenerRuleListenerOutput {
	return o
}

func (o LoadBalancerListenerRuleListenerOutput) ToLoadBalancerListenerRuleListenerOutputWithContext(ctx context.Context) LoadBalancerListenerRuleListenerOutput {
	return o
}

func (o LoadBalancerListenerRuleListenerOutput) ToLoadBalancerListenerRuleListenerPtrOutput() LoadBalancerListenerRuleListenerPtrOutput {
	return o.ToLoadBalancerListenerRuleListenerPtrOutputWithContext(context.Background())
}

func (o LoadBalancerListenerRuleListenerOutput) ToLoadBalancerListenerRuleListenerPtrOutputWithContext(ctx context.Context) LoadBalancerListenerRuleListenerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LoadBalancerListenerRuleListener) *LoadBalancerListenerRuleListener {
		return &v
	}).(LoadBalancerListenerRuleListenerPtrOutput)
}

// The name of the load balancer to which the listener is attached.
func (o LoadBalancerListenerRuleListenerOutput) LoadBalancerName() pulumi.StringOutput {
	return o.ApplyT(func(v LoadBalancerListenerRuleListener) string { return v.LoadBalancerName }).(pulumi.StringOutput)
}

// The port of load balancer on which the load balancer is listening (between `1` and `65535` both included).
func (o LoadBalancerListenerRuleListenerOutput) LoadBalancerPort() pulumi.IntOutput {
	return o.ApplyT(func(v LoadBalancerListenerRuleListener) int { return v.LoadBalancerPort }).(pulumi.IntOutput)
}

type LoadBalancerListenerRuleListenerPtrOutput struct{ *pulumi.OutputState }

func (LoadBalancerListenerRuleListenerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LoadBalancerListenerRuleListener)(nil)).Elem()
}

func (o LoadBalancerListenerRuleListenerPtrOutput) ToLoadBalancerListenerRuleListenerPtrOutput() LoadBalancerListenerRuleListenerPtrOutput {
	return o
}

func (o LoadBalancerListenerRuleListenerPtrOutput) ToLoadBalancerListenerRuleListenerPtrOutputWithContext(ctx context.Context) LoadBalancerListenerRuleListenerPtrOutput {
	return o
}

func (o LoadBalancerListenerRuleListenerPtrOutput) Elem() LoadBalancerListenerRuleListenerOutput {
	return o.ApplyT(func(v *LoadBalancerListenerRuleListener) LoadBalancerListenerRuleListener {
		if v != nil {
			return *v
		}
		var ret LoadBalancerListenerRuleListener
		return ret
	}).(LoadBalancerListenerRuleListenerOutput)
}

// The name of the load balancer to which the listener is attached.
func (o LoadBalancerListenerRuleListenerPtrOutput) LoadBalancerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LoadBalancerListenerRuleListener) *string {
		if v == nil {
			return nil
		}
		return &v.LoadBalancerName
	}).(pulumi.StringPtrOutput)
}

// The port of load balancer on which the load balancer is listening (between `1` and `65535` both included).
func (o LoadBalancerListenerRuleListenerPtrOutput) LoadBalancerPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LoadBalancerListenerRuleListener) *int {
		if v == nil {
			return nil
		}
		return &v.LoadBalancerPort
	}).(pulumi.IntPtrOutput)
}

type LoadBalancerListenerRuleListenerRule struct {
	// The type of action for the rule (always `forward`).
	Action *string `pulumi:"action"`
	// A host-name pattern for the rule, with a maximum length of 128 characters. This host-name pattern supports maximum three wildcards, and must not contain any special characters except `-.?`.
	HostNamePattern *string `pulumi:"hostNamePattern"`
	// The ID of the listener.
	ListenerId *int `pulumi:"listenerId"`
	// The ID of the listener rule.
	ListenerRuleId *int `pulumi:"listenerRuleId"`
	// A human-readable name for the listener rule.
	ListenerRuleName string `pulumi:"listenerRuleName"`
	// A path pattern for the rule, with a maximum length of 128 characters. This path pattern supports maximum three wildcards, and must not contain any special characters except `_-.$/~&quot;'@:+?`.
	PathPattern *string `pulumi:"pathPattern"`
	// The priority level of the listener rule, between `1` and `19999` both included. Each rule must have a unique priority level. Otherwise, an error is returned.
	Priority int `pulumi:"priority"`
}

// LoadBalancerListenerRuleListenerRuleInput is an input type that accepts LoadBalancerListenerRuleListenerRuleArgs and LoadBalancerListenerRuleListenerRuleOutput values.
// You can construct a concrete instance of `LoadBalancerListenerRuleListenerRuleInput` via:
//
//	LoadBalancerListenerRuleListenerRuleArgs{...}
type LoadBalancerListenerRuleListenerRuleInput interface {
	pulumi.Input

	ToLoadBalancerListenerRuleListenerRuleOutput() LoadBalancerListenerRuleListenerRuleOutput
	ToLoadBalancerListenerRuleListenerRuleOutputWithContext(context.Context) LoadBalancerListenerRuleListenerRuleOutput
}

type LoadBalancerListenerRuleListenerRuleArgs struct {
	// The type of action for the rule (always `forward`).
	Action pulumi.StringPtrInput `pulumi:"action"`
	// A host-name pattern for the rule, with a maximum length of 128 characters. This host-name pattern supports maximum three wildcards, and must not contain any special characters except `-.?`.
	HostNamePattern pulumi.StringPtrInput `pulumi:"hostNamePattern"`
	// The ID of the listener.
	ListenerId pulumi.IntPtrInput `pulumi:"listenerId"`
	// The ID of the listener rule.
	ListenerRuleId pulumi.IntPtrInput `pulumi:"listenerRuleId"`
	// A human-readable name for the listener rule.
	ListenerRuleName pulumi.StringInput `pulumi:"listenerRuleName"`
	// A path pattern for the rule, with a maximum length of 128 characters. This path pattern supports maximum three wildcards, and must not contain any special characters except `_-.$/~&quot;'@:+?`.
	PathPattern pulumi.StringPtrInput `pulumi:"pathPattern"`
	// The priority level of the listener rule, between `1` and `19999` both included. Each rule must have a unique priority level. Otherwise, an error is returned.
	Priority pulumi.IntInput `pulumi:"priority"`
}

func (LoadBalancerListenerRuleListenerRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerListenerRuleListenerRule)(nil)).Elem()
}

func (i LoadBalancerListenerRuleListenerRuleArgs) ToLoadBalancerListenerRuleListenerRuleOutput() LoadBalancerListenerRuleListenerRuleOutput {
	return i.ToLoadBalancerListenerRuleListenerRuleOutputWithContext(context.Background())
}

func (i LoadBalancerListenerRuleListenerRuleArgs) ToLoadBalancerListenerRuleListenerRuleOutputWithContext(ctx context.Context) LoadBalancerListenerRuleListenerRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerListenerRuleListenerRuleOutput)
}

func (i LoadBalancerListenerRuleListenerRuleArgs) ToLoadBalancerListenerRuleListenerRulePtrOutput() LoadBalancerListenerRuleListenerRulePtrOutput {
	return i.ToLoadBalancerListenerRuleListenerRulePtrOutputWithContext(context.Background())
}

func (i LoadBalancerListenerRuleListenerRuleArgs) ToLoadBalancerListenerRuleListenerRulePtrOutputWithContext(ctx context.Context) LoadBalancerListenerRuleListenerRulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerListenerRuleListenerRuleOutput).ToLoadBalancerListenerRuleListenerRulePtrOutputWithContext(ctx)
}

// LoadBalancerListenerRuleListenerRulePtrInput is an input type that accepts LoadBalancerListenerRuleListenerRuleArgs, LoadBalancerListenerRuleListenerRulePtr and LoadBalancerListenerRuleListenerRulePtrOutput values.
// You can construct a concrete instance of `LoadBalancerListenerRuleListenerRulePtrInput` via:
//
//	        LoadBalancerListenerRuleListenerRuleArgs{...}
//
//	or:
//
//	        nil
type LoadBalancerListenerRuleListenerRulePtrInput interface {
	pulumi.Input

	ToLoadBalancerListenerRuleListenerRulePtrOutput() LoadBalancerListenerRuleListenerRulePtrOutput
	ToLoadBalancerListenerRuleListenerRulePtrOutputWithContext(context.Context) LoadBalancerListenerRuleListenerRulePtrOutput
}

type loadBalancerListenerRuleListenerRulePtrType LoadBalancerListenerRuleListenerRuleArgs

func LoadBalancerListenerRuleListenerRulePtr(v *LoadBalancerListenerRuleListenerRuleArgs) LoadBalancerListenerRuleListenerRulePtrInput {
	return (*loadBalancerListenerRuleListenerRulePtrType)(v)
}

func (*loadBalancerListenerRuleListenerRulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LoadBalancerListenerRuleListenerRule)(nil)).Elem()
}

func (i *loadBalancerListenerRuleListenerRulePtrType) ToLoadBalancerListenerRuleListenerRulePtrOutput() LoadBalancerListenerRuleListenerRulePtrOutput {
	return i.ToLoadBalancerListenerRuleListenerRulePtrOutputWithContext(context.Background())
}

func (i *loadBalancerListenerRuleListenerRulePtrType) ToLoadBalancerListenerRuleListenerRulePtrOutputWithContext(ctx context.Context) LoadBalancerListenerRuleListenerRulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerListenerRuleListenerRulePtrOutput)
}

type LoadBalancerListenerRuleListenerRuleOutput struct{ *pulumi.OutputState }

func (LoadBalancerListenerRuleListenerRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerListenerRuleListenerRule)(nil)).Elem()
}

func (o LoadBalancerListenerRuleListenerRuleOutput) ToLoadBalancerListenerRuleListenerRuleOutput() LoadBalancerListenerRuleListenerRuleOutput {
	return o
}

func (o LoadBalancerListenerRuleListenerRuleOutput) ToLoadBalancerListenerRuleListenerRuleOutputWithContext(ctx context.Context) LoadBalancerListenerRuleListenerRuleOutput {
	return o
}

func (o LoadBalancerListenerRuleListenerRuleOutput) ToLoadBalancerListenerRuleListenerRulePtrOutput() LoadBalancerListenerRuleListenerRulePtrOutput {
	return o.ToLoadBalancerListenerRuleListenerRulePtrOutputWithContext(context.Background())
}

func (o LoadBalancerListenerRuleListenerRuleOutput) ToLoadBalancerListenerRuleListenerRulePtrOutputWithContext(ctx context.Context) LoadBalancerListenerRuleListenerRulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LoadBalancerListenerRuleListenerRule) *LoadBalancerListenerRuleListenerRule {
		return &v
	}).(LoadBalancerListenerRuleListenerRulePtrOutput)
}

// The type of action for the rule (always `forward`).
func (o LoadBalancerListenerRuleListenerRuleOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerListenerRuleListenerRule) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// A host-name pattern for the rule, with a maximum length of 128 characters. This host-name pattern supports maximum three wildcards, and must not contain any special characters except `-.?`.
func (o LoadBalancerListenerRuleListenerRuleOutput) HostNamePattern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerListenerRuleListenerRule) *string { return v.HostNamePattern }).(pulumi.StringPtrOutput)
}

// The ID of the listener.
func (o LoadBalancerListenerRuleListenerRuleOutput) ListenerId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LoadBalancerListenerRuleListenerRule) *int { return v.ListenerId }).(pulumi.IntPtrOutput)
}

// The ID of the listener rule.
func (o LoadBalancerListenerRuleListenerRuleOutput) ListenerRuleId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LoadBalancerListenerRuleListenerRule) *int { return v.ListenerRuleId }).(pulumi.IntPtrOutput)
}

// A human-readable name for the listener rule.
func (o LoadBalancerListenerRuleListenerRuleOutput) ListenerRuleName() pulumi.StringOutput {
	return o.ApplyT(func(v LoadBalancerListenerRuleListenerRule) string { return v.ListenerRuleName }).(pulumi.StringOutput)
}

// A path pattern for the rule, with a maximum length of 128 characters. This path pattern supports maximum three wildcards, and must not contain any special characters except `_-.$/~&quot;'@:+?`.
func (o LoadBalancerListenerRuleListenerRuleOutput) PathPattern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerListenerRuleListenerRule) *string { return v.PathPattern }).(pulumi.StringPtrOutput)
}

// The priority level of the listener rule, between `1` and `19999` both included. Each rule must have a unique priority level. Otherwise, an error is returned.
func (o LoadBalancerListenerRuleListenerRuleOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v LoadBalancerListenerRuleListenerRule) int { return v.Priority }).(pulumi.IntOutput)
}

type LoadBalancerListenerRuleListenerRulePtrOutput struct{ *pulumi.OutputState }

func (LoadBalancerListenerRuleListenerRulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LoadBalancerListenerRuleListenerRule)(nil)).Elem()
}

func (o LoadBalancerListenerRuleListenerRulePtrOutput) ToLoadBalancerListenerRuleListenerRulePtrOutput() LoadBalancerListenerRuleListenerRulePtrOutput {
	return o
}

func (o LoadBalancerListenerRuleListenerRulePtrOutput) ToLoadBalancerListenerRuleListenerRulePtrOutputWithContext(ctx context.Context) LoadBalancerListenerRuleListenerRulePtrOutput {
	return o
}

func (o LoadBalancerListenerRuleListenerRulePtrOutput) Elem() LoadBalancerListenerRuleListenerRuleOutput {
	return o.ApplyT(func(v *LoadBalancerListenerRuleListenerRule) LoadBalancerListenerRuleListenerRule {
		if v != nil {
			return *v
		}
		var ret LoadBalancerListenerRuleListenerRule
		return ret
	}).(LoadBalancerListenerRuleListenerRuleOutput)
}

// The type of action for the rule (always `forward`).
func (o LoadBalancerListenerRuleListenerRulePtrOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LoadBalancerListenerRuleListenerRule) *string {
		if v == nil {
			return nil
		}
		return v.Action
	}).(pulumi.StringPtrOutput)
}

// A host-name pattern for the rule, with a maximum length of 128 characters. This host-name pattern supports maximum three wildcards, and must not contain any special characters except `-.?`.
func (o LoadBalancerListenerRuleListenerRulePtrOutput) HostNamePattern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LoadBalancerListenerRuleListenerRule) *string {
		if v == nil {
			return nil
		}
		return v.HostNamePattern
	}).(pulumi.StringPtrOutput)
}

// The ID of the listener.
func (o LoadBalancerListenerRuleListenerRulePtrOutput) ListenerId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LoadBalancerListenerRuleListenerRule) *int {
		if v == nil {
			return nil
		}
		return v.ListenerId
	}).(pulumi.IntPtrOutput)
}

// The ID of the listener rule.
func (o LoadBalancerListenerRuleListenerRulePtrOutput) ListenerRuleId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LoadBalancerListenerRuleListenerRule) *int {
		if v == nil {
			return nil
		}
		return v.ListenerRuleId
	}).(pulumi.IntPtrOutput)
}

// A human-readable name for the listener rule.
func (o LoadBalancerListenerRuleListenerRulePtrOutput) ListenerRuleName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LoadBalancerListenerRuleListenerRule) *string {
		if v == nil {
			return nil
		}
		return &v.ListenerRuleName
	}).(pulumi.StringPtrOutput)
}

// A path pattern for the rule, with a maximum length of 128 characters. This path pattern supports maximum three wildcards, and must not contain any special characters except `_-.$/~&quot;'@:+?`.
func (o LoadBalancerListenerRuleListenerRulePtrOutput) PathPattern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LoadBalancerListenerRuleListenerRule) *string {
		if v == nil {
			return nil
		}
		return v.PathPattern
	}).(pulumi.StringPtrOutput)
}

// The priority level of the listener rule, between `1` and `19999` both included. Each rule must have a unique priority level. Otherwise, an error is returned.
func (o LoadBalancerListenerRuleListenerRulePtrOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LoadBalancerListenerRuleListenerRule) *int {
		if v == nil {
			return nil
		}
		return &v.Priority
	}).(pulumi.IntPtrOutput)
}

type LoadBalancerLoadBalancerStickyCookiePolicy struct {
	// The name of the stickiness policy.
	PolicyName *string `pulumi:"policyName"`
}

// LoadBalancerLoadBalancerStickyCookiePolicyInput is an input type that accepts LoadBalancerLoadBalancerStickyCookiePolicyArgs and LoadBalancerLoadBalancerStickyCookiePolicyOutput values.
// You can construct a concrete instance of `LoadBalancerLoadBalancerStickyCookiePolicyInput` via:
//
//	LoadBalancerLoadBalancerStickyCookiePolicyArgs{...}
type LoadBalancerLoadBalancerStickyCookiePolicyInput interface {
	pulumi.Input

	ToLoadBalancerLoadBalancerStickyCookiePolicyOutput() LoadBalancerLoadBalancerStickyCookiePolicyOutput
	ToLoadBalancerLoadBalancerStickyCookiePolicyOutputWithContext(context.Context) LoadBalancerLoadBalancerStickyCookiePolicyOutput
}

type LoadBalancerLoadBalancerStickyCookiePolicyArgs struct {
	// The name of the stickiness policy.
	PolicyName pulumi.StringPtrInput `pulumi:"policyName"`
}

func (LoadBalancerLoadBalancerStickyCookiePolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerLoadBalancerStickyCookiePolicy)(nil)).Elem()
}

func (i LoadBalancerLoadBalancerStickyCookiePolicyArgs) ToLoadBalancerLoadBalancerStickyCookiePolicyOutput() LoadBalancerLoadBalancerStickyCookiePolicyOutput {
	return i.ToLoadBalancerLoadBalancerStickyCookiePolicyOutputWithContext(context.Background())
}

func (i LoadBalancerLoadBalancerStickyCookiePolicyArgs) ToLoadBalancerLoadBalancerStickyCookiePolicyOutputWithContext(ctx context.Context) LoadBalancerLoadBalancerStickyCookiePolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerLoadBalancerStickyCookiePolicyOutput)
}

// LoadBalancerLoadBalancerStickyCookiePolicyArrayInput is an input type that accepts LoadBalancerLoadBalancerStickyCookiePolicyArray and LoadBalancerLoadBalancerStickyCookiePolicyArrayOutput values.
// You can construct a concrete instance of `LoadBalancerLoadBalancerStickyCookiePolicyArrayInput` via:
//
//	LoadBalancerLoadBalancerStickyCookiePolicyArray{ LoadBalancerLoadBalancerStickyCookiePolicyArgs{...} }
type LoadBalancerLoadBalancerStickyCookiePolicyArrayInput interface {
	pulumi.Input

	ToLoadBalancerLoadBalancerStickyCookiePolicyArrayOutput() LoadBalancerLoadBalancerStickyCookiePolicyArrayOutput
	ToLoadBalancerLoadBalancerStickyCookiePolicyArrayOutputWithContext(context.Context) LoadBalancerLoadBalancerStickyCookiePolicyArrayOutput
}

type LoadBalancerLoadBalancerStickyCookiePolicyArray []LoadBalancerLoadBalancerStickyCookiePolicyInput

func (LoadBalancerLoadBalancerStickyCookiePolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancerLoadBalancerStickyCookiePolicy)(nil)).Elem()
}

func (i LoadBalancerLoadBalancerStickyCookiePolicyArray) ToLoadBalancerLoadBalancerStickyCookiePolicyArrayOutput() LoadBalancerLoadBalancerStickyCookiePolicyArrayOutput {
	return i.ToLoadBalancerLoadBalancerStickyCookiePolicyArrayOutputWithContext(context.Background())
}

func (i LoadBalancerLoadBalancerStickyCookiePolicyArray) ToLoadBalancerLoadBalancerStickyCookiePolicyArrayOutputWithContext(ctx context.Context) LoadBalancerLoadBalancerStickyCookiePolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerLoadBalancerStickyCookiePolicyArrayOutput)
}

type LoadBalancerLoadBalancerStickyCookiePolicyOutput struct{ *pulumi.OutputState }

func (LoadBalancerLoadBalancerStickyCookiePolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerLoadBalancerStickyCookiePolicy)(nil)).Elem()
}

func (o LoadBalancerLoadBalancerStickyCookiePolicyOutput) ToLoadBalancerLoadBalancerStickyCookiePolicyOutput() LoadBalancerLoadBalancerStickyCookiePolicyOutput {
	return o
}

func (o LoadBalancerLoadBalancerStickyCookiePolicyOutput) ToLoadBalancerLoadBalancerStickyCookiePolicyOutputWithContext(ctx context.Context) LoadBalancerLoadBalancerStickyCookiePolicyOutput {
	return o
}

// The name of the stickiness policy.
func (o LoadBalancerLoadBalancerStickyCookiePolicyOutput) PolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerLoadBalancerStickyCookiePolicy) *string { return v.PolicyName }).(pulumi.StringPtrOutput)
}

type LoadBalancerLoadBalancerStickyCookiePolicyArrayOutput struct{ *pulumi.OutputState }

func (LoadBalancerLoadBalancerStickyCookiePolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancerLoadBalancerStickyCookiePolicy)(nil)).Elem()
}

func (o LoadBalancerLoadBalancerStickyCookiePolicyArrayOutput) ToLoadBalancerLoadBalancerStickyCookiePolicyArrayOutput() LoadBalancerLoadBalancerStickyCookiePolicyArrayOutput {
	return o
}

func (o LoadBalancerLoadBalancerStickyCookiePolicyArrayOutput) ToLoadBalancerLoadBalancerStickyCookiePolicyArrayOutputWithContext(ctx context.Context) LoadBalancerLoadBalancerStickyCookiePolicyArrayOutput {
	return o
}

func (o LoadBalancerLoadBalancerStickyCookiePolicyArrayOutput) Index(i pulumi.IntInput) LoadBalancerLoadBalancerStickyCookiePolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LoadBalancerLoadBalancerStickyCookiePolicy {
		return vs[0].([]LoadBalancerLoadBalancerStickyCookiePolicy)[vs[1].(int)]
	}).(LoadBalancerLoadBalancerStickyCookiePolicyOutput)
}

type LoadBalancerPolicyAccessLog struct {
	// If true, access logs are enabled for your load balancer. If false, they are not. If you set this to true in your request, the `osuBucketName` parameter is required.
	IsEnabled *bool `pulumi:"isEnabled"`
	// The name of the OOS bucket for the access logs.
	OsuBucketName *string `pulumi:"osuBucketName"`
	// The path to the folder of the access logs in your OOS bucket (by default, the `root` level of your bucket).
	OsuBucketPrefix *string `pulumi:"osuBucketPrefix"`
	// The time interval for the publication of access logs in the OOS bucket, in minutes. This value can be either `5` or `60` (by default, `60`).
	PublicationInterval *int `pulumi:"publicationInterval"`
}

// LoadBalancerPolicyAccessLogInput is an input type that accepts LoadBalancerPolicyAccessLogArgs and LoadBalancerPolicyAccessLogOutput values.
// You can construct a concrete instance of `LoadBalancerPolicyAccessLogInput` via:
//
//	LoadBalancerPolicyAccessLogArgs{...}
type LoadBalancerPolicyAccessLogInput interface {
	pulumi.Input

	ToLoadBalancerPolicyAccessLogOutput() LoadBalancerPolicyAccessLogOutput
	ToLoadBalancerPolicyAccessLogOutputWithContext(context.Context) LoadBalancerPolicyAccessLogOutput
}

type LoadBalancerPolicyAccessLogArgs struct {
	// If true, access logs are enabled for your load balancer. If false, they are not. If you set this to true in your request, the `osuBucketName` parameter is required.
	IsEnabled pulumi.BoolPtrInput `pulumi:"isEnabled"`
	// The name of the OOS bucket for the access logs.
	OsuBucketName pulumi.StringPtrInput `pulumi:"osuBucketName"`
	// The path to the folder of the access logs in your OOS bucket (by default, the `root` level of your bucket).
	OsuBucketPrefix pulumi.StringPtrInput `pulumi:"osuBucketPrefix"`
	// The time interval for the publication of access logs in the OOS bucket, in minutes. This value can be either `5` or `60` (by default, `60`).
	PublicationInterval pulumi.IntPtrInput `pulumi:"publicationInterval"`
}

func (LoadBalancerPolicyAccessLogArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerPolicyAccessLog)(nil)).Elem()
}

func (i LoadBalancerPolicyAccessLogArgs) ToLoadBalancerPolicyAccessLogOutput() LoadBalancerPolicyAccessLogOutput {
	return i.ToLoadBalancerPolicyAccessLogOutputWithContext(context.Background())
}

func (i LoadBalancerPolicyAccessLogArgs) ToLoadBalancerPolicyAccessLogOutputWithContext(ctx context.Context) LoadBalancerPolicyAccessLogOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerPolicyAccessLogOutput)
}

// LoadBalancerPolicyAccessLogArrayInput is an input type that accepts LoadBalancerPolicyAccessLogArray and LoadBalancerPolicyAccessLogArrayOutput values.
// You can construct a concrete instance of `LoadBalancerPolicyAccessLogArrayInput` via:
//
//	LoadBalancerPolicyAccessLogArray{ LoadBalancerPolicyAccessLogArgs{...} }
type LoadBalancerPolicyAccessLogArrayInput interface {
	pulumi.Input

	ToLoadBalancerPolicyAccessLogArrayOutput() LoadBalancerPolicyAccessLogArrayOutput
	ToLoadBalancerPolicyAccessLogArrayOutputWithContext(context.Context) LoadBalancerPolicyAccessLogArrayOutput
}

type LoadBalancerPolicyAccessLogArray []LoadBalancerPolicyAccessLogInput

func (LoadBalancerPolicyAccessLogArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancerPolicyAccessLog)(nil)).Elem()
}

func (i LoadBalancerPolicyAccessLogArray) ToLoadBalancerPolicyAccessLogArrayOutput() LoadBalancerPolicyAccessLogArrayOutput {
	return i.ToLoadBalancerPolicyAccessLogArrayOutputWithContext(context.Background())
}

func (i LoadBalancerPolicyAccessLogArray) ToLoadBalancerPolicyAccessLogArrayOutputWithContext(ctx context.Context) LoadBalancerPolicyAccessLogArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerPolicyAccessLogArrayOutput)
}

type LoadBalancerPolicyAccessLogOutput struct{ *pulumi.OutputState }

func (LoadBalancerPolicyAccessLogOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerPolicyAccessLog)(nil)).Elem()
}

func (o LoadBalancerPolicyAccessLogOutput) ToLoadBalancerPolicyAccessLogOutput() LoadBalancerPolicyAccessLogOutput {
	return o
}

func (o LoadBalancerPolicyAccessLogOutput) ToLoadBalancerPolicyAccessLogOutputWithContext(ctx context.Context) LoadBalancerPolicyAccessLogOutput {
	return o
}

// If true, access logs are enabled for your load balancer. If false, they are not. If you set this to true in your request, the `osuBucketName` parameter is required.
func (o LoadBalancerPolicyAccessLogOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LoadBalancerPolicyAccessLog) *bool { return v.IsEnabled }).(pulumi.BoolPtrOutput)
}

// The name of the OOS bucket for the access logs.
func (o LoadBalancerPolicyAccessLogOutput) OsuBucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerPolicyAccessLog) *string { return v.OsuBucketName }).(pulumi.StringPtrOutput)
}

// The path to the folder of the access logs in your OOS bucket (by default, the `root` level of your bucket).
func (o LoadBalancerPolicyAccessLogOutput) OsuBucketPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerPolicyAccessLog) *string { return v.OsuBucketPrefix }).(pulumi.StringPtrOutput)
}

// The time interval for the publication of access logs in the OOS bucket, in minutes. This value can be either `5` or `60` (by default, `60`).
func (o LoadBalancerPolicyAccessLogOutput) PublicationInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LoadBalancerPolicyAccessLog) *int { return v.PublicationInterval }).(pulumi.IntPtrOutput)
}

type LoadBalancerPolicyAccessLogArrayOutput struct{ *pulumi.OutputState }

func (LoadBalancerPolicyAccessLogArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancerPolicyAccessLog)(nil)).Elem()
}

func (o LoadBalancerPolicyAccessLogArrayOutput) ToLoadBalancerPolicyAccessLogArrayOutput() LoadBalancerPolicyAccessLogArrayOutput {
	return o
}

func (o LoadBalancerPolicyAccessLogArrayOutput) ToLoadBalancerPolicyAccessLogArrayOutputWithContext(ctx context.Context) LoadBalancerPolicyAccessLogArrayOutput {
	return o
}

func (o LoadBalancerPolicyAccessLogArrayOutput) Index(i pulumi.IntInput) LoadBalancerPolicyAccessLogOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LoadBalancerPolicyAccessLog {
		return vs[0].([]LoadBalancerPolicyAccessLog)[vs[1].(int)]
	}).(LoadBalancerPolicyAccessLogOutput)
}

type LoadBalancerPolicyApplicationStickyCookiePolicy struct {
	// The name of the application cookie used for stickiness. This parameter is required if you create a stickiness policy based on an application-generated cookie.
	CookieName *string `pulumi:"cookieName"`
	// The unique name of the policy, with a maximum length of 32 alphanumeric characters and dashes (`-`).
	PolicyName *string `pulumi:"policyName"`
}

// LoadBalancerPolicyApplicationStickyCookiePolicyInput is an input type that accepts LoadBalancerPolicyApplicationStickyCookiePolicyArgs and LoadBalancerPolicyApplicationStickyCookiePolicyOutput values.
// You can construct a concrete instance of `LoadBalancerPolicyApplicationStickyCookiePolicyInput` via:
//
//	LoadBalancerPolicyApplicationStickyCookiePolicyArgs{...}
type LoadBalancerPolicyApplicationStickyCookiePolicyInput interface {
	pulumi.Input

	ToLoadBalancerPolicyApplicationStickyCookiePolicyOutput() LoadBalancerPolicyApplicationStickyCookiePolicyOutput
	ToLoadBalancerPolicyApplicationStickyCookiePolicyOutputWithContext(context.Context) LoadBalancerPolicyApplicationStickyCookiePolicyOutput
}

type LoadBalancerPolicyApplicationStickyCookiePolicyArgs struct {
	// The name of the application cookie used for stickiness. This parameter is required if you create a stickiness policy based on an application-generated cookie.
	CookieName pulumi.StringPtrInput `pulumi:"cookieName"`
	// The unique name of the policy, with a maximum length of 32 alphanumeric characters and dashes (`-`).
	PolicyName pulumi.StringPtrInput `pulumi:"policyName"`
}

func (LoadBalancerPolicyApplicationStickyCookiePolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerPolicyApplicationStickyCookiePolicy)(nil)).Elem()
}

func (i LoadBalancerPolicyApplicationStickyCookiePolicyArgs) ToLoadBalancerPolicyApplicationStickyCookiePolicyOutput() LoadBalancerPolicyApplicationStickyCookiePolicyOutput {
	return i.ToLoadBalancerPolicyApplicationStickyCookiePolicyOutputWithContext(context.Background())
}

func (i LoadBalancerPolicyApplicationStickyCookiePolicyArgs) ToLoadBalancerPolicyApplicationStickyCookiePolicyOutputWithContext(ctx context.Context) LoadBalancerPolicyApplicationStickyCookiePolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerPolicyApplicationStickyCookiePolicyOutput)
}

// LoadBalancerPolicyApplicationStickyCookiePolicyArrayInput is an input type that accepts LoadBalancerPolicyApplicationStickyCookiePolicyArray and LoadBalancerPolicyApplicationStickyCookiePolicyArrayOutput values.
// You can construct a concrete instance of `LoadBalancerPolicyApplicationStickyCookiePolicyArrayInput` via:
//
//	LoadBalancerPolicyApplicationStickyCookiePolicyArray{ LoadBalancerPolicyApplicationStickyCookiePolicyArgs{...} }
type LoadBalancerPolicyApplicationStickyCookiePolicyArrayInput interface {
	pulumi.Input

	ToLoadBalancerPolicyApplicationStickyCookiePolicyArrayOutput() LoadBalancerPolicyApplicationStickyCookiePolicyArrayOutput
	ToLoadBalancerPolicyApplicationStickyCookiePolicyArrayOutputWithContext(context.Context) LoadBalancerPolicyApplicationStickyCookiePolicyArrayOutput
}

type LoadBalancerPolicyApplicationStickyCookiePolicyArray []LoadBalancerPolicyApplicationStickyCookiePolicyInput

func (LoadBalancerPolicyApplicationStickyCookiePolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancerPolicyApplicationStickyCookiePolicy)(nil)).Elem()
}

func (i LoadBalancerPolicyApplicationStickyCookiePolicyArray) ToLoadBalancerPolicyApplicationStickyCookiePolicyArrayOutput() LoadBalancerPolicyApplicationStickyCookiePolicyArrayOutput {
	return i.ToLoadBalancerPolicyApplicationStickyCookiePolicyArrayOutputWithContext(context.Background())
}

func (i LoadBalancerPolicyApplicationStickyCookiePolicyArray) ToLoadBalancerPolicyApplicationStickyCookiePolicyArrayOutputWithContext(ctx context.Context) LoadBalancerPolicyApplicationStickyCookiePolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerPolicyApplicationStickyCookiePolicyArrayOutput)
}

type LoadBalancerPolicyApplicationStickyCookiePolicyOutput struct{ *pulumi.OutputState }

func (LoadBalancerPolicyApplicationStickyCookiePolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerPolicyApplicationStickyCookiePolicy)(nil)).Elem()
}

func (o LoadBalancerPolicyApplicationStickyCookiePolicyOutput) ToLoadBalancerPolicyApplicationStickyCookiePolicyOutput() LoadBalancerPolicyApplicationStickyCookiePolicyOutput {
	return o
}

func (o LoadBalancerPolicyApplicationStickyCookiePolicyOutput) ToLoadBalancerPolicyApplicationStickyCookiePolicyOutputWithContext(ctx context.Context) LoadBalancerPolicyApplicationStickyCookiePolicyOutput {
	return o
}

// The name of the application cookie used for stickiness. This parameter is required if you create a stickiness policy based on an application-generated cookie.
func (o LoadBalancerPolicyApplicationStickyCookiePolicyOutput) CookieName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerPolicyApplicationStickyCookiePolicy) *string { return v.CookieName }).(pulumi.StringPtrOutput)
}

// The unique name of the policy, with a maximum length of 32 alphanumeric characters and dashes (`-`).
func (o LoadBalancerPolicyApplicationStickyCookiePolicyOutput) PolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerPolicyApplicationStickyCookiePolicy) *string { return v.PolicyName }).(pulumi.StringPtrOutput)
}

type LoadBalancerPolicyApplicationStickyCookiePolicyArrayOutput struct{ *pulumi.OutputState }

func (LoadBalancerPolicyApplicationStickyCookiePolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancerPolicyApplicationStickyCookiePolicy)(nil)).Elem()
}

func (o LoadBalancerPolicyApplicationStickyCookiePolicyArrayOutput) ToLoadBalancerPolicyApplicationStickyCookiePolicyArrayOutput() LoadBalancerPolicyApplicationStickyCookiePolicyArrayOutput {
	return o
}

func (o LoadBalancerPolicyApplicationStickyCookiePolicyArrayOutput) ToLoadBalancerPolicyApplicationStickyCookiePolicyArrayOutputWithContext(ctx context.Context) LoadBalancerPolicyApplicationStickyCookiePolicyArrayOutput {
	return o
}

func (o LoadBalancerPolicyApplicationStickyCookiePolicyArrayOutput) Index(i pulumi.IntInput) LoadBalancerPolicyApplicationStickyCookiePolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LoadBalancerPolicyApplicationStickyCookiePolicy {
		return vs[0].([]LoadBalancerPolicyApplicationStickyCookiePolicy)[vs[1].(int)]
	}).(LoadBalancerPolicyApplicationStickyCookiePolicyOutput)
}

type LoadBalancerPolicyHealthCheck struct {
	// The number of seconds between two requests (between `5` and `600` both included).
	CheckInterval *int `pulumi:"checkInterval"`
	// The number of consecutive successful requests before considering the VM as healthy (between `2` and `10` both included).
	HealthyThreshold *int `pulumi:"healthyThreshold"`
	// If you use the HTTP or HTTPS protocols, the request URL path.
	Path *string `pulumi:"path"`
	// The port number (between `1` and `65535`, both included).
	Port *int `pulumi:"port"`
	// The protocol for the URL of the VM (`HTTP` \| `HTTPS` \| `TCP` \| `SSL`).
	Protocol *string `pulumi:"protocol"`
	// The maximum waiting time for a response before considering the VM as unhealthy, in seconds (between `2` and `60` both included).
	Timeout *int `pulumi:"timeout"`
	// The number of consecutive failed requests before considering the VM as unhealthy (between `2` and `10` both included).
	UnhealthyThreshold *int `pulumi:"unhealthyThreshold"`
}

// LoadBalancerPolicyHealthCheckInput is an input type that accepts LoadBalancerPolicyHealthCheckArgs and LoadBalancerPolicyHealthCheckOutput values.
// You can construct a concrete instance of `LoadBalancerPolicyHealthCheckInput` via:
//
//	LoadBalancerPolicyHealthCheckArgs{...}
type LoadBalancerPolicyHealthCheckInput interface {
	pulumi.Input

	ToLoadBalancerPolicyHealthCheckOutput() LoadBalancerPolicyHealthCheckOutput
	ToLoadBalancerPolicyHealthCheckOutputWithContext(context.Context) LoadBalancerPolicyHealthCheckOutput
}

type LoadBalancerPolicyHealthCheckArgs struct {
	// The number of seconds between two requests (between `5` and `600` both included).
	CheckInterval pulumi.IntPtrInput `pulumi:"checkInterval"`
	// The number of consecutive successful requests before considering the VM as healthy (between `2` and `10` both included).
	HealthyThreshold pulumi.IntPtrInput `pulumi:"healthyThreshold"`
	// If you use the HTTP or HTTPS protocols, the request URL path.
	Path pulumi.StringPtrInput `pulumi:"path"`
	// The port number (between `1` and `65535`, both included).
	Port pulumi.IntPtrInput `pulumi:"port"`
	// The protocol for the URL of the VM (`HTTP` \| `HTTPS` \| `TCP` \| `SSL`).
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// The maximum waiting time for a response before considering the VM as unhealthy, in seconds (between `2` and `60` both included).
	Timeout pulumi.IntPtrInput `pulumi:"timeout"`
	// The number of consecutive failed requests before considering the VM as unhealthy (between `2` and `10` both included).
	UnhealthyThreshold pulumi.IntPtrInput `pulumi:"unhealthyThreshold"`
}

func (LoadBalancerPolicyHealthCheckArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerPolicyHealthCheck)(nil)).Elem()
}

func (i LoadBalancerPolicyHealthCheckArgs) ToLoadBalancerPolicyHealthCheckOutput() LoadBalancerPolicyHealthCheckOutput {
	return i.ToLoadBalancerPolicyHealthCheckOutputWithContext(context.Background())
}

func (i LoadBalancerPolicyHealthCheckArgs) ToLoadBalancerPolicyHealthCheckOutputWithContext(ctx context.Context) LoadBalancerPolicyHealthCheckOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerPolicyHealthCheckOutput)
}

// LoadBalancerPolicyHealthCheckArrayInput is an input type that accepts LoadBalancerPolicyHealthCheckArray and LoadBalancerPolicyHealthCheckArrayOutput values.
// You can construct a concrete instance of `LoadBalancerPolicyHealthCheckArrayInput` via:
//
//	LoadBalancerPolicyHealthCheckArray{ LoadBalancerPolicyHealthCheckArgs{...} }
type LoadBalancerPolicyHealthCheckArrayInput interface {
	pulumi.Input

	ToLoadBalancerPolicyHealthCheckArrayOutput() LoadBalancerPolicyHealthCheckArrayOutput
	ToLoadBalancerPolicyHealthCheckArrayOutputWithContext(context.Context) LoadBalancerPolicyHealthCheckArrayOutput
}

type LoadBalancerPolicyHealthCheckArray []LoadBalancerPolicyHealthCheckInput

func (LoadBalancerPolicyHealthCheckArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancerPolicyHealthCheck)(nil)).Elem()
}

func (i LoadBalancerPolicyHealthCheckArray) ToLoadBalancerPolicyHealthCheckArrayOutput() LoadBalancerPolicyHealthCheckArrayOutput {
	return i.ToLoadBalancerPolicyHealthCheckArrayOutputWithContext(context.Background())
}

func (i LoadBalancerPolicyHealthCheckArray) ToLoadBalancerPolicyHealthCheckArrayOutputWithContext(ctx context.Context) LoadBalancerPolicyHealthCheckArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerPolicyHealthCheckArrayOutput)
}

type LoadBalancerPolicyHealthCheckOutput struct{ *pulumi.OutputState }

func (LoadBalancerPolicyHealthCheckOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerPolicyHealthCheck)(nil)).Elem()
}

func (o LoadBalancerPolicyHealthCheckOutput) ToLoadBalancerPolicyHealthCheckOutput() LoadBalancerPolicyHealthCheckOutput {
	return o
}

func (o LoadBalancerPolicyHealthCheckOutput) ToLoadBalancerPolicyHealthCheckOutputWithContext(ctx context.Context) LoadBalancerPolicyHealthCheckOutput {
	return o
}

// The number of seconds between two requests (between `5` and `600` both included).
func (o LoadBalancerPolicyHealthCheckOutput) CheckInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LoadBalancerPolicyHealthCheck) *int { return v.CheckInterval }).(pulumi.IntPtrOutput)
}

// The number of consecutive successful requests before considering the VM as healthy (between `2` and `10` both included).
func (o LoadBalancerPolicyHealthCheckOutput) HealthyThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LoadBalancerPolicyHealthCheck) *int { return v.HealthyThreshold }).(pulumi.IntPtrOutput)
}

// If you use the HTTP or HTTPS protocols, the request URL path.
func (o LoadBalancerPolicyHealthCheckOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerPolicyHealthCheck) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// The port number (between `1` and `65535`, both included).
func (o LoadBalancerPolicyHealthCheckOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LoadBalancerPolicyHealthCheck) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// The protocol for the URL of the VM (`HTTP` \| `HTTPS` \| `TCP` \| `SSL`).
func (o LoadBalancerPolicyHealthCheckOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerPolicyHealthCheck) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// The maximum waiting time for a response before considering the VM as unhealthy, in seconds (between `2` and `60` both included).
func (o LoadBalancerPolicyHealthCheckOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LoadBalancerPolicyHealthCheck) *int { return v.Timeout }).(pulumi.IntPtrOutput)
}

// The number of consecutive failed requests before considering the VM as unhealthy (between `2` and `10` both included).
func (o LoadBalancerPolicyHealthCheckOutput) UnhealthyThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LoadBalancerPolicyHealthCheck) *int { return v.UnhealthyThreshold }).(pulumi.IntPtrOutput)
}

type LoadBalancerPolicyHealthCheckArrayOutput struct{ *pulumi.OutputState }

func (LoadBalancerPolicyHealthCheckArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancerPolicyHealthCheck)(nil)).Elem()
}

func (o LoadBalancerPolicyHealthCheckArrayOutput) ToLoadBalancerPolicyHealthCheckArrayOutput() LoadBalancerPolicyHealthCheckArrayOutput {
	return o
}

func (o LoadBalancerPolicyHealthCheckArrayOutput) ToLoadBalancerPolicyHealthCheckArrayOutputWithContext(ctx context.Context) LoadBalancerPolicyHealthCheckArrayOutput {
	return o
}

func (o LoadBalancerPolicyHealthCheckArrayOutput) Index(i pulumi.IntInput) LoadBalancerPolicyHealthCheckOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LoadBalancerPolicyHealthCheck {
		return vs[0].([]LoadBalancerPolicyHealthCheck)[vs[1].(int)]
	}).(LoadBalancerPolicyHealthCheckOutput)
}

type LoadBalancerPolicyListener struct {
	// The port on which the backend VM is listening (between `1` and `65535`, both included).
	BackendPort *int `pulumi:"backendPort"`
	// The protocol for routing traffic to backend VMs (`HTTP` \| `HTTPS` \| `TCP` \| `SSL`).
	BackendProtocol *string `pulumi:"backendProtocol"`
	// The port on which the load balancer is listening (between `1` and `65535`, both included).
	LoadBalancerPort *int `pulumi:"loadBalancerPort"`
	// The routing protocol (`HTTP` \| `HTTPS` \| `TCP` \| `SSL`).
	LoadBalancerProtocol *string `pulumi:"loadBalancerProtocol"`
	// The names of the policies. If there are no policies enabled, the list is empty.
	PolicyNames []string `pulumi:"policyNames"`
	// The OUTSCALE Resource Name (ORN) of the server certificate. For more information, see [Resource Identifiers > OUTSCALE Resource Names (ORNs)](https://docs.outscale.com/en/userguide/Resource-Identifiers.html#_outscale_resource_names_orns).
	ServerCertificateId *string `pulumi:"serverCertificateId"`
}

// LoadBalancerPolicyListenerInput is an input type that accepts LoadBalancerPolicyListenerArgs and LoadBalancerPolicyListenerOutput values.
// You can construct a concrete instance of `LoadBalancerPolicyListenerInput` via:
//
//	LoadBalancerPolicyListenerArgs{...}
type LoadBalancerPolicyListenerInput interface {
	pulumi.Input

	ToLoadBalancerPolicyListenerOutput() LoadBalancerPolicyListenerOutput
	ToLoadBalancerPolicyListenerOutputWithContext(context.Context) LoadBalancerPolicyListenerOutput
}

type LoadBalancerPolicyListenerArgs struct {
	// The port on which the backend VM is listening (between `1` and `65535`, both included).
	BackendPort pulumi.IntPtrInput `pulumi:"backendPort"`
	// The protocol for routing traffic to backend VMs (`HTTP` \| `HTTPS` \| `TCP` \| `SSL`).
	BackendProtocol pulumi.StringPtrInput `pulumi:"backendProtocol"`
	// The port on which the load balancer is listening (between `1` and `65535`, both included).
	LoadBalancerPort pulumi.IntPtrInput `pulumi:"loadBalancerPort"`
	// The routing protocol (`HTTP` \| `HTTPS` \| `TCP` \| `SSL`).
	LoadBalancerProtocol pulumi.StringPtrInput `pulumi:"loadBalancerProtocol"`
	// The names of the policies. If there are no policies enabled, the list is empty.
	PolicyNames pulumi.StringArrayInput `pulumi:"policyNames"`
	// The OUTSCALE Resource Name (ORN) of the server certificate. For more information, see [Resource Identifiers > OUTSCALE Resource Names (ORNs)](https://docs.outscale.com/en/userguide/Resource-Identifiers.html#_outscale_resource_names_orns).
	ServerCertificateId pulumi.StringPtrInput `pulumi:"serverCertificateId"`
}

func (LoadBalancerPolicyListenerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerPolicyListener)(nil)).Elem()
}

func (i LoadBalancerPolicyListenerArgs) ToLoadBalancerPolicyListenerOutput() LoadBalancerPolicyListenerOutput {
	return i.ToLoadBalancerPolicyListenerOutputWithContext(context.Background())
}

func (i LoadBalancerPolicyListenerArgs) ToLoadBalancerPolicyListenerOutputWithContext(ctx context.Context) LoadBalancerPolicyListenerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerPolicyListenerOutput)
}

// LoadBalancerPolicyListenerArrayInput is an input type that accepts LoadBalancerPolicyListenerArray and LoadBalancerPolicyListenerArrayOutput values.
// You can construct a concrete instance of `LoadBalancerPolicyListenerArrayInput` via:
//
//	LoadBalancerPolicyListenerArray{ LoadBalancerPolicyListenerArgs{...} }
type LoadBalancerPolicyListenerArrayInput interface {
	pulumi.Input

	ToLoadBalancerPolicyListenerArrayOutput() LoadBalancerPolicyListenerArrayOutput
	ToLoadBalancerPolicyListenerArrayOutputWithContext(context.Context) LoadBalancerPolicyListenerArrayOutput
}

type LoadBalancerPolicyListenerArray []LoadBalancerPolicyListenerInput

func (LoadBalancerPolicyListenerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancerPolicyListener)(nil)).Elem()
}

func (i LoadBalancerPolicyListenerArray) ToLoadBalancerPolicyListenerArrayOutput() LoadBalancerPolicyListenerArrayOutput {
	return i.ToLoadBalancerPolicyListenerArrayOutputWithContext(context.Background())
}

func (i LoadBalancerPolicyListenerArray) ToLoadBalancerPolicyListenerArrayOutputWithContext(ctx context.Context) LoadBalancerPolicyListenerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerPolicyListenerArrayOutput)
}

type LoadBalancerPolicyListenerOutput struct{ *pulumi.OutputState }

func (LoadBalancerPolicyListenerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerPolicyListener)(nil)).Elem()
}

func (o LoadBalancerPolicyListenerOutput) ToLoadBalancerPolicyListenerOutput() LoadBalancerPolicyListenerOutput {
	return o
}

func (o LoadBalancerPolicyListenerOutput) ToLoadBalancerPolicyListenerOutputWithContext(ctx context.Context) LoadBalancerPolicyListenerOutput {
	return o
}

// The port on which the backend VM is listening (between `1` and `65535`, both included).
func (o LoadBalancerPolicyListenerOutput) BackendPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LoadBalancerPolicyListener) *int { return v.BackendPort }).(pulumi.IntPtrOutput)
}

// The protocol for routing traffic to backend VMs (`HTTP` \| `HTTPS` \| `TCP` \| `SSL`).
func (o LoadBalancerPolicyListenerOutput) BackendProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerPolicyListener) *string { return v.BackendProtocol }).(pulumi.StringPtrOutput)
}

// The port on which the load balancer is listening (between `1` and `65535`, both included).
func (o LoadBalancerPolicyListenerOutput) LoadBalancerPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LoadBalancerPolicyListener) *int { return v.LoadBalancerPort }).(pulumi.IntPtrOutput)
}

// The routing protocol (`HTTP` \| `HTTPS` \| `TCP` \| `SSL`).
func (o LoadBalancerPolicyListenerOutput) LoadBalancerProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerPolicyListener) *string { return v.LoadBalancerProtocol }).(pulumi.StringPtrOutput)
}

// The names of the policies. If there are no policies enabled, the list is empty.
func (o LoadBalancerPolicyListenerOutput) PolicyNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LoadBalancerPolicyListener) []string { return v.PolicyNames }).(pulumi.StringArrayOutput)
}

// The OUTSCALE Resource Name (ORN) of the server certificate. For more information, see [Resource Identifiers > OUTSCALE Resource Names (ORNs)](https://docs.outscale.com/en/userguide/Resource-Identifiers.html#_outscale_resource_names_orns).
func (o LoadBalancerPolicyListenerOutput) ServerCertificateId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerPolicyListener) *string { return v.ServerCertificateId }).(pulumi.StringPtrOutput)
}

type LoadBalancerPolicyListenerArrayOutput struct{ *pulumi.OutputState }

func (LoadBalancerPolicyListenerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancerPolicyListener)(nil)).Elem()
}

func (o LoadBalancerPolicyListenerArrayOutput) ToLoadBalancerPolicyListenerArrayOutput() LoadBalancerPolicyListenerArrayOutput {
	return o
}

func (o LoadBalancerPolicyListenerArrayOutput) ToLoadBalancerPolicyListenerArrayOutputWithContext(ctx context.Context) LoadBalancerPolicyListenerArrayOutput {
	return o
}

func (o LoadBalancerPolicyListenerArrayOutput) Index(i pulumi.IntInput) LoadBalancerPolicyListenerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LoadBalancerPolicyListener {
		return vs[0].([]LoadBalancerPolicyListener)[vs[1].(int)]
	}).(LoadBalancerPolicyListenerOutput)
}

type LoadBalancerPolicyLoadBalancerStickyCookiePolicy struct {
	// The unique name of the policy, with a maximum length of 32 alphanumeric characters and dashes (`-`).
	PolicyName *string `pulumi:"policyName"`
}

// LoadBalancerPolicyLoadBalancerStickyCookiePolicyInput is an input type that accepts LoadBalancerPolicyLoadBalancerStickyCookiePolicyArgs and LoadBalancerPolicyLoadBalancerStickyCookiePolicyOutput values.
// You can construct a concrete instance of `LoadBalancerPolicyLoadBalancerStickyCookiePolicyInput` via:
//
//	LoadBalancerPolicyLoadBalancerStickyCookiePolicyArgs{...}
type LoadBalancerPolicyLoadBalancerStickyCookiePolicyInput interface {
	pulumi.Input

	ToLoadBalancerPolicyLoadBalancerStickyCookiePolicyOutput() LoadBalancerPolicyLoadBalancerStickyCookiePolicyOutput
	ToLoadBalancerPolicyLoadBalancerStickyCookiePolicyOutputWithContext(context.Context) LoadBalancerPolicyLoadBalancerStickyCookiePolicyOutput
}

type LoadBalancerPolicyLoadBalancerStickyCookiePolicyArgs struct {
	// The unique name of the policy, with a maximum length of 32 alphanumeric characters and dashes (`-`).
	PolicyName pulumi.StringPtrInput `pulumi:"policyName"`
}

func (LoadBalancerPolicyLoadBalancerStickyCookiePolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerPolicyLoadBalancerStickyCookiePolicy)(nil)).Elem()
}

func (i LoadBalancerPolicyLoadBalancerStickyCookiePolicyArgs) ToLoadBalancerPolicyLoadBalancerStickyCookiePolicyOutput() LoadBalancerPolicyLoadBalancerStickyCookiePolicyOutput {
	return i.ToLoadBalancerPolicyLoadBalancerStickyCookiePolicyOutputWithContext(context.Background())
}

func (i LoadBalancerPolicyLoadBalancerStickyCookiePolicyArgs) ToLoadBalancerPolicyLoadBalancerStickyCookiePolicyOutputWithContext(ctx context.Context) LoadBalancerPolicyLoadBalancerStickyCookiePolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerPolicyLoadBalancerStickyCookiePolicyOutput)
}

// LoadBalancerPolicyLoadBalancerStickyCookiePolicyArrayInput is an input type that accepts LoadBalancerPolicyLoadBalancerStickyCookiePolicyArray and LoadBalancerPolicyLoadBalancerStickyCookiePolicyArrayOutput values.
// You can construct a concrete instance of `LoadBalancerPolicyLoadBalancerStickyCookiePolicyArrayInput` via:
//
//	LoadBalancerPolicyLoadBalancerStickyCookiePolicyArray{ LoadBalancerPolicyLoadBalancerStickyCookiePolicyArgs{...} }
type LoadBalancerPolicyLoadBalancerStickyCookiePolicyArrayInput interface {
	pulumi.Input

	ToLoadBalancerPolicyLoadBalancerStickyCookiePolicyArrayOutput() LoadBalancerPolicyLoadBalancerStickyCookiePolicyArrayOutput
	ToLoadBalancerPolicyLoadBalancerStickyCookiePolicyArrayOutputWithContext(context.Context) LoadBalancerPolicyLoadBalancerStickyCookiePolicyArrayOutput
}

type LoadBalancerPolicyLoadBalancerStickyCookiePolicyArray []LoadBalancerPolicyLoadBalancerStickyCookiePolicyInput

func (LoadBalancerPolicyLoadBalancerStickyCookiePolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancerPolicyLoadBalancerStickyCookiePolicy)(nil)).Elem()
}

func (i LoadBalancerPolicyLoadBalancerStickyCookiePolicyArray) ToLoadBalancerPolicyLoadBalancerStickyCookiePolicyArrayOutput() LoadBalancerPolicyLoadBalancerStickyCookiePolicyArrayOutput {
	return i.ToLoadBalancerPolicyLoadBalancerStickyCookiePolicyArrayOutputWithContext(context.Background())
}

func (i LoadBalancerPolicyLoadBalancerStickyCookiePolicyArray) ToLoadBalancerPolicyLoadBalancerStickyCookiePolicyArrayOutputWithContext(ctx context.Context) LoadBalancerPolicyLoadBalancerStickyCookiePolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerPolicyLoadBalancerStickyCookiePolicyArrayOutput)
}

type LoadBalancerPolicyLoadBalancerStickyCookiePolicyOutput struct{ *pulumi.OutputState }

func (LoadBalancerPolicyLoadBalancerStickyCookiePolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerPolicyLoadBalancerStickyCookiePolicy)(nil)).Elem()
}

func (o LoadBalancerPolicyLoadBalancerStickyCookiePolicyOutput) ToLoadBalancerPolicyLoadBalancerStickyCookiePolicyOutput() LoadBalancerPolicyLoadBalancerStickyCookiePolicyOutput {
	return o
}

func (o LoadBalancerPolicyLoadBalancerStickyCookiePolicyOutput) ToLoadBalancerPolicyLoadBalancerStickyCookiePolicyOutputWithContext(ctx context.Context) LoadBalancerPolicyLoadBalancerStickyCookiePolicyOutput {
	return o
}

// The unique name of the policy, with a maximum length of 32 alphanumeric characters and dashes (`-`).
func (o LoadBalancerPolicyLoadBalancerStickyCookiePolicyOutput) PolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerPolicyLoadBalancerStickyCookiePolicy) *string { return v.PolicyName }).(pulumi.StringPtrOutput)
}

type LoadBalancerPolicyLoadBalancerStickyCookiePolicyArrayOutput struct{ *pulumi.OutputState }

func (LoadBalancerPolicyLoadBalancerStickyCookiePolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancerPolicyLoadBalancerStickyCookiePolicy)(nil)).Elem()
}

func (o LoadBalancerPolicyLoadBalancerStickyCookiePolicyArrayOutput) ToLoadBalancerPolicyLoadBalancerStickyCookiePolicyArrayOutput() LoadBalancerPolicyLoadBalancerStickyCookiePolicyArrayOutput {
	return o
}

func (o LoadBalancerPolicyLoadBalancerStickyCookiePolicyArrayOutput) ToLoadBalancerPolicyLoadBalancerStickyCookiePolicyArrayOutputWithContext(ctx context.Context) LoadBalancerPolicyLoadBalancerStickyCookiePolicyArrayOutput {
	return o
}

func (o LoadBalancerPolicyLoadBalancerStickyCookiePolicyArrayOutput) Index(i pulumi.IntInput) LoadBalancerPolicyLoadBalancerStickyCookiePolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LoadBalancerPolicyLoadBalancerStickyCookiePolicy {
		return vs[0].([]LoadBalancerPolicyLoadBalancerStickyCookiePolicy)[vs[1].(int)]
	}).(LoadBalancerPolicyLoadBalancerStickyCookiePolicyOutput)
}

type LoadBalancerPolicySourceSecurityGroup struct {
	// The account ID of the owner of the security group.
	SecurityGroupAccountId *string `pulumi:"securityGroupAccountId"`
	// The name of the security group.
	SecurityGroupName *string `pulumi:"securityGroupName"`
}

// LoadBalancerPolicySourceSecurityGroupInput is an input type that accepts LoadBalancerPolicySourceSecurityGroupArgs and LoadBalancerPolicySourceSecurityGroupOutput values.
// You can construct a concrete instance of `LoadBalancerPolicySourceSecurityGroupInput` via:
//
//	LoadBalancerPolicySourceSecurityGroupArgs{...}
type LoadBalancerPolicySourceSecurityGroupInput interface {
	pulumi.Input

	ToLoadBalancerPolicySourceSecurityGroupOutput() LoadBalancerPolicySourceSecurityGroupOutput
	ToLoadBalancerPolicySourceSecurityGroupOutputWithContext(context.Context) LoadBalancerPolicySourceSecurityGroupOutput
}

type LoadBalancerPolicySourceSecurityGroupArgs struct {
	// The account ID of the owner of the security group.
	SecurityGroupAccountId pulumi.StringPtrInput `pulumi:"securityGroupAccountId"`
	// The name of the security group.
	SecurityGroupName pulumi.StringPtrInput `pulumi:"securityGroupName"`
}

func (LoadBalancerPolicySourceSecurityGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerPolicySourceSecurityGroup)(nil)).Elem()
}

func (i LoadBalancerPolicySourceSecurityGroupArgs) ToLoadBalancerPolicySourceSecurityGroupOutput() LoadBalancerPolicySourceSecurityGroupOutput {
	return i.ToLoadBalancerPolicySourceSecurityGroupOutputWithContext(context.Background())
}

func (i LoadBalancerPolicySourceSecurityGroupArgs) ToLoadBalancerPolicySourceSecurityGroupOutputWithContext(ctx context.Context) LoadBalancerPolicySourceSecurityGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerPolicySourceSecurityGroupOutput)
}

// LoadBalancerPolicySourceSecurityGroupArrayInput is an input type that accepts LoadBalancerPolicySourceSecurityGroupArray and LoadBalancerPolicySourceSecurityGroupArrayOutput values.
// You can construct a concrete instance of `LoadBalancerPolicySourceSecurityGroupArrayInput` via:
//
//	LoadBalancerPolicySourceSecurityGroupArray{ LoadBalancerPolicySourceSecurityGroupArgs{...} }
type LoadBalancerPolicySourceSecurityGroupArrayInput interface {
	pulumi.Input

	ToLoadBalancerPolicySourceSecurityGroupArrayOutput() LoadBalancerPolicySourceSecurityGroupArrayOutput
	ToLoadBalancerPolicySourceSecurityGroupArrayOutputWithContext(context.Context) LoadBalancerPolicySourceSecurityGroupArrayOutput
}

type LoadBalancerPolicySourceSecurityGroupArray []LoadBalancerPolicySourceSecurityGroupInput

func (LoadBalancerPolicySourceSecurityGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancerPolicySourceSecurityGroup)(nil)).Elem()
}

func (i LoadBalancerPolicySourceSecurityGroupArray) ToLoadBalancerPolicySourceSecurityGroupArrayOutput() LoadBalancerPolicySourceSecurityGroupArrayOutput {
	return i.ToLoadBalancerPolicySourceSecurityGroupArrayOutputWithContext(context.Background())
}

func (i LoadBalancerPolicySourceSecurityGroupArray) ToLoadBalancerPolicySourceSecurityGroupArrayOutputWithContext(ctx context.Context) LoadBalancerPolicySourceSecurityGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerPolicySourceSecurityGroupArrayOutput)
}

type LoadBalancerPolicySourceSecurityGroupOutput struct{ *pulumi.OutputState }

func (LoadBalancerPolicySourceSecurityGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerPolicySourceSecurityGroup)(nil)).Elem()
}

func (o LoadBalancerPolicySourceSecurityGroupOutput) ToLoadBalancerPolicySourceSecurityGroupOutput() LoadBalancerPolicySourceSecurityGroupOutput {
	return o
}

func (o LoadBalancerPolicySourceSecurityGroupOutput) ToLoadBalancerPolicySourceSecurityGroupOutputWithContext(ctx context.Context) LoadBalancerPolicySourceSecurityGroupOutput {
	return o
}

// The account ID of the owner of the security group.
func (o LoadBalancerPolicySourceSecurityGroupOutput) SecurityGroupAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerPolicySourceSecurityGroup) *string { return v.SecurityGroupAccountId }).(pulumi.StringPtrOutput)
}

// The name of the security group.
func (o LoadBalancerPolicySourceSecurityGroupOutput) SecurityGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerPolicySourceSecurityGroup) *string { return v.SecurityGroupName }).(pulumi.StringPtrOutput)
}

type LoadBalancerPolicySourceSecurityGroupArrayOutput struct{ *pulumi.OutputState }

func (LoadBalancerPolicySourceSecurityGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancerPolicySourceSecurityGroup)(nil)).Elem()
}

func (o LoadBalancerPolicySourceSecurityGroupArrayOutput) ToLoadBalancerPolicySourceSecurityGroupArrayOutput() LoadBalancerPolicySourceSecurityGroupArrayOutput {
	return o
}

func (o LoadBalancerPolicySourceSecurityGroupArrayOutput) ToLoadBalancerPolicySourceSecurityGroupArrayOutputWithContext(ctx context.Context) LoadBalancerPolicySourceSecurityGroupArrayOutput {
	return o
}

func (o LoadBalancerPolicySourceSecurityGroupArrayOutput) Index(i pulumi.IntInput) LoadBalancerPolicySourceSecurityGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LoadBalancerPolicySourceSecurityGroup {
		return vs[0].([]LoadBalancerPolicySourceSecurityGroup)[vs[1].(int)]
	}).(LoadBalancerPolicySourceSecurityGroupOutput)
}

type LoadBalancerPolicyTag struct {
	// The key of the tag, with a minimum of 1 character.
	Key *string `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value *string `pulumi:"value"`
}

// LoadBalancerPolicyTagInput is an input type that accepts LoadBalancerPolicyTagArgs and LoadBalancerPolicyTagOutput values.
// You can construct a concrete instance of `LoadBalancerPolicyTagInput` via:
//
//	LoadBalancerPolicyTagArgs{...}
type LoadBalancerPolicyTagInput interface {
	pulumi.Input

	ToLoadBalancerPolicyTagOutput() LoadBalancerPolicyTagOutput
	ToLoadBalancerPolicyTagOutputWithContext(context.Context) LoadBalancerPolicyTagOutput
}

type LoadBalancerPolicyTagArgs struct {
	// The key of the tag, with a minimum of 1 character.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (LoadBalancerPolicyTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerPolicyTag)(nil)).Elem()
}

func (i LoadBalancerPolicyTagArgs) ToLoadBalancerPolicyTagOutput() LoadBalancerPolicyTagOutput {
	return i.ToLoadBalancerPolicyTagOutputWithContext(context.Background())
}

func (i LoadBalancerPolicyTagArgs) ToLoadBalancerPolicyTagOutputWithContext(ctx context.Context) LoadBalancerPolicyTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerPolicyTagOutput)
}

// LoadBalancerPolicyTagArrayInput is an input type that accepts LoadBalancerPolicyTagArray and LoadBalancerPolicyTagArrayOutput values.
// You can construct a concrete instance of `LoadBalancerPolicyTagArrayInput` via:
//
//	LoadBalancerPolicyTagArray{ LoadBalancerPolicyTagArgs{...} }
type LoadBalancerPolicyTagArrayInput interface {
	pulumi.Input

	ToLoadBalancerPolicyTagArrayOutput() LoadBalancerPolicyTagArrayOutput
	ToLoadBalancerPolicyTagArrayOutputWithContext(context.Context) LoadBalancerPolicyTagArrayOutput
}

type LoadBalancerPolicyTagArray []LoadBalancerPolicyTagInput

func (LoadBalancerPolicyTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancerPolicyTag)(nil)).Elem()
}

func (i LoadBalancerPolicyTagArray) ToLoadBalancerPolicyTagArrayOutput() LoadBalancerPolicyTagArrayOutput {
	return i.ToLoadBalancerPolicyTagArrayOutputWithContext(context.Background())
}

func (i LoadBalancerPolicyTagArray) ToLoadBalancerPolicyTagArrayOutputWithContext(ctx context.Context) LoadBalancerPolicyTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerPolicyTagArrayOutput)
}

type LoadBalancerPolicyTagOutput struct{ *pulumi.OutputState }

func (LoadBalancerPolicyTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerPolicyTag)(nil)).Elem()
}

func (o LoadBalancerPolicyTagOutput) ToLoadBalancerPolicyTagOutput() LoadBalancerPolicyTagOutput {
	return o
}

func (o LoadBalancerPolicyTagOutput) ToLoadBalancerPolicyTagOutputWithContext(ctx context.Context) LoadBalancerPolicyTagOutput {
	return o
}

// The key of the tag, with a minimum of 1 character.
func (o LoadBalancerPolicyTagOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerPolicyTag) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The value of the tag, between 0 and 255 characters.
func (o LoadBalancerPolicyTagOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerPolicyTag) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type LoadBalancerPolicyTagArrayOutput struct{ *pulumi.OutputState }

func (LoadBalancerPolicyTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancerPolicyTag)(nil)).Elem()
}

func (o LoadBalancerPolicyTagArrayOutput) ToLoadBalancerPolicyTagArrayOutput() LoadBalancerPolicyTagArrayOutput {
	return o
}

func (o LoadBalancerPolicyTagArrayOutput) ToLoadBalancerPolicyTagArrayOutputWithContext(ctx context.Context) LoadBalancerPolicyTagArrayOutput {
	return o
}

func (o LoadBalancerPolicyTagArrayOutput) Index(i pulumi.IntInput) LoadBalancerPolicyTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LoadBalancerPolicyTag {
		return vs[0].([]LoadBalancerPolicyTag)[vs[1].(int)]
	}).(LoadBalancerPolicyTagOutput)
}

type LoadBalancerSourceSecurityGroup struct {
	// The account ID of the owner of the security group.
	SecurityGroupAccountId *string `pulumi:"securityGroupAccountId"`
	// The name of the security group.
	SecurityGroupName *string `pulumi:"securityGroupName"`
}

// LoadBalancerSourceSecurityGroupInput is an input type that accepts LoadBalancerSourceSecurityGroupArgs and LoadBalancerSourceSecurityGroupOutput values.
// You can construct a concrete instance of `LoadBalancerSourceSecurityGroupInput` via:
//
//	LoadBalancerSourceSecurityGroupArgs{...}
type LoadBalancerSourceSecurityGroupInput interface {
	pulumi.Input

	ToLoadBalancerSourceSecurityGroupOutput() LoadBalancerSourceSecurityGroupOutput
	ToLoadBalancerSourceSecurityGroupOutputWithContext(context.Context) LoadBalancerSourceSecurityGroupOutput
}

type LoadBalancerSourceSecurityGroupArgs struct {
	// The account ID of the owner of the security group.
	SecurityGroupAccountId pulumi.StringPtrInput `pulumi:"securityGroupAccountId"`
	// The name of the security group.
	SecurityGroupName pulumi.StringPtrInput `pulumi:"securityGroupName"`
}

func (LoadBalancerSourceSecurityGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerSourceSecurityGroup)(nil)).Elem()
}

func (i LoadBalancerSourceSecurityGroupArgs) ToLoadBalancerSourceSecurityGroupOutput() LoadBalancerSourceSecurityGroupOutput {
	return i.ToLoadBalancerSourceSecurityGroupOutputWithContext(context.Background())
}

func (i LoadBalancerSourceSecurityGroupArgs) ToLoadBalancerSourceSecurityGroupOutputWithContext(ctx context.Context) LoadBalancerSourceSecurityGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerSourceSecurityGroupOutput)
}

// LoadBalancerSourceSecurityGroupArrayInput is an input type that accepts LoadBalancerSourceSecurityGroupArray and LoadBalancerSourceSecurityGroupArrayOutput values.
// You can construct a concrete instance of `LoadBalancerSourceSecurityGroupArrayInput` via:
//
//	LoadBalancerSourceSecurityGroupArray{ LoadBalancerSourceSecurityGroupArgs{...} }
type LoadBalancerSourceSecurityGroupArrayInput interface {
	pulumi.Input

	ToLoadBalancerSourceSecurityGroupArrayOutput() LoadBalancerSourceSecurityGroupArrayOutput
	ToLoadBalancerSourceSecurityGroupArrayOutputWithContext(context.Context) LoadBalancerSourceSecurityGroupArrayOutput
}

type LoadBalancerSourceSecurityGroupArray []LoadBalancerSourceSecurityGroupInput

func (LoadBalancerSourceSecurityGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancerSourceSecurityGroup)(nil)).Elem()
}

func (i LoadBalancerSourceSecurityGroupArray) ToLoadBalancerSourceSecurityGroupArrayOutput() LoadBalancerSourceSecurityGroupArrayOutput {
	return i.ToLoadBalancerSourceSecurityGroupArrayOutputWithContext(context.Background())
}

func (i LoadBalancerSourceSecurityGroupArray) ToLoadBalancerSourceSecurityGroupArrayOutputWithContext(ctx context.Context) LoadBalancerSourceSecurityGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerSourceSecurityGroupArrayOutput)
}

type LoadBalancerSourceSecurityGroupOutput struct{ *pulumi.OutputState }

func (LoadBalancerSourceSecurityGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerSourceSecurityGroup)(nil)).Elem()
}

func (o LoadBalancerSourceSecurityGroupOutput) ToLoadBalancerSourceSecurityGroupOutput() LoadBalancerSourceSecurityGroupOutput {
	return o
}

func (o LoadBalancerSourceSecurityGroupOutput) ToLoadBalancerSourceSecurityGroupOutputWithContext(ctx context.Context) LoadBalancerSourceSecurityGroupOutput {
	return o
}

// The account ID of the owner of the security group.
func (o LoadBalancerSourceSecurityGroupOutput) SecurityGroupAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerSourceSecurityGroup) *string { return v.SecurityGroupAccountId }).(pulumi.StringPtrOutput)
}

// The name of the security group.
func (o LoadBalancerSourceSecurityGroupOutput) SecurityGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerSourceSecurityGroup) *string { return v.SecurityGroupName }).(pulumi.StringPtrOutput)
}

type LoadBalancerSourceSecurityGroupArrayOutput struct{ *pulumi.OutputState }

func (LoadBalancerSourceSecurityGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancerSourceSecurityGroup)(nil)).Elem()
}

func (o LoadBalancerSourceSecurityGroupArrayOutput) ToLoadBalancerSourceSecurityGroupArrayOutput() LoadBalancerSourceSecurityGroupArrayOutput {
	return o
}

func (o LoadBalancerSourceSecurityGroupArrayOutput) ToLoadBalancerSourceSecurityGroupArrayOutputWithContext(ctx context.Context) LoadBalancerSourceSecurityGroupArrayOutput {
	return o
}

func (o LoadBalancerSourceSecurityGroupArrayOutput) Index(i pulumi.IntInput) LoadBalancerSourceSecurityGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LoadBalancerSourceSecurityGroup {
		return vs[0].([]LoadBalancerSourceSecurityGroup)[vs[1].(int)]
	}).(LoadBalancerSourceSecurityGroupOutput)
}

type LoadBalancerTag struct {
	// The key of the tag, with a minimum of 1 character.
	Key *string `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value *string `pulumi:"value"`
}

// LoadBalancerTagInput is an input type that accepts LoadBalancerTagArgs and LoadBalancerTagOutput values.
// You can construct a concrete instance of `LoadBalancerTagInput` via:
//
//	LoadBalancerTagArgs{...}
type LoadBalancerTagInput interface {
	pulumi.Input

	ToLoadBalancerTagOutput() LoadBalancerTagOutput
	ToLoadBalancerTagOutputWithContext(context.Context) LoadBalancerTagOutput
}

type LoadBalancerTagArgs struct {
	// The key of the tag, with a minimum of 1 character.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (LoadBalancerTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerTag)(nil)).Elem()
}

func (i LoadBalancerTagArgs) ToLoadBalancerTagOutput() LoadBalancerTagOutput {
	return i.ToLoadBalancerTagOutputWithContext(context.Background())
}

func (i LoadBalancerTagArgs) ToLoadBalancerTagOutputWithContext(ctx context.Context) LoadBalancerTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerTagOutput)
}

// LoadBalancerTagArrayInput is an input type that accepts LoadBalancerTagArray and LoadBalancerTagArrayOutput values.
// You can construct a concrete instance of `LoadBalancerTagArrayInput` via:
//
//	LoadBalancerTagArray{ LoadBalancerTagArgs{...} }
type LoadBalancerTagArrayInput interface {
	pulumi.Input

	ToLoadBalancerTagArrayOutput() LoadBalancerTagArrayOutput
	ToLoadBalancerTagArrayOutputWithContext(context.Context) LoadBalancerTagArrayOutput
}

type LoadBalancerTagArray []LoadBalancerTagInput

func (LoadBalancerTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancerTag)(nil)).Elem()
}

func (i LoadBalancerTagArray) ToLoadBalancerTagArrayOutput() LoadBalancerTagArrayOutput {
	return i.ToLoadBalancerTagArrayOutputWithContext(context.Background())
}

func (i LoadBalancerTagArray) ToLoadBalancerTagArrayOutputWithContext(ctx context.Context) LoadBalancerTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerTagArrayOutput)
}

type LoadBalancerTagOutput struct{ *pulumi.OutputState }

func (LoadBalancerTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerTag)(nil)).Elem()
}

func (o LoadBalancerTagOutput) ToLoadBalancerTagOutput() LoadBalancerTagOutput {
	return o
}

func (o LoadBalancerTagOutput) ToLoadBalancerTagOutputWithContext(ctx context.Context) LoadBalancerTagOutput {
	return o
}

// The key of the tag, with a minimum of 1 character.
func (o LoadBalancerTagOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerTag) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The value of the tag, between 0 and 255 characters.
func (o LoadBalancerTagOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerTag) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type LoadBalancerTagArrayOutput struct{ *pulumi.OutputState }

func (LoadBalancerTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancerTag)(nil)).Elem()
}

func (o LoadBalancerTagArrayOutput) ToLoadBalancerTagArrayOutput() LoadBalancerTagArrayOutput {
	return o
}

func (o LoadBalancerTagArrayOutput) ToLoadBalancerTagArrayOutputWithContext(ctx context.Context) LoadBalancerTagArrayOutput {
	return o
}

func (o LoadBalancerTagArrayOutput) Index(i pulumi.IntInput) LoadBalancerTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LoadBalancerTag {
		return vs[0].([]LoadBalancerTag)[vs[1].(int)]
	}).(LoadBalancerTagOutput)
}

type LoadBalancerVmsTimeouts struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Create *string `pulumi:"create"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
	Delete *string `pulumi:"delete"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
	Read *string `pulumi:"read"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Update *string `pulumi:"update"`
}

// LoadBalancerVmsTimeoutsInput is an input type that accepts LoadBalancerVmsTimeoutsArgs and LoadBalancerVmsTimeoutsOutput values.
// You can construct a concrete instance of `LoadBalancerVmsTimeoutsInput` via:
//
//	LoadBalancerVmsTimeoutsArgs{...}
type LoadBalancerVmsTimeoutsInput interface {
	pulumi.Input

	ToLoadBalancerVmsTimeoutsOutput() LoadBalancerVmsTimeoutsOutput
	ToLoadBalancerVmsTimeoutsOutputWithContext(context.Context) LoadBalancerVmsTimeoutsOutput
}

type LoadBalancerVmsTimeoutsArgs struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Create pulumi.StringPtrInput `pulumi:"create"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
	Delete pulumi.StringPtrInput `pulumi:"delete"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
	Read pulumi.StringPtrInput `pulumi:"read"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Update pulumi.StringPtrInput `pulumi:"update"`
}

func (LoadBalancerVmsTimeoutsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerVmsTimeouts)(nil)).Elem()
}

func (i LoadBalancerVmsTimeoutsArgs) ToLoadBalancerVmsTimeoutsOutput() LoadBalancerVmsTimeoutsOutput {
	return i.ToLoadBalancerVmsTimeoutsOutputWithContext(context.Background())
}

func (i LoadBalancerVmsTimeoutsArgs) ToLoadBalancerVmsTimeoutsOutputWithContext(ctx context.Context) LoadBalancerVmsTimeoutsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerVmsTimeoutsOutput)
}

func (i LoadBalancerVmsTimeoutsArgs) ToLoadBalancerVmsTimeoutsPtrOutput() LoadBalancerVmsTimeoutsPtrOutput {
	return i.ToLoadBalancerVmsTimeoutsPtrOutputWithContext(context.Background())
}

func (i LoadBalancerVmsTimeoutsArgs) ToLoadBalancerVmsTimeoutsPtrOutputWithContext(ctx context.Context) LoadBalancerVmsTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerVmsTimeoutsOutput).ToLoadBalancerVmsTimeoutsPtrOutputWithContext(ctx)
}

// LoadBalancerVmsTimeoutsPtrInput is an input type that accepts LoadBalancerVmsTimeoutsArgs, LoadBalancerVmsTimeoutsPtr and LoadBalancerVmsTimeoutsPtrOutput values.
// You can construct a concrete instance of `LoadBalancerVmsTimeoutsPtrInput` via:
//
//	        LoadBalancerVmsTimeoutsArgs{...}
//
//	or:
//
//	        nil
type LoadBalancerVmsTimeoutsPtrInput interface {
	pulumi.Input

	ToLoadBalancerVmsTimeoutsPtrOutput() LoadBalancerVmsTimeoutsPtrOutput
	ToLoadBalancerVmsTimeoutsPtrOutputWithContext(context.Context) LoadBalancerVmsTimeoutsPtrOutput
}

type loadBalancerVmsTimeoutsPtrType LoadBalancerVmsTimeoutsArgs

func LoadBalancerVmsTimeoutsPtr(v *LoadBalancerVmsTimeoutsArgs) LoadBalancerVmsTimeoutsPtrInput {
	return (*loadBalancerVmsTimeoutsPtrType)(v)
}

func (*loadBalancerVmsTimeoutsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LoadBalancerVmsTimeouts)(nil)).Elem()
}

func (i *loadBalancerVmsTimeoutsPtrType) ToLoadBalancerVmsTimeoutsPtrOutput() LoadBalancerVmsTimeoutsPtrOutput {
	return i.ToLoadBalancerVmsTimeoutsPtrOutputWithContext(context.Background())
}

func (i *loadBalancerVmsTimeoutsPtrType) ToLoadBalancerVmsTimeoutsPtrOutputWithContext(ctx context.Context) LoadBalancerVmsTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerVmsTimeoutsPtrOutput)
}

type LoadBalancerVmsTimeoutsOutput struct{ *pulumi.OutputState }

func (LoadBalancerVmsTimeoutsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerVmsTimeouts)(nil)).Elem()
}

func (o LoadBalancerVmsTimeoutsOutput) ToLoadBalancerVmsTimeoutsOutput() LoadBalancerVmsTimeoutsOutput {
	return o
}

func (o LoadBalancerVmsTimeoutsOutput) ToLoadBalancerVmsTimeoutsOutputWithContext(ctx context.Context) LoadBalancerVmsTimeoutsOutput {
	return o
}

func (o LoadBalancerVmsTimeoutsOutput) ToLoadBalancerVmsTimeoutsPtrOutput() LoadBalancerVmsTimeoutsPtrOutput {
	return o.ToLoadBalancerVmsTimeoutsPtrOutputWithContext(context.Background())
}

func (o LoadBalancerVmsTimeoutsOutput) ToLoadBalancerVmsTimeoutsPtrOutputWithContext(ctx context.Context) LoadBalancerVmsTimeoutsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LoadBalancerVmsTimeouts) *LoadBalancerVmsTimeouts {
		return &v
	}).(LoadBalancerVmsTimeoutsPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o LoadBalancerVmsTimeoutsOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerVmsTimeouts) *string { return v.Create }).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
func (o LoadBalancerVmsTimeoutsOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerVmsTimeouts) *string { return v.Delete }).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
func (o LoadBalancerVmsTimeoutsOutput) Read() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerVmsTimeouts) *string { return v.Read }).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o LoadBalancerVmsTimeoutsOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerVmsTimeouts) *string { return v.Update }).(pulumi.StringPtrOutput)
}

type LoadBalancerVmsTimeoutsPtrOutput struct{ *pulumi.OutputState }

func (LoadBalancerVmsTimeoutsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LoadBalancerVmsTimeouts)(nil)).Elem()
}

func (o LoadBalancerVmsTimeoutsPtrOutput) ToLoadBalancerVmsTimeoutsPtrOutput() LoadBalancerVmsTimeoutsPtrOutput {
	return o
}

func (o LoadBalancerVmsTimeoutsPtrOutput) ToLoadBalancerVmsTimeoutsPtrOutputWithContext(ctx context.Context) LoadBalancerVmsTimeoutsPtrOutput {
	return o
}

func (o LoadBalancerVmsTimeoutsPtrOutput) Elem() LoadBalancerVmsTimeoutsOutput {
	return o.ApplyT(func(v *LoadBalancerVmsTimeouts) LoadBalancerVmsTimeouts {
		if v != nil {
			return *v
		}
		var ret LoadBalancerVmsTimeouts
		return ret
	}).(LoadBalancerVmsTimeoutsOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o LoadBalancerVmsTimeoutsPtrOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LoadBalancerVmsTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Create
	}).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
func (o LoadBalancerVmsTimeoutsPtrOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LoadBalancerVmsTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Delete
	}).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
func (o LoadBalancerVmsTimeoutsPtrOutput) Read() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LoadBalancerVmsTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Read
	}).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o LoadBalancerVmsTimeoutsPtrOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LoadBalancerVmsTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Update
	}).(pulumi.StringPtrOutput)
}

type MainRouteTableLinkTimeouts struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Create *string `pulumi:"create"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
	Delete *string `pulumi:"delete"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
	Read *string `pulumi:"read"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Update *string `pulumi:"update"`
}

// MainRouteTableLinkTimeoutsInput is an input type that accepts MainRouteTableLinkTimeoutsArgs and MainRouteTableLinkTimeoutsOutput values.
// You can construct a concrete instance of `MainRouteTableLinkTimeoutsInput` via:
//
//	MainRouteTableLinkTimeoutsArgs{...}
type MainRouteTableLinkTimeoutsInput interface {
	pulumi.Input

	ToMainRouteTableLinkTimeoutsOutput() MainRouteTableLinkTimeoutsOutput
	ToMainRouteTableLinkTimeoutsOutputWithContext(context.Context) MainRouteTableLinkTimeoutsOutput
}

type MainRouteTableLinkTimeoutsArgs struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Create pulumi.StringPtrInput `pulumi:"create"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
	Delete pulumi.StringPtrInput `pulumi:"delete"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
	Read pulumi.StringPtrInput `pulumi:"read"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Update pulumi.StringPtrInput `pulumi:"update"`
}

func (MainRouteTableLinkTimeoutsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MainRouteTableLinkTimeouts)(nil)).Elem()
}

func (i MainRouteTableLinkTimeoutsArgs) ToMainRouteTableLinkTimeoutsOutput() MainRouteTableLinkTimeoutsOutput {
	return i.ToMainRouteTableLinkTimeoutsOutputWithContext(context.Background())
}

func (i MainRouteTableLinkTimeoutsArgs) ToMainRouteTableLinkTimeoutsOutputWithContext(ctx context.Context) MainRouteTableLinkTimeoutsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MainRouteTableLinkTimeoutsOutput)
}

func (i MainRouteTableLinkTimeoutsArgs) ToMainRouteTableLinkTimeoutsPtrOutput() MainRouteTableLinkTimeoutsPtrOutput {
	return i.ToMainRouteTableLinkTimeoutsPtrOutputWithContext(context.Background())
}

func (i MainRouteTableLinkTimeoutsArgs) ToMainRouteTableLinkTimeoutsPtrOutputWithContext(ctx context.Context) MainRouteTableLinkTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MainRouteTableLinkTimeoutsOutput).ToMainRouteTableLinkTimeoutsPtrOutputWithContext(ctx)
}

// MainRouteTableLinkTimeoutsPtrInput is an input type that accepts MainRouteTableLinkTimeoutsArgs, MainRouteTableLinkTimeoutsPtr and MainRouteTableLinkTimeoutsPtrOutput values.
// You can construct a concrete instance of `MainRouteTableLinkTimeoutsPtrInput` via:
//
//	        MainRouteTableLinkTimeoutsArgs{...}
//
//	or:
//
//	        nil
type MainRouteTableLinkTimeoutsPtrInput interface {
	pulumi.Input

	ToMainRouteTableLinkTimeoutsPtrOutput() MainRouteTableLinkTimeoutsPtrOutput
	ToMainRouteTableLinkTimeoutsPtrOutputWithContext(context.Context) MainRouteTableLinkTimeoutsPtrOutput
}

type mainRouteTableLinkTimeoutsPtrType MainRouteTableLinkTimeoutsArgs

func MainRouteTableLinkTimeoutsPtr(v *MainRouteTableLinkTimeoutsArgs) MainRouteTableLinkTimeoutsPtrInput {
	return (*mainRouteTableLinkTimeoutsPtrType)(v)
}

func (*mainRouteTableLinkTimeoutsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MainRouteTableLinkTimeouts)(nil)).Elem()
}

func (i *mainRouteTableLinkTimeoutsPtrType) ToMainRouteTableLinkTimeoutsPtrOutput() MainRouteTableLinkTimeoutsPtrOutput {
	return i.ToMainRouteTableLinkTimeoutsPtrOutputWithContext(context.Background())
}

func (i *mainRouteTableLinkTimeoutsPtrType) ToMainRouteTableLinkTimeoutsPtrOutputWithContext(ctx context.Context) MainRouteTableLinkTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MainRouteTableLinkTimeoutsPtrOutput)
}

type MainRouteTableLinkTimeoutsOutput struct{ *pulumi.OutputState }

func (MainRouteTableLinkTimeoutsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MainRouteTableLinkTimeouts)(nil)).Elem()
}

func (o MainRouteTableLinkTimeoutsOutput) ToMainRouteTableLinkTimeoutsOutput() MainRouteTableLinkTimeoutsOutput {
	return o
}

func (o MainRouteTableLinkTimeoutsOutput) ToMainRouteTableLinkTimeoutsOutputWithContext(ctx context.Context) MainRouteTableLinkTimeoutsOutput {
	return o
}

func (o MainRouteTableLinkTimeoutsOutput) ToMainRouteTableLinkTimeoutsPtrOutput() MainRouteTableLinkTimeoutsPtrOutput {
	return o.ToMainRouteTableLinkTimeoutsPtrOutputWithContext(context.Background())
}

func (o MainRouteTableLinkTimeoutsOutput) ToMainRouteTableLinkTimeoutsPtrOutputWithContext(ctx context.Context) MainRouteTableLinkTimeoutsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MainRouteTableLinkTimeouts) *MainRouteTableLinkTimeouts {
		return &v
	}).(MainRouteTableLinkTimeoutsPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o MainRouteTableLinkTimeoutsOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MainRouteTableLinkTimeouts) *string { return v.Create }).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
func (o MainRouteTableLinkTimeoutsOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MainRouteTableLinkTimeouts) *string { return v.Delete }).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
func (o MainRouteTableLinkTimeoutsOutput) Read() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MainRouteTableLinkTimeouts) *string { return v.Read }).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o MainRouteTableLinkTimeoutsOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MainRouteTableLinkTimeouts) *string { return v.Update }).(pulumi.StringPtrOutput)
}

type MainRouteTableLinkTimeoutsPtrOutput struct{ *pulumi.OutputState }

func (MainRouteTableLinkTimeoutsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MainRouteTableLinkTimeouts)(nil)).Elem()
}

func (o MainRouteTableLinkTimeoutsPtrOutput) ToMainRouteTableLinkTimeoutsPtrOutput() MainRouteTableLinkTimeoutsPtrOutput {
	return o
}

func (o MainRouteTableLinkTimeoutsPtrOutput) ToMainRouteTableLinkTimeoutsPtrOutputWithContext(ctx context.Context) MainRouteTableLinkTimeoutsPtrOutput {
	return o
}

func (o MainRouteTableLinkTimeoutsPtrOutput) Elem() MainRouteTableLinkTimeoutsOutput {
	return o.ApplyT(func(v *MainRouteTableLinkTimeouts) MainRouteTableLinkTimeouts {
		if v != nil {
			return *v
		}
		var ret MainRouteTableLinkTimeouts
		return ret
	}).(MainRouteTableLinkTimeoutsOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o MainRouteTableLinkTimeoutsPtrOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MainRouteTableLinkTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Create
	}).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
func (o MainRouteTableLinkTimeoutsPtrOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MainRouteTableLinkTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Delete
	}).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
func (o MainRouteTableLinkTimeoutsPtrOutput) Read() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MainRouteTableLinkTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Read
	}).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o MainRouteTableLinkTimeoutsPtrOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MainRouteTableLinkTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Update
	}).(pulumi.StringPtrOutput)
}

type NatServicePublicIp struct {
	// The public IP associated with the NAT service.
	PublicIp *string `pulumi:"publicIp"`
	// The allocation ID of the public IP to associate with the NAT service.<br />
	// If the public IP is already associated with another resource, you must first disassociate it.
	PublicIpId *string `pulumi:"publicIpId"`
}

// NatServicePublicIpInput is an input type that accepts NatServicePublicIpArgs and NatServicePublicIpOutput values.
// You can construct a concrete instance of `NatServicePublicIpInput` via:
//
//	NatServicePublicIpArgs{...}
type NatServicePublicIpInput interface {
	pulumi.Input

	ToNatServicePublicIpOutput() NatServicePublicIpOutput
	ToNatServicePublicIpOutputWithContext(context.Context) NatServicePublicIpOutput
}

type NatServicePublicIpArgs struct {
	// The public IP associated with the NAT service.
	PublicIp pulumi.StringPtrInput `pulumi:"publicIp"`
	// The allocation ID of the public IP to associate with the NAT service.<br />
	// If the public IP is already associated with another resource, you must first disassociate it.
	PublicIpId pulumi.StringPtrInput `pulumi:"publicIpId"`
}

func (NatServicePublicIpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NatServicePublicIp)(nil)).Elem()
}

func (i NatServicePublicIpArgs) ToNatServicePublicIpOutput() NatServicePublicIpOutput {
	return i.ToNatServicePublicIpOutputWithContext(context.Background())
}

func (i NatServicePublicIpArgs) ToNatServicePublicIpOutputWithContext(ctx context.Context) NatServicePublicIpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NatServicePublicIpOutput)
}

// NatServicePublicIpArrayInput is an input type that accepts NatServicePublicIpArray and NatServicePublicIpArrayOutput values.
// You can construct a concrete instance of `NatServicePublicIpArrayInput` via:
//
//	NatServicePublicIpArray{ NatServicePublicIpArgs{...} }
type NatServicePublicIpArrayInput interface {
	pulumi.Input

	ToNatServicePublicIpArrayOutput() NatServicePublicIpArrayOutput
	ToNatServicePublicIpArrayOutputWithContext(context.Context) NatServicePublicIpArrayOutput
}

type NatServicePublicIpArray []NatServicePublicIpInput

func (NatServicePublicIpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NatServicePublicIp)(nil)).Elem()
}

func (i NatServicePublicIpArray) ToNatServicePublicIpArrayOutput() NatServicePublicIpArrayOutput {
	return i.ToNatServicePublicIpArrayOutputWithContext(context.Background())
}

func (i NatServicePublicIpArray) ToNatServicePublicIpArrayOutputWithContext(ctx context.Context) NatServicePublicIpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NatServicePublicIpArrayOutput)
}

type NatServicePublicIpOutput struct{ *pulumi.OutputState }

func (NatServicePublicIpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NatServicePublicIp)(nil)).Elem()
}

func (o NatServicePublicIpOutput) ToNatServicePublicIpOutput() NatServicePublicIpOutput {
	return o
}

func (o NatServicePublicIpOutput) ToNatServicePublicIpOutputWithContext(ctx context.Context) NatServicePublicIpOutput {
	return o
}

// The public IP associated with the NAT service.
func (o NatServicePublicIpOutput) PublicIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NatServicePublicIp) *string { return v.PublicIp }).(pulumi.StringPtrOutput)
}

// The allocation ID of the public IP to associate with the NAT service.<br />
// If the public IP is already associated with another resource, you must first disassociate it.
func (o NatServicePublicIpOutput) PublicIpId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NatServicePublicIp) *string { return v.PublicIpId }).(pulumi.StringPtrOutput)
}

type NatServicePublicIpArrayOutput struct{ *pulumi.OutputState }

func (NatServicePublicIpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NatServicePublicIp)(nil)).Elem()
}

func (o NatServicePublicIpArrayOutput) ToNatServicePublicIpArrayOutput() NatServicePublicIpArrayOutput {
	return o
}

func (o NatServicePublicIpArrayOutput) ToNatServicePublicIpArrayOutputWithContext(ctx context.Context) NatServicePublicIpArrayOutput {
	return o
}

func (o NatServicePublicIpArrayOutput) Index(i pulumi.IntInput) NatServicePublicIpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NatServicePublicIp {
		return vs[0].([]NatServicePublicIp)[vs[1].(int)]
	}).(NatServicePublicIpOutput)
}

type NatServiceTag struct {
	// The key of the tag, with a minimum of 1 character.
	Key *string `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value *string `pulumi:"value"`
}

// NatServiceTagInput is an input type that accepts NatServiceTagArgs and NatServiceTagOutput values.
// You can construct a concrete instance of `NatServiceTagInput` via:
//
//	NatServiceTagArgs{...}
type NatServiceTagInput interface {
	pulumi.Input

	ToNatServiceTagOutput() NatServiceTagOutput
	ToNatServiceTagOutputWithContext(context.Context) NatServiceTagOutput
}

type NatServiceTagArgs struct {
	// The key of the tag, with a minimum of 1 character.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (NatServiceTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NatServiceTag)(nil)).Elem()
}

func (i NatServiceTagArgs) ToNatServiceTagOutput() NatServiceTagOutput {
	return i.ToNatServiceTagOutputWithContext(context.Background())
}

func (i NatServiceTagArgs) ToNatServiceTagOutputWithContext(ctx context.Context) NatServiceTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NatServiceTagOutput)
}

// NatServiceTagArrayInput is an input type that accepts NatServiceTagArray and NatServiceTagArrayOutput values.
// You can construct a concrete instance of `NatServiceTagArrayInput` via:
//
//	NatServiceTagArray{ NatServiceTagArgs{...} }
type NatServiceTagArrayInput interface {
	pulumi.Input

	ToNatServiceTagArrayOutput() NatServiceTagArrayOutput
	ToNatServiceTagArrayOutputWithContext(context.Context) NatServiceTagArrayOutput
}

type NatServiceTagArray []NatServiceTagInput

func (NatServiceTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NatServiceTag)(nil)).Elem()
}

func (i NatServiceTagArray) ToNatServiceTagArrayOutput() NatServiceTagArrayOutput {
	return i.ToNatServiceTagArrayOutputWithContext(context.Background())
}

func (i NatServiceTagArray) ToNatServiceTagArrayOutputWithContext(ctx context.Context) NatServiceTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NatServiceTagArrayOutput)
}

type NatServiceTagOutput struct{ *pulumi.OutputState }

func (NatServiceTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NatServiceTag)(nil)).Elem()
}

func (o NatServiceTagOutput) ToNatServiceTagOutput() NatServiceTagOutput {
	return o
}

func (o NatServiceTagOutput) ToNatServiceTagOutputWithContext(ctx context.Context) NatServiceTagOutput {
	return o
}

// The key of the tag, with a minimum of 1 character.
func (o NatServiceTagOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NatServiceTag) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The value of the tag, between 0 and 255 characters.
func (o NatServiceTagOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NatServiceTag) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NatServiceTagArrayOutput struct{ *pulumi.OutputState }

func (NatServiceTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NatServiceTag)(nil)).Elem()
}

func (o NatServiceTagArrayOutput) ToNatServiceTagArrayOutput() NatServiceTagArrayOutput {
	return o
}

func (o NatServiceTagArrayOutput) ToNatServiceTagArrayOutputWithContext(ctx context.Context) NatServiceTagArrayOutput {
	return o
}

func (o NatServiceTagArrayOutput) Index(i pulumi.IntInput) NatServiceTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NatServiceTag {
		return vs[0].([]NatServiceTag)[vs[1].(int)]
	}).(NatServiceTagOutput)
}

type NetAccessPointTag struct {
	// The key of the tag, with a minimum of 1 character.
	Key string `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value *string `pulumi:"value"`
}

// NetAccessPointTagInput is an input type that accepts NetAccessPointTagArgs and NetAccessPointTagOutput values.
// You can construct a concrete instance of `NetAccessPointTagInput` via:
//
//	NetAccessPointTagArgs{...}
type NetAccessPointTagInput interface {
	pulumi.Input

	ToNetAccessPointTagOutput() NetAccessPointTagOutput
	ToNetAccessPointTagOutputWithContext(context.Context) NetAccessPointTagOutput
}

type NetAccessPointTagArgs struct {
	// The key of the tag, with a minimum of 1 character.
	Key pulumi.StringInput `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (NetAccessPointTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetAccessPointTag)(nil)).Elem()
}

func (i NetAccessPointTagArgs) ToNetAccessPointTagOutput() NetAccessPointTagOutput {
	return i.ToNetAccessPointTagOutputWithContext(context.Background())
}

func (i NetAccessPointTagArgs) ToNetAccessPointTagOutputWithContext(ctx context.Context) NetAccessPointTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetAccessPointTagOutput)
}

// NetAccessPointTagArrayInput is an input type that accepts NetAccessPointTagArray and NetAccessPointTagArrayOutput values.
// You can construct a concrete instance of `NetAccessPointTagArrayInput` via:
//
//	NetAccessPointTagArray{ NetAccessPointTagArgs{...} }
type NetAccessPointTagArrayInput interface {
	pulumi.Input

	ToNetAccessPointTagArrayOutput() NetAccessPointTagArrayOutput
	ToNetAccessPointTagArrayOutputWithContext(context.Context) NetAccessPointTagArrayOutput
}

type NetAccessPointTagArray []NetAccessPointTagInput

func (NetAccessPointTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetAccessPointTag)(nil)).Elem()
}

func (i NetAccessPointTagArray) ToNetAccessPointTagArrayOutput() NetAccessPointTagArrayOutput {
	return i.ToNetAccessPointTagArrayOutputWithContext(context.Background())
}

func (i NetAccessPointTagArray) ToNetAccessPointTagArrayOutputWithContext(ctx context.Context) NetAccessPointTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetAccessPointTagArrayOutput)
}

type NetAccessPointTagOutput struct{ *pulumi.OutputState }

func (NetAccessPointTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetAccessPointTag)(nil)).Elem()
}

func (o NetAccessPointTagOutput) ToNetAccessPointTagOutput() NetAccessPointTagOutput {
	return o
}

func (o NetAccessPointTagOutput) ToNetAccessPointTagOutputWithContext(ctx context.Context) NetAccessPointTagOutput {
	return o
}

// The key of the tag, with a minimum of 1 character.
func (o NetAccessPointTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v NetAccessPointTag) string { return v.Key }).(pulumi.StringOutput)
}

// The value of the tag, between 0 and 255 characters.
func (o NetAccessPointTagOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetAccessPointTag) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NetAccessPointTagArrayOutput struct{ *pulumi.OutputState }

func (NetAccessPointTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetAccessPointTag)(nil)).Elem()
}

func (o NetAccessPointTagArrayOutput) ToNetAccessPointTagArrayOutput() NetAccessPointTagArrayOutput {
	return o
}

func (o NetAccessPointTagArrayOutput) ToNetAccessPointTagArrayOutputWithContext(ctx context.Context) NetAccessPointTagArrayOutput {
	return o
}

func (o NetAccessPointTagArrayOutput) Index(i pulumi.IntInput) NetAccessPointTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetAccessPointTag {
		return vs[0].([]NetAccessPointTag)[vs[1].(int)]
	}).(NetAccessPointTagOutput)
}

type NetAccessPointTimeouts struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Create *string `pulumi:"create"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
	Delete *string `pulumi:"delete"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
	Read *string `pulumi:"read"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Update *string `pulumi:"update"`
}

// NetAccessPointTimeoutsInput is an input type that accepts NetAccessPointTimeoutsArgs and NetAccessPointTimeoutsOutput values.
// You can construct a concrete instance of `NetAccessPointTimeoutsInput` via:
//
//	NetAccessPointTimeoutsArgs{...}
type NetAccessPointTimeoutsInput interface {
	pulumi.Input

	ToNetAccessPointTimeoutsOutput() NetAccessPointTimeoutsOutput
	ToNetAccessPointTimeoutsOutputWithContext(context.Context) NetAccessPointTimeoutsOutput
}

type NetAccessPointTimeoutsArgs struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Create pulumi.StringPtrInput `pulumi:"create"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
	Delete pulumi.StringPtrInput `pulumi:"delete"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
	Read pulumi.StringPtrInput `pulumi:"read"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Update pulumi.StringPtrInput `pulumi:"update"`
}

func (NetAccessPointTimeoutsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetAccessPointTimeouts)(nil)).Elem()
}

func (i NetAccessPointTimeoutsArgs) ToNetAccessPointTimeoutsOutput() NetAccessPointTimeoutsOutput {
	return i.ToNetAccessPointTimeoutsOutputWithContext(context.Background())
}

func (i NetAccessPointTimeoutsArgs) ToNetAccessPointTimeoutsOutputWithContext(ctx context.Context) NetAccessPointTimeoutsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetAccessPointTimeoutsOutput)
}

func (i NetAccessPointTimeoutsArgs) ToNetAccessPointTimeoutsPtrOutput() NetAccessPointTimeoutsPtrOutput {
	return i.ToNetAccessPointTimeoutsPtrOutputWithContext(context.Background())
}

func (i NetAccessPointTimeoutsArgs) ToNetAccessPointTimeoutsPtrOutputWithContext(ctx context.Context) NetAccessPointTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetAccessPointTimeoutsOutput).ToNetAccessPointTimeoutsPtrOutputWithContext(ctx)
}

// NetAccessPointTimeoutsPtrInput is an input type that accepts NetAccessPointTimeoutsArgs, NetAccessPointTimeoutsPtr and NetAccessPointTimeoutsPtrOutput values.
// You can construct a concrete instance of `NetAccessPointTimeoutsPtrInput` via:
//
//	        NetAccessPointTimeoutsArgs{...}
//
//	or:
//
//	        nil
type NetAccessPointTimeoutsPtrInput interface {
	pulumi.Input

	ToNetAccessPointTimeoutsPtrOutput() NetAccessPointTimeoutsPtrOutput
	ToNetAccessPointTimeoutsPtrOutputWithContext(context.Context) NetAccessPointTimeoutsPtrOutput
}

type netAccessPointTimeoutsPtrType NetAccessPointTimeoutsArgs

func NetAccessPointTimeoutsPtr(v *NetAccessPointTimeoutsArgs) NetAccessPointTimeoutsPtrInput {
	return (*netAccessPointTimeoutsPtrType)(v)
}

func (*netAccessPointTimeoutsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetAccessPointTimeouts)(nil)).Elem()
}

func (i *netAccessPointTimeoutsPtrType) ToNetAccessPointTimeoutsPtrOutput() NetAccessPointTimeoutsPtrOutput {
	return i.ToNetAccessPointTimeoutsPtrOutputWithContext(context.Background())
}

func (i *netAccessPointTimeoutsPtrType) ToNetAccessPointTimeoutsPtrOutputWithContext(ctx context.Context) NetAccessPointTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetAccessPointTimeoutsPtrOutput)
}

type NetAccessPointTimeoutsOutput struct{ *pulumi.OutputState }

func (NetAccessPointTimeoutsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetAccessPointTimeouts)(nil)).Elem()
}

func (o NetAccessPointTimeoutsOutput) ToNetAccessPointTimeoutsOutput() NetAccessPointTimeoutsOutput {
	return o
}

func (o NetAccessPointTimeoutsOutput) ToNetAccessPointTimeoutsOutputWithContext(ctx context.Context) NetAccessPointTimeoutsOutput {
	return o
}

func (o NetAccessPointTimeoutsOutput) ToNetAccessPointTimeoutsPtrOutput() NetAccessPointTimeoutsPtrOutput {
	return o.ToNetAccessPointTimeoutsPtrOutputWithContext(context.Background())
}

func (o NetAccessPointTimeoutsOutput) ToNetAccessPointTimeoutsPtrOutputWithContext(ctx context.Context) NetAccessPointTimeoutsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NetAccessPointTimeouts) *NetAccessPointTimeouts {
		return &v
	}).(NetAccessPointTimeoutsPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o NetAccessPointTimeoutsOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetAccessPointTimeouts) *string { return v.Create }).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
func (o NetAccessPointTimeoutsOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetAccessPointTimeouts) *string { return v.Delete }).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
func (o NetAccessPointTimeoutsOutput) Read() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetAccessPointTimeouts) *string { return v.Read }).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o NetAccessPointTimeoutsOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetAccessPointTimeouts) *string { return v.Update }).(pulumi.StringPtrOutput)
}

type NetAccessPointTimeoutsPtrOutput struct{ *pulumi.OutputState }

func (NetAccessPointTimeoutsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetAccessPointTimeouts)(nil)).Elem()
}

func (o NetAccessPointTimeoutsPtrOutput) ToNetAccessPointTimeoutsPtrOutput() NetAccessPointTimeoutsPtrOutput {
	return o
}

func (o NetAccessPointTimeoutsPtrOutput) ToNetAccessPointTimeoutsPtrOutputWithContext(ctx context.Context) NetAccessPointTimeoutsPtrOutput {
	return o
}

func (o NetAccessPointTimeoutsPtrOutput) Elem() NetAccessPointTimeoutsOutput {
	return o.ApplyT(func(v *NetAccessPointTimeouts) NetAccessPointTimeouts {
		if v != nil {
			return *v
		}
		var ret NetAccessPointTimeouts
		return ret
	}).(NetAccessPointTimeoutsOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o NetAccessPointTimeoutsPtrOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetAccessPointTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Create
	}).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
func (o NetAccessPointTimeoutsPtrOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetAccessPointTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Delete
	}).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
func (o NetAccessPointTimeoutsPtrOutput) Read() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetAccessPointTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Read
	}).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o NetAccessPointTimeoutsPtrOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetAccessPointTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Update
	}).(pulumi.StringPtrOutput)
}

type NetAttributesTag struct {
	// The key of the tag, with a minimum of 1 character.
	Key string `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value string `pulumi:"value"`
}

// NetAttributesTagInput is an input type that accepts NetAttributesTagArgs and NetAttributesTagOutput values.
// You can construct a concrete instance of `NetAttributesTagInput` via:
//
//	NetAttributesTagArgs{...}
type NetAttributesTagInput interface {
	pulumi.Input

	ToNetAttributesTagOutput() NetAttributesTagOutput
	ToNetAttributesTagOutputWithContext(context.Context) NetAttributesTagOutput
}

type NetAttributesTagArgs struct {
	// The key of the tag, with a minimum of 1 character.
	Key pulumi.StringInput `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value pulumi.StringInput `pulumi:"value"`
}

func (NetAttributesTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetAttributesTag)(nil)).Elem()
}

func (i NetAttributesTagArgs) ToNetAttributesTagOutput() NetAttributesTagOutput {
	return i.ToNetAttributesTagOutputWithContext(context.Background())
}

func (i NetAttributesTagArgs) ToNetAttributesTagOutputWithContext(ctx context.Context) NetAttributesTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetAttributesTagOutput)
}

// NetAttributesTagArrayInput is an input type that accepts NetAttributesTagArray and NetAttributesTagArrayOutput values.
// You can construct a concrete instance of `NetAttributesTagArrayInput` via:
//
//	NetAttributesTagArray{ NetAttributesTagArgs{...} }
type NetAttributesTagArrayInput interface {
	pulumi.Input

	ToNetAttributesTagArrayOutput() NetAttributesTagArrayOutput
	ToNetAttributesTagArrayOutputWithContext(context.Context) NetAttributesTagArrayOutput
}

type NetAttributesTagArray []NetAttributesTagInput

func (NetAttributesTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetAttributesTag)(nil)).Elem()
}

func (i NetAttributesTagArray) ToNetAttributesTagArrayOutput() NetAttributesTagArrayOutput {
	return i.ToNetAttributesTagArrayOutputWithContext(context.Background())
}

func (i NetAttributesTagArray) ToNetAttributesTagArrayOutputWithContext(ctx context.Context) NetAttributesTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetAttributesTagArrayOutput)
}

type NetAttributesTagOutput struct{ *pulumi.OutputState }

func (NetAttributesTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetAttributesTag)(nil)).Elem()
}

func (o NetAttributesTagOutput) ToNetAttributesTagOutput() NetAttributesTagOutput {
	return o
}

func (o NetAttributesTagOutput) ToNetAttributesTagOutputWithContext(ctx context.Context) NetAttributesTagOutput {
	return o
}

// The key of the tag, with a minimum of 1 character.
func (o NetAttributesTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v NetAttributesTag) string { return v.Key }).(pulumi.StringOutput)
}

// The value of the tag, between 0 and 255 characters.
func (o NetAttributesTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v NetAttributesTag) string { return v.Value }).(pulumi.StringOutput)
}

type NetAttributesTagArrayOutput struct{ *pulumi.OutputState }

func (NetAttributesTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetAttributesTag)(nil)).Elem()
}

func (o NetAttributesTagArrayOutput) ToNetAttributesTagArrayOutput() NetAttributesTagArrayOutput {
	return o
}

func (o NetAttributesTagArrayOutput) ToNetAttributesTagArrayOutputWithContext(ctx context.Context) NetAttributesTagArrayOutput {
	return o
}

func (o NetAttributesTagArrayOutput) Index(i pulumi.IntInput) NetAttributesTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetAttributesTag {
		return vs[0].([]NetAttributesTag)[vs[1].(int)]
	}).(NetAttributesTagOutput)
}

type NetAttributesTimeouts struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Create *string `pulumi:"create"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
	Delete *string `pulumi:"delete"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
	Read *string `pulumi:"read"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Update *string `pulumi:"update"`
}

// NetAttributesTimeoutsInput is an input type that accepts NetAttributesTimeoutsArgs and NetAttributesTimeoutsOutput values.
// You can construct a concrete instance of `NetAttributesTimeoutsInput` via:
//
//	NetAttributesTimeoutsArgs{...}
type NetAttributesTimeoutsInput interface {
	pulumi.Input

	ToNetAttributesTimeoutsOutput() NetAttributesTimeoutsOutput
	ToNetAttributesTimeoutsOutputWithContext(context.Context) NetAttributesTimeoutsOutput
}

type NetAttributesTimeoutsArgs struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Create pulumi.StringPtrInput `pulumi:"create"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
	Delete pulumi.StringPtrInput `pulumi:"delete"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
	Read pulumi.StringPtrInput `pulumi:"read"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Update pulumi.StringPtrInput `pulumi:"update"`
}

func (NetAttributesTimeoutsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetAttributesTimeouts)(nil)).Elem()
}

func (i NetAttributesTimeoutsArgs) ToNetAttributesTimeoutsOutput() NetAttributesTimeoutsOutput {
	return i.ToNetAttributesTimeoutsOutputWithContext(context.Background())
}

func (i NetAttributesTimeoutsArgs) ToNetAttributesTimeoutsOutputWithContext(ctx context.Context) NetAttributesTimeoutsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetAttributesTimeoutsOutput)
}

func (i NetAttributesTimeoutsArgs) ToNetAttributesTimeoutsPtrOutput() NetAttributesTimeoutsPtrOutput {
	return i.ToNetAttributesTimeoutsPtrOutputWithContext(context.Background())
}

func (i NetAttributesTimeoutsArgs) ToNetAttributesTimeoutsPtrOutputWithContext(ctx context.Context) NetAttributesTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetAttributesTimeoutsOutput).ToNetAttributesTimeoutsPtrOutputWithContext(ctx)
}

// NetAttributesTimeoutsPtrInput is an input type that accepts NetAttributesTimeoutsArgs, NetAttributesTimeoutsPtr and NetAttributesTimeoutsPtrOutput values.
// You can construct a concrete instance of `NetAttributesTimeoutsPtrInput` via:
//
//	        NetAttributesTimeoutsArgs{...}
//
//	or:
//
//	        nil
type NetAttributesTimeoutsPtrInput interface {
	pulumi.Input

	ToNetAttributesTimeoutsPtrOutput() NetAttributesTimeoutsPtrOutput
	ToNetAttributesTimeoutsPtrOutputWithContext(context.Context) NetAttributesTimeoutsPtrOutput
}

type netAttributesTimeoutsPtrType NetAttributesTimeoutsArgs

func NetAttributesTimeoutsPtr(v *NetAttributesTimeoutsArgs) NetAttributesTimeoutsPtrInput {
	return (*netAttributesTimeoutsPtrType)(v)
}

func (*netAttributesTimeoutsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetAttributesTimeouts)(nil)).Elem()
}

func (i *netAttributesTimeoutsPtrType) ToNetAttributesTimeoutsPtrOutput() NetAttributesTimeoutsPtrOutput {
	return i.ToNetAttributesTimeoutsPtrOutputWithContext(context.Background())
}

func (i *netAttributesTimeoutsPtrType) ToNetAttributesTimeoutsPtrOutputWithContext(ctx context.Context) NetAttributesTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetAttributesTimeoutsPtrOutput)
}

type NetAttributesTimeoutsOutput struct{ *pulumi.OutputState }

func (NetAttributesTimeoutsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetAttributesTimeouts)(nil)).Elem()
}

func (o NetAttributesTimeoutsOutput) ToNetAttributesTimeoutsOutput() NetAttributesTimeoutsOutput {
	return o
}

func (o NetAttributesTimeoutsOutput) ToNetAttributesTimeoutsOutputWithContext(ctx context.Context) NetAttributesTimeoutsOutput {
	return o
}

func (o NetAttributesTimeoutsOutput) ToNetAttributesTimeoutsPtrOutput() NetAttributesTimeoutsPtrOutput {
	return o.ToNetAttributesTimeoutsPtrOutputWithContext(context.Background())
}

func (o NetAttributesTimeoutsOutput) ToNetAttributesTimeoutsPtrOutputWithContext(ctx context.Context) NetAttributesTimeoutsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NetAttributesTimeouts) *NetAttributesTimeouts {
		return &v
	}).(NetAttributesTimeoutsPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o NetAttributesTimeoutsOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetAttributesTimeouts) *string { return v.Create }).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
func (o NetAttributesTimeoutsOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetAttributesTimeouts) *string { return v.Delete }).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
func (o NetAttributesTimeoutsOutput) Read() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetAttributesTimeouts) *string { return v.Read }).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o NetAttributesTimeoutsOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetAttributesTimeouts) *string { return v.Update }).(pulumi.StringPtrOutput)
}

type NetAttributesTimeoutsPtrOutput struct{ *pulumi.OutputState }

func (NetAttributesTimeoutsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetAttributesTimeouts)(nil)).Elem()
}

func (o NetAttributesTimeoutsPtrOutput) ToNetAttributesTimeoutsPtrOutput() NetAttributesTimeoutsPtrOutput {
	return o
}

func (o NetAttributesTimeoutsPtrOutput) ToNetAttributesTimeoutsPtrOutputWithContext(ctx context.Context) NetAttributesTimeoutsPtrOutput {
	return o
}

func (o NetAttributesTimeoutsPtrOutput) Elem() NetAttributesTimeoutsOutput {
	return o.ApplyT(func(v *NetAttributesTimeouts) NetAttributesTimeouts {
		if v != nil {
			return *v
		}
		var ret NetAttributesTimeouts
		return ret
	}).(NetAttributesTimeoutsOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o NetAttributesTimeoutsPtrOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetAttributesTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Create
	}).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
func (o NetAttributesTimeoutsPtrOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetAttributesTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Delete
	}).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
func (o NetAttributesTimeoutsPtrOutput) Read() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetAttributesTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Read
	}).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o NetAttributesTimeoutsPtrOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetAttributesTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Update
	}).(pulumi.StringPtrOutput)
}

type NetPeeringAcceptationAccepterNet struct {
	// The account ID of the owner of the source Net.
	AccountId string `pulumi:"accountId"`
	// The IP range for the source Net, in CIDR notation (for example, `10.0.0.0/16`).
	IpRange string `pulumi:"ipRange"`
	// The ID of the source Net.
	NetId string `pulumi:"netId"`
}

// NetPeeringAcceptationAccepterNetInput is an input type that accepts NetPeeringAcceptationAccepterNetArgs and NetPeeringAcceptationAccepterNetOutput values.
// You can construct a concrete instance of `NetPeeringAcceptationAccepterNetInput` via:
//
//	NetPeeringAcceptationAccepterNetArgs{...}
type NetPeeringAcceptationAccepterNetInput interface {
	pulumi.Input

	ToNetPeeringAcceptationAccepterNetOutput() NetPeeringAcceptationAccepterNetOutput
	ToNetPeeringAcceptationAccepterNetOutputWithContext(context.Context) NetPeeringAcceptationAccepterNetOutput
}

type NetPeeringAcceptationAccepterNetArgs struct {
	// The account ID of the owner of the source Net.
	AccountId pulumi.StringInput `pulumi:"accountId"`
	// The IP range for the source Net, in CIDR notation (for example, `10.0.0.0/16`).
	IpRange pulumi.StringInput `pulumi:"ipRange"`
	// The ID of the source Net.
	NetId pulumi.StringInput `pulumi:"netId"`
}

func (NetPeeringAcceptationAccepterNetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetPeeringAcceptationAccepterNet)(nil)).Elem()
}

func (i NetPeeringAcceptationAccepterNetArgs) ToNetPeeringAcceptationAccepterNetOutput() NetPeeringAcceptationAccepterNetOutput {
	return i.ToNetPeeringAcceptationAccepterNetOutputWithContext(context.Background())
}

func (i NetPeeringAcceptationAccepterNetArgs) ToNetPeeringAcceptationAccepterNetOutputWithContext(ctx context.Context) NetPeeringAcceptationAccepterNetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetPeeringAcceptationAccepterNetOutput)
}

// NetPeeringAcceptationAccepterNetArrayInput is an input type that accepts NetPeeringAcceptationAccepterNetArray and NetPeeringAcceptationAccepterNetArrayOutput values.
// You can construct a concrete instance of `NetPeeringAcceptationAccepterNetArrayInput` via:
//
//	NetPeeringAcceptationAccepterNetArray{ NetPeeringAcceptationAccepterNetArgs{...} }
type NetPeeringAcceptationAccepterNetArrayInput interface {
	pulumi.Input

	ToNetPeeringAcceptationAccepterNetArrayOutput() NetPeeringAcceptationAccepterNetArrayOutput
	ToNetPeeringAcceptationAccepterNetArrayOutputWithContext(context.Context) NetPeeringAcceptationAccepterNetArrayOutput
}

type NetPeeringAcceptationAccepterNetArray []NetPeeringAcceptationAccepterNetInput

func (NetPeeringAcceptationAccepterNetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetPeeringAcceptationAccepterNet)(nil)).Elem()
}

func (i NetPeeringAcceptationAccepterNetArray) ToNetPeeringAcceptationAccepterNetArrayOutput() NetPeeringAcceptationAccepterNetArrayOutput {
	return i.ToNetPeeringAcceptationAccepterNetArrayOutputWithContext(context.Background())
}

func (i NetPeeringAcceptationAccepterNetArray) ToNetPeeringAcceptationAccepterNetArrayOutputWithContext(ctx context.Context) NetPeeringAcceptationAccepterNetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetPeeringAcceptationAccepterNetArrayOutput)
}

type NetPeeringAcceptationAccepterNetOutput struct{ *pulumi.OutputState }

func (NetPeeringAcceptationAccepterNetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetPeeringAcceptationAccepterNet)(nil)).Elem()
}

func (o NetPeeringAcceptationAccepterNetOutput) ToNetPeeringAcceptationAccepterNetOutput() NetPeeringAcceptationAccepterNetOutput {
	return o
}

func (o NetPeeringAcceptationAccepterNetOutput) ToNetPeeringAcceptationAccepterNetOutputWithContext(ctx context.Context) NetPeeringAcceptationAccepterNetOutput {
	return o
}

// The account ID of the owner of the source Net.
func (o NetPeeringAcceptationAccepterNetOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v NetPeeringAcceptationAccepterNet) string { return v.AccountId }).(pulumi.StringOutput)
}

// The IP range for the source Net, in CIDR notation (for example, `10.0.0.0/16`).
func (o NetPeeringAcceptationAccepterNetOutput) IpRange() pulumi.StringOutput {
	return o.ApplyT(func(v NetPeeringAcceptationAccepterNet) string { return v.IpRange }).(pulumi.StringOutput)
}

// The ID of the source Net.
func (o NetPeeringAcceptationAccepterNetOutput) NetId() pulumi.StringOutput {
	return o.ApplyT(func(v NetPeeringAcceptationAccepterNet) string { return v.NetId }).(pulumi.StringOutput)
}

type NetPeeringAcceptationAccepterNetArrayOutput struct{ *pulumi.OutputState }

func (NetPeeringAcceptationAccepterNetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetPeeringAcceptationAccepterNet)(nil)).Elem()
}

func (o NetPeeringAcceptationAccepterNetArrayOutput) ToNetPeeringAcceptationAccepterNetArrayOutput() NetPeeringAcceptationAccepterNetArrayOutput {
	return o
}

func (o NetPeeringAcceptationAccepterNetArrayOutput) ToNetPeeringAcceptationAccepterNetArrayOutputWithContext(ctx context.Context) NetPeeringAcceptationAccepterNetArrayOutput {
	return o
}

func (o NetPeeringAcceptationAccepterNetArrayOutput) Index(i pulumi.IntInput) NetPeeringAcceptationAccepterNetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetPeeringAcceptationAccepterNet {
		return vs[0].([]NetPeeringAcceptationAccepterNet)[vs[1].(int)]
	}).(NetPeeringAcceptationAccepterNetOutput)
}

type NetPeeringAcceptationSourceNet struct {
	// The account ID of the owner of the source Net.
	AccountId string `pulumi:"accountId"`
	// The IP range for the source Net, in CIDR notation (for example, `10.0.0.0/16`).
	IpRange string `pulumi:"ipRange"`
	// The ID of the source Net.
	NetId string `pulumi:"netId"`
}

// NetPeeringAcceptationSourceNetInput is an input type that accepts NetPeeringAcceptationSourceNetArgs and NetPeeringAcceptationSourceNetOutput values.
// You can construct a concrete instance of `NetPeeringAcceptationSourceNetInput` via:
//
//	NetPeeringAcceptationSourceNetArgs{...}
type NetPeeringAcceptationSourceNetInput interface {
	pulumi.Input

	ToNetPeeringAcceptationSourceNetOutput() NetPeeringAcceptationSourceNetOutput
	ToNetPeeringAcceptationSourceNetOutputWithContext(context.Context) NetPeeringAcceptationSourceNetOutput
}

type NetPeeringAcceptationSourceNetArgs struct {
	// The account ID of the owner of the source Net.
	AccountId pulumi.StringInput `pulumi:"accountId"`
	// The IP range for the source Net, in CIDR notation (for example, `10.0.0.0/16`).
	IpRange pulumi.StringInput `pulumi:"ipRange"`
	// The ID of the source Net.
	NetId pulumi.StringInput `pulumi:"netId"`
}

func (NetPeeringAcceptationSourceNetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetPeeringAcceptationSourceNet)(nil)).Elem()
}

func (i NetPeeringAcceptationSourceNetArgs) ToNetPeeringAcceptationSourceNetOutput() NetPeeringAcceptationSourceNetOutput {
	return i.ToNetPeeringAcceptationSourceNetOutputWithContext(context.Background())
}

func (i NetPeeringAcceptationSourceNetArgs) ToNetPeeringAcceptationSourceNetOutputWithContext(ctx context.Context) NetPeeringAcceptationSourceNetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetPeeringAcceptationSourceNetOutput)
}

// NetPeeringAcceptationSourceNetArrayInput is an input type that accepts NetPeeringAcceptationSourceNetArray and NetPeeringAcceptationSourceNetArrayOutput values.
// You can construct a concrete instance of `NetPeeringAcceptationSourceNetArrayInput` via:
//
//	NetPeeringAcceptationSourceNetArray{ NetPeeringAcceptationSourceNetArgs{...} }
type NetPeeringAcceptationSourceNetArrayInput interface {
	pulumi.Input

	ToNetPeeringAcceptationSourceNetArrayOutput() NetPeeringAcceptationSourceNetArrayOutput
	ToNetPeeringAcceptationSourceNetArrayOutputWithContext(context.Context) NetPeeringAcceptationSourceNetArrayOutput
}

type NetPeeringAcceptationSourceNetArray []NetPeeringAcceptationSourceNetInput

func (NetPeeringAcceptationSourceNetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetPeeringAcceptationSourceNet)(nil)).Elem()
}

func (i NetPeeringAcceptationSourceNetArray) ToNetPeeringAcceptationSourceNetArrayOutput() NetPeeringAcceptationSourceNetArrayOutput {
	return i.ToNetPeeringAcceptationSourceNetArrayOutputWithContext(context.Background())
}

func (i NetPeeringAcceptationSourceNetArray) ToNetPeeringAcceptationSourceNetArrayOutputWithContext(ctx context.Context) NetPeeringAcceptationSourceNetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetPeeringAcceptationSourceNetArrayOutput)
}

type NetPeeringAcceptationSourceNetOutput struct{ *pulumi.OutputState }

func (NetPeeringAcceptationSourceNetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetPeeringAcceptationSourceNet)(nil)).Elem()
}

func (o NetPeeringAcceptationSourceNetOutput) ToNetPeeringAcceptationSourceNetOutput() NetPeeringAcceptationSourceNetOutput {
	return o
}

func (o NetPeeringAcceptationSourceNetOutput) ToNetPeeringAcceptationSourceNetOutputWithContext(ctx context.Context) NetPeeringAcceptationSourceNetOutput {
	return o
}

// The account ID of the owner of the source Net.
func (o NetPeeringAcceptationSourceNetOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v NetPeeringAcceptationSourceNet) string { return v.AccountId }).(pulumi.StringOutput)
}

// The IP range for the source Net, in CIDR notation (for example, `10.0.0.0/16`).
func (o NetPeeringAcceptationSourceNetOutput) IpRange() pulumi.StringOutput {
	return o.ApplyT(func(v NetPeeringAcceptationSourceNet) string { return v.IpRange }).(pulumi.StringOutput)
}

// The ID of the source Net.
func (o NetPeeringAcceptationSourceNetOutput) NetId() pulumi.StringOutput {
	return o.ApplyT(func(v NetPeeringAcceptationSourceNet) string { return v.NetId }).(pulumi.StringOutput)
}

type NetPeeringAcceptationSourceNetArrayOutput struct{ *pulumi.OutputState }

func (NetPeeringAcceptationSourceNetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetPeeringAcceptationSourceNet)(nil)).Elem()
}

func (o NetPeeringAcceptationSourceNetArrayOutput) ToNetPeeringAcceptationSourceNetArrayOutput() NetPeeringAcceptationSourceNetArrayOutput {
	return o
}

func (o NetPeeringAcceptationSourceNetArrayOutput) ToNetPeeringAcceptationSourceNetArrayOutputWithContext(ctx context.Context) NetPeeringAcceptationSourceNetArrayOutput {
	return o
}

func (o NetPeeringAcceptationSourceNetArrayOutput) Index(i pulumi.IntInput) NetPeeringAcceptationSourceNetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetPeeringAcceptationSourceNet {
		return vs[0].([]NetPeeringAcceptationSourceNet)[vs[1].(int)]
	}).(NetPeeringAcceptationSourceNetOutput)
}

type NetPeeringAcceptationStateType struct {
	// Additional information about the state of the Net peering.
	Message string `pulumi:"message"`
	// The state of the Net peering (`pending-acceptance` \| `active` \| `rejected` \| `failed` \| `expired` \| `deleted`).
	Name string `pulumi:"name"`
}

// NetPeeringAcceptationStateTypeInput is an input type that accepts NetPeeringAcceptationStateTypeArgs and NetPeeringAcceptationStateTypeOutput values.
// You can construct a concrete instance of `NetPeeringAcceptationStateTypeInput` via:
//
//	NetPeeringAcceptationStateTypeArgs{...}
type NetPeeringAcceptationStateTypeInput interface {
	pulumi.Input

	ToNetPeeringAcceptationStateTypeOutput() NetPeeringAcceptationStateTypeOutput
	ToNetPeeringAcceptationStateTypeOutputWithContext(context.Context) NetPeeringAcceptationStateTypeOutput
}

type NetPeeringAcceptationStateTypeArgs struct {
	// Additional information about the state of the Net peering.
	Message pulumi.StringInput `pulumi:"message"`
	// The state of the Net peering (`pending-acceptance` \| `active` \| `rejected` \| `failed` \| `expired` \| `deleted`).
	Name pulumi.StringInput `pulumi:"name"`
}

func (NetPeeringAcceptationStateTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetPeeringAcceptationStateType)(nil)).Elem()
}

func (i NetPeeringAcceptationStateTypeArgs) ToNetPeeringAcceptationStateTypeOutput() NetPeeringAcceptationStateTypeOutput {
	return i.ToNetPeeringAcceptationStateTypeOutputWithContext(context.Background())
}

func (i NetPeeringAcceptationStateTypeArgs) ToNetPeeringAcceptationStateTypeOutputWithContext(ctx context.Context) NetPeeringAcceptationStateTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetPeeringAcceptationStateTypeOutput)
}

// NetPeeringAcceptationStateTypeArrayInput is an input type that accepts NetPeeringAcceptationStateTypeArray and NetPeeringAcceptationStateTypeArrayOutput values.
// You can construct a concrete instance of `NetPeeringAcceptationStateTypeArrayInput` via:
//
//	NetPeeringAcceptationStateTypeArray{ NetPeeringAcceptationStateTypeArgs{...} }
type NetPeeringAcceptationStateTypeArrayInput interface {
	pulumi.Input

	ToNetPeeringAcceptationStateTypeArrayOutput() NetPeeringAcceptationStateTypeArrayOutput
	ToNetPeeringAcceptationStateTypeArrayOutputWithContext(context.Context) NetPeeringAcceptationStateTypeArrayOutput
}

type NetPeeringAcceptationStateTypeArray []NetPeeringAcceptationStateTypeInput

func (NetPeeringAcceptationStateTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetPeeringAcceptationStateType)(nil)).Elem()
}

func (i NetPeeringAcceptationStateTypeArray) ToNetPeeringAcceptationStateTypeArrayOutput() NetPeeringAcceptationStateTypeArrayOutput {
	return i.ToNetPeeringAcceptationStateTypeArrayOutputWithContext(context.Background())
}

func (i NetPeeringAcceptationStateTypeArray) ToNetPeeringAcceptationStateTypeArrayOutputWithContext(ctx context.Context) NetPeeringAcceptationStateTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetPeeringAcceptationStateTypeArrayOutput)
}

type NetPeeringAcceptationStateTypeOutput struct{ *pulumi.OutputState }

func (NetPeeringAcceptationStateTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetPeeringAcceptationStateType)(nil)).Elem()
}

func (o NetPeeringAcceptationStateTypeOutput) ToNetPeeringAcceptationStateTypeOutput() NetPeeringAcceptationStateTypeOutput {
	return o
}

func (o NetPeeringAcceptationStateTypeOutput) ToNetPeeringAcceptationStateTypeOutputWithContext(ctx context.Context) NetPeeringAcceptationStateTypeOutput {
	return o
}

// Additional information about the state of the Net peering.
func (o NetPeeringAcceptationStateTypeOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v NetPeeringAcceptationStateType) string { return v.Message }).(pulumi.StringOutput)
}

// The state of the Net peering (`pending-acceptance` \| `active` \| `rejected` \| `failed` \| `expired` \| `deleted`).
func (o NetPeeringAcceptationStateTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v NetPeeringAcceptationStateType) string { return v.Name }).(pulumi.StringOutput)
}

type NetPeeringAcceptationStateTypeArrayOutput struct{ *pulumi.OutputState }

func (NetPeeringAcceptationStateTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetPeeringAcceptationStateType)(nil)).Elem()
}

func (o NetPeeringAcceptationStateTypeArrayOutput) ToNetPeeringAcceptationStateTypeArrayOutput() NetPeeringAcceptationStateTypeArrayOutput {
	return o
}

func (o NetPeeringAcceptationStateTypeArrayOutput) ToNetPeeringAcceptationStateTypeArrayOutputWithContext(ctx context.Context) NetPeeringAcceptationStateTypeArrayOutput {
	return o
}

func (o NetPeeringAcceptationStateTypeArrayOutput) Index(i pulumi.IntInput) NetPeeringAcceptationStateTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetPeeringAcceptationStateType {
		return vs[0].([]NetPeeringAcceptationStateType)[vs[1].(int)]
	}).(NetPeeringAcceptationStateTypeOutput)
}

type NetPeeringAcceptationTag struct {
	// The key of the tag, with a minimum of 1 character.
	Key string `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value string `pulumi:"value"`
}

// NetPeeringAcceptationTagInput is an input type that accepts NetPeeringAcceptationTagArgs and NetPeeringAcceptationTagOutput values.
// You can construct a concrete instance of `NetPeeringAcceptationTagInput` via:
//
//	NetPeeringAcceptationTagArgs{...}
type NetPeeringAcceptationTagInput interface {
	pulumi.Input

	ToNetPeeringAcceptationTagOutput() NetPeeringAcceptationTagOutput
	ToNetPeeringAcceptationTagOutputWithContext(context.Context) NetPeeringAcceptationTagOutput
}

type NetPeeringAcceptationTagArgs struct {
	// The key of the tag, with a minimum of 1 character.
	Key pulumi.StringInput `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value pulumi.StringInput `pulumi:"value"`
}

func (NetPeeringAcceptationTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetPeeringAcceptationTag)(nil)).Elem()
}

func (i NetPeeringAcceptationTagArgs) ToNetPeeringAcceptationTagOutput() NetPeeringAcceptationTagOutput {
	return i.ToNetPeeringAcceptationTagOutputWithContext(context.Background())
}

func (i NetPeeringAcceptationTagArgs) ToNetPeeringAcceptationTagOutputWithContext(ctx context.Context) NetPeeringAcceptationTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetPeeringAcceptationTagOutput)
}

// NetPeeringAcceptationTagArrayInput is an input type that accepts NetPeeringAcceptationTagArray and NetPeeringAcceptationTagArrayOutput values.
// You can construct a concrete instance of `NetPeeringAcceptationTagArrayInput` via:
//
//	NetPeeringAcceptationTagArray{ NetPeeringAcceptationTagArgs{...} }
type NetPeeringAcceptationTagArrayInput interface {
	pulumi.Input

	ToNetPeeringAcceptationTagArrayOutput() NetPeeringAcceptationTagArrayOutput
	ToNetPeeringAcceptationTagArrayOutputWithContext(context.Context) NetPeeringAcceptationTagArrayOutput
}

type NetPeeringAcceptationTagArray []NetPeeringAcceptationTagInput

func (NetPeeringAcceptationTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetPeeringAcceptationTag)(nil)).Elem()
}

func (i NetPeeringAcceptationTagArray) ToNetPeeringAcceptationTagArrayOutput() NetPeeringAcceptationTagArrayOutput {
	return i.ToNetPeeringAcceptationTagArrayOutputWithContext(context.Background())
}

func (i NetPeeringAcceptationTagArray) ToNetPeeringAcceptationTagArrayOutputWithContext(ctx context.Context) NetPeeringAcceptationTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetPeeringAcceptationTagArrayOutput)
}

type NetPeeringAcceptationTagOutput struct{ *pulumi.OutputState }

func (NetPeeringAcceptationTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetPeeringAcceptationTag)(nil)).Elem()
}

func (o NetPeeringAcceptationTagOutput) ToNetPeeringAcceptationTagOutput() NetPeeringAcceptationTagOutput {
	return o
}

func (o NetPeeringAcceptationTagOutput) ToNetPeeringAcceptationTagOutputWithContext(ctx context.Context) NetPeeringAcceptationTagOutput {
	return o
}

// The key of the tag, with a minimum of 1 character.
func (o NetPeeringAcceptationTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v NetPeeringAcceptationTag) string { return v.Key }).(pulumi.StringOutput)
}

// The value of the tag, between 0 and 255 characters.
func (o NetPeeringAcceptationTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v NetPeeringAcceptationTag) string { return v.Value }).(pulumi.StringOutput)
}

type NetPeeringAcceptationTagArrayOutput struct{ *pulumi.OutputState }

func (NetPeeringAcceptationTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetPeeringAcceptationTag)(nil)).Elem()
}

func (o NetPeeringAcceptationTagArrayOutput) ToNetPeeringAcceptationTagArrayOutput() NetPeeringAcceptationTagArrayOutput {
	return o
}

func (o NetPeeringAcceptationTagArrayOutput) ToNetPeeringAcceptationTagArrayOutputWithContext(ctx context.Context) NetPeeringAcceptationTagArrayOutput {
	return o
}

func (o NetPeeringAcceptationTagArrayOutput) Index(i pulumi.IntInput) NetPeeringAcceptationTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetPeeringAcceptationTag {
		return vs[0].([]NetPeeringAcceptationTag)[vs[1].(int)]
	}).(NetPeeringAcceptationTagOutput)
}

type NetPeeringAcceptationTimeouts struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Create *string `pulumi:"create"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
	Delete *string `pulumi:"delete"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
	Read *string `pulumi:"read"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Update *string `pulumi:"update"`
}

// NetPeeringAcceptationTimeoutsInput is an input type that accepts NetPeeringAcceptationTimeoutsArgs and NetPeeringAcceptationTimeoutsOutput values.
// You can construct a concrete instance of `NetPeeringAcceptationTimeoutsInput` via:
//
//	NetPeeringAcceptationTimeoutsArgs{...}
type NetPeeringAcceptationTimeoutsInput interface {
	pulumi.Input

	ToNetPeeringAcceptationTimeoutsOutput() NetPeeringAcceptationTimeoutsOutput
	ToNetPeeringAcceptationTimeoutsOutputWithContext(context.Context) NetPeeringAcceptationTimeoutsOutput
}

type NetPeeringAcceptationTimeoutsArgs struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Create pulumi.StringPtrInput `pulumi:"create"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
	Delete pulumi.StringPtrInput `pulumi:"delete"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
	Read pulumi.StringPtrInput `pulumi:"read"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Update pulumi.StringPtrInput `pulumi:"update"`
}

func (NetPeeringAcceptationTimeoutsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetPeeringAcceptationTimeouts)(nil)).Elem()
}

func (i NetPeeringAcceptationTimeoutsArgs) ToNetPeeringAcceptationTimeoutsOutput() NetPeeringAcceptationTimeoutsOutput {
	return i.ToNetPeeringAcceptationTimeoutsOutputWithContext(context.Background())
}

func (i NetPeeringAcceptationTimeoutsArgs) ToNetPeeringAcceptationTimeoutsOutputWithContext(ctx context.Context) NetPeeringAcceptationTimeoutsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetPeeringAcceptationTimeoutsOutput)
}

func (i NetPeeringAcceptationTimeoutsArgs) ToNetPeeringAcceptationTimeoutsPtrOutput() NetPeeringAcceptationTimeoutsPtrOutput {
	return i.ToNetPeeringAcceptationTimeoutsPtrOutputWithContext(context.Background())
}

func (i NetPeeringAcceptationTimeoutsArgs) ToNetPeeringAcceptationTimeoutsPtrOutputWithContext(ctx context.Context) NetPeeringAcceptationTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetPeeringAcceptationTimeoutsOutput).ToNetPeeringAcceptationTimeoutsPtrOutputWithContext(ctx)
}

// NetPeeringAcceptationTimeoutsPtrInput is an input type that accepts NetPeeringAcceptationTimeoutsArgs, NetPeeringAcceptationTimeoutsPtr and NetPeeringAcceptationTimeoutsPtrOutput values.
// You can construct a concrete instance of `NetPeeringAcceptationTimeoutsPtrInput` via:
//
//	        NetPeeringAcceptationTimeoutsArgs{...}
//
//	or:
//
//	        nil
type NetPeeringAcceptationTimeoutsPtrInput interface {
	pulumi.Input

	ToNetPeeringAcceptationTimeoutsPtrOutput() NetPeeringAcceptationTimeoutsPtrOutput
	ToNetPeeringAcceptationTimeoutsPtrOutputWithContext(context.Context) NetPeeringAcceptationTimeoutsPtrOutput
}

type netPeeringAcceptationTimeoutsPtrType NetPeeringAcceptationTimeoutsArgs

func NetPeeringAcceptationTimeoutsPtr(v *NetPeeringAcceptationTimeoutsArgs) NetPeeringAcceptationTimeoutsPtrInput {
	return (*netPeeringAcceptationTimeoutsPtrType)(v)
}

func (*netPeeringAcceptationTimeoutsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetPeeringAcceptationTimeouts)(nil)).Elem()
}

func (i *netPeeringAcceptationTimeoutsPtrType) ToNetPeeringAcceptationTimeoutsPtrOutput() NetPeeringAcceptationTimeoutsPtrOutput {
	return i.ToNetPeeringAcceptationTimeoutsPtrOutputWithContext(context.Background())
}

func (i *netPeeringAcceptationTimeoutsPtrType) ToNetPeeringAcceptationTimeoutsPtrOutputWithContext(ctx context.Context) NetPeeringAcceptationTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetPeeringAcceptationTimeoutsPtrOutput)
}

type NetPeeringAcceptationTimeoutsOutput struct{ *pulumi.OutputState }

func (NetPeeringAcceptationTimeoutsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetPeeringAcceptationTimeouts)(nil)).Elem()
}

func (o NetPeeringAcceptationTimeoutsOutput) ToNetPeeringAcceptationTimeoutsOutput() NetPeeringAcceptationTimeoutsOutput {
	return o
}

func (o NetPeeringAcceptationTimeoutsOutput) ToNetPeeringAcceptationTimeoutsOutputWithContext(ctx context.Context) NetPeeringAcceptationTimeoutsOutput {
	return o
}

func (o NetPeeringAcceptationTimeoutsOutput) ToNetPeeringAcceptationTimeoutsPtrOutput() NetPeeringAcceptationTimeoutsPtrOutput {
	return o.ToNetPeeringAcceptationTimeoutsPtrOutputWithContext(context.Background())
}

func (o NetPeeringAcceptationTimeoutsOutput) ToNetPeeringAcceptationTimeoutsPtrOutputWithContext(ctx context.Context) NetPeeringAcceptationTimeoutsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NetPeeringAcceptationTimeouts) *NetPeeringAcceptationTimeouts {
		return &v
	}).(NetPeeringAcceptationTimeoutsPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o NetPeeringAcceptationTimeoutsOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetPeeringAcceptationTimeouts) *string { return v.Create }).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
func (o NetPeeringAcceptationTimeoutsOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetPeeringAcceptationTimeouts) *string { return v.Delete }).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
func (o NetPeeringAcceptationTimeoutsOutput) Read() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetPeeringAcceptationTimeouts) *string { return v.Read }).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o NetPeeringAcceptationTimeoutsOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetPeeringAcceptationTimeouts) *string { return v.Update }).(pulumi.StringPtrOutput)
}

type NetPeeringAcceptationTimeoutsPtrOutput struct{ *pulumi.OutputState }

func (NetPeeringAcceptationTimeoutsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetPeeringAcceptationTimeouts)(nil)).Elem()
}

func (o NetPeeringAcceptationTimeoutsPtrOutput) ToNetPeeringAcceptationTimeoutsPtrOutput() NetPeeringAcceptationTimeoutsPtrOutput {
	return o
}

func (o NetPeeringAcceptationTimeoutsPtrOutput) ToNetPeeringAcceptationTimeoutsPtrOutputWithContext(ctx context.Context) NetPeeringAcceptationTimeoutsPtrOutput {
	return o
}

func (o NetPeeringAcceptationTimeoutsPtrOutput) Elem() NetPeeringAcceptationTimeoutsOutput {
	return o.ApplyT(func(v *NetPeeringAcceptationTimeouts) NetPeeringAcceptationTimeouts {
		if v != nil {
			return *v
		}
		var ret NetPeeringAcceptationTimeouts
		return ret
	}).(NetPeeringAcceptationTimeoutsOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o NetPeeringAcceptationTimeoutsPtrOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetPeeringAcceptationTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Create
	}).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
func (o NetPeeringAcceptationTimeoutsPtrOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetPeeringAcceptationTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Delete
	}).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
func (o NetPeeringAcceptationTimeoutsPtrOutput) Read() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetPeeringAcceptationTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Read
	}).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o NetPeeringAcceptationTimeoutsPtrOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetPeeringAcceptationTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Update
	}).(pulumi.StringPtrOutput)
}

type NetPeeringAccepterNet struct {
	// The account ID of the owner of the source Net.
	AccountId string `pulumi:"accountId"`
	// The IP range for the source Net, in CIDR notation (for example, `10.0.0.0/16`).
	IpRange string `pulumi:"ipRange"`
	// The ID of the source Net.
	NetId string `pulumi:"netId"`
}

// NetPeeringAccepterNetInput is an input type that accepts NetPeeringAccepterNetArgs and NetPeeringAccepterNetOutput values.
// You can construct a concrete instance of `NetPeeringAccepterNetInput` via:
//
//	NetPeeringAccepterNetArgs{...}
type NetPeeringAccepterNetInput interface {
	pulumi.Input

	ToNetPeeringAccepterNetOutput() NetPeeringAccepterNetOutput
	ToNetPeeringAccepterNetOutputWithContext(context.Context) NetPeeringAccepterNetOutput
}

type NetPeeringAccepterNetArgs struct {
	// The account ID of the owner of the source Net.
	AccountId pulumi.StringInput `pulumi:"accountId"`
	// The IP range for the source Net, in CIDR notation (for example, `10.0.0.0/16`).
	IpRange pulumi.StringInput `pulumi:"ipRange"`
	// The ID of the source Net.
	NetId pulumi.StringInput `pulumi:"netId"`
}

func (NetPeeringAccepterNetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetPeeringAccepterNet)(nil)).Elem()
}

func (i NetPeeringAccepterNetArgs) ToNetPeeringAccepterNetOutput() NetPeeringAccepterNetOutput {
	return i.ToNetPeeringAccepterNetOutputWithContext(context.Background())
}

func (i NetPeeringAccepterNetArgs) ToNetPeeringAccepterNetOutputWithContext(ctx context.Context) NetPeeringAccepterNetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetPeeringAccepterNetOutput)
}

// NetPeeringAccepterNetArrayInput is an input type that accepts NetPeeringAccepterNetArray and NetPeeringAccepterNetArrayOutput values.
// You can construct a concrete instance of `NetPeeringAccepterNetArrayInput` via:
//
//	NetPeeringAccepterNetArray{ NetPeeringAccepterNetArgs{...} }
type NetPeeringAccepterNetArrayInput interface {
	pulumi.Input

	ToNetPeeringAccepterNetArrayOutput() NetPeeringAccepterNetArrayOutput
	ToNetPeeringAccepterNetArrayOutputWithContext(context.Context) NetPeeringAccepterNetArrayOutput
}

type NetPeeringAccepterNetArray []NetPeeringAccepterNetInput

func (NetPeeringAccepterNetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetPeeringAccepterNet)(nil)).Elem()
}

func (i NetPeeringAccepterNetArray) ToNetPeeringAccepterNetArrayOutput() NetPeeringAccepterNetArrayOutput {
	return i.ToNetPeeringAccepterNetArrayOutputWithContext(context.Background())
}

func (i NetPeeringAccepterNetArray) ToNetPeeringAccepterNetArrayOutputWithContext(ctx context.Context) NetPeeringAccepterNetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetPeeringAccepterNetArrayOutput)
}

type NetPeeringAccepterNetOutput struct{ *pulumi.OutputState }

func (NetPeeringAccepterNetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetPeeringAccepterNet)(nil)).Elem()
}

func (o NetPeeringAccepterNetOutput) ToNetPeeringAccepterNetOutput() NetPeeringAccepterNetOutput {
	return o
}

func (o NetPeeringAccepterNetOutput) ToNetPeeringAccepterNetOutputWithContext(ctx context.Context) NetPeeringAccepterNetOutput {
	return o
}

// The account ID of the owner of the source Net.
func (o NetPeeringAccepterNetOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v NetPeeringAccepterNet) string { return v.AccountId }).(pulumi.StringOutput)
}

// The IP range for the source Net, in CIDR notation (for example, `10.0.0.0/16`).
func (o NetPeeringAccepterNetOutput) IpRange() pulumi.StringOutput {
	return o.ApplyT(func(v NetPeeringAccepterNet) string { return v.IpRange }).(pulumi.StringOutput)
}

// The ID of the source Net.
func (o NetPeeringAccepterNetOutput) NetId() pulumi.StringOutput {
	return o.ApplyT(func(v NetPeeringAccepterNet) string { return v.NetId }).(pulumi.StringOutput)
}

type NetPeeringAccepterNetArrayOutput struct{ *pulumi.OutputState }

func (NetPeeringAccepterNetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetPeeringAccepterNet)(nil)).Elem()
}

func (o NetPeeringAccepterNetArrayOutput) ToNetPeeringAccepterNetArrayOutput() NetPeeringAccepterNetArrayOutput {
	return o
}

func (o NetPeeringAccepterNetArrayOutput) ToNetPeeringAccepterNetArrayOutputWithContext(ctx context.Context) NetPeeringAccepterNetArrayOutput {
	return o
}

func (o NetPeeringAccepterNetArrayOutput) Index(i pulumi.IntInput) NetPeeringAccepterNetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetPeeringAccepterNet {
		return vs[0].([]NetPeeringAccepterNet)[vs[1].(int)]
	}).(NetPeeringAccepterNetOutput)
}

type NetPeeringSourceNet struct {
	// The account ID of the owner of the source Net.
	AccountId string `pulumi:"accountId"`
	// The IP range for the source Net, in CIDR notation (for example, `10.0.0.0/16`).
	IpRange string `pulumi:"ipRange"`
	// The ID of the source Net.
	NetId string `pulumi:"netId"`
}

// NetPeeringSourceNetInput is an input type that accepts NetPeeringSourceNetArgs and NetPeeringSourceNetOutput values.
// You can construct a concrete instance of `NetPeeringSourceNetInput` via:
//
//	NetPeeringSourceNetArgs{...}
type NetPeeringSourceNetInput interface {
	pulumi.Input

	ToNetPeeringSourceNetOutput() NetPeeringSourceNetOutput
	ToNetPeeringSourceNetOutputWithContext(context.Context) NetPeeringSourceNetOutput
}

type NetPeeringSourceNetArgs struct {
	// The account ID of the owner of the source Net.
	AccountId pulumi.StringInput `pulumi:"accountId"`
	// The IP range for the source Net, in CIDR notation (for example, `10.0.0.0/16`).
	IpRange pulumi.StringInput `pulumi:"ipRange"`
	// The ID of the source Net.
	NetId pulumi.StringInput `pulumi:"netId"`
}

func (NetPeeringSourceNetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetPeeringSourceNet)(nil)).Elem()
}

func (i NetPeeringSourceNetArgs) ToNetPeeringSourceNetOutput() NetPeeringSourceNetOutput {
	return i.ToNetPeeringSourceNetOutputWithContext(context.Background())
}

func (i NetPeeringSourceNetArgs) ToNetPeeringSourceNetOutputWithContext(ctx context.Context) NetPeeringSourceNetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetPeeringSourceNetOutput)
}

// NetPeeringSourceNetArrayInput is an input type that accepts NetPeeringSourceNetArray and NetPeeringSourceNetArrayOutput values.
// You can construct a concrete instance of `NetPeeringSourceNetArrayInput` via:
//
//	NetPeeringSourceNetArray{ NetPeeringSourceNetArgs{...} }
type NetPeeringSourceNetArrayInput interface {
	pulumi.Input

	ToNetPeeringSourceNetArrayOutput() NetPeeringSourceNetArrayOutput
	ToNetPeeringSourceNetArrayOutputWithContext(context.Context) NetPeeringSourceNetArrayOutput
}

type NetPeeringSourceNetArray []NetPeeringSourceNetInput

func (NetPeeringSourceNetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetPeeringSourceNet)(nil)).Elem()
}

func (i NetPeeringSourceNetArray) ToNetPeeringSourceNetArrayOutput() NetPeeringSourceNetArrayOutput {
	return i.ToNetPeeringSourceNetArrayOutputWithContext(context.Background())
}

func (i NetPeeringSourceNetArray) ToNetPeeringSourceNetArrayOutputWithContext(ctx context.Context) NetPeeringSourceNetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetPeeringSourceNetArrayOutput)
}

type NetPeeringSourceNetOutput struct{ *pulumi.OutputState }

func (NetPeeringSourceNetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetPeeringSourceNet)(nil)).Elem()
}

func (o NetPeeringSourceNetOutput) ToNetPeeringSourceNetOutput() NetPeeringSourceNetOutput {
	return o
}

func (o NetPeeringSourceNetOutput) ToNetPeeringSourceNetOutputWithContext(ctx context.Context) NetPeeringSourceNetOutput {
	return o
}

// The account ID of the owner of the source Net.
func (o NetPeeringSourceNetOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v NetPeeringSourceNet) string { return v.AccountId }).(pulumi.StringOutput)
}

// The IP range for the source Net, in CIDR notation (for example, `10.0.0.0/16`).
func (o NetPeeringSourceNetOutput) IpRange() pulumi.StringOutput {
	return o.ApplyT(func(v NetPeeringSourceNet) string { return v.IpRange }).(pulumi.StringOutput)
}

// The ID of the source Net.
func (o NetPeeringSourceNetOutput) NetId() pulumi.StringOutput {
	return o.ApplyT(func(v NetPeeringSourceNet) string { return v.NetId }).(pulumi.StringOutput)
}

type NetPeeringSourceNetArrayOutput struct{ *pulumi.OutputState }

func (NetPeeringSourceNetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetPeeringSourceNet)(nil)).Elem()
}

func (o NetPeeringSourceNetArrayOutput) ToNetPeeringSourceNetArrayOutput() NetPeeringSourceNetArrayOutput {
	return o
}

func (o NetPeeringSourceNetArrayOutput) ToNetPeeringSourceNetArrayOutputWithContext(ctx context.Context) NetPeeringSourceNetArrayOutput {
	return o
}

func (o NetPeeringSourceNetArrayOutput) Index(i pulumi.IntInput) NetPeeringSourceNetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetPeeringSourceNet {
		return vs[0].([]NetPeeringSourceNet)[vs[1].(int)]
	}).(NetPeeringSourceNetOutput)
}

type NetPeeringStateType struct {
	// Additional information about the state of the Net peering.
	Message string `pulumi:"message"`
	// The state of the Net peering (`pending-acceptance` \| `active` \| `rejected` \| `failed` \| `expired` \| `deleted`).
	Name string `pulumi:"name"`
}

// NetPeeringStateTypeInput is an input type that accepts NetPeeringStateTypeArgs and NetPeeringStateTypeOutput values.
// You can construct a concrete instance of `NetPeeringStateTypeInput` via:
//
//	NetPeeringStateTypeArgs{...}
type NetPeeringStateTypeInput interface {
	pulumi.Input

	ToNetPeeringStateTypeOutput() NetPeeringStateTypeOutput
	ToNetPeeringStateTypeOutputWithContext(context.Context) NetPeeringStateTypeOutput
}

type NetPeeringStateTypeArgs struct {
	// Additional information about the state of the Net peering.
	Message pulumi.StringInput `pulumi:"message"`
	// The state of the Net peering (`pending-acceptance` \| `active` \| `rejected` \| `failed` \| `expired` \| `deleted`).
	Name pulumi.StringInput `pulumi:"name"`
}

func (NetPeeringStateTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetPeeringStateType)(nil)).Elem()
}

func (i NetPeeringStateTypeArgs) ToNetPeeringStateTypeOutput() NetPeeringStateTypeOutput {
	return i.ToNetPeeringStateTypeOutputWithContext(context.Background())
}

func (i NetPeeringStateTypeArgs) ToNetPeeringStateTypeOutputWithContext(ctx context.Context) NetPeeringStateTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetPeeringStateTypeOutput)
}

// NetPeeringStateTypeArrayInput is an input type that accepts NetPeeringStateTypeArray and NetPeeringStateTypeArrayOutput values.
// You can construct a concrete instance of `NetPeeringStateTypeArrayInput` via:
//
//	NetPeeringStateTypeArray{ NetPeeringStateTypeArgs{...} }
type NetPeeringStateTypeArrayInput interface {
	pulumi.Input

	ToNetPeeringStateTypeArrayOutput() NetPeeringStateTypeArrayOutput
	ToNetPeeringStateTypeArrayOutputWithContext(context.Context) NetPeeringStateTypeArrayOutput
}

type NetPeeringStateTypeArray []NetPeeringStateTypeInput

func (NetPeeringStateTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetPeeringStateType)(nil)).Elem()
}

func (i NetPeeringStateTypeArray) ToNetPeeringStateTypeArrayOutput() NetPeeringStateTypeArrayOutput {
	return i.ToNetPeeringStateTypeArrayOutputWithContext(context.Background())
}

func (i NetPeeringStateTypeArray) ToNetPeeringStateTypeArrayOutputWithContext(ctx context.Context) NetPeeringStateTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetPeeringStateTypeArrayOutput)
}

type NetPeeringStateTypeOutput struct{ *pulumi.OutputState }

func (NetPeeringStateTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetPeeringStateType)(nil)).Elem()
}

func (o NetPeeringStateTypeOutput) ToNetPeeringStateTypeOutput() NetPeeringStateTypeOutput {
	return o
}

func (o NetPeeringStateTypeOutput) ToNetPeeringStateTypeOutputWithContext(ctx context.Context) NetPeeringStateTypeOutput {
	return o
}

// Additional information about the state of the Net peering.
func (o NetPeeringStateTypeOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v NetPeeringStateType) string { return v.Message }).(pulumi.StringOutput)
}

// The state of the Net peering (`pending-acceptance` \| `active` \| `rejected` \| `failed` \| `expired` \| `deleted`).
func (o NetPeeringStateTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v NetPeeringStateType) string { return v.Name }).(pulumi.StringOutput)
}

type NetPeeringStateTypeArrayOutput struct{ *pulumi.OutputState }

func (NetPeeringStateTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetPeeringStateType)(nil)).Elem()
}

func (o NetPeeringStateTypeArrayOutput) ToNetPeeringStateTypeArrayOutput() NetPeeringStateTypeArrayOutput {
	return o
}

func (o NetPeeringStateTypeArrayOutput) ToNetPeeringStateTypeArrayOutputWithContext(ctx context.Context) NetPeeringStateTypeArrayOutput {
	return o
}

func (o NetPeeringStateTypeArrayOutput) Index(i pulumi.IntInput) NetPeeringStateTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetPeeringStateType {
		return vs[0].([]NetPeeringStateType)[vs[1].(int)]
	}).(NetPeeringStateTypeOutput)
}

type NetPeeringTag struct {
	// The key of the tag, with a minimum of 1 character.
	Key string `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value *string `pulumi:"value"`
}

// NetPeeringTagInput is an input type that accepts NetPeeringTagArgs and NetPeeringTagOutput values.
// You can construct a concrete instance of `NetPeeringTagInput` via:
//
//	NetPeeringTagArgs{...}
type NetPeeringTagInput interface {
	pulumi.Input

	ToNetPeeringTagOutput() NetPeeringTagOutput
	ToNetPeeringTagOutputWithContext(context.Context) NetPeeringTagOutput
}

type NetPeeringTagArgs struct {
	// The key of the tag, with a minimum of 1 character.
	Key pulumi.StringInput `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (NetPeeringTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetPeeringTag)(nil)).Elem()
}

func (i NetPeeringTagArgs) ToNetPeeringTagOutput() NetPeeringTagOutput {
	return i.ToNetPeeringTagOutputWithContext(context.Background())
}

func (i NetPeeringTagArgs) ToNetPeeringTagOutputWithContext(ctx context.Context) NetPeeringTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetPeeringTagOutput)
}

// NetPeeringTagArrayInput is an input type that accepts NetPeeringTagArray and NetPeeringTagArrayOutput values.
// You can construct a concrete instance of `NetPeeringTagArrayInput` via:
//
//	NetPeeringTagArray{ NetPeeringTagArgs{...} }
type NetPeeringTagArrayInput interface {
	pulumi.Input

	ToNetPeeringTagArrayOutput() NetPeeringTagArrayOutput
	ToNetPeeringTagArrayOutputWithContext(context.Context) NetPeeringTagArrayOutput
}

type NetPeeringTagArray []NetPeeringTagInput

func (NetPeeringTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetPeeringTag)(nil)).Elem()
}

func (i NetPeeringTagArray) ToNetPeeringTagArrayOutput() NetPeeringTagArrayOutput {
	return i.ToNetPeeringTagArrayOutputWithContext(context.Background())
}

func (i NetPeeringTagArray) ToNetPeeringTagArrayOutputWithContext(ctx context.Context) NetPeeringTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetPeeringTagArrayOutput)
}

type NetPeeringTagOutput struct{ *pulumi.OutputState }

func (NetPeeringTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetPeeringTag)(nil)).Elem()
}

func (o NetPeeringTagOutput) ToNetPeeringTagOutput() NetPeeringTagOutput {
	return o
}

func (o NetPeeringTagOutput) ToNetPeeringTagOutputWithContext(ctx context.Context) NetPeeringTagOutput {
	return o
}

// The key of the tag, with a minimum of 1 character.
func (o NetPeeringTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v NetPeeringTag) string { return v.Key }).(pulumi.StringOutput)
}

// The value of the tag, between 0 and 255 characters.
func (o NetPeeringTagOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetPeeringTag) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NetPeeringTagArrayOutput struct{ *pulumi.OutputState }

func (NetPeeringTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetPeeringTag)(nil)).Elem()
}

func (o NetPeeringTagArrayOutput) ToNetPeeringTagArrayOutput() NetPeeringTagArrayOutput {
	return o
}

func (o NetPeeringTagArrayOutput) ToNetPeeringTagArrayOutputWithContext(ctx context.Context) NetPeeringTagArrayOutput {
	return o
}

func (o NetPeeringTagArrayOutput) Index(i pulumi.IntInput) NetPeeringTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetPeeringTag {
		return vs[0].([]NetPeeringTag)[vs[1].(int)]
	}).(NetPeeringTagOutput)
}

type NetPeeringTimeouts struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Create *string `pulumi:"create"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
	Delete *string `pulumi:"delete"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
	Read *string `pulumi:"read"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Update *string `pulumi:"update"`
}

// NetPeeringTimeoutsInput is an input type that accepts NetPeeringTimeoutsArgs and NetPeeringTimeoutsOutput values.
// You can construct a concrete instance of `NetPeeringTimeoutsInput` via:
//
//	NetPeeringTimeoutsArgs{...}
type NetPeeringTimeoutsInput interface {
	pulumi.Input

	ToNetPeeringTimeoutsOutput() NetPeeringTimeoutsOutput
	ToNetPeeringTimeoutsOutputWithContext(context.Context) NetPeeringTimeoutsOutput
}

type NetPeeringTimeoutsArgs struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Create pulumi.StringPtrInput `pulumi:"create"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
	Delete pulumi.StringPtrInput `pulumi:"delete"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
	Read pulumi.StringPtrInput `pulumi:"read"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Update pulumi.StringPtrInput `pulumi:"update"`
}

func (NetPeeringTimeoutsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetPeeringTimeouts)(nil)).Elem()
}

func (i NetPeeringTimeoutsArgs) ToNetPeeringTimeoutsOutput() NetPeeringTimeoutsOutput {
	return i.ToNetPeeringTimeoutsOutputWithContext(context.Background())
}

func (i NetPeeringTimeoutsArgs) ToNetPeeringTimeoutsOutputWithContext(ctx context.Context) NetPeeringTimeoutsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetPeeringTimeoutsOutput)
}

func (i NetPeeringTimeoutsArgs) ToNetPeeringTimeoutsPtrOutput() NetPeeringTimeoutsPtrOutput {
	return i.ToNetPeeringTimeoutsPtrOutputWithContext(context.Background())
}

func (i NetPeeringTimeoutsArgs) ToNetPeeringTimeoutsPtrOutputWithContext(ctx context.Context) NetPeeringTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetPeeringTimeoutsOutput).ToNetPeeringTimeoutsPtrOutputWithContext(ctx)
}

// NetPeeringTimeoutsPtrInput is an input type that accepts NetPeeringTimeoutsArgs, NetPeeringTimeoutsPtr and NetPeeringTimeoutsPtrOutput values.
// You can construct a concrete instance of `NetPeeringTimeoutsPtrInput` via:
//
//	        NetPeeringTimeoutsArgs{...}
//
//	or:
//
//	        nil
type NetPeeringTimeoutsPtrInput interface {
	pulumi.Input

	ToNetPeeringTimeoutsPtrOutput() NetPeeringTimeoutsPtrOutput
	ToNetPeeringTimeoutsPtrOutputWithContext(context.Context) NetPeeringTimeoutsPtrOutput
}

type netPeeringTimeoutsPtrType NetPeeringTimeoutsArgs

func NetPeeringTimeoutsPtr(v *NetPeeringTimeoutsArgs) NetPeeringTimeoutsPtrInput {
	return (*netPeeringTimeoutsPtrType)(v)
}

func (*netPeeringTimeoutsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetPeeringTimeouts)(nil)).Elem()
}

func (i *netPeeringTimeoutsPtrType) ToNetPeeringTimeoutsPtrOutput() NetPeeringTimeoutsPtrOutput {
	return i.ToNetPeeringTimeoutsPtrOutputWithContext(context.Background())
}

func (i *netPeeringTimeoutsPtrType) ToNetPeeringTimeoutsPtrOutputWithContext(ctx context.Context) NetPeeringTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetPeeringTimeoutsPtrOutput)
}

type NetPeeringTimeoutsOutput struct{ *pulumi.OutputState }

func (NetPeeringTimeoutsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetPeeringTimeouts)(nil)).Elem()
}

func (o NetPeeringTimeoutsOutput) ToNetPeeringTimeoutsOutput() NetPeeringTimeoutsOutput {
	return o
}

func (o NetPeeringTimeoutsOutput) ToNetPeeringTimeoutsOutputWithContext(ctx context.Context) NetPeeringTimeoutsOutput {
	return o
}

func (o NetPeeringTimeoutsOutput) ToNetPeeringTimeoutsPtrOutput() NetPeeringTimeoutsPtrOutput {
	return o.ToNetPeeringTimeoutsPtrOutputWithContext(context.Background())
}

func (o NetPeeringTimeoutsOutput) ToNetPeeringTimeoutsPtrOutputWithContext(ctx context.Context) NetPeeringTimeoutsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NetPeeringTimeouts) *NetPeeringTimeouts {
		return &v
	}).(NetPeeringTimeoutsPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o NetPeeringTimeoutsOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetPeeringTimeouts) *string { return v.Create }).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
func (o NetPeeringTimeoutsOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetPeeringTimeouts) *string { return v.Delete }).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
func (o NetPeeringTimeoutsOutput) Read() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetPeeringTimeouts) *string { return v.Read }).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o NetPeeringTimeoutsOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetPeeringTimeouts) *string { return v.Update }).(pulumi.StringPtrOutput)
}

type NetPeeringTimeoutsPtrOutput struct{ *pulumi.OutputState }

func (NetPeeringTimeoutsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetPeeringTimeouts)(nil)).Elem()
}

func (o NetPeeringTimeoutsPtrOutput) ToNetPeeringTimeoutsPtrOutput() NetPeeringTimeoutsPtrOutput {
	return o
}

func (o NetPeeringTimeoutsPtrOutput) ToNetPeeringTimeoutsPtrOutputWithContext(ctx context.Context) NetPeeringTimeoutsPtrOutput {
	return o
}

func (o NetPeeringTimeoutsPtrOutput) Elem() NetPeeringTimeoutsOutput {
	return o.ApplyT(func(v *NetPeeringTimeouts) NetPeeringTimeouts {
		if v != nil {
			return *v
		}
		var ret NetPeeringTimeouts
		return ret
	}).(NetPeeringTimeoutsOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o NetPeeringTimeoutsPtrOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetPeeringTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Create
	}).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
func (o NetPeeringTimeoutsPtrOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetPeeringTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Delete
	}).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
func (o NetPeeringTimeoutsPtrOutput) Read() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetPeeringTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Read
	}).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o NetPeeringTimeoutsPtrOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetPeeringTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Update
	}).(pulumi.StringPtrOutput)
}

type NetTag struct {
	// The key of the tag, with a minimum of 1 character.
	Key string `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value *string `pulumi:"value"`
}

// NetTagInput is an input type that accepts NetTagArgs and NetTagOutput values.
// You can construct a concrete instance of `NetTagInput` via:
//
//	NetTagArgs{...}
type NetTagInput interface {
	pulumi.Input

	ToNetTagOutput() NetTagOutput
	ToNetTagOutputWithContext(context.Context) NetTagOutput
}

type NetTagArgs struct {
	// The key of the tag, with a minimum of 1 character.
	Key pulumi.StringInput `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (NetTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetTag)(nil)).Elem()
}

func (i NetTagArgs) ToNetTagOutput() NetTagOutput {
	return i.ToNetTagOutputWithContext(context.Background())
}

func (i NetTagArgs) ToNetTagOutputWithContext(ctx context.Context) NetTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetTagOutput)
}

// NetTagArrayInput is an input type that accepts NetTagArray and NetTagArrayOutput values.
// You can construct a concrete instance of `NetTagArrayInput` via:
//
//	NetTagArray{ NetTagArgs{...} }
type NetTagArrayInput interface {
	pulumi.Input

	ToNetTagArrayOutput() NetTagArrayOutput
	ToNetTagArrayOutputWithContext(context.Context) NetTagArrayOutput
}

type NetTagArray []NetTagInput

func (NetTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetTag)(nil)).Elem()
}

func (i NetTagArray) ToNetTagArrayOutput() NetTagArrayOutput {
	return i.ToNetTagArrayOutputWithContext(context.Background())
}

func (i NetTagArray) ToNetTagArrayOutputWithContext(ctx context.Context) NetTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetTagArrayOutput)
}

type NetTagOutput struct{ *pulumi.OutputState }

func (NetTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetTag)(nil)).Elem()
}

func (o NetTagOutput) ToNetTagOutput() NetTagOutput {
	return o
}

func (o NetTagOutput) ToNetTagOutputWithContext(ctx context.Context) NetTagOutput {
	return o
}

// The key of the tag, with a minimum of 1 character.
func (o NetTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v NetTag) string { return v.Key }).(pulumi.StringOutput)
}

// The value of the tag, between 0 and 255 characters.
func (o NetTagOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetTag) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NetTagArrayOutput struct{ *pulumi.OutputState }

func (NetTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetTag)(nil)).Elem()
}

func (o NetTagArrayOutput) ToNetTagArrayOutput() NetTagArrayOutput {
	return o
}

func (o NetTagArrayOutput) ToNetTagArrayOutputWithContext(ctx context.Context) NetTagArrayOutput {
	return o
}

func (o NetTagArrayOutput) Index(i pulumi.IntInput) NetTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetTag {
		return vs[0].([]NetTag)[vs[1].(int)]
	}).(NetTagOutput)
}

type NetTimeouts struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Create *string `pulumi:"create"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
	Delete *string `pulumi:"delete"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
	Read *string `pulumi:"read"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Update *string `pulumi:"update"`
}

// NetTimeoutsInput is an input type that accepts NetTimeoutsArgs and NetTimeoutsOutput values.
// You can construct a concrete instance of `NetTimeoutsInput` via:
//
//	NetTimeoutsArgs{...}
type NetTimeoutsInput interface {
	pulumi.Input

	ToNetTimeoutsOutput() NetTimeoutsOutput
	ToNetTimeoutsOutputWithContext(context.Context) NetTimeoutsOutput
}

type NetTimeoutsArgs struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Create pulumi.StringPtrInput `pulumi:"create"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
	Delete pulumi.StringPtrInput `pulumi:"delete"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
	Read pulumi.StringPtrInput `pulumi:"read"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Update pulumi.StringPtrInput `pulumi:"update"`
}

func (NetTimeoutsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetTimeouts)(nil)).Elem()
}

func (i NetTimeoutsArgs) ToNetTimeoutsOutput() NetTimeoutsOutput {
	return i.ToNetTimeoutsOutputWithContext(context.Background())
}

func (i NetTimeoutsArgs) ToNetTimeoutsOutputWithContext(ctx context.Context) NetTimeoutsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetTimeoutsOutput)
}

func (i NetTimeoutsArgs) ToNetTimeoutsPtrOutput() NetTimeoutsPtrOutput {
	return i.ToNetTimeoutsPtrOutputWithContext(context.Background())
}

func (i NetTimeoutsArgs) ToNetTimeoutsPtrOutputWithContext(ctx context.Context) NetTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetTimeoutsOutput).ToNetTimeoutsPtrOutputWithContext(ctx)
}

// NetTimeoutsPtrInput is an input type that accepts NetTimeoutsArgs, NetTimeoutsPtr and NetTimeoutsPtrOutput values.
// You can construct a concrete instance of `NetTimeoutsPtrInput` via:
//
//	        NetTimeoutsArgs{...}
//
//	or:
//
//	        nil
type NetTimeoutsPtrInput interface {
	pulumi.Input

	ToNetTimeoutsPtrOutput() NetTimeoutsPtrOutput
	ToNetTimeoutsPtrOutputWithContext(context.Context) NetTimeoutsPtrOutput
}

type netTimeoutsPtrType NetTimeoutsArgs

func NetTimeoutsPtr(v *NetTimeoutsArgs) NetTimeoutsPtrInput {
	return (*netTimeoutsPtrType)(v)
}

func (*netTimeoutsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetTimeouts)(nil)).Elem()
}

func (i *netTimeoutsPtrType) ToNetTimeoutsPtrOutput() NetTimeoutsPtrOutput {
	return i.ToNetTimeoutsPtrOutputWithContext(context.Background())
}

func (i *netTimeoutsPtrType) ToNetTimeoutsPtrOutputWithContext(ctx context.Context) NetTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetTimeoutsPtrOutput)
}

type NetTimeoutsOutput struct{ *pulumi.OutputState }

func (NetTimeoutsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetTimeouts)(nil)).Elem()
}

func (o NetTimeoutsOutput) ToNetTimeoutsOutput() NetTimeoutsOutput {
	return o
}

func (o NetTimeoutsOutput) ToNetTimeoutsOutputWithContext(ctx context.Context) NetTimeoutsOutput {
	return o
}

func (o NetTimeoutsOutput) ToNetTimeoutsPtrOutput() NetTimeoutsPtrOutput {
	return o.ToNetTimeoutsPtrOutputWithContext(context.Background())
}

func (o NetTimeoutsOutput) ToNetTimeoutsPtrOutputWithContext(ctx context.Context) NetTimeoutsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NetTimeouts) *NetTimeouts {
		return &v
	}).(NetTimeoutsPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o NetTimeoutsOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetTimeouts) *string { return v.Create }).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
func (o NetTimeoutsOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetTimeouts) *string { return v.Delete }).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
func (o NetTimeoutsOutput) Read() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetTimeouts) *string { return v.Read }).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o NetTimeoutsOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetTimeouts) *string { return v.Update }).(pulumi.StringPtrOutput)
}

type NetTimeoutsPtrOutput struct{ *pulumi.OutputState }

func (NetTimeoutsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetTimeouts)(nil)).Elem()
}

func (o NetTimeoutsPtrOutput) ToNetTimeoutsPtrOutput() NetTimeoutsPtrOutput {
	return o
}

func (o NetTimeoutsPtrOutput) ToNetTimeoutsPtrOutputWithContext(ctx context.Context) NetTimeoutsPtrOutput {
	return o
}

func (o NetTimeoutsPtrOutput) Elem() NetTimeoutsOutput {
	return o.ApplyT(func(v *NetTimeouts) NetTimeouts {
		if v != nil {
			return *v
		}
		var ret NetTimeouts
		return ret
	}).(NetTimeoutsOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o NetTimeoutsPtrOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Create
	}).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
func (o NetTimeoutsPtrOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Delete
	}).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
func (o NetTimeoutsPtrOutput) Read() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Read
	}).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o NetTimeoutsPtrOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Update
	}).(pulumi.StringPtrOutput)
}

type NicLinkNic struct {
	// If true, the NIC is deleted when the VM is terminated.
	DeleteOnVmDeletion *string `pulumi:"deleteOnVmDeletion"`
	// The device index for the NIC attachment (between `1` and `7`, both included).
	DeviceNumber *int `pulumi:"deviceNumber"`
	// The ID of the NIC to attach.
	LinkNicId *string `pulumi:"linkNicId"`
	// The state of the NIC (`available` \| `attaching` \| `in-use` \| `detaching`).
	State *string `pulumi:"state"`
	// The account ID of the owner of the VM.
	VmAccountId *string `pulumi:"vmAccountId"`
	// The ID of the VM.
	VmId *string `pulumi:"vmId"`
}

// NicLinkNicInput is an input type that accepts NicLinkNicArgs and NicLinkNicOutput values.
// You can construct a concrete instance of `NicLinkNicInput` via:
//
//	NicLinkNicArgs{...}
type NicLinkNicInput interface {
	pulumi.Input

	ToNicLinkNicOutput() NicLinkNicOutput
	ToNicLinkNicOutputWithContext(context.Context) NicLinkNicOutput
}

type NicLinkNicArgs struct {
	// If true, the NIC is deleted when the VM is terminated.
	DeleteOnVmDeletion pulumi.StringPtrInput `pulumi:"deleteOnVmDeletion"`
	// The device index for the NIC attachment (between `1` and `7`, both included).
	DeviceNumber pulumi.IntPtrInput `pulumi:"deviceNumber"`
	// The ID of the NIC to attach.
	LinkNicId pulumi.StringPtrInput `pulumi:"linkNicId"`
	// The state of the NIC (`available` \| `attaching` \| `in-use` \| `detaching`).
	State pulumi.StringPtrInput `pulumi:"state"`
	// The account ID of the owner of the VM.
	VmAccountId pulumi.StringPtrInput `pulumi:"vmAccountId"`
	// The ID of the VM.
	VmId pulumi.StringPtrInput `pulumi:"vmId"`
}

func (NicLinkNicArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NicLinkNic)(nil)).Elem()
}

func (i NicLinkNicArgs) ToNicLinkNicOutput() NicLinkNicOutput {
	return i.ToNicLinkNicOutputWithContext(context.Background())
}

func (i NicLinkNicArgs) ToNicLinkNicOutputWithContext(ctx context.Context) NicLinkNicOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NicLinkNicOutput)
}

// NicLinkNicArrayInput is an input type that accepts NicLinkNicArray and NicLinkNicArrayOutput values.
// You can construct a concrete instance of `NicLinkNicArrayInput` via:
//
//	NicLinkNicArray{ NicLinkNicArgs{...} }
type NicLinkNicArrayInput interface {
	pulumi.Input

	ToNicLinkNicArrayOutput() NicLinkNicArrayOutput
	ToNicLinkNicArrayOutputWithContext(context.Context) NicLinkNicArrayOutput
}

type NicLinkNicArray []NicLinkNicInput

func (NicLinkNicArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NicLinkNic)(nil)).Elem()
}

func (i NicLinkNicArray) ToNicLinkNicArrayOutput() NicLinkNicArrayOutput {
	return i.ToNicLinkNicArrayOutputWithContext(context.Background())
}

func (i NicLinkNicArray) ToNicLinkNicArrayOutputWithContext(ctx context.Context) NicLinkNicArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NicLinkNicArrayOutput)
}

type NicLinkNicOutput struct{ *pulumi.OutputState }

func (NicLinkNicOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NicLinkNic)(nil)).Elem()
}

func (o NicLinkNicOutput) ToNicLinkNicOutput() NicLinkNicOutput {
	return o
}

func (o NicLinkNicOutput) ToNicLinkNicOutputWithContext(ctx context.Context) NicLinkNicOutput {
	return o
}

// If true, the NIC is deleted when the VM is terminated.
func (o NicLinkNicOutput) DeleteOnVmDeletion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NicLinkNic) *string { return v.DeleteOnVmDeletion }).(pulumi.StringPtrOutput)
}

// The device index for the NIC attachment (between `1` and `7`, both included).
func (o NicLinkNicOutput) DeviceNumber() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NicLinkNic) *int { return v.DeviceNumber }).(pulumi.IntPtrOutput)
}

// The ID of the NIC to attach.
func (o NicLinkNicOutput) LinkNicId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NicLinkNic) *string { return v.LinkNicId }).(pulumi.StringPtrOutput)
}

// The state of the NIC (`available` \| `attaching` \| `in-use` \| `detaching`).
func (o NicLinkNicOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NicLinkNic) *string { return v.State }).(pulumi.StringPtrOutput)
}

// The account ID of the owner of the VM.
func (o NicLinkNicOutput) VmAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NicLinkNic) *string { return v.VmAccountId }).(pulumi.StringPtrOutput)
}

// The ID of the VM.
func (o NicLinkNicOutput) VmId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NicLinkNic) *string { return v.VmId }).(pulumi.StringPtrOutput)
}

type NicLinkNicArrayOutput struct{ *pulumi.OutputState }

func (NicLinkNicArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NicLinkNic)(nil)).Elem()
}

func (o NicLinkNicArrayOutput) ToNicLinkNicArrayOutput() NicLinkNicArrayOutput {
	return o
}

func (o NicLinkNicArrayOutput) ToNicLinkNicArrayOutputWithContext(ctx context.Context) NicLinkNicArrayOutput {
	return o
}

func (o NicLinkNicArrayOutput) Index(i pulumi.IntInput) NicLinkNicOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NicLinkNic {
		return vs[0].([]NicLinkNic)[vs[1].(int)]
	}).(NicLinkNicOutput)
}

type NicLinkPublicIp struct {
	// (Required in a Net) The ID representing the association of the public IP with the VM or the NIC.
	LinkPublicIpId *string `pulumi:"linkPublicIpId"`
	// The name of the public DNS.
	PublicDnsName *string `pulumi:"publicDnsName"`
	// The public IP associated with the NIC.
	PublicIp *string `pulumi:"publicIp"`
	// The account ID of the owner of the public IP.
	PublicIpAccountId *string `pulumi:"publicIpAccountId"`
	// The allocation ID of the public IP.
	PublicIpId *string `pulumi:"publicIpId"`
}

// NicLinkPublicIpInput is an input type that accepts NicLinkPublicIpArgs and NicLinkPublicIpOutput values.
// You can construct a concrete instance of `NicLinkPublicIpInput` via:
//
//	NicLinkPublicIpArgs{...}
type NicLinkPublicIpInput interface {
	pulumi.Input

	ToNicLinkPublicIpOutput() NicLinkPublicIpOutput
	ToNicLinkPublicIpOutputWithContext(context.Context) NicLinkPublicIpOutput
}

type NicLinkPublicIpArgs struct {
	// (Required in a Net) The ID representing the association of the public IP with the VM or the NIC.
	LinkPublicIpId pulumi.StringPtrInput `pulumi:"linkPublicIpId"`
	// The name of the public DNS.
	PublicDnsName pulumi.StringPtrInput `pulumi:"publicDnsName"`
	// The public IP associated with the NIC.
	PublicIp pulumi.StringPtrInput `pulumi:"publicIp"`
	// The account ID of the owner of the public IP.
	PublicIpAccountId pulumi.StringPtrInput `pulumi:"publicIpAccountId"`
	// The allocation ID of the public IP.
	PublicIpId pulumi.StringPtrInput `pulumi:"publicIpId"`
}

func (NicLinkPublicIpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NicLinkPublicIp)(nil)).Elem()
}

func (i NicLinkPublicIpArgs) ToNicLinkPublicIpOutput() NicLinkPublicIpOutput {
	return i.ToNicLinkPublicIpOutputWithContext(context.Background())
}

func (i NicLinkPublicIpArgs) ToNicLinkPublicIpOutputWithContext(ctx context.Context) NicLinkPublicIpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NicLinkPublicIpOutput)
}

// NicLinkPublicIpArrayInput is an input type that accepts NicLinkPublicIpArray and NicLinkPublicIpArrayOutput values.
// You can construct a concrete instance of `NicLinkPublicIpArrayInput` via:
//
//	NicLinkPublicIpArray{ NicLinkPublicIpArgs{...} }
type NicLinkPublicIpArrayInput interface {
	pulumi.Input

	ToNicLinkPublicIpArrayOutput() NicLinkPublicIpArrayOutput
	ToNicLinkPublicIpArrayOutputWithContext(context.Context) NicLinkPublicIpArrayOutput
}

type NicLinkPublicIpArray []NicLinkPublicIpInput

func (NicLinkPublicIpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NicLinkPublicIp)(nil)).Elem()
}

func (i NicLinkPublicIpArray) ToNicLinkPublicIpArrayOutput() NicLinkPublicIpArrayOutput {
	return i.ToNicLinkPublicIpArrayOutputWithContext(context.Background())
}

func (i NicLinkPublicIpArray) ToNicLinkPublicIpArrayOutputWithContext(ctx context.Context) NicLinkPublicIpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NicLinkPublicIpArrayOutput)
}

type NicLinkPublicIpOutput struct{ *pulumi.OutputState }

func (NicLinkPublicIpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NicLinkPublicIp)(nil)).Elem()
}

func (o NicLinkPublicIpOutput) ToNicLinkPublicIpOutput() NicLinkPublicIpOutput {
	return o
}

func (o NicLinkPublicIpOutput) ToNicLinkPublicIpOutputWithContext(ctx context.Context) NicLinkPublicIpOutput {
	return o
}

// (Required in a Net) The ID representing the association of the public IP with the VM or the NIC.
func (o NicLinkPublicIpOutput) LinkPublicIpId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NicLinkPublicIp) *string { return v.LinkPublicIpId }).(pulumi.StringPtrOutput)
}

// The name of the public DNS.
func (o NicLinkPublicIpOutput) PublicDnsName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NicLinkPublicIp) *string { return v.PublicDnsName }).(pulumi.StringPtrOutput)
}

// The public IP associated with the NIC.
func (o NicLinkPublicIpOutput) PublicIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NicLinkPublicIp) *string { return v.PublicIp }).(pulumi.StringPtrOutput)
}

// The account ID of the owner of the public IP.
func (o NicLinkPublicIpOutput) PublicIpAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NicLinkPublicIp) *string { return v.PublicIpAccountId }).(pulumi.StringPtrOutput)
}

// The allocation ID of the public IP.
func (o NicLinkPublicIpOutput) PublicIpId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NicLinkPublicIp) *string { return v.PublicIpId }).(pulumi.StringPtrOutput)
}

type NicLinkPublicIpArrayOutput struct{ *pulumi.OutputState }

func (NicLinkPublicIpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NicLinkPublicIp)(nil)).Elem()
}

func (o NicLinkPublicIpArrayOutput) ToNicLinkPublicIpArrayOutput() NicLinkPublicIpArrayOutput {
	return o
}

func (o NicLinkPublicIpArrayOutput) ToNicLinkPublicIpArrayOutputWithContext(ctx context.Context) NicLinkPublicIpArrayOutput {
	return o
}

func (o NicLinkPublicIpArrayOutput) Index(i pulumi.IntInput) NicLinkPublicIpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NicLinkPublicIp {
		return vs[0].([]NicLinkPublicIp)[vs[1].(int)]
	}).(NicLinkPublicIpOutput)
}

type NicPrivateIpType struct {
	// If true, the IP is the primary private IP of the NIC.
	IsPrimary *bool `pulumi:"isPrimary"`
	// Information about the public IP association.
	LinkPublicIps []NicPrivateIpLinkPublicIp `pulumi:"linkPublicIps"`
	// The name of the private DNS.
	PrivateDnsName *string `pulumi:"privateDnsName"`
	// The private IP of the NIC.
	PrivateIp *string `pulumi:"privateIp"`
}

// NicPrivateIpTypeInput is an input type that accepts NicPrivateIpTypeArgs and NicPrivateIpTypeOutput values.
// You can construct a concrete instance of `NicPrivateIpTypeInput` via:
//
//	NicPrivateIpTypeArgs{...}
type NicPrivateIpTypeInput interface {
	pulumi.Input

	ToNicPrivateIpTypeOutput() NicPrivateIpTypeOutput
	ToNicPrivateIpTypeOutputWithContext(context.Context) NicPrivateIpTypeOutput
}

type NicPrivateIpTypeArgs struct {
	// If true, the IP is the primary private IP of the NIC.
	IsPrimary pulumi.BoolPtrInput `pulumi:"isPrimary"`
	// Information about the public IP association.
	LinkPublicIps NicPrivateIpLinkPublicIpArrayInput `pulumi:"linkPublicIps"`
	// The name of the private DNS.
	PrivateDnsName pulumi.StringPtrInput `pulumi:"privateDnsName"`
	// The private IP of the NIC.
	PrivateIp pulumi.StringPtrInput `pulumi:"privateIp"`
}

func (NicPrivateIpTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NicPrivateIpType)(nil)).Elem()
}

func (i NicPrivateIpTypeArgs) ToNicPrivateIpTypeOutput() NicPrivateIpTypeOutput {
	return i.ToNicPrivateIpTypeOutputWithContext(context.Background())
}

func (i NicPrivateIpTypeArgs) ToNicPrivateIpTypeOutputWithContext(ctx context.Context) NicPrivateIpTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NicPrivateIpTypeOutput)
}

// NicPrivateIpTypeArrayInput is an input type that accepts NicPrivateIpTypeArray and NicPrivateIpTypeArrayOutput values.
// You can construct a concrete instance of `NicPrivateIpTypeArrayInput` via:
//
//	NicPrivateIpTypeArray{ NicPrivateIpTypeArgs{...} }
type NicPrivateIpTypeArrayInput interface {
	pulumi.Input

	ToNicPrivateIpTypeArrayOutput() NicPrivateIpTypeArrayOutput
	ToNicPrivateIpTypeArrayOutputWithContext(context.Context) NicPrivateIpTypeArrayOutput
}

type NicPrivateIpTypeArray []NicPrivateIpTypeInput

func (NicPrivateIpTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NicPrivateIpType)(nil)).Elem()
}

func (i NicPrivateIpTypeArray) ToNicPrivateIpTypeArrayOutput() NicPrivateIpTypeArrayOutput {
	return i.ToNicPrivateIpTypeArrayOutputWithContext(context.Background())
}

func (i NicPrivateIpTypeArray) ToNicPrivateIpTypeArrayOutputWithContext(ctx context.Context) NicPrivateIpTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NicPrivateIpTypeArrayOutput)
}

type NicPrivateIpTypeOutput struct{ *pulumi.OutputState }

func (NicPrivateIpTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NicPrivateIpType)(nil)).Elem()
}

func (o NicPrivateIpTypeOutput) ToNicPrivateIpTypeOutput() NicPrivateIpTypeOutput {
	return o
}

func (o NicPrivateIpTypeOutput) ToNicPrivateIpTypeOutputWithContext(ctx context.Context) NicPrivateIpTypeOutput {
	return o
}

// If true, the IP is the primary private IP of the NIC.
func (o NicPrivateIpTypeOutput) IsPrimary() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NicPrivateIpType) *bool { return v.IsPrimary }).(pulumi.BoolPtrOutput)
}

// Information about the public IP association.
func (o NicPrivateIpTypeOutput) LinkPublicIps() NicPrivateIpLinkPublicIpArrayOutput {
	return o.ApplyT(func(v NicPrivateIpType) []NicPrivateIpLinkPublicIp { return v.LinkPublicIps }).(NicPrivateIpLinkPublicIpArrayOutput)
}

// The name of the private DNS.
func (o NicPrivateIpTypeOutput) PrivateDnsName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NicPrivateIpType) *string { return v.PrivateDnsName }).(pulumi.StringPtrOutput)
}

// The private IP of the NIC.
func (o NicPrivateIpTypeOutput) PrivateIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NicPrivateIpType) *string { return v.PrivateIp }).(pulumi.StringPtrOutput)
}

type NicPrivateIpTypeArrayOutput struct{ *pulumi.OutputState }

func (NicPrivateIpTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NicPrivateIpType)(nil)).Elem()
}

func (o NicPrivateIpTypeArrayOutput) ToNicPrivateIpTypeArrayOutput() NicPrivateIpTypeArrayOutput {
	return o
}

func (o NicPrivateIpTypeArrayOutput) ToNicPrivateIpTypeArrayOutputWithContext(ctx context.Context) NicPrivateIpTypeArrayOutput {
	return o
}

func (o NicPrivateIpTypeArrayOutput) Index(i pulumi.IntInput) NicPrivateIpTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NicPrivateIpType {
		return vs[0].([]NicPrivateIpType)[vs[1].(int)]
	}).(NicPrivateIpTypeOutput)
}

type NicPrivateIpLinkPublicIp struct {
	// (Required in a Net) The ID representing the association of the public IP with the VM or the NIC.
	LinkPublicIpId *string `pulumi:"linkPublicIpId"`
	// The name of the public DNS.
	PublicDnsName *string `pulumi:"publicDnsName"`
	// The public IP associated with the NIC.
	PublicIp *string `pulumi:"publicIp"`
	// The account ID of the owner of the public IP.
	PublicIpAccountId *string `pulumi:"publicIpAccountId"`
	// The allocation ID of the public IP.
	PublicIpId *string `pulumi:"publicIpId"`
}

// NicPrivateIpLinkPublicIpInput is an input type that accepts NicPrivateIpLinkPublicIpArgs and NicPrivateIpLinkPublicIpOutput values.
// You can construct a concrete instance of `NicPrivateIpLinkPublicIpInput` via:
//
//	NicPrivateIpLinkPublicIpArgs{...}
type NicPrivateIpLinkPublicIpInput interface {
	pulumi.Input

	ToNicPrivateIpLinkPublicIpOutput() NicPrivateIpLinkPublicIpOutput
	ToNicPrivateIpLinkPublicIpOutputWithContext(context.Context) NicPrivateIpLinkPublicIpOutput
}

type NicPrivateIpLinkPublicIpArgs struct {
	// (Required in a Net) The ID representing the association of the public IP with the VM or the NIC.
	LinkPublicIpId pulumi.StringPtrInput `pulumi:"linkPublicIpId"`
	// The name of the public DNS.
	PublicDnsName pulumi.StringPtrInput `pulumi:"publicDnsName"`
	// The public IP associated with the NIC.
	PublicIp pulumi.StringPtrInput `pulumi:"publicIp"`
	// The account ID of the owner of the public IP.
	PublicIpAccountId pulumi.StringPtrInput `pulumi:"publicIpAccountId"`
	// The allocation ID of the public IP.
	PublicIpId pulumi.StringPtrInput `pulumi:"publicIpId"`
}

func (NicPrivateIpLinkPublicIpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NicPrivateIpLinkPublicIp)(nil)).Elem()
}

func (i NicPrivateIpLinkPublicIpArgs) ToNicPrivateIpLinkPublicIpOutput() NicPrivateIpLinkPublicIpOutput {
	return i.ToNicPrivateIpLinkPublicIpOutputWithContext(context.Background())
}

func (i NicPrivateIpLinkPublicIpArgs) ToNicPrivateIpLinkPublicIpOutputWithContext(ctx context.Context) NicPrivateIpLinkPublicIpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NicPrivateIpLinkPublicIpOutput)
}

// NicPrivateIpLinkPublicIpArrayInput is an input type that accepts NicPrivateIpLinkPublicIpArray and NicPrivateIpLinkPublicIpArrayOutput values.
// You can construct a concrete instance of `NicPrivateIpLinkPublicIpArrayInput` via:
//
//	NicPrivateIpLinkPublicIpArray{ NicPrivateIpLinkPublicIpArgs{...} }
type NicPrivateIpLinkPublicIpArrayInput interface {
	pulumi.Input

	ToNicPrivateIpLinkPublicIpArrayOutput() NicPrivateIpLinkPublicIpArrayOutput
	ToNicPrivateIpLinkPublicIpArrayOutputWithContext(context.Context) NicPrivateIpLinkPublicIpArrayOutput
}

type NicPrivateIpLinkPublicIpArray []NicPrivateIpLinkPublicIpInput

func (NicPrivateIpLinkPublicIpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NicPrivateIpLinkPublicIp)(nil)).Elem()
}

func (i NicPrivateIpLinkPublicIpArray) ToNicPrivateIpLinkPublicIpArrayOutput() NicPrivateIpLinkPublicIpArrayOutput {
	return i.ToNicPrivateIpLinkPublicIpArrayOutputWithContext(context.Background())
}

func (i NicPrivateIpLinkPublicIpArray) ToNicPrivateIpLinkPublicIpArrayOutputWithContext(ctx context.Context) NicPrivateIpLinkPublicIpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NicPrivateIpLinkPublicIpArrayOutput)
}

type NicPrivateIpLinkPublicIpOutput struct{ *pulumi.OutputState }

func (NicPrivateIpLinkPublicIpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NicPrivateIpLinkPublicIp)(nil)).Elem()
}

func (o NicPrivateIpLinkPublicIpOutput) ToNicPrivateIpLinkPublicIpOutput() NicPrivateIpLinkPublicIpOutput {
	return o
}

func (o NicPrivateIpLinkPublicIpOutput) ToNicPrivateIpLinkPublicIpOutputWithContext(ctx context.Context) NicPrivateIpLinkPublicIpOutput {
	return o
}

// (Required in a Net) The ID representing the association of the public IP with the VM or the NIC.
func (o NicPrivateIpLinkPublicIpOutput) LinkPublicIpId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NicPrivateIpLinkPublicIp) *string { return v.LinkPublicIpId }).(pulumi.StringPtrOutput)
}

// The name of the public DNS.
func (o NicPrivateIpLinkPublicIpOutput) PublicDnsName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NicPrivateIpLinkPublicIp) *string { return v.PublicDnsName }).(pulumi.StringPtrOutput)
}

// The public IP associated with the NIC.
func (o NicPrivateIpLinkPublicIpOutput) PublicIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NicPrivateIpLinkPublicIp) *string { return v.PublicIp }).(pulumi.StringPtrOutput)
}

// The account ID of the owner of the public IP.
func (o NicPrivateIpLinkPublicIpOutput) PublicIpAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NicPrivateIpLinkPublicIp) *string { return v.PublicIpAccountId }).(pulumi.StringPtrOutput)
}

// The allocation ID of the public IP.
func (o NicPrivateIpLinkPublicIpOutput) PublicIpId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NicPrivateIpLinkPublicIp) *string { return v.PublicIpId }).(pulumi.StringPtrOutput)
}

type NicPrivateIpLinkPublicIpArrayOutput struct{ *pulumi.OutputState }

func (NicPrivateIpLinkPublicIpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NicPrivateIpLinkPublicIp)(nil)).Elem()
}

func (o NicPrivateIpLinkPublicIpArrayOutput) ToNicPrivateIpLinkPublicIpArrayOutput() NicPrivateIpLinkPublicIpArrayOutput {
	return o
}

func (o NicPrivateIpLinkPublicIpArrayOutput) ToNicPrivateIpLinkPublicIpArrayOutputWithContext(ctx context.Context) NicPrivateIpLinkPublicIpArrayOutput {
	return o
}

func (o NicPrivateIpLinkPublicIpArrayOutput) Index(i pulumi.IntInput) NicPrivateIpLinkPublicIpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NicPrivateIpLinkPublicIp {
		return vs[0].([]NicPrivateIpLinkPublicIp)[vs[1].(int)]
	}).(NicPrivateIpLinkPublicIpOutput)
}

type NicSecurityGroup struct {
	// The ID of the security group.
	SecurityGroupId *string `pulumi:"securityGroupId"`
	// The name of the security group.
	SecurityGroupName *string `pulumi:"securityGroupName"`
}

// NicSecurityGroupInput is an input type that accepts NicSecurityGroupArgs and NicSecurityGroupOutput values.
// You can construct a concrete instance of `NicSecurityGroupInput` via:
//
//	NicSecurityGroupArgs{...}
type NicSecurityGroupInput interface {
	pulumi.Input

	ToNicSecurityGroupOutput() NicSecurityGroupOutput
	ToNicSecurityGroupOutputWithContext(context.Context) NicSecurityGroupOutput
}

type NicSecurityGroupArgs struct {
	// The ID of the security group.
	SecurityGroupId pulumi.StringPtrInput `pulumi:"securityGroupId"`
	// The name of the security group.
	SecurityGroupName pulumi.StringPtrInput `pulumi:"securityGroupName"`
}

func (NicSecurityGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NicSecurityGroup)(nil)).Elem()
}

func (i NicSecurityGroupArgs) ToNicSecurityGroupOutput() NicSecurityGroupOutput {
	return i.ToNicSecurityGroupOutputWithContext(context.Background())
}

func (i NicSecurityGroupArgs) ToNicSecurityGroupOutputWithContext(ctx context.Context) NicSecurityGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NicSecurityGroupOutput)
}

// NicSecurityGroupArrayInput is an input type that accepts NicSecurityGroupArray and NicSecurityGroupArrayOutput values.
// You can construct a concrete instance of `NicSecurityGroupArrayInput` via:
//
//	NicSecurityGroupArray{ NicSecurityGroupArgs{...} }
type NicSecurityGroupArrayInput interface {
	pulumi.Input

	ToNicSecurityGroupArrayOutput() NicSecurityGroupArrayOutput
	ToNicSecurityGroupArrayOutputWithContext(context.Context) NicSecurityGroupArrayOutput
}

type NicSecurityGroupArray []NicSecurityGroupInput

func (NicSecurityGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NicSecurityGroup)(nil)).Elem()
}

func (i NicSecurityGroupArray) ToNicSecurityGroupArrayOutput() NicSecurityGroupArrayOutput {
	return i.ToNicSecurityGroupArrayOutputWithContext(context.Background())
}

func (i NicSecurityGroupArray) ToNicSecurityGroupArrayOutputWithContext(ctx context.Context) NicSecurityGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NicSecurityGroupArrayOutput)
}

type NicSecurityGroupOutput struct{ *pulumi.OutputState }

func (NicSecurityGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NicSecurityGroup)(nil)).Elem()
}

func (o NicSecurityGroupOutput) ToNicSecurityGroupOutput() NicSecurityGroupOutput {
	return o
}

func (o NicSecurityGroupOutput) ToNicSecurityGroupOutputWithContext(ctx context.Context) NicSecurityGroupOutput {
	return o
}

// The ID of the security group.
func (o NicSecurityGroupOutput) SecurityGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NicSecurityGroup) *string { return v.SecurityGroupId }).(pulumi.StringPtrOutput)
}

// The name of the security group.
func (o NicSecurityGroupOutput) SecurityGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NicSecurityGroup) *string { return v.SecurityGroupName }).(pulumi.StringPtrOutput)
}

type NicSecurityGroupArrayOutput struct{ *pulumi.OutputState }

func (NicSecurityGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NicSecurityGroup)(nil)).Elem()
}

func (o NicSecurityGroupArrayOutput) ToNicSecurityGroupArrayOutput() NicSecurityGroupArrayOutput {
	return o
}

func (o NicSecurityGroupArrayOutput) ToNicSecurityGroupArrayOutputWithContext(ctx context.Context) NicSecurityGroupArrayOutput {
	return o
}

func (o NicSecurityGroupArrayOutput) Index(i pulumi.IntInput) NicSecurityGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NicSecurityGroup {
		return vs[0].([]NicSecurityGroup)[vs[1].(int)]
	}).(NicSecurityGroupOutput)
}

type NicTag struct {
	// The key of the tag, with a minimum of 1 character.
	Key *string `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value *string `pulumi:"value"`
}

// NicTagInput is an input type that accepts NicTagArgs and NicTagOutput values.
// You can construct a concrete instance of `NicTagInput` via:
//
//	NicTagArgs{...}
type NicTagInput interface {
	pulumi.Input

	ToNicTagOutput() NicTagOutput
	ToNicTagOutputWithContext(context.Context) NicTagOutput
}

type NicTagArgs struct {
	// The key of the tag, with a minimum of 1 character.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (NicTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NicTag)(nil)).Elem()
}

func (i NicTagArgs) ToNicTagOutput() NicTagOutput {
	return i.ToNicTagOutputWithContext(context.Background())
}

func (i NicTagArgs) ToNicTagOutputWithContext(ctx context.Context) NicTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NicTagOutput)
}

// NicTagArrayInput is an input type that accepts NicTagArray and NicTagArrayOutput values.
// You can construct a concrete instance of `NicTagArrayInput` via:
//
//	NicTagArray{ NicTagArgs{...} }
type NicTagArrayInput interface {
	pulumi.Input

	ToNicTagArrayOutput() NicTagArrayOutput
	ToNicTagArrayOutputWithContext(context.Context) NicTagArrayOutput
}

type NicTagArray []NicTagInput

func (NicTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NicTag)(nil)).Elem()
}

func (i NicTagArray) ToNicTagArrayOutput() NicTagArrayOutput {
	return i.ToNicTagArrayOutputWithContext(context.Background())
}

func (i NicTagArray) ToNicTagArrayOutputWithContext(ctx context.Context) NicTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NicTagArrayOutput)
}

type NicTagOutput struct{ *pulumi.OutputState }

func (NicTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NicTag)(nil)).Elem()
}

func (o NicTagOutput) ToNicTagOutput() NicTagOutput {
	return o
}

func (o NicTagOutput) ToNicTagOutputWithContext(ctx context.Context) NicTagOutput {
	return o
}

// The key of the tag, with a minimum of 1 character.
func (o NicTagOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NicTag) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The value of the tag, between 0 and 255 characters.
func (o NicTagOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NicTag) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NicTagArrayOutput struct{ *pulumi.OutputState }

func (NicTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NicTag)(nil)).Elem()
}

func (o NicTagArrayOutput) ToNicTagArrayOutput() NicTagArrayOutput {
	return o
}

func (o NicTagArrayOutput) ToNicTagArrayOutputWithContext(ctx context.Context) NicTagArrayOutput {
	return o
}

func (o NicTagArrayOutput) Index(i pulumi.IntInput) NicTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NicTag {
		return vs[0].([]NicTag)[vs[1].(int)]
	}).(NicTagOutput)
}

type OutboundRuleRule struct {
	FromPortRange         *int                                   `pulumi:"fromPortRange"`
	IpProtocol            *string                                `pulumi:"ipProtocol"`
	IpRanges              []string                               `pulumi:"ipRanges"`
	SecurityGroupsMembers []OutboundRuleRuleSecurityGroupsMember `pulumi:"securityGroupsMembers"`
	ServiceIds            []string                               `pulumi:"serviceIds"`
	ToPortRange           *int                                   `pulumi:"toPortRange"`
}

// OutboundRuleRuleInput is an input type that accepts OutboundRuleRuleArgs and OutboundRuleRuleOutput values.
// You can construct a concrete instance of `OutboundRuleRuleInput` via:
//
//	OutboundRuleRuleArgs{...}
type OutboundRuleRuleInput interface {
	pulumi.Input

	ToOutboundRuleRuleOutput() OutboundRuleRuleOutput
	ToOutboundRuleRuleOutputWithContext(context.Context) OutboundRuleRuleOutput
}

type OutboundRuleRuleArgs struct {
	FromPortRange         pulumi.IntPtrInput                             `pulumi:"fromPortRange"`
	IpProtocol            pulumi.StringPtrInput                          `pulumi:"ipProtocol"`
	IpRanges              pulumi.StringArrayInput                        `pulumi:"ipRanges"`
	SecurityGroupsMembers OutboundRuleRuleSecurityGroupsMemberArrayInput `pulumi:"securityGroupsMembers"`
	ServiceIds            pulumi.StringArrayInput                        `pulumi:"serviceIds"`
	ToPortRange           pulumi.IntPtrInput                             `pulumi:"toPortRange"`
}

func (OutboundRuleRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OutboundRuleRule)(nil)).Elem()
}

func (i OutboundRuleRuleArgs) ToOutboundRuleRuleOutput() OutboundRuleRuleOutput {
	return i.ToOutboundRuleRuleOutputWithContext(context.Background())
}

func (i OutboundRuleRuleArgs) ToOutboundRuleRuleOutputWithContext(ctx context.Context) OutboundRuleRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OutboundRuleRuleOutput)
}

// OutboundRuleRuleArrayInput is an input type that accepts OutboundRuleRuleArray and OutboundRuleRuleArrayOutput values.
// You can construct a concrete instance of `OutboundRuleRuleArrayInput` via:
//
//	OutboundRuleRuleArray{ OutboundRuleRuleArgs{...} }
type OutboundRuleRuleArrayInput interface {
	pulumi.Input

	ToOutboundRuleRuleArrayOutput() OutboundRuleRuleArrayOutput
	ToOutboundRuleRuleArrayOutputWithContext(context.Context) OutboundRuleRuleArrayOutput
}

type OutboundRuleRuleArray []OutboundRuleRuleInput

func (OutboundRuleRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OutboundRuleRule)(nil)).Elem()
}

func (i OutboundRuleRuleArray) ToOutboundRuleRuleArrayOutput() OutboundRuleRuleArrayOutput {
	return i.ToOutboundRuleRuleArrayOutputWithContext(context.Background())
}

func (i OutboundRuleRuleArray) ToOutboundRuleRuleArrayOutputWithContext(ctx context.Context) OutboundRuleRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OutboundRuleRuleArrayOutput)
}

type OutboundRuleRuleOutput struct{ *pulumi.OutputState }

func (OutboundRuleRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OutboundRuleRule)(nil)).Elem()
}

func (o OutboundRuleRuleOutput) ToOutboundRuleRuleOutput() OutboundRuleRuleOutput {
	return o
}

func (o OutboundRuleRuleOutput) ToOutboundRuleRuleOutputWithContext(ctx context.Context) OutboundRuleRuleOutput {
	return o
}

func (o OutboundRuleRuleOutput) FromPortRange() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OutboundRuleRule) *int { return v.FromPortRange }).(pulumi.IntPtrOutput)
}

func (o OutboundRuleRuleOutput) IpProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OutboundRuleRule) *string { return v.IpProtocol }).(pulumi.StringPtrOutput)
}

func (o OutboundRuleRuleOutput) IpRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v OutboundRuleRule) []string { return v.IpRanges }).(pulumi.StringArrayOutput)
}

func (o OutboundRuleRuleOutput) SecurityGroupsMembers() OutboundRuleRuleSecurityGroupsMemberArrayOutput {
	return o.ApplyT(func(v OutboundRuleRule) []OutboundRuleRuleSecurityGroupsMember { return v.SecurityGroupsMembers }).(OutboundRuleRuleSecurityGroupsMemberArrayOutput)
}

func (o OutboundRuleRuleOutput) ServiceIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v OutboundRuleRule) []string { return v.ServiceIds }).(pulumi.StringArrayOutput)
}

func (o OutboundRuleRuleOutput) ToPortRange() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OutboundRuleRule) *int { return v.ToPortRange }).(pulumi.IntPtrOutput)
}

type OutboundRuleRuleArrayOutput struct{ *pulumi.OutputState }

func (OutboundRuleRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OutboundRuleRule)(nil)).Elem()
}

func (o OutboundRuleRuleArrayOutput) ToOutboundRuleRuleArrayOutput() OutboundRuleRuleArrayOutput {
	return o
}

func (o OutboundRuleRuleArrayOutput) ToOutboundRuleRuleArrayOutputWithContext(ctx context.Context) OutboundRuleRuleArrayOutput {
	return o
}

func (o OutboundRuleRuleArrayOutput) Index(i pulumi.IntInput) OutboundRuleRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OutboundRuleRule {
		return vs[0].([]OutboundRuleRule)[vs[1].(int)]
	}).(OutboundRuleRuleOutput)
}

type OutboundRuleRuleSecurityGroupsMember struct {
	AccountId         *string `pulumi:"accountId"`
	SecurityGroupId   *string `pulumi:"securityGroupId"`
	SecurityGroupName *string `pulumi:"securityGroupName"`
}

// OutboundRuleRuleSecurityGroupsMemberInput is an input type that accepts OutboundRuleRuleSecurityGroupsMemberArgs and OutboundRuleRuleSecurityGroupsMemberOutput values.
// You can construct a concrete instance of `OutboundRuleRuleSecurityGroupsMemberInput` via:
//
//	OutboundRuleRuleSecurityGroupsMemberArgs{...}
type OutboundRuleRuleSecurityGroupsMemberInput interface {
	pulumi.Input

	ToOutboundRuleRuleSecurityGroupsMemberOutput() OutboundRuleRuleSecurityGroupsMemberOutput
	ToOutboundRuleRuleSecurityGroupsMemberOutputWithContext(context.Context) OutboundRuleRuleSecurityGroupsMemberOutput
}

type OutboundRuleRuleSecurityGroupsMemberArgs struct {
	AccountId         pulumi.StringPtrInput `pulumi:"accountId"`
	SecurityGroupId   pulumi.StringPtrInput `pulumi:"securityGroupId"`
	SecurityGroupName pulumi.StringPtrInput `pulumi:"securityGroupName"`
}

func (OutboundRuleRuleSecurityGroupsMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OutboundRuleRuleSecurityGroupsMember)(nil)).Elem()
}

func (i OutboundRuleRuleSecurityGroupsMemberArgs) ToOutboundRuleRuleSecurityGroupsMemberOutput() OutboundRuleRuleSecurityGroupsMemberOutput {
	return i.ToOutboundRuleRuleSecurityGroupsMemberOutputWithContext(context.Background())
}

func (i OutboundRuleRuleSecurityGroupsMemberArgs) ToOutboundRuleRuleSecurityGroupsMemberOutputWithContext(ctx context.Context) OutboundRuleRuleSecurityGroupsMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OutboundRuleRuleSecurityGroupsMemberOutput)
}

// OutboundRuleRuleSecurityGroupsMemberArrayInput is an input type that accepts OutboundRuleRuleSecurityGroupsMemberArray and OutboundRuleRuleSecurityGroupsMemberArrayOutput values.
// You can construct a concrete instance of `OutboundRuleRuleSecurityGroupsMemberArrayInput` via:
//
//	OutboundRuleRuleSecurityGroupsMemberArray{ OutboundRuleRuleSecurityGroupsMemberArgs{...} }
type OutboundRuleRuleSecurityGroupsMemberArrayInput interface {
	pulumi.Input

	ToOutboundRuleRuleSecurityGroupsMemberArrayOutput() OutboundRuleRuleSecurityGroupsMemberArrayOutput
	ToOutboundRuleRuleSecurityGroupsMemberArrayOutputWithContext(context.Context) OutboundRuleRuleSecurityGroupsMemberArrayOutput
}

type OutboundRuleRuleSecurityGroupsMemberArray []OutboundRuleRuleSecurityGroupsMemberInput

func (OutboundRuleRuleSecurityGroupsMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OutboundRuleRuleSecurityGroupsMember)(nil)).Elem()
}

func (i OutboundRuleRuleSecurityGroupsMemberArray) ToOutboundRuleRuleSecurityGroupsMemberArrayOutput() OutboundRuleRuleSecurityGroupsMemberArrayOutput {
	return i.ToOutboundRuleRuleSecurityGroupsMemberArrayOutputWithContext(context.Background())
}

func (i OutboundRuleRuleSecurityGroupsMemberArray) ToOutboundRuleRuleSecurityGroupsMemberArrayOutputWithContext(ctx context.Context) OutboundRuleRuleSecurityGroupsMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OutboundRuleRuleSecurityGroupsMemberArrayOutput)
}

type OutboundRuleRuleSecurityGroupsMemberOutput struct{ *pulumi.OutputState }

func (OutboundRuleRuleSecurityGroupsMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OutboundRuleRuleSecurityGroupsMember)(nil)).Elem()
}

func (o OutboundRuleRuleSecurityGroupsMemberOutput) ToOutboundRuleRuleSecurityGroupsMemberOutput() OutboundRuleRuleSecurityGroupsMemberOutput {
	return o
}

func (o OutboundRuleRuleSecurityGroupsMemberOutput) ToOutboundRuleRuleSecurityGroupsMemberOutputWithContext(ctx context.Context) OutboundRuleRuleSecurityGroupsMemberOutput {
	return o
}

func (o OutboundRuleRuleSecurityGroupsMemberOutput) AccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OutboundRuleRuleSecurityGroupsMember) *string { return v.AccountId }).(pulumi.StringPtrOutput)
}

func (o OutboundRuleRuleSecurityGroupsMemberOutput) SecurityGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OutboundRuleRuleSecurityGroupsMember) *string { return v.SecurityGroupId }).(pulumi.StringPtrOutput)
}

func (o OutboundRuleRuleSecurityGroupsMemberOutput) SecurityGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OutboundRuleRuleSecurityGroupsMember) *string { return v.SecurityGroupName }).(pulumi.StringPtrOutput)
}

type OutboundRuleRuleSecurityGroupsMemberArrayOutput struct{ *pulumi.OutputState }

func (OutboundRuleRuleSecurityGroupsMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OutboundRuleRuleSecurityGroupsMember)(nil)).Elem()
}

func (o OutboundRuleRuleSecurityGroupsMemberArrayOutput) ToOutboundRuleRuleSecurityGroupsMemberArrayOutput() OutboundRuleRuleSecurityGroupsMemberArrayOutput {
	return o
}

func (o OutboundRuleRuleSecurityGroupsMemberArrayOutput) ToOutboundRuleRuleSecurityGroupsMemberArrayOutputWithContext(ctx context.Context) OutboundRuleRuleSecurityGroupsMemberArrayOutput {
	return o
}

func (o OutboundRuleRuleSecurityGroupsMemberArrayOutput) Index(i pulumi.IntInput) OutboundRuleRuleSecurityGroupsMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OutboundRuleRuleSecurityGroupsMember {
		return vs[0].([]OutboundRuleRuleSecurityGroupsMember)[vs[1].(int)]
	}).(OutboundRuleRuleSecurityGroupsMemberOutput)
}

type ProviderEndpoint struct {
	// Use this to override the default service endpoint URL
	Api *string `pulumi:"api"`
}

// ProviderEndpointInput is an input type that accepts ProviderEndpointArgs and ProviderEndpointOutput values.
// You can construct a concrete instance of `ProviderEndpointInput` via:
//
//	ProviderEndpointArgs{...}
type ProviderEndpointInput interface {
	pulumi.Input

	ToProviderEndpointOutput() ProviderEndpointOutput
	ToProviderEndpointOutputWithContext(context.Context) ProviderEndpointOutput
}

type ProviderEndpointArgs struct {
	// Use this to override the default service endpoint URL
	Api pulumi.StringPtrInput `pulumi:"api"`
}

func (ProviderEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderEndpoint)(nil)).Elem()
}

func (i ProviderEndpointArgs) ToProviderEndpointOutput() ProviderEndpointOutput {
	return i.ToProviderEndpointOutputWithContext(context.Background())
}

func (i ProviderEndpointArgs) ToProviderEndpointOutputWithContext(ctx context.Context) ProviderEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderEndpointOutput)
}

// ProviderEndpointArrayInput is an input type that accepts ProviderEndpointArray and ProviderEndpointArrayOutput values.
// You can construct a concrete instance of `ProviderEndpointArrayInput` via:
//
//	ProviderEndpointArray{ ProviderEndpointArgs{...} }
type ProviderEndpointArrayInput interface {
	pulumi.Input

	ToProviderEndpointArrayOutput() ProviderEndpointArrayOutput
	ToProviderEndpointArrayOutputWithContext(context.Context) ProviderEndpointArrayOutput
}

type ProviderEndpointArray []ProviderEndpointInput

func (ProviderEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProviderEndpoint)(nil)).Elem()
}

func (i ProviderEndpointArray) ToProviderEndpointArrayOutput() ProviderEndpointArrayOutput {
	return i.ToProviderEndpointArrayOutputWithContext(context.Background())
}

func (i ProviderEndpointArray) ToProviderEndpointArrayOutputWithContext(ctx context.Context) ProviderEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderEndpointArrayOutput)
}

type ProviderEndpointOutput struct{ *pulumi.OutputState }

func (ProviderEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderEndpoint)(nil)).Elem()
}

func (o ProviderEndpointOutput) ToProviderEndpointOutput() ProviderEndpointOutput {
	return o
}

func (o ProviderEndpointOutput) ToProviderEndpointOutputWithContext(ctx context.Context) ProviderEndpointOutput {
	return o
}

// Use this to override the default service endpoint URL
func (o ProviderEndpointOutput) Api() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderEndpoint) *string { return v.Api }).(pulumi.StringPtrOutput)
}

type ProviderEndpointArrayOutput struct{ *pulumi.OutputState }

func (ProviderEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProviderEndpoint)(nil)).Elem()
}

func (o ProviderEndpointArrayOutput) ToProviderEndpointArrayOutput() ProviderEndpointArrayOutput {
	return o
}

func (o ProviderEndpointArrayOutput) ToProviderEndpointArrayOutputWithContext(ctx context.Context) ProviderEndpointArrayOutput {
	return o
}

func (o ProviderEndpointArrayOutput) Index(i pulumi.IntInput) ProviderEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProviderEndpoint {
		return vs[0].([]ProviderEndpoint)[vs[1].(int)]
	}).(ProviderEndpointOutput)
}

type PublicIpLinkTag struct {
	Key   *string `pulumi:"key"`
	Value *string `pulumi:"value"`
}

// PublicIpLinkTagInput is an input type that accepts PublicIpLinkTagArgs and PublicIpLinkTagOutput values.
// You can construct a concrete instance of `PublicIpLinkTagInput` via:
//
//	PublicIpLinkTagArgs{...}
type PublicIpLinkTagInput interface {
	pulumi.Input

	ToPublicIpLinkTagOutput() PublicIpLinkTagOutput
	ToPublicIpLinkTagOutputWithContext(context.Context) PublicIpLinkTagOutput
}

type PublicIpLinkTagArgs struct {
	Key   pulumi.StringPtrInput `pulumi:"key"`
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (PublicIpLinkTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicIpLinkTag)(nil)).Elem()
}

func (i PublicIpLinkTagArgs) ToPublicIpLinkTagOutput() PublicIpLinkTagOutput {
	return i.ToPublicIpLinkTagOutputWithContext(context.Background())
}

func (i PublicIpLinkTagArgs) ToPublicIpLinkTagOutputWithContext(ctx context.Context) PublicIpLinkTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIpLinkTagOutput)
}

// PublicIpLinkTagArrayInput is an input type that accepts PublicIpLinkTagArray and PublicIpLinkTagArrayOutput values.
// You can construct a concrete instance of `PublicIpLinkTagArrayInput` via:
//
//	PublicIpLinkTagArray{ PublicIpLinkTagArgs{...} }
type PublicIpLinkTagArrayInput interface {
	pulumi.Input

	ToPublicIpLinkTagArrayOutput() PublicIpLinkTagArrayOutput
	ToPublicIpLinkTagArrayOutputWithContext(context.Context) PublicIpLinkTagArrayOutput
}

type PublicIpLinkTagArray []PublicIpLinkTagInput

func (PublicIpLinkTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PublicIpLinkTag)(nil)).Elem()
}

func (i PublicIpLinkTagArray) ToPublicIpLinkTagArrayOutput() PublicIpLinkTagArrayOutput {
	return i.ToPublicIpLinkTagArrayOutputWithContext(context.Background())
}

func (i PublicIpLinkTagArray) ToPublicIpLinkTagArrayOutputWithContext(ctx context.Context) PublicIpLinkTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIpLinkTagArrayOutput)
}

type PublicIpLinkTagOutput struct{ *pulumi.OutputState }

func (PublicIpLinkTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicIpLinkTag)(nil)).Elem()
}

func (o PublicIpLinkTagOutput) ToPublicIpLinkTagOutput() PublicIpLinkTagOutput {
	return o
}

func (o PublicIpLinkTagOutput) ToPublicIpLinkTagOutputWithContext(ctx context.Context) PublicIpLinkTagOutput {
	return o
}

func (o PublicIpLinkTagOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIpLinkTag) *string { return v.Key }).(pulumi.StringPtrOutput)
}

func (o PublicIpLinkTagOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIpLinkTag) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type PublicIpLinkTagArrayOutput struct{ *pulumi.OutputState }

func (PublicIpLinkTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PublicIpLinkTag)(nil)).Elem()
}

func (o PublicIpLinkTagArrayOutput) ToPublicIpLinkTagArrayOutput() PublicIpLinkTagArrayOutput {
	return o
}

func (o PublicIpLinkTagArrayOutput) ToPublicIpLinkTagArrayOutputWithContext(ctx context.Context) PublicIpLinkTagArrayOutput {
	return o
}

func (o PublicIpLinkTagArrayOutput) Index(i pulumi.IntInput) PublicIpLinkTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PublicIpLinkTag {
		return vs[0].([]PublicIpLinkTag)[vs[1].(int)]
	}).(PublicIpLinkTagOutput)
}

type PublicIpTag struct {
	// The key of the tag, with a minimum of 1 character.
	Key *string `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value *string `pulumi:"value"`
}

// PublicIpTagInput is an input type that accepts PublicIpTagArgs and PublicIpTagOutput values.
// You can construct a concrete instance of `PublicIpTagInput` via:
//
//	PublicIpTagArgs{...}
type PublicIpTagInput interface {
	pulumi.Input

	ToPublicIpTagOutput() PublicIpTagOutput
	ToPublicIpTagOutputWithContext(context.Context) PublicIpTagOutput
}

type PublicIpTagArgs struct {
	// The key of the tag, with a minimum of 1 character.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (PublicIpTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicIpTag)(nil)).Elem()
}

func (i PublicIpTagArgs) ToPublicIpTagOutput() PublicIpTagOutput {
	return i.ToPublicIpTagOutputWithContext(context.Background())
}

func (i PublicIpTagArgs) ToPublicIpTagOutputWithContext(ctx context.Context) PublicIpTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIpTagOutput)
}

// PublicIpTagArrayInput is an input type that accepts PublicIpTagArray and PublicIpTagArrayOutput values.
// You can construct a concrete instance of `PublicIpTagArrayInput` via:
//
//	PublicIpTagArray{ PublicIpTagArgs{...} }
type PublicIpTagArrayInput interface {
	pulumi.Input

	ToPublicIpTagArrayOutput() PublicIpTagArrayOutput
	ToPublicIpTagArrayOutputWithContext(context.Context) PublicIpTagArrayOutput
}

type PublicIpTagArray []PublicIpTagInput

func (PublicIpTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PublicIpTag)(nil)).Elem()
}

func (i PublicIpTagArray) ToPublicIpTagArrayOutput() PublicIpTagArrayOutput {
	return i.ToPublicIpTagArrayOutputWithContext(context.Background())
}

func (i PublicIpTagArray) ToPublicIpTagArrayOutputWithContext(ctx context.Context) PublicIpTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIpTagArrayOutput)
}

type PublicIpTagOutput struct{ *pulumi.OutputState }

func (PublicIpTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicIpTag)(nil)).Elem()
}

func (o PublicIpTagOutput) ToPublicIpTagOutput() PublicIpTagOutput {
	return o
}

func (o PublicIpTagOutput) ToPublicIpTagOutputWithContext(ctx context.Context) PublicIpTagOutput {
	return o
}

// The key of the tag, with a minimum of 1 character.
func (o PublicIpTagOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIpTag) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The value of the tag, between 0 and 255 characters.
func (o PublicIpTagOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIpTag) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type PublicIpTagArrayOutput struct{ *pulumi.OutputState }

func (PublicIpTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PublicIpTag)(nil)).Elem()
}

func (o PublicIpTagArrayOutput) ToPublicIpTagArrayOutput() PublicIpTagArrayOutput {
	return o
}

func (o PublicIpTagArrayOutput) ToPublicIpTagArrayOutputWithContext(ctx context.Context) PublicIpTagArrayOutput {
	return o
}

func (o PublicIpTagArrayOutput) Index(i pulumi.IntInput) PublicIpTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PublicIpTag {
		return vs[0].([]PublicIpTag)[vs[1].(int)]
	}).(PublicIpTagOutput)
}

type RouteTableLinkRouteTable struct {
	// The ID of the association between the route table and the Net or Subnet.
	LinkRouteTableId string `pulumi:"linkRouteTableId"`
	// If true, the route table is the main one.
	Main bool `pulumi:"main"`
	// The ID of the Net for which you want to create a route table.
	NetId string `pulumi:"netId"`
	// The ID of the route table.
	RouteTableId string `pulumi:"routeTableId"`
	// The ID of the Subnet, if the route table is explicitly linked to a Subnet.
	SubnetId string `pulumi:"subnetId"`
}

// RouteTableLinkRouteTableInput is an input type that accepts RouteTableLinkRouteTableArgs and RouteTableLinkRouteTableOutput values.
// You can construct a concrete instance of `RouteTableLinkRouteTableInput` via:
//
//	RouteTableLinkRouteTableArgs{...}
type RouteTableLinkRouteTableInput interface {
	pulumi.Input

	ToRouteTableLinkRouteTableOutput() RouteTableLinkRouteTableOutput
	ToRouteTableLinkRouteTableOutputWithContext(context.Context) RouteTableLinkRouteTableOutput
}

type RouteTableLinkRouteTableArgs struct {
	// The ID of the association between the route table and the Net or Subnet.
	LinkRouteTableId pulumi.StringInput `pulumi:"linkRouteTableId"`
	// If true, the route table is the main one.
	Main pulumi.BoolInput `pulumi:"main"`
	// The ID of the Net for which you want to create a route table.
	NetId pulumi.StringInput `pulumi:"netId"`
	// The ID of the route table.
	RouteTableId pulumi.StringInput `pulumi:"routeTableId"`
	// The ID of the Subnet, if the route table is explicitly linked to a Subnet.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
}

func (RouteTableLinkRouteTableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteTableLinkRouteTable)(nil)).Elem()
}

func (i RouteTableLinkRouteTableArgs) ToRouteTableLinkRouteTableOutput() RouteTableLinkRouteTableOutput {
	return i.ToRouteTableLinkRouteTableOutputWithContext(context.Background())
}

func (i RouteTableLinkRouteTableArgs) ToRouteTableLinkRouteTableOutputWithContext(ctx context.Context) RouteTableLinkRouteTableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTableLinkRouteTableOutput)
}

// RouteTableLinkRouteTableArrayInput is an input type that accepts RouteTableLinkRouteTableArray and RouteTableLinkRouteTableArrayOutput values.
// You can construct a concrete instance of `RouteTableLinkRouteTableArrayInput` via:
//
//	RouteTableLinkRouteTableArray{ RouteTableLinkRouteTableArgs{...} }
type RouteTableLinkRouteTableArrayInput interface {
	pulumi.Input

	ToRouteTableLinkRouteTableArrayOutput() RouteTableLinkRouteTableArrayOutput
	ToRouteTableLinkRouteTableArrayOutputWithContext(context.Context) RouteTableLinkRouteTableArrayOutput
}

type RouteTableLinkRouteTableArray []RouteTableLinkRouteTableInput

func (RouteTableLinkRouteTableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteTableLinkRouteTable)(nil)).Elem()
}

func (i RouteTableLinkRouteTableArray) ToRouteTableLinkRouteTableArrayOutput() RouteTableLinkRouteTableArrayOutput {
	return i.ToRouteTableLinkRouteTableArrayOutputWithContext(context.Background())
}

func (i RouteTableLinkRouteTableArray) ToRouteTableLinkRouteTableArrayOutputWithContext(ctx context.Context) RouteTableLinkRouteTableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTableLinkRouteTableArrayOutput)
}

type RouteTableLinkRouteTableOutput struct{ *pulumi.OutputState }

func (RouteTableLinkRouteTableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteTableLinkRouteTable)(nil)).Elem()
}

func (o RouteTableLinkRouteTableOutput) ToRouteTableLinkRouteTableOutput() RouteTableLinkRouteTableOutput {
	return o
}

func (o RouteTableLinkRouteTableOutput) ToRouteTableLinkRouteTableOutputWithContext(ctx context.Context) RouteTableLinkRouteTableOutput {
	return o
}

// The ID of the association between the route table and the Net or Subnet.
func (o RouteTableLinkRouteTableOutput) LinkRouteTableId() pulumi.StringOutput {
	return o.ApplyT(func(v RouteTableLinkRouteTable) string { return v.LinkRouteTableId }).(pulumi.StringOutput)
}

// If true, the route table is the main one.
func (o RouteTableLinkRouteTableOutput) Main() pulumi.BoolOutput {
	return o.ApplyT(func(v RouteTableLinkRouteTable) bool { return v.Main }).(pulumi.BoolOutput)
}

// The ID of the Net for which you want to create a route table.
func (o RouteTableLinkRouteTableOutput) NetId() pulumi.StringOutput {
	return o.ApplyT(func(v RouteTableLinkRouteTable) string { return v.NetId }).(pulumi.StringOutput)
}

// The ID of the route table.
func (o RouteTableLinkRouteTableOutput) RouteTableId() pulumi.StringOutput {
	return o.ApplyT(func(v RouteTableLinkRouteTable) string { return v.RouteTableId }).(pulumi.StringOutput)
}

// The ID of the Subnet, if the route table is explicitly linked to a Subnet.
func (o RouteTableLinkRouteTableOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v RouteTableLinkRouteTable) string { return v.SubnetId }).(pulumi.StringOutput)
}

type RouteTableLinkRouteTableArrayOutput struct{ *pulumi.OutputState }

func (RouteTableLinkRouteTableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteTableLinkRouteTable)(nil)).Elem()
}

func (o RouteTableLinkRouteTableArrayOutput) ToRouteTableLinkRouteTableArrayOutput() RouteTableLinkRouteTableArrayOutput {
	return o
}

func (o RouteTableLinkRouteTableArrayOutput) ToRouteTableLinkRouteTableArrayOutputWithContext(ctx context.Context) RouteTableLinkRouteTableArrayOutput {
	return o
}

func (o RouteTableLinkRouteTableArrayOutput) Index(i pulumi.IntInput) RouteTableLinkRouteTableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouteTableLinkRouteTable {
		return vs[0].([]RouteTableLinkRouteTable)[vs[1].(int)]
	}).(RouteTableLinkRouteTableOutput)
}

type RouteTableLinkTimeouts struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Create *string `pulumi:"create"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
	Delete *string `pulumi:"delete"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
	Read *string `pulumi:"read"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Update *string `pulumi:"update"`
}

// RouteTableLinkTimeoutsInput is an input type that accepts RouteTableLinkTimeoutsArgs and RouteTableLinkTimeoutsOutput values.
// You can construct a concrete instance of `RouteTableLinkTimeoutsInput` via:
//
//	RouteTableLinkTimeoutsArgs{...}
type RouteTableLinkTimeoutsInput interface {
	pulumi.Input

	ToRouteTableLinkTimeoutsOutput() RouteTableLinkTimeoutsOutput
	ToRouteTableLinkTimeoutsOutputWithContext(context.Context) RouteTableLinkTimeoutsOutput
}

type RouteTableLinkTimeoutsArgs struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Create pulumi.StringPtrInput `pulumi:"create"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
	Delete pulumi.StringPtrInput `pulumi:"delete"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
	Read pulumi.StringPtrInput `pulumi:"read"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Update pulumi.StringPtrInput `pulumi:"update"`
}

func (RouteTableLinkTimeoutsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteTableLinkTimeouts)(nil)).Elem()
}

func (i RouteTableLinkTimeoutsArgs) ToRouteTableLinkTimeoutsOutput() RouteTableLinkTimeoutsOutput {
	return i.ToRouteTableLinkTimeoutsOutputWithContext(context.Background())
}

func (i RouteTableLinkTimeoutsArgs) ToRouteTableLinkTimeoutsOutputWithContext(ctx context.Context) RouteTableLinkTimeoutsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTableLinkTimeoutsOutput)
}

func (i RouteTableLinkTimeoutsArgs) ToRouteTableLinkTimeoutsPtrOutput() RouteTableLinkTimeoutsPtrOutput {
	return i.ToRouteTableLinkTimeoutsPtrOutputWithContext(context.Background())
}

func (i RouteTableLinkTimeoutsArgs) ToRouteTableLinkTimeoutsPtrOutputWithContext(ctx context.Context) RouteTableLinkTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTableLinkTimeoutsOutput).ToRouteTableLinkTimeoutsPtrOutputWithContext(ctx)
}

// RouteTableLinkTimeoutsPtrInput is an input type that accepts RouteTableLinkTimeoutsArgs, RouteTableLinkTimeoutsPtr and RouteTableLinkTimeoutsPtrOutput values.
// You can construct a concrete instance of `RouteTableLinkTimeoutsPtrInput` via:
//
//	        RouteTableLinkTimeoutsArgs{...}
//
//	or:
//
//	        nil
type RouteTableLinkTimeoutsPtrInput interface {
	pulumi.Input

	ToRouteTableLinkTimeoutsPtrOutput() RouteTableLinkTimeoutsPtrOutput
	ToRouteTableLinkTimeoutsPtrOutputWithContext(context.Context) RouteTableLinkTimeoutsPtrOutput
}

type routeTableLinkTimeoutsPtrType RouteTableLinkTimeoutsArgs

func RouteTableLinkTimeoutsPtr(v *RouteTableLinkTimeoutsArgs) RouteTableLinkTimeoutsPtrInput {
	return (*routeTableLinkTimeoutsPtrType)(v)
}

func (*routeTableLinkTimeoutsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteTableLinkTimeouts)(nil)).Elem()
}

func (i *routeTableLinkTimeoutsPtrType) ToRouteTableLinkTimeoutsPtrOutput() RouteTableLinkTimeoutsPtrOutput {
	return i.ToRouteTableLinkTimeoutsPtrOutputWithContext(context.Background())
}

func (i *routeTableLinkTimeoutsPtrType) ToRouteTableLinkTimeoutsPtrOutputWithContext(ctx context.Context) RouteTableLinkTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTableLinkTimeoutsPtrOutput)
}

type RouteTableLinkTimeoutsOutput struct{ *pulumi.OutputState }

func (RouteTableLinkTimeoutsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteTableLinkTimeouts)(nil)).Elem()
}

func (o RouteTableLinkTimeoutsOutput) ToRouteTableLinkTimeoutsOutput() RouteTableLinkTimeoutsOutput {
	return o
}

func (o RouteTableLinkTimeoutsOutput) ToRouteTableLinkTimeoutsOutputWithContext(ctx context.Context) RouteTableLinkTimeoutsOutput {
	return o
}

func (o RouteTableLinkTimeoutsOutput) ToRouteTableLinkTimeoutsPtrOutput() RouteTableLinkTimeoutsPtrOutput {
	return o.ToRouteTableLinkTimeoutsPtrOutputWithContext(context.Background())
}

func (o RouteTableLinkTimeoutsOutput) ToRouteTableLinkTimeoutsPtrOutputWithContext(ctx context.Context) RouteTableLinkTimeoutsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RouteTableLinkTimeouts) *RouteTableLinkTimeouts {
		return &v
	}).(RouteTableLinkTimeoutsPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o RouteTableLinkTimeoutsOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteTableLinkTimeouts) *string { return v.Create }).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
func (o RouteTableLinkTimeoutsOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteTableLinkTimeouts) *string { return v.Delete }).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
func (o RouteTableLinkTimeoutsOutput) Read() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteTableLinkTimeouts) *string { return v.Read }).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o RouteTableLinkTimeoutsOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteTableLinkTimeouts) *string { return v.Update }).(pulumi.StringPtrOutput)
}

type RouteTableLinkTimeoutsPtrOutput struct{ *pulumi.OutputState }

func (RouteTableLinkTimeoutsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteTableLinkTimeouts)(nil)).Elem()
}

func (o RouteTableLinkTimeoutsPtrOutput) ToRouteTableLinkTimeoutsPtrOutput() RouteTableLinkTimeoutsPtrOutput {
	return o
}

func (o RouteTableLinkTimeoutsPtrOutput) ToRouteTableLinkTimeoutsPtrOutputWithContext(ctx context.Context) RouteTableLinkTimeoutsPtrOutput {
	return o
}

func (o RouteTableLinkTimeoutsPtrOutput) Elem() RouteTableLinkTimeoutsOutput {
	return o.ApplyT(func(v *RouteTableLinkTimeouts) RouteTableLinkTimeouts {
		if v != nil {
			return *v
		}
		var ret RouteTableLinkTimeouts
		return ret
	}).(RouteTableLinkTimeoutsOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o RouteTableLinkTimeoutsPtrOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteTableLinkTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Create
	}).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
func (o RouteTableLinkTimeoutsPtrOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteTableLinkTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Delete
	}).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
func (o RouteTableLinkTimeoutsPtrOutput) Read() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteTableLinkTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Read
	}).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o RouteTableLinkTimeoutsPtrOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteTableLinkTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Update
	}).(pulumi.StringPtrOutput)
}

type RouteTableRoute struct {
	// The method used to create the route.
	CreationMethod string `pulumi:"creationMethod"`
	// The IP range used for the destination match, in CIDR notation (for example, `10.0.0.0/24`).
	DestinationIpRange string `pulumi:"destinationIpRange"`
	// The ID of the OUTSCALE service.
	DestinationServiceId string `pulumi:"destinationServiceId"`
	// The ID of the internet service or virtual gateway attached to the Net.
	GatewayId string `pulumi:"gatewayId"`
	// The ID of a NAT service attached to the Net.
	NatServiceId string `pulumi:"natServiceId"`
	// The ID of the Net access point.
	NetAccessPointId string `pulumi:"netAccessPointId"`
	// The ID of the Net peering.
	NetPeeringId string `pulumi:"netPeeringId"`
	// The ID of the NIC.
	NicId string `pulumi:"nicId"`
	// The state of a route in the route table (always `active`).
	State string `pulumi:"state"`
	// The account ID of the owner of the VM.
	VmAccountId string `pulumi:"vmAccountId"`
	// The ID of a VM specified in a route in the table.
	VmId string `pulumi:"vmId"`
}

// RouteTableRouteInput is an input type that accepts RouteTableRouteArgs and RouteTableRouteOutput values.
// You can construct a concrete instance of `RouteTableRouteInput` via:
//
//	RouteTableRouteArgs{...}
type RouteTableRouteInput interface {
	pulumi.Input

	ToRouteTableRouteOutput() RouteTableRouteOutput
	ToRouteTableRouteOutputWithContext(context.Context) RouteTableRouteOutput
}

type RouteTableRouteArgs struct {
	// The method used to create the route.
	CreationMethod pulumi.StringInput `pulumi:"creationMethod"`
	// The IP range used for the destination match, in CIDR notation (for example, `10.0.0.0/24`).
	DestinationIpRange pulumi.StringInput `pulumi:"destinationIpRange"`
	// The ID of the OUTSCALE service.
	DestinationServiceId pulumi.StringInput `pulumi:"destinationServiceId"`
	// The ID of the internet service or virtual gateway attached to the Net.
	GatewayId pulumi.StringInput `pulumi:"gatewayId"`
	// The ID of a NAT service attached to the Net.
	NatServiceId pulumi.StringInput `pulumi:"natServiceId"`
	// The ID of the Net access point.
	NetAccessPointId pulumi.StringInput `pulumi:"netAccessPointId"`
	// The ID of the Net peering.
	NetPeeringId pulumi.StringInput `pulumi:"netPeeringId"`
	// The ID of the NIC.
	NicId pulumi.StringInput `pulumi:"nicId"`
	// The state of a route in the route table (always `active`).
	State pulumi.StringInput `pulumi:"state"`
	// The account ID of the owner of the VM.
	VmAccountId pulumi.StringInput `pulumi:"vmAccountId"`
	// The ID of a VM specified in a route in the table.
	VmId pulumi.StringInput `pulumi:"vmId"`
}

func (RouteTableRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteTableRoute)(nil)).Elem()
}

func (i RouteTableRouteArgs) ToRouteTableRouteOutput() RouteTableRouteOutput {
	return i.ToRouteTableRouteOutputWithContext(context.Background())
}

func (i RouteTableRouteArgs) ToRouteTableRouteOutputWithContext(ctx context.Context) RouteTableRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTableRouteOutput)
}

// RouteTableRouteArrayInput is an input type that accepts RouteTableRouteArray and RouteTableRouteArrayOutput values.
// You can construct a concrete instance of `RouteTableRouteArrayInput` via:
//
//	RouteTableRouteArray{ RouteTableRouteArgs{...} }
type RouteTableRouteArrayInput interface {
	pulumi.Input

	ToRouteTableRouteArrayOutput() RouteTableRouteArrayOutput
	ToRouteTableRouteArrayOutputWithContext(context.Context) RouteTableRouteArrayOutput
}

type RouteTableRouteArray []RouteTableRouteInput

func (RouteTableRouteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteTableRoute)(nil)).Elem()
}

func (i RouteTableRouteArray) ToRouteTableRouteArrayOutput() RouteTableRouteArrayOutput {
	return i.ToRouteTableRouteArrayOutputWithContext(context.Background())
}

func (i RouteTableRouteArray) ToRouteTableRouteArrayOutputWithContext(ctx context.Context) RouteTableRouteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTableRouteArrayOutput)
}

type RouteTableRouteOutput struct{ *pulumi.OutputState }

func (RouteTableRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteTableRoute)(nil)).Elem()
}

func (o RouteTableRouteOutput) ToRouteTableRouteOutput() RouteTableRouteOutput {
	return o
}

func (o RouteTableRouteOutput) ToRouteTableRouteOutputWithContext(ctx context.Context) RouteTableRouteOutput {
	return o
}

// The method used to create the route.
func (o RouteTableRouteOutput) CreationMethod() pulumi.StringOutput {
	return o.ApplyT(func(v RouteTableRoute) string { return v.CreationMethod }).(pulumi.StringOutput)
}

// The IP range used for the destination match, in CIDR notation (for example, `10.0.0.0/24`).
func (o RouteTableRouteOutput) DestinationIpRange() pulumi.StringOutput {
	return o.ApplyT(func(v RouteTableRoute) string { return v.DestinationIpRange }).(pulumi.StringOutput)
}

// The ID of the OUTSCALE service.
func (o RouteTableRouteOutput) DestinationServiceId() pulumi.StringOutput {
	return o.ApplyT(func(v RouteTableRoute) string { return v.DestinationServiceId }).(pulumi.StringOutput)
}

// The ID of the internet service or virtual gateway attached to the Net.
func (o RouteTableRouteOutput) GatewayId() pulumi.StringOutput {
	return o.ApplyT(func(v RouteTableRoute) string { return v.GatewayId }).(pulumi.StringOutput)
}

// The ID of a NAT service attached to the Net.
func (o RouteTableRouteOutput) NatServiceId() pulumi.StringOutput {
	return o.ApplyT(func(v RouteTableRoute) string { return v.NatServiceId }).(pulumi.StringOutput)
}

// The ID of the Net access point.
func (o RouteTableRouteOutput) NetAccessPointId() pulumi.StringOutput {
	return o.ApplyT(func(v RouteTableRoute) string { return v.NetAccessPointId }).(pulumi.StringOutput)
}

// The ID of the Net peering.
func (o RouteTableRouteOutput) NetPeeringId() pulumi.StringOutput {
	return o.ApplyT(func(v RouteTableRoute) string { return v.NetPeeringId }).(pulumi.StringOutput)
}

// The ID of the NIC.
func (o RouteTableRouteOutput) NicId() pulumi.StringOutput {
	return o.ApplyT(func(v RouteTableRoute) string { return v.NicId }).(pulumi.StringOutput)
}

// The state of a route in the route table (always `active`).
func (o RouteTableRouteOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v RouteTableRoute) string { return v.State }).(pulumi.StringOutput)
}

// The account ID of the owner of the VM.
func (o RouteTableRouteOutput) VmAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v RouteTableRoute) string { return v.VmAccountId }).(pulumi.StringOutput)
}

// The ID of a VM specified in a route in the table.
func (o RouteTableRouteOutput) VmId() pulumi.StringOutput {
	return o.ApplyT(func(v RouteTableRoute) string { return v.VmId }).(pulumi.StringOutput)
}

type RouteTableRouteArrayOutput struct{ *pulumi.OutputState }

func (RouteTableRouteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteTableRoute)(nil)).Elem()
}

func (o RouteTableRouteArrayOutput) ToRouteTableRouteArrayOutput() RouteTableRouteArrayOutput {
	return o
}

func (o RouteTableRouteArrayOutput) ToRouteTableRouteArrayOutputWithContext(ctx context.Context) RouteTableRouteArrayOutput {
	return o
}

func (o RouteTableRouteArrayOutput) Index(i pulumi.IntInput) RouteTableRouteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouteTableRoute {
		return vs[0].([]RouteTableRoute)[vs[1].(int)]
	}).(RouteTableRouteOutput)
}

type RouteTableRoutePropagatingVirtualGateway struct {
	// The ID of the virtual gateway.
	VirtualGatewayId string `pulumi:"virtualGatewayId"`
}

// RouteTableRoutePropagatingVirtualGatewayInput is an input type that accepts RouteTableRoutePropagatingVirtualGatewayArgs and RouteTableRoutePropagatingVirtualGatewayOutput values.
// You can construct a concrete instance of `RouteTableRoutePropagatingVirtualGatewayInput` via:
//
//	RouteTableRoutePropagatingVirtualGatewayArgs{...}
type RouteTableRoutePropagatingVirtualGatewayInput interface {
	pulumi.Input

	ToRouteTableRoutePropagatingVirtualGatewayOutput() RouteTableRoutePropagatingVirtualGatewayOutput
	ToRouteTableRoutePropagatingVirtualGatewayOutputWithContext(context.Context) RouteTableRoutePropagatingVirtualGatewayOutput
}

type RouteTableRoutePropagatingVirtualGatewayArgs struct {
	// The ID of the virtual gateway.
	VirtualGatewayId pulumi.StringInput `pulumi:"virtualGatewayId"`
}

func (RouteTableRoutePropagatingVirtualGatewayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteTableRoutePropagatingVirtualGateway)(nil)).Elem()
}

func (i RouteTableRoutePropagatingVirtualGatewayArgs) ToRouteTableRoutePropagatingVirtualGatewayOutput() RouteTableRoutePropagatingVirtualGatewayOutput {
	return i.ToRouteTableRoutePropagatingVirtualGatewayOutputWithContext(context.Background())
}

func (i RouteTableRoutePropagatingVirtualGatewayArgs) ToRouteTableRoutePropagatingVirtualGatewayOutputWithContext(ctx context.Context) RouteTableRoutePropagatingVirtualGatewayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTableRoutePropagatingVirtualGatewayOutput)
}

// RouteTableRoutePropagatingVirtualGatewayArrayInput is an input type that accepts RouteTableRoutePropagatingVirtualGatewayArray and RouteTableRoutePropagatingVirtualGatewayArrayOutput values.
// You can construct a concrete instance of `RouteTableRoutePropagatingVirtualGatewayArrayInput` via:
//
//	RouteTableRoutePropagatingVirtualGatewayArray{ RouteTableRoutePropagatingVirtualGatewayArgs{...} }
type RouteTableRoutePropagatingVirtualGatewayArrayInput interface {
	pulumi.Input

	ToRouteTableRoutePropagatingVirtualGatewayArrayOutput() RouteTableRoutePropagatingVirtualGatewayArrayOutput
	ToRouteTableRoutePropagatingVirtualGatewayArrayOutputWithContext(context.Context) RouteTableRoutePropagatingVirtualGatewayArrayOutput
}

type RouteTableRoutePropagatingVirtualGatewayArray []RouteTableRoutePropagatingVirtualGatewayInput

func (RouteTableRoutePropagatingVirtualGatewayArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteTableRoutePropagatingVirtualGateway)(nil)).Elem()
}

func (i RouteTableRoutePropagatingVirtualGatewayArray) ToRouteTableRoutePropagatingVirtualGatewayArrayOutput() RouteTableRoutePropagatingVirtualGatewayArrayOutput {
	return i.ToRouteTableRoutePropagatingVirtualGatewayArrayOutputWithContext(context.Background())
}

func (i RouteTableRoutePropagatingVirtualGatewayArray) ToRouteTableRoutePropagatingVirtualGatewayArrayOutputWithContext(ctx context.Context) RouteTableRoutePropagatingVirtualGatewayArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTableRoutePropagatingVirtualGatewayArrayOutput)
}

type RouteTableRoutePropagatingVirtualGatewayOutput struct{ *pulumi.OutputState }

func (RouteTableRoutePropagatingVirtualGatewayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteTableRoutePropagatingVirtualGateway)(nil)).Elem()
}

func (o RouteTableRoutePropagatingVirtualGatewayOutput) ToRouteTableRoutePropagatingVirtualGatewayOutput() RouteTableRoutePropagatingVirtualGatewayOutput {
	return o
}

func (o RouteTableRoutePropagatingVirtualGatewayOutput) ToRouteTableRoutePropagatingVirtualGatewayOutputWithContext(ctx context.Context) RouteTableRoutePropagatingVirtualGatewayOutput {
	return o
}

// The ID of the virtual gateway.
func (o RouteTableRoutePropagatingVirtualGatewayOutput) VirtualGatewayId() pulumi.StringOutput {
	return o.ApplyT(func(v RouteTableRoutePropagatingVirtualGateway) string { return v.VirtualGatewayId }).(pulumi.StringOutput)
}

type RouteTableRoutePropagatingVirtualGatewayArrayOutput struct{ *pulumi.OutputState }

func (RouteTableRoutePropagatingVirtualGatewayArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteTableRoutePropagatingVirtualGateway)(nil)).Elem()
}

func (o RouteTableRoutePropagatingVirtualGatewayArrayOutput) ToRouteTableRoutePropagatingVirtualGatewayArrayOutput() RouteTableRoutePropagatingVirtualGatewayArrayOutput {
	return o
}

func (o RouteTableRoutePropagatingVirtualGatewayArrayOutput) ToRouteTableRoutePropagatingVirtualGatewayArrayOutputWithContext(ctx context.Context) RouteTableRoutePropagatingVirtualGatewayArrayOutput {
	return o
}

func (o RouteTableRoutePropagatingVirtualGatewayArrayOutput) Index(i pulumi.IntInput) RouteTableRoutePropagatingVirtualGatewayOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouteTableRoutePropagatingVirtualGateway {
		return vs[0].([]RouteTableRoutePropagatingVirtualGateway)[vs[1].(int)]
	}).(RouteTableRoutePropagatingVirtualGatewayOutput)
}

type RouteTableTag struct {
	// The key of the tag, with a minimum of 1 character.
	Key string `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value *string `pulumi:"value"`
}

// RouteTableTagInput is an input type that accepts RouteTableTagArgs and RouteTableTagOutput values.
// You can construct a concrete instance of `RouteTableTagInput` via:
//
//	RouteTableTagArgs{...}
type RouteTableTagInput interface {
	pulumi.Input

	ToRouteTableTagOutput() RouteTableTagOutput
	ToRouteTableTagOutputWithContext(context.Context) RouteTableTagOutput
}

type RouteTableTagArgs struct {
	// The key of the tag, with a minimum of 1 character.
	Key pulumi.StringInput `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (RouteTableTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteTableTag)(nil)).Elem()
}

func (i RouteTableTagArgs) ToRouteTableTagOutput() RouteTableTagOutput {
	return i.ToRouteTableTagOutputWithContext(context.Background())
}

func (i RouteTableTagArgs) ToRouteTableTagOutputWithContext(ctx context.Context) RouteTableTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTableTagOutput)
}

// RouteTableTagArrayInput is an input type that accepts RouteTableTagArray and RouteTableTagArrayOutput values.
// You can construct a concrete instance of `RouteTableTagArrayInput` via:
//
//	RouteTableTagArray{ RouteTableTagArgs{...} }
type RouteTableTagArrayInput interface {
	pulumi.Input

	ToRouteTableTagArrayOutput() RouteTableTagArrayOutput
	ToRouteTableTagArrayOutputWithContext(context.Context) RouteTableTagArrayOutput
}

type RouteTableTagArray []RouteTableTagInput

func (RouteTableTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteTableTag)(nil)).Elem()
}

func (i RouteTableTagArray) ToRouteTableTagArrayOutput() RouteTableTagArrayOutput {
	return i.ToRouteTableTagArrayOutputWithContext(context.Background())
}

func (i RouteTableTagArray) ToRouteTableTagArrayOutputWithContext(ctx context.Context) RouteTableTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTableTagArrayOutput)
}

type RouteTableTagOutput struct{ *pulumi.OutputState }

func (RouteTableTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteTableTag)(nil)).Elem()
}

func (o RouteTableTagOutput) ToRouteTableTagOutput() RouteTableTagOutput {
	return o
}

func (o RouteTableTagOutput) ToRouteTableTagOutputWithContext(ctx context.Context) RouteTableTagOutput {
	return o
}

// The key of the tag, with a minimum of 1 character.
func (o RouteTableTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v RouteTableTag) string { return v.Key }).(pulumi.StringOutput)
}

// The value of the tag, between 0 and 255 characters.
func (o RouteTableTagOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteTableTag) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type RouteTableTagArrayOutput struct{ *pulumi.OutputState }

func (RouteTableTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteTableTag)(nil)).Elem()
}

func (o RouteTableTagArrayOutput) ToRouteTableTagArrayOutput() RouteTableTagArrayOutput {
	return o
}

func (o RouteTableTagArrayOutput) ToRouteTableTagArrayOutputWithContext(ctx context.Context) RouteTableTagArrayOutput {
	return o
}

func (o RouteTableTagArrayOutput) Index(i pulumi.IntInput) RouteTableTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouteTableTag {
		return vs[0].([]RouteTableTag)[vs[1].(int)]
	}).(RouteTableTagOutput)
}

type RouteTableTimeouts struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Create *string `pulumi:"create"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
	Delete *string `pulumi:"delete"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
	Read *string `pulumi:"read"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Update *string `pulumi:"update"`
}

// RouteTableTimeoutsInput is an input type that accepts RouteTableTimeoutsArgs and RouteTableTimeoutsOutput values.
// You can construct a concrete instance of `RouteTableTimeoutsInput` via:
//
//	RouteTableTimeoutsArgs{...}
type RouteTableTimeoutsInput interface {
	pulumi.Input

	ToRouteTableTimeoutsOutput() RouteTableTimeoutsOutput
	ToRouteTableTimeoutsOutputWithContext(context.Context) RouteTableTimeoutsOutput
}

type RouteTableTimeoutsArgs struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Create pulumi.StringPtrInput `pulumi:"create"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
	Delete pulumi.StringPtrInput `pulumi:"delete"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
	Read pulumi.StringPtrInput `pulumi:"read"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Update pulumi.StringPtrInput `pulumi:"update"`
}

func (RouteTableTimeoutsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteTableTimeouts)(nil)).Elem()
}

func (i RouteTableTimeoutsArgs) ToRouteTableTimeoutsOutput() RouteTableTimeoutsOutput {
	return i.ToRouteTableTimeoutsOutputWithContext(context.Background())
}

func (i RouteTableTimeoutsArgs) ToRouteTableTimeoutsOutputWithContext(ctx context.Context) RouteTableTimeoutsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTableTimeoutsOutput)
}

func (i RouteTableTimeoutsArgs) ToRouteTableTimeoutsPtrOutput() RouteTableTimeoutsPtrOutput {
	return i.ToRouteTableTimeoutsPtrOutputWithContext(context.Background())
}

func (i RouteTableTimeoutsArgs) ToRouteTableTimeoutsPtrOutputWithContext(ctx context.Context) RouteTableTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTableTimeoutsOutput).ToRouteTableTimeoutsPtrOutputWithContext(ctx)
}

// RouteTableTimeoutsPtrInput is an input type that accepts RouteTableTimeoutsArgs, RouteTableTimeoutsPtr and RouteTableTimeoutsPtrOutput values.
// You can construct a concrete instance of `RouteTableTimeoutsPtrInput` via:
//
//	        RouteTableTimeoutsArgs{...}
//
//	or:
//
//	        nil
type RouteTableTimeoutsPtrInput interface {
	pulumi.Input

	ToRouteTableTimeoutsPtrOutput() RouteTableTimeoutsPtrOutput
	ToRouteTableTimeoutsPtrOutputWithContext(context.Context) RouteTableTimeoutsPtrOutput
}

type routeTableTimeoutsPtrType RouteTableTimeoutsArgs

func RouteTableTimeoutsPtr(v *RouteTableTimeoutsArgs) RouteTableTimeoutsPtrInput {
	return (*routeTableTimeoutsPtrType)(v)
}

func (*routeTableTimeoutsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteTableTimeouts)(nil)).Elem()
}

func (i *routeTableTimeoutsPtrType) ToRouteTableTimeoutsPtrOutput() RouteTableTimeoutsPtrOutput {
	return i.ToRouteTableTimeoutsPtrOutputWithContext(context.Background())
}

func (i *routeTableTimeoutsPtrType) ToRouteTableTimeoutsPtrOutputWithContext(ctx context.Context) RouteTableTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTableTimeoutsPtrOutput)
}

type RouteTableTimeoutsOutput struct{ *pulumi.OutputState }

func (RouteTableTimeoutsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteTableTimeouts)(nil)).Elem()
}

func (o RouteTableTimeoutsOutput) ToRouteTableTimeoutsOutput() RouteTableTimeoutsOutput {
	return o
}

func (o RouteTableTimeoutsOutput) ToRouteTableTimeoutsOutputWithContext(ctx context.Context) RouteTableTimeoutsOutput {
	return o
}

func (o RouteTableTimeoutsOutput) ToRouteTableTimeoutsPtrOutput() RouteTableTimeoutsPtrOutput {
	return o.ToRouteTableTimeoutsPtrOutputWithContext(context.Background())
}

func (o RouteTableTimeoutsOutput) ToRouteTableTimeoutsPtrOutputWithContext(ctx context.Context) RouteTableTimeoutsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RouteTableTimeouts) *RouteTableTimeouts {
		return &v
	}).(RouteTableTimeoutsPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o RouteTableTimeoutsOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteTableTimeouts) *string { return v.Create }).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
func (o RouteTableTimeoutsOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteTableTimeouts) *string { return v.Delete }).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
func (o RouteTableTimeoutsOutput) Read() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteTableTimeouts) *string { return v.Read }).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o RouteTableTimeoutsOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteTableTimeouts) *string { return v.Update }).(pulumi.StringPtrOutput)
}

type RouteTableTimeoutsPtrOutput struct{ *pulumi.OutputState }

func (RouteTableTimeoutsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteTableTimeouts)(nil)).Elem()
}

func (o RouteTableTimeoutsPtrOutput) ToRouteTableTimeoutsPtrOutput() RouteTableTimeoutsPtrOutput {
	return o
}

func (o RouteTableTimeoutsPtrOutput) ToRouteTableTimeoutsPtrOutputWithContext(ctx context.Context) RouteTableTimeoutsPtrOutput {
	return o
}

func (o RouteTableTimeoutsPtrOutput) Elem() RouteTableTimeoutsOutput {
	return o.ApplyT(func(v *RouteTableTimeouts) RouteTableTimeouts {
		if v != nil {
			return *v
		}
		var ret RouteTableTimeouts
		return ret
	}).(RouteTableTimeoutsOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o RouteTableTimeoutsPtrOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteTableTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Create
	}).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
func (o RouteTableTimeoutsPtrOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteTableTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Delete
	}).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
func (o RouteTableTimeoutsPtrOutput) Read() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteTableTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Read
	}).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o RouteTableTimeoutsPtrOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteTableTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Update
	}).(pulumi.StringPtrOutput)
}

type RouteTimeouts struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Create *string `pulumi:"create"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
	Delete *string `pulumi:"delete"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
	Read *string `pulumi:"read"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Update *string `pulumi:"update"`
}

// RouteTimeoutsInput is an input type that accepts RouteTimeoutsArgs and RouteTimeoutsOutput values.
// You can construct a concrete instance of `RouteTimeoutsInput` via:
//
//	RouteTimeoutsArgs{...}
type RouteTimeoutsInput interface {
	pulumi.Input

	ToRouteTimeoutsOutput() RouteTimeoutsOutput
	ToRouteTimeoutsOutputWithContext(context.Context) RouteTimeoutsOutput
}

type RouteTimeoutsArgs struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Create pulumi.StringPtrInput `pulumi:"create"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
	Delete pulumi.StringPtrInput `pulumi:"delete"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
	Read pulumi.StringPtrInput `pulumi:"read"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Update pulumi.StringPtrInput `pulumi:"update"`
}

func (RouteTimeoutsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteTimeouts)(nil)).Elem()
}

func (i RouteTimeoutsArgs) ToRouteTimeoutsOutput() RouteTimeoutsOutput {
	return i.ToRouteTimeoutsOutputWithContext(context.Background())
}

func (i RouteTimeoutsArgs) ToRouteTimeoutsOutputWithContext(ctx context.Context) RouteTimeoutsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTimeoutsOutput)
}

func (i RouteTimeoutsArgs) ToRouteTimeoutsPtrOutput() RouteTimeoutsPtrOutput {
	return i.ToRouteTimeoutsPtrOutputWithContext(context.Background())
}

func (i RouteTimeoutsArgs) ToRouteTimeoutsPtrOutputWithContext(ctx context.Context) RouteTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTimeoutsOutput).ToRouteTimeoutsPtrOutputWithContext(ctx)
}

// RouteTimeoutsPtrInput is an input type that accepts RouteTimeoutsArgs, RouteTimeoutsPtr and RouteTimeoutsPtrOutput values.
// You can construct a concrete instance of `RouteTimeoutsPtrInput` via:
//
//	        RouteTimeoutsArgs{...}
//
//	or:
//
//	        nil
type RouteTimeoutsPtrInput interface {
	pulumi.Input

	ToRouteTimeoutsPtrOutput() RouteTimeoutsPtrOutput
	ToRouteTimeoutsPtrOutputWithContext(context.Context) RouteTimeoutsPtrOutput
}

type routeTimeoutsPtrType RouteTimeoutsArgs

func RouteTimeoutsPtr(v *RouteTimeoutsArgs) RouteTimeoutsPtrInput {
	return (*routeTimeoutsPtrType)(v)
}

func (*routeTimeoutsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteTimeouts)(nil)).Elem()
}

func (i *routeTimeoutsPtrType) ToRouteTimeoutsPtrOutput() RouteTimeoutsPtrOutput {
	return i.ToRouteTimeoutsPtrOutputWithContext(context.Background())
}

func (i *routeTimeoutsPtrType) ToRouteTimeoutsPtrOutputWithContext(ctx context.Context) RouteTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTimeoutsPtrOutput)
}

type RouteTimeoutsOutput struct{ *pulumi.OutputState }

func (RouteTimeoutsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteTimeouts)(nil)).Elem()
}

func (o RouteTimeoutsOutput) ToRouteTimeoutsOutput() RouteTimeoutsOutput {
	return o
}

func (o RouteTimeoutsOutput) ToRouteTimeoutsOutputWithContext(ctx context.Context) RouteTimeoutsOutput {
	return o
}

func (o RouteTimeoutsOutput) ToRouteTimeoutsPtrOutput() RouteTimeoutsPtrOutput {
	return o.ToRouteTimeoutsPtrOutputWithContext(context.Background())
}

func (o RouteTimeoutsOutput) ToRouteTimeoutsPtrOutputWithContext(ctx context.Context) RouteTimeoutsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RouteTimeouts) *RouteTimeouts {
		return &v
	}).(RouteTimeoutsPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o RouteTimeoutsOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteTimeouts) *string { return v.Create }).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
func (o RouteTimeoutsOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteTimeouts) *string { return v.Delete }).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
func (o RouteTimeoutsOutput) Read() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteTimeouts) *string { return v.Read }).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o RouteTimeoutsOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteTimeouts) *string { return v.Update }).(pulumi.StringPtrOutput)
}

type RouteTimeoutsPtrOutput struct{ *pulumi.OutputState }

func (RouteTimeoutsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteTimeouts)(nil)).Elem()
}

func (o RouteTimeoutsPtrOutput) ToRouteTimeoutsPtrOutput() RouteTimeoutsPtrOutput {
	return o
}

func (o RouteTimeoutsPtrOutput) ToRouteTimeoutsPtrOutputWithContext(ctx context.Context) RouteTimeoutsPtrOutput {
	return o
}

func (o RouteTimeoutsPtrOutput) Elem() RouteTimeoutsOutput {
	return o.ApplyT(func(v *RouteTimeouts) RouteTimeouts {
		if v != nil {
			return *v
		}
		var ret RouteTimeouts
		return ret
	}).(RouteTimeoutsOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o RouteTimeoutsPtrOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Create
	}).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
func (o RouteTimeoutsPtrOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Delete
	}).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
func (o RouteTimeoutsPtrOutput) Read() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Read
	}).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o RouteTimeoutsPtrOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Update
	}).(pulumi.StringPtrOutput)
}

type SecurityGroupInboundRule struct {
	// The beginning of the port range for the TCP and UDP protocols, or an ICMP type number.
	FromPortRange *int `pulumi:"fromPortRange"`
	// The IP protocol name (`tcp`, `udp`, `icmp`, or `-1` for all protocols). By default, `-1`. In a Net, this can also be an IP protocol number. For more information, see the [IANA.org website](https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml).
	IpProtocol *string `pulumi:"ipProtocol"`
	// One or more IP ranges for the security group rules, in CIDR notation (for example, `10.0.0.0/16`).
	IpRanges []string `pulumi:"ipRanges"`
	// Information about one or more source or destination security groups.
	SecurityGroupsMembers []map[string]string `pulumi:"securityGroupsMembers"`
	// The end of the port range for the TCP and UDP protocols, or an ICMP code number.
	ToPortRange *int `pulumi:"toPortRange"`
}

// SecurityGroupInboundRuleInput is an input type that accepts SecurityGroupInboundRuleArgs and SecurityGroupInboundRuleOutput values.
// You can construct a concrete instance of `SecurityGroupInboundRuleInput` via:
//
//	SecurityGroupInboundRuleArgs{...}
type SecurityGroupInboundRuleInput interface {
	pulumi.Input

	ToSecurityGroupInboundRuleOutput() SecurityGroupInboundRuleOutput
	ToSecurityGroupInboundRuleOutputWithContext(context.Context) SecurityGroupInboundRuleOutput
}

type SecurityGroupInboundRuleArgs struct {
	// The beginning of the port range for the TCP and UDP protocols, or an ICMP type number.
	FromPortRange pulumi.IntPtrInput `pulumi:"fromPortRange"`
	// The IP protocol name (`tcp`, `udp`, `icmp`, or `-1` for all protocols). By default, `-1`. In a Net, this can also be an IP protocol number. For more information, see the [IANA.org website](https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml).
	IpProtocol pulumi.StringPtrInput `pulumi:"ipProtocol"`
	// One or more IP ranges for the security group rules, in CIDR notation (for example, `10.0.0.0/16`).
	IpRanges pulumi.StringArrayInput `pulumi:"ipRanges"`
	// Information about one or more source or destination security groups.
	SecurityGroupsMembers pulumi.StringMapArrayInput `pulumi:"securityGroupsMembers"`
	// The end of the port range for the TCP and UDP protocols, or an ICMP code number.
	ToPortRange pulumi.IntPtrInput `pulumi:"toPortRange"`
}

func (SecurityGroupInboundRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityGroupInboundRule)(nil)).Elem()
}

func (i SecurityGroupInboundRuleArgs) ToSecurityGroupInboundRuleOutput() SecurityGroupInboundRuleOutput {
	return i.ToSecurityGroupInboundRuleOutputWithContext(context.Background())
}

func (i SecurityGroupInboundRuleArgs) ToSecurityGroupInboundRuleOutputWithContext(ctx context.Context) SecurityGroupInboundRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityGroupInboundRuleOutput)
}

// SecurityGroupInboundRuleArrayInput is an input type that accepts SecurityGroupInboundRuleArray and SecurityGroupInboundRuleArrayOutput values.
// You can construct a concrete instance of `SecurityGroupInboundRuleArrayInput` via:
//
//	SecurityGroupInboundRuleArray{ SecurityGroupInboundRuleArgs{...} }
type SecurityGroupInboundRuleArrayInput interface {
	pulumi.Input

	ToSecurityGroupInboundRuleArrayOutput() SecurityGroupInboundRuleArrayOutput
	ToSecurityGroupInboundRuleArrayOutputWithContext(context.Context) SecurityGroupInboundRuleArrayOutput
}

type SecurityGroupInboundRuleArray []SecurityGroupInboundRuleInput

func (SecurityGroupInboundRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityGroupInboundRule)(nil)).Elem()
}

func (i SecurityGroupInboundRuleArray) ToSecurityGroupInboundRuleArrayOutput() SecurityGroupInboundRuleArrayOutput {
	return i.ToSecurityGroupInboundRuleArrayOutputWithContext(context.Background())
}

func (i SecurityGroupInboundRuleArray) ToSecurityGroupInboundRuleArrayOutputWithContext(ctx context.Context) SecurityGroupInboundRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityGroupInboundRuleArrayOutput)
}

type SecurityGroupInboundRuleOutput struct{ *pulumi.OutputState }

func (SecurityGroupInboundRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityGroupInboundRule)(nil)).Elem()
}

func (o SecurityGroupInboundRuleOutput) ToSecurityGroupInboundRuleOutput() SecurityGroupInboundRuleOutput {
	return o
}

func (o SecurityGroupInboundRuleOutput) ToSecurityGroupInboundRuleOutputWithContext(ctx context.Context) SecurityGroupInboundRuleOutput {
	return o
}

// The beginning of the port range for the TCP and UDP protocols, or an ICMP type number.
func (o SecurityGroupInboundRuleOutput) FromPortRange() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SecurityGroupInboundRule) *int { return v.FromPortRange }).(pulumi.IntPtrOutput)
}

// The IP protocol name (`tcp`, `udp`, `icmp`, or `-1` for all protocols). By default, `-1`. In a Net, this can also be an IP protocol number. For more information, see the [IANA.org website](https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml).
func (o SecurityGroupInboundRuleOutput) IpProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityGroupInboundRule) *string { return v.IpProtocol }).(pulumi.StringPtrOutput)
}

// One or more IP ranges for the security group rules, in CIDR notation (for example, `10.0.0.0/16`).
func (o SecurityGroupInboundRuleOutput) IpRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityGroupInboundRule) []string { return v.IpRanges }).(pulumi.StringArrayOutput)
}

// Information about one or more source or destination security groups.
func (o SecurityGroupInboundRuleOutput) SecurityGroupsMembers() pulumi.StringMapArrayOutput {
	return o.ApplyT(func(v SecurityGroupInboundRule) []map[string]string { return v.SecurityGroupsMembers }).(pulumi.StringMapArrayOutput)
}

// The end of the port range for the TCP and UDP protocols, or an ICMP code number.
func (o SecurityGroupInboundRuleOutput) ToPortRange() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SecurityGroupInboundRule) *int { return v.ToPortRange }).(pulumi.IntPtrOutput)
}

type SecurityGroupInboundRuleArrayOutput struct{ *pulumi.OutputState }

func (SecurityGroupInboundRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityGroupInboundRule)(nil)).Elem()
}

func (o SecurityGroupInboundRuleArrayOutput) ToSecurityGroupInboundRuleArrayOutput() SecurityGroupInboundRuleArrayOutput {
	return o
}

func (o SecurityGroupInboundRuleArrayOutput) ToSecurityGroupInboundRuleArrayOutputWithContext(ctx context.Context) SecurityGroupInboundRuleArrayOutput {
	return o
}

func (o SecurityGroupInboundRuleArrayOutput) Index(i pulumi.IntInput) SecurityGroupInboundRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecurityGroupInboundRule {
		return vs[0].([]SecurityGroupInboundRule)[vs[1].(int)]
	}).(SecurityGroupInboundRuleOutput)
}

type SecurityGroupOutboundRule struct {
	// The beginning of the port range for the TCP and UDP protocols, or an ICMP type number.
	FromPortRange *int `pulumi:"fromPortRange"`
	// The IP protocol name (`tcp`, `udp`, `icmp`, or `-1` for all protocols). By default, `-1`. In a Net, this can also be an IP protocol number. For more information, see the [IANA.org website](https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml).
	IpProtocol *string `pulumi:"ipProtocol"`
	// One or more IP ranges for the security group rules, in CIDR notation (for example, `10.0.0.0/16`).
	IpRanges []string `pulumi:"ipRanges"`
	// Information about one or more source or destination security groups.
	SecurityGroupsMembers []map[string]string `pulumi:"securityGroupsMembers"`
	// The end of the port range for the TCP and UDP protocols, or an ICMP code number.
	ToPortRange *int `pulumi:"toPortRange"`
}

// SecurityGroupOutboundRuleInput is an input type that accepts SecurityGroupOutboundRuleArgs and SecurityGroupOutboundRuleOutput values.
// You can construct a concrete instance of `SecurityGroupOutboundRuleInput` via:
//
//	SecurityGroupOutboundRuleArgs{...}
type SecurityGroupOutboundRuleInput interface {
	pulumi.Input

	ToSecurityGroupOutboundRuleOutput() SecurityGroupOutboundRuleOutput
	ToSecurityGroupOutboundRuleOutputWithContext(context.Context) SecurityGroupOutboundRuleOutput
}

type SecurityGroupOutboundRuleArgs struct {
	// The beginning of the port range for the TCP and UDP protocols, or an ICMP type number.
	FromPortRange pulumi.IntPtrInput `pulumi:"fromPortRange"`
	// The IP protocol name (`tcp`, `udp`, `icmp`, or `-1` for all protocols). By default, `-1`. In a Net, this can also be an IP protocol number. For more information, see the [IANA.org website](https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml).
	IpProtocol pulumi.StringPtrInput `pulumi:"ipProtocol"`
	// One or more IP ranges for the security group rules, in CIDR notation (for example, `10.0.0.0/16`).
	IpRanges pulumi.StringArrayInput `pulumi:"ipRanges"`
	// Information about one or more source or destination security groups.
	SecurityGroupsMembers pulumi.StringMapArrayInput `pulumi:"securityGroupsMembers"`
	// The end of the port range for the TCP and UDP protocols, or an ICMP code number.
	ToPortRange pulumi.IntPtrInput `pulumi:"toPortRange"`
}

func (SecurityGroupOutboundRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityGroupOutboundRule)(nil)).Elem()
}

func (i SecurityGroupOutboundRuleArgs) ToSecurityGroupOutboundRuleOutput() SecurityGroupOutboundRuleOutput {
	return i.ToSecurityGroupOutboundRuleOutputWithContext(context.Background())
}

func (i SecurityGroupOutboundRuleArgs) ToSecurityGroupOutboundRuleOutputWithContext(ctx context.Context) SecurityGroupOutboundRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityGroupOutboundRuleOutput)
}

// SecurityGroupOutboundRuleArrayInput is an input type that accepts SecurityGroupOutboundRuleArray and SecurityGroupOutboundRuleArrayOutput values.
// You can construct a concrete instance of `SecurityGroupOutboundRuleArrayInput` via:
//
//	SecurityGroupOutboundRuleArray{ SecurityGroupOutboundRuleArgs{...} }
type SecurityGroupOutboundRuleArrayInput interface {
	pulumi.Input

	ToSecurityGroupOutboundRuleArrayOutput() SecurityGroupOutboundRuleArrayOutput
	ToSecurityGroupOutboundRuleArrayOutputWithContext(context.Context) SecurityGroupOutboundRuleArrayOutput
}

type SecurityGroupOutboundRuleArray []SecurityGroupOutboundRuleInput

func (SecurityGroupOutboundRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityGroupOutboundRule)(nil)).Elem()
}

func (i SecurityGroupOutboundRuleArray) ToSecurityGroupOutboundRuleArrayOutput() SecurityGroupOutboundRuleArrayOutput {
	return i.ToSecurityGroupOutboundRuleArrayOutputWithContext(context.Background())
}

func (i SecurityGroupOutboundRuleArray) ToSecurityGroupOutboundRuleArrayOutputWithContext(ctx context.Context) SecurityGroupOutboundRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityGroupOutboundRuleArrayOutput)
}

type SecurityGroupOutboundRuleOutput struct{ *pulumi.OutputState }

func (SecurityGroupOutboundRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityGroupOutboundRule)(nil)).Elem()
}

func (o SecurityGroupOutboundRuleOutput) ToSecurityGroupOutboundRuleOutput() SecurityGroupOutboundRuleOutput {
	return o
}

func (o SecurityGroupOutboundRuleOutput) ToSecurityGroupOutboundRuleOutputWithContext(ctx context.Context) SecurityGroupOutboundRuleOutput {
	return o
}

// The beginning of the port range for the TCP and UDP protocols, or an ICMP type number.
func (o SecurityGroupOutboundRuleOutput) FromPortRange() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SecurityGroupOutboundRule) *int { return v.FromPortRange }).(pulumi.IntPtrOutput)
}

// The IP protocol name (`tcp`, `udp`, `icmp`, or `-1` for all protocols). By default, `-1`. In a Net, this can also be an IP protocol number. For more information, see the [IANA.org website](https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml).
func (o SecurityGroupOutboundRuleOutput) IpProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityGroupOutboundRule) *string { return v.IpProtocol }).(pulumi.StringPtrOutput)
}

// One or more IP ranges for the security group rules, in CIDR notation (for example, `10.0.0.0/16`).
func (o SecurityGroupOutboundRuleOutput) IpRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityGroupOutboundRule) []string { return v.IpRanges }).(pulumi.StringArrayOutput)
}

// Information about one or more source or destination security groups.
func (o SecurityGroupOutboundRuleOutput) SecurityGroupsMembers() pulumi.StringMapArrayOutput {
	return o.ApplyT(func(v SecurityGroupOutboundRule) []map[string]string { return v.SecurityGroupsMembers }).(pulumi.StringMapArrayOutput)
}

// The end of the port range for the TCP and UDP protocols, or an ICMP code number.
func (o SecurityGroupOutboundRuleOutput) ToPortRange() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SecurityGroupOutboundRule) *int { return v.ToPortRange }).(pulumi.IntPtrOutput)
}

type SecurityGroupOutboundRuleArrayOutput struct{ *pulumi.OutputState }

func (SecurityGroupOutboundRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityGroupOutboundRule)(nil)).Elem()
}

func (o SecurityGroupOutboundRuleArrayOutput) ToSecurityGroupOutboundRuleArrayOutput() SecurityGroupOutboundRuleArrayOutput {
	return o
}

func (o SecurityGroupOutboundRuleArrayOutput) ToSecurityGroupOutboundRuleArrayOutputWithContext(ctx context.Context) SecurityGroupOutboundRuleArrayOutput {
	return o
}

func (o SecurityGroupOutboundRuleArrayOutput) Index(i pulumi.IntInput) SecurityGroupOutboundRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecurityGroupOutboundRule {
		return vs[0].([]SecurityGroupOutboundRule)[vs[1].(int)]
	}).(SecurityGroupOutboundRuleOutput)
}

type SecurityGroupRuleRule struct {
	// The beginning of the port range for the TCP and UDP protocols, or an ICMP type number.
	FromPortRange *int `pulumi:"fromPortRange"`
	// The IP protocol name (`tcp`, `udp`, `icmp`, or `-1` for all protocols). By default, `-1`. In a Net, this can also be an IP protocol number. For more information, see the [IANA.org website](https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml).
	IpProtocol *string `pulumi:"ipProtocol"`
	// One or more IP ranges for the security group rules, in CIDR notation (for example, `10.0.0.0/16`).
	IpRanges []string `pulumi:"ipRanges"`
	// Information about one or more source or destination security groups.
	SecurityGroupsMembers []SecurityGroupRuleRuleSecurityGroupsMember `pulumi:"securityGroupsMembers"`
	// One or more service IDs to allow traffic from a Net to access the corresponding OUTSCALE services. For more information, see [ReadNetAccessPointServices](https://docs.outscale.com/api#readnetaccesspointservices).
	ServiceIds []string `pulumi:"serviceIds"`
	// The end of the port range for the TCP and UDP protocols, or an ICMP code number.
	ToPortRange *int `pulumi:"toPortRange"`
}

// SecurityGroupRuleRuleInput is an input type that accepts SecurityGroupRuleRuleArgs and SecurityGroupRuleRuleOutput values.
// You can construct a concrete instance of `SecurityGroupRuleRuleInput` via:
//
//	SecurityGroupRuleRuleArgs{...}
type SecurityGroupRuleRuleInput interface {
	pulumi.Input

	ToSecurityGroupRuleRuleOutput() SecurityGroupRuleRuleOutput
	ToSecurityGroupRuleRuleOutputWithContext(context.Context) SecurityGroupRuleRuleOutput
}

type SecurityGroupRuleRuleArgs struct {
	// The beginning of the port range for the TCP and UDP protocols, or an ICMP type number.
	FromPortRange pulumi.IntPtrInput `pulumi:"fromPortRange"`
	// The IP protocol name (`tcp`, `udp`, `icmp`, or `-1` for all protocols). By default, `-1`. In a Net, this can also be an IP protocol number. For more information, see the [IANA.org website](https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml).
	IpProtocol pulumi.StringPtrInput `pulumi:"ipProtocol"`
	// One or more IP ranges for the security group rules, in CIDR notation (for example, `10.0.0.0/16`).
	IpRanges pulumi.StringArrayInput `pulumi:"ipRanges"`
	// Information about one or more source or destination security groups.
	SecurityGroupsMembers SecurityGroupRuleRuleSecurityGroupsMemberArrayInput `pulumi:"securityGroupsMembers"`
	// One or more service IDs to allow traffic from a Net to access the corresponding OUTSCALE services. For more information, see [ReadNetAccessPointServices](https://docs.outscale.com/api#readnetaccesspointservices).
	ServiceIds pulumi.StringArrayInput `pulumi:"serviceIds"`
	// The end of the port range for the TCP and UDP protocols, or an ICMP code number.
	ToPortRange pulumi.IntPtrInput `pulumi:"toPortRange"`
}

func (SecurityGroupRuleRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityGroupRuleRule)(nil)).Elem()
}

func (i SecurityGroupRuleRuleArgs) ToSecurityGroupRuleRuleOutput() SecurityGroupRuleRuleOutput {
	return i.ToSecurityGroupRuleRuleOutputWithContext(context.Background())
}

func (i SecurityGroupRuleRuleArgs) ToSecurityGroupRuleRuleOutputWithContext(ctx context.Context) SecurityGroupRuleRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityGroupRuleRuleOutput)
}

// SecurityGroupRuleRuleArrayInput is an input type that accepts SecurityGroupRuleRuleArray and SecurityGroupRuleRuleArrayOutput values.
// You can construct a concrete instance of `SecurityGroupRuleRuleArrayInput` via:
//
//	SecurityGroupRuleRuleArray{ SecurityGroupRuleRuleArgs{...} }
type SecurityGroupRuleRuleArrayInput interface {
	pulumi.Input

	ToSecurityGroupRuleRuleArrayOutput() SecurityGroupRuleRuleArrayOutput
	ToSecurityGroupRuleRuleArrayOutputWithContext(context.Context) SecurityGroupRuleRuleArrayOutput
}

type SecurityGroupRuleRuleArray []SecurityGroupRuleRuleInput

func (SecurityGroupRuleRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityGroupRuleRule)(nil)).Elem()
}

func (i SecurityGroupRuleRuleArray) ToSecurityGroupRuleRuleArrayOutput() SecurityGroupRuleRuleArrayOutput {
	return i.ToSecurityGroupRuleRuleArrayOutputWithContext(context.Background())
}

func (i SecurityGroupRuleRuleArray) ToSecurityGroupRuleRuleArrayOutputWithContext(ctx context.Context) SecurityGroupRuleRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityGroupRuleRuleArrayOutput)
}

type SecurityGroupRuleRuleOutput struct{ *pulumi.OutputState }

func (SecurityGroupRuleRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityGroupRuleRule)(nil)).Elem()
}

func (o SecurityGroupRuleRuleOutput) ToSecurityGroupRuleRuleOutput() SecurityGroupRuleRuleOutput {
	return o
}

func (o SecurityGroupRuleRuleOutput) ToSecurityGroupRuleRuleOutputWithContext(ctx context.Context) SecurityGroupRuleRuleOutput {
	return o
}

// The beginning of the port range for the TCP and UDP protocols, or an ICMP type number.
func (o SecurityGroupRuleRuleOutput) FromPortRange() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SecurityGroupRuleRule) *int { return v.FromPortRange }).(pulumi.IntPtrOutput)
}

// The IP protocol name (`tcp`, `udp`, `icmp`, or `-1` for all protocols). By default, `-1`. In a Net, this can also be an IP protocol number. For more information, see the [IANA.org website](https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml).
func (o SecurityGroupRuleRuleOutput) IpProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityGroupRuleRule) *string { return v.IpProtocol }).(pulumi.StringPtrOutput)
}

// One or more IP ranges for the security group rules, in CIDR notation (for example, `10.0.0.0/16`).
func (o SecurityGroupRuleRuleOutput) IpRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityGroupRuleRule) []string { return v.IpRanges }).(pulumi.StringArrayOutput)
}

// Information about one or more source or destination security groups.
func (o SecurityGroupRuleRuleOutput) SecurityGroupsMembers() SecurityGroupRuleRuleSecurityGroupsMemberArrayOutput {
	return o.ApplyT(func(v SecurityGroupRuleRule) []SecurityGroupRuleRuleSecurityGroupsMember {
		return v.SecurityGroupsMembers
	}).(SecurityGroupRuleRuleSecurityGroupsMemberArrayOutput)
}

// One or more service IDs to allow traffic from a Net to access the corresponding OUTSCALE services. For more information, see [ReadNetAccessPointServices](https://docs.outscale.com/api#readnetaccesspointservices).
func (o SecurityGroupRuleRuleOutput) ServiceIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityGroupRuleRule) []string { return v.ServiceIds }).(pulumi.StringArrayOutput)
}

// The end of the port range for the TCP and UDP protocols, or an ICMP code number.
func (o SecurityGroupRuleRuleOutput) ToPortRange() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SecurityGroupRuleRule) *int { return v.ToPortRange }).(pulumi.IntPtrOutput)
}

type SecurityGroupRuleRuleArrayOutput struct{ *pulumi.OutputState }

func (SecurityGroupRuleRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityGroupRuleRule)(nil)).Elem()
}

func (o SecurityGroupRuleRuleArrayOutput) ToSecurityGroupRuleRuleArrayOutput() SecurityGroupRuleRuleArrayOutput {
	return o
}

func (o SecurityGroupRuleRuleArrayOutput) ToSecurityGroupRuleRuleArrayOutputWithContext(ctx context.Context) SecurityGroupRuleRuleArrayOutput {
	return o
}

func (o SecurityGroupRuleRuleArrayOutput) Index(i pulumi.IntInput) SecurityGroupRuleRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecurityGroupRuleRule {
		return vs[0].([]SecurityGroupRuleRule)[vs[1].(int)]
	}).(SecurityGroupRuleRuleOutput)
}

type SecurityGroupRuleRuleSecurityGroupsMember struct {
	// The account ID that owns the source or destination security group.
	AccountId *string `pulumi:"accountId"`
	// The ID of a source or destination security group that you want to link to the security group of the rule.
	SecurityGroupId *string `pulumi:"securityGroupId"`
	// (Public Cloud only) The name of a source or destination security group that you want to link to the security group of the rule.
	SecurityGroupName *string `pulumi:"securityGroupName"`
}

// SecurityGroupRuleRuleSecurityGroupsMemberInput is an input type that accepts SecurityGroupRuleRuleSecurityGroupsMemberArgs and SecurityGroupRuleRuleSecurityGroupsMemberOutput values.
// You can construct a concrete instance of `SecurityGroupRuleRuleSecurityGroupsMemberInput` via:
//
//	SecurityGroupRuleRuleSecurityGroupsMemberArgs{...}
type SecurityGroupRuleRuleSecurityGroupsMemberInput interface {
	pulumi.Input

	ToSecurityGroupRuleRuleSecurityGroupsMemberOutput() SecurityGroupRuleRuleSecurityGroupsMemberOutput
	ToSecurityGroupRuleRuleSecurityGroupsMemberOutputWithContext(context.Context) SecurityGroupRuleRuleSecurityGroupsMemberOutput
}

type SecurityGroupRuleRuleSecurityGroupsMemberArgs struct {
	// The account ID that owns the source or destination security group.
	AccountId pulumi.StringPtrInput `pulumi:"accountId"`
	// The ID of a source or destination security group that you want to link to the security group of the rule.
	SecurityGroupId pulumi.StringPtrInput `pulumi:"securityGroupId"`
	// (Public Cloud only) The name of a source or destination security group that you want to link to the security group of the rule.
	SecurityGroupName pulumi.StringPtrInput `pulumi:"securityGroupName"`
}

func (SecurityGroupRuleRuleSecurityGroupsMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityGroupRuleRuleSecurityGroupsMember)(nil)).Elem()
}

func (i SecurityGroupRuleRuleSecurityGroupsMemberArgs) ToSecurityGroupRuleRuleSecurityGroupsMemberOutput() SecurityGroupRuleRuleSecurityGroupsMemberOutput {
	return i.ToSecurityGroupRuleRuleSecurityGroupsMemberOutputWithContext(context.Background())
}

func (i SecurityGroupRuleRuleSecurityGroupsMemberArgs) ToSecurityGroupRuleRuleSecurityGroupsMemberOutputWithContext(ctx context.Context) SecurityGroupRuleRuleSecurityGroupsMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityGroupRuleRuleSecurityGroupsMemberOutput)
}

// SecurityGroupRuleRuleSecurityGroupsMemberArrayInput is an input type that accepts SecurityGroupRuleRuleSecurityGroupsMemberArray and SecurityGroupRuleRuleSecurityGroupsMemberArrayOutput values.
// You can construct a concrete instance of `SecurityGroupRuleRuleSecurityGroupsMemberArrayInput` via:
//
//	SecurityGroupRuleRuleSecurityGroupsMemberArray{ SecurityGroupRuleRuleSecurityGroupsMemberArgs{...} }
type SecurityGroupRuleRuleSecurityGroupsMemberArrayInput interface {
	pulumi.Input

	ToSecurityGroupRuleRuleSecurityGroupsMemberArrayOutput() SecurityGroupRuleRuleSecurityGroupsMemberArrayOutput
	ToSecurityGroupRuleRuleSecurityGroupsMemberArrayOutputWithContext(context.Context) SecurityGroupRuleRuleSecurityGroupsMemberArrayOutput
}

type SecurityGroupRuleRuleSecurityGroupsMemberArray []SecurityGroupRuleRuleSecurityGroupsMemberInput

func (SecurityGroupRuleRuleSecurityGroupsMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityGroupRuleRuleSecurityGroupsMember)(nil)).Elem()
}

func (i SecurityGroupRuleRuleSecurityGroupsMemberArray) ToSecurityGroupRuleRuleSecurityGroupsMemberArrayOutput() SecurityGroupRuleRuleSecurityGroupsMemberArrayOutput {
	return i.ToSecurityGroupRuleRuleSecurityGroupsMemberArrayOutputWithContext(context.Background())
}

func (i SecurityGroupRuleRuleSecurityGroupsMemberArray) ToSecurityGroupRuleRuleSecurityGroupsMemberArrayOutputWithContext(ctx context.Context) SecurityGroupRuleRuleSecurityGroupsMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityGroupRuleRuleSecurityGroupsMemberArrayOutput)
}

type SecurityGroupRuleRuleSecurityGroupsMemberOutput struct{ *pulumi.OutputState }

func (SecurityGroupRuleRuleSecurityGroupsMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityGroupRuleRuleSecurityGroupsMember)(nil)).Elem()
}

func (o SecurityGroupRuleRuleSecurityGroupsMemberOutput) ToSecurityGroupRuleRuleSecurityGroupsMemberOutput() SecurityGroupRuleRuleSecurityGroupsMemberOutput {
	return o
}

func (o SecurityGroupRuleRuleSecurityGroupsMemberOutput) ToSecurityGroupRuleRuleSecurityGroupsMemberOutputWithContext(ctx context.Context) SecurityGroupRuleRuleSecurityGroupsMemberOutput {
	return o
}

// The account ID that owns the source or destination security group.
func (o SecurityGroupRuleRuleSecurityGroupsMemberOutput) AccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityGroupRuleRuleSecurityGroupsMember) *string { return v.AccountId }).(pulumi.StringPtrOutput)
}

// The ID of a source or destination security group that you want to link to the security group of the rule.
func (o SecurityGroupRuleRuleSecurityGroupsMemberOutput) SecurityGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityGroupRuleRuleSecurityGroupsMember) *string { return v.SecurityGroupId }).(pulumi.StringPtrOutput)
}

// (Public Cloud only) The name of a source or destination security group that you want to link to the security group of the rule.
func (o SecurityGroupRuleRuleSecurityGroupsMemberOutput) SecurityGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityGroupRuleRuleSecurityGroupsMember) *string { return v.SecurityGroupName }).(pulumi.StringPtrOutput)
}

type SecurityGroupRuleRuleSecurityGroupsMemberArrayOutput struct{ *pulumi.OutputState }

func (SecurityGroupRuleRuleSecurityGroupsMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityGroupRuleRuleSecurityGroupsMember)(nil)).Elem()
}

func (o SecurityGroupRuleRuleSecurityGroupsMemberArrayOutput) ToSecurityGroupRuleRuleSecurityGroupsMemberArrayOutput() SecurityGroupRuleRuleSecurityGroupsMemberArrayOutput {
	return o
}

func (o SecurityGroupRuleRuleSecurityGroupsMemberArrayOutput) ToSecurityGroupRuleRuleSecurityGroupsMemberArrayOutputWithContext(ctx context.Context) SecurityGroupRuleRuleSecurityGroupsMemberArrayOutput {
	return o
}

func (o SecurityGroupRuleRuleSecurityGroupsMemberArrayOutput) Index(i pulumi.IntInput) SecurityGroupRuleRuleSecurityGroupsMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecurityGroupRuleRuleSecurityGroupsMember {
		return vs[0].([]SecurityGroupRuleRuleSecurityGroupsMember)[vs[1].(int)]
	}).(SecurityGroupRuleRuleSecurityGroupsMemberOutput)
}

type SecurityGroupTag struct {
	// The key of the tag, with a minimum of 1 character.
	Key *string `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value *string `pulumi:"value"`
}

// SecurityGroupTagInput is an input type that accepts SecurityGroupTagArgs and SecurityGroupTagOutput values.
// You can construct a concrete instance of `SecurityGroupTagInput` via:
//
//	SecurityGroupTagArgs{...}
type SecurityGroupTagInput interface {
	pulumi.Input

	ToSecurityGroupTagOutput() SecurityGroupTagOutput
	ToSecurityGroupTagOutputWithContext(context.Context) SecurityGroupTagOutput
}

type SecurityGroupTagArgs struct {
	// The key of the tag, with a minimum of 1 character.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (SecurityGroupTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityGroupTag)(nil)).Elem()
}

func (i SecurityGroupTagArgs) ToSecurityGroupTagOutput() SecurityGroupTagOutput {
	return i.ToSecurityGroupTagOutputWithContext(context.Background())
}

func (i SecurityGroupTagArgs) ToSecurityGroupTagOutputWithContext(ctx context.Context) SecurityGroupTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityGroupTagOutput)
}

// SecurityGroupTagArrayInput is an input type that accepts SecurityGroupTagArray and SecurityGroupTagArrayOutput values.
// You can construct a concrete instance of `SecurityGroupTagArrayInput` via:
//
//	SecurityGroupTagArray{ SecurityGroupTagArgs{...} }
type SecurityGroupTagArrayInput interface {
	pulumi.Input

	ToSecurityGroupTagArrayOutput() SecurityGroupTagArrayOutput
	ToSecurityGroupTagArrayOutputWithContext(context.Context) SecurityGroupTagArrayOutput
}

type SecurityGroupTagArray []SecurityGroupTagInput

func (SecurityGroupTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityGroupTag)(nil)).Elem()
}

func (i SecurityGroupTagArray) ToSecurityGroupTagArrayOutput() SecurityGroupTagArrayOutput {
	return i.ToSecurityGroupTagArrayOutputWithContext(context.Background())
}

func (i SecurityGroupTagArray) ToSecurityGroupTagArrayOutputWithContext(ctx context.Context) SecurityGroupTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityGroupTagArrayOutput)
}

type SecurityGroupTagOutput struct{ *pulumi.OutputState }

func (SecurityGroupTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityGroupTag)(nil)).Elem()
}

func (o SecurityGroupTagOutput) ToSecurityGroupTagOutput() SecurityGroupTagOutput {
	return o
}

func (o SecurityGroupTagOutput) ToSecurityGroupTagOutputWithContext(ctx context.Context) SecurityGroupTagOutput {
	return o
}

// The key of the tag, with a minimum of 1 character.
func (o SecurityGroupTagOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityGroupTag) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The value of the tag, between 0 and 255 characters.
func (o SecurityGroupTagOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityGroupTag) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type SecurityGroupTagArrayOutput struct{ *pulumi.OutputState }

func (SecurityGroupTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityGroupTag)(nil)).Elem()
}

func (o SecurityGroupTagArrayOutput) ToSecurityGroupTagArrayOutput() SecurityGroupTagArrayOutput {
	return o
}

func (o SecurityGroupTagArrayOutput) ToSecurityGroupTagArrayOutputWithContext(ctx context.Context) SecurityGroupTagArrayOutput {
	return o
}

func (o SecurityGroupTagArrayOutput) Index(i pulumi.IntInput) SecurityGroupTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecurityGroupTag {
		return vs[0].([]SecurityGroupTag)[vs[1].(int)]
	}).(SecurityGroupTagOutput)
}

type SnapshotAttributesPermissionsToCreateVolumeAdditions struct {
	// The account ID of one or more users to whom you want to give permissions.
	AccountIds []string `pulumi:"accountIds"`
	// If true, the resource is public. If false, the resource is private.
	GlobalPermission *bool `pulumi:"globalPermission"`
}

// SnapshotAttributesPermissionsToCreateVolumeAdditionsInput is an input type that accepts SnapshotAttributesPermissionsToCreateVolumeAdditionsArgs and SnapshotAttributesPermissionsToCreateVolumeAdditionsOutput values.
// You can construct a concrete instance of `SnapshotAttributesPermissionsToCreateVolumeAdditionsInput` via:
//
//	SnapshotAttributesPermissionsToCreateVolumeAdditionsArgs{...}
type SnapshotAttributesPermissionsToCreateVolumeAdditionsInput interface {
	pulumi.Input

	ToSnapshotAttributesPermissionsToCreateVolumeAdditionsOutput() SnapshotAttributesPermissionsToCreateVolumeAdditionsOutput
	ToSnapshotAttributesPermissionsToCreateVolumeAdditionsOutputWithContext(context.Context) SnapshotAttributesPermissionsToCreateVolumeAdditionsOutput
}

type SnapshotAttributesPermissionsToCreateVolumeAdditionsArgs struct {
	// The account ID of one or more users to whom you want to give permissions.
	AccountIds pulumi.StringArrayInput `pulumi:"accountIds"`
	// If true, the resource is public. If false, the resource is private.
	GlobalPermission pulumi.BoolPtrInput `pulumi:"globalPermission"`
}

func (SnapshotAttributesPermissionsToCreateVolumeAdditionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SnapshotAttributesPermissionsToCreateVolumeAdditions)(nil)).Elem()
}

func (i SnapshotAttributesPermissionsToCreateVolumeAdditionsArgs) ToSnapshotAttributesPermissionsToCreateVolumeAdditionsOutput() SnapshotAttributesPermissionsToCreateVolumeAdditionsOutput {
	return i.ToSnapshotAttributesPermissionsToCreateVolumeAdditionsOutputWithContext(context.Background())
}

func (i SnapshotAttributesPermissionsToCreateVolumeAdditionsArgs) ToSnapshotAttributesPermissionsToCreateVolumeAdditionsOutputWithContext(ctx context.Context) SnapshotAttributesPermissionsToCreateVolumeAdditionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SnapshotAttributesPermissionsToCreateVolumeAdditionsOutput)
}

func (i SnapshotAttributesPermissionsToCreateVolumeAdditionsArgs) ToSnapshotAttributesPermissionsToCreateVolumeAdditionsPtrOutput() SnapshotAttributesPermissionsToCreateVolumeAdditionsPtrOutput {
	return i.ToSnapshotAttributesPermissionsToCreateVolumeAdditionsPtrOutputWithContext(context.Background())
}

func (i SnapshotAttributesPermissionsToCreateVolumeAdditionsArgs) ToSnapshotAttributesPermissionsToCreateVolumeAdditionsPtrOutputWithContext(ctx context.Context) SnapshotAttributesPermissionsToCreateVolumeAdditionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SnapshotAttributesPermissionsToCreateVolumeAdditionsOutput).ToSnapshotAttributesPermissionsToCreateVolumeAdditionsPtrOutputWithContext(ctx)
}

// SnapshotAttributesPermissionsToCreateVolumeAdditionsPtrInput is an input type that accepts SnapshotAttributesPermissionsToCreateVolumeAdditionsArgs, SnapshotAttributesPermissionsToCreateVolumeAdditionsPtr and SnapshotAttributesPermissionsToCreateVolumeAdditionsPtrOutput values.
// You can construct a concrete instance of `SnapshotAttributesPermissionsToCreateVolumeAdditionsPtrInput` via:
//
//	        SnapshotAttributesPermissionsToCreateVolumeAdditionsArgs{...}
//
//	or:
//
//	        nil
type SnapshotAttributesPermissionsToCreateVolumeAdditionsPtrInput interface {
	pulumi.Input

	ToSnapshotAttributesPermissionsToCreateVolumeAdditionsPtrOutput() SnapshotAttributesPermissionsToCreateVolumeAdditionsPtrOutput
	ToSnapshotAttributesPermissionsToCreateVolumeAdditionsPtrOutputWithContext(context.Context) SnapshotAttributesPermissionsToCreateVolumeAdditionsPtrOutput
}

type snapshotAttributesPermissionsToCreateVolumeAdditionsPtrType SnapshotAttributesPermissionsToCreateVolumeAdditionsArgs

func SnapshotAttributesPermissionsToCreateVolumeAdditionsPtr(v *SnapshotAttributesPermissionsToCreateVolumeAdditionsArgs) SnapshotAttributesPermissionsToCreateVolumeAdditionsPtrInput {
	return (*snapshotAttributesPermissionsToCreateVolumeAdditionsPtrType)(v)
}

func (*snapshotAttributesPermissionsToCreateVolumeAdditionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SnapshotAttributesPermissionsToCreateVolumeAdditions)(nil)).Elem()
}

func (i *snapshotAttributesPermissionsToCreateVolumeAdditionsPtrType) ToSnapshotAttributesPermissionsToCreateVolumeAdditionsPtrOutput() SnapshotAttributesPermissionsToCreateVolumeAdditionsPtrOutput {
	return i.ToSnapshotAttributesPermissionsToCreateVolumeAdditionsPtrOutputWithContext(context.Background())
}

func (i *snapshotAttributesPermissionsToCreateVolumeAdditionsPtrType) ToSnapshotAttributesPermissionsToCreateVolumeAdditionsPtrOutputWithContext(ctx context.Context) SnapshotAttributesPermissionsToCreateVolumeAdditionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SnapshotAttributesPermissionsToCreateVolumeAdditionsPtrOutput)
}

type SnapshotAttributesPermissionsToCreateVolumeAdditionsOutput struct{ *pulumi.OutputState }

func (SnapshotAttributesPermissionsToCreateVolumeAdditionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SnapshotAttributesPermissionsToCreateVolumeAdditions)(nil)).Elem()
}

func (o SnapshotAttributesPermissionsToCreateVolumeAdditionsOutput) ToSnapshotAttributesPermissionsToCreateVolumeAdditionsOutput() SnapshotAttributesPermissionsToCreateVolumeAdditionsOutput {
	return o
}

func (o SnapshotAttributesPermissionsToCreateVolumeAdditionsOutput) ToSnapshotAttributesPermissionsToCreateVolumeAdditionsOutputWithContext(ctx context.Context) SnapshotAttributesPermissionsToCreateVolumeAdditionsOutput {
	return o
}

func (o SnapshotAttributesPermissionsToCreateVolumeAdditionsOutput) ToSnapshotAttributesPermissionsToCreateVolumeAdditionsPtrOutput() SnapshotAttributesPermissionsToCreateVolumeAdditionsPtrOutput {
	return o.ToSnapshotAttributesPermissionsToCreateVolumeAdditionsPtrOutputWithContext(context.Background())
}

func (o SnapshotAttributesPermissionsToCreateVolumeAdditionsOutput) ToSnapshotAttributesPermissionsToCreateVolumeAdditionsPtrOutputWithContext(ctx context.Context) SnapshotAttributesPermissionsToCreateVolumeAdditionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SnapshotAttributesPermissionsToCreateVolumeAdditions) *SnapshotAttributesPermissionsToCreateVolumeAdditions {
		return &v
	}).(SnapshotAttributesPermissionsToCreateVolumeAdditionsPtrOutput)
}

// The account ID of one or more users to whom you want to give permissions.
func (o SnapshotAttributesPermissionsToCreateVolumeAdditionsOutput) AccountIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SnapshotAttributesPermissionsToCreateVolumeAdditions) []string { return v.AccountIds }).(pulumi.StringArrayOutput)
}

// If true, the resource is public. If false, the resource is private.
func (o SnapshotAttributesPermissionsToCreateVolumeAdditionsOutput) GlobalPermission() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SnapshotAttributesPermissionsToCreateVolumeAdditions) *bool { return v.GlobalPermission }).(pulumi.BoolPtrOutput)
}

type SnapshotAttributesPermissionsToCreateVolumeAdditionsPtrOutput struct{ *pulumi.OutputState }

func (SnapshotAttributesPermissionsToCreateVolumeAdditionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SnapshotAttributesPermissionsToCreateVolumeAdditions)(nil)).Elem()
}

func (o SnapshotAttributesPermissionsToCreateVolumeAdditionsPtrOutput) ToSnapshotAttributesPermissionsToCreateVolumeAdditionsPtrOutput() SnapshotAttributesPermissionsToCreateVolumeAdditionsPtrOutput {
	return o
}

func (o SnapshotAttributesPermissionsToCreateVolumeAdditionsPtrOutput) ToSnapshotAttributesPermissionsToCreateVolumeAdditionsPtrOutputWithContext(ctx context.Context) SnapshotAttributesPermissionsToCreateVolumeAdditionsPtrOutput {
	return o
}

func (o SnapshotAttributesPermissionsToCreateVolumeAdditionsPtrOutput) Elem() SnapshotAttributesPermissionsToCreateVolumeAdditionsOutput {
	return o.ApplyT(func(v *SnapshotAttributesPermissionsToCreateVolumeAdditions) SnapshotAttributesPermissionsToCreateVolumeAdditions {
		if v != nil {
			return *v
		}
		var ret SnapshotAttributesPermissionsToCreateVolumeAdditions
		return ret
	}).(SnapshotAttributesPermissionsToCreateVolumeAdditionsOutput)
}

// The account ID of one or more users to whom you want to give permissions.
func (o SnapshotAttributesPermissionsToCreateVolumeAdditionsPtrOutput) AccountIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SnapshotAttributesPermissionsToCreateVolumeAdditions) []string {
		if v == nil {
			return nil
		}
		return v.AccountIds
	}).(pulumi.StringArrayOutput)
}

// If true, the resource is public. If false, the resource is private.
func (o SnapshotAttributesPermissionsToCreateVolumeAdditionsPtrOutput) GlobalPermission() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SnapshotAttributesPermissionsToCreateVolumeAdditions) *bool {
		if v == nil {
			return nil
		}
		return v.GlobalPermission
	}).(pulumi.BoolPtrOutput)
}

type SnapshotAttributesPermissionsToCreateVolumeRemoval struct {
	// The account ID of one or more users from whom you want to remove permissions.
	AccountIds []string `pulumi:"accountIds"`
	// If true, the resource is public. If false, the resource is private.
	GlobalPermission *bool `pulumi:"globalPermission"`
}

// SnapshotAttributesPermissionsToCreateVolumeRemovalInput is an input type that accepts SnapshotAttributesPermissionsToCreateVolumeRemovalArgs and SnapshotAttributesPermissionsToCreateVolumeRemovalOutput values.
// You can construct a concrete instance of `SnapshotAttributesPermissionsToCreateVolumeRemovalInput` via:
//
//	SnapshotAttributesPermissionsToCreateVolumeRemovalArgs{...}
type SnapshotAttributesPermissionsToCreateVolumeRemovalInput interface {
	pulumi.Input

	ToSnapshotAttributesPermissionsToCreateVolumeRemovalOutput() SnapshotAttributesPermissionsToCreateVolumeRemovalOutput
	ToSnapshotAttributesPermissionsToCreateVolumeRemovalOutputWithContext(context.Context) SnapshotAttributesPermissionsToCreateVolumeRemovalOutput
}

type SnapshotAttributesPermissionsToCreateVolumeRemovalArgs struct {
	// The account ID of one or more users from whom you want to remove permissions.
	AccountIds pulumi.StringArrayInput `pulumi:"accountIds"`
	// If true, the resource is public. If false, the resource is private.
	GlobalPermission pulumi.BoolPtrInput `pulumi:"globalPermission"`
}

func (SnapshotAttributesPermissionsToCreateVolumeRemovalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SnapshotAttributesPermissionsToCreateVolumeRemoval)(nil)).Elem()
}

func (i SnapshotAttributesPermissionsToCreateVolumeRemovalArgs) ToSnapshotAttributesPermissionsToCreateVolumeRemovalOutput() SnapshotAttributesPermissionsToCreateVolumeRemovalOutput {
	return i.ToSnapshotAttributesPermissionsToCreateVolumeRemovalOutputWithContext(context.Background())
}

func (i SnapshotAttributesPermissionsToCreateVolumeRemovalArgs) ToSnapshotAttributesPermissionsToCreateVolumeRemovalOutputWithContext(ctx context.Context) SnapshotAttributesPermissionsToCreateVolumeRemovalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SnapshotAttributesPermissionsToCreateVolumeRemovalOutput)
}

// SnapshotAttributesPermissionsToCreateVolumeRemovalArrayInput is an input type that accepts SnapshotAttributesPermissionsToCreateVolumeRemovalArray and SnapshotAttributesPermissionsToCreateVolumeRemovalArrayOutput values.
// You can construct a concrete instance of `SnapshotAttributesPermissionsToCreateVolumeRemovalArrayInput` via:
//
//	SnapshotAttributesPermissionsToCreateVolumeRemovalArray{ SnapshotAttributesPermissionsToCreateVolumeRemovalArgs{...} }
type SnapshotAttributesPermissionsToCreateVolumeRemovalArrayInput interface {
	pulumi.Input

	ToSnapshotAttributesPermissionsToCreateVolumeRemovalArrayOutput() SnapshotAttributesPermissionsToCreateVolumeRemovalArrayOutput
	ToSnapshotAttributesPermissionsToCreateVolumeRemovalArrayOutputWithContext(context.Context) SnapshotAttributesPermissionsToCreateVolumeRemovalArrayOutput
}

type SnapshotAttributesPermissionsToCreateVolumeRemovalArray []SnapshotAttributesPermissionsToCreateVolumeRemovalInput

func (SnapshotAttributesPermissionsToCreateVolumeRemovalArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SnapshotAttributesPermissionsToCreateVolumeRemoval)(nil)).Elem()
}

func (i SnapshotAttributesPermissionsToCreateVolumeRemovalArray) ToSnapshotAttributesPermissionsToCreateVolumeRemovalArrayOutput() SnapshotAttributesPermissionsToCreateVolumeRemovalArrayOutput {
	return i.ToSnapshotAttributesPermissionsToCreateVolumeRemovalArrayOutputWithContext(context.Background())
}

func (i SnapshotAttributesPermissionsToCreateVolumeRemovalArray) ToSnapshotAttributesPermissionsToCreateVolumeRemovalArrayOutputWithContext(ctx context.Context) SnapshotAttributesPermissionsToCreateVolumeRemovalArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SnapshotAttributesPermissionsToCreateVolumeRemovalArrayOutput)
}

type SnapshotAttributesPermissionsToCreateVolumeRemovalOutput struct{ *pulumi.OutputState }

func (SnapshotAttributesPermissionsToCreateVolumeRemovalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SnapshotAttributesPermissionsToCreateVolumeRemoval)(nil)).Elem()
}

func (o SnapshotAttributesPermissionsToCreateVolumeRemovalOutput) ToSnapshotAttributesPermissionsToCreateVolumeRemovalOutput() SnapshotAttributesPermissionsToCreateVolumeRemovalOutput {
	return o
}

func (o SnapshotAttributesPermissionsToCreateVolumeRemovalOutput) ToSnapshotAttributesPermissionsToCreateVolumeRemovalOutputWithContext(ctx context.Context) SnapshotAttributesPermissionsToCreateVolumeRemovalOutput {
	return o
}

// The account ID of one or more users from whom you want to remove permissions.
func (o SnapshotAttributesPermissionsToCreateVolumeRemovalOutput) AccountIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SnapshotAttributesPermissionsToCreateVolumeRemoval) []string { return v.AccountIds }).(pulumi.StringArrayOutput)
}

// If true, the resource is public. If false, the resource is private.
func (o SnapshotAttributesPermissionsToCreateVolumeRemovalOutput) GlobalPermission() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SnapshotAttributesPermissionsToCreateVolumeRemoval) *bool { return v.GlobalPermission }).(pulumi.BoolPtrOutput)
}

type SnapshotAttributesPermissionsToCreateVolumeRemovalArrayOutput struct{ *pulumi.OutputState }

func (SnapshotAttributesPermissionsToCreateVolumeRemovalArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SnapshotAttributesPermissionsToCreateVolumeRemoval)(nil)).Elem()
}

func (o SnapshotAttributesPermissionsToCreateVolumeRemovalArrayOutput) ToSnapshotAttributesPermissionsToCreateVolumeRemovalArrayOutput() SnapshotAttributesPermissionsToCreateVolumeRemovalArrayOutput {
	return o
}

func (o SnapshotAttributesPermissionsToCreateVolumeRemovalArrayOutput) ToSnapshotAttributesPermissionsToCreateVolumeRemovalArrayOutputWithContext(ctx context.Context) SnapshotAttributesPermissionsToCreateVolumeRemovalArrayOutput {
	return o
}

func (o SnapshotAttributesPermissionsToCreateVolumeRemovalArrayOutput) Index(i pulumi.IntInput) SnapshotAttributesPermissionsToCreateVolumeRemovalOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SnapshotAttributesPermissionsToCreateVolumeRemoval {
		return vs[0].([]SnapshotAttributesPermissionsToCreateVolumeRemoval)[vs[1].(int)]
	}).(SnapshotAttributesPermissionsToCreateVolumeRemovalOutput)
}

type SnapshotExportTaskOsuExport struct {
	// The format of the export disk (`qcow2` \| `raw`).
	DiskImageFormat string `pulumi:"diskImageFormat"`
	// Information about the OOS API key.
	OsuApiKeys []SnapshotExportTaskOsuExportOsuApiKey `pulumi:"osuApiKeys"`
	// The name of the OOS bucket where you want to export the object.
	OsuBucket string `pulumi:"osuBucket"`
	// The prefix for the key of the OOS object.
	OsuPrefix *string `pulumi:"osuPrefix"`
}

// SnapshotExportTaskOsuExportInput is an input type that accepts SnapshotExportTaskOsuExportArgs and SnapshotExportTaskOsuExportOutput values.
// You can construct a concrete instance of `SnapshotExportTaskOsuExportInput` via:
//
//	SnapshotExportTaskOsuExportArgs{...}
type SnapshotExportTaskOsuExportInput interface {
	pulumi.Input

	ToSnapshotExportTaskOsuExportOutput() SnapshotExportTaskOsuExportOutput
	ToSnapshotExportTaskOsuExportOutputWithContext(context.Context) SnapshotExportTaskOsuExportOutput
}

type SnapshotExportTaskOsuExportArgs struct {
	// The format of the export disk (`qcow2` \| `raw`).
	DiskImageFormat pulumi.StringInput `pulumi:"diskImageFormat"`
	// Information about the OOS API key.
	OsuApiKeys SnapshotExportTaskOsuExportOsuApiKeyArrayInput `pulumi:"osuApiKeys"`
	// The name of the OOS bucket where you want to export the object.
	OsuBucket pulumi.StringInput `pulumi:"osuBucket"`
	// The prefix for the key of the OOS object.
	OsuPrefix pulumi.StringPtrInput `pulumi:"osuPrefix"`
}

func (SnapshotExportTaskOsuExportArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SnapshotExportTaskOsuExport)(nil)).Elem()
}

func (i SnapshotExportTaskOsuExportArgs) ToSnapshotExportTaskOsuExportOutput() SnapshotExportTaskOsuExportOutput {
	return i.ToSnapshotExportTaskOsuExportOutputWithContext(context.Background())
}

func (i SnapshotExportTaskOsuExportArgs) ToSnapshotExportTaskOsuExportOutputWithContext(ctx context.Context) SnapshotExportTaskOsuExportOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SnapshotExportTaskOsuExportOutput)
}

// SnapshotExportTaskOsuExportArrayInput is an input type that accepts SnapshotExportTaskOsuExportArray and SnapshotExportTaskOsuExportArrayOutput values.
// You can construct a concrete instance of `SnapshotExportTaskOsuExportArrayInput` via:
//
//	SnapshotExportTaskOsuExportArray{ SnapshotExportTaskOsuExportArgs{...} }
type SnapshotExportTaskOsuExportArrayInput interface {
	pulumi.Input

	ToSnapshotExportTaskOsuExportArrayOutput() SnapshotExportTaskOsuExportArrayOutput
	ToSnapshotExportTaskOsuExportArrayOutputWithContext(context.Context) SnapshotExportTaskOsuExportArrayOutput
}

type SnapshotExportTaskOsuExportArray []SnapshotExportTaskOsuExportInput

func (SnapshotExportTaskOsuExportArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SnapshotExportTaskOsuExport)(nil)).Elem()
}

func (i SnapshotExportTaskOsuExportArray) ToSnapshotExportTaskOsuExportArrayOutput() SnapshotExportTaskOsuExportArrayOutput {
	return i.ToSnapshotExportTaskOsuExportArrayOutputWithContext(context.Background())
}

func (i SnapshotExportTaskOsuExportArray) ToSnapshotExportTaskOsuExportArrayOutputWithContext(ctx context.Context) SnapshotExportTaskOsuExportArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SnapshotExportTaskOsuExportArrayOutput)
}

type SnapshotExportTaskOsuExportOutput struct{ *pulumi.OutputState }

func (SnapshotExportTaskOsuExportOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SnapshotExportTaskOsuExport)(nil)).Elem()
}

func (o SnapshotExportTaskOsuExportOutput) ToSnapshotExportTaskOsuExportOutput() SnapshotExportTaskOsuExportOutput {
	return o
}

func (o SnapshotExportTaskOsuExportOutput) ToSnapshotExportTaskOsuExportOutputWithContext(ctx context.Context) SnapshotExportTaskOsuExportOutput {
	return o
}

// The format of the export disk (`qcow2` \| `raw`).
func (o SnapshotExportTaskOsuExportOutput) DiskImageFormat() pulumi.StringOutput {
	return o.ApplyT(func(v SnapshotExportTaskOsuExport) string { return v.DiskImageFormat }).(pulumi.StringOutput)
}

// Information about the OOS API key.
func (o SnapshotExportTaskOsuExportOutput) OsuApiKeys() SnapshotExportTaskOsuExportOsuApiKeyArrayOutput {
	return o.ApplyT(func(v SnapshotExportTaskOsuExport) []SnapshotExportTaskOsuExportOsuApiKey { return v.OsuApiKeys }).(SnapshotExportTaskOsuExportOsuApiKeyArrayOutput)
}

// The name of the OOS bucket where you want to export the object.
func (o SnapshotExportTaskOsuExportOutput) OsuBucket() pulumi.StringOutput {
	return o.ApplyT(func(v SnapshotExportTaskOsuExport) string { return v.OsuBucket }).(pulumi.StringOutput)
}

// The prefix for the key of the OOS object.
func (o SnapshotExportTaskOsuExportOutput) OsuPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SnapshotExportTaskOsuExport) *string { return v.OsuPrefix }).(pulumi.StringPtrOutput)
}

type SnapshotExportTaskOsuExportArrayOutput struct{ *pulumi.OutputState }

func (SnapshotExportTaskOsuExportArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SnapshotExportTaskOsuExport)(nil)).Elem()
}

func (o SnapshotExportTaskOsuExportArrayOutput) ToSnapshotExportTaskOsuExportArrayOutput() SnapshotExportTaskOsuExportArrayOutput {
	return o
}

func (o SnapshotExportTaskOsuExportArrayOutput) ToSnapshotExportTaskOsuExportArrayOutputWithContext(ctx context.Context) SnapshotExportTaskOsuExportArrayOutput {
	return o
}

func (o SnapshotExportTaskOsuExportArrayOutput) Index(i pulumi.IntInput) SnapshotExportTaskOsuExportOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SnapshotExportTaskOsuExport {
		return vs[0].([]SnapshotExportTaskOsuExport)[vs[1].(int)]
	}).(SnapshotExportTaskOsuExportOutput)
}

type SnapshotExportTaskOsuExportOsuApiKey struct {
	// The API key of the OOS account that enables you to access the bucket.
	ApiKeyId string `pulumi:"apiKeyId"`
	// The secret key of the OOS account that enables you to access the bucket.
	SecretKey string `pulumi:"secretKey"`
}

// SnapshotExportTaskOsuExportOsuApiKeyInput is an input type that accepts SnapshotExportTaskOsuExportOsuApiKeyArgs and SnapshotExportTaskOsuExportOsuApiKeyOutput values.
// You can construct a concrete instance of `SnapshotExportTaskOsuExportOsuApiKeyInput` via:
//
//	SnapshotExportTaskOsuExportOsuApiKeyArgs{...}
type SnapshotExportTaskOsuExportOsuApiKeyInput interface {
	pulumi.Input

	ToSnapshotExportTaskOsuExportOsuApiKeyOutput() SnapshotExportTaskOsuExportOsuApiKeyOutput
	ToSnapshotExportTaskOsuExportOsuApiKeyOutputWithContext(context.Context) SnapshotExportTaskOsuExportOsuApiKeyOutput
}

type SnapshotExportTaskOsuExportOsuApiKeyArgs struct {
	// The API key of the OOS account that enables you to access the bucket.
	ApiKeyId pulumi.StringInput `pulumi:"apiKeyId"`
	// The secret key of the OOS account that enables you to access the bucket.
	SecretKey pulumi.StringInput `pulumi:"secretKey"`
}

func (SnapshotExportTaskOsuExportOsuApiKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SnapshotExportTaskOsuExportOsuApiKey)(nil)).Elem()
}

func (i SnapshotExportTaskOsuExportOsuApiKeyArgs) ToSnapshotExportTaskOsuExportOsuApiKeyOutput() SnapshotExportTaskOsuExportOsuApiKeyOutput {
	return i.ToSnapshotExportTaskOsuExportOsuApiKeyOutputWithContext(context.Background())
}

func (i SnapshotExportTaskOsuExportOsuApiKeyArgs) ToSnapshotExportTaskOsuExportOsuApiKeyOutputWithContext(ctx context.Context) SnapshotExportTaskOsuExportOsuApiKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SnapshotExportTaskOsuExportOsuApiKeyOutput)
}

// SnapshotExportTaskOsuExportOsuApiKeyArrayInput is an input type that accepts SnapshotExportTaskOsuExportOsuApiKeyArray and SnapshotExportTaskOsuExportOsuApiKeyArrayOutput values.
// You can construct a concrete instance of `SnapshotExportTaskOsuExportOsuApiKeyArrayInput` via:
//
//	SnapshotExportTaskOsuExportOsuApiKeyArray{ SnapshotExportTaskOsuExportOsuApiKeyArgs{...} }
type SnapshotExportTaskOsuExportOsuApiKeyArrayInput interface {
	pulumi.Input

	ToSnapshotExportTaskOsuExportOsuApiKeyArrayOutput() SnapshotExportTaskOsuExportOsuApiKeyArrayOutput
	ToSnapshotExportTaskOsuExportOsuApiKeyArrayOutputWithContext(context.Context) SnapshotExportTaskOsuExportOsuApiKeyArrayOutput
}

type SnapshotExportTaskOsuExportOsuApiKeyArray []SnapshotExportTaskOsuExportOsuApiKeyInput

func (SnapshotExportTaskOsuExportOsuApiKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SnapshotExportTaskOsuExportOsuApiKey)(nil)).Elem()
}

func (i SnapshotExportTaskOsuExportOsuApiKeyArray) ToSnapshotExportTaskOsuExportOsuApiKeyArrayOutput() SnapshotExportTaskOsuExportOsuApiKeyArrayOutput {
	return i.ToSnapshotExportTaskOsuExportOsuApiKeyArrayOutputWithContext(context.Background())
}

func (i SnapshotExportTaskOsuExportOsuApiKeyArray) ToSnapshotExportTaskOsuExportOsuApiKeyArrayOutputWithContext(ctx context.Context) SnapshotExportTaskOsuExportOsuApiKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SnapshotExportTaskOsuExportOsuApiKeyArrayOutput)
}

type SnapshotExportTaskOsuExportOsuApiKeyOutput struct{ *pulumi.OutputState }

func (SnapshotExportTaskOsuExportOsuApiKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SnapshotExportTaskOsuExportOsuApiKey)(nil)).Elem()
}

func (o SnapshotExportTaskOsuExportOsuApiKeyOutput) ToSnapshotExportTaskOsuExportOsuApiKeyOutput() SnapshotExportTaskOsuExportOsuApiKeyOutput {
	return o
}

func (o SnapshotExportTaskOsuExportOsuApiKeyOutput) ToSnapshotExportTaskOsuExportOsuApiKeyOutputWithContext(ctx context.Context) SnapshotExportTaskOsuExportOsuApiKeyOutput {
	return o
}

// The API key of the OOS account that enables you to access the bucket.
func (o SnapshotExportTaskOsuExportOsuApiKeyOutput) ApiKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v SnapshotExportTaskOsuExportOsuApiKey) string { return v.ApiKeyId }).(pulumi.StringOutput)
}

// The secret key of the OOS account that enables you to access the bucket.
func (o SnapshotExportTaskOsuExportOsuApiKeyOutput) SecretKey() pulumi.StringOutput {
	return o.ApplyT(func(v SnapshotExportTaskOsuExportOsuApiKey) string { return v.SecretKey }).(pulumi.StringOutput)
}

type SnapshotExportTaskOsuExportOsuApiKeyArrayOutput struct{ *pulumi.OutputState }

func (SnapshotExportTaskOsuExportOsuApiKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SnapshotExportTaskOsuExportOsuApiKey)(nil)).Elem()
}

func (o SnapshotExportTaskOsuExportOsuApiKeyArrayOutput) ToSnapshotExportTaskOsuExportOsuApiKeyArrayOutput() SnapshotExportTaskOsuExportOsuApiKeyArrayOutput {
	return o
}

func (o SnapshotExportTaskOsuExportOsuApiKeyArrayOutput) ToSnapshotExportTaskOsuExportOsuApiKeyArrayOutputWithContext(ctx context.Context) SnapshotExportTaskOsuExportOsuApiKeyArrayOutput {
	return o
}

func (o SnapshotExportTaskOsuExportOsuApiKeyArrayOutput) Index(i pulumi.IntInput) SnapshotExportTaskOsuExportOsuApiKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SnapshotExportTaskOsuExportOsuApiKey {
		return vs[0].([]SnapshotExportTaskOsuExportOsuApiKey)[vs[1].(int)]
	}).(SnapshotExportTaskOsuExportOsuApiKeyOutput)
}

type SnapshotExportTaskTag struct {
	// The key of the tag, with a minimum of 1 character.
	Key *string `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value *string `pulumi:"value"`
}

// SnapshotExportTaskTagInput is an input type that accepts SnapshotExportTaskTagArgs and SnapshotExportTaskTagOutput values.
// You can construct a concrete instance of `SnapshotExportTaskTagInput` via:
//
//	SnapshotExportTaskTagArgs{...}
type SnapshotExportTaskTagInput interface {
	pulumi.Input

	ToSnapshotExportTaskTagOutput() SnapshotExportTaskTagOutput
	ToSnapshotExportTaskTagOutputWithContext(context.Context) SnapshotExportTaskTagOutput
}

type SnapshotExportTaskTagArgs struct {
	// The key of the tag, with a minimum of 1 character.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (SnapshotExportTaskTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SnapshotExportTaskTag)(nil)).Elem()
}

func (i SnapshotExportTaskTagArgs) ToSnapshotExportTaskTagOutput() SnapshotExportTaskTagOutput {
	return i.ToSnapshotExportTaskTagOutputWithContext(context.Background())
}

func (i SnapshotExportTaskTagArgs) ToSnapshotExportTaskTagOutputWithContext(ctx context.Context) SnapshotExportTaskTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SnapshotExportTaskTagOutput)
}

// SnapshotExportTaskTagArrayInput is an input type that accepts SnapshotExportTaskTagArray and SnapshotExportTaskTagArrayOutput values.
// You can construct a concrete instance of `SnapshotExportTaskTagArrayInput` via:
//
//	SnapshotExportTaskTagArray{ SnapshotExportTaskTagArgs{...} }
type SnapshotExportTaskTagArrayInput interface {
	pulumi.Input

	ToSnapshotExportTaskTagArrayOutput() SnapshotExportTaskTagArrayOutput
	ToSnapshotExportTaskTagArrayOutputWithContext(context.Context) SnapshotExportTaskTagArrayOutput
}

type SnapshotExportTaskTagArray []SnapshotExportTaskTagInput

func (SnapshotExportTaskTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SnapshotExportTaskTag)(nil)).Elem()
}

func (i SnapshotExportTaskTagArray) ToSnapshotExportTaskTagArrayOutput() SnapshotExportTaskTagArrayOutput {
	return i.ToSnapshotExportTaskTagArrayOutputWithContext(context.Background())
}

func (i SnapshotExportTaskTagArray) ToSnapshotExportTaskTagArrayOutputWithContext(ctx context.Context) SnapshotExportTaskTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SnapshotExportTaskTagArrayOutput)
}

type SnapshotExportTaskTagOutput struct{ *pulumi.OutputState }

func (SnapshotExportTaskTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SnapshotExportTaskTag)(nil)).Elem()
}

func (o SnapshotExportTaskTagOutput) ToSnapshotExportTaskTagOutput() SnapshotExportTaskTagOutput {
	return o
}

func (o SnapshotExportTaskTagOutput) ToSnapshotExportTaskTagOutputWithContext(ctx context.Context) SnapshotExportTaskTagOutput {
	return o
}

// The key of the tag, with a minimum of 1 character.
func (o SnapshotExportTaskTagOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SnapshotExportTaskTag) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The value of the tag, between 0 and 255 characters.
func (o SnapshotExportTaskTagOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SnapshotExportTaskTag) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type SnapshotExportTaskTagArrayOutput struct{ *pulumi.OutputState }

func (SnapshotExportTaskTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SnapshotExportTaskTag)(nil)).Elem()
}

func (o SnapshotExportTaskTagArrayOutput) ToSnapshotExportTaskTagArrayOutput() SnapshotExportTaskTagArrayOutput {
	return o
}

func (o SnapshotExportTaskTagArrayOutput) ToSnapshotExportTaskTagArrayOutputWithContext(ctx context.Context) SnapshotExportTaskTagArrayOutput {
	return o
}

func (o SnapshotExportTaskTagArrayOutput) Index(i pulumi.IntInput) SnapshotExportTaskTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SnapshotExportTaskTag {
		return vs[0].([]SnapshotExportTaskTag)[vs[1].(int)]
	}).(SnapshotExportTaskTagOutput)
}

type SnapshotPermissionsToCreateVolume struct {
	// The account ID of the owner of the snapshot.
	AccountId *string `pulumi:"accountId"`
	// A global permission for all accounts.<br />
	// (Request) Set this parameter to true to make the resource public (if the parent parameter is `Additions`) or to make the resource private (if the parent parameter is `Removals`).<br />
	// (Response) If true, the resource is public. If false, the resource is private.
	GlobalPermission *bool `pulumi:"globalPermission"`
}

// SnapshotPermissionsToCreateVolumeInput is an input type that accepts SnapshotPermissionsToCreateVolumeArgs and SnapshotPermissionsToCreateVolumeOutput values.
// You can construct a concrete instance of `SnapshotPermissionsToCreateVolumeInput` via:
//
//	SnapshotPermissionsToCreateVolumeArgs{...}
type SnapshotPermissionsToCreateVolumeInput interface {
	pulumi.Input

	ToSnapshotPermissionsToCreateVolumeOutput() SnapshotPermissionsToCreateVolumeOutput
	ToSnapshotPermissionsToCreateVolumeOutputWithContext(context.Context) SnapshotPermissionsToCreateVolumeOutput
}

type SnapshotPermissionsToCreateVolumeArgs struct {
	// The account ID of the owner of the snapshot.
	AccountId pulumi.StringPtrInput `pulumi:"accountId"`
	// A global permission for all accounts.<br />
	// (Request) Set this parameter to true to make the resource public (if the parent parameter is `Additions`) or to make the resource private (if the parent parameter is `Removals`).<br />
	// (Response) If true, the resource is public. If false, the resource is private.
	GlobalPermission pulumi.BoolPtrInput `pulumi:"globalPermission"`
}

func (SnapshotPermissionsToCreateVolumeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SnapshotPermissionsToCreateVolume)(nil)).Elem()
}

func (i SnapshotPermissionsToCreateVolumeArgs) ToSnapshotPermissionsToCreateVolumeOutput() SnapshotPermissionsToCreateVolumeOutput {
	return i.ToSnapshotPermissionsToCreateVolumeOutputWithContext(context.Background())
}

func (i SnapshotPermissionsToCreateVolumeArgs) ToSnapshotPermissionsToCreateVolumeOutputWithContext(ctx context.Context) SnapshotPermissionsToCreateVolumeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SnapshotPermissionsToCreateVolumeOutput)
}

// SnapshotPermissionsToCreateVolumeArrayInput is an input type that accepts SnapshotPermissionsToCreateVolumeArray and SnapshotPermissionsToCreateVolumeArrayOutput values.
// You can construct a concrete instance of `SnapshotPermissionsToCreateVolumeArrayInput` via:
//
//	SnapshotPermissionsToCreateVolumeArray{ SnapshotPermissionsToCreateVolumeArgs{...} }
type SnapshotPermissionsToCreateVolumeArrayInput interface {
	pulumi.Input

	ToSnapshotPermissionsToCreateVolumeArrayOutput() SnapshotPermissionsToCreateVolumeArrayOutput
	ToSnapshotPermissionsToCreateVolumeArrayOutputWithContext(context.Context) SnapshotPermissionsToCreateVolumeArrayOutput
}

type SnapshotPermissionsToCreateVolumeArray []SnapshotPermissionsToCreateVolumeInput

func (SnapshotPermissionsToCreateVolumeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SnapshotPermissionsToCreateVolume)(nil)).Elem()
}

func (i SnapshotPermissionsToCreateVolumeArray) ToSnapshotPermissionsToCreateVolumeArrayOutput() SnapshotPermissionsToCreateVolumeArrayOutput {
	return i.ToSnapshotPermissionsToCreateVolumeArrayOutputWithContext(context.Background())
}

func (i SnapshotPermissionsToCreateVolumeArray) ToSnapshotPermissionsToCreateVolumeArrayOutputWithContext(ctx context.Context) SnapshotPermissionsToCreateVolumeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SnapshotPermissionsToCreateVolumeArrayOutput)
}

type SnapshotPermissionsToCreateVolumeOutput struct{ *pulumi.OutputState }

func (SnapshotPermissionsToCreateVolumeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SnapshotPermissionsToCreateVolume)(nil)).Elem()
}

func (o SnapshotPermissionsToCreateVolumeOutput) ToSnapshotPermissionsToCreateVolumeOutput() SnapshotPermissionsToCreateVolumeOutput {
	return o
}

func (o SnapshotPermissionsToCreateVolumeOutput) ToSnapshotPermissionsToCreateVolumeOutputWithContext(ctx context.Context) SnapshotPermissionsToCreateVolumeOutput {
	return o
}

// The account ID of the owner of the snapshot.
func (o SnapshotPermissionsToCreateVolumeOutput) AccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SnapshotPermissionsToCreateVolume) *string { return v.AccountId }).(pulumi.StringPtrOutput)
}

// A global permission for all accounts.<br />
// (Request) Set this parameter to true to make the resource public (if the parent parameter is `Additions`) or to make the resource private (if the parent parameter is `Removals`).<br />
// (Response) If true, the resource is public. If false, the resource is private.
func (o SnapshotPermissionsToCreateVolumeOutput) GlobalPermission() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SnapshotPermissionsToCreateVolume) *bool { return v.GlobalPermission }).(pulumi.BoolPtrOutput)
}

type SnapshotPermissionsToCreateVolumeArrayOutput struct{ *pulumi.OutputState }

func (SnapshotPermissionsToCreateVolumeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SnapshotPermissionsToCreateVolume)(nil)).Elem()
}

func (o SnapshotPermissionsToCreateVolumeArrayOutput) ToSnapshotPermissionsToCreateVolumeArrayOutput() SnapshotPermissionsToCreateVolumeArrayOutput {
	return o
}

func (o SnapshotPermissionsToCreateVolumeArrayOutput) ToSnapshotPermissionsToCreateVolumeArrayOutputWithContext(ctx context.Context) SnapshotPermissionsToCreateVolumeArrayOutput {
	return o
}

func (o SnapshotPermissionsToCreateVolumeArrayOutput) Index(i pulumi.IntInput) SnapshotPermissionsToCreateVolumeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SnapshotPermissionsToCreateVolume {
		return vs[0].([]SnapshotPermissionsToCreateVolume)[vs[1].(int)]
	}).(SnapshotPermissionsToCreateVolumeOutput)
}

type SnapshotTag struct {
	// The key of the tag, with a minimum of 1 character.
	Key *string `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value *string `pulumi:"value"`
}

// SnapshotTagInput is an input type that accepts SnapshotTagArgs and SnapshotTagOutput values.
// You can construct a concrete instance of `SnapshotTagInput` via:
//
//	SnapshotTagArgs{...}
type SnapshotTagInput interface {
	pulumi.Input

	ToSnapshotTagOutput() SnapshotTagOutput
	ToSnapshotTagOutputWithContext(context.Context) SnapshotTagOutput
}

type SnapshotTagArgs struct {
	// The key of the tag, with a minimum of 1 character.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (SnapshotTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SnapshotTag)(nil)).Elem()
}

func (i SnapshotTagArgs) ToSnapshotTagOutput() SnapshotTagOutput {
	return i.ToSnapshotTagOutputWithContext(context.Background())
}

func (i SnapshotTagArgs) ToSnapshotTagOutputWithContext(ctx context.Context) SnapshotTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SnapshotTagOutput)
}

// SnapshotTagArrayInput is an input type that accepts SnapshotTagArray and SnapshotTagArrayOutput values.
// You can construct a concrete instance of `SnapshotTagArrayInput` via:
//
//	SnapshotTagArray{ SnapshotTagArgs{...} }
type SnapshotTagArrayInput interface {
	pulumi.Input

	ToSnapshotTagArrayOutput() SnapshotTagArrayOutput
	ToSnapshotTagArrayOutputWithContext(context.Context) SnapshotTagArrayOutput
}

type SnapshotTagArray []SnapshotTagInput

func (SnapshotTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SnapshotTag)(nil)).Elem()
}

func (i SnapshotTagArray) ToSnapshotTagArrayOutput() SnapshotTagArrayOutput {
	return i.ToSnapshotTagArrayOutputWithContext(context.Background())
}

func (i SnapshotTagArray) ToSnapshotTagArrayOutputWithContext(ctx context.Context) SnapshotTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SnapshotTagArrayOutput)
}

type SnapshotTagOutput struct{ *pulumi.OutputState }

func (SnapshotTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SnapshotTag)(nil)).Elem()
}

func (o SnapshotTagOutput) ToSnapshotTagOutput() SnapshotTagOutput {
	return o
}

func (o SnapshotTagOutput) ToSnapshotTagOutputWithContext(ctx context.Context) SnapshotTagOutput {
	return o
}

// The key of the tag, with a minimum of 1 character.
func (o SnapshotTagOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SnapshotTag) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The value of the tag, between 0 and 255 characters.
func (o SnapshotTagOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SnapshotTag) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type SnapshotTagArrayOutput struct{ *pulumi.OutputState }

func (SnapshotTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SnapshotTag)(nil)).Elem()
}

func (o SnapshotTagArrayOutput) ToSnapshotTagArrayOutput() SnapshotTagArrayOutput {
	return o
}

func (o SnapshotTagArrayOutput) ToSnapshotTagArrayOutputWithContext(ctx context.Context) SnapshotTagArrayOutput {
	return o
}

func (o SnapshotTagArrayOutput) Index(i pulumi.IntInput) SnapshotTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SnapshotTag {
		return vs[0].([]SnapshotTag)[vs[1].(int)]
	}).(SnapshotTagOutput)
}

type SubnetTag struct {
	// The key of the tag, with a minimum of 1 character.
	Key string `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value *string `pulumi:"value"`
}

// SubnetTagInput is an input type that accepts SubnetTagArgs and SubnetTagOutput values.
// You can construct a concrete instance of `SubnetTagInput` via:
//
//	SubnetTagArgs{...}
type SubnetTagInput interface {
	pulumi.Input

	ToSubnetTagOutput() SubnetTagOutput
	ToSubnetTagOutputWithContext(context.Context) SubnetTagOutput
}

type SubnetTagArgs struct {
	// The key of the tag, with a minimum of 1 character.
	Key pulumi.StringInput `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (SubnetTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetTag)(nil)).Elem()
}

func (i SubnetTagArgs) ToSubnetTagOutput() SubnetTagOutput {
	return i.ToSubnetTagOutputWithContext(context.Background())
}

func (i SubnetTagArgs) ToSubnetTagOutputWithContext(ctx context.Context) SubnetTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetTagOutput)
}

// SubnetTagArrayInput is an input type that accepts SubnetTagArray and SubnetTagArrayOutput values.
// You can construct a concrete instance of `SubnetTagArrayInput` via:
//
//	SubnetTagArray{ SubnetTagArgs{...} }
type SubnetTagArrayInput interface {
	pulumi.Input

	ToSubnetTagArrayOutput() SubnetTagArrayOutput
	ToSubnetTagArrayOutputWithContext(context.Context) SubnetTagArrayOutput
}

type SubnetTagArray []SubnetTagInput

func (SubnetTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetTag)(nil)).Elem()
}

func (i SubnetTagArray) ToSubnetTagArrayOutput() SubnetTagArrayOutput {
	return i.ToSubnetTagArrayOutputWithContext(context.Background())
}

func (i SubnetTagArray) ToSubnetTagArrayOutputWithContext(ctx context.Context) SubnetTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetTagArrayOutput)
}

type SubnetTagOutput struct{ *pulumi.OutputState }

func (SubnetTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetTag)(nil)).Elem()
}

func (o SubnetTagOutput) ToSubnetTagOutput() SubnetTagOutput {
	return o
}

func (o SubnetTagOutput) ToSubnetTagOutputWithContext(ctx context.Context) SubnetTagOutput {
	return o
}

// The key of the tag, with a minimum of 1 character.
func (o SubnetTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v SubnetTag) string { return v.Key }).(pulumi.StringOutput)
}

// The value of the tag, between 0 and 255 characters.
func (o SubnetTagOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetTag) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type SubnetTagArrayOutput struct{ *pulumi.OutputState }

func (SubnetTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetTag)(nil)).Elem()
}

func (o SubnetTagArrayOutput) ToSubnetTagArrayOutput() SubnetTagArrayOutput {
	return o
}

func (o SubnetTagArrayOutput) ToSubnetTagArrayOutputWithContext(ctx context.Context) SubnetTagArrayOutput {
	return o
}

func (o SubnetTagArrayOutput) Index(i pulumi.IntInput) SubnetTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubnetTag {
		return vs[0].([]SubnetTag)[vs[1].(int)]
	}).(SubnetTagOutput)
}

type SubnetTimeouts struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Create *string `pulumi:"create"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
	Delete *string `pulumi:"delete"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
	Read *string `pulumi:"read"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Update *string `pulumi:"update"`
}

// SubnetTimeoutsInput is an input type that accepts SubnetTimeoutsArgs and SubnetTimeoutsOutput values.
// You can construct a concrete instance of `SubnetTimeoutsInput` via:
//
//	SubnetTimeoutsArgs{...}
type SubnetTimeoutsInput interface {
	pulumi.Input

	ToSubnetTimeoutsOutput() SubnetTimeoutsOutput
	ToSubnetTimeoutsOutputWithContext(context.Context) SubnetTimeoutsOutput
}

type SubnetTimeoutsArgs struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Create pulumi.StringPtrInput `pulumi:"create"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
	Delete pulumi.StringPtrInput `pulumi:"delete"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
	Read pulumi.StringPtrInput `pulumi:"read"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Update pulumi.StringPtrInput `pulumi:"update"`
}

func (SubnetTimeoutsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetTimeouts)(nil)).Elem()
}

func (i SubnetTimeoutsArgs) ToSubnetTimeoutsOutput() SubnetTimeoutsOutput {
	return i.ToSubnetTimeoutsOutputWithContext(context.Background())
}

func (i SubnetTimeoutsArgs) ToSubnetTimeoutsOutputWithContext(ctx context.Context) SubnetTimeoutsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetTimeoutsOutput)
}

func (i SubnetTimeoutsArgs) ToSubnetTimeoutsPtrOutput() SubnetTimeoutsPtrOutput {
	return i.ToSubnetTimeoutsPtrOutputWithContext(context.Background())
}

func (i SubnetTimeoutsArgs) ToSubnetTimeoutsPtrOutputWithContext(ctx context.Context) SubnetTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetTimeoutsOutput).ToSubnetTimeoutsPtrOutputWithContext(ctx)
}

// SubnetTimeoutsPtrInput is an input type that accepts SubnetTimeoutsArgs, SubnetTimeoutsPtr and SubnetTimeoutsPtrOutput values.
// You can construct a concrete instance of `SubnetTimeoutsPtrInput` via:
//
//	        SubnetTimeoutsArgs{...}
//
//	or:
//
//	        nil
type SubnetTimeoutsPtrInput interface {
	pulumi.Input

	ToSubnetTimeoutsPtrOutput() SubnetTimeoutsPtrOutput
	ToSubnetTimeoutsPtrOutputWithContext(context.Context) SubnetTimeoutsPtrOutput
}

type subnetTimeoutsPtrType SubnetTimeoutsArgs

func SubnetTimeoutsPtr(v *SubnetTimeoutsArgs) SubnetTimeoutsPtrInput {
	return (*subnetTimeoutsPtrType)(v)
}

func (*subnetTimeoutsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SubnetTimeouts)(nil)).Elem()
}

func (i *subnetTimeoutsPtrType) ToSubnetTimeoutsPtrOutput() SubnetTimeoutsPtrOutput {
	return i.ToSubnetTimeoutsPtrOutputWithContext(context.Background())
}

func (i *subnetTimeoutsPtrType) ToSubnetTimeoutsPtrOutputWithContext(ctx context.Context) SubnetTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetTimeoutsPtrOutput)
}

type SubnetTimeoutsOutput struct{ *pulumi.OutputState }

func (SubnetTimeoutsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetTimeouts)(nil)).Elem()
}

func (o SubnetTimeoutsOutput) ToSubnetTimeoutsOutput() SubnetTimeoutsOutput {
	return o
}

func (o SubnetTimeoutsOutput) ToSubnetTimeoutsOutputWithContext(ctx context.Context) SubnetTimeoutsOutput {
	return o
}

func (o SubnetTimeoutsOutput) ToSubnetTimeoutsPtrOutput() SubnetTimeoutsPtrOutput {
	return o.ToSubnetTimeoutsPtrOutputWithContext(context.Background())
}

func (o SubnetTimeoutsOutput) ToSubnetTimeoutsPtrOutputWithContext(ctx context.Context) SubnetTimeoutsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SubnetTimeouts) *SubnetTimeouts {
		return &v
	}).(SubnetTimeoutsPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o SubnetTimeoutsOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetTimeouts) *string { return v.Create }).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
func (o SubnetTimeoutsOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetTimeouts) *string { return v.Delete }).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
func (o SubnetTimeoutsOutput) Read() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetTimeouts) *string { return v.Read }).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o SubnetTimeoutsOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetTimeouts) *string { return v.Update }).(pulumi.StringPtrOutput)
}

type SubnetTimeoutsPtrOutput struct{ *pulumi.OutputState }

func (SubnetTimeoutsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubnetTimeouts)(nil)).Elem()
}

func (o SubnetTimeoutsPtrOutput) ToSubnetTimeoutsPtrOutput() SubnetTimeoutsPtrOutput {
	return o
}

func (o SubnetTimeoutsPtrOutput) ToSubnetTimeoutsPtrOutputWithContext(ctx context.Context) SubnetTimeoutsPtrOutput {
	return o
}

func (o SubnetTimeoutsPtrOutput) Elem() SubnetTimeoutsOutput {
	return o.ApplyT(func(v *SubnetTimeouts) SubnetTimeouts {
		if v != nil {
			return *v
		}
		var ret SubnetTimeouts
		return ret
	}).(SubnetTimeoutsOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o SubnetTimeoutsPtrOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubnetTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Create
	}).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
func (o SubnetTimeoutsPtrOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubnetTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Delete
	}).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
func (o SubnetTimeoutsPtrOutput) Read() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubnetTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Read
	}).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o SubnetTimeoutsPtrOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubnetTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Update
	}).(pulumi.StringPtrOutput)
}

type TagTag struct {
	Key          *string `pulumi:"key"`
	ResourceId   *string `pulumi:"resourceId"`
	ResourceType *string `pulumi:"resourceType"`
	Value        *string `pulumi:"value"`
}

// TagTagInput is an input type that accepts TagTagArgs and TagTagOutput values.
// You can construct a concrete instance of `TagTagInput` via:
//
//	TagTagArgs{...}
type TagTagInput interface {
	pulumi.Input

	ToTagTagOutput() TagTagOutput
	ToTagTagOutputWithContext(context.Context) TagTagOutput
}

type TagTagArgs struct {
	Key          pulumi.StringPtrInput `pulumi:"key"`
	ResourceId   pulumi.StringPtrInput `pulumi:"resourceId"`
	ResourceType pulumi.StringPtrInput `pulumi:"resourceType"`
	Value        pulumi.StringPtrInput `pulumi:"value"`
}

func (TagTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TagTag)(nil)).Elem()
}

func (i TagTagArgs) ToTagTagOutput() TagTagOutput {
	return i.ToTagTagOutputWithContext(context.Background())
}

func (i TagTagArgs) ToTagTagOutputWithContext(ctx context.Context) TagTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TagTagOutput)
}

// TagTagArrayInput is an input type that accepts TagTagArray and TagTagArrayOutput values.
// You can construct a concrete instance of `TagTagArrayInput` via:
//
//	TagTagArray{ TagTagArgs{...} }
type TagTagArrayInput interface {
	pulumi.Input

	ToTagTagArrayOutput() TagTagArrayOutput
	ToTagTagArrayOutputWithContext(context.Context) TagTagArrayOutput
}

type TagTagArray []TagTagInput

func (TagTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TagTag)(nil)).Elem()
}

func (i TagTagArray) ToTagTagArrayOutput() TagTagArrayOutput {
	return i.ToTagTagArrayOutputWithContext(context.Background())
}

func (i TagTagArray) ToTagTagArrayOutputWithContext(ctx context.Context) TagTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TagTagArrayOutput)
}

type TagTagOutput struct{ *pulumi.OutputState }

func (TagTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TagTag)(nil)).Elem()
}

func (o TagTagOutput) ToTagTagOutput() TagTagOutput {
	return o
}

func (o TagTagOutput) ToTagTagOutputWithContext(ctx context.Context) TagTagOutput {
	return o
}

func (o TagTagOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TagTag) *string { return v.Key }).(pulumi.StringPtrOutput)
}

func (o TagTagOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TagTag) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

func (o TagTagOutput) ResourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TagTag) *string { return v.ResourceType }).(pulumi.StringPtrOutput)
}

func (o TagTagOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TagTag) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type TagTagArrayOutput struct{ *pulumi.OutputState }

func (TagTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TagTag)(nil)).Elem()
}

func (o TagTagArrayOutput) ToTagTagArrayOutput() TagTagArrayOutput {
	return o
}

func (o TagTagArrayOutput) ToTagTagArrayOutputWithContext(ctx context.Context) TagTagArrayOutput {
	return o
}

func (o TagTagArrayOutput) Index(i pulumi.IntInput) TagTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TagTag {
		return vs[0].([]TagTag)[vs[1].(int)]
	}).(TagTagOutput)
}

type UserGroupPolicy struct {
	// The date and time (UTC) of creation of the user group.
	CreationDate *string `pulumi:"creationDate"`
	// The ID of a policy version that you want to make the default one (the active one).
	DefaultVersionId *string `pulumi:"defaultVersionId"`
	// The date and time (UTC) of the last modification of the user group.
	LastModificationDate *string `pulumi:"lastModificationDate"`
	PolicyId             *string `pulumi:"policyId"`
	PolicyName           *string `pulumi:"policyName"`
	PolicyOrn            string  `pulumi:"policyOrn"`
}

// UserGroupPolicyInput is an input type that accepts UserGroupPolicyArgs and UserGroupPolicyOutput values.
// You can construct a concrete instance of `UserGroupPolicyInput` via:
//
//	UserGroupPolicyArgs{...}
type UserGroupPolicyInput interface {
	pulumi.Input

	ToUserGroupPolicyOutput() UserGroupPolicyOutput
	ToUserGroupPolicyOutputWithContext(context.Context) UserGroupPolicyOutput
}

type UserGroupPolicyArgs struct {
	// The date and time (UTC) of creation of the user group.
	CreationDate pulumi.StringPtrInput `pulumi:"creationDate"`
	// The ID of a policy version that you want to make the default one (the active one).
	DefaultVersionId pulumi.StringPtrInput `pulumi:"defaultVersionId"`
	// The date and time (UTC) of the last modification of the user group.
	LastModificationDate pulumi.StringPtrInput `pulumi:"lastModificationDate"`
	PolicyId             pulumi.StringPtrInput `pulumi:"policyId"`
	PolicyName           pulumi.StringPtrInput `pulumi:"policyName"`
	PolicyOrn            pulumi.StringInput    `pulumi:"policyOrn"`
}

func (UserGroupPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserGroupPolicy)(nil)).Elem()
}

func (i UserGroupPolicyArgs) ToUserGroupPolicyOutput() UserGroupPolicyOutput {
	return i.ToUserGroupPolicyOutputWithContext(context.Background())
}

func (i UserGroupPolicyArgs) ToUserGroupPolicyOutputWithContext(ctx context.Context) UserGroupPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserGroupPolicyOutput)
}

// UserGroupPolicyArrayInput is an input type that accepts UserGroupPolicyArray and UserGroupPolicyArrayOutput values.
// You can construct a concrete instance of `UserGroupPolicyArrayInput` via:
//
//	UserGroupPolicyArray{ UserGroupPolicyArgs{...} }
type UserGroupPolicyArrayInput interface {
	pulumi.Input

	ToUserGroupPolicyArrayOutput() UserGroupPolicyArrayOutput
	ToUserGroupPolicyArrayOutputWithContext(context.Context) UserGroupPolicyArrayOutput
}

type UserGroupPolicyArray []UserGroupPolicyInput

func (UserGroupPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserGroupPolicy)(nil)).Elem()
}

func (i UserGroupPolicyArray) ToUserGroupPolicyArrayOutput() UserGroupPolicyArrayOutput {
	return i.ToUserGroupPolicyArrayOutputWithContext(context.Background())
}

func (i UserGroupPolicyArray) ToUserGroupPolicyArrayOutputWithContext(ctx context.Context) UserGroupPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserGroupPolicyArrayOutput)
}

type UserGroupPolicyOutput struct{ *pulumi.OutputState }

func (UserGroupPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserGroupPolicy)(nil)).Elem()
}

func (o UserGroupPolicyOutput) ToUserGroupPolicyOutput() UserGroupPolicyOutput {
	return o
}

func (o UserGroupPolicyOutput) ToUserGroupPolicyOutputWithContext(ctx context.Context) UserGroupPolicyOutput {
	return o
}

// The date and time (UTC) of creation of the user group.
func (o UserGroupPolicyOutput) CreationDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserGroupPolicy) *string { return v.CreationDate }).(pulumi.StringPtrOutput)
}

// The ID of a policy version that you want to make the default one (the active one).
func (o UserGroupPolicyOutput) DefaultVersionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserGroupPolicy) *string { return v.DefaultVersionId }).(pulumi.StringPtrOutput)
}

// The date and time (UTC) of the last modification of the user group.
func (o UserGroupPolicyOutput) LastModificationDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserGroupPolicy) *string { return v.LastModificationDate }).(pulumi.StringPtrOutput)
}

func (o UserGroupPolicyOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserGroupPolicy) *string { return v.PolicyId }).(pulumi.StringPtrOutput)
}

func (o UserGroupPolicyOutput) PolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserGroupPolicy) *string { return v.PolicyName }).(pulumi.StringPtrOutput)
}

func (o UserGroupPolicyOutput) PolicyOrn() pulumi.StringOutput {
	return o.ApplyT(func(v UserGroupPolicy) string { return v.PolicyOrn }).(pulumi.StringOutput)
}

type UserGroupPolicyArrayOutput struct{ *pulumi.OutputState }

func (UserGroupPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserGroupPolicy)(nil)).Elem()
}

func (o UserGroupPolicyArrayOutput) ToUserGroupPolicyArrayOutput() UserGroupPolicyArrayOutput {
	return o
}

func (o UserGroupPolicyArrayOutput) ToUserGroupPolicyArrayOutputWithContext(ctx context.Context) UserGroupPolicyArrayOutput {
	return o
}

func (o UserGroupPolicyArrayOutput) Index(i pulumi.IntInput) UserGroupPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UserGroupPolicy {
		return vs[0].([]UserGroupPolicy)[vs[1].(int)]
	}).(UserGroupPolicyOutput)
}

type UserGroupUser struct {
	// The date and time (UTC) of creation of the user group.
	CreationDate *string `pulumi:"creationDate"`
	// The date and time (UTC) of the last modification of the user group.
	LastModificationDate *string `pulumi:"lastModificationDate"`
	// The path to the group. If not specified, it is set to a slash (`/`).
	Path     *string `pulumi:"path"`
	UserId   *string `pulumi:"userId"`
	UserName string  `pulumi:"userName"`
}

// UserGroupUserInput is an input type that accepts UserGroupUserArgs and UserGroupUserOutput values.
// You can construct a concrete instance of `UserGroupUserInput` via:
//
//	UserGroupUserArgs{...}
type UserGroupUserInput interface {
	pulumi.Input

	ToUserGroupUserOutput() UserGroupUserOutput
	ToUserGroupUserOutputWithContext(context.Context) UserGroupUserOutput
}

type UserGroupUserArgs struct {
	// The date and time (UTC) of creation of the user group.
	CreationDate pulumi.StringPtrInput `pulumi:"creationDate"`
	// The date and time (UTC) of the last modification of the user group.
	LastModificationDate pulumi.StringPtrInput `pulumi:"lastModificationDate"`
	// The path to the group. If not specified, it is set to a slash (`/`).
	Path     pulumi.StringPtrInput `pulumi:"path"`
	UserId   pulumi.StringPtrInput `pulumi:"userId"`
	UserName pulumi.StringInput    `pulumi:"userName"`
}

func (UserGroupUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserGroupUser)(nil)).Elem()
}

func (i UserGroupUserArgs) ToUserGroupUserOutput() UserGroupUserOutput {
	return i.ToUserGroupUserOutputWithContext(context.Background())
}

func (i UserGroupUserArgs) ToUserGroupUserOutputWithContext(ctx context.Context) UserGroupUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserGroupUserOutput)
}

// UserGroupUserArrayInput is an input type that accepts UserGroupUserArray and UserGroupUserArrayOutput values.
// You can construct a concrete instance of `UserGroupUserArrayInput` via:
//
//	UserGroupUserArray{ UserGroupUserArgs{...} }
type UserGroupUserArrayInput interface {
	pulumi.Input

	ToUserGroupUserArrayOutput() UserGroupUserArrayOutput
	ToUserGroupUserArrayOutputWithContext(context.Context) UserGroupUserArrayOutput
}

type UserGroupUserArray []UserGroupUserInput

func (UserGroupUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserGroupUser)(nil)).Elem()
}

func (i UserGroupUserArray) ToUserGroupUserArrayOutput() UserGroupUserArrayOutput {
	return i.ToUserGroupUserArrayOutputWithContext(context.Background())
}

func (i UserGroupUserArray) ToUserGroupUserArrayOutputWithContext(ctx context.Context) UserGroupUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserGroupUserArrayOutput)
}

type UserGroupUserOutput struct{ *pulumi.OutputState }

func (UserGroupUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserGroupUser)(nil)).Elem()
}

func (o UserGroupUserOutput) ToUserGroupUserOutput() UserGroupUserOutput {
	return o
}

func (o UserGroupUserOutput) ToUserGroupUserOutputWithContext(ctx context.Context) UserGroupUserOutput {
	return o
}

// The date and time (UTC) of creation of the user group.
func (o UserGroupUserOutput) CreationDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserGroupUser) *string { return v.CreationDate }).(pulumi.StringPtrOutput)
}

// The date and time (UTC) of the last modification of the user group.
func (o UserGroupUserOutput) LastModificationDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserGroupUser) *string { return v.LastModificationDate }).(pulumi.StringPtrOutput)
}

// The path to the group. If not specified, it is set to a slash (`/`).
func (o UserGroupUserOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserGroupUser) *string { return v.Path }).(pulumi.StringPtrOutput)
}

func (o UserGroupUserOutput) UserId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserGroupUser) *string { return v.UserId }).(pulumi.StringPtrOutput)
}

func (o UserGroupUserOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v UserGroupUser) string { return v.UserName }).(pulumi.StringOutput)
}

type UserGroupUserArrayOutput struct{ *pulumi.OutputState }

func (UserGroupUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserGroupUser)(nil)).Elem()
}

func (o UserGroupUserArrayOutput) ToUserGroupUserArrayOutput() UserGroupUserArrayOutput {
	return o
}

func (o UserGroupUserArrayOutput) ToUserGroupUserArrayOutputWithContext(ctx context.Context) UserGroupUserArrayOutput {
	return o
}

func (o UserGroupUserArrayOutput) Index(i pulumi.IntInput) UserGroupUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UserGroupUser {
		return vs[0].([]UserGroupUser)[vs[1].(int)]
	}).(UserGroupUserOutput)
}

type UserPolicy struct {
	// The date and time (UTC) of creation of the EIM user.
	CreationDate *string `pulumi:"creationDate"`
	// The ID of a policy version that you want to make the default one (the active one).
	DefaultVersionId *string `pulumi:"defaultVersionId"`
	// The date and time (UTC) of the last modification of the EIM user.
	LastModificationDate *string `pulumi:"lastModificationDate"`
	PolicyId             *string `pulumi:"policyId"`
	PolicyName           *string `pulumi:"policyName"`
	PolicyOrn            string  `pulumi:"policyOrn"`
}

// UserPolicyInput is an input type that accepts UserPolicyArgs and UserPolicyOutput values.
// You can construct a concrete instance of `UserPolicyInput` via:
//
//	UserPolicyArgs{...}
type UserPolicyInput interface {
	pulumi.Input

	ToUserPolicyOutput() UserPolicyOutput
	ToUserPolicyOutputWithContext(context.Context) UserPolicyOutput
}

type UserPolicyArgs struct {
	// The date and time (UTC) of creation of the EIM user.
	CreationDate pulumi.StringPtrInput `pulumi:"creationDate"`
	// The ID of a policy version that you want to make the default one (the active one).
	DefaultVersionId pulumi.StringPtrInput `pulumi:"defaultVersionId"`
	// The date and time (UTC) of the last modification of the EIM user.
	LastModificationDate pulumi.StringPtrInput `pulumi:"lastModificationDate"`
	PolicyId             pulumi.StringPtrInput `pulumi:"policyId"`
	PolicyName           pulumi.StringPtrInput `pulumi:"policyName"`
	PolicyOrn            pulumi.StringInput    `pulumi:"policyOrn"`
}

func (UserPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPolicy)(nil)).Elem()
}

func (i UserPolicyArgs) ToUserPolicyOutput() UserPolicyOutput {
	return i.ToUserPolicyOutputWithContext(context.Background())
}

func (i UserPolicyArgs) ToUserPolicyOutputWithContext(ctx context.Context) UserPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPolicyOutput)
}

// UserPolicyArrayInput is an input type that accepts UserPolicyArray and UserPolicyArrayOutput values.
// You can construct a concrete instance of `UserPolicyArrayInput` via:
//
//	UserPolicyArray{ UserPolicyArgs{...} }
type UserPolicyArrayInput interface {
	pulumi.Input

	ToUserPolicyArrayOutput() UserPolicyArrayOutput
	ToUserPolicyArrayOutputWithContext(context.Context) UserPolicyArrayOutput
}

type UserPolicyArray []UserPolicyInput

func (UserPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserPolicy)(nil)).Elem()
}

func (i UserPolicyArray) ToUserPolicyArrayOutput() UserPolicyArrayOutput {
	return i.ToUserPolicyArrayOutputWithContext(context.Background())
}

func (i UserPolicyArray) ToUserPolicyArrayOutputWithContext(ctx context.Context) UserPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPolicyArrayOutput)
}

type UserPolicyOutput struct{ *pulumi.OutputState }

func (UserPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPolicy)(nil)).Elem()
}

func (o UserPolicyOutput) ToUserPolicyOutput() UserPolicyOutput {
	return o
}

func (o UserPolicyOutput) ToUserPolicyOutputWithContext(ctx context.Context) UserPolicyOutput {
	return o
}

// The date and time (UTC) of creation of the EIM user.
func (o UserPolicyOutput) CreationDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPolicy) *string { return v.CreationDate }).(pulumi.StringPtrOutput)
}

// The ID of a policy version that you want to make the default one (the active one).
func (o UserPolicyOutput) DefaultVersionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPolicy) *string { return v.DefaultVersionId }).(pulumi.StringPtrOutput)
}

// The date and time (UTC) of the last modification of the EIM user.
func (o UserPolicyOutput) LastModificationDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPolicy) *string { return v.LastModificationDate }).(pulumi.StringPtrOutput)
}

func (o UserPolicyOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPolicy) *string { return v.PolicyId }).(pulumi.StringPtrOutput)
}

func (o UserPolicyOutput) PolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPolicy) *string { return v.PolicyName }).(pulumi.StringPtrOutput)
}

func (o UserPolicyOutput) PolicyOrn() pulumi.StringOutput {
	return o.ApplyT(func(v UserPolicy) string { return v.PolicyOrn }).(pulumi.StringOutput)
}

type UserPolicyArrayOutput struct{ *pulumi.OutputState }

func (UserPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserPolicy)(nil)).Elem()
}

func (o UserPolicyArrayOutput) ToUserPolicyArrayOutput() UserPolicyArrayOutput {
	return o
}

func (o UserPolicyArrayOutput) ToUserPolicyArrayOutputWithContext(ctx context.Context) UserPolicyArrayOutput {
	return o
}

func (o UserPolicyArrayOutput) Index(i pulumi.IntInput) UserPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UserPolicy {
		return vs[0].([]UserPolicy)[vs[1].(int)]
	}).(UserPolicyOutput)
}

type VirtualGatewayLinkNetToVirtualGatewayLink struct {
	// The ID of the Net to which you want to attach the virtual gateway.
	NetId *string `pulumi:"netId"`
	// The state of the attachment (`attaching` \| `attached` \| `detaching` \| `detached`).
	State *string `pulumi:"state"`
}

// VirtualGatewayLinkNetToVirtualGatewayLinkInput is an input type that accepts VirtualGatewayLinkNetToVirtualGatewayLinkArgs and VirtualGatewayLinkNetToVirtualGatewayLinkOutput values.
// You can construct a concrete instance of `VirtualGatewayLinkNetToVirtualGatewayLinkInput` via:
//
//	VirtualGatewayLinkNetToVirtualGatewayLinkArgs{...}
type VirtualGatewayLinkNetToVirtualGatewayLinkInput interface {
	pulumi.Input

	ToVirtualGatewayLinkNetToVirtualGatewayLinkOutput() VirtualGatewayLinkNetToVirtualGatewayLinkOutput
	ToVirtualGatewayLinkNetToVirtualGatewayLinkOutputWithContext(context.Context) VirtualGatewayLinkNetToVirtualGatewayLinkOutput
}

type VirtualGatewayLinkNetToVirtualGatewayLinkArgs struct {
	// The ID of the Net to which you want to attach the virtual gateway.
	NetId pulumi.StringPtrInput `pulumi:"netId"`
	// The state of the attachment (`attaching` \| `attached` \| `detaching` \| `detached`).
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (VirtualGatewayLinkNetToVirtualGatewayLinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewayLinkNetToVirtualGatewayLink)(nil)).Elem()
}

func (i VirtualGatewayLinkNetToVirtualGatewayLinkArgs) ToVirtualGatewayLinkNetToVirtualGatewayLinkOutput() VirtualGatewayLinkNetToVirtualGatewayLinkOutput {
	return i.ToVirtualGatewayLinkNetToVirtualGatewayLinkOutputWithContext(context.Background())
}

func (i VirtualGatewayLinkNetToVirtualGatewayLinkArgs) ToVirtualGatewayLinkNetToVirtualGatewayLinkOutputWithContext(ctx context.Context) VirtualGatewayLinkNetToVirtualGatewayLinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewayLinkNetToVirtualGatewayLinkOutput)
}

// VirtualGatewayLinkNetToVirtualGatewayLinkArrayInput is an input type that accepts VirtualGatewayLinkNetToVirtualGatewayLinkArray and VirtualGatewayLinkNetToVirtualGatewayLinkArrayOutput values.
// You can construct a concrete instance of `VirtualGatewayLinkNetToVirtualGatewayLinkArrayInput` via:
//
//	VirtualGatewayLinkNetToVirtualGatewayLinkArray{ VirtualGatewayLinkNetToVirtualGatewayLinkArgs{...} }
type VirtualGatewayLinkNetToVirtualGatewayLinkArrayInput interface {
	pulumi.Input

	ToVirtualGatewayLinkNetToVirtualGatewayLinkArrayOutput() VirtualGatewayLinkNetToVirtualGatewayLinkArrayOutput
	ToVirtualGatewayLinkNetToVirtualGatewayLinkArrayOutputWithContext(context.Context) VirtualGatewayLinkNetToVirtualGatewayLinkArrayOutput
}

type VirtualGatewayLinkNetToVirtualGatewayLinkArray []VirtualGatewayLinkNetToVirtualGatewayLinkInput

func (VirtualGatewayLinkNetToVirtualGatewayLinkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualGatewayLinkNetToVirtualGatewayLink)(nil)).Elem()
}

func (i VirtualGatewayLinkNetToVirtualGatewayLinkArray) ToVirtualGatewayLinkNetToVirtualGatewayLinkArrayOutput() VirtualGatewayLinkNetToVirtualGatewayLinkArrayOutput {
	return i.ToVirtualGatewayLinkNetToVirtualGatewayLinkArrayOutputWithContext(context.Background())
}

func (i VirtualGatewayLinkNetToVirtualGatewayLinkArray) ToVirtualGatewayLinkNetToVirtualGatewayLinkArrayOutputWithContext(ctx context.Context) VirtualGatewayLinkNetToVirtualGatewayLinkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewayLinkNetToVirtualGatewayLinkArrayOutput)
}

type VirtualGatewayLinkNetToVirtualGatewayLinkOutput struct{ *pulumi.OutputState }

func (VirtualGatewayLinkNetToVirtualGatewayLinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewayLinkNetToVirtualGatewayLink)(nil)).Elem()
}

func (o VirtualGatewayLinkNetToVirtualGatewayLinkOutput) ToVirtualGatewayLinkNetToVirtualGatewayLinkOutput() VirtualGatewayLinkNetToVirtualGatewayLinkOutput {
	return o
}

func (o VirtualGatewayLinkNetToVirtualGatewayLinkOutput) ToVirtualGatewayLinkNetToVirtualGatewayLinkOutputWithContext(ctx context.Context) VirtualGatewayLinkNetToVirtualGatewayLinkOutput {
	return o
}

// The ID of the Net to which you want to attach the virtual gateway.
func (o VirtualGatewayLinkNetToVirtualGatewayLinkOutput) NetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualGatewayLinkNetToVirtualGatewayLink) *string { return v.NetId }).(pulumi.StringPtrOutput)
}

// The state of the attachment (`attaching` \| `attached` \| `detaching` \| `detached`).
func (o VirtualGatewayLinkNetToVirtualGatewayLinkOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualGatewayLinkNetToVirtualGatewayLink) *string { return v.State }).(pulumi.StringPtrOutput)
}

type VirtualGatewayLinkNetToVirtualGatewayLinkArrayOutput struct{ *pulumi.OutputState }

func (VirtualGatewayLinkNetToVirtualGatewayLinkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualGatewayLinkNetToVirtualGatewayLink)(nil)).Elem()
}

func (o VirtualGatewayLinkNetToVirtualGatewayLinkArrayOutput) ToVirtualGatewayLinkNetToVirtualGatewayLinkArrayOutput() VirtualGatewayLinkNetToVirtualGatewayLinkArrayOutput {
	return o
}

func (o VirtualGatewayLinkNetToVirtualGatewayLinkArrayOutput) ToVirtualGatewayLinkNetToVirtualGatewayLinkArrayOutputWithContext(ctx context.Context) VirtualGatewayLinkNetToVirtualGatewayLinkArrayOutput {
	return o
}

func (o VirtualGatewayLinkNetToVirtualGatewayLinkArrayOutput) Index(i pulumi.IntInput) VirtualGatewayLinkNetToVirtualGatewayLinkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualGatewayLinkNetToVirtualGatewayLink {
		return vs[0].([]VirtualGatewayLinkNetToVirtualGatewayLink)[vs[1].(int)]
	}).(VirtualGatewayLinkNetToVirtualGatewayLinkOutput)
}

type VirtualGatewayNetToVirtualGatewayLink struct {
	// The ID of the Net to which the virtual gateway is attached.
	NetId *string `pulumi:"netId"`
	// The state of the virtual gateway (`pending` \| `available` \| `deleting` \| `deleted`).
	State *string `pulumi:"state"`
}

// VirtualGatewayNetToVirtualGatewayLinkInput is an input type that accepts VirtualGatewayNetToVirtualGatewayLinkArgs and VirtualGatewayNetToVirtualGatewayLinkOutput values.
// You can construct a concrete instance of `VirtualGatewayNetToVirtualGatewayLinkInput` via:
//
//	VirtualGatewayNetToVirtualGatewayLinkArgs{...}
type VirtualGatewayNetToVirtualGatewayLinkInput interface {
	pulumi.Input

	ToVirtualGatewayNetToVirtualGatewayLinkOutput() VirtualGatewayNetToVirtualGatewayLinkOutput
	ToVirtualGatewayNetToVirtualGatewayLinkOutputWithContext(context.Context) VirtualGatewayNetToVirtualGatewayLinkOutput
}

type VirtualGatewayNetToVirtualGatewayLinkArgs struct {
	// The ID of the Net to which the virtual gateway is attached.
	NetId pulumi.StringPtrInput `pulumi:"netId"`
	// The state of the virtual gateway (`pending` \| `available` \| `deleting` \| `deleted`).
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (VirtualGatewayNetToVirtualGatewayLinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewayNetToVirtualGatewayLink)(nil)).Elem()
}

func (i VirtualGatewayNetToVirtualGatewayLinkArgs) ToVirtualGatewayNetToVirtualGatewayLinkOutput() VirtualGatewayNetToVirtualGatewayLinkOutput {
	return i.ToVirtualGatewayNetToVirtualGatewayLinkOutputWithContext(context.Background())
}

func (i VirtualGatewayNetToVirtualGatewayLinkArgs) ToVirtualGatewayNetToVirtualGatewayLinkOutputWithContext(ctx context.Context) VirtualGatewayNetToVirtualGatewayLinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewayNetToVirtualGatewayLinkOutput)
}

// VirtualGatewayNetToVirtualGatewayLinkArrayInput is an input type that accepts VirtualGatewayNetToVirtualGatewayLinkArray and VirtualGatewayNetToVirtualGatewayLinkArrayOutput values.
// You can construct a concrete instance of `VirtualGatewayNetToVirtualGatewayLinkArrayInput` via:
//
//	VirtualGatewayNetToVirtualGatewayLinkArray{ VirtualGatewayNetToVirtualGatewayLinkArgs{...} }
type VirtualGatewayNetToVirtualGatewayLinkArrayInput interface {
	pulumi.Input

	ToVirtualGatewayNetToVirtualGatewayLinkArrayOutput() VirtualGatewayNetToVirtualGatewayLinkArrayOutput
	ToVirtualGatewayNetToVirtualGatewayLinkArrayOutputWithContext(context.Context) VirtualGatewayNetToVirtualGatewayLinkArrayOutput
}

type VirtualGatewayNetToVirtualGatewayLinkArray []VirtualGatewayNetToVirtualGatewayLinkInput

func (VirtualGatewayNetToVirtualGatewayLinkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualGatewayNetToVirtualGatewayLink)(nil)).Elem()
}

func (i VirtualGatewayNetToVirtualGatewayLinkArray) ToVirtualGatewayNetToVirtualGatewayLinkArrayOutput() VirtualGatewayNetToVirtualGatewayLinkArrayOutput {
	return i.ToVirtualGatewayNetToVirtualGatewayLinkArrayOutputWithContext(context.Background())
}

func (i VirtualGatewayNetToVirtualGatewayLinkArray) ToVirtualGatewayNetToVirtualGatewayLinkArrayOutputWithContext(ctx context.Context) VirtualGatewayNetToVirtualGatewayLinkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewayNetToVirtualGatewayLinkArrayOutput)
}

type VirtualGatewayNetToVirtualGatewayLinkOutput struct{ *pulumi.OutputState }

func (VirtualGatewayNetToVirtualGatewayLinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewayNetToVirtualGatewayLink)(nil)).Elem()
}

func (o VirtualGatewayNetToVirtualGatewayLinkOutput) ToVirtualGatewayNetToVirtualGatewayLinkOutput() VirtualGatewayNetToVirtualGatewayLinkOutput {
	return o
}

func (o VirtualGatewayNetToVirtualGatewayLinkOutput) ToVirtualGatewayNetToVirtualGatewayLinkOutputWithContext(ctx context.Context) VirtualGatewayNetToVirtualGatewayLinkOutput {
	return o
}

// The ID of the Net to which the virtual gateway is attached.
func (o VirtualGatewayNetToVirtualGatewayLinkOutput) NetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualGatewayNetToVirtualGatewayLink) *string { return v.NetId }).(pulumi.StringPtrOutput)
}

// The state of the virtual gateway (`pending` \| `available` \| `deleting` \| `deleted`).
func (o VirtualGatewayNetToVirtualGatewayLinkOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualGatewayNetToVirtualGatewayLink) *string { return v.State }).(pulumi.StringPtrOutput)
}

type VirtualGatewayNetToVirtualGatewayLinkArrayOutput struct{ *pulumi.OutputState }

func (VirtualGatewayNetToVirtualGatewayLinkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualGatewayNetToVirtualGatewayLink)(nil)).Elem()
}

func (o VirtualGatewayNetToVirtualGatewayLinkArrayOutput) ToVirtualGatewayNetToVirtualGatewayLinkArrayOutput() VirtualGatewayNetToVirtualGatewayLinkArrayOutput {
	return o
}

func (o VirtualGatewayNetToVirtualGatewayLinkArrayOutput) ToVirtualGatewayNetToVirtualGatewayLinkArrayOutputWithContext(ctx context.Context) VirtualGatewayNetToVirtualGatewayLinkArrayOutput {
	return o
}

func (o VirtualGatewayNetToVirtualGatewayLinkArrayOutput) Index(i pulumi.IntInput) VirtualGatewayNetToVirtualGatewayLinkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualGatewayNetToVirtualGatewayLink {
		return vs[0].([]VirtualGatewayNetToVirtualGatewayLink)[vs[1].(int)]
	}).(VirtualGatewayNetToVirtualGatewayLinkOutput)
}

type VirtualGatewayTag struct {
	// The key of the tag, with a minimum of 1 character.
	Key *string `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value *string `pulumi:"value"`
}

// VirtualGatewayTagInput is an input type that accepts VirtualGatewayTagArgs and VirtualGatewayTagOutput values.
// You can construct a concrete instance of `VirtualGatewayTagInput` via:
//
//	VirtualGatewayTagArgs{...}
type VirtualGatewayTagInput interface {
	pulumi.Input

	ToVirtualGatewayTagOutput() VirtualGatewayTagOutput
	ToVirtualGatewayTagOutputWithContext(context.Context) VirtualGatewayTagOutput
}

type VirtualGatewayTagArgs struct {
	// The key of the tag, with a minimum of 1 character.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (VirtualGatewayTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewayTag)(nil)).Elem()
}

func (i VirtualGatewayTagArgs) ToVirtualGatewayTagOutput() VirtualGatewayTagOutput {
	return i.ToVirtualGatewayTagOutputWithContext(context.Background())
}

func (i VirtualGatewayTagArgs) ToVirtualGatewayTagOutputWithContext(ctx context.Context) VirtualGatewayTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewayTagOutput)
}

// VirtualGatewayTagArrayInput is an input type that accepts VirtualGatewayTagArray and VirtualGatewayTagArrayOutput values.
// You can construct a concrete instance of `VirtualGatewayTagArrayInput` via:
//
//	VirtualGatewayTagArray{ VirtualGatewayTagArgs{...} }
type VirtualGatewayTagArrayInput interface {
	pulumi.Input

	ToVirtualGatewayTagArrayOutput() VirtualGatewayTagArrayOutput
	ToVirtualGatewayTagArrayOutputWithContext(context.Context) VirtualGatewayTagArrayOutput
}

type VirtualGatewayTagArray []VirtualGatewayTagInput

func (VirtualGatewayTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualGatewayTag)(nil)).Elem()
}

func (i VirtualGatewayTagArray) ToVirtualGatewayTagArrayOutput() VirtualGatewayTagArrayOutput {
	return i.ToVirtualGatewayTagArrayOutputWithContext(context.Background())
}

func (i VirtualGatewayTagArray) ToVirtualGatewayTagArrayOutputWithContext(ctx context.Context) VirtualGatewayTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewayTagArrayOutput)
}

type VirtualGatewayTagOutput struct{ *pulumi.OutputState }

func (VirtualGatewayTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewayTag)(nil)).Elem()
}

func (o VirtualGatewayTagOutput) ToVirtualGatewayTagOutput() VirtualGatewayTagOutput {
	return o
}

func (o VirtualGatewayTagOutput) ToVirtualGatewayTagOutputWithContext(ctx context.Context) VirtualGatewayTagOutput {
	return o
}

// The key of the tag, with a minimum of 1 character.
func (o VirtualGatewayTagOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualGatewayTag) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The value of the tag, between 0 and 255 characters.
func (o VirtualGatewayTagOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualGatewayTag) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type VirtualGatewayTagArrayOutput struct{ *pulumi.OutputState }

func (VirtualGatewayTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualGatewayTag)(nil)).Elem()
}

func (o VirtualGatewayTagArrayOutput) ToVirtualGatewayTagArrayOutput() VirtualGatewayTagArrayOutput {
	return o
}

func (o VirtualGatewayTagArrayOutput) ToVirtualGatewayTagArrayOutputWithContext(ctx context.Context) VirtualGatewayTagArrayOutput {
	return o
}

func (o VirtualGatewayTagArrayOutput) Index(i pulumi.IntInput) VirtualGatewayTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualGatewayTag {
		return vs[0].([]VirtualGatewayTag)[vs[1].(int)]
	}).(VirtualGatewayTagOutput)
}

type VmActionsOnNextBoot struct {
	// One action to perform on the next boot of the VM (`enable` | `disable` | `setup-mode` |`none`). For more information, see [About Secure Boot](https://docs.outscale.com/en/userguide/About-Secure-Boot.html#_secure_boot_actions).
	SecureBoot *string `pulumi:"secureBoot"`
}

// VmActionsOnNextBootInput is an input type that accepts VmActionsOnNextBootArgs and VmActionsOnNextBootOutput values.
// You can construct a concrete instance of `VmActionsOnNextBootInput` via:
//
//	VmActionsOnNextBootArgs{...}
type VmActionsOnNextBootInput interface {
	pulumi.Input

	ToVmActionsOnNextBootOutput() VmActionsOnNextBootOutput
	ToVmActionsOnNextBootOutputWithContext(context.Context) VmActionsOnNextBootOutput
}

type VmActionsOnNextBootArgs struct {
	// One action to perform on the next boot of the VM (`enable` | `disable` | `setup-mode` |`none`). For more information, see [About Secure Boot](https://docs.outscale.com/en/userguide/About-Secure-Boot.html#_secure_boot_actions).
	SecureBoot pulumi.StringPtrInput `pulumi:"secureBoot"`
}

func (VmActionsOnNextBootArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VmActionsOnNextBoot)(nil)).Elem()
}

func (i VmActionsOnNextBootArgs) ToVmActionsOnNextBootOutput() VmActionsOnNextBootOutput {
	return i.ToVmActionsOnNextBootOutputWithContext(context.Background())
}

func (i VmActionsOnNextBootArgs) ToVmActionsOnNextBootOutputWithContext(ctx context.Context) VmActionsOnNextBootOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmActionsOnNextBootOutput)
}

// VmActionsOnNextBootArrayInput is an input type that accepts VmActionsOnNextBootArray and VmActionsOnNextBootArrayOutput values.
// You can construct a concrete instance of `VmActionsOnNextBootArrayInput` via:
//
//	VmActionsOnNextBootArray{ VmActionsOnNextBootArgs{...} }
type VmActionsOnNextBootArrayInput interface {
	pulumi.Input

	ToVmActionsOnNextBootArrayOutput() VmActionsOnNextBootArrayOutput
	ToVmActionsOnNextBootArrayOutputWithContext(context.Context) VmActionsOnNextBootArrayOutput
}

type VmActionsOnNextBootArray []VmActionsOnNextBootInput

func (VmActionsOnNextBootArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VmActionsOnNextBoot)(nil)).Elem()
}

func (i VmActionsOnNextBootArray) ToVmActionsOnNextBootArrayOutput() VmActionsOnNextBootArrayOutput {
	return i.ToVmActionsOnNextBootArrayOutputWithContext(context.Background())
}

func (i VmActionsOnNextBootArray) ToVmActionsOnNextBootArrayOutputWithContext(ctx context.Context) VmActionsOnNextBootArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmActionsOnNextBootArrayOutput)
}

type VmActionsOnNextBootOutput struct{ *pulumi.OutputState }

func (VmActionsOnNextBootOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VmActionsOnNextBoot)(nil)).Elem()
}

func (o VmActionsOnNextBootOutput) ToVmActionsOnNextBootOutput() VmActionsOnNextBootOutput {
	return o
}

func (o VmActionsOnNextBootOutput) ToVmActionsOnNextBootOutputWithContext(ctx context.Context) VmActionsOnNextBootOutput {
	return o
}

// One action to perform on the next boot of the VM (`enable` | `disable` | `setup-mode` |`none`). For more information, see [About Secure Boot](https://docs.outscale.com/en/userguide/About-Secure-Boot.html#_secure_boot_actions).
func (o VmActionsOnNextBootOutput) SecureBoot() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VmActionsOnNextBoot) *string { return v.SecureBoot }).(pulumi.StringPtrOutput)
}

type VmActionsOnNextBootArrayOutput struct{ *pulumi.OutputState }

func (VmActionsOnNextBootArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VmActionsOnNextBoot)(nil)).Elem()
}

func (o VmActionsOnNextBootArrayOutput) ToVmActionsOnNextBootArrayOutput() VmActionsOnNextBootArrayOutput {
	return o
}

func (o VmActionsOnNextBootArrayOutput) ToVmActionsOnNextBootArrayOutputWithContext(ctx context.Context) VmActionsOnNextBootArrayOutput {
	return o
}

func (o VmActionsOnNextBootArrayOutput) Index(i pulumi.IntInput) VmActionsOnNextBootOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VmActionsOnNextBoot {
		return vs[0].([]VmActionsOnNextBoot)[vs[1].(int)]
	}).(VmActionsOnNextBootOutput)
}

type VmBlockDeviceMapping struct {
	// Information about the BSU volume to create.
	Bsu *VmBlockDeviceMappingBsu `pulumi:"bsu"`
	// The name of the device.
	DeviceName        *string `pulumi:"deviceName"`
	NoDevice          *string `pulumi:"noDevice"`
	VirtualDeviceName *string `pulumi:"virtualDeviceName"`
}

// VmBlockDeviceMappingInput is an input type that accepts VmBlockDeviceMappingArgs and VmBlockDeviceMappingOutput values.
// You can construct a concrete instance of `VmBlockDeviceMappingInput` via:
//
//	VmBlockDeviceMappingArgs{...}
type VmBlockDeviceMappingInput interface {
	pulumi.Input

	ToVmBlockDeviceMappingOutput() VmBlockDeviceMappingOutput
	ToVmBlockDeviceMappingOutputWithContext(context.Context) VmBlockDeviceMappingOutput
}

type VmBlockDeviceMappingArgs struct {
	// Information about the BSU volume to create.
	Bsu VmBlockDeviceMappingBsuPtrInput `pulumi:"bsu"`
	// The name of the device.
	DeviceName        pulumi.StringPtrInput `pulumi:"deviceName"`
	NoDevice          pulumi.StringPtrInput `pulumi:"noDevice"`
	VirtualDeviceName pulumi.StringPtrInput `pulumi:"virtualDeviceName"`
}

func (VmBlockDeviceMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VmBlockDeviceMapping)(nil)).Elem()
}

func (i VmBlockDeviceMappingArgs) ToVmBlockDeviceMappingOutput() VmBlockDeviceMappingOutput {
	return i.ToVmBlockDeviceMappingOutputWithContext(context.Background())
}

func (i VmBlockDeviceMappingArgs) ToVmBlockDeviceMappingOutputWithContext(ctx context.Context) VmBlockDeviceMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmBlockDeviceMappingOutput)
}

// VmBlockDeviceMappingArrayInput is an input type that accepts VmBlockDeviceMappingArray and VmBlockDeviceMappingArrayOutput values.
// You can construct a concrete instance of `VmBlockDeviceMappingArrayInput` via:
//
//	VmBlockDeviceMappingArray{ VmBlockDeviceMappingArgs{...} }
type VmBlockDeviceMappingArrayInput interface {
	pulumi.Input

	ToVmBlockDeviceMappingArrayOutput() VmBlockDeviceMappingArrayOutput
	ToVmBlockDeviceMappingArrayOutputWithContext(context.Context) VmBlockDeviceMappingArrayOutput
}

type VmBlockDeviceMappingArray []VmBlockDeviceMappingInput

func (VmBlockDeviceMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VmBlockDeviceMapping)(nil)).Elem()
}

func (i VmBlockDeviceMappingArray) ToVmBlockDeviceMappingArrayOutput() VmBlockDeviceMappingArrayOutput {
	return i.ToVmBlockDeviceMappingArrayOutputWithContext(context.Background())
}

func (i VmBlockDeviceMappingArray) ToVmBlockDeviceMappingArrayOutputWithContext(ctx context.Context) VmBlockDeviceMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmBlockDeviceMappingArrayOutput)
}

type VmBlockDeviceMappingOutput struct{ *pulumi.OutputState }

func (VmBlockDeviceMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VmBlockDeviceMapping)(nil)).Elem()
}

func (o VmBlockDeviceMappingOutput) ToVmBlockDeviceMappingOutput() VmBlockDeviceMappingOutput {
	return o
}

func (o VmBlockDeviceMappingOutput) ToVmBlockDeviceMappingOutputWithContext(ctx context.Context) VmBlockDeviceMappingOutput {
	return o
}

// Information about the BSU volume to create.
func (o VmBlockDeviceMappingOutput) Bsu() VmBlockDeviceMappingBsuPtrOutput {
	return o.ApplyT(func(v VmBlockDeviceMapping) *VmBlockDeviceMappingBsu { return v.Bsu }).(VmBlockDeviceMappingBsuPtrOutput)
}

// The name of the device.
func (o VmBlockDeviceMappingOutput) DeviceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VmBlockDeviceMapping) *string { return v.DeviceName }).(pulumi.StringPtrOutput)
}

func (o VmBlockDeviceMappingOutput) NoDevice() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VmBlockDeviceMapping) *string { return v.NoDevice }).(pulumi.StringPtrOutput)
}

func (o VmBlockDeviceMappingOutput) VirtualDeviceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VmBlockDeviceMapping) *string { return v.VirtualDeviceName }).(pulumi.StringPtrOutput)
}

type VmBlockDeviceMappingArrayOutput struct{ *pulumi.OutputState }

func (VmBlockDeviceMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VmBlockDeviceMapping)(nil)).Elem()
}

func (o VmBlockDeviceMappingArrayOutput) ToVmBlockDeviceMappingArrayOutput() VmBlockDeviceMappingArrayOutput {
	return o
}

func (o VmBlockDeviceMappingArrayOutput) ToVmBlockDeviceMappingArrayOutputWithContext(ctx context.Context) VmBlockDeviceMappingArrayOutput {
	return o
}

func (o VmBlockDeviceMappingArrayOutput) Index(i pulumi.IntInput) VmBlockDeviceMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VmBlockDeviceMapping {
		return vs[0].([]VmBlockDeviceMapping)[vs[1].(int)]
	}).(VmBlockDeviceMappingOutput)
}

type VmBlockDeviceMappingBsu struct {
	// By default or if set to true, the volume is deleted when terminating the VM. If false, the volume is not deleted when terminating the VM.
	DeleteOnVmDeletion *bool `pulumi:"deleteOnVmDeletion"`
	// The number of I/O operations per second (IOPS). This parameter must be specified only if you create an `io1` volume. The maximum number of IOPS allowed for `io1` volumes is `13000` with a maximum performance ratio of 300 IOPS per gibibyte.
	Iops *int `pulumi:"iops"`
	// The ID of the snapshot used to create the volume.
	SnapshotId *string `pulumi:"snapshotId"`
	// One or more tags associated with the VM.
	Tags []VmBlockDeviceMappingBsuTag `pulumi:"tags"`
	// The size of the volume, in gibibytes (GiB).
	VolumeSize *int    `pulumi:"volumeSize"`
	VolumeType *string `pulumi:"volumeType"`
}

// VmBlockDeviceMappingBsuInput is an input type that accepts VmBlockDeviceMappingBsuArgs and VmBlockDeviceMappingBsuOutput values.
// You can construct a concrete instance of `VmBlockDeviceMappingBsuInput` via:
//
//	VmBlockDeviceMappingBsuArgs{...}
type VmBlockDeviceMappingBsuInput interface {
	pulumi.Input

	ToVmBlockDeviceMappingBsuOutput() VmBlockDeviceMappingBsuOutput
	ToVmBlockDeviceMappingBsuOutputWithContext(context.Context) VmBlockDeviceMappingBsuOutput
}

type VmBlockDeviceMappingBsuArgs struct {
	// By default or if set to true, the volume is deleted when terminating the VM. If false, the volume is not deleted when terminating the VM.
	DeleteOnVmDeletion pulumi.BoolPtrInput `pulumi:"deleteOnVmDeletion"`
	// The number of I/O operations per second (IOPS). This parameter must be specified only if you create an `io1` volume. The maximum number of IOPS allowed for `io1` volumes is `13000` with a maximum performance ratio of 300 IOPS per gibibyte.
	Iops pulumi.IntPtrInput `pulumi:"iops"`
	// The ID of the snapshot used to create the volume.
	SnapshotId pulumi.StringPtrInput `pulumi:"snapshotId"`
	// One or more tags associated with the VM.
	Tags VmBlockDeviceMappingBsuTagArrayInput `pulumi:"tags"`
	// The size of the volume, in gibibytes (GiB).
	VolumeSize pulumi.IntPtrInput    `pulumi:"volumeSize"`
	VolumeType pulumi.StringPtrInput `pulumi:"volumeType"`
}

func (VmBlockDeviceMappingBsuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VmBlockDeviceMappingBsu)(nil)).Elem()
}

func (i VmBlockDeviceMappingBsuArgs) ToVmBlockDeviceMappingBsuOutput() VmBlockDeviceMappingBsuOutput {
	return i.ToVmBlockDeviceMappingBsuOutputWithContext(context.Background())
}

func (i VmBlockDeviceMappingBsuArgs) ToVmBlockDeviceMappingBsuOutputWithContext(ctx context.Context) VmBlockDeviceMappingBsuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmBlockDeviceMappingBsuOutput)
}

func (i VmBlockDeviceMappingBsuArgs) ToVmBlockDeviceMappingBsuPtrOutput() VmBlockDeviceMappingBsuPtrOutput {
	return i.ToVmBlockDeviceMappingBsuPtrOutputWithContext(context.Background())
}

func (i VmBlockDeviceMappingBsuArgs) ToVmBlockDeviceMappingBsuPtrOutputWithContext(ctx context.Context) VmBlockDeviceMappingBsuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmBlockDeviceMappingBsuOutput).ToVmBlockDeviceMappingBsuPtrOutputWithContext(ctx)
}

// VmBlockDeviceMappingBsuPtrInput is an input type that accepts VmBlockDeviceMappingBsuArgs, VmBlockDeviceMappingBsuPtr and VmBlockDeviceMappingBsuPtrOutput values.
// You can construct a concrete instance of `VmBlockDeviceMappingBsuPtrInput` via:
//
//	        VmBlockDeviceMappingBsuArgs{...}
//
//	or:
//
//	        nil
type VmBlockDeviceMappingBsuPtrInput interface {
	pulumi.Input

	ToVmBlockDeviceMappingBsuPtrOutput() VmBlockDeviceMappingBsuPtrOutput
	ToVmBlockDeviceMappingBsuPtrOutputWithContext(context.Context) VmBlockDeviceMappingBsuPtrOutput
}

type vmBlockDeviceMappingBsuPtrType VmBlockDeviceMappingBsuArgs

func VmBlockDeviceMappingBsuPtr(v *VmBlockDeviceMappingBsuArgs) VmBlockDeviceMappingBsuPtrInput {
	return (*vmBlockDeviceMappingBsuPtrType)(v)
}

func (*vmBlockDeviceMappingBsuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VmBlockDeviceMappingBsu)(nil)).Elem()
}

func (i *vmBlockDeviceMappingBsuPtrType) ToVmBlockDeviceMappingBsuPtrOutput() VmBlockDeviceMappingBsuPtrOutput {
	return i.ToVmBlockDeviceMappingBsuPtrOutputWithContext(context.Background())
}

func (i *vmBlockDeviceMappingBsuPtrType) ToVmBlockDeviceMappingBsuPtrOutputWithContext(ctx context.Context) VmBlockDeviceMappingBsuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmBlockDeviceMappingBsuPtrOutput)
}

type VmBlockDeviceMappingBsuOutput struct{ *pulumi.OutputState }

func (VmBlockDeviceMappingBsuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VmBlockDeviceMappingBsu)(nil)).Elem()
}

func (o VmBlockDeviceMappingBsuOutput) ToVmBlockDeviceMappingBsuOutput() VmBlockDeviceMappingBsuOutput {
	return o
}

func (o VmBlockDeviceMappingBsuOutput) ToVmBlockDeviceMappingBsuOutputWithContext(ctx context.Context) VmBlockDeviceMappingBsuOutput {
	return o
}

func (o VmBlockDeviceMappingBsuOutput) ToVmBlockDeviceMappingBsuPtrOutput() VmBlockDeviceMappingBsuPtrOutput {
	return o.ToVmBlockDeviceMappingBsuPtrOutputWithContext(context.Background())
}

func (o VmBlockDeviceMappingBsuOutput) ToVmBlockDeviceMappingBsuPtrOutputWithContext(ctx context.Context) VmBlockDeviceMappingBsuPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VmBlockDeviceMappingBsu) *VmBlockDeviceMappingBsu {
		return &v
	}).(VmBlockDeviceMappingBsuPtrOutput)
}

// By default or if set to true, the volume is deleted when terminating the VM. If false, the volume is not deleted when terminating the VM.
func (o VmBlockDeviceMappingBsuOutput) DeleteOnVmDeletion() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VmBlockDeviceMappingBsu) *bool { return v.DeleteOnVmDeletion }).(pulumi.BoolPtrOutput)
}

// The number of I/O operations per second (IOPS). This parameter must be specified only if you create an `io1` volume. The maximum number of IOPS allowed for `io1` volumes is `13000` with a maximum performance ratio of 300 IOPS per gibibyte.
func (o VmBlockDeviceMappingBsuOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VmBlockDeviceMappingBsu) *int { return v.Iops }).(pulumi.IntPtrOutput)
}

// The ID of the snapshot used to create the volume.
func (o VmBlockDeviceMappingBsuOutput) SnapshotId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VmBlockDeviceMappingBsu) *string { return v.SnapshotId }).(pulumi.StringPtrOutput)
}

// One or more tags associated with the VM.
func (o VmBlockDeviceMappingBsuOutput) Tags() VmBlockDeviceMappingBsuTagArrayOutput {
	return o.ApplyT(func(v VmBlockDeviceMappingBsu) []VmBlockDeviceMappingBsuTag { return v.Tags }).(VmBlockDeviceMappingBsuTagArrayOutput)
}

// The size of the volume, in gibibytes (GiB).
func (o VmBlockDeviceMappingBsuOutput) VolumeSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VmBlockDeviceMappingBsu) *int { return v.VolumeSize }).(pulumi.IntPtrOutput)
}

func (o VmBlockDeviceMappingBsuOutput) VolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VmBlockDeviceMappingBsu) *string { return v.VolumeType }).(pulumi.StringPtrOutput)
}

type VmBlockDeviceMappingBsuPtrOutput struct{ *pulumi.OutputState }

func (VmBlockDeviceMappingBsuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VmBlockDeviceMappingBsu)(nil)).Elem()
}

func (o VmBlockDeviceMappingBsuPtrOutput) ToVmBlockDeviceMappingBsuPtrOutput() VmBlockDeviceMappingBsuPtrOutput {
	return o
}

func (o VmBlockDeviceMappingBsuPtrOutput) ToVmBlockDeviceMappingBsuPtrOutputWithContext(ctx context.Context) VmBlockDeviceMappingBsuPtrOutput {
	return o
}

func (o VmBlockDeviceMappingBsuPtrOutput) Elem() VmBlockDeviceMappingBsuOutput {
	return o.ApplyT(func(v *VmBlockDeviceMappingBsu) VmBlockDeviceMappingBsu {
		if v != nil {
			return *v
		}
		var ret VmBlockDeviceMappingBsu
		return ret
	}).(VmBlockDeviceMappingBsuOutput)
}

// By default or if set to true, the volume is deleted when terminating the VM. If false, the volume is not deleted when terminating the VM.
func (o VmBlockDeviceMappingBsuPtrOutput) DeleteOnVmDeletion() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VmBlockDeviceMappingBsu) *bool {
		if v == nil {
			return nil
		}
		return v.DeleteOnVmDeletion
	}).(pulumi.BoolPtrOutput)
}

// The number of I/O operations per second (IOPS). This parameter must be specified only if you create an `io1` volume. The maximum number of IOPS allowed for `io1` volumes is `13000` with a maximum performance ratio of 300 IOPS per gibibyte.
func (o VmBlockDeviceMappingBsuPtrOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VmBlockDeviceMappingBsu) *int {
		if v == nil {
			return nil
		}
		return v.Iops
	}).(pulumi.IntPtrOutput)
}

// The ID of the snapshot used to create the volume.
func (o VmBlockDeviceMappingBsuPtrOutput) SnapshotId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VmBlockDeviceMappingBsu) *string {
		if v == nil {
			return nil
		}
		return v.SnapshotId
	}).(pulumi.StringPtrOutput)
}

// One or more tags associated with the VM.
func (o VmBlockDeviceMappingBsuPtrOutput) Tags() VmBlockDeviceMappingBsuTagArrayOutput {
	return o.ApplyT(func(v *VmBlockDeviceMappingBsu) []VmBlockDeviceMappingBsuTag {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(VmBlockDeviceMappingBsuTagArrayOutput)
}

// The size of the volume, in gibibytes (GiB).
func (o VmBlockDeviceMappingBsuPtrOutput) VolumeSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VmBlockDeviceMappingBsu) *int {
		if v == nil {
			return nil
		}
		return v.VolumeSize
	}).(pulumi.IntPtrOutput)
}

func (o VmBlockDeviceMappingBsuPtrOutput) VolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VmBlockDeviceMappingBsu) *string {
		if v == nil {
			return nil
		}
		return v.VolumeType
	}).(pulumi.StringPtrOutput)
}

type VmBlockDeviceMappingBsuTag struct {
	// The key of the tag with a minimum of 1 character.
	Key *string `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value *string `pulumi:"value"`
}

// VmBlockDeviceMappingBsuTagInput is an input type that accepts VmBlockDeviceMappingBsuTagArgs and VmBlockDeviceMappingBsuTagOutput values.
// You can construct a concrete instance of `VmBlockDeviceMappingBsuTagInput` via:
//
//	VmBlockDeviceMappingBsuTagArgs{...}
type VmBlockDeviceMappingBsuTagInput interface {
	pulumi.Input

	ToVmBlockDeviceMappingBsuTagOutput() VmBlockDeviceMappingBsuTagOutput
	ToVmBlockDeviceMappingBsuTagOutputWithContext(context.Context) VmBlockDeviceMappingBsuTagOutput
}

type VmBlockDeviceMappingBsuTagArgs struct {
	// The key of the tag with a minimum of 1 character.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (VmBlockDeviceMappingBsuTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VmBlockDeviceMappingBsuTag)(nil)).Elem()
}

func (i VmBlockDeviceMappingBsuTagArgs) ToVmBlockDeviceMappingBsuTagOutput() VmBlockDeviceMappingBsuTagOutput {
	return i.ToVmBlockDeviceMappingBsuTagOutputWithContext(context.Background())
}

func (i VmBlockDeviceMappingBsuTagArgs) ToVmBlockDeviceMappingBsuTagOutputWithContext(ctx context.Context) VmBlockDeviceMappingBsuTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmBlockDeviceMappingBsuTagOutput)
}

// VmBlockDeviceMappingBsuTagArrayInput is an input type that accepts VmBlockDeviceMappingBsuTagArray and VmBlockDeviceMappingBsuTagArrayOutput values.
// You can construct a concrete instance of `VmBlockDeviceMappingBsuTagArrayInput` via:
//
//	VmBlockDeviceMappingBsuTagArray{ VmBlockDeviceMappingBsuTagArgs{...} }
type VmBlockDeviceMappingBsuTagArrayInput interface {
	pulumi.Input

	ToVmBlockDeviceMappingBsuTagArrayOutput() VmBlockDeviceMappingBsuTagArrayOutput
	ToVmBlockDeviceMappingBsuTagArrayOutputWithContext(context.Context) VmBlockDeviceMappingBsuTagArrayOutput
}

type VmBlockDeviceMappingBsuTagArray []VmBlockDeviceMappingBsuTagInput

func (VmBlockDeviceMappingBsuTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VmBlockDeviceMappingBsuTag)(nil)).Elem()
}

func (i VmBlockDeviceMappingBsuTagArray) ToVmBlockDeviceMappingBsuTagArrayOutput() VmBlockDeviceMappingBsuTagArrayOutput {
	return i.ToVmBlockDeviceMappingBsuTagArrayOutputWithContext(context.Background())
}

func (i VmBlockDeviceMappingBsuTagArray) ToVmBlockDeviceMappingBsuTagArrayOutputWithContext(ctx context.Context) VmBlockDeviceMappingBsuTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmBlockDeviceMappingBsuTagArrayOutput)
}

type VmBlockDeviceMappingBsuTagOutput struct{ *pulumi.OutputState }

func (VmBlockDeviceMappingBsuTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VmBlockDeviceMappingBsuTag)(nil)).Elem()
}

func (o VmBlockDeviceMappingBsuTagOutput) ToVmBlockDeviceMappingBsuTagOutput() VmBlockDeviceMappingBsuTagOutput {
	return o
}

func (o VmBlockDeviceMappingBsuTagOutput) ToVmBlockDeviceMappingBsuTagOutputWithContext(ctx context.Context) VmBlockDeviceMappingBsuTagOutput {
	return o
}

// The key of the tag with a minimum of 1 character.
func (o VmBlockDeviceMappingBsuTagOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VmBlockDeviceMappingBsuTag) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The value of the tag, between 0 and 255 characters.
func (o VmBlockDeviceMappingBsuTagOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VmBlockDeviceMappingBsuTag) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type VmBlockDeviceMappingBsuTagArrayOutput struct{ *pulumi.OutputState }

func (VmBlockDeviceMappingBsuTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VmBlockDeviceMappingBsuTag)(nil)).Elem()
}

func (o VmBlockDeviceMappingBsuTagArrayOutput) ToVmBlockDeviceMappingBsuTagArrayOutput() VmBlockDeviceMappingBsuTagArrayOutput {
	return o
}

func (o VmBlockDeviceMappingBsuTagArrayOutput) ToVmBlockDeviceMappingBsuTagArrayOutputWithContext(ctx context.Context) VmBlockDeviceMappingBsuTagArrayOutput {
	return o
}

func (o VmBlockDeviceMappingBsuTagArrayOutput) Index(i pulumi.IntInput) VmBlockDeviceMappingBsuTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VmBlockDeviceMappingBsuTag {
		return vs[0].([]VmBlockDeviceMappingBsuTag)[vs[1].(int)]
	}).(VmBlockDeviceMappingBsuTagOutput)
}

type VmBlockDeviceMappingsCreated struct {
	// Information about the created BSU volume.
	Bsus []VmBlockDeviceMappingsCreatedBsus `pulumi:"bsus"`
	// The name of the device.
	DeviceName *string `pulumi:"deviceName"`
}

// VmBlockDeviceMappingsCreatedInput is an input type that accepts VmBlockDeviceMappingsCreatedArgs and VmBlockDeviceMappingsCreatedOutput values.
// You can construct a concrete instance of `VmBlockDeviceMappingsCreatedInput` via:
//
//	VmBlockDeviceMappingsCreatedArgs{...}
type VmBlockDeviceMappingsCreatedInput interface {
	pulumi.Input

	ToVmBlockDeviceMappingsCreatedOutput() VmBlockDeviceMappingsCreatedOutput
	ToVmBlockDeviceMappingsCreatedOutputWithContext(context.Context) VmBlockDeviceMappingsCreatedOutput
}

type VmBlockDeviceMappingsCreatedArgs struct {
	// Information about the created BSU volume.
	Bsus VmBlockDeviceMappingsCreatedBsusArrayInput `pulumi:"bsus"`
	// The name of the device.
	DeviceName pulumi.StringPtrInput `pulumi:"deviceName"`
}

func (VmBlockDeviceMappingsCreatedArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VmBlockDeviceMappingsCreated)(nil)).Elem()
}

func (i VmBlockDeviceMappingsCreatedArgs) ToVmBlockDeviceMappingsCreatedOutput() VmBlockDeviceMappingsCreatedOutput {
	return i.ToVmBlockDeviceMappingsCreatedOutputWithContext(context.Background())
}

func (i VmBlockDeviceMappingsCreatedArgs) ToVmBlockDeviceMappingsCreatedOutputWithContext(ctx context.Context) VmBlockDeviceMappingsCreatedOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmBlockDeviceMappingsCreatedOutput)
}

// VmBlockDeviceMappingsCreatedArrayInput is an input type that accepts VmBlockDeviceMappingsCreatedArray and VmBlockDeviceMappingsCreatedArrayOutput values.
// You can construct a concrete instance of `VmBlockDeviceMappingsCreatedArrayInput` via:
//
//	VmBlockDeviceMappingsCreatedArray{ VmBlockDeviceMappingsCreatedArgs{...} }
type VmBlockDeviceMappingsCreatedArrayInput interface {
	pulumi.Input

	ToVmBlockDeviceMappingsCreatedArrayOutput() VmBlockDeviceMappingsCreatedArrayOutput
	ToVmBlockDeviceMappingsCreatedArrayOutputWithContext(context.Context) VmBlockDeviceMappingsCreatedArrayOutput
}

type VmBlockDeviceMappingsCreatedArray []VmBlockDeviceMappingsCreatedInput

func (VmBlockDeviceMappingsCreatedArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VmBlockDeviceMappingsCreated)(nil)).Elem()
}

func (i VmBlockDeviceMappingsCreatedArray) ToVmBlockDeviceMappingsCreatedArrayOutput() VmBlockDeviceMappingsCreatedArrayOutput {
	return i.ToVmBlockDeviceMappingsCreatedArrayOutputWithContext(context.Background())
}

func (i VmBlockDeviceMappingsCreatedArray) ToVmBlockDeviceMappingsCreatedArrayOutputWithContext(ctx context.Context) VmBlockDeviceMappingsCreatedArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmBlockDeviceMappingsCreatedArrayOutput)
}

type VmBlockDeviceMappingsCreatedOutput struct{ *pulumi.OutputState }

func (VmBlockDeviceMappingsCreatedOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VmBlockDeviceMappingsCreated)(nil)).Elem()
}

func (o VmBlockDeviceMappingsCreatedOutput) ToVmBlockDeviceMappingsCreatedOutput() VmBlockDeviceMappingsCreatedOutput {
	return o
}

func (o VmBlockDeviceMappingsCreatedOutput) ToVmBlockDeviceMappingsCreatedOutputWithContext(ctx context.Context) VmBlockDeviceMappingsCreatedOutput {
	return o
}

// Information about the created BSU volume.
func (o VmBlockDeviceMappingsCreatedOutput) Bsus() VmBlockDeviceMappingsCreatedBsusArrayOutput {
	return o.ApplyT(func(v VmBlockDeviceMappingsCreated) []VmBlockDeviceMappingsCreatedBsus { return v.Bsus }).(VmBlockDeviceMappingsCreatedBsusArrayOutput)
}

// The name of the device.
func (o VmBlockDeviceMappingsCreatedOutput) DeviceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VmBlockDeviceMappingsCreated) *string { return v.DeviceName }).(pulumi.StringPtrOutput)
}

type VmBlockDeviceMappingsCreatedArrayOutput struct{ *pulumi.OutputState }

func (VmBlockDeviceMappingsCreatedArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VmBlockDeviceMappingsCreated)(nil)).Elem()
}

func (o VmBlockDeviceMappingsCreatedArrayOutput) ToVmBlockDeviceMappingsCreatedArrayOutput() VmBlockDeviceMappingsCreatedArrayOutput {
	return o
}

func (o VmBlockDeviceMappingsCreatedArrayOutput) ToVmBlockDeviceMappingsCreatedArrayOutputWithContext(ctx context.Context) VmBlockDeviceMappingsCreatedArrayOutput {
	return o
}

func (o VmBlockDeviceMappingsCreatedArrayOutput) Index(i pulumi.IntInput) VmBlockDeviceMappingsCreatedOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VmBlockDeviceMappingsCreated {
		return vs[0].([]VmBlockDeviceMappingsCreated)[vs[1].(int)]
	}).(VmBlockDeviceMappingsCreatedOutput)
}

type VmBlockDeviceMappingsCreatedBsus struct {
	// If true, the NIC is deleted when the VM is terminated.
	DeleteOnVmDeletion *bool `pulumi:"deleteOnVmDeletion"`
	// The date and time (UTC) at which the volume was attached to the VM, in ISO 8601 date-time format.
	LinkDate *string `pulumi:"linkDate"`
	// The state of the VM (`running` | `stopped`). If set to `stopped`, the VM is stopped regardless of the value of the `vmInitiatedShutdownBehavior` argument.
	State *string `pulumi:"state"`
	// A tag to add to this resource. You can specify this argument several times.
	Tags []VmBlockDeviceMappingsCreatedBsusTag `pulumi:"tags"`
	// The ID of the volume.
	VolumeId *string `pulumi:"volumeId"`
}

// VmBlockDeviceMappingsCreatedBsusInput is an input type that accepts VmBlockDeviceMappingsCreatedBsusArgs and VmBlockDeviceMappingsCreatedBsusOutput values.
// You can construct a concrete instance of `VmBlockDeviceMappingsCreatedBsusInput` via:
//
//	VmBlockDeviceMappingsCreatedBsusArgs{...}
type VmBlockDeviceMappingsCreatedBsusInput interface {
	pulumi.Input

	ToVmBlockDeviceMappingsCreatedBsusOutput() VmBlockDeviceMappingsCreatedBsusOutput
	ToVmBlockDeviceMappingsCreatedBsusOutputWithContext(context.Context) VmBlockDeviceMappingsCreatedBsusOutput
}

type VmBlockDeviceMappingsCreatedBsusArgs struct {
	// If true, the NIC is deleted when the VM is terminated.
	DeleteOnVmDeletion pulumi.BoolPtrInput `pulumi:"deleteOnVmDeletion"`
	// The date and time (UTC) at which the volume was attached to the VM, in ISO 8601 date-time format.
	LinkDate pulumi.StringPtrInput `pulumi:"linkDate"`
	// The state of the VM (`running` | `stopped`). If set to `stopped`, the VM is stopped regardless of the value of the `vmInitiatedShutdownBehavior` argument.
	State pulumi.StringPtrInput `pulumi:"state"`
	// A tag to add to this resource. You can specify this argument several times.
	Tags VmBlockDeviceMappingsCreatedBsusTagArrayInput `pulumi:"tags"`
	// The ID of the volume.
	VolumeId pulumi.StringPtrInput `pulumi:"volumeId"`
}

func (VmBlockDeviceMappingsCreatedBsusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VmBlockDeviceMappingsCreatedBsus)(nil)).Elem()
}

func (i VmBlockDeviceMappingsCreatedBsusArgs) ToVmBlockDeviceMappingsCreatedBsusOutput() VmBlockDeviceMappingsCreatedBsusOutput {
	return i.ToVmBlockDeviceMappingsCreatedBsusOutputWithContext(context.Background())
}

func (i VmBlockDeviceMappingsCreatedBsusArgs) ToVmBlockDeviceMappingsCreatedBsusOutputWithContext(ctx context.Context) VmBlockDeviceMappingsCreatedBsusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmBlockDeviceMappingsCreatedBsusOutput)
}

// VmBlockDeviceMappingsCreatedBsusArrayInput is an input type that accepts VmBlockDeviceMappingsCreatedBsusArray and VmBlockDeviceMappingsCreatedBsusArrayOutput values.
// You can construct a concrete instance of `VmBlockDeviceMappingsCreatedBsusArrayInput` via:
//
//	VmBlockDeviceMappingsCreatedBsusArray{ VmBlockDeviceMappingsCreatedBsusArgs{...} }
type VmBlockDeviceMappingsCreatedBsusArrayInput interface {
	pulumi.Input

	ToVmBlockDeviceMappingsCreatedBsusArrayOutput() VmBlockDeviceMappingsCreatedBsusArrayOutput
	ToVmBlockDeviceMappingsCreatedBsusArrayOutputWithContext(context.Context) VmBlockDeviceMappingsCreatedBsusArrayOutput
}

type VmBlockDeviceMappingsCreatedBsusArray []VmBlockDeviceMappingsCreatedBsusInput

func (VmBlockDeviceMappingsCreatedBsusArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VmBlockDeviceMappingsCreatedBsus)(nil)).Elem()
}

func (i VmBlockDeviceMappingsCreatedBsusArray) ToVmBlockDeviceMappingsCreatedBsusArrayOutput() VmBlockDeviceMappingsCreatedBsusArrayOutput {
	return i.ToVmBlockDeviceMappingsCreatedBsusArrayOutputWithContext(context.Background())
}

func (i VmBlockDeviceMappingsCreatedBsusArray) ToVmBlockDeviceMappingsCreatedBsusArrayOutputWithContext(ctx context.Context) VmBlockDeviceMappingsCreatedBsusArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmBlockDeviceMappingsCreatedBsusArrayOutput)
}

type VmBlockDeviceMappingsCreatedBsusOutput struct{ *pulumi.OutputState }

func (VmBlockDeviceMappingsCreatedBsusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VmBlockDeviceMappingsCreatedBsus)(nil)).Elem()
}

func (o VmBlockDeviceMappingsCreatedBsusOutput) ToVmBlockDeviceMappingsCreatedBsusOutput() VmBlockDeviceMappingsCreatedBsusOutput {
	return o
}

func (o VmBlockDeviceMappingsCreatedBsusOutput) ToVmBlockDeviceMappingsCreatedBsusOutputWithContext(ctx context.Context) VmBlockDeviceMappingsCreatedBsusOutput {
	return o
}

// If true, the NIC is deleted when the VM is terminated.
func (o VmBlockDeviceMappingsCreatedBsusOutput) DeleteOnVmDeletion() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VmBlockDeviceMappingsCreatedBsus) *bool { return v.DeleteOnVmDeletion }).(pulumi.BoolPtrOutput)
}

// The date and time (UTC) at which the volume was attached to the VM, in ISO 8601 date-time format.
func (o VmBlockDeviceMappingsCreatedBsusOutput) LinkDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VmBlockDeviceMappingsCreatedBsus) *string { return v.LinkDate }).(pulumi.StringPtrOutput)
}

// The state of the VM (`running` | `stopped`). If set to `stopped`, the VM is stopped regardless of the value of the `vmInitiatedShutdownBehavior` argument.
func (o VmBlockDeviceMappingsCreatedBsusOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VmBlockDeviceMappingsCreatedBsus) *string { return v.State }).(pulumi.StringPtrOutput)
}

// A tag to add to this resource. You can specify this argument several times.
func (o VmBlockDeviceMappingsCreatedBsusOutput) Tags() VmBlockDeviceMappingsCreatedBsusTagArrayOutput {
	return o.ApplyT(func(v VmBlockDeviceMappingsCreatedBsus) []VmBlockDeviceMappingsCreatedBsusTag { return v.Tags }).(VmBlockDeviceMappingsCreatedBsusTagArrayOutput)
}

// The ID of the volume.
func (o VmBlockDeviceMappingsCreatedBsusOutput) VolumeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VmBlockDeviceMappingsCreatedBsus) *string { return v.VolumeId }).(pulumi.StringPtrOutput)
}

type VmBlockDeviceMappingsCreatedBsusArrayOutput struct{ *pulumi.OutputState }

func (VmBlockDeviceMappingsCreatedBsusArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VmBlockDeviceMappingsCreatedBsus)(nil)).Elem()
}

func (o VmBlockDeviceMappingsCreatedBsusArrayOutput) ToVmBlockDeviceMappingsCreatedBsusArrayOutput() VmBlockDeviceMappingsCreatedBsusArrayOutput {
	return o
}

func (o VmBlockDeviceMappingsCreatedBsusArrayOutput) ToVmBlockDeviceMappingsCreatedBsusArrayOutputWithContext(ctx context.Context) VmBlockDeviceMappingsCreatedBsusArrayOutput {
	return o
}

func (o VmBlockDeviceMappingsCreatedBsusArrayOutput) Index(i pulumi.IntInput) VmBlockDeviceMappingsCreatedBsusOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VmBlockDeviceMappingsCreatedBsus {
		return vs[0].([]VmBlockDeviceMappingsCreatedBsus)[vs[1].(int)]
	}).(VmBlockDeviceMappingsCreatedBsusOutput)
}

type VmBlockDeviceMappingsCreatedBsusTag struct {
	// The key of the tag, with a minimum of 1 character.
	Key *string `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value *string `pulumi:"value"`
}

// VmBlockDeviceMappingsCreatedBsusTagInput is an input type that accepts VmBlockDeviceMappingsCreatedBsusTagArgs and VmBlockDeviceMappingsCreatedBsusTagOutput values.
// You can construct a concrete instance of `VmBlockDeviceMappingsCreatedBsusTagInput` via:
//
//	VmBlockDeviceMappingsCreatedBsusTagArgs{...}
type VmBlockDeviceMappingsCreatedBsusTagInput interface {
	pulumi.Input

	ToVmBlockDeviceMappingsCreatedBsusTagOutput() VmBlockDeviceMappingsCreatedBsusTagOutput
	ToVmBlockDeviceMappingsCreatedBsusTagOutputWithContext(context.Context) VmBlockDeviceMappingsCreatedBsusTagOutput
}

type VmBlockDeviceMappingsCreatedBsusTagArgs struct {
	// The key of the tag, with a minimum of 1 character.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (VmBlockDeviceMappingsCreatedBsusTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VmBlockDeviceMappingsCreatedBsusTag)(nil)).Elem()
}

func (i VmBlockDeviceMappingsCreatedBsusTagArgs) ToVmBlockDeviceMappingsCreatedBsusTagOutput() VmBlockDeviceMappingsCreatedBsusTagOutput {
	return i.ToVmBlockDeviceMappingsCreatedBsusTagOutputWithContext(context.Background())
}

func (i VmBlockDeviceMappingsCreatedBsusTagArgs) ToVmBlockDeviceMappingsCreatedBsusTagOutputWithContext(ctx context.Context) VmBlockDeviceMappingsCreatedBsusTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmBlockDeviceMappingsCreatedBsusTagOutput)
}

// VmBlockDeviceMappingsCreatedBsusTagArrayInput is an input type that accepts VmBlockDeviceMappingsCreatedBsusTagArray and VmBlockDeviceMappingsCreatedBsusTagArrayOutput values.
// You can construct a concrete instance of `VmBlockDeviceMappingsCreatedBsusTagArrayInput` via:
//
//	VmBlockDeviceMappingsCreatedBsusTagArray{ VmBlockDeviceMappingsCreatedBsusTagArgs{...} }
type VmBlockDeviceMappingsCreatedBsusTagArrayInput interface {
	pulumi.Input

	ToVmBlockDeviceMappingsCreatedBsusTagArrayOutput() VmBlockDeviceMappingsCreatedBsusTagArrayOutput
	ToVmBlockDeviceMappingsCreatedBsusTagArrayOutputWithContext(context.Context) VmBlockDeviceMappingsCreatedBsusTagArrayOutput
}

type VmBlockDeviceMappingsCreatedBsusTagArray []VmBlockDeviceMappingsCreatedBsusTagInput

func (VmBlockDeviceMappingsCreatedBsusTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VmBlockDeviceMappingsCreatedBsusTag)(nil)).Elem()
}

func (i VmBlockDeviceMappingsCreatedBsusTagArray) ToVmBlockDeviceMappingsCreatedBsusTagArrayOutput() VmBlockDeviceMappingsCreatedBsusTagArrayOutput {
	return i.ToVmBlockDeviceMappingsCreatedBsusTagArrayOutputWithContext(context.Background())
}

func (i VmBlockDeviceMappingsCreatedBsusTagArray) ToVmBlockDeviceMappingsCreatedBsusTagArrayOutputWithContext(ctx context.Context) VmBlockDeviceMappingsCreatedBsusTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmBlockDeviceMappingsCreatedBsusTagArrayOutput)
}

type VmBlockDeviceMappingsCreatedBsusTagOutput struct{ *pulumi.OutputState }

func (VmBlockDeviceMappingsCreatedBsusTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VmBlockDeviceMappingsCreatedBsusTag)(nil)).Elem()
}

func (o VmBlockDeviceMappingsCreatedBsusTagOutput) ToVmBlockDeviceMappingsCreatedBsusTagOutput() VmBlockDeviceMappingsCreatedBsusTagOutput {
	return o
}

func (o VmBlockDeviceMappingsCreatedBsusTagOutput) ToVmBlockDeviceMappingsCreatedBsusTagOutputWithContext(ctx context.Context) VmBlockDeviceMappingsCreatedBsusTagOutput {
	return o
}

// The key of the tag, with a minimum of 1 character.
func (o VmBlockDeviceMappingsCreatedBsusTagOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VmBlockDeviceMappingsCreatedBsusTag) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The value of the tag, between 0 and 255 characters.
func (o VmBlockDeviceMappingsCreatedBsusTagOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VmBlockDeviceMappingsCreatedBsusTag) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type VmBlockDeviceMappingsCreatedBsusTagArrayOutput struct{ *pulumi.OutputState }

func (VmBlockDeviceMappingsCreatedBsusTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VmBlockDeviceMappingsCreatedBsusTag)(nil)).Elem()
}

func (o VmBlockDeviceMappingsCreatedBsusTagArrayOutput) ToVmBlockDeviceMappingsCreatedBsusTagArrayOutput() VmBlockDeviceMappingsCreatedBsusTagArrayOutput {
	return o
}

func (o VmBlockDeviceMappingsCreatedBsusTagArrayOutput) ToVmBlockDeviceMappingsCreatedBsusTagArrayOutputWithContext(ctx context.Context) VmBlockDeviceMappingsCreatedBsusTagArrayOutput {
	return o
}

func (o VmBlockDeviceMappingsCreatedBsusTagArrayOutput) Index(i pulumi.IntInput) VmBlockDeviceMappingsCreatedBsusTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VmBlockDeviceMappingsCreatedBsusTag {
		return vs[0].([]VmBlockDeviceMappingsCreatedBsusTag)[vs[1].(int)]
	}).(VmBlockDeviceMappingsCreatedBsusTagOutput)
}

type VmNic struct {
	// The account ID of the owner of the NIC.
	AccountId *string `pulumi:"accountId"`
	// If true, the NIC is deleted when the VM is terminated. You can specify this parameter only for a new NIC. To modify this value for an existing NIC, see [UpdateNic](https://docs.outscale.com/api#updatenic).
	DeleteOnVmDeletion *bool `pulumi:"deleteOnVmDeletion"`
	// The description of the NIC, if you are creating a NIC when creating the VM.
	Description *string `pulumi:"description"`
	// The index of the VM device for the NIC attachment (between `1` and `7`, both included). This parameter is required if you create a NIC when creating the VM.
	DeviceNumber int `pulumi:"deviceNumber"`
	// (Net only) If true, the source/destination check is enabled. If false, it is disabled.
	IsSourceDestChecked *bool `pulumi:"isSourceDestChecked"`
	// Information about the network interface card (NIC).
	LinkNics []VmNicLinkNic `pulumi:"linkNics"`
	// Information about the public IP associated with the NIC.
	LinkPublicIps []VmNicLinkPublicIp `pulumi:"linkPublicIps"`
	// The Media Access Control (MAC) address of the NIC.
	MacAddress *string `pulumi:"macAddress"`
	// The ID of the Net for the NIC.
	NetId *string `pulumi:"netId"`
	// The ID of the NIC, if you are attaching an existing NIC when creating a VM.
	NicId *string `pulumi:"nicId"`
	// The name of the private DNS.
	PrivateDnsName *string `pulumi:"privateDnsName"`
	// One or more private IPs to assign to the NIC, if you create a NIC when creating a VM. Only one private IP can be the primary private IP.
	PrivateIps []VmNicPrivateIp `pulumi:"privateIps"`
	// The number of secondary private IPs, if you create a NIC when creating a VM. This parameter cannot be specified if you specified more than one private IP in the `privateIps` parameter.
	SecondaryPrivateIpCount *int `pulumi:"secondaryPrivateIpCount"`
	// One or more IDs of security groups for the NIC, if you create a NIC when creating a VM.
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// One or more security groups associated with the VM.
	SecurityGroups []VmNicSecurityGroup `pulumi:"securityGroups"`
	// The state of the VM (`running` | `stopped`). If set to `stopped`, the VM is stopped regardless of the value of the `vmInitiatedShutdownBehavior` argument.
	State *string `pulumi:"state"`
	// The ID of the Subnet for the NIC, if you create a NIC when creating a VM. This parameter is required if you create a NIC when creating the VM.
	SubnetId *string `pulumi:"subnetId"`
}

// VmNicInput is an input type that accepts VmNicArgs and VmNicOutput values.
// You can construct a concrete instance of `VmNicInput` via:
//
//	VmNicArgs{...}
type VmNicInput interface {
	pulumi.Input

	ToVmNicOutput() VmNicOutput
	ToVmNicOutputWithContext(context.Context) VmNicOutput
}

type VmNicArgs struct {
	// The account ID of the owner of the NIC.
	AccountId pulumi.StringPtrInput `pulumi:"accountId"`
	// If true, the NIC is deleted when the VM is terminated. You can specify this parameter only for a new NIC. To modify this value for an existing NIC, see [UpdateNic](https://docs.outscale.com/api#updatenic).
	DeleteOnVmDeletion pulumi.BoolPtrInput `pulumi:"deleteOnVmDeletion"`
	// The description of the NIC, if you are creating a NIC when creating the VM.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The index of the VM device for the NIC attachment (between `1` and `7`, both included). This parameter is required if you create a NIC when creating the VM.
	DeviceNumber pulumi.IntInput `pulumi:"deviceNumber"`
	// (Net only) If true, the source/destination check is enabled. If false, it is disabled.
	IsSourceDestChecked pulumi.BoolPtrInput `pulumi:"isSourceDestChecked"`
	// Information about the network interface card (NIC).
	LinkNics VmNicLinkNicArrayInput `pulumi:"linkNics"`
	// Information about the public IP associated with the NIC.
	LinkPublicIps VmNicLinkPublicIpArrayInput `pulumi:"linkPublicIps"`
	// The Media Access Control (MAC) address of the NIC.
	MacAddress pulumi.StringPtrInput `pulumi:"macAddress"`
	// The ID of the Net for the NIC.
	NetId pulumi.StringPtrInput `pulumi:"netId"`
	// The ID of the NIC, if you are attaching an existing NIC when creating a VM.
	NicId pulumi.StringPtrInput `pulumi:"nicId"`
	// The name of the private DNS.
	PrivateDnsName pulumi.StringPtrInput `pulumi:"privateDnsName"`
	// One or more private IPs to assign to the NIC, if you create a NIC when creating a VM. Only one private IP can be the primary private IP.
	PrivateIps VmNicPrivateIpArrayInput `pulumi:"privateIps"`
	// The number of secondary private IPs, if you create a NIC when creating a VM. This parameter cannot be specified if you specified more than one private IP in the `privateIps` parameter.
	SecondaryPrivateIpCount pulumi.IntPtrInput `pulumi:"secondaryPrivateIpCount"`
	// One or more IDs of security groups for the NIC, if you create a NIC when creating a VM.
	SecurityGroupIds pulumi.StringArrayInput `pulumi:"securityGroupIds"`
	// One or more security groups associated with the VM.
	SecurityGroups VmNicSecurityGroupArrayInput `pulumi:"securityGroups"`
	// The state of the VM (`running` | `stopped`). If set to `stopped`, the VM is stopped regardless of the value of the `vmInitiatedShutdownBehavior` argument.
	State pulumi.StringPtrInput `pulumi:"state"`
	// The ID of the Subnet for the NIC, if you create a NIC when creating a VM. This parameter is required if you create a NIC when creating the VM.
	SubnetId pulumi.StringPtrInput `pulumi:"subnetId"`
}

func (VmNicArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VmNic)(nil)).Elem()
}

func (i VmNicArgs) ToVmNicOutput() VmNicOutput {
	return i.ToVmNicOutputWithContext(context.Background())
}

func (i VmNicArgs) ToVmNicOutputWithContext(ctx context.Context) VmNicOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmNicOutput)
}

// VmNicArrayInput is an input type that accepts VmNicArray and VmNicArrayOutput values.
// You can construct a concrete instance of `VmNicArrayInput` via:
//
//	VmNicArray{ VmNicArgs{...} }
type VmNicArrayInput interface {
	pulumi.Input

	ToVmNicArrayOutput() VmNicArrayOutput
	ToVmNicArrayOutputWithContext(context.Context) VmNicArrayOutput
}

type VmNicArray []VmNicInput

func (VmNicArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VmNic)(nil)).Elem()
}

func (i VmNicArray) ToVmNicArrayOutput() VmNicArrayOutput {
	return i.ToVmNicArrayOutputWithContext(context.Background())
}

func (i VmNicArray) ToVmNicArrayOutputWithContext(ctx context.Context) VmNicArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmNicArrayOutput)
}

type VmNicOutput struct{ *pulumi.OutputState }

func (VmNicOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VmNic)(nil)).Elem()
}

func (o VmNicOutput) ToVmNicOutput() VmNicOutput {
	return o
}

func (o VmNicOutput) ToVmNicOutputWithContext(ctx context.Context) VmNicOutput {
	return o
}

// The account ID of the owner of the NIC.
func (o VmNicOutput) AccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VmNic) *string { return v.AccountId }).(pulumi.StringPtrOutput)
}

// If true, the NIC is deleted when the VM is terminated. You can specify this parameter only for a new NIC. To modify this value for an existing NIC, see [UpdateNic](https://docs.outscale.com/api#updatenic).
func (o VmNicOutput) DeleteOnVmDeletion() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VmNic) *bool { return v.DeleteOnVmDeletion }).(pulumi.BoolPtrOutput)
}

// The description of the NIC, if you are creating a NIC when creating the VM.
func (o VmNicOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VmNic) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The index of the VM device for the NIC attachment (between `1` and `7`, both included). This parameter is required if you create a NIC when creating the VM.
func (o VmNicOutput) DeviceNumber() pulumi.IntOutput {
	return o.ApplyT(func(v VmNic) int { return v.DeviceNumber }).(pulumi.IntOutput)
}

// (Net only) If true, the source/destination check is enabled. If false, it is disabled.
func (o VmNicOutput) IsSourceDestChecked() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VmNic) *bool { return v.IsSourceDestChecked }).(pulumi.BoolPtrOutput)
}

// Information about the network interface card (NIC).
func (o VmNicOutput) LinkNics() VmNicLinkNicArrayOutput {
	return o.ApplyT(func(v VmNic) []VmNicLinkNic { return v.LinkNics }).(VmNicLinkNicArrayOutput)
}

// Information about the public IP associated with the NIC.
func (o VmNicOutput) LinkPublicIps() VmNicLinkPublicIpArrayOutput {
	return o.ApplyT(func(v VmNic) []VmNicLinkPublicIp { return v.LinkPublicIps }).(VmNicLinkPublicIpArrayOutput)
}

// The Media Access Control (MAC) address of the NIC.
func (o VmNicOutput) MacAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VmNic) *string { return v.MacAddress }).(pulumi.StringPtrOutput)
}

// The ID of the Net for the NIC.
func (o VmNicOutput) NetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VmNic) *string { return v.NetId }).(pulumi.StringPtrOutput)
}

// The ID of the NIC, if you are attaching an existing NIC when creating a VM.
func (o VmNicOutput) NicId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VmNic) *string { return v.NicId }).(pulumi.StringPtrOutput)
}

// The name of the private DNS.
func (o VmNicOutput) PrivateDnsName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VmNic) *string { return v.PrivateDnsName }).(pulumi.StringPtrOutput)
}

// One or more private IPs to assign to the NIC, if you create a NIC when creating a VM. Only one private IP can be the primary private IP.
func (o VmNicOutput) PrivateIps() VmNicPrivateIpArrayOutput {
	return o.ApplyT(func(v VmNic) []VmNicPrivateIp { return v.PrivateIps }).(VmNicPrivateIpArrayOutput)
}

// The number of secondary private IPs, if you create a NIC when creating a VM. This parameter cannot be specified if you specified more than one private IP in the `privateIps` parameter.
func (o VmNicOutput) SecondaryPrivateIpCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VmNic) *int { return v.SecondaryPrivateIpCount }).(pulumi.IntPtrOutput)
}

// One or more IDs of security groups for the NIC, if you create a NIC when creating a VM.
func (o VmNicOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VmNic) []string { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

// One or more security groups associated with the VM.
func (o VmNicOutput) SecurityGroups() VmNicSecurityGroupArrayOutput {
	return o.ApplyT(func(v VmNic) []VmNicSecurityGroup { return v.SecurityGroups }).(VmNicSecurityGroupArrayOutput)
}

// The state of the VM (`running` | `stopped`). If set to `stopped`, the VM is stopped regardless of the value of the `vmInitiatedShutdownBehavior` argument.
func (o VmNicOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VmNic) *string { return v.State }).(pulumi.StringPtrOutput)
}

// The ID of the Subnet for the NIC, if you create a NIC when creating a VM. This parameter is required if you create a NIC when creating the VM.
func (o VmNicOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VmNic) *string { return v.SubnetId }).(pulumi.StringPtrOutput)
}

type VmNicArrayOutput struct{ *pulumi.OutputState }

func (VmNicArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VmNic)(nil)).Elem()
}

func (o VmNicArrayOutput) ToVmNicArrayOutput() VmNicArrayOutput {
	return o
}

func (o VmNicArrayOutput) ToVmNicArrayOutputWithContext(ctx context.Context) VmNicArrayOutput {
	return o
}

func (o VmNicArrayOutput) Index(i pulumi.IntInput) VmNicOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VmNic {
		return vs[0].([]VmNic)[vs[1].(int)]
	}).(VmNicOutput)
}

type VmNicLinkNic struct {
	// If true, the NIC is deleted when the VM is terminated.
	DeleteOnVmDeletion *bool `pulumi:"deleteOnVmDeletion"`
	// The device index for the NIC attachment (between `1` and `7`, both included).
	DeviceNumber *string `pulumi:"deviceNumber"`
	// The ID of the NIC to attach.
	LinkNicId *string `pulumi:"linkNicId"`
	// The state of the VM (`running` | `stopped`). If set to `stopped`, the VM is stopped regardless of the value of the `vmInitiatedShutdownBehavior` argument.
	State *string `pulumi:"state"`
}

// VmNicLinkNicInput is an input type that accepts VmNicLinkNicArgs and VmNicLinkNicOutput values.
// You can construct a concrete instance of `VmNicLinkNicInput` via:
//
//	VmNicLinkNicArgs{...}
type VmNicLinkNicInput interface {
	pulumi.Input

	ToVmNicLinkNicOutput() VmNicLinkNicOutput
	ToVmNicLinkNicOutputWithContext(context.Context) VmNicLinkNicOutput
}

type VmNicLinkNicArgs struct {
	// If true, the NIC is deleted when the VM is terminated.
	DeleteOnVmDeletion pulumi.BoolPtrInput `pulumi:"deleteOnVmDeletion"`
	// The device index for the NIC attachment (between `1` and `7`, both included).
	DeviceNumber pulumi.StringPtrInput `pulumi:"deviceNumber"`
	// The ID of the NIC to attach.
	LinkNicId pulumi.StringPtrInput `pulumi:"linkNicId"`
	// The state of the VM (`running` | `stopped`). If set to `stopped`, the VM is stopped regardless of the value of the `vmInitiatedShutdownBehavior` argument.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (VmNicLinkNicArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VmNicLinkNic)(nil)).Elem()
}

func (i VmNicLinkNicArgs) ToVmNicLinkNicOutput() VmNicLinkNicOutput {
	return i.ToVmNicLinkNicOutputWithContext(context.Background())
}

func (i VmNicLinkNicArgs) ToVmNicLinkNicOutputWithContext(ctx context.Context) VmNicLinkNicOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmNicLinkNicOutput)
}

// VmNicLinkNicArrayInput is an input type that accepts VmNicLinkNicArray and VmNicLinkNicArrayOutput values.
// You can construct a concrete instance of `VmNicLinkNicArrayInput` via:
//
//	VmNicLinkNicArray{ VmNicLinkNicArgs{...} }
type VmNicLinkNicArrayInput interface {
	pulumi.Input

	ToVmNicLinkNicArrayOutput() VmNicLinkNicArrayOutput
	ToVmNicLinkNicArrayOutputWithContext(context.Context) VmNicLinkNicArrayOutput
}

type VmNicLinkNicArray []VmNicLinkNicInput

func (VmNicLinkNicArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VmNicLinkNic)(nil)).Elem()
}

func (i VmNicLinkNicArray) ToVmNicLinkNicArrayOutput() VmNicLinkNicArrayOutput {
	return i.ToVmNicLinkNicArrayOutputWithContext(context.Background())
}

func (i VmNicLinkNicArray) ToVmNicLinkNicArrayOutputWithContext(ctx context.Context) VmNicLinkNicArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmNicLinkNicArrayOutput)
}

type VmNicLinkNicOutput struct{ *pulumi.OutputState }

func (VmNicLinkNicOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VmNicLinkNic)(nil)).Elem()
}

func (o VmNicLinkNicOutput) ToVmNicLinkNicOutput() VmNicLinkNicOutput {
	return o
}

func (o VmNicLinkNicOutput) ToVmNicLinkNicOutputWithContext(ctx context.Context) VmNicLinkNicOutput {
	return o
}

// If true, the NIC is deleted when the VM is terminated.
func (o VmNicLinkNicOutput) DeleteOnVmDeletion() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VmNicLinkNic) *bool { return v.DeleteOnVmDeletion }).(pulumi.BoolPtrOutput)
}

// The device index for the NIC attachment (between `1` and `7`, both included).
func (o VmNicLinkNicOutput) DeviceNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VmNicLinkNic) *string { return v.DeviceNumber }).(pulumi.StringPtrOutput)
}

// The ID of the NIC to attach.
func (o VmNicLinkNicOutput) LinkNicId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VmNicLinkNic) *string { return v.LinkNicId }).(pulumi.StringPtrOutput)
}

// The state of the VM (`running` | `stopped`). If set to `stopped`, the VM is stopped regardless of the value of the `vmInitiatedShutdownBehavior` argument.
func (o VmNicLinkNicOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VmNicLinkNic) *string { return v.State }).(pulumi.StringPtrOutput)
}

type VmNicLinkNicArrayOutput struct{ *pulumi.OutputState }

func (VmNicLinkNicArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VmNicLinkNic)(nil)).Elem()
}

func (o VmNicLinkNicArrayOutput) ToVmNicLinkNicArrayOutput() VmNicLinkNicArrayOutput {
	return o
}

func (o VmNicLinkNicArrayOutput) ToVmNicLinkNicArrayOutputWithContext(ctx context.Context) VmNicLinkNicArrayOutput {
	return o
}

func (o VmNicLinkNicArrayOutput) Index(i pulumi.IntInput) VmNicLinkNicOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VmNicLinkNic {
		return vs[0].([]VmNicLinkNic)[vs[1].(int)]
	}).(VmNicLinkNicOutput)
}

type VmNicLinkPublicIp struct {
	// The name of the public DNS.
	PublicDnsName *string `pulumi:"publicDnsName"`
	// The public IP of the VM.
	PublicIp *string `pulumi:"publicIp"`
	// The account ID of the owner of the public IP.
	PublicIpAccountId *string `pulumi:"publicIpAccountId"`
}

// VmNicLinkPublicIpInput is an input type that accepts VmNicLinkPublicIpArgs and VmNicLinkPublicIpOutput values.
// You can construct a concrete instance of `VmNicLinkPublicIpInput` via:
//
//	VmNicLinkPublicIpArgs{...}
type VmNicLinkPublicIpInput interface {
	pulumi.Input

	ToVmNicLinkPublicIpOutput() VmNicLinkPublicIpOutput
	ToVmNicLinkPublicIpOutputWithContext(context.Context) VmNicLinkPublicIpOutput
}

type VmNicLinkPublicIpArgs struct {
	// The name of the public DNS.
	PublicDnsName pulumi.StringPtrInput `pulumi:"publicDnsName"`
	// The public IP of the VM.
	PublicIp pulumi.StringPtrInput `pulumi:"publicIp"`
	// The account ID of the owner of the public IP.
	PublicIpAccountId pulumi.StringPtrInput `pulumi:"publicIpAccountId"`
}

func (VmNicLinkPublicIpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VmNicLinkPublicIp)(nil)).Elem()
}

func (i VmNicLinkPublicIpArgs) ToVmNicLinkPublicIpOutput() VmNicLinkPublicIpOutput {
	return i.ToVmNicLinkPublicIpOutputWithContext(context.Background())
}

func (i VmNicLinkPublicIpArgs) ToVmNicLinkPublicIpOutputWithContext(ctx context.Context) VmNicLinkPublicIpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmNicLinkPublicIpOutput)
}

// VmNicLinkPublicIpArrayInput is an input type that accepts VmNicLinkPublicIpArray and VmNicLinkPublicIpArrayOutput values.
// You can construct a concrete instance of `VmNicLinkPublicIpArrayInput` via:
//
//	VmNicLinkPublicIpArray{ VmNicLinkPublicIpArgs{...} }
type VmNicLinkPublicIpArrayInput interface {
	pulumi.Input

	ToVmNicLinkPublicIpArrayOutput() VmNicLinkPublicIpArrayOutput
	ToVmNicLinkPublicIpArrayOutputWithContext(context.Context) VmNicLinkPublicIpArrayOutput
}

type VmNicLinkPublicIpArray []VmNicLinkPublicIpInput

func (VmNicLinkPublicIpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VmNicLinkPublicIp)(nil)).Elem()
}

func (i VmNicLinkPublicIpArray) ToVmNicLinkPublicIpArrayOutput() VmNicLinkPublicIpArrayOutput {
	return i.ToVmNicLinkPublicIpArrayOutputWithContext(context.Background())
}

func (i VmNicLinkPublicIpArray) ToVmNicLinkPublicIpArrayOutputWithContext(ctx context.Context) VmNicLinkPublicIpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmNicLinkPublicIpArrayOutput)
}

type VmNicLinkPublicIpOutput struct{ *pulumi.OutputState }

func (VmNicLinkPublicIpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VmNicLinkPublicIp)(nil)).Elem()
}

func (o VmNicLinkPublicIpOutput) ToVmNicLinkPublicIpOutput() VmNicLinkPublicIpOutput {
	return o
}

func (o VmNicLinkPublicIpOutput) ToVmNicLinkPublicIpOutputWithContext(ctx context.Context) VmNicLinkPublicIpOutput {
	return o
}

// The name of the public DNS.
func (o VmNicLinkPublicIpOutput) PublicDnsName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VmNicLinkPublicIp) *string { return v.PublicDnsName }).(pulumi.StringPtrOutput)
}

// The public IP of the VM.
func (o VmNicLinkPublicIpOutput) PublicIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VmNicLinkPublicIp) *string { return v.PublicIp }).(pulumi.StringPtrOutput)
}

// The account ID of the owner of the public IP.
func (o VmNicLinkPublicIpOutput) PublicIpAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VmNicLinkPublicIp) *string { return v.PublicIpAccountId }).(pulumi.StringPtrOutput)
}

type VmNicLinkPublicIpArrayOutput struct{ *pulumi.OutputState }

func (VmNicLinkPublicIpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VmNicLinkPublicIp)(nil)).Elem()
}

func (o VmNicLinkPublicIpArrayOutput) ToVmNicLinkPublicIpArrayOutput() VmNicLinkPublicIpArrayOutput {
	return o
}

func (o VmNicLinkPublicIpArrayOutput) ToVmNicLinkPublicIpArrayOutputWithContext(ctx context.Context) VmNicLinkPublicIpArrayOutput {
	return o
}

func (o VmNicLinkPublicIpArrayOutput) Index(i pulumi.IntInput) VmNicLinkPublicIpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VmNicLinkPublicIp {
		return vs[0].([]VmNicLinkPublicIp)[vs[1].(int)]
	}).(VmNicLinkPublicIpOutput)
}

type VmNicPrivateIp struct {
	// If true, the IP is the primary private IP of the NIC.
	IsPrimary *bool `pulumi:"isPrimary"`
	// Information about the public IP associated with the NIC.
	LinkPublicIps []VmNicPrivateIpLinkPublicIp `pulumi:"linkPublicIps"`
	// The name of the private DNS.
	PrivateDnsName *string `pulumi:"privateDnsName"`
	// The private IP of the NIC.
	PrivateIp *string `pulumi:"privateIp"`
}

// VmNicPrivateIpInput is an input type that accepts VmNicPrivateIpArgs and VmNicPrivateIpOutput values.
// You can construct a concrete instance of `VmNicPrivateIpInput` via:
//
//	VmNicPrivateIpArgs{...}
type VmNicPrivateIpInput interface {
	pulumi.Input

	ToVmNicPrivateIpOutput() VmNicPrivateIpOutput
	ToVmNicPrivateIpOutputWithContext(context.Context) VmNicPrivateIpOutput
}

type VmNicPrivateIpArgs struct {
	// If true, the IP is the primary private IP of the NIC.
	IsPrimary pulumi.BoolPtrInput `pulumi:"isPrimary"`
	// Information about the public IP associated with the NIC.
	LinkPublicIps VmNicPrivateIpLinkPublicIpArrayInput `pulumi:"linkPublicIps"`
	// The name of the private DNS.
	PrivateDnsName pulumi.StringPtrInput `pulumi:"privateDnsName"`
	// The private IP of the NIC.
	PrivateIp pulumi.StringPtrInput `pulumi:"privateIp"`
}

func (VmNicPrivateIpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VmNicPrivateIp)(nil)).Elem()
}

func (i VmNicPrivateIpArgs) ToVmNicPrivateIpOutput() VmNicPrivateIpOutput {
	return i.ToVmNicPrivateIpOutputWithContext(context.Background())
}

func (i VmNicPrivateIpArgs) ToVmNicPrivateIpOutputWithContext(ctx context.Context) VmNicPrivateIpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmNicPrivateIpOutput)
}

// VmNicPrivateIpArrayInput is an input type that accepts VmNicPrivateIpArray and VmNicPrivateIpArrayOutput values.
// You can construct a concrete instance of `VmNicPrivateIpArrayInput` via:
//
//	VmNicPrivateIpArray{ VmNicPrivateIpArgs{...} }
type VmNicPrivateIpArrayInput interface {
	pulumi.Input

	ToVmNicPrivateIpArrayOutput() VmNicPrivateIpArrayOutput
	ToVmNicPrivateIpArrayOutputWithContext(context.Context) VmNicPrivateIpArrayOutput
}

type VmNicPrivateIpArray []VmNicPrivateIpInput

func (VmNicPrivateIpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VmNicPrivateIp)(nil)).Elem()
}

func (i VmNicPrivateIpArray) ToVmNicPrivateIpArrayOutput() VmNicPrivateIpArrayOutput {
	return i.ToVmNicPrivateIpArrayOutputWithContext(context.Background())
}

func (i VmNicPrivateIpArray) ToVmNicPrivateIpArrayOutputWithContext(ctx context.Context) VmNicPrivateIpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmNicPrivateIpArrayOutput)
}

type VmNicPrivateIpOutput struct{ *pulumi.OutputState }

func (VmNicPrivateIpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VmNicPrivateIp)(nil)).Elem()
}

func (o VmNicPrivateIpOutput) ToVmNicPrivateIpOutput() VmNicPrivateIpOutput {
	return o
}

func (o VmNicPrivateIpOutput) ToVmNicPrivateIpOutputWithContext(ctx context.Context) VmNicPrivateIpOutput {
	return o
}

// If true, the IP is the primary private IP of the NIC.
func (o VmNicPrivateIpOutput) IsPrimary() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VmNicPrivateIp) *bool { return v.IsPrimary }).(pulumi.BoolPtrOutput)
}

// Information about the public IP associated with the NIC.
func (o VmNicPrivateIpOutput) LinkPublicIps() VmNicPrivateIpLinkPublicIpArrayOutput {
	return o.ApplyT(func(v VmNicPrivateIp) []VmNicPrivateIpLinkPublicIp { return v.LinkPublicIps }).(VmNicPrivateIpLinkPublicIpArrayOutput)
}

// The name of the private DNS.
func (o VmNicPrivateIpOutput) PrivateDnsName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VmNicPrivateIp) *string { return v.PrivateDnsName }).(pulumi.StringPtrOutput)
}

// The private IP of the NIC.
func (o VmNicPrivateIpOutput) PrivateIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VmNicPrivateIp) *string { return v.PrivateIp }).(pulumi.StringPtrOutput)
}

type VmNicPrivateIpArrayOutput struct{ *pulumi.OutputState }

func (VmNicPrivateIpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VmNicPrivateIp)(nil)).Elem()
}

func (o VmNicPrivateIpArrayOutput) ToVmNicPrivateIpArrayOutput() VmNicPrivateIpArrayOutput {
	return o
}

func (o VmNicPrivateIpArrayOutput) ToVmNicPrivateIpArrayOutputWithContext(ctx context.Context) VmNicPrivateIpArrayOutput {
	return o
}

func (o VmNicPrivateIpArrayOutput) Index(i pulumi.IntInput) VmNicPrivateIpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VmNicPrivateIp {
		return vs[0].([]VmNicPrivateIp)[vs[1].(int)]
	}).(VmNicPrivateIpOutput)
}

type VmNicPrivateIpLinkPublicIp struct {
	// The name of the public DNS.
	PublicDnsName *string `pulumi:"publicDnsName"`
	// The public IP of the VM.
	PublicIp *string `pulumi:"publicIp"`
	// The account ID of the owner of the public IP.
	PublicIpAccountId *string `pulumi:"publicIpAccountId"`
}

// VmNicPrivateIpLinkPublicIpInput is an input type that accepts VmNicPrivateIpLinkPublicIpArgs and VmNicPrivateIpLinkPublicIpOutput values.
// You can construct a concrete instance of `VmNicPrivateIpLinkPublicIpInput` via:
//
//	VmNicPrivateIpLinkPublicIpArgs{...}
type VmNicPrivateIpLinkPublicIpInput interface {
	pulumi.Input

	ToVmNicPrivateIpLinkPublicIpOutput() VmNicPrivateIpLinkPublicIpOutput
	ToVmNicPrivateIpLinkPublicIpOutputWithContext(context.Context) VmNicPrivateIpLinkPublicIpOutput
}

type VmNicPrivateIpLinkPublicIpArgs struct {
	// The name of the public DNS.
	PublicDnsName pulumi.StringPtrInput `pulumi:"publicDnsName"`
	// The public IP of the VM.
	PublicIp pulumi.StringPtrInput `pulumi:"publicIp"`
	// The account ID of the owner of the public IP.
	PublicIpAccountId pulumi.StringPtrInput `pulumi:"publicIpAccountId"`
}

func (VmNicPrivateIpLinkPublicIpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VmNicPrivateIpLinkPublicIp)(nil)).Elem()
}

func (i VmNicPrivateIpLinkPublicIpArgs) ToVmNicPrivateIpLinkPublicIpOutput() VmNicPrivateIpLinkPublicIpOutput {
	return i.ToVmNicPrivateIpLinkPublicIpOutputWithContext(context.Background())
}

func (i VmNicPrivateIpLinkPublicIpArgs) ToVmNicPrivateIpLinkPublicIpOutputWithContext(ctx context.Context) VmNicPrivateIpLinkPublicIpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmNicPrivateIpLinkPublicIpOutput)
}

// VmNicPrivateIpLinkPublicIpArrayInput is an input type that accepts VmNicPrivateIpLinkPublicIpArray and VmNicPrivateIpLinkPublicIpArrayOutput values.
// You can construct a concrete instance of `VmNicPrivateIpLinkPublicIpArrayInput` via:
//
//	VmNicPrivateIpLinkPublicIpArray{ VmNicPrivateIpLinkPublicIpArgs{...} }
type VmNicPrivateIpLinkPublicIpArrayInput interface {
	pulumi.Input

	ToVmNicPrivateIpLinkPublicIpArrayOutput() VmNicPrivateIpLinkPublicIpArrayOutput
	ToVmNicPrivateIpLinkPublicIpArrayOutputWithContext(context.Context) VmNicPrivateIpLinkPublicIpArrayOutput
}

type VmNicPrivateIpLinkPublicIpArray []VmNicPrivateIpLinkPublicIpInput

func (VmNicPrivateIpLinkPublicIpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VmNicPrivateIpLinkPublicIp)(nil)).Elem()
}

func (i VmNicPrivateIpLinkPublicIpArray) ToVmNicPrivateIpLinkPublicIpArrayOutput() VmNicPrivateIpLinkPublicIpArrayOutput {
	return i.ToVmNicPrivateIpLinkPublicIpArrayOutputWithContext(context.Background())
}

func (i VmNicPrivateIpLinkPublicIpArray) ToVmNicPrivateIpLinkPublicIpArrayOutputWithContext(ctx context.Context) VmNicPrivateIpLinkPublicIpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmNicPrivateIpLinkPublicIpArrayOutput)
}

type VmNicPrivateIpLinkPublicIpOutput struct{ *pulumi.OutputState }

func (VmNicPrivateIpLinkPublicIpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VmNicPrivateIpLinkPublicIp)(nil)).Elem()
}

func (o VmNicPrivateIpLinkPublicIpOutput) ToVmNicPrivateIpLinkPublicIpOutput() VmNicPrivateIpLinkPublicIpOutput {
	return o
}

func (o VmNicPrivateIpLinkPublicIpOutput) ToVmNicPrivateIpLinkPublicIpOutputWithContext(ctx context.Context) VmNicPrivateIpLinkPublicIpOutput {
	return o
}

// The name of the public DNS.
func (o VmNicPrivateIpLinkPublicIpOutput) PublicDnsName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VmNicPrivateIpLinkPublicIp) *string { return v.PublicDnsName }).(pulumi.StringPtrOutput)
}

// The public IP of the VM.
func (o VmNicPrivateIpLinkPublicIpOutput) PublicIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VmNicPrivateIpLinkPublicIp) *string { return v.PublicIp }).(pulumi.StringPtrOutput)
}

// The account ID of the owner of the public IP.
func (o VmNicPrivateIpLinkPublicIpOutput) PublicIpAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VmNicPrivateIpLinkPublicIp) *string { return v.PublicIpAccountId }).(pulumi.StringPtrOutput)
}

type VmNicPrivateIpLinkPublicIpArrayOutput struct{ *pulumi.OutputState }

func (VmNicPrivateIpLinkPublicIpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VmNicPrivateIpLinkPublicIp)(nil)).Elem()
}

func (o VmNicPrivateIpLinkPublicIpArrayOutput) ToVmNicPrivateIpLinkPublicIpArrayOutput() VmNicPrivateIpLinkPublicIpArrayOutput {
	return o
}

func (o VmNicPrivateIpLinkPublicIpArrayOutput) ToVmNicPrivateIpLinkPublicIpArrayOutputWithContext(ctx context.Context) VmNicPrivateIpLinkPublicIpArrayOutput {
	return o
}

func (o VmNicPrivateIpLinkPublicIpArrayOutput) Index(i pulumi.IntInput) VmNicPrivateIpLinkPublicIpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VmNicPrivateIpLinkPublicIp {
		return vs[0].([]VmNicPrivateIpLinkPublicIp)[vs[1].(int)]
	}).(VmNicPrivateIpLinkPublicIpOutput)
}

type VmNicSecurityGroup struct {
	// The ID of the security group.
	SecurityGroupId *string `pulumi:"securityGroupId"`
	// The name of the security group.
	SecurityGroupName *string `pulumi:"securityGroupName"`
}

// VmNicSecurityGroupInput is an input type that accepts VmNicSecurityGroupArgs and VmNicSecurityGroupOutput values.
// You can construct a concrete instance of `VmNicSecurityGroupInput` via:
//
//	VmNicSecurityGroupArgs{...}
type VmNicSecurityGroupInput interface {
	pulumi.Input

	ToVmNicSecurityGroupOutput() VmNicSecurityGroupOutput
	ToVmNicSecurityGroupOutputWithContext(context.Context) VmNicSecurityGroupOutput
}

type VmNicSecurityGroupArgs struct {
	// The ID of the security group.
	SecurityGroupId pulumi.StringPtrInput `pulumi:"securityGroupId"`
	// The name of the security group.
	SecurityGroupName pulumi.StringPtrInput `pulumi:"securityGroupName"`
}

func (VmNicSecurityGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VmNicSecurityGroup)(nil)).Elem()
}

func (i VmNicSecurityGroupArgs) ToVmNicSecurityGroupOutput() VmNicSecurityGroupOutput {
	return i.ToVmNicSecurityGroupOutputWithContext(context.Background())
}

func (i VmNicSecurityGroupArgs) ToVmNicSecurityGroupOutputWithContext(ctx context.Context) VmNicSecurityGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmNicSecurityGroupOutput)
}

// VmNicSecurityGroupArrayInput is an input type that accepts VmNicSecurityGroupArray and VmNicSecurityGroupArrayOutput values.
// You can construct a concrete instance of `VmNicSecurityGroupArrayInput` via:
//
//	VmNicSecurityGroupArray{ VmNicSecurityGroupArgs{...} }
type VmNicSecurityGroupArrayInput interface {
	pulumi.Input

	ToVmNicSecurityGroupArrayOutput() VmNicSecurityGroupArrayOutput
	ToVmNicSecurityGroupArrayOutputWithContext(context.Context) VmNicSecurityGroupArrayOutput
}

type VmNicSecurityGroupArray []VmNicSecurityGroupInput

func (VmNicSecurityGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VmNicSecurityGroup)(nil)).Elem()
}

func (i VmNicSecurityGroupArray) ToVmNicSecurityGroupArrayOutput() VmNicSecurityGroupArrayOutput {
	return i.ToVmNicSecurityGroupArrayOutputWithContext(context.Background())
}

func (i VmNicSecurityGroupArray) ToVmNicSecurityGroupArrayOutputWithContext(ctx context.Context) VmNicSecurityGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmNicSecurityGroupArrayOutput)
}

type VmNicSecurityGroupOutput struct{ *pulumi.OutputState }

func (VmNicSecurityGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VmNicSecurityGroup)(nil)).Elem()
}

func (o VmNicSecurityGroupOutput) ToVmNicSecurityGroupOutput() VmNicSecurityGroupOutput {
	return o
}

func (o VmNicSecurityGroupOutput) ToVmNicSecurityGroupOutputWithContext(ctx context.Context) VmNicSecurityGroupOutput {
	return o
}

// The ID of the security group.
func (o VmNicSecurityGroupOutput) SecurityGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VmNicSecurityGroup) *string { return v.SecurityGroupId }).(pulumi.StringPtrOutput)
}

// The name of the security group.
func (o VmNicSecurityGroupOutput) SecurityGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VmNicSecurityGroup) *string { return v.SecurityGroupName }).(pulumi.StringPtrOutput)
}

type VmNicSecurityGroupArrayOutput struct{ *pulumi.OutputState }

func (VmNicSecurityGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VmNicSecurityGroup)(nil)).Elem()
}

func (o VmNicSecurityGroupArrayOutput) ToVmNicSecurityGroupArrayOutput() VmNicSecurityGroupArrayOutput {
	return o
}

func (o VmNicSecurityGroupArrayOutput) ToVmNicSecurityGroupArrayOutputWithContext(ctx context.Context) VmNicSecurityGroupArrayOutput {
	return o
}

func (o VmNicSecurityGroupArrayOutput) Index(i pulumi.IntInput) VmNicSecurityGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VmNicSecurityGroup {
		return vs[0].([]VmNicSecurityGroup)[vs[1].(int)]
	}).(VmNicSecurityGroupOutput)
}

type VmPrimaryNic struct {
	// The account ID of the owner of the NIC.
	AccountId *string `pulumi:"accountId"`
	// If true, the NIC is deleted when the VM is terminated. You can specify this parameter only for a new NIC. To modify this value for an existing NIC, see [UpdateNic](https://docs.outscale.com/api#updatenic).
	DeleteOnVmDeletion *bool `pulumi:"deleteOnVmDeletion"`
	// The description of the NIC, if you are creating a NIC when creating the VM.
	Description *string `pulumi:"description"`
	// The index of the VM device for the NIC attachment (must be `0`). This parameter is required if you create a NIC when creating the VM.
	DeviceNumber int `pulumi:"deviceNumber"`
	// (Net only) If true, the source/destination check is enabled. If false, it is disabled.
	IsSourceDestChecked *bool `pulumi:"isSourceDestChecked"`
	// Information about the network interface card (NIC).
	LinkNics []VmPrimaryNicLinkNic `pulumi:"linkNics"`
	// Information about the public IP associated with the NIC.
	LinkPublicIps []VmPrimaryNicLinkPublicIp `pulumi:"linkPublicIps"`
	// The Media Access Control (MAC) address of the NIC.
	MacAddress *string `pulumi:"macAddress"`
	// The ID of the Net for the NIC.
	NetId *string `pulumi:"netId"`
	// The ID of the NIC, if you are attaching an existing NIC when creating a VM.
	NicId *string `pulumi:"nicId"`
	// The name of the private DNS.
	PrivateDnsName *string `pulumi:"privateDnsName"`
	// One or more private IPs to assign to the NIC, if you create a NIC when creating a VM. Only one private IP can be the primary private IP.
	PrivateIps []VmPrimaryNicPrivateIp `pulumi:"privateIps"`
	// The number of secondary private IPs, if you create a NIC when creating a VM. This parameter cannot be specified if you specified more than one private IP in the `privateIps` parameter.
	SecondaryPrivateIpCount *int `pulumi:"secondaryPrivateIpCount"`
	// One or more IDs of security groups for the NIC, if you create a NIC when creating a VM.
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// One or more security groups associated with the VM.
	SecurityGroups []VmPrimaryNicSecurityGroup `pulumi:"securityGroups"`
	// The state of the VM (`running` | `stopped`). If set to `stopped`, the VM is stopped regardless of the value of the `vmInitiatedShutdownBehavior` argument.
	State *string `pulumi:"state"`
	// The ID of the Subnet for the NIC, if you create a NIC when creating a VM. This parameter is required if you create a NIC when creating the VM.
	SubnetId *string `pulumi:"subnetId"`
}

// VmPrimaryNicInput is an input type that accepts VmPrimaryNicArgs and VmPrimaryNicOutput values.
// You can construct a concrete instance of `VmPrimaryNicInput` via:
//
//	VmPrimaryNicArgs{...}
type VmPrimaryNicInput interface {
	pulumi.Input

	ToVmPrimaryNicOutput() VmPrimaryNicOutput
	ToVmPrimaryNicOutputWithContext(context.Context) VmPrimaryNicOutput
}

type VmPrimaryNicArgs struct {
	// The account ID of the owner of the NIC.
	AccountId pulumi.StringPtrInput `pulumi:"accountId"`
	// If true, the NIC is deleted when the VM is terminated. You can specify this parameter only for a new NIC. To modify this value for an existing NIC, see [UpdateNic](https://docs.outscale.com/api#updatenic).
	DeleteOnVmDeletion pulumi.BoolPtrInput `pulumi:"deleteOnVmDeletion"`
	// The description of the NIC, if you are creating a NIC when creating the VM.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The index of the VM device for the NIC attachment (must be `0`). This parameter is required if you create a NIC when creating the VM.
	DeviceNumber pulumi.IntInput `pulumi:"deviceNumber"`
	// (Net only) If true, the source/destination check is enabled. If false, it is disabled.
	IsSourceDestChecked pulumi.BoolPtrInput `pulumi:"isSourceDestChecked"`
	// Information about the network interface card (NIC).
	LinkNics VmPrimaryNicLinkNicArrayInput `pulumi:"linkNics"`
	// Information about the public IP associated with the NIC.
	LinkPublicIps VmPrimaryNicLinkPublicIpArrayInput `pulumi:"linkPublicIps"`
	// The Media Access Control (MAC) address of the NIC.
	MacAddress pulumi.StringPtrInput `pulumi:"macAddress"`
	// The ID of the Net for the NIC.
	NetId pulumi.StringPtrInput `pulumi:"netId"`
	// The ID of the NIC, if you are attaching an existing NIC when creating a VM.
	NicId pulumi.StringPtrInput `pulumi:"nicId"`
	// The name of the private DNS.
	PrivateDnsName pulumi.StringPtrInput `pulumi:"privateDnsName"`
	// One or more private IPs to assign to the NIC, if you create a NIC when creating a VM. Only one private IP can be the primary private IP.
	PrivateIps VmPrimaryNicPrivateIpArrayInput `pulumi:"privateIps"`
	// The number of secondary private IPs, if you create a NIC when creating a VM. This parameter cannot be specified if you specified more than one private IP in the `privateIps` parameter.
	SecondaryPrivateIpCount pulumi.IntPtrInput `pulumi:"secondaryPrivateIpCount"`
	// One or more IDs of security groups for the NIC, if you create a NIC when creating a VM.
	SecurityGroupIds pulumi.StringArrayInput `pulumi:"securityGroupIds"`
	// One or more security groups associated with the VM.
	SecurityGroups VmPrimaryNicSecurityGroupArrayInput `pulumi:"securityGroups"`
	// The state of the VM (`running` | `stopped`). If set to `stopped`, the VM is stopped regardless of the value of the `vmInitiatedShutdownBehavior` argument.
	State pulumi.StringPtrInput `pulumi:"state"`
	// The ID of the Subnet for the NIC, if you create a NIC when creating a VM. This parameter is required if you create a NIC when creating the VM.
	SubnetId pulumi.StringPtrInput `pulumi:"subnetId"`
}

func (VmPrimaryNicArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VmPrimaryNic)(nil)).Elem()
}

func (i VmPrimaryNicArgs) ToVmPrimaryNicOutput() VmPrimaryNicOutput {
	return i.ToVmPrimaryNicOutputWithContext(context.Background())
}

func (i VmPrimaryNicArgs) ToVmPrimaryNicOutputWithContext(ctx context.Context) VmPrimaryNicOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmPrimaryNicOutput)
}

// VmPrimaryNicArrayInput is an input type that accepts VmPrimaryNicArray and VmPrimaryNicArrayOutput values.
// You can construct a concrete instance of `VmPrimaryNicArrayInput` via:
//
//	VmPrimaryNicArray{ VmPrimaryNicArgs{...} }
type VmPrimaryNicArrayInput interface {
	pulumi.Input

	ToVmPrimaryNicArrayOutput() VmPrimaryNicArrayOutput
	ToVmPrimaryNicArrayOutputWithContext(context.Context) VmPrimaryNicArrayOutput
}

type VmPrimaryNicArray []VmPrimaryNicInput

func (VmPrimaryNicArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VmPrimaryNic)(nil)).Elem()
}

func (i VmPrimaryNicArray) ToVmPrimaryNicArrayOutput() VmPrimaryNicArrayOutput {
	return i.ToVmPrimaryNicArrayOutputWithContext(context.Background())
}

func (i VmPrimaryNicArray) ToVmPrimaryNicArrayOutputWithContext(ctx context.Context) VmPrimaryNicArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmPrimaryNicArrayOutput)
}

type VmPrimaryNicOutput struct{ *pulumi.OutputState }

func (VmPrimaryNicOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VmPrimaryNic)(nil)).Elem()
}

func (o VmPrimaryNicOutput) ToVmPrimaryNicOutput() VmPrimaryNicOutput {
	return o
}

func (o VmPrimaryNicOutput) ToVmPrimaryNicOutputWithContext(ctx context.Context) VmPrimaryNicOutput {
	return o
}

// The account ID of the owner of the NIC.
func (o VmPrimaryNicOutput) AccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VmPrimaryNic) *string { return v.AccountId }).(pulumi.StringPtrOutput)
}

// If true, the NIC is deleted when the VM is terminated. You can specify this parameter only for a new NIC. To modify this value for an existing NIC, see [UpdateNic](https://docs.outscale.com/api#updatenic).
func (o VmPrimaryNicOutput) DeleteOnVmDeletion() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VmPrimaryNic) *bool { return v.DeleteOnVmDeletion }).(pulumi.BoolPtrOutput)
}

// The description of the NIC, if you are creating a NIC when creating the VM.
func (o VmPrimaryNicOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VmPrimaryNic) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The index of the VM device for the NIC attachment (must be `0`). This parameter is required if you create a NIC when creating the VM.
func (o VmPrimaryNicOutput) DeviceNumber() pulumi.IntOutput {
	return o.ApplyT(func(v VmPrimaryNic) int { return v.DeviceNumber }).(pulumi.IntOutput)
}

// (Net only) If true, the source/destination check is enabled. If false, it is disabled.
func (o VmPrimaryNicOutput) IsSourceDestChecked() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VmPrimaryNic) *bool { return v.IsSourceDestChecked }).(pulumi.BoolPtrOutput)
}

// Information about the network interface card (NIC).
func (o VmPrimaryNicOutput) LinkNics() VmPrimaryNicLinkNicArrayOutput {
	return o.ApplyT(func(v VmPrimaryNic) []VmPrimaryNicLinkNic { return v.LinkNics }).(VmPrimaryNicLinkNicArrayOutput)
}

// Information about the public IP associated with the NIC.
func (o VmPrimaryNicOutput) LinkPublicIps() VmPrimaryNicLinkPublicIpArrayOutput {
	return o.ApplyT(func(v VmPrimaryNic) []VmPrimaryNicLinkPublicIp { return v.LinkPublicIps }).(VmPrimaryNicLinkPublicIpArrayOutput)
}

// The Media Access Control (MAC) address of the NIC.
func (o VmPrimaryNicOutput) MacAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VmPrimaryNic) *string { return v.MacAddress }).(pulumi.StringPtrOutput)
}

// The ID of the Net for the NIC.
func (o VmPrimaryNicOutput) NetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VmPrimaryNic) *string { return v.NetId }).(pulumi.StringPtrOutput)
}

// The ID of the NIC, if you are attaching an existing NIC when creating a VM.
func (o VmPrimaryNicOutput) NicId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VmPrimaryNic) *string { return v.NicId }).(pulumi.StringPtrOutput)
}

// The name of the private DNS.
func (o VmPrimaryNicOutput) PrivateDnsName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VmPrimaryNic) *string { return v.PrivateDnsName }).(pulumi.StringPtrOutput)
}

// One or more private IPs to assign to the NIC, if you create a NIC when creating a VM. Only one private IP can be the primary private IP.
func (o VmPrimaryNicOutput) PrivateIps() VmPrimaryNicPrivateIpArrayOutput {
	return o.ApplyT(func(v VmPrimaryNic) []VmPrimaryNicPrivateIp { return v.PrivateIps }).(VmPrimaryNicPrivateIpArrayOutput)
}

// The number of secondary private IPs, if you create a NIC when creating a VM. This parameter cannot be specified if you specified more than one private IP in the `privateIps` parameter.
func (o VmPrimaryNicOutput) SecondaryPrivateIpCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VmPrimaryNic) *int { return v.SecondaryPrivateIpCount }).(pulumi.IntPtrOutput)
}

// One or more IDs of security groups for the NIC, if you create a NIC when creating a VM.
func (o VmPrimaryNicOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VmPrimaryNic) []string { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

// One or more security groups associated with the VM.
func (o VmPrimaryNicOutput) SecurityGroups() VmPrimaryNicSecurityGroupArrayOutput {
	return o.ApplyT(func(v VmPrimaryNic) []VmPrimaryNicSecurityGroup { return v.SecurityGroups }).(VmPrimaryNicSecurityGroupArrayOutput)
}

// The state of the VM (`running` | `stopped`). If set to `stopped`, the VM is stopped regardless of the value of the `vmInitiatedShutdownBehavior` argument.
func (o VmPrimaryNicOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VmPrimaryNic) *string { return v.State }).(pulumi.StringPtrOutput)
}

// The ID of the Subnet for the NIC, if you create a NIC when creating a VM. This parameter is required if you create a NIC when creating the VM.
func (o VmPrimaryNicOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VmPrimaryNic) *string { return v.SubnetId }).(pulumi.StringPtrOutput)
}

type VmPrimaryNicArrayOutput struct{ *pulumi.OutputState }

func (VmPrimaryNicArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VmPrimaryNic)(nil)).Elem()
}

func (o VmPrimaryNicArrayOutput) ToVmPrimaryNicArrayOutput() VmPrimaryNicArrayOutput {
	return o
}

func (o VmPrimaryNicArrayOutput) ToVmPrimaryNicArrayOutputWithContext(ctx context.Context) VmPrimaryNicArrayOutput {
	return o
}

func (o VmPrimaryNicArrayOutput) Index(i pulumi.IntInput) VmPrimaryNicOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VmPrimaryNic {
		return vs[0].([]VmPrimaryNic)[vs[1].(int)]
	}).(VmPrimaryNicOutput)
}

type VmPrimaryNicLinkNic struct {
	// If true, the NIC is deleted when the VM is terminated.
	DeleteOnVmDeletion *bool `pulumi:"deleteOnVmDeletion"`
	// The device index for the NIC attachment (between `1` and `7`, both included).
	DeviceNumber *string `pulumi:"deviceNumber"`
	// The ID of the NIC to attach.
	LinkNicId *string `pulumi:"linkNicId"`
	// The state of the VM (`running` | `stopped`). If set to `stopped`, the VM is stopped regardless of the value of the `vmInitiatedShutdownBehavior` argument.
	State *string `pulumi:"state"`
}

// VmPrimaryNicLinkNicInput is an input type that accepts VmPrimaryNicLinkNicArgs and VmPrimaryNicLinkNicOutput values.
// You can construct a concrete instance of `VmPrimaryNicLinkNicInput` via:
//
//	VmPrimaryNicLinkNicArgs{...}
type VmPrimaryNicLinkNicInput interface {
	pulumi.Input

	ToVmPrimaryNicLinkNicOutput() VmPrimaryNicLinkNicOutput
	ToVmPrimaryNicLinkNicOutputWithContext(context.Context) VmPrimaryNicLinkNicOutput
}

type VmPrimaryNicLinkNicArgs struct {
	// If true, the NIC is deleted when the VM is terminated.
	DeleteOnVmDeletion pulumi.BoolPtrInput `pulumi:"deleteOnVmDeletion"`
	// The device index for the NIC attachment (between `1` and `7`, both included).
	DeviceNumber pulumi.StringPtrInput `pulumi:"deviceNumber"`
	// The ID of the NIC to attach.
	LinkNicId pulumi.StringPtrInput `pulumi:"linkNicId"`
	// The state of the VM (`running` | `stopped`). If set to `stopped`, the VM is stopped regardless of the value of the `vmInitiatedShutdownBehavior` argument.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (VmPrimaryNicLinkNicArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VmPrimaryNicLinkNic)(nil)).Elem()
}

func (i VmPrimaryNicLinkNicArgs) ToVmPrimaryNicLinkNicOutput() VmPrimaryNicLinkNicOutput {
	return i.ToVmPrimaryNicLinkNicOutputWithContext(context.Background())
}

func (i VmPrimaryNicLinkNicArgs) ToVmPrimaryNicLinkNicOutputWithContext(ctx context.Context) VmPrimaryNicLinkNicOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmPrimaryNicLinkNicOutput)
}

// VmPrimaryNicLinkNicArrayInput is an input type that accepts VmPrimaryNicLinkNicArray and VmPrimaryNicLinkNicArrayOutput values.
// You can construct a concrete instance of `VmPrimaryNicLinkNicArrayInput` via:
//
//	VmPrimaryNicLinkNicArray{ VmPrimaryNicLinkNicArgs{...} }
type VmPrimaryNicLinkNicArrayInput interface {
	pulumi.Input

	ToVmPrimaryNicLinkNicArrayOutput() VmPrimaryNicLinkNicArrayOutput
	ToVmPrimaryNicLinkNicArrayOutputWithContext(context.Context) VmPrimaryNicLinkNicArrayOutput
}

type VmPrimaryNicLinkNicArray []VmPrimaryNicLinkNicInput

func (VmPrimaryNicLinkNicArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VmPrimaryNicLinkNic)(nil)).Elem()
}

func (i VmPrimaryNicLinkNicArray) ToVmPrimaryNicLinkNicArrayOutput() VmPrimaryNicLinkNicArrayOutput {
	return i.ToVmPrimaryNicLinkNicArrayOutputWithContext(context.Background())
}

func (i VmPrimaryNicLinkNicArray) ToVmPrimaryNicLinkNicArrayOutputWithContext(ctx context.Context) VmPrimaryNicLinkNicArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmPrimaryNicLinkNicArrayOutput)
}

type VmPrimaryNicLinkNicOutput struct{ *pulumi.OutputState }

func (VmPrimaryNicLinkNicOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VmPrimaryNicLinkNic)(nil)).Elem()
}

func (o VmPrimaryNicLinkNicOutput) ToVmPrimaryNicLinkNicOutput() VmPrimaryNicLinkNicOutput {
	return o
}

func (o VmPrimaryNicLinkNicOutput) ToVmPrimaryNicLinkNicOutputWithContext(ctx context.Context) VmPrimaryNicLinkNicOutput {
	return o
}

// If true, the NIC is deleted when the VM is terminated.
func (o VmPrimaryNicLinkNicOutput) DeleteOnVmDeletion() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VmPrimaryNicLinkNic) *bool { return v.DeleteOnVmDeletion }).(pulumi.BoolPtrOutput)
}

// The device index for the NIC attachment (between `1` and `7`, both included).
func (o VmPrimaryNicLinkNicOutput) DeviceNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VmPrimaryNicLinkNic) *string { return v.DeviceNumber }).(pulumi.StringPtrOutput)
}

// The ID of the NIC to attach.
func (o VmPrimaryNicLinkNicOutput) LinkNicId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VmPrimaryNicLinkNic) *string { return v.LinkNicId }).(pulumi.StringPtrOutput)
}

// The state of the VM (`running` | `stopped`). If set to `stopped`, the VM is stopped regardless of the value of the `vmInitiatedShutdownBehavior` argument.
func (o VmPrimaryNicLinkNicOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VmPrimaryNicLinkNic) *string { return v.State }).(pulumi.StringPtrOutput)
}

type VmPrimaryNicLinkNicArrayOutput struct{ *pulumi.OutputState }

func (VmPrimaryNicLinkNicArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VmPrimaryNicLinkNic)(nil)).Elem()
}

func (o VmPrimaryNicLinkNicArrayOutput) ToVmPrimaryNicLinkNicArrayOutput() VmPrimaryNicLinkNicArrayOutput {
	return o
}

func (o VmPrimaryNicLinkNicArrayOutput) ToVmPrimaryNicLinkNicArrayOutputWithContext(ctx context.Context) VmPrimaryNicLinkNicArrayOutput {
	return o
}

func (o VmPrimaryNicLinkNicArrayOutput) Index(i pulumi.IntInput) VmPrimaryNicLinkNicOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VmPrimaryNicLinkNic {
		return vs[0].([]VmPrimaryNicLinkNic)[vs[1].(int)]
	}).(VmPrimaryNicLinkNicOutput)
}

type VmPrimaryNicLinkPublicIp struct {
	// The name of the public DNS.
	PublicDnsName *string `pulumi:"publicDnsName"`
	// The public IP of the VM.
	PublicIp *string `pulumi:"publicIp"`
	// The account ID of the owner of the public IP.
	PublicIpAccountId *string `pulumi:"publicIpAccountId"`
}

// VmPrimaryNicLinkPublicIpInput is an input type that accepts VmPrimaryNicLinkPublicIpArgs and VmPrimaryNicLinkPublicIpOutput values.
// You can construct a concrete instance of `VmPrimaryNicLinkPublicIpInput` via:
//
//	VmPrimaryNicLinkPublicIpArgs{...}
type VmPrimaryNicLinkPublicIpInput interface {
	pulumi.Input

	ToVmPrimaryNicLinkPublicIpOutput() VmPrimaryNicLinkPublicIpOutput
	ToVmPrimaryNicLinkPublicIpOutputWithContext(context.Context) VmPrimaryNicLinkPublicIpOutput
}

type VmPrimaryNicLinkPublicIpArgs struct {
	// The name of the public DNS.
	PublicDnsName pulumi.StringPtrInput `pulumi:"publicDnsName"`
	// The public IP of the VM.
	PublicIp pulumi.StringPtrInput `pulumi:"publicIp"`
	// The account ID of the owner of the public IP.
	PublicIpAccountId pulumi.StringPtrInput `pulumi:"publicIpAccountId"`
}

func (VmPrimaryNicLinkPublicIpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VmPrimaryNicLinkPublicIp)(nil)).Elem()
}

func (i VmPrimaryNicLinkPublicIpArgs) ToVmPrimaryNicLinkPublicIpOutput() VmPrimaryNicLinkPublicIpOutput {
	return i.ToVmPrimaryNicLinkPublicIpOutputWithContext(context.Background())
}

func (i VmPrimaryNicLinkPublicIpArgs) ToVmPrimaryNicLinkPublicIpOutputWithContext(ctx context.Context) VmPrimaryNicLinkPublicIpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmPrimaryNicLinkPublicIpOutput)
}

// VmPrimaryNicLinkPublicIpArrayInput is an input type that accepts VmPrimaryNicLinkPublicIpArray and VmPrimaryNicLinkPublicIpArrayOutput values.
// You can construct a concrete instance of `VmPrimaryNicLinkPublicIpArrayInput` via:
//
//	VmPrimaryNicLinkPublicIpArray{ VmPrimaryNicLinkPublicIpArgs{...} }
type VmPrimaryNicLinkPublicIpArrayInput interface {
	pulumi.Input

	ToVmPrimaryNicLinkPublicIpArrayOutput() VmPrimaryNicLinkPublicIpArrayOutput
	ToVmPrimaryNicLinkPublicIpArrayOutputWithContext(context.Context) VmPrimaryNicLinkPublicIpArrayOutput
}

type VmPrimaryNicLinkPublicIpArray []VmPrimaryNicLinkPublicIpInput

func (VmPrimaryNicLinkPublicIpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VmPrimaryNicLinkPublicIp)(nil)).Elem()
}

func (i VmPrimaryNicLinkPublicIpArray) ToVmPrimaryNicLinkPublicIpArrayOutput() VmPrimaryNicLinkPublicIpArrayOutput {
	return i.ToVmPrimaryNicLinkPublicIpArrayOutputWithContext(context.Background())
}

func (i VmPrimaryNicLinkPublicIpArray) ToVmPrimaryNicLinkPublicIpArrayOutputWithContext(ctx context.Context) VmPrimaryNicLinkPublicIpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmPrimaryNicLinkPublicIpArrayOutput)
}

type VmPrimaryNicLinkPublicIpOutput struct{ *pulumi.OutputState }

func (VmPrimaryNicLinkPublicIpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VmPrimaryNicLinkPublicIp)(nil)).Elem()
}

func (o VmPrimaryNicLinkPublicIpOutput) ToVmPrimaryNicLinkPublicIpOutput() VmPrimaryNicLinkPublicIpOutput {
	return o
}

func (o VmPrimaryNicLinkPublicIpOutput) ToVmPrimaryNicLinkPublicIpOutputWithContext(ctx context.Context) VmPrimaryNicLinkPublicIpOutput {
	return o
}

// The name of the public DNS.
func (o VmPrimaryNicLinkPublicIpOutput) PublicDnsName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VmPrimaryNicLinkPublicIp) *string { return v.PublicDnsName }).(pulumi.StringPtrOutput)
}

// The public IP of the VM.
func (o VmPrimaryNicLinkPublicIpOutput) PublicIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VmPrimaryNicLinkPublicIp) *string { return v.PublicIp }).(pulumi.StringPtrOutput)
}

// The account ID of the owner of the public IP.
func (o VmPrimaryNicLinkPublicIpOutput) PublicIpAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VmPrimaryNicLinkPublicIp) *string { return v.PublicIpAccountId }).(pulumi.StringPtrOutput)
}

type VmPrimaryNicLinkPublicIpArrayOutput struct{ *pulumi.OutputState }

func (VmPrimaryNicLinkPublicIpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VmPrimaryNicLinkPublicIp)(nil)).Elem()
}

func (o VmPrimaryNicLinkPublicIpArrayOutput) ToVmPrimaryNicLinkPublicIpArrayOutput() VmPrimaryNicLinkPublicIpArrayOutput {
	return o
}

func (o VmPrimaryNicLinkPublicIpArrayOutput) ToVmPrimaryNicLinkPublicIpArrayOutputWithContext(ctx context.Context) VmPrimaryNicLinkPublicIpArrayOutput {
	return o
}

func (o VmPrimaryNicLinkPublicIpArrayOutput) Index(i pulumi.IntInput) VmPrimaryNicLinkPublicIpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VmPrimaryNicLinkPublicIp {
		return vs[0].([]VmPrimaryNicLinkPublicIp)[vs[1].(int)]
	}).(VmPrimaryNicLinkPublicIpOutput)
}

type VmPrimaryNicPrivateIp struct {
	// If true, the IP is the primary private IP of the NIC.
	IsPrimary *bool `pulumi:"isPrimary"`
	// Information about the public IP associated with the NIC.
	LinkPublicIps []VmPrimaryNicPrivateIpLinkPublicIp `pulumi:"linkPublicIps"`
	// The name of the private DNS.
	PrivateDnsName *string `pulumi:"privateDnsName"`
	// The private IP of the NIC.
	PrivateIp *string `pulumi:"privateIp"`
}

// VmPrimaryNicPrivateIpInput is an input type that accepts VmPrimaryNicPrivateIpArgs and VmPrimaryNicPrivateIpOutput values.
// You can construct a concrete instance of `VmPrimaryNicPrivateIpInput` via:
//
//	VmPrimaryNicPrivateIpArgs{...}
type VmPrimaryNicPrivateIpInput interface {
	pulumi.Input

	ToVmPrimaryNicPrivateIpOutput() VmPrimaryNicPrivateIpOutput
	ToVmPrimaryNicPrivateIpOutputWithContext(context.Context) VmPrimaryNicPrivateIpOutput
}

type VmPrimaryNicPrivateIpArgs struct {
	// If true, the IP is the primary private IP of the NIC.
	IsPrimary pulumi.BoolPtrInput `pulumi:"isPrimary"`
	// Information about the public IP associated with the NIC.
	LinkPublicIps VmPrimaryNicPrivateIpLinkPublicIpArrayInput `pulumi:"linkPublicIps"`
	// The name of the private DNS.
	PrivateDnsName pulumi.StringPtrInput `pulumi:"privateDnsName"`
	// The private IP of the NIC.
	PrivateIp pulumi.StringPtrInput `pulumi:"privateIp"`
}

func (VmPrimaryNicPrivateIpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VmPrimaryNicPrivateIp)(nil)).Elem()
}

func (i VmPrimaryNicPrivateIpArgs) ToVmPrimaryNicPrivateIpOutput() VmPrimaryNicPrivateIpOutput {
	return i.ToVmPrimaryNicPrivateIpOutputWithContext(context.Background())
}

func (i VmPrimaryNicPrivateIpArgs) ToVmPrimaryNicPrivateIpOutputWithContext(ctx context.Context) VmPrimaryNicPrivateIpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmPrimaryNicPrivateIpOutput)
}

// VmPrimaryNicPrivateIpArrayInput is an input type that accepts VmPrimaryNicPrivateIpArray and VmPrimaryNicPrivateIpArrayOutput values.
// You can construct a concrete instance of `VmPrimaryNicPrivateIpArrayInput` via:
//
//	VmPrimaryNicPrivateIpArray{ VmPrimaryNicPrivateIpArgs{...} }
type VmPrimaryNicPrivateIpArrayInput interface {
	pulumi.Input

	ToVmPrimaryNicPrivateIpArrayOutput() VmPrimaryNicPrivateIpArrayOutput
	ToVmPrimaryNicPrivateIpArrayOutputWithContext(context.Context) VmPrimaryNicPrivateIpArrayOutput
}

type VmPrimaryNicPrivateIpArray []VmPrimaryNicPrivateIpInput

func (VmPrimaryNicPrivateIpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VmPrimaryNicPrivateIp)(nil)).Elem()
}

func (i VmPrimaryNicPrivateIpArray) ToVmPrimaryNicPrivateIpArrayOutput() VmPrimaryNicPrivateIpArrayOutput {
	return i.ToVmPrimaryNicPrivateIpArrayOutputWithContext(context.Background())
}

func (i VmPrimaryNicPrivateIpArray) ToVmPrimaryNicPrivateIpArrayOutputWithContext(ctx context.Context) VmPrimaryNicPrivateIpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmPrimaryNicPrivateIpArrayOutput)
}

type VmPrimaryNicPrivateIpOutput struct{ *pulumi.OutputState }

func (VmPrimaryNicPrivateIpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VmPrimaryNicPrivateIp)(nil)).Elem()
}

func (o VmPrimaryNicPrivateIpOutput) ToVmPrimaryNicPrivateIpOutput() VmPrimaryNicPrivateIpOutput {
	return o
}

func (o VmPrimaryNicPrivateIpOutput) ToVmPrimaryNicPrivateIpOutputWithContext(ctx context.Context) VmPrimaryNicPrivateIpOutput {
	return o
}

// If true, the IP is the primary private IP of the NIC.
func (o VmPrimaryNicPrivateIpOutput) IsPrimary() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VmPrimaryNicPrivateIp) *bool { return v.IsPrimary }).(pulumi.BoolPtrOutput)
}

// Information about the public IP associated with the NIC.
func (o VmPrimaryNicPrivateIpOutput) LinkPublicIps() VmPrimaryNicPrivateIpLinkPublicIpArrayOutput {
	return o.ApplyT(func(v VmPrimaryNicPrivateIp) []VmPrimaryNicPrivateIpLinkPublicIp { return v.LinkPublicIps }).(VmPrimaryNicPrivateIpLinkPublicIpArrayOutput)
}

// The name of the private DNS.
func (o VmPrimaryNicPrivateIpOutput) PrivateDnsName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VmPrimaryNicPrivateIp) *string { return v.PrivateDnsName }).(pulumi.StringPtrOutput)
}

// The private IP of the NIC.
func (o VmPrimaryNicPrivateIpOutput) PrivateIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VmPrimaryNicPrivateIp) *string { return v.PrivateIp }).(pulumi.StringPtrOutput)
}

type VmPrimaryNicPrivateIpArrayOutput struct{ *pulumi.OutputState }

func (VmPrimaryNicPrivateIpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VmPrimaryNicPrivateIp)(nil)).Elem()
}

func (o VmPrimaryNicPrivateIpArrayOutput) ToVmPrimaryNicPrivateIpArrayOutput() VmPrimaryNicPrivateIpArrayOutput {
	return o
}

func (o VmPrimaryNicPrivateIpArrayOutput) ToVmPrimaryNicPrivateIpArrayOutputWithContext(ctx context.Context) VmPrimaryNicPrivateIpArrayOutput {
	return o
}

func (o VmPrimaryNicPrivateIpArrayOutput) Index(i pulumi.IntInput) VmPrimaryNicPrivateIpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VmPrimaryNicPrivateIp {
		return vs[0].([]VmPrimaryNicPrivateIp)[vs[1].(int)]
	}).(VmPrimaryNicPrivateIpOutput)
}

type VmPrimaryNicPrivateIpLinkPublicIp struct {
	// The name of the public DNS.
	PublicDnsName *string `pulumi:"publicDnsName"`
	// The public IP of the VM.
	PublicIp *string `pulumi:"publicIp"`
	// The account ID of the owner of the public IP.
	PublicIpAccountId *string `pulumi:"publicIpAccountId"`
}

// VmPrimaryNicPrivateIpLinkPublicIpInput is an input type that accepts VmPrimaryNicPrivateIpLinkPublicIpArgs and VmPrimaryNicPrivateIpLinkPublicIpOutput values.
// You can construct a concrete instance of `VmPrimaryNicPrivateIpLinkPublicIpInput` via:
//
//	VmPrimaryNicPrivateIpLinkPublicIpArgs{...}
type VmPrimaryNicPrivateIpLinkPublicIpInput interface {
	pulumi.Input

	ToVmPrimaryNicPrivateIpLinkPublicIpOutput() VmPrimaryNicPrivateIpLinkPublicIpOutput
	ToVmPrimaryNicPrivateIpLinkPublicIpOutputWithContext(context.Context) VmPrimaryNicPrivateIpLinkPublicIpOutput
}

type VmPrimaryNicPrivateIpLinkPublicIpArgs struct {
	// The name of the public DNS.
	PublicDnsName pulumi.StringPtrInput `pulumi:"publicDnsName"`
	// The public IP of the VM.
	PublicIp pulumi.StringPtrInput `pulumi:"publicIp"`
	// The account ID of the owner of the public IP.
	PublicIpAccountId pulumi.StringPtrInput `pulumi:"publicIpAccountId"`
}

func (VmPrimaryNicPrivateIpLinkPublicIpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VmPrimaryNicPrivateIpLinkPublicIp)(nil)).Elem()
}

func (i VmPrimaryNicPrivateIpLinkPublicIpArgs) ToVmPrimaryNicPrivateIpLinkPublicIpOutput() VmPrimaryNicPrivateIpLinkPublicIpOutput {
	return i.ToVmPrimaryNicPrivateIpLinkPublicIpOutputWithContext(context.Background())
}

func (i VmPrimaryNicPrivateIpLinkPublicIpArgs) ToVmPrimaryNicPrivateIpLinkPublicIpOutputWithContext(ctx context.Context) VmPrimaryNicPrivateIpLinkPublicIpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmPrimaryNicPrivateIpLinkPublicIpOutput)
}

// VmPrimaryNicPrivateIpLinkPublicIpArrayInput is an input type that accepts VmPrimaryNicPrivateIpLinkPublicIpArray and VmPrimaryNicPrivateIpLinkPublicIpArrayOutput values.
// You can construct a concrete instance of `VmPrimaryNicPrivateIpLinkPublicIpArrayInput` via:
//
//	VmPrimaryNicPrivateIpLinkPublicIpArray{ VmPrimaryNicPrivateIpLinkPublicIpArgs{...} }
type VmPrimaryNicPrivateIpLinkPublicIpArrayInput interface {
	pulumi.Input

	ToVmPrimaryNicPrivateIpLinkPublicIpArrayOutput() VmPrimaryNicPrivateIpLinkPublicIpArrayOutput
	ToVmPrimaryNicPrivateIpLinkPublicIpArrayOutputWithContext(context.Context) VmPrimaryNicPrivateIpLinkPublicIpArrayOutput
}

type VmPrimaryNicPrivateIpLinkPublicIpArray []VmPrimaryNicPrivateIpLinkPublicIpInput

func (VmPrimaryNicPrivateIpLinkPublicIpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VmPrimaryNicPrivateIpLinkPublicIp)(nil)).Elem()
}

func (i VmPrimaryNicPrivateIpLinkPublicIpArray) ToVmPrimaryNicPrivateIpLinkPublicIpArrayOutput() VmPrimaryNicPrivateIpLinkPublicIpArrayOutput {
	return i.ToVmPrimaryNicPrivateIpLinkPublicIpArrayOutputWithContext(context.Background())
}

func (i VmPrimaryNicPrivateIpLinkPublicIpArray) ToVmPrimaryNicPrivateIpLinkPublicIpArrayOutputWithContext(ctx context.Context) VmPrimaryNicPrivateIpLinkPublicIpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmPrimaryNicPrivateIpLinkPublicIpArrayOutput)
}

type VmPrimaryNicPrivateIpLinkPublicIpOutput struct{ *pulumi.OutputState }

func (VmPrimaryNicPrivateIpLinkPublicIpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VmPrimaryNicPrivateIpLinkPublicIp)(nil)).Elem()
}

func (o VmPrimaryNicPrivateIpLinkPublicIpOutput) ToVmPrimaryNicPrivateIpLinkPublicIpOutput() VmPrimaryNicPrivateIpLinkPublicIpOutput {
	return o
}

func (o VmPrimaryNicPrivateIpLinkPublicIpOutput) ToVmPrimaryNicPrivateIpLinkPublicIpOutputWithContext(ctx context.Context) VmPrimaryNicPrivateIpLinkPublicIpOutput {
	return o
}

// The name of the public DNS.
func (o VmPrimaryNicPrivateIpLinkPublicIpOutput) PublicDnsName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VmPrimaryNicPrivateIpLinkPublicIp) *string { return v.PublicDnsName }).(pulumi.StringPtrOutput)
}

// The public IP of the VM.
func (o VmPrimaryNicPrivateIpLinkPublicIpOutput) PublicIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VmPrimaryNicPrivateIpLinkPublicIp) *string { return v.PublicIp }).(pulumi.StringPtrOutput)
}

// The account ID of the owner of the public IP.
func (o VmPrimaryNicPrivateIpLinkPublicIpOutput) PublicIpAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VmPrimaryNicPrivateIpLinkPublicIp) *string { return v.PublicIpAccountId }).(pulumi.StringPtrOutput)
}

type VmPrimaryNicPrivateIpLinkPublicIpArrayOutput struct{ *pulumi.OutputState }

func (VmPrimaryNicPrivateIpLinkPublicIpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VmPrimaryNicPrivateIpLinkPublicIp)(nil)).Elem()
}

func (o VmPrimaryNicPrivateIpLinkPublicIpArrayOutput) ToVmPrimaryNicPrivateIpLinkPublicIpArrayOutput() VmPrimaryNicPrivateIpLinkPublicIpArrayOutput {
	return o
}

func (o VmPrimaryNicPrivateIpLinkPublicIpArrayOutput) ToVmPrimaryNicPrivateIpLinkPublicIpArrayOutputWithContext(ctx context.Context) VmPrimaryNicPrivateIpLinkPublicIpArrayOutput {
	return o
}

func (o VmPrimaryNicPrivateIpLinkPublicIpArrayOutput) Index(i pulumi.IntInput) VmPrimaryNicPrivateIpLinkPublicIpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VmPrimaryNicPrivateIpLinkPublicIp {
		return vs[0].([]VmPrimaryNicPrivateIpLinkPublicIp)[vs[1].(int)]
	}).(VmPrimaryNicPrivateIpLinkPublicIpOutput)
}

type VmPrimaryNicSecurityGroup struct {
	// The ID of the security group.
	SecurityGroupId *string `pulumi:"securityGroupId"`
	// The name of the security group.
	SecurityGroupName *string `pulumi:"securityGroupName"`
}

// VmPrimaryNicSecurityGroupInput is an input type that accepts VmPrimaryNicSecurityGroupArgs and VmPrimaryNicSecurityGroupOutput values.
// You can construct a concrete instance of `VmPrimaryNicSecurityGroupInput` via:
//
//	VmPrimaryNicSecurityGroupArgs{...}
type VmPrimaryNicSecurityGroupInput interface {
	pulumi.Input

	ToVmPrimaryNicSecurityGroupOutput() VmPrimaryNicSecurityGroupOutput
	ToVmPrimaryNicSecurityGroupOutputWithContext(context.Context) VmPrimaryNicSecurityGroupOutput
}

type VmPrimaryNicSecurityGroupArgs struct {
	// The ID of the security group.
	SecurityGroupId pulumi.StringPtrInput `pulumi:"securityGroupId"`
	// The name of the security group.
	SecurityGroupName pulumi.StringPtrInput `pulumi:"securityGroupName"`
}

func (VmPrimaryNicSecurityGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VmPrimaryNicSecurityGroup)(nil)).Elem()
}

func (i VmPrimaryNicSecurityGroupArgs) ToVmPrimaryNicSecurityGroupOutput() VmPrimaryNicSecurityGroupOutput {
	return i.ToVmPrimaryNicSecurityGroupOutputWithContext(context.Background())
}

func (i VmPrimaryNicSecurityGroupArgs) ToVmPrimaryNicSecurityGroupOutputWithContext(ctx context.Context) VmPrimaryNicSecurityGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmPrimaryNicSecurityGroupOutput)
}

// VmPrimaryNicSecurityGroupArrayInput is an input type that accepts VmPrimaryNicSecurityGroupArray and VmPrimaryNicSecurityGroupArrayOutput values.
// You can construct a concrete instance of `VmPrimaryNicSecurityGroupArrayInput` via:
//
//	VmPrimaryNicSecurityGroupArray{ VmPrimaryNicSecurityGroupArgs{...} }
type VmPrimaryNicSecurityGroupArrayInput interface {
	pulumi.Input

	ToVmPrimaryNicSecurityGroupArrayOutput() VmPrimaryNicSecurityGroupArrayOutput
	ToVmPrimaryNicSecurityGroupArrayOutputWithContext(context.Context) VmPrimaryNicSecurityGroupArrayOutput
}

type VmPrimaryNicSecurityGroupArray []VmPrimaryNicSecurityGroupInput

func (VmPrimaryNicSecurityGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VmPrimaryNicSecurityGroup)(nil)).Elem()
}

func (i VmPrimaryNicSecurityGroupArray) ToVmPrimaryNicSecurityGroupArrayOutput() VmPrimaryNicSecurityGroupArrayOutput {
	return i.ToVmPrimaryNicSecurityGroupArrayOutputWithContext(context.Background())
}

func (i VmPrimaryNicSecurityGroupArray) ToVmPrimaryNicSecurityGroupArrayOutputWithContext(ctx context.Context) VmPrimaryNicSecurityGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmPrimaryNicSecurityGroupArrayOutput)
}

type VmPrimaryNicSecurityGroupOutput struct{ *pulumi.OutputState }

func (VmPrimaryNicSecurityGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VmPrimaryNicSecurityGroup)(nil)).Elem()
}

func (o VmPrimaryNicSecurityGroupOutput) ToVmPrimaryNicSecurityGroupOutput() VmPrimaryNicSecurityGroupOutput {
	return o
}

func (o VmPrimaryNicSecurityGroupOutput) ToVmPrimaryNicSecurityGroupOutputWithContext(ctx context.Context) VmPrimaryNicSecurityGroupOutput {
	return o
}

// The ID of the security group.
func (o VmPrimaryNicSecurityGroupOutput) SecurityGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VmPrimaryNicSecurityGroup) *string { return v.SecurityGroupId }).(pulumi.StringPtrOutput)
}

// The name of the security group.
func (o VmPrimaryNicSecurityGroupOutput) SecurityGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VmPrimaryNicSecurityGroup) *string { return v.SecurityGroupName }).(pulumi.StringPtrOutput)
}

type VmPrimaryNicSecurityGroupArrayOutput struct{ *pulumi.OutputState }

func (VmPrimaryNicSecurityGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VmPrimaryNicSecurityGroup)(nil)).Elem()
}

func (o VmPrimaryNicSecurityGroupArrayOutput) ToVmPrimaryNicSecurityGroupArrayOutput() VmPrimaryNicSecurityGroupArrayOutput {
	return o
}

func (o VmPrimaryNicSecurityGroupArrayOutput) ToVmPrimaryNicSecurityGroupArrayOutputWithContext(ctx context.Context) VmPrimaryNicSecurityGroupArrayOutput {
	return o
}

func (o VmPrimaryNicSecurityGroupArrayOutput) Index(i pulumi.IntInput) VmPrimaryNicSecurityGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VmPrimaryNicSecurityGroup {
		return vs[0].([]VmPrimaryNicSecurityGroup)[vs[1].(int)]
	}).(VmPrimaryNicSecurityGroupOutput)
}

type VmSecurityGroup struct {
	// The ID of the security group.
	SecurityGroupId *string `pulumi:"securityGroupId"`
	// The name of the security group.
	SecurityGroupName *string `pulumi:"securityGroupName"`
}

// VmSecurityGroupInput is an input type that accepts VmSecurityGroupArgs and VmSecurityGroupOutput values.
// You can construct a concrete instance of `VmSecurityGroupInput` via:
//
//	VmSecurityGroupArgs{...}
type VmSecurityGroupInput interface {
	pulumi.Input

	ToVmSecurityGroupOutput() VmSecurityGroupOutput
	ToVmSecurityGroupOutputWithContext(context.Context) VmSecurityGroupOutput
}

type VmSecurityGroupArgs struct {
	// The ID of the security group.
	SecurityGroupId pulumi.StringPtrInput `pulumi:"securityGroupId"`
	// The name of the security group.
	SecurityGroupName pulumi.StringPtrInput `pulumi:"securityGroupName"`
}

func (VmSecurityGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VmSecurityGroup)(nil)).Elem()
}

func (i VmSecurityGroupArgs) ToVmSecurityGroupOutput() VmSecurityGroupOutput {
	return i.ToVmSecurityGroupOutputWithContext(context.Background())
}

func (i VmSecurityGroupArgs) ToVmSecurityGroupOutputWithContext(ctx context.Context) VmSecurityGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmSecurityGroupOutput)
}

// VmSecurityGroupArrayInput is an input type that accepts VmSecurityGroupArray and VmSecurityGroupArrayOutput values.
// You can construct a concrete instance of `VmSecurityGroupArrayInput` via:
//
//	VmSecurityGroupArray{ VmSecurityGroupArgs{...} }
type VmSecurityGroupArrayInput interface {
	pulumi.Input

	ToVmSecurityGroupArrayOutput() VmSecurityGroupArrayOutput
	ToVmSecurityGroupArrayOutputWithContext(context.Context) VmSecurityGroupArrayOutput
}

type VmSecurityGroupArray []VmSecurityGroupInput

func (VmSecurityGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VmSecurityGroup)(nil)).Elem()
}

func (i VmSecurityGroupArray) ToVmSecurityGroupArrayOutput() VmSecurityGroupArrayOutput {
	return i.ToVmSecurityGroupArrayOutputWithContext(context.Background())
}

func (i VmSecurityGroupArray) ToVmSecurityGroupArrayOutputWithContext(ctx context.Context) VmSecurityGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmSecurityGroupArrayOutput)
}

type VmSecurityGroupOutput struct{ *pulumi.OutputState }

func (VmSecurityGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VmSecurityGroup)(nil)).Elem()
}

func (o VmSecurityGroupOutput) ToVmSecurityGroupOutput() VmSecurityGroupOutput {
	return o
}

func (o VmSecurityGroupOutput) ToVmSecurityGroupOutputWithContext(ctx context.Context) VmSecurityGroupOutput {
	return o
}

// The ID of the security group.
func (o VmSecurityGroupOutput) SecurityGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VmSecurityGroup) *string { return v.SecurityGroupId }).(pulumi.StringPtrOutput)
}

// The name of the security group.
func (o VmSecurityGroupOutput) SecurityGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VmSecurityGroup) *string { return v.SecurityGroupName }).(pulumi.StringPtrOutput)
}

type VmSecurityGroupArrayOutput struct{ *pulumi.OutputState }

func (VmSecurityGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VmSecurityGroup)(nil)).Elem()
}

func (o VmSecurityGroupArrayOutput) ToVmSecurityGroupArrayOutput() VmSecurityGroupArrayOutput {
	return o
}

func (o VmSecurityGroupArrayOutput) ToVmSecurityGroupArrayOutputWithContext(ctx context.Context) VmSecurityGroupArrayOutput {
	return o
}

func (o VmSecurityGroupArrayOutput) Index(i pulumi.IntInput) VmSecurityGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VmSecurityGroup {
		return vs[0].([]VmSecurityGroup)[vs[1].(int)]
	}).(VmSecurityGroupOutput)
}

type VmTag struct {
	// The key of the tag, with a minimum of 1 character.
	Key *string `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value *string `pulumi:"value"`
}

// VmTagInput is an input type that accepts VmTagArgs and VmTagOutput values.
// You can construct a concrete instance of `VmTagInput` via:
//
//	VmTagArgs{...}
type VmTagInput interface {
	pulumi.Input

	ToVmTagOutput() VmTagOutput
	ToVmTagOutputWithContext(context.Context) VmTagOutput
}

type VmTagArgs struct {
	// The key of the tag, with a minimum of 1 character.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (VmTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VmTag)(nil)).Elem()
}

func (i VmTagArgs) ToVmTagOutput() VmTagOutput {
	return i.ToVmTagOutputWithContext(context.Background())
}

func (i VmTagArgs) ToVmTagOutputWithContext(ctx context.Context) VmTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmTagOutput)
}

// VmTagArrayInput is an input type that accepts VmTagArray and VmTagArrayOutput values.
// You can construct a concrete instance of `VmTagArrayInput` via:
//
//	VmTagArray{ VmTagArgs{...} }
type VmTagArrayInput interface {
	pulumi.Input

	ToVmTagArrayOutput() VmTagArrayOutput
	ToVmTagArrayOutputWithContext(context.Context) VmTagArrayOutput
}

type VmTagArray []VmTagInput

func (VmTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VmTag)(nil)).Elem()
}

func (i VmTagArray) ToVmTagArrayOutput() VmTagArrayOutput {
	return i.ToVmTagArrayOutputWithContext(context.Background())
}

func (i VmTagArray) ToVmTagArrayOutputWithContext(ctx context.Context) VmTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmTagArrayOutput)
}

type VmTagOutput struct{ *pulumi.OutputState }

func (VmTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VmTag)(nil)).Elem()
}

func (o VmTagOutput) ToVmTagOutput() VmTagOutput {
	return o
}

func (o VmTagOutput) ToVmTagOutputWithContext(ctx context.Context) VmTagOutput {
	return o
}

// The key of the tag, with a minimum of 1 character.
func (o VmTagOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VmTag) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The value of the tag, between 0 and 255 characters.
func (o VmTagOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VmTag) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type VmTagArrayOutput struct{ *pulumi.OutputState }

func (VmTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VmTag)(nil)).Elem()
}

func (o VmTagArrayOutput) ToVmTagArrayOutput() VmTagArrayOutput {
	return o
}

func (o VmTagArrayOutput) ToVmTagArrayOutputWithContext(ctx context.Context) VmTagArrayOutput {
	return o
}

func (o VmTagArrayOutput) Index(i pulumi.IntInput) VmTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VmTag {
		return vs[0].([]VmTag)[vs[1].(int)]
	}).(VmTagOutput)
}

type VolumeLinkTimeouts struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Create *string `pulumi:"create"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
	Delete *string `pulumi:"delete"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
	Read *string `pulumi:"read"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Update *string `pulumi:"update"`
}

// VolumeLinkTimeoutsInput is an input type that accepts VolumeLinkTimeoutsArgs and VolumeLinkTimeoutsOutput values.
// You can construct a concrete instance of `VolumeLinkTimeoutsInput` via:
//
//	VolumeLinkTimeoutsArgs{...}
type VolumeLinkTimeoutsInput interface {
	pulumi.Input

	ToVolumeLinkTimeoutsOutput() VolumeLinkTimeoutsOutput
	ToVolumeLinkTimeoutsOutputWithContext(context.Context) VolumeLinkTimeoutsOutput
}

type VolumeLinkTimeoutsArgs struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Create pulumi.StringPtrInput `pulumi:"create"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
	Delete pulumi.StringPtrInput `pulumi:"delete"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
	Read pulumi.StringPtrInput `pulumi:"read"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Update pulumi.StringPtrInput `pulumi:"update"`
}

func (VolumeLinkTimeoutsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VolumeLinkTimeouts)(nil)).Elem()
}

func (i VolumeLinkTimeoutsArgs) ToVolumeLinkTimeoutsOutput() VolumeLinkTimeoutsOutput {
	return i.ToVolumeLinkTimeoutsOutputWithContext(context.Background())
}

func (i VolumeLinkTimeoutsArgs) ToVolumeLinkTimeoutsOutputWithContext(ctx context.Context) VolumeLinkTimeoutsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VolumeLinkTimeoutsOutput)
}

func (i VolumeLinkTimeoutsArgs) ToVolumeLinkTimeoutsPtrOutput() VolumeLinkTimeoutsPtrOutput {
	return i.ToVolumeLinkTimeoutsPtrOutputWithContext(context.Background())
}

func (i VolumeLinkTimeoutsArgs) ToVolumeLinkTimeoutsPtrOutputWithContext(ctx context.Context) VolumeLinkTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VolumeLinkTimeoutsOutput).ToVolumeLinkTimeoutsPtrOutputWithContext(ctx)
}

// VolumeLinkTimeoutsPtrInput is an input type that accepts VolumeLinkTimeoutsArgs, VolumeLinkTimeoutsPtr and VolumeLinkTimeoutsPtrOutput values.
// You can construct a concrete instance of `VolumeLinkTimeoutsPtrInput` via:
//
//	        VolumeLinkTimeoutsArgs{...}
//
//	or:
//
//	        nil
type VolumeLinkTimeoutsPtrInput interface {
	pulumi.Input

	ToVolumeLinkTimeoutsPtrOutput() VolumeLinkTimeoutsPtrOutput
	ToVolumeLinkTimeoutsPtrOutputWithContext(context.Context) VolumeLinkTimeoutsPtrOutput
}

type volumeLinkTimeoutsPtrType VolumeLinkTimeoutsArgs

func VolumeLinkTimeoutsPtr(v *VolumeLinkTimeoutsArgs) VolumeLinkTimeoutsPtrInput {
	return (*volumeLinkTimeoutsPtrType)(v)
}

func (*volumeLinkTimeoutsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VolumeLinkTimeouts)(nil)).Elem()
}

func (i *volumeLinkTimeoutsPtrType) ToVolumeLinkTimeoutsPtrOutput() VolumeLinkTimeoutsPtrOutput {
	return i.ToVolumeLinkTimeoutsPtrOutputWithContext(context.Background())
}

func (i *volumeLinkTimeoutsPtrType) ToVolumeLinkTimeoutsPtrOutputWithContext(ctx context.Context) VolumeLinkTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VolumeLinkTimeoutsPtrOutput)
}

type VolumeLinkTimeoutsOutput struct{ *pulumi.OutputState }

func (VolumeLinkTimeoutsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VolumeLinkTimeouts)(nil)).Elem()
}

func (o VolumeLinkTimeoutsOutput) ToVolumeLinkTimeoutsOutput() VolumeLinkTimeoutsOutput {
	return o
}

func (o VolumeLinkTimeoutsOutput) ToVolumeLinkTimeoutsOutputWithContext(ctx context.Context) VolumeLinkTimeoutsOutput {
	return o
}

func (o VolumeLinkTimeoutsOutput) ToVolumeLinkTimeoutsPtrOutput() VolumeLinkTimeoutsPtrOutput {
	return o.ToVolumeLinkTimeoutsPtrOutputWithContext(context.Background())
}

func (o VolumeLinkTimeoutsOutput) ToVolumeLinkTimeoutsPtrOutputWithContext(ctx context.Context) VolumeLinkTimeoutsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VolumeLinkTimeouts) *VolumeLinkTimeouts {
		return &v
	}).(VolumeLinkTimeoutsPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o VolumeLinkTimeoutsOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VolumeLinkTimeouts) *string { return v.Create }).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
func (o VolumeLinkTimeoutsOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VolumeLinkTimeouts) *string { return v.Delete }).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
func (o VolumeLinkTimeoutsOutput) Read() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VolumeLinkTimeouts) *string { return v.Read }).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o VolumeLinkTimeoutsOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VolumeLinkTimeouts) *string { return v.Update }).(pulumi.StringPtrOutput)
}

type VolumeLinkTimeoutsPtrOutput struct{ *pulumi.OutputState }

func (VolumeLinkTimeoutsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VolumeLinkTimeouts)(nil)).Elem()
}

func (o VolumeLinkTimeoutsPtrOutput) ToVolumeLinkTimeoutsPtrOutput() VolumeLinkTimeoutsPtrOutput {
	return o
}

func (o VolumeLinkTimeoutsPtrOutput) ToVolumeLinkTimeoutsPtrOutputWithContext(ctx context.Context) VolumeLinkTimeoutsPtrOutput {
	return o
}

func (o VolumeLinkTimeoutsPtrOutput) Elem() VolumeLinkTimeoutsOutput {
	return o.ApplyT(func(v *VolumeLinkTimeouts) VolumeLinkTimeouts {
		if v != nil {
			return *v
		}
		var ret VolumeLinkTimeouts
		return ret
	}).(VolumeLinkTimeoutsOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o VolumeLinkTimeoutsPtrOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VolumeLinkTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Create
	}).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
func (o VolumeLinkTimeoutsPtrOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VolumeLinkTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Delete
	}).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
func (o VolumeLinkTimeoutsPtrOutput) Read() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VolumeLinkTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Read
	}).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o VolumeLinkTimeoutsPtrOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VolumeLinkTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Update
	}).(pulumi.StringPtrOutput)
}

type VolumeLinkedVolume struct {
	// If true, the volume is deleted when terminating the VM. If false, the volume is not deleted when terminating the VM.
	DeleteOnVmDeletion bool `pulumi:"deleteOnVmDeletion"`
	// The name of the device.
	DeviceName string `pulumi:"deviceName"`
	// The state of the volume (`creating` \| `available` \| `in-use` \| `updating` \| `deleting` \| `error`).
	State string `pulumi:"state"`
	// The ID of the VM.
	VmId string `pulumi:"vmId"`
	// The ID of the volume.
	VolumeId string `pulumi:"volumeId"`
}

// VolumeLinkedVolumeInput is an input type that accepts VolumeLinkedVolumeArgs and VolumeLinkedVolumeOutput values.
// You can construct a concrete instance of `VolumeLinkedVolumeInput` via:
//
//	VolumeLinkedVolumeArgs{...}
type VolumeLinkedVolumeInput interface {
	pulumi.Input

	ToVolumeLinkedVolumeOutput() VolumeLinkedVolumeOutput
	ToVolumeLinkedVolumeOutputWithContext(context.Context) VolumeLinkedVolumeOutput
}

type VolumeLinkedVolumeArgs struct {
	// If true, the volume is deleted when terminating the VM. If false, the volume is not deleted when terminating the VM.
	DeleteOnVmDeletion pulumi.BoolInput `pulumi:"deleteOnVmDeletion"`
	// The name of the device.
	DeviceName pulumi.StringInput `pulumi:"deviceName"`
	// The state of the volume (`creating` \| `available` \| `in-use` \| `updating` \| `deleting` \| `error`).
	State pulumi.StringInput `pulumi:"state"`
	// The ID of the VM.
	VmId pulumi.StringInput `pulumi:"vmId"`
	// The ID of the volume.
	VolumeId pulumi.StringInput `pulumi:"volumeId"`
}

func (VolumeLinkedVolumeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VolumeLinkedVolume)(nil)).Elem()
}

func (i VolumeLinkedVolumeArgs) ToVolumeLinkedVolumeOutput() VolumeLinkedVolumeOutput {
	return i.ToVolumeLinkedVolumeOutputWithContext(context.Background())
}

func (i VolumeLinkedVolumeArgs) ToVolumeLinkedVolumeOutputWithContext(ctx context.Context) VolumeLinkedVolumeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VolumeLinkedVolumeOutput)
}

// VolumeLinkedVolumeArrayInput is an input type that accepts VolumeLinkedVolumeArray and VolumeLinkedVolumeArrayOutput values.
// You can construct a concrete instance of `VolumeLinkedVolumeArrayInput` via:
//
//	VolumeLinkedVolumeArray{ VolumeLinkedVolumeArgs{...} }
type VolumeLinkedVolumeArrayInput interface {
	pulumi.Input

	ToVolumeLinkedVolumeArrayOutput() VolumeLinkedVolumeArrayOutput
	ToVolumeLinkedVolumeArrayOutputWithContext(context.Context) VolumeLinkedVolumeArrayOutput
}

type VolumeLinkedVolumeArray []VolumeLinkedVolumeInput

func (VolumeLinkedVolumeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VolumeLinkedVolume)(nil)).Elem()
}

func (i VolumeLinkedVolumeArray) ToVolumeLinkedVolumeArrayOutput() VolumeLinkedVolumeArrayOutput {
	return i.ToVolumeLinkedVolumeArrayOutputWithContext(context.Background())
}

func (i VolumeLinkedVolumeArray) ToVolumeLinkedVolumeArrayOutputWithContext(ctx context.Context) VolumeLinkedVolumeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VolumeLinkedVolumeArrayOutput)
}

type VolumeLinkedVolumeOutput struct{ *pulumi.OutputState }

func (VolumeLinkedVolumeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VolumeLinkedVolume)(nil)).Elem()
}

func (o VolumeLinkedVolumeOutput) ToVolumeLinkedVolumeOutput() VolumeLinkedVolumeOutput {
	return o
}

func (o VolumeLinkedVolumeOutput) ToVolumeLinkedVolumeOutputWithContext(ctx context.Context) VolumeLinkedVolumeOutput {
	return o
}

// If true, the volume is deleted when terminating the VM. If false, the volume is not deleted when terminating the VM.
func (o VolumeLinkedVolumeOutput) DeleteOnVmDeletion() pulumi.BoolOutput {
	return o.ApplyT(func(v VolumeLinkedVolume) bool { return v.DeleteOnVmDeletion }).(pulumi.BoolOutput)
}

// The name of the device.
func (o VolumeLinkedVolumeOutput) DeviceName() pulumi.StringOutput {
	return o.ApplyT(func(v VolumeLinkedVolume) string { return v.DeviceName }).(pulumi.StringOutput)
}

// The state of the volume (`creating` \| `available` \| `in-use` \| `updating` \| `deleting` \| `error`).
func (o VolumeLinkedVolumeOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v VolumeLinkedVolume) string { return v.State }).(pulumi.StringOutput)
}

// The ID of the VM.
func (o VolumeLinkedVolumeOutput) VmId() pulumi.StringOutput {
	return o.ApplyT(func(v VolumeLinkedVolume) string { return v.VmId }).(pulumi.StringOutput)
}

// The ID of the volume.
func (o VolumeLinkedVolumeOutput) VolumeId() pulumi.StringOutput {
	return o.ApplyT(func(v VolumeLinkedVolume) string { return v.VolumeId }).(pulumi.StringOutput)
}

type VolumeLinkedVolumeArrayOutput struct{ *pulumi.OutputState }

func (VolumeLinkedVolumeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VolumeLinkedVolume)(nil)).Elem()
}

func (o VolumeLinkedVolumeArrayOutput) ToVolumeLinkedVolumeArrayOutput() VolumeLinkedVolumeArrayOutput {
	return o
}

func (o VolumeLinkedVolumeArrayOutput) ToVolumeLinkedVolumeArrayOutputWithContext(ctx context.Context) VolumeLinkedVolumeArrayOutput {
	return o
}

func (o VolumeLinkedVolumeArrayOutput) Index(i pulumi.IntInput) VolumeLinkedVolumeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VolumeLinkedVolume {
		return vs[0].([]VolumeLinkedVolume)[vs[1].(int)]
	}).(VolumeLinkedVolumeOutput)
}

type VolumeTag struct {
	// The key of the tag, with a minimum of 1 character.
	Key string `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value *string `pulumi:"value"`
}

// VolumeTagInput is an input type that accepts VolumeTagArgs and VolumeTagOutput values.
// You can construct a concrete instance of `VolumeTagInput` via:
//
//	VolumeTagArgs{...}
type VolumeTagInput interface {
	pulumi.Input

	ToVolumeTagOutput() VolumeTagOutput
	ToVolumeTagOutputWithContext(context.Context) VolumeTagOutput
}

type VolumeTagArgs struct {
	// The key of the tag, with a minimum of 1 character.
	Key pulumi.StringInput `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (VolumeTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VolumeTag)(nil)).Elem()
}

func (i VolumeTagArgs) ToVolumeTagOutput() VolumeTagOutput {
	return i.ToVolumeTagOutputWithContext(context.Background())
}

func (i VolumeTagArgs) ToVolumeTagOutputWithContext(ctx context.Context) VolumeTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VolumeTagOutput)
}

// VolumeTagArrayInput is an input type that accepts VolumeTagArray and VolumeTagArrayOutput values.
// You can construct a concrete instance of `VolumeTagArrayInput` via:
//
//	VolumeTagArray{ VolumeTagArgs{...} }
type VolumeTagArrayInput interface {
	pulumi.Input

	ToVolumeTagArrayOutput() VolumeTagArrayOutput
	ToVolumeTagArrayOutputWithContext(context.Context) VolumeTagArrayOutput
}

type VolumeTagArray []VolumeTagInput

func (VolumeTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VolumeTag)(nil)).Elem()
}

func (i VolumeTagArray) ToVolumeTagArrayOutput() VolumeTagArrayOutput {
	return i.ToVolumeTagArrayOutputWithContext(context.Background())
}

func (i VolumeTagArray) ToVolumeTagArrayOutputWithContext(ctx context.Context) VolumeTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VolumeTagArrayOutput)
}

type VolumeTagOutput struct{ *pulumi.OutputState }

func (VolumeTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VolumeTag)(nil)).Elem()
}

func (o VolumeTagOutput) ToVolumeTagOutput() VolumeTagOutput {
	return o
}

func (o VolumeTagOutput) ToVolumeTagOutputWithContext(ctx context.Context) VolumeTagOutput {
	return o
}

// The key of the tag, with a minimum of 1 character.
func (o VolumeTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v VolumeTag) string { return v.Key }).(pulumi.StringOutput)
}

// The value of the tag, between 0 and 255 characters.
func (o VolumeTagOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VolumeTag) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type VolumeTagArrayOutput struct{ *pulumi.OutputState }

func (VolumeTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VolumeTag)(nil)).Elem()
}

func (o VolumeTagArrayOutput) ToVolumeTagArrayOutput() VolumeTagArrayOutput {
	return o
}

func (o VolumeTagArrayOutput) ToVolumeTagArrayOutputWithContext(ctx context.Context) VolumeTagArrayOutput {
	return o
}

func (o VolumeTagArrayOutput) Index(i pulumi.IntInput) VolumeTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VolumeTag {
		return vs[0].([]VolumeTag)[vs[1].(int)]
	}).(VolumeTagOutput)
}

type VolumeTimeouts struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Create *string `pulumi:"create"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
	Delete *string `pulumi:"delete"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
	Read *string `pulumi:"read"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Update *string `pulumi:"update"`
}

// VolumeTimeoutsInput is an input type that accepts VolumeTimeoutsArgs and VolumeTimeoutsOutput values.
// You can construct a concrete instance of `VolumeTimeoutsInput` via:
//
//	VolumeTimeoutsArgs{...}
type VolumeTimeoutsInput interface {
	pulumi.Input

	ToVolumeTimeoutsOutput() VolumeTimeoutsOutput
	ToVolumeTimeoutsOutputWithContext(context.Context) VolumeTimeoutsOutput
}

type VolumeTimeoutsArgs struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Create pulumi.StringPtrInput `pulumi:"create"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
	Delete pulumi.StringPtrInput `pulumi:"delete"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
	Read pulumi.StringPtrInput `pulumi:"read"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Update pulumi.StringPtrInput `pulumi:"update"`
}

func (VolumeTimeoutsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VolumeTimeouts)(nil)).Elem()
}

func (i VolumeTimeoutsArgs) ToVolumeTimeoutsOutput() VolumeTimeoutsOutput {
	return i.ToVolumeTimeoutsOutputWithContext(context.Background())
}

func (i VolumeTimeoutsArgs) ToVolumeTimeoutsOutputWithContext(ctx context.Context) VolumeTimeoutsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VolumeTimeoutsOutput)
}

func (i VolumeTimeoutsArgs) ToVolumeTimeoutsPtrOutput() VolumeTimeoutsPtrOutput {
	return i.ToVolumeTimeoutsPtrOutputWithContext(context.Background())
}

func (i VolumeTimeoutsArgs) ToVolumeTimeoutsPtrOutputWithContext(ctx context.Context) VolumeTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VolumeTimeoutsOutput).ToVolumeTimeoutsPtrOutputWithContext(ctx)
}

// VolumeTimeoutsPtrInput is an input type that accepts VolumeTimeoutsArgs, VolumeTimeoutsPtr and VolumeTimeoutsPtrOutput values.
// You can construct a concrete instance of `VolumeTimeoutsPtrInput` via:
//
//	        VolumeTimeoutsArgs{...}
//
//	or:
//
//	        nil
type VolumeTimeoutsPtrInput interface {
	pulumi.Input

	ToVolumeTimeoutsPtrOutput() VolumeTimeoutsPtrOutput
	ToVolumeTimeoutsPtrOutputWithContext(context.Context) VolumeTimeoutsPtrOutput
}

type volumeTimeoutsPtrType VolumeTimeoutsArgs

func VolumeTimeoutsPtr(v *VolumeTimeoutsArgs) VolumeTimeoutsPtrInput {
	return (*volumeTimeoutsPtrType)(v)
}

func (*volumeTimeoutsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VolumeTimeouts)(nil)).Elem()
}

func (i *volumeTimeoutsPtrType) ToVolumeTimeoutsPtrOutput() VolumeTimeoutsPtrOutput {
	return i.ToVolumeTimeoutsPtrOutputWithContext(context.Background())
}

func (i *volumeTimeoutsPtrType) ToVolumeTimeoutsPtrOutputWithContext(ctx context.Context) VolumeTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VolumeTimeoutsPtrOutput)
}

type VolumeTimeoutsOutput struct{ *pulumi.OutputState }

func (VolumeTimeoutsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VolumeTimeouts)(nil)).Elem()
}

func (o VolumeTimeoutsOutput) ToVolumeTimeoutsOutput() VolumeTimeoutsOutput {
	return o
}

func (o VolumeTimeoutsOutput) ToVolumeTimeoutsOutputWithContext(ctx context.Context) VolumeTimeoutsOutput {
	return o
}

func (o VolumeTimeoutsOutput) ToVolumeTimeoutsPtrOutput() VolumeTimeoutsPtrOutput {
	return o.ToVolumeTimeoutsPtrOutputWithContext(context.Background())
}

func (o VolumeTimeoutsOutput) ToVolumeTimeoutsPtrOutputWithContext(ctx context.Context) VolumeTimeoutsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VolumeTimeouts) *VolumeTimeouts {
		return &v
	}).(VolumeTimeoutsPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o VolumeTimeoutsOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VolumeTimeouts) *string { return v.Create }).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
func (o VolumeTimeoutsOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VolumeTimeouts) *string { return v.Delete }).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
func (o VolumeTimeoutsOutput) Read() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VolumeTimeouts) *string { return v.Read }).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o VolumeTimeoutsOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VolumeTimeouts) *string { return v.Update }).(pulumi.StringPtrOutput)
}

type VolumeTimeoutsPtrOutput struct{ *pulumi.OutputState }

func (VolumeTimeoutsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VolumeTimeouts)(nil)).Elem()
}

func (o VolumeTimeoutsPtrOutput) ToVolumeTimeoutsPtrOutput() VolumeTimeoutsPtrOutput {
	return o
}

func (o VolumeTimeoutsPtrOutput) ToVolumeTimeoutsPtrOutputWithContext(ctx context.Context) VolumeTimeoutsPtrOutput {
	return o
}

func (o VolumeTimeoutsPtrOutput) Elem() VolumeTimeoutsOutput {
	return o.ApplyT(func(v *VolumeTimeouts) VolumeTimeouts {
		if v != nil {
			return *v
		}
		var ret VolumeTimeouts
		return ret
	}).(VolumeTimeoutsOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o VolumeTimeoutsPtrOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VolumeTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Create
	}).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
func (o VolumeTimeoutsPtrOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VolumeTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Delete
	}).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
func (o VolumeTimeoutsPtrOutput) Read() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VolumeTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Read
	}).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o VolumeTimeoutsPtrOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VolumeTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Update
	}).(pulumi.StringPtrOutput)
}

type VpnConnectionRouteType struct {
	// The IP range used for the destination match, in CIDR notation (for example, `10.0.0.0/24`).
	DestinationIpRange *string `pulumi:"destinationIpRange"`
	// The type of route (always `static`).
	RouteType *string `pulumi:"routeType"`
	// The state of the IPSEC tunnel (`UP` \| `DOWN`).
	State *string `pulumi:"state"`
}

// VpnConnectionRouteTypeInput is an input type that accepts VpnConnectionRouteTypeArgs and VpnConnectionRouteTypeOutput values.
// You can construct a concrete instance of `VpnConnectionRouteTypeInput` via:
//
//	VpnConnectionRouteTypeArgs{...}
type VpnConnectionRouteTypeInput interface {
	pulumi.Input

	ToVpnConnectionRouteTypeOutput() VpnConnectionRouteTypeOutput
	ToVpnConnectionRouteTypeOutputWithContext(context.Context) VpnConnectionRouteTypeOutput
}

type VpnConnectionRouteTypeArgs struct {
	// The IP range used for the destination match, in CIDR notation (for example, `10.0.0.0/24`).
	DestinationIpRange pulumi.StringPtrInput `pulumi:"destinationIpRange"`
	// The type of route (always `static`).
	RouteType pulumi.StringPtrInput `pulumi:"routeType"`
	// The state of the IPSEC tunnel (`UP` \| `DOWN`).
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (VpnConnectionRouteTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnConnectionRouteType)(nil)).Elem()
}

func (i VpnConnectionRouteTypeArgs) ToVpnConnectionRouteTypeOutput() VpnConnectionRouteTypeOutput {
	return i.ToVpnConnectionRouteTypeOutputWithContext(context.Background())
}

func (i VpnConnectionRouteTypeArgs) ToVpnConnectionRouteTypeOutputWithContext(ctx context.Context) VpnConnectionRouteTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnConnectionRouteTypeOutput)
}

// VpnConnectionRouteTypeArrayInput is an input type that accepts VpnConnectionRouteTypeArray and VpnConnectionRouteTypeArrayOutput values.
// You can construct a concrete instance of `VpnConnectionRouteTypeArrayInput` via:
//
//	VpnConnectionRouteTypeArray{ VpnConnectionRouteTypeArgs{...} }
type VpnConnectionRouteTypeArrayInput interface {
	pulumi.Input

	ToVpnConnectionRouteTypeArrayOutput() VpnConnectionRouteTypeArrayOutput
	ToVpnConnectionRouteTypeArrayOutputWithContext(context.Context) VpnConnectionRouteTypeArrayOutput
}

type VpnConnectionRouteTypeArray []VpnConnectionRouteTypeInput

func (VpnConnectionRouteTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnConnectionRouteType)(nil)).Elem()
}

func (i VpnConnectionRouteTypeArray) ToVpnConnectionRouteTypeArrayOutput() VpnConnectionRouteTypeArrayOutput {
	return i.ToVpnConnectionRouteTypeArrayOutputWithContext(context.Background())
}

func (i VpnConnectionRouteTypeArray) ToVpnConnectionRouteTypeArrayOutputWithContext(ctx context.Context) VpnConnectionRouteTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnConnectionRouteTypeArrayOutput)
}

type VpnConnectionRouteTypeOutput struct{ *pulumi.OutputState }

func (VpnConnectionRouteTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnConnectionRouteType)(nil)).Elem()
}

func (o VpnConnectionRouteTypeOutput) ToVpnConnectionRouteTypeOutput() VpnConnectionRouteTypeOutput {
	return o
}

func (o VpnConnectionRouteTypeOutput) ToVpnConnectionRouteTypeOutputWithContext(ctx context.Context) VpnConnectionRouteTypeOutput {
	return o
}

// The IP range used for the destination match, in CIDR notation (for example, `10.0.0.0/24`).
func (o VpnConnectionRouteTypeOutput) DestinationIpRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnConnectionRouteType) *string { return v.DestinationIpRange }).(pulumi.StringPtrOutput)
}

// The type of route (always `static`).
func (o VpnConnectionRouteTypeOutput) RouteType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnConnectionRouteType) *string { return v.RouteType }).(pulumi.StringPtrOutput)
}

// The state of the IPSEC tunnel (`UP` \| `DOWN`).
func (o VpnConnectionRouteTypeOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnConnectionRouteType) *string { return v.State }).(pulumi.StringPtrOutput)
}

type VpnConnectionRouteTypeArrayOutput struct{ *pulumi.OutputState }

func (VpnConnectionRouteTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnConnectionRouteType)(nil)).Elem()
}

func (o VpnConnectionRouteTypeArrayOutput) ToVpnConnectionRouteTypeArrayOutput() VpnConnectionRouteTypeArrayOutput {
	return o
}

func (o VpnConnectionRouteTypeArrayOutput) ToVpnConnectionRouteTypeArrayOutputWithContext(ctx context.Context) VpnConnectionRouteTypeArrayOutput {
	return o
}

func (o VpnConnectionRouteTypeArrayOutput) Index(i pulumi.IntInput) VpnConnectionRouteTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnConnectionRouteType {
		return vs[0].([]VpnConnectionRouteType)[vs[1].(int)]
	}).(VpnConnectionRouteTypeOutput)
}

type VpnConnectionTag struct {
	// The key of the tag, with a minimum of 1 character.
	Key *string `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value *string `pulumi:"value"`
}

// VpnConnectionTagInput is an input type that accepts VpnConnectionTagArgs and VpnConnectionTagOutput values.
// You can construct a concrete instance of `VpnConnectionTagInput` via:
//
//	VpnConnectionTagArgs{...}
type VpnConnectionTagInput interface {
	pulumi.Input

	ToVpnConnectionTagOutput() VpnConnectionTagOutput
	ToVpnConnectionTagOutputWithContext(context.Context) VpnConnectionTagOutput
}

type VpnConnectionTagArgs struct {
	// The key of the tag, with a minimum of 1 character.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (VpnConnectionTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnConnectionTag)(nil)).Elem()
}

func (i VpnConnectionTagArgs) ToVpnConnectionTagOutput() VpnConnectionTagOutput {
	return i.ToVpnConnectionTagOutputWithContext(context.Background())
}

func (i VpnConnectionTagArgs) ToVpnConnectionTagOutputWithContext(ctx context.Context) VpnConnectionTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnConnectionTagOutput)
}

// VpnConnectionTagArrayInput is an input type that accepts VpnConnectionTagArray and VpnConnectionTagArrayOutput values.
// You can construct a concrete instance of `VpnConnectionTagArrayInput` via:
//
//	VpnConnectionTagArray{ VpnConnectionTagArgs{...} }
type VpnConnectionTagArrayInput interface {
	pulumi.Input

	ToVpnConnectionTagArrayOutput() VpnConnectionTagArrayOutput
	ToVpnConnectionTagArrayOutputWithContext(context.Context) VpnConnectionTagArrayOutput
}

type VpnConnectionTagArray []VpnConnectionTagInput

func (VpnConnectionTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnConnectionTag)(nil)).Elem()
}

func (i VpnConnectionTagArray) ToVpnConnectionTagArrayOutput() VpnConnectionTagArrayOutput {
	return i.ToVpnConnectionTagArrayOutputWithContext(context.Background())
}

func (i VpnConnectionTagArray) ToVpnConnectionTagArrayOutputWithContext(ctx context.Context) VpnConnectionTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnConnectionTagArrayOutput)
}

type VpnConnectionTagOutput struct{ *pulumi.OutputState }

func (VpnConnectionTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnConnectionTag)(nil)).Elem()
}

func (o VpnConnectionTagOutput) ToVpnConnectionTagOutput() VpnConnectionTagOutput {
	return o
}

func (o VpnConnectionTagOutput) ToVpnConnectionTagOutputWithContext(ctx context.Context) VpnConnectionTagOutput {
	return o
}

// The key of the tag, with a minimum of 1 character.
func (o VpnConnectionTagOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnConnectionTag) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The value of the tag, between 0 and 255 characters.
func (o VpnConnectionTagOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnConnectionTag) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type VpnConnectionTagArrayOutput struct{ *pulumi.OutputState }

func (VpnConnectionTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnConnectionTag)(nil)).Elem()
}

func (o VpnConnectionTagArrayOutput) ToVpnConnectionTagArrayOutput() VpnConnectionTagArrayOutput {
	return o
}

func (o VpnConnectionTagArrayOutput) ToVpnConnectionTagArrayOutputWithContext(ctx context.Context) VpnConnectionTagArrayOutput {
	return o
}

func (o VpnConnectionTagArrayOutput) Index(i pulumi.IntInput) VpnConnectionTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnConnectionTag {
		return vs[0].([]VpnConnectionTag)[vs[1].(int)]
	}).(VpnConnectionTagOutput)
}

type VpnConnectionVgwTelemetry struct {
	// The number of routes accepted through BGP (Border Gateway Protocol) route exchanges.
	AcceptedRouteCount *int `pulumi:"acceptedRouteCount"`
	// The date and time (UTC) of the latest state update.
	LastStateChangeDate *string `pulumi:"lastStateChangeDate"`
	// The IP on the OUTSCALE side of the tunnel.
	OutsideIpAddress *string `pulumi:"outsideIpAddress"`
	// The state of the IPSEC tunnel (`UP` \| `DOWN`).
	State *string `pulumi:"state"`
	// A description of the current state of the tunnel.
	StateDescription *string `pulumi:"stateDescription"`
}

// VpnConnectionVgwTelemetryInput is an input type that accepts VpnConnectionVgwTelemetryArgs and VpnConnectionVgwTelemetryOutput values.
// You can construct a concrete instance of `VpnConnectionVgwTelemetryInput` via:
//
//	VpnConnectionVgwTelemetryArgs{...}
type VpnConnectionVgwTelemetryInput interface {
	pulumi.Input

	ToVpnConnectionVgwTelemetryOutput() VpnConnectionVgwTelemetryOutput
	ToVpnConnectionVgwTelemetryOutputWithContext(context.Context) VpnConnectionVgwTelemetryOutput
}

type VpnConnectionVgwTelemetryArgs struct {
	// The number of routes accepted through BGP (Border Gateway Protocol) route exchanges.
	AcceptedRouteCount pulumi.IntPtrInput `pulumi:"acceptedRouteCount"`
	// The date and time (UTC) of the latest state update.
	LastStateChangeDate pulumi.StringPtrInput `pulumi:"lastStateChangeDate"`
	// The IP on the OUTSCALE side of the tunnel.
	OutsideIpAddress pulumi.StringPtrInput `pulumi:"outsideIpAddress"`
	// The state of the IPSEC tunnel (`UP` \| `DOWN`).
	State pulumi.StringPtrInput `pulumi:"state"`
	// A description of the current state of the tunnel.
	StateDescription pulumi.StringPtrInput `pulumi:"stateDescription"`
}

func (VpnConnectionVgwTelemetryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnConnectionVgwTelemetry)(nil)).Elem()
}

func (i VpnConnectionVgwTelemetryArgs) ToVpnConnectionVgwTelemetryOutput() VpnConnectionVgwTelemetryOutput {
	return i.ToVpnConnectionVgwTelemetryOutputWithContext(context.Background())
}

func (i VpnConnectionVgwTelemetryArgs) ToVpnConnectionVgwTelemetryOutputWithContext(ctx context.Context) VpnConnectionVgwTelemetryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnConnectionVgwTelemetryOutput)
}

// VpnConnectionVgwTelemetryArrayInput is an input type that accepts VpnConnectionVgwTelemetryArray and VpnConnectionVgwTelemetryArrayOutput values.
// You can construct a concrete instance of `VpnConnectionVgwTelemetryArrayInput` via:
//
//	VpnConnectionVgwTelemetryArray{ VpnConnectionVgwTelemetryArgs{...} }
type VpnConnectionVgwTelemetryArrayInput interface {
	pulumi.Input

	ToVpnConnectionVgwTelemetryArrayOutput() VpnConnectionVgwTelemetryArrayOutput
	ToVpnConnectionVgwTelemetryArrayOutputWithContext(context.Context) VpnConnectionVgwTelemetryArrayOutput
}

type VpnConnectionVgwTelemetryArray []VpnConnectionVgwTelemetryInput

func (VpnConnectionVgwTelemetryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnConnectionVgwTelemetry)(nil)).Elem()
}

func (i VpnConnectionVgwTelemetryArray) ToVpnConnectionVgwTelemetryArrayOutput() VpnConnectionVgwTelemetryArrayOutput {
	return i.ToVpnConnectionVgwTelemetryArrayOutputWithContext(context.Background())
}

func (i VpnConnectionVgwTelemetryArray) ToVpnConnectionVgwTelemetryArrayOutputWithContext(ctx context.Context) VpnConnectionVgwTelemetryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnConnectionVgwTelemetryArrayOutput)
}

type VpnConnectionVgwTelemetryOutput struct{ *pulumi.OutputState }

func (VpnConnectionVgwTelemetryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnConnectionVgwTelemetry)(nil)).Elem()
}

func (o VpnConnectionVgwTelemetryOutput) ToVpnConnectionVgwTelemetryOutput() VpnConnectionVgwTelemetryOutput {
	return o
}

func (o VpnConnectionVgwTelemetryOutput) ToVpnConnectionVgwTelemetryOutputWithContext(ctx context.Context) VpnConnectionVgwTelemetryOutput {
	return o
}

// The number of routes accepted through BGP (Border Gateway Protocol) route exchanges.
func (o VpnConnectionVgwTelemetryOutput) AcceptedRouteCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VpnConnectionVgwTelemetry) *int { return v.AcceptedRouteCount }).(pulumi.IntPtrOutput)
}

// The date and time (UTC) of the latest state update.
func (o VpnConnectionVgwTelemetryOutput) LastStateChangeDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnConnectionVgwTelemetry) *string { return v.LastStateChangeDate }).(pulumi.StringPtrOutput)
}

// The IP on the OUTSCALE side of the tunnel.
func (o VpnConnectionVgwTelemetryOutput) OutsideIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnConnectionVgwTelemetry) *string { return v.OutsideIpAddress }).(pulumi.StringPtrOutput)
}

// The state of the IPSEC tunnel (`UP` \| `DOWN`).
func (o VpnConnectionVgwTelemetryOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnConnectionVgwTelemetry) *string { return v.State }).(pulumi.StringPtrOutput)
}

// A description of the current state of the tunnel.
func (o VpnConnectionVgwTelemetryOutput) StateDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnConnectionVgwTelemetry) *string { return v.StateDescription }).(pulumi.StringPtrOutput)
}

type VpnConnectionVgwTelemetryArrayOutput struct{ *pulumi.OutputState }

func (VpnConnectionVgwTelemetryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnConnectionVgwTelemetry)(nil)).Elem()
}

func (o VpnConnectionVgwTelemetryArrayOutput) ToVpnConnectionVgwTelemetryArrayOutput() VpnConnectionVgwTelemetryArrayOutput {
	return o
}

func (o VpnConnectionVgwTelemetryArrayOutput) ToVpnConnectionVgwTelemetryArrayOutputWithContext(ctx context.Context) VpnConnectionVgwTelemetryArrayOutput {
	return o
}

func (o VpnConnectionVgwTelemetryArrayOutput) Index(i pulumi.IntInput) VpnConnectionVgwTelemetryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnConnectionVgwTelemetry {
		return vs[0].([]VpnConnectionVgwTelemetry)[vs[1].(int)]
	}).(VpnConnectionVgwTelemetryOutput)
}

type GetAccessKeyFilter struct {
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// GetAccessKeyFilterInput is an input type that accepts GetAccessKeyFilterArgs and GetAccessKeyFilterOutput values.
// You can construct a concrete instance of `GetAccessKeyFilterInput` via:
//
//	GetAccessKeyFilterArgs{...}
type GetAccessKeyFilterInput interface {
	pulumi.Input

	ToGetAccessKeyFilterOutput() GetAccessKeyFilterOutput
	ToGetAccessKeyFilterOutputWithContext(context.Context) GetAccessKeyFilterOutput
}

type GetAccessKeyFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetAccessKeyFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAccessKeyFilter)(nil)).Elem()
}

func (i GetAccessKeyFilterArgs) ToGetAccessKeyFilterOutput() GetAccessKeyFilterOutput {
	return i.ToGetAccessKeyFilterOutputWithContext(context.Background())
}

func (i GetAccessKeyFilterArgs) ToGetAccessKeyFilterOutputWithContext(ctx context.Context) GetAccessKeyFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAccessKeyFilterOutput)
}

// GetAccessKeyFilterArrayInput is an input type that accepts GetAccessKeyFilterArray and GetAccessKeyFilterArrayOutput values.
// You can construct a concrete instance of `GetAccessKeyFilterArrayInput` via:
//
//	GetAccessKeyFilterArray{ GetAccessKeyFilterArgs{...} }
type GetAccessKeyFilterArrayInput interface {
	pulumi.Input

	ToGetAccessKeyFilterArrayOutput() GetAccessKeyFilterArrayOutput
	ToGetAccessKeyFilterArrayOutputWithContext(context.Context) GetAccessKeyFilterArrayOutput
}

type GetAccessKeyFilterArray []GetAccessKeyFilterInput

func (GetAccessKeyFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAccessKeyFilter)(nil)).Elem()
}

func (i GetAccessKeyFilterArray) ToGetAccessKeyFilterArrayOutput() GetAccessKeyFilterArrayOutput {
	return i.ToGetAccessKeyFilterArrayOutputWithContext(context.Background())
}

func (i GetAccessKeyFilterArray) ToGetAccessKeyFilterArrayOutputWithContext(ctx context.Context) GetAccessKeyFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAccessKeyFilterArrayOutput)
}

type GetAccessKeyFilterOutput struct{ *pulumi.OutputState }

func (GetAccessKeyFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAccessKeyFilter)(nil)).Elem()
}

func (o GetAccessKeyFilterOutput) ToGetAccessKeyFilterOutput() GetAccessKeyFilterOutput {
	return o
}

func (o GetAccessKeyFilterOutput) ToGetAccessKeyFilterOutputWithContext(ctx context.Context) GetAccessKeyFilterOutput {
	return o
}

func (o GetAccessKeyFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccessKeyFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetAccessKeyFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetAccessKeyFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetAccessKeyFilterArrayOutput struct{ *pulumi.OutputState }

func (GetAccessKeyFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAccessKeyFilter)(nil)).Elem()
}

func (o GetAccessKeyFilterArrayOutput) ToGetAccessKeyFilterArrayOutput() GetAccessKeyFilterArrayOutput {
	return o
}

func (o GetAccessKeyFilterArrayOutput) ToGetAccessKeyFilterArrayOutputWithContext(ctx context.Context) GetAccessKeyFilterArrayOutput {
	return o
}

func (o GetAccessKeyFilterArrayOutput) Index(i pulumi.IntInput) GetAccessKeyFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAccessKeyFilter {
		return vs[0].([]GetAccessKeyFilter)[vs[1].(int)]
	}).(GetAccessKeyFilterOutput)
}

type GetAccessKeysAccessKey struct {
	// The ID of the access key.
	AccessKeyId string `pulumi:"accessKeyId"`
	// The date and time (UTC) at which the access key was created.
	CreationDate string `pulumi:"creationDate"`
	// The date and time (UTC) at which the access key expires.
	ExpirationDate string `pulumi:"expirationDate"`
	// The date and time (UTC) at which the access key was last modified.
	LastModificationDate string `pulumi:"lastModificationDate"`
	// The state of the access key (`ACTIVE` if the key is valid for API calls, or `INACTIVE` if not).
	State string `pulumi:"state"`
}

// GetAccessKeysAccessKeyInput is an input type that accepts GetAccessKeysAccessKeyArgs and GetAccessKeysAccessKeyOutput values.
// You can construct a concrete instance of `GetAccessKeysAccessKeyInput` via:
//
//	GetAccessKeysAccessKeyArgs{...}
type GetAccessKeysAccessKeyInput interface {
	pulumi.Input

	ToGetAccessKeysAccessKeyOutput() GetAccessKeysAccessKeyOutput
	ToGetAccessKeysAccessKeyOutputWithContext(context.Context) GetAccessKeysAccessKeyOutput
}

type GetAccessKeysAccessKeyArgs struct {
	// The ID of the access key.
	AccessKeyId pulumi.StringInput `pulumi:"accessKeyId"`
	// The date and time (UTC) at which the access key was created.
	CreationDate pulumi.StringInput `pulumi:"creationDate"`
	// The date and time (UTC) at which the access key expires.
	ExpirationDate pulumi.StringInput `pulumi:"expirationDate"`
	// The date and time (UTC) at which the access key was last modified.
	LastModificationDate pulumi.StringInput `pulumi:"lastModificationDate"`
	// The state of the access key (`ACTIVE` if the key is valid for API calls, or `INACTIVE` if not).
	State pulumi.StringInput `pulumi:"state"`
}

func (GetAccessKeysAccessKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAccessKeysAccessKey)(nil)).Elem()
}

func (i GetAccessKeysAccessKeyArgs) ToGetAccessKeysAccessKeyOutput() GetAccessKeysAccessKeyOutput {
	return i.ToGetAccessKeysAccessKeyOutputWithContext(context.Background())
}

func (i GetAccessKeysAccessKeyArgs) ToGetAccessKeysAccessKeyOutputWithContext(ctx context.Context) GetAccessKeysAccessKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAccessKeysAccessKeyOutput)
}

// GetAccessKeysAccessKeyArrayInput is an input type that accepts GetAccessKeysAccessKeyArray and GetAccessKeysAccessKeyArrayOutput values.
// You can construct a concrete instance of `GetAccessKeysAccessKeyArrayInput` via:
//
//	GetAccessKeysAccessKeyArray{ GetAccessKeysAccessKeyArgs{...} }
type GetAccessKeysAccessKeyArrayInput interface {
	pulumi.Input

	ToGetAccessKeysAccessKeyArrayOutput() GetAccessKeysAccessKeyArrayOutput
	ToGetAccessKeysAccessKeyArrayOutputWithContext(context.Context) GetAccessKeysAccessKeyArrayOutput
}

type GetAccessKeysAccessKeyArray []GetAccessKeysAccessKeyInput

func (GetAccessKeysAccessKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAccessKeysAccessKey)(nil)).Elem()
}

func (i GetAccessKeysAccessKeyArray) ToGetAccessKeysAccessKeyArrayOutput() GetAccessKeysAccessKeyArrayOutput {
	return i.ToGetAccessKeysAccessKeyArrayOutputWithContext(context.Background())
}

func (i GetAccessKeysAccessKeyArray) ToGetAccessKeysAccessKeyArrayOutputWithContext(ctx context.Context) GetAccessKeysAccessKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAccessKeysAccessKeyArrayOutput)
}

type GetAccessKeysAccessKeyOutput struct{ *pulumi.OutputState }

func (GetAccessKeysAccessKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAccessKeysAccessKey)(nil)).Elem()
}

func (o GetAccessKeysAccessKeyOutput) ToGetAccessKeysAccessKeyOutput() GetAccessKeysAccessKeyOutput {
	return o
}

func (o GetAccessKeysAccessKeyOutput) ToGetAccessKeysAccessKeyOutputWithContext(ctx context.Context) GetAccessKeysAccessKeyOutput {
	return o
}

// The ID of the access key.
func (o GetAccessKeysAccessKeyOutput) AccessKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccessKeysAccessKey) string { return v.AccessKeyId }).(pulumi.StringOutput)
}

// The date and time (UTC) at which the access key was created.
func (o GetAccessKeysAccessKeyOutput) CreationDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccessKeysAccessKey) string { return v.CreationDate }).(pulumi.StringOutput)
}

// The date and time (UTC) at which the access key expires.
func (o GetAccessKeysAccessKeyOutput) ExpirationDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccessKeysAccessKey) string { return v.ExpirationDate }).(pulumi.StringOutput)
}

// The date and time (UTC) at which the access key was last modified.
func (o GetAccessKeysAccessKeyOutput) LastModificationDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccessKeysAccessKey) string { return v.LastModificationDate }).(pulumi.StringOutput)
}

// The state of the access key (`ACTIVE` if the key is valid for API calls, or `INACTIVE` if not).
func (o GetAccessKeysAccessKeyOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccessKeysAccessKey) string { return v.State }).(pulumi.StringOutput)
}

type GetAccessKeysAccessKeyArrayOutput struct{ *pulumi.OutputState }

func (GetAccessKeysAccessKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAccessKeysAccessKey)(nil)).Elem()
}

func (o GetAccessKeysAccessKeyArrayOutput) ToGetAccessKeysAccessKeyArrayOutput() GetAccessKeysAccessKeyArrayOutput {
	return o
}

func (o GetAccessKeysAccessKeyArrayOutput) ToGetAccessKeysAccessKeyArrayOutputWithContext(ctx context.Context) GetAccessKeysAccessKeyArrayOutput {
	return o
}

func (o GetAccessKeysAccessKeyArrayOutput) Index(i pulumi.IntInput) GetAccessKeysAccessKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAccessKeysAccessKey {
		return vs[0].([]GetAccessKeysAccessKey)[vs[1].(int)]
	}).(GetAccessKeysAccessKeyOutput)
}

type GetAccessKeysFilter struct {
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// GetAccessKeysFilterInput is an input type that accepts GetAccessKeysFilterArgs and GetAccessKeysFilterOutput values.
// You can construct a concrete instance of `GetAccessKeysFilterInput` via:
//
//	GetAccessKeysFilterArgs{...}
type GetAccessKeysFilterInput interface {
	pulumi.Input

	ToGetAccessKeysFilterOutput() GetAccessKeysFilterOutput
	ToGetAccessKeysFilterOutputWithContext(context.Context) GetAccessKeysFilterOutput
}

type GetAccessKeysFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetAccessKeysFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAccessKeysFilter)(nil)).Elem()
}

func (i GetAccessKeysFilterArgs) ToGetAccessKeysFilterOutput() GetAccessKeysFilterOutput {
	return i.ToGetAccessKeysFilterOutputWithContext(context.Background())
}

func (i GetAccessKeysFilterArgs) ToGetAccessKeysFilterOutputWithContext(ctx context.Context) GetAccessKeysFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAccessKeysFilterOutput)
}

// GetAccessKeysFilterArrayInput is an input type that accepts GetAccessKeysFilterArray and GetAccessKeysFilterArrayOutput values.
// You can construct a concrete instance of `GetAccessKeysFilterArrayInput` via:
//
//	GetAccessKeysFilterArray{ GetAccessKeysFilterArgs{...} }
type GetAccessKeysFilterArrayInput interface {
	pulumi.Input

	ToGetAccessKeysFilterArrayOutput() GetAccessKeysFilterArrayOutput
	ToGetAccessKeysFilterArrayOutputWithContext(context.Context) GetAccessKeysFilterArrayOutput
}

type GetAccessKeysFilterArray []GetAccessKeysFilterInput

func (GetAccessKeysFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAccessKeysFilter)(nil)).Elem()
}

func (i GetAccessKeysFilterArray) ToGetAccessKeysFilterArrayOutput() GetAccessKeysFilterArrayOutput {
	return i.ToGetAccessKeysFilterArrayOutputWithContext(context.Background())
}

func (i GetAccessKeysFilterArray) ToGetAccessKeysFilterArrayOutputWithContext(ctx context.Context) GetAccessKeysFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAccessKeysFilterArrayOutput)
}

type GetAccessKeysFilterOutput struct{ *pulumi.OutputState }

func (GetAccessKeysFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAccessKeysFilter)(nil)).Elem()
}

func (o GetAccessKeysFilterOutput) ToGetAccessKeysFilterOutput() GetAccessKeysFilterOutput {
	return o
}

func (o GetAccessKeysFilterOutput) ToGetAccessKeysFilterOutputWithContext(ctx context.Context) GetAccessKeysFilterOutput {
	return o
}

func (o GetAccessKeysFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccessKeysFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetAccessKeysFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetAccessKeysFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetAccessKeysFilterArrayOutput struct{ *pulumi.OutputState }

func (GetAccessKeysFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAccessKeysFilter)(nil)).Elem()
}

func (o GetAccessKeysFilterArrayOutput) ToGetAccessKeysFilterArrayOutput() GetAccessKeysFilterArrayOutput {
	return o
}

func (o GetAccessKeysFilterArrayOutput) ToGetAccessKeysFilterArrayOutputWithContext(ctx context.Context) GetAccessKeysFilterArrayOutput {
	return o
}

func (o GetAccessKeysFilterArrayOutput) Index(i pulumi.IntInput) GetAccessKeysFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAccessKeysFilter {
		return vs[0].([]GetAccessKeysFilter)[vs[1].(int)]
	}).(GetAccessKeysFilterOutput)
}

type GetAccountsAccount struct {
	// The ID of the account.
	AccountId string `pulumi:"accountId"`
	// One or more additional email addresses for the account. These addresses are used for notifications only.
	AdditionalEmails []string `pulumi:"additionalEmails"`
	// The city of the account owner.
	City string `pulumi:"city"`
	// The name of the company for the account.
	CompanyName string `pulumi:"companyName"`
	// The country of the account owner.
	Country string `pulumi:"country"`
	// The ID of the customer.
	CustomerId string `pulumi:"customerId"`
	// The main email address for the account. This address is used for your credentials and for notifications.
	Email string `pulumi:"email"`
	// The first name of the account owner.
	FirstName string `pulumi:"firstName"`
	// The job title of the account owner.
	JobTitle string `pulumi:"jobTitle"`
	// The last name of the account owner.
	LastName string `pulumi:"lastName"`
	// The mobile phone number of the account owner.
	MobileNumber string `pulumi:"mobileNumber"`
	// The landline phone number of the account owner.
	PhoneNumber string `pulumi:"phoneNumber"`
	// The state/province of the account.
	StateProvince string `pulumi:"stateProvince"`
	// The value added tax (VAT) number for the account.
	VatNumber string `pulumi:"vatNumber"`
	// The ZIP code of the city.
	ZipCode string `pulumi:"zipCode"`
}

// GetAccountsAccountInput is an input type that accepts GetAccountsAccountArgs and GetAccountsAccountOutput values.
// You can construct a concrete instance of `GetAccountsAccountInput` via:
//
//	GetAccountsAccountArgs{...}
type GetAccountsAccountInput interface {
	pulumi.Input

	ToGetAccountsAccountOutput() GetAccountsAccountOutput
	ToGetAccountsAccountOutputWithContext(context.Context) GetAccountsAccountOutput
}

type GetAccountsAccountArgs struct {
	// The ID of the account.
	AccountId pulumi.StringInput `pulumi:"accountId"`
	// One or more additional email addresses for the account. These addresses are used for notifications only.
	AdditionalEmails pulumi.StringArrayInput `pulumi:"additionalEmails"`
	// The city of the account owner.
	City pulumi.StringInput `pulumi:"city"`
	// The name of the company for the account.
	CompanyName pulumi.StringInput `pulumi:"companyName"`
	// The country of the account owner.
	Country pulumi.StringInput `pulumi:"country"`
	// The ID of the customer.
	CustomerId pulumi.StringInput `pulumi:"customerId"`
	// The main email address for the account. This address is used for your credentials and for notifications.
	Email pulumi.StringInput `pulumi:"email"`
	// The first name of the account owner.
	FirstName pulumi.StringInput `pulumi:"firstName"`
	// The job title of the account owner.
	JobTitle pulumi.StringInput `pulumi:"jobTitle"`
	// The last name of the account owner.
	LastName pulumi.StringInput `pulumi:"lastName"`
	// The mobile phone number of the account owner.
	MobileNumber pulumi.StringInput `pulumi:"mobileNumber"`
	// The landline phone number of the account owner.
	PhoneNumber pulumi.StringInput `pulumi:"phoneNumber"`
	// The state/province of the account.
	StateProvince pulumi.StringInput `pulumi:"stateProvince"`
	// The value added tax (VAT) number for the account.
	VatNumber pulumi.StringInput `pulumi:"vatNumber"`
	// The ZIP code of the city.
	ZipCode pulumi.StringInput `pulumi:"zipCode"`
}

func (GetAccountsAccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAccountsAccount)(nil)).Elem()
}

func (i GetAccountsAccountArgs) ToGetAccountsAccountOutput() GetAccountsAccountOutput {
	return i.ToGetAccountsAccountOutputWithContext(context.Background())
}

func (i GetAccountsAccountArgs) ToGetAccountsAccountOutputWithContext(ctx context.Context) GetAccountsAccountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAccountsAccountOutput)
}

// GetAccountsAccountArrayInput is an input type that accepts GetAccountsAccountArray and GetAccountsAccountArrayOutput values.
// You can construct a concrete instance of `GetAccountsAccountArrayInput` via:
//
//	GetAccountsAccountArray{ GetAccountsAccountArgs{...} }
type GetAccountsAccountArrayInput interface {
	pulumi.Input

	ToGetAccountsAccountArrayOutput() GetAccountsAccountArrayOutput
	ToGetAccountsAccountArrayOutputWithContext(context.Context) GetAccountsAccountArrayOutput
}

type GetAccountsAccountArray []GetAccountsAccountInput

func (GetAccountsAccountArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAccountsAccount)(nil)).Elem()
}

func (i GetAccountsAccountArray) ToGetAccountsAccountArrayOutput() GetAccountsAccountArrayOutput {
	return i.ToGetAccountsAccountArrayOutputWithContext(context.Background())
}

func (i GetAccountsAccountArray) ToGetAccountsAccountArrayOutputWithContext(ctx context.Context) GetAccountsAccountArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAccountsAccountArrayOutput)
}

type GetAccountsAccountOutput struct{ *pulumi.OutputState }

func (GetAccountsAccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAccountsAccount)(nil)).Elem()
}

func (o GetAccountsAccountOutput) ToGetAccountsAccountOutput() GetAccountsAccountOutput {
	return o
}

func (o GetAccountsAccountOutput) ToGetAccountsAccountOutputWithContext(ctx context.Context) GetAccountsAccountOutput {
	return o
}

// The ID of the account.
func (o GetAccountsAccountOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccountsAccount) string { return v.AccountId }).(pulumi.StringOutput)
}

// One or more additional email addresses for the account. These addresses are used for notifications only.
func (o GetAccountsAccountOutput) AdditionalEmails() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetAccountsAccount) []string { return v.AdditionalEmails }).(pulumi.StringArrayOutput)
}

// The city of the account owner.
func (o GetAccountsAccountOutput) City() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccountsAccount) string { return v.City }).(pulumi.StringOutput)
}

// The name of the company for the account.
func (o GetAccountsAccountOutput) CompanyName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccountsAccount) string { return v.CompanyName }).(pulumi.StringOutput)
}

// The country of the account owner.
func (o GetAccountsAccountOutput) Country() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccountsAccount) string { return v.Country }).(pulumi.StringOutput)
}

// The ID of the customer.
func (o GetAccountsAccountOutput) CustomerId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccountsAccount) string { return v.CustomerId }).(pulumi.StringOutput)
}

// The main email address for the account. This address is used for your credentials and for notifications.
func (o GetAccountsAccountOutput) Email() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccountsAccount) string { return v.Email }).(pulumi.StringOutput)
}

// The first name of the account owner.
func (o GetAccountsAccountOutput) FirstName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccountsAccount) string { return v.FirstName }).(pulumi.StringOutput)
}

// The job title of the account owner.
func (o GetAccountsAccountOutput) JobTitle() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccountsAccount) string { return v.JobTitle }).(pulumi.StringOutput)
}

// The last name of the account owner.
func (o GetAccountsAccountOutput) LastName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccountsAccount) string { return v.LastName }).(pulumi.StringOutput)
}

// The mobile phone number of the account owner.
func (o GetAccountsAccountOutput) MobileNumber() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccountsAccount) string { return v.MobileNumber }).(pulumi.StringOutput)
}

// The landline phone number of the account owner.
func (o GetAccountsAccountOutput) PhoneNumber() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccountsAccount) string { return v.PhoneNumber }).(pulumi.StringOutput)
}

// The state/province of the account.
func (o GetAccountsAccountOutput) StateProvince() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccountsAccount) string { return v.StateProvince }).(pulumi.StringOutput)
}

// The value added tax (VAT) number for the account.
func (o GetAccountsAccountOutput) VatNumber() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccountsAccount) string { return v.VatNumber }).(pulumi.StringOutput)
}

// The ZIP code of the city.
func (o GetAccountsAccountOutput) ZipCode() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccountsAccount) string { return v.ZipCode }).(pulumi.StringOutput)
}

type GetAccountsAccountArrayOutput struct{ *pulumi.OutputState }

func (GetAccountsAccountArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAccountsAccount)(nil)).Elem()
}

func (o GetAccountsAccountArrayOutput) ToGetAccountsAccountArrayOutput() GetAccountsAccountArrayOutput {
	return o
}

func (o GetAccountsAccountArrayOutput) ToGetAccountsAccountArrayOutputWithContext(ctx context.Context) GetAccountsAccountArrayOutput {
	return o
}

func (o GetAccountsAccountArrayOutput) Index(i pulumi.IntInput) GetAccountsAccountOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAccountsAccount {
		return vs[0].([]GetAccountsAccount)[vs[1].(int)]
	}).(GetAccountsAccountOutput)
}

type GetApiAccessRuleFilter struct {
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// GetApiAccessRuleFilterInput is an input type that accepts GetApiAccessRuleFilterArgs and GetApiAccessRuleFilterOutput values.
// You can construct a concrete instance of `GetApiAccessRuleFilterInput` via:
//
//	GetApiAccessRuleFilterArgs{...}
type GetApiAccessRuleFilterInput interface {
	pulumi.Input

	ToGetApiAccessRuleFilterOutput() GetApiAccessRuleFilterOutput
	ToGetApiAccessRuleFilterOutputWithContext(context.Context) GetApiAccessRuleFilterOutput
}

type GetApiAccessRuleFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetApiAccessRuleFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApiAccessRuleFilter)(nil)).Elem()
}

func (i GetApiAccessRuleFilterArgs) ToGetApiAccessRuleFilterOutput() GetApiAccessRuleFilterOutput {
	return i.ToGetApiAccessRuleFilterOutputWithContext(context.Background())
}

func (i GetApiAccessRuleFilterArgs) ToGetApiAccessRuleFilterOutputWithContext(ctx context.Context) GetApiAccessRuleFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApiAccessRuleFilterOutput)
}

// GetApiAccessRuleFilterArrayInput is an input type that accepts GetApiAccessRuleFilterArray and GetApiAccessRuleFilterArrayOutput values.
// You can construct a concrete instance of `GetApiAccessRuleFilterArrayInput` via:
//
//	GetApiAccessRuleFilterArray{ GetApiAccessRuleFilterArgs{...} }
type GetApiAccessRuleFilterArrayInput interface {
	pulumi.Input

	ToGetApiAccessRuleFilterArrayOutput() GetApiAccessRuleFilterArrayOutput
	ToGetApiAccessRuleFilterArrayOutputWithContext(context.Context) GetApiAccessRuleFilterArrayOutput
}

type GetApiAccessRuleFilterArray []GetApiAccessRuleFilterInput

func (GetApiAccessRuleFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApiAccessRuleFilter)(nil)).Elem()
}

func (i GetApiAccessRuleFilterArray) ToGetApiAccessRuleFilterArrayOutput() GetApiAccessRuleFilterArrayOutput {
	return i.ToGetApiAccessRuleFilterArrayOutputWithContext(context.Background())
}

func (i GetApiAccessRuleFilterArray) ToGetApiAccessRuleFilterArrayOutputWithContext(ctx context.Context) GetApiAccessRuleFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApiAccessRuleFilterArrayOutput)
}

type GetApiAccessRuleFilterOutput struct{ *pulumi.OutputState }

func (GetApiAccessRuleFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApiAccessRuleFilter)(nil)).Elem()
}

func (o GetApiAccessRuleFilterOutput) ToGetApiAccessRuleFilterOutput() GetApiAccessRuleFilterOutput {
	return o
}

func (o GetApiAccessRuleFilterOutput) ToGetApiAccessRuleFilterOutputWithContext(ctx context.Context) GetApiAccessRuleFilterOutput {
	return o
}

func (o GetApiAccessRuleFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetApiAccessRuleFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetApiAccessRuleFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetApiAccessRuleFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetApiAccessRuleFilterArrayOutput struct{ *pulumi.OutputState }

func (GetApiAccessRuleFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApiAccessRuleFilter)(nil)).Elem()
}

func (o GetApiAccessRuleFilterArrayOutput) ToGetApiAccessRuleFilterArrayOutput() GetApiAccessRuleFilterArrayOutput {
	return o
}

func (o GetApiAccessRuleFilterArrayOutput) ToGetApiAccessRuleFilterArrayOutputWithContext(ctx context.Context) GetApiAccessRuleFilterArrayOutput {
	return o
}

func (o GetApiAccessRuleFilterArrayOutput) Index(i pulumi.IntInput) GetApiAccessRuleFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApiAccessRuleFilter {
		return vs[0].([]GetApiAccessRuleFilter)[vs[1].(int)]
	}).(GetApiAccessRuleFilterOutput)
}

type GetApiAccessRulesApiAccessRule struct {
	// The ID of the API access rule.
	ApiAccessRuleId string `pulumi:"apiAccessRuleId"`
	// One or more IDs of Client Certificate Authorities (CAs) used for the API access rule.
	CaIds []string `pulumi:"caIds"`
	// One or more Client Certificate Common Names (CNs).
	Cns []string `pulumi:"cns"`
	// The description of the API access rule.
	Description string `pulumi:"description"`
	// One or more IP ranges used for the API access rule, in CIDR notation (for example, `192.0.2.0/16`).
	IpRanges []string `pulumi:"ipRanges"`
}

// GetApiAccessRulesApiAccessRuleInput is an input type that accepts GetApiAccessRulesApiAccessRuleArgs and GetApiAccessRulesApiAccessRuleOutput values.
// You can construct a concrete instance of `GetApiAccessRulesApiAccessRuleInput` via:
//
//	GetApiAccessRulesApiAccessRuleArgs{...}
type GetApiAccessRulesApiAccessRuleInput interface {
	pulumi.Input

	ToGetApiAccessRulesApiAccessRuleOutput() GetApiAccessRulesApiAccessRuleOutput
	ToGetApiAccessRulesApiAccessRuleOutputWithContext(context.Context) GetApiAccessRulesApiAccessRuleOutput
}

type GetApiAccessRulesApiAccessRuleArgs struct {
	// The ID of the API access rule.
	ApiAccessRuleId pulumi.StringInput `pulumi:"apiAccessRuleId"`
	// One or more IDs of Client Certificate Authorities (CAs) used for the API access rule.
	CaIds pulumi.StringArrayInput `pulumi:"caIds"`
	// One or more Client Certificate Common Names (CNs).
	Cns pulumi.StringArrayInput `pulumi:"cns"`
	// The description of the API access rule.
	Description pulumi.StringInput `pulumi:"description"`
	// One or more IP ranges used for the API access rule, in CIDR notation (for example, `192.0.2.0/16`).
	IpRanges pulumi.StringArrayInput `pulumi:"ipRanges"`
}

func (GetApiAccessRulesApiAccessRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApiAccessRulesApiAccessRule)(nil)).Elem()
}

func (i GetApiAccessRulesApiAccessRuleArgs) ToGetApiAccessRulesApiAccessRuleOutput() GetApiAccessRulesApiAccessRuleOutput {
	return i.ToGetApiAccessRulesApiAccessRuleOutputWithContext(context.Background())
}

func (i GetApiAccessRulesApiAccessRuleArgs) ToGetApiAccessRulesApiAccessRuleOutputWithContext(ctx context.Context) GetApiAccessRulesApiAccessRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApiAccessRulesApiAccessRuleOutput)
}

// GetApiAccessRulesApiAccessRuleArrayInput is an input type that accepts GetApiAccessRulesApiAccessRuleArray and GetApiAccessRulesApiAccessRuleArrayOutput values.
// You can construct a concrete instance of `GetApiAccessRulesApiAccessRuleArrayInput` via:
//
//	GetApiAccessRulesApiAccessRuleArray{ GetApiAccessRulesApiAccessRuleArgs{...} }
type GetApiAccessRulesApiAccessRuleArrayInput interface {
	pulumi.Input

	ToGetApiAccessRulesApiAccessRuleArrayOutput() GetApiAccessRulesApiAccessRuleArrayOutput
	ToGetApiAccessRulesApiAccessRuleArrayOutputWithContext(context.Context) GetApiAccessRulesApiAccessRuleArrayOutput
}

type GetApiAccessRulesApiAccessRuleArray []GetApiAccessRulesApiAccessRuleInput

func (GetApiAccessRulesApiAccessRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApiAccessRulesApiAccessRule)(nil)).Elem()
}

func (i GetApiAccessRulesApiAccessRuleArray) ToGetApiAccessRulesApiAccessRuleArrayOutput() GetApiAccessRulesApiAccessRuleArrayOutput {
	return i.ToGetApiAccessRulesApiAccessRuleArrayOutputWithContext(context.Background())
}

func (i GetApiAccessRulesApiAccessRuleArray) ToGetApiAccessRulesApiAccessRuleArrayOutputWithContext(ctx context.Context) GetApiAccessRulesApiAccessRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApiAccessRulesApiAccessRuleArrayOutput)
}

type GetApiAccessRulesApiAccessRuleOutput struct{ *pulumi.OutputState }

func (GetApiAccessRulesApiAccessRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApiAccessRulesApiAccessRule)(nil)).Elem()
}

func (o GetApiAccessRulesApiAccessRuleOutput) ToGetApiAccessRulesApiAccessRuleOutput() GetApiAccessRulesApiAccessRuleOutput {
	return o
}

func (o GetApiAccessRulesApiAccessRuleOutput) ToGetApiAccessRulesApiAccessRuleOutputWithContext(ctx context.Context) GetApiAccessRulesApiAccessRuleOutput {
	return o
}

// The ID of the API access rule.
func (o GetApiAccessRulesApiAccessRuleOutput) ApiAccessRuleId() pulumi.StringOutput {
	return o.ApplyT(func(v GetApiAccessRulesApiAccessRule) string { return v.ApiAccessRuleId }).(pulumi.StringOutput)
}

// One or more IDs of Client Certificate Authorities (CAs) used for the API access rule.
func (o GetApiAccessRulesApiAccessRuleOutput) CaIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetApiAccessRulesApiAccessRule) []string { return v.CaIds }).(pulumi.StringArrayOutput)
}

// One or more Client Certificate Common Names (CNs).
func (o GetApiAccessRulesApiAccessRuleOutput) Cns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetApiAccessRulesApiAccessRule) []string { return v.Cns }).(pulumi.StringArrayOutput)
}

// The description of the API access rule.
func (o GetApiAccessRulesApiAccessRuleOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetApiAccessRulesApiAccessRule) string { return v.Description }).(pulumi.StringOutput)
}

// One or more IP ranges used for the API access rule, in CIDR notation (for example, `192.0.2.0/16`).
func (o GetApiAccessRulesApiAccessRuleOutput) IpRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetApiAccessRulesApiAccessRule) []string { return v.IpRanges }).(pulumi.StringArrayOutput)
}

type GetApiAccessRulesApiAccessRuleArrayOutput struct{ *pulumi.OutputState }

func (GetApiAccessRulesApiAccessRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApiAccessRulesApiAccessRule)(nil)).Elem()
}

func (o GetApiAccessRulesApiAccessRuleArrayOutput) ToGetApiAccessRulesApiAccessRuleArrayOutput() GetApiAccessRulesApiAccessRuleArrayOutput {
	return o
}

func (o GetApiAccessRulesApiAccessRuleArrayOutput) ToGetApiAccessRulesApiAccessRuleArrayOutputWithContext(ctx context.Context) GetApiAccessRulesApiAccessRuleArrayOutput {
	return o
}

func (o GetApiAccessRulesApiAccessRuleArrayOutput) Index(i pulumi.IntInput) GetApiAccessRulesApiAccessRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApiAccessRulesApiAccessRule {
		return vs[0].([]GetApiAccessRulesApiAccessRule)[vs[1].(int)]
	}).(GetApiAccessRulesApiAccessRuleOutput)
}

type GetApiAccessRulesFilter struct {
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// GetApiAccessRulesFilterInput is an input type that accepts GetApiAccessRulesFilterArgs and GetApiAccessRulesFilterOutput values.
// You can construct a concrete instance of `GetApiAccessRulesFilterInput` via:
//
//	GetApiAccessRulesFilterArgs{...}
type GetApiAccessRulesFilterInput interface {
	pulumi.Input

	ToGetApiAccessRulesFilterOutput() GetApiAccessRulesFilterOutput
	ToGetApiAccessRulesFilterOutputWithContext(context.Context) GetApiAccessRulesFilterOutput
}

type GetApiAccessRulesFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetApiAccessRulesFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApiAccessRulesFilter)(nil)).Elem()
}

func (i GetApiAccessRulesFilterArgs) ToGetApiAccessRulesFilterOutput() GetApiAccessRulesFilterOutput {
	return i.ToGetApiAccessRulesFilterOutputWithContext(context.Background())
}

func (i GetApiAccessRulesFilterArgs) ToGetApiAccessRulesFilterOutputWithContext(ctx context.Context) GetApiAccessRulesFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApiAccessRulesFilterOutput)
}

// GetApiAccessRulesFilterArrayInput is an input type that accepts GetApiAccessRulesFilterArray and GetApiAccessRulesFilterArrayOutput values.
// You can construct a concrete instance of `GetApiAccessRulesFilterArrayInput` via:
//
//	GetApiAccessRulesFilterArray{ GetApiAccessRulesFilterArgs{...} }
type GetApiAccessRulesFilterArrayInput interface {
	pulumi.Input

	ToGetApiAccessRulesFilterArrayOutput() GetApiAccessRulesFilterArrayOutput
	ToGetApiAccessRulesFilterArrayOutputWithContext(context.Context) GetApiAccessRulesFilterArrayOutput
}

type GetApiAccessRulesFilterArray []GetApiAccessRulesFilterInput

func (GetApiAccessRulesFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApiAccessRulesFilter)(nil)).Elem()
}

func (i GetApiAccessRulesFilterArray) ToGetApiAccessRulesFilterArrayOutput() GetApiAccessRulesFilterArrayOutput {
	return i.ToGetApiAccessRulesFilterArrayOutputWithContext(context.Background())
}

func (i GetApiAccessRulesFilterArray) ToGetApiAccessRulesFilterArrayOutputWithContext(ctx context.Context) GetApiAccessRulesFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApiAccessRulesFilterArrayOutput)
}

type GetApiAccessRulesFilterOutput struct{ *pulumi.OutputState }

func (GetApiAccessRulesFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApiAccessRulesFilter)(nil)).Elem()
}

func (o GetApiAccessRulesFilterOutput) ToGetApiAccessRulesFilterOutput() GetApiAccessRulesFilterOutput {
	return o
}

func (o GetApiAccessRulesFilterOutput) ToGetApiAccessRulesFilterOutputWithContext(ctx context.Context) GetApiAccessRulesFilterOutput {
	return o
}

func (o GetApiAccessRulesFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetApiAccessRulesFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetApiAccessRulesFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetApiAccessRulesFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetApiAccessRulesFilterArrayOutput struct{ *pulumi.OutputState }

func (GetApiAccessRulesFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApiAccessRulesFilter)(nil)).Elem()
}

func (o GetApiAccessRulesFilterArrayOutput) ToGetApiAccessRulesFilterArrayOutput() GetApiAccessRulesFilterArrayOutput {
	return o
}

func (o GetApiAccessRulesFilterArrayOutput) ToGetApiAccessRulesFilterArrayOutputWithContext(ctx context.Context) GetApiAccessRulesFilterArrayOutput {
	return o
}

func (o GetApiAccessRulesFilterArrayOutput) Index(i pulumi.IntInput) GetApiAccessRulesFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApiAccessRulesFilter {
		return vs[0].([]GetApiAccessRulesFilter)[vs[1].(int)]
	}).(GetApiAccessRulesFilterOutput)
}

type GetCaFilter struct {
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// GetCaFilterInput is an input type that accepts GetCaFilterArgs and GetCaFilterOutput values.
// You can construct a concrete instance of `GetCaFilterInput` via:
//
//	GetCaFilterArgs{...}
type GetCaFilterInput interface {
	pulumi.Input

	ToGetCaFilterOutput() GetCaFilterOutput
	ToGetCaFilterOutputWithContext(context.Context) GetCaFilterOutput
}

type GetCaFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetCaFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCaFilter)(nil)).Elem()
}

func (i GetCaFilterArgs) ToGetCaFilterOutput() GetCaFilterOutput {
	return i.ToGetCaFilterOutputWithContext(context.Background())
}

func (i GetCaFilterArgs) ToGetCaFilterOutputWithContext(ctx context.Context) GetCaFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCaFilterOutput)
}

// GetCaFilterArrayInput is an input type that accepts GetCaFilterArray and GetCaFilterArrayOutput values.
// You can construct a concrete instance of `GetCaFilterArrayInput` via:
//
//	GetCaFilterArray{ GetCaFilterArgs{...} }
type GetCaFilterArrayInput interface {
	pulumi.Input

	ToGetCaFilterArrayOutput() GetCaFilterArrayOutput
	ToGetCaFilterArrayOutputWithContext(context.Context) GetCaFilterArrayOutput
}

type GetCaFilterArray []GetCaFilterInput

func (GetCaFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCaFilter)(nil)).Elem()
}

func (i GetCaFilterArray) ToGetCaFilterArrayOutput() GetCaFilterArrayOutput {
	return i.ToGetCaFilterArrayOutputWithContext(context.Background())
}

func (i GetCaFilterArray) ToGetCaFilterArrayOutputWithContext(ctx context.Context) GetCaFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCaFilterArrayOutput)
}

type GetCaFilterOutput struct{ *pulumi.OutputState }

func (GetCaFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCaFilter)(nil)).Elem()
}

func (o GetCaFilterOutput) ToGetCaFilterOutput() GetCaFilterOutput {
	return o
}

func (o GetCaFilterOutput) ToGetCaFilterOutputWithContext(ctx context.Context) GetCaFilterOutput {
	return o
}

func (o GetCaFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetCaFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetCaFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetCaFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetCaFilterArrayOutput struct{ *pulumi.OutputState }

func (GetCaFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCaFilter)(nil)).Elem()
}

func (o GetCaFilterArrayOutput) ToGetCaFilterArrayOutput() GetCaFilterArrayOutput {
	return o
}

func (o GetCaFilterArrayOutput) ToGetCaFilterArrayOutputWithContext(ctx context.Context) GetCaFilterArrayOutput {
	return o
}

func (o GetCaFilterArrayOutput) Index(i pulumi.IntInput) GetCaFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCaFilter {
		return vs[0].([]GetCaFilter)[vs[1].(int)]
	}).(GetCaFilterOutput)
}

type GetCasCa struct {
	// The fingerprint of the CA.
	CaFingerprint string `pulumi:"caFingerprint"`
	// The ID of the CA.
	CaId string `pulumi:"caId"`
	// The description of the CA.
	Description string `pulumi:"description"`
}

// GetCasCaInput is an input type that accepts GetCasCaArgs and GetCasCaOutput values.
// You can construct a concrete instance of `GetCasCaInput` via:
//
//	GetCasCaArgs{...}
type GetCasCaInput interface {
	pulumi.Input

	ToGetCasCaOutput() GetCasCaOutput
	ToGetCasCaOutputWithContext(context.Context) GetCasCaOutput
}

type GetCasCaArgs struct {
	// The fingerprint of the CA.
	CaFingerprint pulumi.StringInput `pulumi:"caFingerprint"`
	// The ID of the CA.
	CaId pulumi.StringInput `pulumi:"caId"`
	// The description of the CA.
	Description pulumi.StringInput `pulumi:"description"`
}

func (GetCasCaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCasCa)(nil)).Elem()
}

func (i GetCasCaArgs) ToGetCasCaOutput() GetCasCaOutput {
	return i.ToGetCasCaOutputWithContext(context.Background())
}

func (i GetCasCaArgs) ToGetCasCaOutputWithContext(ctx context.Context) GetCasCaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCasCaOutput)
}

// GetCasCaArrayInput is an input type that accepts GetCasCaArray and GetCasCaArrayOutput values.
// You can construct a concrete instance of `GetCasCaArrayInput` via:
//
//	GetCasCaArray{ GetCasCaArgs{...} }
type GetCasCaArrayInput interface {
	pulumi.Input

	ToGetCasCaArrayOutput() GetCasCaArrayOutput
	ToGetCasCaArrayOutputWithContext(context.Context) GetCasCaArrayOutput
}

type GetCasCaArray []GetCasCaInput

func (GetCasCaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCasCa)(nil)).Elem()
}

func (i GetCasCaArray) ToGetCasCaArrayOutput() GetCasCaArrayOutput {
	return i.ToGetCasCaArrayOutputWithContext(context.Background())
}

func (i GetCasCaArray) ToGetCasCaArrayOutputWithContext(ctx context.Context) GetCasCaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCasCaArrayOutput)
}

type GetCasCaOutput struct{ *pulumi.OutputState }

func (GetCasCaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCasCa)(nil)).Elem()
}

func (o GetCasCaOutput) ToGetCasCaOutput() GetCasCaOutput {
	return o
}

func (o GetCasCaOutput) ToGetCasCaOutputWithContext(ctx context.Context) GetCasCaOutput {
	return o
}

// The fingerprint of the CA.
func (o GetCasCaOutput) CaFingerprint() pulumi.StringOutput {
	return o.ApplyT(func(v GetCasCa) string { return v.CaFingerprint }).(pulumi.StringOutput)
}

// The ID of the CA.
func (o GetCasCaOutput) CaId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCasCa) string { return v.CaId }).(pulumi.StringOutput)
}

// The description of the CA.
func (o GetCasCaOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetCasCa) string { return v.Description }).(pulumi.StringOutput)
}

type GetCasCaArrayOutput struct{ *pulumi.OutputState }

func (GetCasCaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCasCa)(nil)).Elem()
}

func (o GetCasCaArrayOutput) ToGetCasCaArrayOutput() GetCasCaArrayOutput {
	return o
}

func (o GetCasCaArrayOutput) ToGetCasCaArrayOutputWithContext(ctx context.Context) GetCasCaArrayOutput {
	return o
}

func (o GetCasCaArrayOutput) Index(i pulumi.IntInput) GetCasCaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCasCa {
		return vs[0].([]GetCasCa)[vs[1].(int)]
	}).(GetCasCaOutput)
}

type GetCasFilter struct {
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// GetCasFilterInput is an input type that accepts GetCasFilterArgs and GetCasFilterOutput values.
// You can construct a concrete instance of `GetCasFilterInput` via:
//
//	GetCasFilterArgs{...}
type GetCasFilterInput interface {
	pulumi.Input

	ToGetCasFilterOutput() GetCasFilterOutput
	ToGetCasFilterOutputWithContext(context.Context) GetCasFilterOutput
}

type GetCasFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetCasFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCasFilter)(nil)).Elem()
}

func (i GetCasFilterArgs) ToGetCasFilterOutput() GetCasFilterOutput {
	return i.ToGetCasFilterOutputWithContext(context.Background())
}

func (i GetCasFilterArgs) ToGetCasFilterOutputWithContext(ctx context.Context) GetCasFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCasFilterOutput)
}

// GetCasFilterArrayInput is an input type that accepts GetCasFilterArray and GetCasFilterArrayOutput values.
// You can construct a concrete instance of `GetCasFilterArrayInput` via:
//
//	GetCasFilterArray{ GetCasFilterArgs{...} }
type GetCasFilterArrayInput interface {
	pulumi.Input

	ToGetCasFilterArrayOutput() GetCasFilterArrayOutput
	ToGetCasFilterArrayOutputWithContext(context.Context) GetCasFilterArrayOutput
}

type GetCasFilterArray []GetCasFilterInput

func (GetCasFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCasFilter)(nil)).Elem()
}

func (i GetCasFilterArray) ToGetCasFilterArrayOutput() GetCasFilterArrayOutput {
	return i.ToGetCasFilterArrayOutputWithContext(context.Background())
}

func (i GetCasFilterArray) ToGetCasFilterArrayOutputWithContext(ctx context.Context) GetCasFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCasFilterArrayOutput)
}

type GetCasFilterOutput struct{ *pulumi.OutputState }

func (GetCasFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCasFilter)(nil)).Elem()
}

func (o GetCasFilterOutput) ToGetCasFilterOutput() GetCasFilterOutput {
	return o
}

func (o GetCasFilterOutput) ToGetCasFilterOutputWithContext(ctx context.Context) GetCasFilterOutput {
	return o
}

func (o GetCasFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetCasFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetCasFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetCasFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetCasFilterArrayOutput struct{ *pulumi.OutputState }

func (GetCasFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCasFilter)(nil)).Elem()
}

func (o GetCasFilterArrayOutput) ToGetCasFilterArrayOutput() GetCasFilterArrayOutput {
	return o
}

func (o GetCasFilterArrayOutput) ToGetCasFilterArrayOutputWithContext(ctx context.Context) GetCasFilterArrayOutput {
	return o
}

func (o GetCasFilterArrayOutput) Index(i pulumi.IntInput) GetCasFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCasFilter {
		return vs[0].([]GetCasFilter)[vs[1].(int)]
	}).(GetCasFilterOutput)
}

type GetClientGatewayFilter struct {
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// GetClientGatewayFilterInput is an input type that accepts GetClientGatewayFilterArgs and GetClientGatewayFilterOutput values.
// You can construct a concrete instance of `GetClientGatewayFilterInput` via:
//
//	GetClientGatewayFilterArgs{...}
type GetClientGatewayFilterInput interface {
	pulumi.Input

	ToGetClientGatewayFilterOutput() GetClientGatewayFilterOutput
	ToGetClientGatewayFilterOutputWithContext(context.Context) GetClientGatewayFilterOutput
}

type GetClientGatewayFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetClientGatewayFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientGatewayFilter)(nil)).Elem()
}

func (i GetClientGatewayFilterArgs) ToGetClientGatewayFilterOutput() GetClientGatewayFilterOutput {
	return i.ToGetClientGatewayFilterOutputWithContext(context.Background())
}

func (i GetClientGatewayFilterArgs) ToGetClientGatewayFilterOutputWithContext(ctx context.Context) GetClientGatewayFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientGatewayFilterOutput)
}

// GetClientGatewayFilterArrayInput is an input type that accepts GetClientGatewayFilterArray and GetClientGatewayFilterArrayOutput values.
// You can construct a concrete instance of `GetClientGatewayFilterArrayInput` via:
//
//	GetClientGatewayFilterArray{ GetClientGatewayFilterArgs{...} }
type GetClientGatewayFilterArrayInput interface {
	pulumi.Input

	ToGetClientGatewayFilterArrayOutput() GetClientGatewayFilterArrayOutput
	ToGetClientGatewayFilterArrayOutputWithContext(context.Context) GetClientGatewayFilterArrayOutput
}

type GetClientGatewayFilterArray []GetClientGatewayFilterInput

func (GetClientGatewayFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientGatewayFilter)(nil)).Elem()
}

func (i GetClientGatewayFilterArray) ToGetClientGatewayFilterArrayOutput() GetClientGatewayFilterArrayOutput {
	return i.ToGetClientGatewayFilterArrayOutputWithContext(context.Background())
}

func (i GetClientGatewayFilterArray) ToGetClientGatewayFilterArrayOutputWithContext(ctx context.Context) GetClientGatewayFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientGatewayFilterArrayOutput)
}

type GetClientGatewayFilterOutput struct{ *pulumi.OutputState }

func (GetClientGatewayFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientGatewayFilter)(nil)).Elem()
}

func (o GetClientGatewayFilterOutput) ToGetClientGatewayFilterOutput() GetClientGatewayFilterOutput {
	return o
}

func (o GetClientGatewayFilterOutput) ToGetClientGatewayFilterOutputWithContext(ctx context.Context) GetClientGatewayFilterOutput {
	return o
}

func (o GetClientGatewayFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientGatewayFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetClientGatewayFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetClientGatewayFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetClientGatewayFilterArrayOutput struct{ *pulumi.OutputState }

func (GetClientGatewayFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientGatewayFilter)(nil)).Elem()
}

func (o GetClientGatewayFilterArrayOutput) ToGetClientGatewayFilterArrayOutput() GetClientGatewayFilterArrayOutput {
	return o
}

func (o GetClientGatewayFilterArrayOutput) ToGetClientGatewayFilterArrayOutputWithContext(ctx context.Context) GetClientGatewayFilterArrayOutput {
	return o
}

func (o GetClientGatewayFilterArrayOutput) Index(i pulumi.IntInput) GetClientGatewayFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClientGatewayFilter {
		return vs[0].([]GetClientGatewayFilter)[vs[1].(int)]
	}).(GetClientGatewayFilterOutput)
}

type GetClientGatewayTag struct {
	// The key of the tag, with a minimum of 1 character.
	Key string `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value string `pulumi:"value"`
}

// GetClientGatewayTagInput is an input type that accepts GetClientGatewayTagArgs and GetClientGatewayTagOutput values.
// You can construct a concrete instance of `GetClientGatewayTagInput` via:
//
//	GetClientGatewayTagArgs{...}
type GetClientGatewayTagInput interface {
	pulumi.Input

	ToGetClientGatewayTagOutput() GetClientGatewayTagOutput
	ToGetClientGatewayTagOutputWithContext(context.Context) GetClientGatewayTagOutput
}

type GetClientGatewayTagArgs struct {
	// The key of the tag, with a minimum of 1 character.
	Key pulumi.StringInput `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetClientGatewayTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientGatewayTag)(nil)).Elem()
}

func (i GetClientGatewayTagArgs) ToGetClientGatewayTagOutput() GetClientGatewayTagOutput {
	return i.ToGetClientGatewayTagOutputWithContext(context.Background())
}

func (i GetClientGatewayTagArgs) ToGetClientGatewayTagOutputWithContext(ctx context.Context) GetClientGatewayTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientGatewayTagOutput)
}

// GetClientGatewayTagArrayInput is an input type that accepts GetClientGatewayTagArray and GetClientGatewayTagArrayOutput values.
// You can construct a concrete instance of `GetClientGatewayTagArrayInput` via:
//
//	GetClientGatewayTagArray{ GetClientGatewayTagArgs{...} }
type GetClientGatewayTagArrayInput interface {
	pulumi.Input

	ToGetClientGatewayTagArrayOutput() GetClientGatewayTagArrayOutput
	ToGetClientGatewayTagArrayOutputWithContext(context.Context) GetClientGatewayTagArrayOutput
}

type GetClientGatewayTagArray []GetClientGatewayTagInput

func (GetClientGatewayTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientGatewayTag)(nil)).Elem()
}

func (i GetClientGatewayTagArray) ToGetClientGatewayTagArrayOutput() GetClientGatewayTagArrayOutput {
	return i.ToGetClientGatewayTagArrayOutputWithContext(context.Background())
}

func (i GetClientGatewayTagArray) ToGetClientGatewayTagArrayOutputWithContext(ctx context.Context) GetClientGatewayTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientGatewayTagArrayOutput)
}

type GetClientGatewayTagOutput struct{ *pulumi.OutputState }

func (GetClientGatewayTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientGatewayTag)(nil)).Elem()
}

func (o GetClientGatewayTagOutput) ToGetClientGatewayTagOutput() GetClientGatewayTagOutput {
	return o
}

func (o GetClientGatewayTagOutput) ToGetClientGatewayTagOutputWithContext(ctx context.Context) GetClientGatewayTagOutput {
	return o
}

// The key of the tag, with a minimum of 1 character.
func (o GetClientGatewayTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientGatewayTag) string { return v.Key }).(pulumi.StringOutput)
}

// The value of the tag, between 0 and 255 characters.
func (o GetClientGatewayTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientGatewayTag) string { return v.Value }).(pulumi.StringOutput)
}

type GetClientGatewayTagArrayOutput struct{ *pulumi.OutputState }

func (GetClientGatewayTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientGatewayTag)(nil)).Elem()
}

func (o GetClientGatewayTagArrayOutput) ToGetClientGatewayTagArrayOutput() GetClientGatewayTagArrayOutput {
	return o
}

func (o GetClientGatewayTagArrayOutput) ToGetClientGatewayTagArrayOutputWithContext(ctx context.Context) GetClientGatewayTagArrayOutput {
	return o
}

func (o GetClientGatewayTagArrayOutput) Index(i pulumi.IntInput) GetClientGatewayTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClientGatewayTag {
		return vs[0].([]GetClientGatewayTag)[vs[1].(int)]
	}).(GetClientGatewayTagOutput)
}

type GetClientGatewaysClientGateway struct {
	// The Autonomous System Number (ASN) used by the Border Gateway Protocol (BGP) to find the path to your client gateway through the Internet.
	BgpAsn int `pulumi:"bgpAsn"`
	// The ID of the client gateway.
	ClientGatewayId *string `pulumi:"clientGatewayId"`
	// The type of communication tunnel used by the client gateway (always `ipsec.1`).
	ConnectionType string `pulumi:"connectionType"`
	// The public IPv4 address of the client gateway (must be a fixed address into a NATed network).
	PublicIp string `pulumi:"publicIp"`
	// The state of the client gateway (`pending` \| `available` \| `deleting` \| `deleted`).
	State string `pulumi:"state"`
	// One or more tags associated with the client gateway.
	Tags []GetClientGatewaysClientGatewayTag `pulumi:"tags"`
}

// GetClientGatewaysClientGatewayInput is an input type that accepts GetClientGatewaysClientGatewayArgs and GetClientGatewaysClientGatewayOutput values.
// You can construct a concrete instance of `GetClientGatewaysClientGatewayInput` via:
//
//	GetClientGatewaysClientGatewayArgs{...}
type GetClientGatewaysClientGatewayInput interface {
	pulumi.Input

	ToGetClientGatewaysClientGatewayOutput() GetClientGatewaysClientGatewayOutput
	ToGetClientGatewaysClientGatewayOutputWithContext(context.Context) GetClientGatewaysClientGatewayOutput
}

type GetClientGatewaysClientGatewayArgs struct {
	// The Autonomous System Number (ASN) used by the Border Gateway Protocol (BGP) to find the path to your client gateway through the Internet.
	BgpAsn pulumi.IntInput `pulumi:"bgpAsn"`
	// The ID of the client gateway.
	ClientGatewayId pulumi.StringPtrInput `pulumi:"clientGatewayId"`
	// The type of communication tunnel used by the client gateway (always `ipsec.1`).
	ConnectionType pulumi.StringInput `pulumi:"connectionType"`
	// The public IPv4 address of the client gateway (must be a fixed address into a NATed network).
	PublicIp pulumi.StringInput `pulumi:"publicIp"`
	// The state of the client gateway (`pending` \| `available` \| `deleting` \| `deleted`).
	State pulumi.StringInput `pulumi:"state"`
	// One or more tags associated with the client gateway.
	Tags GetClientGatewaysClientGatewayTagArrayInput `pulumi:"tags"`
}

func (GetClientGatewaysClientGatewayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientGatewaysClientGateway)(nil)).Elem()
}

func (i GetClientGatewaysClientGatewayArgs) ToGetClientGatewaysClientGatewayOutput() GetClientGatewaysClientGatewayOutput {
	return i.ToGetClientGatewaysClientGatewayOutputWithContext(context.Background())
}

func (i GetClientGatewaysClientGatewayArgs) ToGetClientGatewaysClientGatewayOutputWithContext(ctx context.Context) GetClientGatewaysClientGatewayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientGatewaysClientGatewayOutput)
}

// GetClientGatewaysClientGatewayArrayInput is an input type that accepts GetClientGatewaysClientGatewayArray and GetClientGatewaysClientGatewayArrayOutput values.
// You can construct a concrete instance of `GetClientGatewaysClientGatewayArrayInput` via:
//
//	GetClientGatewaysClientGatewayArray{ GetClientGatewaysClientGatewayArgs{...} }
type GetClientGatewaysClientGatewayArrayInput interface {
	pulumi.Input

	ToGetClientGatewaysClientGatewayArrayOutput() GetClientGatewaysClientGatewayArrayOutput
	ToGetClientGatewaysClientGatewayArrayOutputWithContext(context.Context) GetClientGatewaysClientGatewayArrayOutput
}

type GetClientGatewaysClientGatewayArray []GetClientGatewaysClientGatewayInput

func (GetClientGatewaysClientGatewayArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientGatewaysClientGateway)(nil)).Elem()
}

func (i GetClientGatewaysClientGatewayArray) ToGetClientGatewaysClientGatewayArrayOutput() GetClientGatewaysClientGatewayArrayOutput {
	return i.ToGetClientGatewaysClientGatewayArrayOutputWithContext(context.Background())
}

func (i GetClientGatewaysClientGatewayArray) ToGetClientGatewaysClientGatewayArrayOutputWithContext(ctx context.Context) GetClientGatewaysClientGatewayArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientGatewaysClientGatewayArrayOutput)
}

type GetClientGatewaysClientGatewayOutput struct{ *pulumi.OutputState }

func (GetClientGatewaysClientGatewayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientGatewaysClientGateway)(nil)).Elem()
}

func (o GetClientGatewaysClientGatewayOutput) ToGetClientGatewaysClientGatewayOutput() GetClientGatewaysClientGatewayOutput {
	return o
}

func (o GetClientGatewaysClientGatewayOutput) ToGetClientGatewaysClientGatewayOutputWithContext(ctx context.Context) GetClientGatewaysClientGatewayOutput {
	return o
}

// The Autonomous System Number (ASN) used by the Border Gateway Protocol (BGP) to find the path to your client gateway through the Internet.
func (o GetClientGatewaysClientGatewayOutput) BgpAsn() pulumi.IntOutput {
	return o.ApplyT(func(v GetClientGatewaysClientGateway) int { return v.BgpAsn }).(pulumi.IntOutput)
}

// The ID of the client gateway.
func (o GetClientGatewaysClientGatewayOutput) ClientGatewayId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetClientGatewaysClientGateway) *string { return v.ClientGatewayId }).(pulumi.StringPtrOutput)
}

// The type of communication tunnel used by the client gateway (always `ipsec.1`).
func (o GetClientGatewaysClientGatewayOutput) ConnectionType() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientGatewaysClientGateway) string { return v.ConnectionType }).(pulumi.StringOutput)
}

// The public IPv4 address of the client gateway (must be a fixed address into a NATed network).
func (o GetClientGatewaysClientGatewayOutput) PublicIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientGatewaysClientGateway) string { return v.PublicIp }).(pulumi.StringOutput)
}

// The state of the client gateway (`pending` \| `available` \| `deleting` \| `deleted`).
func (o GetClientGatewaysClientGatewayOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientGatewaysClientGateway) string { return v.State }).(pulumi.StringOutput)
}

// One or more tags associated with the client gateway.
func (o GetClientGatewaysClientGatewayOutput) Tags() GetClientGatewaysClientGatewayTagArrayOutput {
	return o.ApplyT(func(v GetClientGatewaysClientGateway) []GetClientGatewaysClientGatewayTag { return v.Tags }).(GetClientGatewaysClientGatewayTagArrayOutput)
}

type GetClientGatewaysClientGatewayArrayOutput struct{ *pulumi.OutputState }

func (GetClientGatewaysClientGatewayArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientGatewaysClientGateway)(nil)).Elem()
}

func (o GetClientGatewaysClientGatewayArrayOutput) ToGetClientGatewaysClientGatewayArrayOutput() GetClientGatewaysClientGatewayArrayOutput {
	return o
}

func (o GetClientGatewaysClientGatewayArrayOutput) ToGetClientGatewaysClientGatewayArrayOutputWithContext(ctx context.Context) GetClientGatewaysClientGatewayArrayOutput {
	return o
}

func (o GetClientGatewaysClientGatewayArrayOutput) Index(i pulumi.IntInput) GetClientGatewaysClientGatewayOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClientGatewaysClientGateway {
		return vs[0].([]GetClientGatewaysClientGateway)[vs[1].(int)]
	}).(GetClientGatewaysClientGatewayOutput)
}

type GetClientGatewaysClientGatewayTag struct {
	// The key of the tag, with a minimum of 1 character.
	Key string `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value string `pulumi:"value"`
}

// GetClientGatewaysClientGatewayTagInput is an input type that accepts GetClientGatewaysClientGatewayTagArgs and GetClientGatewaysClientGatewayTagOutput values.
// You can construct a concrete instance of `GetClientGatewaysClientGatewayTagInput` via:
//
//	GetClientGatewaysClientGatewayTagArgs{...}
type GetClientGatewaysClientGatewayTagInput interface {
	pulumi.Input

	ToGetClientGatewaysClientGatewayTagOutput() GetClientGatewaysClientGatewayTagOutput
	ToGetClientGatewaysClientGatewayTagOutputWithContext(context.Context) GetClientGatewaysClientGatewayTagOutput
}

type GetClientGatewaysClientGatewayTagArgs struct {
	// The key of the tag, with a minimum of 1 character.
	Key pulumi.StringInput `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetClientGatewaysClientGatewayTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientGatewaysClientGatewayTag)(nil)).Elem()
}

func (i GetClientGatewaysClientGatewayTagArgs) ToGetClientGatewaysClientGatewayTagOutput() GetClientGatewaysClientGatewayTagOutput {
	return i.ToGetClientGatewaysClientGatewayTagOutputWithContext(context.Background())
}

func (i GetClientGatewaysClientGatewayTagArgs) ToGetClientGatewaysClientGatewayTagOutputWithContext(ctx context.Context) GetClientGatewaysClientGatewayTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientGatewaysClientGatewayTagOutput)
}

// GetClientGatewaysClientGatewayTagArrayInput is an input type that accepts GetClientGatewaysClientGatewayTagArray and GetClientGatewaysClientGatewayTagArrayOutput values.
// You can construct a concrete instance of `GetClientGatewaysClientGatewayTagArrayInput` via:
//
//	GetClientGatewaysClientGatewayTagArray{ GetClientGatewaysClientGatewayTagArgs{...} }
type GetClientGatewaysClientGatewayTagArrayInput interface {
	pulumi.Input

	ToGetClientGatewaysClientGatewayTagArrayOutput() GetClientGatewaysClientGatewayTagArrayOutput
	ToGetClientGatewaysClientGatewayTagArrayOutputWithContext(context.Context) GetClientGatewaysClientGatewayTagArrayOutput
}

type GetClientGatewaysClientGatewayTagArray []GetClientGatewaysClientGatewayTagInput

func (GetClientGatewaysClientGatewayTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientGatewaysClientGatewayTag)(nil)).Elem()
}

func (i GetClientGatewaysClientGatewayTagArray) ToGetClientGatewaysClientGatewayTagArrayOutput() GetClientGatewaysClientGatewayTagArrayOutput {
	return i.ToGetClientGatewaysClientGatewayTagArrayOutputWithContext(context.Background())
}

func (i GetClientGatewaysClientGatewayTagArray) ToGetClientGatewaysClientGatewayTagArrayOutputWithContext(ctx context.Context) GetClientGatewaysClientGatewayTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientGatewaysClientGatewayTagArrayOutput)
}

type GetClientGatewaysClientGatewayTagOutput struct{ *pulumi.OutputState }

func (GetClientGatewaysClientGatewayTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientGatewaysClientGatewayTag)(nil)).Elem()
}

func (o GetClientGatewaysClientGatewayTagOutput) ToGetClientGatewaysClientGatewayTagOutput() GetClientGatewaysClientGatewayTagOutput {
	return o
}

func (o GetClientGatewaysClientGatewayTagOutput) ToGetClientGatewaysClientGatewayTagOutputWithContext(ctx context.Context) GetClientGatewaysClientGatewayTagOutput {
	return o
}

// The key of the tag, with a minimum of 1 character.
func (o GetClientGatewaysClientGatewayTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientGatewaysClientGatewayTag) string { return v.Key }).(pulumi.StringOutput)
}

// The value of the tag, between 0 and 255 characters.
func (o GetClientGatewaysClientGatewayTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientGatewaysClientGatewayTag) string { return v.Value }).(pulumi.StringOutput)
}

type GetClientGatewaysClientGatewayTagArrayOutput struct{ *pulumi.OutputState }

func (GetClientGatewaysClientGatewayTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientGatewaysClientGatewayTag)(nil)).Elem()
}

func (o GetClientGatewaysClientGatewayTagArrayOutput) ToGetClientGatewaysClientGatewayTagArrayOutput() GetClientGatewaysClientGatewayTagArrayOutput {
	return o
}

func (o GetClientGatewaysClientGatewayTagArrayOutput) ToGetClientGatewaysClientGatewayTagArrayOutputWithContext(ctx context.Context) GetClientGatewaysClientGatewayTagArrayOutput {
	return o
}

func (o GetClientGatewaysClientGatewayTagArrayOutput) Index(i pulumi.IntInput) GetClientGatewaysClientGatewayTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClientGatewaysClientGatewayTag {
		return vs[0].([]GetClientGatewaysClientGatewayTag)[vs[1].(int)]
	}).(GetClientGatewaysClientGatewayTagOutput)
}

type GetClientGatewaysFilter struct {
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// GetClientGatewaysFilterInput is an input type that accepts GetClientGatewaysFilterArgs and GetClientGatewaysFilterOutput values.
// You can construct a concrete instance of `GetClientGatewaysFilterInput` via:
//
//	GetClientGatewaysFilterArgs{...}
type GetClientGatewaysFilterInput interface {
	pulumi.Input

	ToGetClientGatewaysFilterOutput() GetClientGatewaysFilterOutput
	ToGetClientGatewaysFilterOutputWithContext(context.Context) GetClientGatewaysFilterOutput
}

type GetClientGatewaysFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetClientGatewaysFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientGatewaysFilter)(nil)).Elem()
}

func (i GetClientGatewaysFilterArgs) ToGetClientGatewaysFilterOutput() GetClientGatewaysFilterOutput {
	return i.ToGetClientGatewaysFilterOutputWithContext(context.Background())
}

func (i GetClientGatewaysFilterArgs) ToGetClientGatewaysFilterOutputWithContext(ctx context.Context) GetClientGatewaysFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientGatewaysFilterOutput)
}

// GetClientGatewaysFilterArrayInput is an input type that accepts GetClientGatewaysFilterArray and GetClientGatewaysFilterArrayOutput values.
// You can construct a concrete instance of `GetClientGatewaysFilterArrayInput` via:
//
//	GetClientGatewaysFilterArray{ GetClientGatewaysFilterArgs{...} }
type GetClientGatewaysFilterArrayInput interface {
	pulumi.Input

	ToGetClientGatewaysFilterArrayOutput() GetClientGatewaysFilterArrayOutput
	ToGetClientGatewaysFilterArrayOutputWithContext(context.Context) GetClientGatewaysFilterArrayOutput
}

type GetClientGatewaysFilterArray []GetClientGatewaysFilterInput

func (GetClientGatewaysFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientGatewaysFilter)(nil)).Elem()
}

func (i GetClientGatewaysFilterArray) ToGetClientGatewaysFilterArrayOutput() GetClientGatewaysFilterArrayOutput {
	return i.ToGetClientGatewaysFilterArrayOutputWithContext(context.Background())
}

func (i GetClientGatewaysFilterArray) ToGetClientGatewaysFilterArrayOutputWithContext(ctx context.Context) GetClientGatewaysFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientGatewaysFilterArrayOutput)
}

type GetClientGatewaysFilterOutput struct{ *pulumi.OutputState }

func (GetClientGatewaysFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientGatewaysFilter)(nil)).Elem()
}

func (o GetClientGatewaysFilterOutput) ToGetClientGatewaysFilterOutput() GetClientGatewaysFilterOutput {
	return o
}

func (o GetClientGatewaysFilterOutput) ToGetClientGatewaysFilterOutputWithContext(ctx context.Context) GetClientGatewaysFilterOutput {
	return o
}

func (o GetClientGatewaysFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientGatewaysFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetClientGatewaysFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetClientGatewaysFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetClientGatewaysFilterArrayOutput struct{ *pulumi.OutputState }

func (GetClientGatewaysFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientGatewaysFilter)(nil)).Elem()
}

func (o GetClientGatewaysFilterArrayOutput) ToGetClientGatewaysFilterArrayOutput() GetClientGatewaysFilterArrayOutput {
	return o
}

func (o GetClientGatewaysFilterArrayOutput) ToGetClientGatewaysFilterArrayOutputWithContext(ctx context.Context) GetClientGatewaysFilterArrayOutput {
	return o
}

func (o GetClientGatewaysFilterArrayOutput) Index(i pulumi.IntInput) GetClientGatewaysFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClientGatewaysFilter {
		return vs[0].([]GetClientGatewaysFilter)[vs[1].(int)]
	}).(GetClientGatewaysFilterOutput)
}

type GetDhcpOptionFilter struct {
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// GetDhcpOptionFilterInput is an input type that accepts GetDhcpOptionFilterArgs and GetDhcpOptionFilterOutput values.
// You can construct a concrete instance of `GetDhcpOptionFilterInput` via:
//
//	GetDhcpOptionFilterArgs{...}
type GetDhcpOptionFilterInput interface {
	pulumi.Input

	ToGetDhcpOptionFilterOutput() GetDhcpOptionFilterOutput
	ToGetDhcpOptionFilterOutputWithContext(context.Context) GetDhcpOptionFilterOutput
}

type GetDhcpOptionFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetDhcpOptionFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDhcpOptionFilter)(nil)).Elem()
}

func (i GetDhcpOptionFilterArgs) ToGetDhcpOptionFilterOutput() GetDhcpOptionFilterOutput {
	return i.ToGetDhcpOptionFilterOutputWithContext(context.Background())
}

func (i GetDhcpOptionFilterArgs) ToGetDhcpOptionFilterOutputWithContext(ctx context.Context) GetDhcpOptionFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDhcpOptionFilterOutput)
}

// GetDhcpOptionFilterArrayInput is an input type that accepts GetDhcpOptionFilterArray and GetDhcpOptionFilterArrayOutput values.
// You can construct a concrete instance of `GetDhcpOptionFilterArrayInput` via:
//
//	GetDhcpOptionFilterArray{ GetDhcpOptionFilterArgs{...} }
type GetDhcpOptionFilterArrayInput interface {
	pulumi.Input

	ToGetDhcpOptionFilterArrayOutput() GetDhcpOptionFilterArrayOutput
	ToGetDhcpOptionFilterArrayOutputWithContext(context.Context) GetDhcpOptionFilterArrayOutput
}

type GetDhcpOptionFilterArray []GetDhcpOptionFilterInput

func (GetDhcpOptionFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDhcpOptionFilter)(nil)).Elem()
}

func (i GetDhcpOptionFilterArray) ToGetDhcpOptionFilterArrayOutput() GetDhcpOptionFilterArrayOutput {
	return i.ToGetDhcpOptionFilterArrayOutputWithContext(context.Background())
}

func (i GetDhcpOptionFilterArray) ToGetDhcpOptionFilterArrayOutputWithContext(ctx context.Context) GetDhcpOptionFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDhcpOptionFilterArrayOutput)
}

type GetDhcpOptionFilterOutput struct{ *pulumi.OutputState }

func (GetDhcpOptionFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDhcpOptionFilter)(nil)).Elem()
}

func (o GetDhcpOptionFilterOutput) ToGetDhcpOptionFilterOutput() GetDhcpOptionFilterOutput {
	return o
}

func (o GetDhcpOptionFilterOutput) ToGetDhcpOptionFilterOutputWithContext(ctx context.Context) GetDhcpOptionFilterOutput {
	return o
}

func (o GetDhcpOptionFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDhcpOptionFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetDhcpOptionFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDhcpOptionFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetDhcpOptionFilterArrayOutput struct{ *pulumi.OutputState }

func (GetDhcpOptionFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDhcpOptionFilter)(nil)).Elem()
}

func (o GetDhcpOptionFilterArrayOutput) ToGetDhcpOptionFilterArrayOutput() GetDhcpOptionFilterArrayOutput {
	return o
}

func (o GetDhcpOptionFilterArrayOutput) ToGetDhcpOptionFilterArrayOutputWithContext(ctx context.Context) GetDhcpOptionFilterArrayOutput {
	return o
}

func (o GetDhcpOptionFilterArrayOutput) Index(i pulumi.IntInput) GetDhcpOptionFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDhcpOptionFilter {
		return vs[0].([]GetDhcpOptionFilter)[vs[1].(int)]
	}).(GetDhcpOptionFilterOutput)
}

type GetDhcpOptionTag struct {
	// The key of the tag, with a minimum of 1 character.
	Key string `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value string `pulumi:"value"`
}

// GetDhcpOptionTagInput is an input type that accepts GetDhcpOptionTagArgs and GetDhcpOptionTagOutput values.
// You can construct a concrete instance of `GetDhcpOptionTagInput` via:
//
//	GetDhcpOptionTagArgs{...}
type GetDhcpOptionTagInput interface {
	pulumi.Input

	ToGetDhcpOptionTagOutput() GetDhcpOptionTagOutput
	ToGetDhcpOptionTagOutputWithContext(context.Context) GetDhcpOptionTagOutput
}

type GetDhcpOptionTagArgs struct {
	// The key of the tag, with a minimum of 1 character.
	Key pulumi.StringInput `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetDhcpOptionTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDhcpOptionTag)(nil)).Elem()
}

func (i GetDhcpOptionTagArgs) ToGetDhcpOptionTagOutput() GetDhcpOptionTagOutput {
	return i.ToGetDhcpOptionTagOutputWithContext(context.Background())
}

func (i GetDhcpOptionTagArgs) ToGetDhcpOptionTagOutputWithContext(ctx context.Context) GetDhcpOptionTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDhcpOptionTagOutput)
}

// GetDhcpOptionTagArrayInput is an input type that accepts GetDhcpOptionTagArray and GetDhcpOptionTagArrayOutput values.
// You can construct a concrete instance of `GetDhcpOptionTagArrayInput` via:
//
//	GetDhcpOptionTagArray{ GetDhcpOptionTagArgs{...} }
type GetDhcpOptionTagArrayInput interface {
	pulumi.Input

	ToGetDhcpOptionTagArrayOutput() GetDhcpOptionTagArrayOutput
	ToGetDhcpOptionTagArrayOutputWithContext(context.Context) GetDhcpOptionTagArrayOutput
}

type GetDhcpOptionTagArray []GetDhcpOptionTagInput

func (GetDhcpOptionTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDhcpOptionTag)(nil)).Elem()
}

func (i GetDhcpOptionTagArray) ToGetDhcpOptionTagArrayOutput() GetDhcpOptionTagArrayOutput {
	return i.ToGetDhcpOptionTagArrayOutputWithContext(context.Background())
}

func (i GetDhcpOptionTagArray) ToGetDhcpOptionTagArrayOutputWithContext(ctx context.Context) GetDhcpOptionTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDhcpOptionTagArrayOutput)
}

type GetDhcpOptionTagOutput struct{ *pulumi.OutputState }

func (GetDhcpOptionTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDhcpOptionTag)(nil)).Elem()
}

func (o GetDhcpOptionTagOutput) ToGetDhcpOptionTagOutput() GetDhcpOptionTagOutput {
	return o
}

func (o GetDhcpOptionTagOutput) ToGetDhcpOptionTagOutputWithContext(ctx context.Context) GetDhcpOptionTagOutput {
	return o
}

// The key of the tag, with a minimum of 1 character.
func (o GetDhcpOptionTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetDhcpOptionTag) string { return v.Key }).(pulumi.StringOutput)
}

// The value of the tag, between 0 and 255 characters.
func (o GetDhcpOptionTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetDhcpOptionTag) string { return v.Value }).(pulumi.StringOutput)
}

type GetDhcpOptionTagArrayOutput struct{ *pulumi.OutputState }

func (GetDhcpOptionTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDhcpOptionTag)(nil)).Elem()
}

func (o GetDhcpOptionTagArrayOutput) ToGetDhcpOptionTagArrayOutput() GetDhcpOptionTagArrayOutput {
	return o
}

func (o GetDhcpOptionTagArrayOutput) ToGetDhcpOptionTagArrayOutputWithContext(ctx context.Context) GetDhcpOptionTagArrayOutput {
	return o
}

func (o GetDhcpOptionTagArrayOutput) Index(i pulumi.IntInput) GetDhcpOptionTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDhcpOptionTag {
		return vs[0].([]GetDhcpOptionTag)[vs[1].(int)]
	}).(GetDhcpOptionTagOutput)
}

type GetDhcpOptionsDhcpOption struct {
	// If true, the DHCP options set is a default one. If false, it is not.
	Default bool `pulumi:"default"`
	// The ID of the DHCP options set.
	DhcpOptionsSetId string `pulumi:"dhcpOptionsSetId"`
	// The domain name.
	DomainName string `pulumi:"domainName"`
	// One or more IPs for the domain name servers.
	DomainNameServers []string `pulumi:"domainNameServers"`
	// One or more IPs for the log servers.
	LogServers []string `pulumi:"logServers"`
	// One or more IPs for the NTP servers.
	NtpServers []string `pulumi:"ntpServers"`
	// One or more tags associated with the DHCP options set.
	Tags []GetDhcpOptionsDhcpOptionTag `pulumi:"tags"`
}

// GetDhcpOptionsDhcpOptionInput is an input type that accepts GetDhcpOptionsDhcpOptionArgs and GetDhcpOptionsDhcpOptionOutput values.
// You can construct a concrete instance of `GetDhcpOptionsDhcpOptionInput` via:
//
//	GetDhcpOptionsDhcpOptionArgs{...}
type GetDhcpOptionsDhcpOptionInput interface {
	pulumi.Input

	ToGetDhcpOptionsDhcpOptionOutput() GetDhcpOptionsDhcpOptionOutput
	ToGetDhcpOptionsDhcpOptionOutputWithContext(context.Context) GetDhcpOptionsDhcpOptionOutput
}

type GetDhcpOptionsDhcpOptionArgs struct {
	// If true, the DHCP options set is a default one. If false, it is not.
	Default pulumi.BoolInput `pulumi:"default"`
	// The ID of the DHCP options set.
	DhcpOptionsSetId pulumi.StringInput `pulumi:"dhcpOptionsSetId"`
	// The domain name.
	DomainName pulumi.StringInput `pulumi:"domainName"`
	// One or more IPs for the domain name servers.
	DomainNameServers pulumi.StringArrayInput `pulumi:"domainNameServers"`
	// One or more IPs for the log servers.
	LogServers pulumi.StringArrayInput `pulumi:"logServers"`
	// One or more IPs for the NTP servers.
	NtpServers pulumi.StringArrayInput `pulumi:"ntpServers"`
	// One or more tags associated with the DHCP options set.
	Tags GetDhcpOptionsDhcpOptionTagArrayInput `pulumi:"tags"`
}

func (GetDhcpOptionsDhcpOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDhcpOptionsDhcpOption)(nil)).Elem()
}

func (i GetDhcpOptionsDhcpOptionArgs) ToGetDhcpOptionsDhcpOptionOutput() GetDhcpOptionsDhcpOptionOutput {
	return i.ToGetDhcpOptionsDhcpOptionOutputWithContext(context.Background())
}

func (i GetDhcpOptionsDhcpOptionArgs) ToGetDhcpOptionsDhcpOptionOutputWithContext(ctx context.Context) GetDhcpOptionsDhcpOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDhcpOptionsDhcpOptionOutput)
}

// GetDhcpOptionsDhcpOptionArrayInput is an input type that accepts GetDhcpOptionsDhcpOptionArray and GetDhcpOptionsDhcpOptionArrayOutput values.
// You can construct a concrete instance of `GetDhcpOptionsDhcpOptionArrayInput` via:
//
//	GetDhcpOptionsDhcpOptionArray{ GetDhcpOptionsDhcpOptionArgs{...} }
type GetDhcpOptionsDhcpOptionArrayInput interface {
	pulumi.Input

	ToGetDhcpOptionsDhcpOptionArrayOutput() GetDhcpOptionsDhcpOptionArrayOutput
	ToGetDhcpOptionsDhcpOptionArrayOutputWithContext(context.Context) GetDhcpOptionsDhcpOptionArrayOutput
}

type GetDhcpOptionsDhcpOptionArray []GetDhcpOptionsDhcpOptionInput

func (GetDhcpOptionsDhcpOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDhcpOptionsDhcpOption)(nil)).Elem()
}

func (i GetDhcpOptionsDhcpOptionArray) ToGetDhcpOptionsDhcpOptionArrayOutput() GetDhcpOptionsDhcpOptionArrayOutput {
	return i.ToGetDhcpOptionsDhcpOptionArrayOutputWithContext(context.Background())
}

func (i GetDhcpOptionsDhcpOptionArray) ToGetDhcpOptionsDhcpOptionArrayOutputWithContext(ctx context.Context) GetDhcpOptionsDhcpOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDhcpOptionsDhcpOptionArrayOutput)
}

type GetDhcpOptionsDhcpOptionOutput struct{ *pulumi.OutputState }

func (GetDhcpOptionsDhcpOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDhcpOptionsDhcpOption)(nil)).Elem()
}

func (o GetDhcpOptionsDhcpOptionOutput) ToGetDhcpOptionsDhcpOptionOutput() GetDhcpOptionsDhcpOptionOutput {
	return o
}

func (o GetDhcpOptionsDhcpOptionOutput) ToGetDhcpOptionsDhcpOptionOutputWithContext(ctx context.Context) GetDhcpOptionsDhcpOptionOutput {
	return o
}

// If true, the DHCP options set is a default one. If false, it is not.
func (o GetDhcpOptionsDhcpOptionOutput) Default() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDhcpOptionsDhcpOption) bool { return v.Default }).(pulumi.BoolOutput)
}

// The ID of the DHCP options set.
func (o GetDhcpOptionsDhcpOptionOutput) DhcpOptionsSetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDhcpOptionsDhcpOption) string { return v.DhcpOptionsSetId }).(pulumi.StringOutput)
}

// The domain name.
func (o GetDhcpOptionsDhcpOptionOutput) DomainName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDhcpOptionsDhcpOption) string { return v.DomainName }).(pulumi.StringOutput)
}

// One or more IPs for the domain name servers.
func (o GetDhcpOptionsDhcpOptionOutput) DomainNameServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDhcpOptionsDhcpOption) []string { return v.DomainNameServers }).(pulumi.StringArrayOutput)
}

// One or more IPs for the log servers.
func (o GetDhcpOptionsDhcpOptionOutput) LogServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDhcpOptionsDhcpOption) []string { return v.LogServers }).(pulumi.StringArrayOutput)
}

// One or more IPs for the NTP servers.
func (o GetDhcpOptionsDhcpOptionOutput) NtpServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDhcpOptionsDhcpOption) []string { return v.NtpServers }).(pulumi.StringArrayOutput)
}

// One or more tags associated with the DHCP options set.
func (o GetDhcpOptionsDhcpOptionOutput) Tags() GetDhcpOptionsDhcpOptionTagArrayOutput {
	return o.ApplyT(func(v GetDhcpOptionsDhcpOption) []GetDhcpOptionsDhcpOptionTag { return v.Tags }).(GetDhcpOptionsDhcpOptionTagArrayOutput)
}

type GetDhcpOptionsDhcpOptionArrayOutput struct{ *pulumi.OutputState }

func (GetDhcpOptionsDhcpOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDhcpOptionsDhcpOption)(nil)).Elem()
}

func (o GetDhcpOptionsDhcpOptionArrayOutput) ToGetDhcpOptionsDhcpOptionArrayOutput() GetDhcpOptionsDhcpOptionArrayOutput {
	return o
}

func (o GetDhcpOptionsDhcpOptionArrayOutput) ToGetDhcpOptionsDhcpOptionArrayOutputWithContext(ctx context.Context) GetDhcpOptionsDhcpOptionArrayOutput {
	return o
}

func (o GetDhcpOptionsDhcpOptionArrayOutput) Index(i pulumi.IntInput) GetDhcpOptionsDhcpOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDhcpOptionsDhcpOption {
		return vs[0].([]GetDhcpOptionsDhcpOption)[vs[1].(int)]
	}).(GetDhcpOptionsDhcpOptionOutput)
}

type GetDhcpOptionsDhcpOptionTag struct {
	// The key of the tag, with a minimum of 1 character.
	Key string `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value string `pulumi:"value"`
}

// GetDhcpOptionsDhcpOptionTagInput is an input type that accepts GetDhcpOptionsDhcpOptionTagArgs and GetDhcpOptionsDhcpOptionTagOutput values.
// You can construct a concrete instance of `GetDhcpOptionsDhcpOptionTagInput` via:
//
//	GetDhcpOptionsDhcpOptionTagArgs{...}
type GetDhcpOptionsDhcpOptionTagInput interface {
	pulumi.Input

	ToGetDhcpOptionsDhcpOptionTagOutput() GetDhcpOptionsDhcpOptionTagOutput
	ToGetDhcpOptionsDhcpOptionTagOutputWithContext(context.Context) GetDhcpOptionsDhcpOptionTagOutput
}

type GetDhcpOptionsDhcpOptionTagArgs struct {
	// The key of the tag, with a minimum of 1 character.
	Key pulumi.StringInput `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetDhcpOptionsDhcpOptionTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDhcpOptionsDhcpOptionTag)(nil)).Elem()
}

func (i GetDhcpOptionsDhcpOptionTagArgs) ToGetDhcpOptionsDhcpOptionTagOutput() GetDhcpOptionsDhcpOptionTagOutput {
	return i.ToGetDhcpOptionsDhcpOptionTagOutputWithContext(context.Background())
}

func (i GetDhcpOptionsDhcpOptionTagArgs) ToGetDhcpOptionsDhcpOptionTagOutputWithContext(ctx context.Context) GetDhcpOptionsDhcpOptionTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDhcpOptionsDhcpOptionTagOutput)
}

// GetDhcpOptionsDhcpOptionTagArrayInput is an input type that accepts GetDhcpOptionsDhcpOptionTagArray and GetDhcpOptionsDhcpOptionTagArrayOutput values.
// You can construct a concrete instance of `GetDhcpOptionsDhcpOptionTagArrayInput` via:
//
//	GetDhcpOptionsDhcpOptionTagArray{ GetDhcpOptionsDhcpOptionTagArgs{...} }
type GetDhcpOptionsDhcpOptionTagArrayInput interface {
	pulumi.Input

	ToGetDhcpOptionsDhcpOptionTagArrayOutput() GetDhcpOptionsDhcpOptionTagArrayOutput
	ToGetDhcpOptionsDhcpOptionTagArrayOutputWithContext(context.Context) GetDhcpOptionsDhcpOptionTagArrayOutput
}

type GetDhcpOptionsDhcpOptionTagArray []GetDhcpOptionsDhcpOptionTagInput

func (GetDhcpOptionsDhcpOptionTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDhcpOptionsDhcpOptionTag)(nil)).Elem()
}

func (i GetDhcpOptionsDhcpOptionTagArray) ToGetDhcpOptionsDhcpOptionTagArrayOutput() GetDhcpOptionsDhcpOptionTagArrayOutput {
	return i.ToGetDhcpOptionsDhcpOptionTagArrayOutputWithContext(context.Background())
}

func (i GetDhcpOptionsDhcpOptionTagArray) ToGetDhcpOptionsDhcpOptionTagArrayOutputWithContext(ctx context.Context) GetDhcpOptionsDhcpOptionTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDhcpOptionsDhcpOptionTagArrayOutput)
}

type GetDhcpOptionsDhcpOptionTagOutput struct{ *pulumi.OutputState }

func (GetDhcpOptionsDhcpOptionTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDhcpOptionsDhcpOptionTag)(nil)).Elem()
}

func (o GetDhcpOptionsDhcpOptionTagOutput) ToGetDhcpOptionsDhcpOptionTagOutput() GetDhcpOptionsDhcpOptionTagOutput {
	return o
}

func (o GetDhcpOptionsDhcpOptionTagOutput) ToGetDhcpOptionsDhcpOptionTagOutputWithContext(ctx context.Context) GetDhcpOptionsDhcpOptionTagOutput {
	return o
}

// The key of the tag, with a minimum of 1 character.
func (o GetDhcpOptionsDhcpOptionTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetDhcpOptionsDhcpOptionTag) string { return v.Key }).(pulumi.StringOutput)
}

// The value of the tag, between 0 and 255 characters.
func (o GetDhcpOptionsDhcpOptionTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetDhcpOptionsDhcpOptionTag) string { return v.Value }).(pulumi.StringOutput)
}

type GetDhcpOptionsDhcpOptionTagArrayOutput struct{ *pulumi.OutputState }

func (GetDhcpOptionsDhcpOptionTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDhcpOptionsDhcpOptionTag)(nil)).Elem()
}

func (o GetDhcpOptionsDhcpOptionTagArrayOutput) ToGetDhcpOptionsDhcpOptionTagArrayOutput() GetDhcpOptionsDhcpOptionTagArrayOutput {
	return o
}

func (o GetDhcpOptionsDhcpOptionTagArrayOutput) ToGetDhcpOptionsDhcpOptionTagArrayOutputWithContext(ctx context.Context) GetDhcpOptionsDhcpOptionTagArrayOutput {
	return o
}

func (o GetDhcpOptionsDhcpOptionTagArrayOutput) Index(i pulumi.IntInput) GetDhcpOptionsDhcpOptionTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDhcpOptionsDhcpOptionTag {
		return vs[0].([]GetDhcpOptionsDhcpOptionTag)[vs[1].(int)]
	}).(GetDhcpOptionsDhcpOptionTagOutput)
}

type GetDhcpOptionsFilter struct {
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// GetDhcpOptionsFilterInput is an input type that accepts GetDhcpOptionsFilterArgs and GetDhcpOptionsFilterOutput values.
// You can construct a concrete instance of `GetDhcpOptionsFilterInput` via:
//
//	GetDhcpOptionsFilterArgs{...}
type GetDhcpOptionsFilterInput interface {
	pulumi.Input

	ToGetDhcpOptionsFilterOutput() GetDhcpOptionsFilterOutput
	ToGetDhcpOptionsFilterOutputWithContext(context.Context) GetDhcpOptionsFilterOutput
}

type GetDhcpOptionsFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetDhcpOptionsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDhcpOptionsFilter)(nil)).Elem()
}

func (i GetDhcpOptionsFilterArgs) ToGetDhcpOptionsFilterOutput() GetDhcpOptionsFilterOutput {
	return i.ToGetDhcpOptionsFilterOutputWithContext(context.Background())
}

func (i GetDhcpOptionsFilterArgs) ToGetDhcpOptionsFilterOutputWithContext(ctx context.Context) GetDhcpOptionsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDhcpOptionsFilterOutput)
}

// GetDhcpOptionsFilterArrayInput is an input type that accepts GetDhcpOptionsFilterArray and GetDhcpOptionsFilterArrayOutput values.
// You can construct a concrete instance of `GetDhcpOptionsFilterArrayInput` via:
//
//	GetDhcpOptionsFilterArray{ GetDhcpOptionsFilterArgs{...} }
type GetDhcpOptionsFilterArrayInput interface {
	pulumi.Input

	ToGetDhcpOptionsFilterArrayOutput() GetDhcpOptionsFilterArrayOutput
	ToGetDhcpOptionsFilterArrayOutputWithContext(context.Context) GetDhcpOptionsFilterArrayOutput
}

type GetDhcpOptionsFilterArray []GetDhcpOptionsFilterInput

func (GetDhcpOptionsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDhcpOptionsFilter)(nil)).Elem()
}

func (i GetDhcpOptionsFilterArray) ToGetDhcpOptionsFilterArrayOutput() GetDhcpOptionsFilterArrayOutput {
	return i.ToGetDhcpOptionsFilterArrayOutputWithContext(context.Background())
}

func (i GetDhcpOptionsFilterArray) ToGetDhcpOptionsFilterArrayOutputWithContext(ctx context.Context) GetDhcpOptionsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDhcpOptionsFilterArrayOutput)
}

type GetDhcpOptionsFilterOutput struct{ *pulumi.OutputState }

func (GetDhcpOptionsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDhcpOptionsFilter)(nil)).Elem()
}

func (o GetDhcpOptionsFilterOutput) ToGetDhcpOptionsFilterOutput() GetDhcpOptionsFilterOutput {
	return o
}

func (o GetDhcpOptionsFilterOutput) ToGetDhcpOptionsFilterOutputWithContext(ctx context.Context) GetDhcpOptionsFilterOutput {
	return o
}

func (o GetDhcpOptionsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDhcpOptionsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetDhcpOptionsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDhcpOptionsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetDhcpOptionsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetDhcpOptionsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDhcpOptionsFilter)(nil)).Elem()
}

func (o GetDhcpOptionsFilterArrayOutput) ToGetDhcpOptionsFilterArrayOutput() GetDhcpOptionsFilterArrayOutput {
	return o
}

func (o GetDhcpOptionsFilterArrayOutput) ToGetDhcpOptionsFilterArrayOutputWithContext(ctx context.Context) GetDhcpOptionsFilterArrayOutput {
	return o
}

func (o GetDhcpOptionsFilterArrayOutput) Index(i pulumi.IntInput) GetDhcpOptionsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDhcpOptionsFilter {
		return vs[0].([]GetDhcpOptionsFilter)[vs[1].(int)]
	}).(GetDhcpOptionsFilterOutput)
}

type GetEntitiesLinkedToPolicyPolicyEntity struct {
	// TODO_ARRAY
	Accounts []GetEntitiesLinkedToPolicyPolicyEntityAccount `pulumi:"accounts"`
	// TODO_ARRAY
	Groups []GetEntitiesLinkedToPolicyPolicyEntityGroup `pulumi:"groups"`
	// TODO_ARRAY
	Users []GetEntitiesLinkedToPolicyPolicyEntityUser `pulumi:"users"`
}

// GetEntitiesLinkedToPolicyPolicyEntityInput is an input type that accepts GetEntitiesLinkedToPolicyPolicyEntityArgs and GetEntitiesLinkedToPolicyPolicyEntityOutput values.
// You can construct a concrete instance of `GetEntitiesLinkedToPolicyPolicyEntityInput` via:
//
//	GetEntitiesLinkedToPolicyPolicyEntityArgs{...}
type GetEntitiesLinkedToPolicyPolicyEntityInput interface {
	pulumi.Input

	ToGetEntitiesLinkedToPolicyPolicyEntityOutput() GetEntitiesLinkedToPolicyPolicyEntityOutput
	ToGetEntitiesLinkedToPolicyPolicyEntityOutputWithContext(context.Context) GetEntitiesLinkedToPolicyPolicyEntityOutput
}

type GetEntitiesLinkedToPolicyPolicyEntityArgs struct {
	// TODO_ARRAY
	Accounts GetEntitiesLinkedToPolicyPolicyEntityAccountArrayInput `pulumi:"accounts"`
	// TODO_ARRAY
	Groups GetEntitiesLinkedToPolicyPolicyEntityGroupArrayInput `pulumi:"groups"`
	// TODO_ARRAY
	Users GetEntitiesLinkedToPolicyPolicyEntityUserArrayInput `pulumi:"users"`
}

func (GetEntitiesLinkedToPolicyPolicyEntityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEntitiesLinkedToPolicyPolicyEntity)(nil)).Elem()
}

func (i GetEntitiesLinkedToPolicyPolicyEntityArgs) ToGetEntitiesLinkedToPolicyPolicyEntityOutput() GetEntitiesLinkedToPolicyPolicyEntityOutput {
	return i.ToGetEntitiesLinkedToPolicyPolicyEntityOutputWithContext(context.Background())
}

func (i GetEntitiesLinkedToPolicyPolicyEntityArgs) ToGetEntitiesLinkedToPolicyPolicyEntityOutputWithContext(ctx context.Context) GetEntitiesLinkedToPolicyPolicyEntityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEntitiesLinkedToPolicyPolicyEntityOutput)
}

// GetEntitiesLinkedToPolicyPolicyEntityArrayInput is an input type that accepts GetEntitiesLinkedToPolicyPolicyEntityArray and GetEntitiesLinkedToPolicyPolicyEntityArrayOutput values.
// You can construct a concrete instance of `GetEntitiesLinkedToPolicyPolicyEntityArrayInput` via:
//
//	GetEntitiesLinkedToPolicyPolicyEntityArray{ GetEntitiesLinkedToPolicyPolicyEntityArgs{...} }
type GetEntitiesLinkedToPolicyPolicyEntityArrayInput interface {
	pulumi.Input

	ToGetEntitiesLinkedToPolicyPolicyEntityArrayOutput() GetEntitiesLinkedToPolicyPolicyEntityArrayOutput
	ToGetEntitiesLinkedToPolicyPolicyEntityArrayOutputWithContext(context.Context) GetEntitiesLinkedToPolicyPolicyEntityArrayOutput
}

type GetEntitiesLinkedToPolicyPolicyEntityArray []GetEntitiesLinkedToPolicyPolicyEntityInput

func (GetEntitiesLinkedToPolicyPolicyEntityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEntitiesLinkedToPolicyPolicyEntity)(nil)).Elem()
}

func (i GetEntitiesLinkedToPolicyPolicyEntityArray) ToGetEntitiesLinkedToPolicyPolicyEntityArrayOutput() GetEntitiesLinkedToPolicyPolicyEntityArrayOutput {
	return i.ToGetEntitiesLinkedToPolicyPolicyEntityArrayOutputWithContext(context.Background())
}

func (i GetEntitiesLinkedToPolicyPolicyEntityArray) ToGetEntitiesLinkedToPolicyPolicyEntityArrayOutputWithContext(ctx context.Context) GetEntitiesLinkedToPolicyPolicyEntityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEntitiesLinkedToPolicyPolicyEntityArrayOutput)
}

type GetEntitiesLinkedToPolicyPolicyEntityOutput struct{ *pulumi.OutputState }

func (GetEntitiesLinkedToPolicyPolicyEntityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEntitiesLinkedToPolicyPolicyEntity)(nil)).Elem()
}

func (o GetEntitiesLinkedToPolicyPolicyEntityOutput) ToGetEntitiesLinkedToPolicyPolicyEntityOutput() GetEntitiesLinkedToPolicyPolicyEntityOutput {
	return o
}

func (o GetEntitiesLinkedToPolicyPolicyEntityOutput) ToGetEntitiesLinkedToPolicyPolicyEntityOutputWithContext(ctx context.Context) GetEntitiesLinkedToPolicyPolicyEntityOutput {
	return o
}

// TODO_ARRAY
func (o GetEntitiesLinkedToPolicyPolicyEntityOutput) Accounts() GetEntitiesLinkedToPolicyPolicyEntityAccountArrayOutput {
	return o.ApplyT(func(v GetEntitiesLinkedToPolicyPolicyEntity) []GetEntitiesLinkedToPolicyPolicyEntityAccount {
		return v.Accounts
	}).(GetEntitiesLinkedToPolicyPolicyEntityAccountArrayOutput)
}

// TODO_ARRAY
func (o GetEntitiesLinkedToPolicyPolicyEntityOutput) Groups() GetEntitiesLinkedToPolicyPolicyEntityGroupArrayOutput {
	return o.ApplyT(func(v GetEntitiesLinkedToPolicyPolicyEntity) []GetEntitiesLinkedToPolicyPolicyEntityGroup {
		return v.Groups
	}).(GetEntitiesLinkedToPolicyPolicyEntityGroupArrayOutput)
}

// TODO_ARRAY
func (o GetEntitiesLinkedToPolicyPolicyEntityOutput) Users() GetEntitiesLinkedToPolicyPolicyEntityUserArrayOutput {
	return o.ApplyT(func(v GetEntitiesLinkedToPolicyPolicyEntity) []GetEntitiesLinkedToPolicyPolicyEntityUser {
		return v.Users
	}).(GetEntitiesLinkedToPolicyPolicyEntityUserArrayOutput)
}

type GetEntitiesLinkedToPolicyPolicyEntityArrayOutput struct{ *pulumi.OutputState }

func (GetEntitiesLinkedToPolicyPolicyEntityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEntitiesLinkedToPolicyPolicyEntity)(nil)).Elem()
}

func (o GetEntitiesLinkedToPolicyPolicyEntityArrayOutput) ToGetEntitiesLinkedToPolicyPolicyEntityArrayOutput() GetEntitiesLinkedToPolicyPolicyEntityArrayOutput {
	return o
}

func (o GetEntitiesLinkedToPolicyPolicyEntityArrayOutput) ToGetEntitiesLinkedToPolicyPolicyEntityArrayOutputWithContext(ctx context.Context) GetEntitiesLinkedToPolicyPolicyEntityArrayOutput {
	return o
}

func (o GetEntitiesLinkedToPolicyPolicyEntityArrayOutput) Index(i pulumi.IntInput) GetEntitiesLinkedToPolicyPolicyEntityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetEntitiesLinkedToPolicyPolicyEntity {
		return vs[0].([]GetEntitiesLinkedToPolicyPolicyEntity)[vs[1].(int)]
	}).(GetEntitiesLinkedToPolicyPolicyEntityOutput)
}

type GetEntitiesLinkedToPolicyPolicyEntityAccount struct {
	// The ID of the entity.
	Id string `pulumi:"id"`
	// The name of the entity.
	Name string `pulumi:"name"`
	// The OUTSCALE Resource Name (ORN) of the entity. For more information, see [Resource Identifiers](https://docs.outscale.com/en/userguide/Resource-Identifiers.html).
	Orn string `pulumi:"orn"`
}

// GetEntitiesLinkedToPolicyPolicyEntityAccountInput is an input type that accepts GetEntitiesLinkedToPolicyPolicyEntityAccountArgs and GetEntitiesLinkedToPolicyPolicyEntityAccountOutput values.
// You can construct a concrete instance of `GetEntitiesLinkedToPolicyPolicyEntityAccountInput` via:
//
//	GetEntitiesLinkedToPolicyPolicyEntityAccountArgs{...}
type GetEntitiesLinkedToPolicyPolicyEntityAccountInput interface {
	pulumi.Input

	ToGetEntitiesLinkedToPolicyPolicyEntityAccountOutput() GetEntitiesLinkedToPolicyPolicyEntityAccountOutput
	ToGetEntitiesLinkedToPolicyPolicyEntityAccountOutputWithContext(context.Context) GetEntitiesLinkedToPolicyPolicyEntityAccountOutput
}

type GetEntitiesLinkedToPolicyPolicyEntityAccountArgs struct {
	// The ID of the entity.
	Id pulumi.StringInput `pulumi:"id"`
	// The name of the entity.
	Name pulumi.StringInput `pulumi:"name"`
	// The OUTSCALE Resource Name (ORN) of the entity. For more information, see [Resource Identifiers](https://docs.outscale.com/en/userguide/Resource-Identifiers.html).
	Orn pulumi.StringInput `pulumi:"orn"`
}

func (GetEntitiesLinkedToPolicyPolicyEntityAccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEntitiesLinkedToPolicyPolicyEntityAccount)(nil)).Elem()
}

func (i GetEntitiesLinkedToPolicyPolicyEntityAccountArgs) ToGetEntitiesLinkedToPolicyPolicyEntityAccountOutput() GetEntitiesLinkedToPolicyPolicyEntityAccountOutput {
	return i.ToGetEntitiesLinkedToPolicyPolicyEntityAccountOutputWithContext(context.Background())
}

func (i GetEntitiesLinkedToPolicyPolicyEntityAccountArgs) ToGetEntitiesLinkedToPolicyPolicyEntityAccountOutputWithContext(ctx context.Context) GetEntitiesLinkedToPolicyPolicyEntityAccountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEntitiesLinkedToPolicyPolicyEntityAccountOutput)
}

// GetEntitiesLinkedToPolicyPolicyEntityAccountArrayInput is an input type that accepts GetEntitiesLinkedToPolicyPolicyEntityAccountArray and GetEntitiesLinkedToPolicyPolicyEntityAccountArrayOutput values.
// You can construct a concrete instance of `GetEntitiesLinkedToPolicyPolicyEntityAccountArrayInput` via:
//
//	GetEntitiesLinkedToPolicyPolicyEntityAccountArray{ GetEntitiesLinkedToPolicyPolicyEntityAccountArgs{...} }
type GetEntitiesLinkedToPolicyPolicyEntityAccountArrayInput interface {
	pulumi.Input

	ToGetEntitiesLinkedToPolicyPolicyEntityAccountArrayOutput() GetEntitiesLinkedToPolicyPolicyEntityAccountArrayOutput
	ToGetEntitiesLinkedToPolicyPolicyEntityAccountArrayOutputWithContext(context.Context) GetEntitiesLinkedToPolicyPolicyEntityAccountArrayOutput
}

type GetEntitiesLinkedToPolicyPolicyEntityAccountArray []GetEntitiesLinkedToPolicyPolicyEntityAccountInput

func (GetEntitiesLinkedToPolicyPolicyEntityAccountArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEntitiesLinkedToPolicyPolicyEntityAccount)(nil)).Elem()
}

func (i GetEntitiesLinkedToPolicyPolicyEntityAccountArray) ToGetEntitiesLinkedToPolicyPolicyEntityAccountArrayOutput() GetEntitiesLinkedToPolicyPolicyEntityAccountArrayOutput {
	return i.ToGetEntitiesLinkedToPolicyPolicyEntityAccountArrayOutputWithContext(context.Background())
}

func (i GetEntitiesLinkedToPolicyPolicyEntityAccountArray) ToGetEntitiesLinkedToPolicyPolicyEntityAccountArrayOutputWithContext(ctx context.Context) GetEntitiesLinkedToPolicyPolicyEntityAccountArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEntitiesLinkedToPolicyPolicyEntityAccountArrayOutput)
}

type GetEntitiesLinkedToPolicyPolicyEntityAccountOutput struct{ *pulumi.OutputState }

func (GetEntitiesLinkedToPolicyPolicyEntityAccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEntitiesLinkedToPolicyPolicyEntityAccount)(nil)).Elem()
}

func (o GetEntitiesLinkedToPolicyPolicyEntityAccountOutput) ToGetEntitiesLinkedToPolicyPolicyEntityAccountOutput() GetEntitiesLinkedToPolicyPolicyEntityAccountOutput {
	return o
}

func (o GetEntitiesLinkedToPolicyPolicyEntityAccountOutput) ToGetEntitiesLinkedToPolicyPolicyEntityAccountOutputWithContext(ctx context.Context) GetEntitiesLinkedToPolicyPolicyEntityAccountOutput {
	return o
}

// The ID of the entity.
func (o GetEntitiesLinkedToPolicyPolicyEntityAccountOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetEntitiesLinkedToPolicyPolicyEntityAccount) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the entity.
func (o GetEntitiesLinkedToPolicyPolicyEntityAccountOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetEntitiesLinkedToPolicyPolicyEntityAccount) string { return v.Name }).(pulumi.StringOutput)
}

// The OUTSCALE Resource Name (ORN) of the entity. For more information, see [Resource Identifiers](https://docs.outscale.com/en/userguide/Resource-Identifiers.html).
func (o GetEntitiesLinkedToPolicyPolicyEntityAccountOutput) Orn() pulumi.StringOutput {
	return o.ApplyT(func(v GetEntitiesLinkedToPolicyPolicyEntityAccount) string { return v.Orn }).(pulumi.StringOutput)
}

type GetEntitiesLinkedToPolicyPolicyEntityAccountArrayOutput struct{ *pulumi.OutputState }

func (GetEntitiesLinkedToPolicyPolicyEntityAccountArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEntitiesLinkedToPolicyPolicyEntityAccount)(nil)).Elem()
}

func (o GetEntitiesLinkedToPolicyPolicyEntityAccountArrayOutput) ToGetEntitiesLinkedToPolicyPolicyEntityAccountArrayOutput() GetEntitiesLinkedToPolicyPolicyEntityAccountArrayOutput {
	return o
}

func (o GetEntitiesLinkedToPolicyPolicyEntityAccountArrayOutput) ToGetEntitiesLinkedToPolicyPolicyEntityAccountArrayOutputWithContext(ctx context.Context) GetEntitiesLinkedToPolicyPolicyEntityAccountArrayOutput {
	return o
}

func (o GetEntitiesLinkedToPolicyPolicyEntityAccountArrayOutput) Index(i pulumi.IntInput) GetEntitiesLinkedToPolicyPolicyEntityAccountOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetEntitiesLinkedToPolicyPolicyEntityAccount {
		return vs[0].([]GetEntitiesLinkedToPolicyPolicyEntityAccount)[vs[1].(int)]
	}).(GetEntitiesLinkedToPolicyPolicyEntityAccountOutput)
}

type GetEntitiesLinkedToPolicyPolicyEntityGroup struct {
	// The ID of the entity.
	Id string `pulumi:"id"`
	// The name of the entity.
	Name string `pulumi:"name"`
	// The OUTSCALE Resource Name (ORN) of the entity. For more information, see [Resource Identifiers](https://docs.outscale.com/en/userguide/Resource-Identifiers.html).
	Orn string `pulumi:"orn"`
}

// GetEntitiesLinkedToPolicyPolicyEntityGroupInput is an input type that accepts GetEntitiesLinkedToPolicyPolicyEntityGroupArgs and GetEntitiesLinkedToPolicyPolicyEntityGroupOutput values.
// You can construct a concrete instance of `GetEntitiesLinkedToPolicyPolicyEntityGroupInput` via:
//
//	GetEntitiesLinkedToPolicyPolicyEntityGroupArgs{...}
type GetEntitiesLinkedToPolicyPolicyEntityGroupInput interface {
	pulumi.Input

	ToGetEntitiesLinkedToPolicyPolicyEntityGroupOutput() GetEntitiesLinkedToPolicyPolicyEntityGroupOutput
	ToGetEntitiesLinkedToPolicyPolicyEntityGroupOutputWithContext(context.Context) GetEntitiesLinkedToPolicyPolicyEntityGroupOutput
}

type GetEntitiesLinkedToPolicyPolicyEntityGroupArgs struct {
	// The ID of the entity.
	Id pulumi.StringInput `pulumi:"id"`
	// The name of the entity.
	Name pulumi.StringInput `pulumi:"name"`
	// The OUTSCALE Resource Name (ORN) of the entity. For more information, see [Resource Identifiers](https://docs.outscale.com/en/userguide/Resource-Identifiers.html).
	Orn pulumi.StringInput `pulumi:"orn"`
}

func (GetEntitiesLinkedToPolicyPolicyEntityGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEntitiesLinkedToPolicyPolicyEntityGroup)(nil)).Elem()
}

func (i GetEntitiesLinkedToPolicyPolicyEntityGroupArgs) ToGetEntitiesLinkedToPolicyPolicyEntityGroupOutput() GetEntitiesLinkedToPolicyPolicyEntityGroupOutput {
	return i.ToGetEntitiesLinkedToPolicyPolicyEntityGroupOutputWithContext(context.Background())
}

func (i GetEntitiesLinkedToPolicyPolicyEntityGroupArgs) ToGetEntitiesLinkedToPolicyPolicyEntityGroupOutputWithContext(ctx context.Context) GetEntitiesLinkedToPolicyPolicyEntityGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEntitiesLinkedToPolicyPolicyEntityGroupOutput)
}

// GetEntitiesLinkedToPolicyPolicyEntityGroupArrayInput is an input type that accepts GetEntitiesLinkedToPolicyPolicyEntityGroupArray and GetEntitiesLinkedToPolicyPolicyEntityGroupArrayOutput values.
// You can construct a concrete instance of `GetEntitiesLinkedToPolicyPolicyEntityGroupArrayInput` via:
//
//	GetEntitiesLinkedToPolicyPolicyEntityGroupArray{ GetEntitiesLinkedToPolicyPolicyEntityGroupArgs{...} }
type GetEntitiesLinkedToPolicyPolicyEntityGroupArrayInput interface {
	pulumi.Input

	ToGetEntitiesLinkedToPolicyPolicyEntityGroupArrayOutput() GetEntitiesLinkedToPolicyPolicyEntityGroupArrayOutput
	ToGetEntitiesLinkedToPolicyPolicyEntityGroupArrayOutputWithContext(context.Context) GetEntitiesLinkedToPolicyPolicyEntityGroupArrayOutput
}

type GetEntitiesLinkedToPolicyPolicyEntityGroupArray []GetEntitiesLinkedToPolicyPolicyEntityGroupInput

func (GetEntitiesLinkedToPolicyPolicyEntityGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEntitiesLinkedToPolicyPolicyEntityGroup)(nil)).Elem()
}

func (i GetEntitiesLinkedToPolicyPolicyEntityGroupArray) ToGetEntitiesLinkedToPolicyPolicyEntityGroupArrayOutput() GetEntitiesLinkedToPolicyPolicyEntityGroupArrayOutput {
	return i.ToGetEntitiesLinkedToPolicyPolicyEntityGroupArrayOutputWithContext(context.Background())
}

func (i GetEntitiesLinkedToPolicyPolicyEntityGroupArray) ToGetEntitiesLinkedToPolicyPolicyEntityGroupArrayOutputWithContext(ctx context.Context) GetEntitiesLinkedToPolicyPolicyEntityGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEntitiesLinkedToPolicyPolicyEntityGroupArrayOutput)
}

type GetEntitiesLinkedToPolicyPolicyEntityGroupOutput struct{ *pulumi.OutputState }

func (GetEntitiesLinkedToPolicyPolicyEntityGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEntitiesLinkedToPolicyPolicyEntityGroup)(nil)).Elem()
}

func (o GetEntitiesLinkedToPolicyPolicyEntityGroupOutput) ToGetEntitiesLinkedToPolicyPolicyEntityGroupOutput() GetEntitiesLinkedToPolicyPolicyEntityGroupOutput {
	return o
}

func (o GetEntitiesLinkedToPolicyPolicyEntityGroupOutput) ToGetEntitiesLinkedToPolicyPolicyEntityGroupOutputWithContext(ctx context.Context) GetEntitiesLinkedToPolicyPolicyEntityGroupOutput {
	return o
}

// The ID of the entity.
func (o GetEntitiesLinkedToPolicyPolicyEntityGroupOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetEntitiesLinkedToPolicyPolicyEntityGroup) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the entity.
func (o GetEntitiesLinkedToPolicyPolicyEntityGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetEntitiesLinkedToPolicyPolicyEntityGroup) string { return v.Name }).(pulumi.StringOutput)
}

// The OUTSCALE Resource Name (ORN) of the entity. For more information, see [Resource Identifiers](https://docs.outscale.com/en/userguide/Resource-Identifiers.html).
func (o GetEntitiesLinkedToPolicyPolicyEntityGroupOutput) Orn() pulumi.StringOutput {
	return o.ApplyT(func(v GetEntitiesLinkedToPolicyPolicyEntityGroup) string { return v.Orn }).(pulumi.StringOutput)
}

type GetEntitiesLinkedToPolicyPolicyEntityGroupArrayOutput struct{ *pulumi.OutputState }

func (GetEntitiesLinkedToPolicyPolicyEntityGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEntitiesLinkedToPolicyPolicyEntityGroup)(nil)).Elem()
}

func (o GetEntitiesLinkedToPolicyPolicyEntityGroupArrayOutput) ToGetEntitiesLinkedToPolicyPolicyEntityGroupArrayOutput() GetEntitiesLinkedToPolicyPolicyEntityGroupArrayOutput {
	return o
}

func (o GetEntitiesLinkedToPolicyPolicyEntityGroupArrayOutput) ToGetEntitiesLinkedToPolicyPolicyEntityGroupArrayOutputWithContext(ctx context.Context) GetEntitiesLinkedToPolicyPolicyEntityGroupArrayOutput {
	return o
}

func (o GetEntitiesLinkedToPolicyPolicyEntityGroupArrayOutput) Index(i pulumi.IntInput) GetEntitiesLinkedToPolicyPolicyEntityGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetEntitiesLinkedToPolicyPolicyEntityGroup {
		return vs[0].([]GetEntitiesLinkedToPolicyPolicyEntityGroup)[vs[1].(int)]
	}).(GetEntitiesLinkedToPolicyPolicyEntityGroupOutput)
}

type GetEntitiesLinkedToPolicyPolicyEntityUser struct {
	// The ID of the entity.
	Id string `pulumi:"id"`
	// The name of the entity.
	Name string `pulumi:"name"`
	// The OUTSCALE Resource Name (ORN) of the entity. For more information, see [Resource Identifiers](https://docs.outscale.com/en/userguide/Resource-Identifiers.html).
	Orn string `pulumi:"orn"`
}

// GetEntitiesLinkedToPolicyPolicyEntityUserInput is an input type that accepts GetEntitiesLinkedToPolicyPolicyEntityUserArgs and GetEntitiesLinkedToPolicyPolicyEntityUserOutput values.
// You can construct a concrete instance of `GetEntitiesLinkedToPolicyPolicyEntityUserInput` via:
//
//	GetEntitiesLinkedToPolicyPolicyEntityUserArgs{...}
type GetEntitiesLinkedToPolicyPolicyEntityUserInput interface {
	pulumi.Input

	ToGetEntitiesLinkedToPolicyPolicyEntityUserOutput() GetEntitiesLinkedToPolicyPolicyEntityUserOutput
	ToGetEntitiesLinkedToPolicyPolicyEntityUserOutputWithContext(context.Context) GetEntitiesLinkedToPolicyPolicyEntityUserOutput
}

type GetEntitiesLinkedToPolicyPolicyEntityUserArgs struct {
	// The ID of the entity.
	Id pulumi.StringInput `pulumi:"id"`
	// The name of the entity.
	Name pulumi.StringInput `pulumi:"name"`
	// The OUTSCALE Resource Name (ORN) of the entity. For more information, see [Resource Identifiers](https://docs.outscale.com/en/userguide/Resource-Identifiers.html).
	Orn pulumi.StringInput `pulumi:"orn"`
}

func (GetEntitiesLinkedToPolicyPolicyEntityUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEntitiesLinkedToPolicyPolicyEntityUser)(nil)).Elem()
}

func (i GetEntitiesLinkedToPolicyPolicyEntityUserArgs) ToGetEntitiesLinkedToPolicyPolicyEntityUserOutput() GetEntitiesLinkedToPolicyPolicyEntityUserOutput {
	return i.ToGetEntitiesLinkedToPolicyPolicyEntityUserOutputWithContext(context.Background())
}

func (i GetEntitiesLinkedToPolicyPolicyEntityUserArgs) ToGetEntitiesLinkedToPolicyPolicyEntityUserOutputWithContext(ctx context.Context) GetEntitiesLinkedToPolicyPolicyEntityUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEntitiesLinkedToPolicyPolicyEntityUserOutput)
}

// GetEntitiesLinkedToPolicyPolicyEntityUserArrayInput is an input type that accepts GetEntitiesLinkedToPolicyPolicyEntityUserArray and GetEntitiesLinkedToPolicyPolicyEntityUserArrayOutput values.
// You can construct a concrete instance of `GetEntitiesLinkedToPolicyPolicyEntityUserArrayInput` via:
//
//	GetEntitiesLinkedToPolicyPolicyEntityUserArray{ GetEntitiesLinkedToPolicyPolicyEntityUserArgs{...} }
type GetEntitiesLinkedToPolicyPolicyEntityUserArrayInput interface {
	pulumi.Input

	ToGetEntitiesLinkedToPolicyPolicyEntityUserArrayOutput() GetEntitiesLinkedToPolicyPolicyEntityUserArrayOutput
	ToGetEntitiesLinkedToPolicyPolicyEntityUserArrayOutputWithContext(context.Context) GetEntitiesLinkedToPolicyPolicyEntityUserArrayOutput
}

type GetEntitiesLinkedToPolicyPolicyEntityUserArray []GetEntitiesLinkedToPolicyPolicyEntityUserInput

func (GetEntitiesLinkedToPolicyPolicyEntityUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEntitiesLinkedToPolicyPolicyEntityUser)(nil)).Elem()
}

func (i GetEntitiesLinkedToPolicyPolicyEntityUserArray) ToGetEntitiesLinkedToPolicyPolicyEntityUserArrayOutput() GetEntitiesLinkedToPolicyPolicyEntityUserArrayOutput {
	return i.ToGetEntitiesLinkedToPolicyPolicyEntityUserArrayOutputWithContext(context.Background())
}

func (i GetEntitiesLinkedToPolicyPolicyEntityUserArray) ToGetEntitiesLinkedToPolicyPolicyEntityUserArrayOutputWithContext(ctx context.Context) GetEntitiesLinkedToPolicyPolicyEntityUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEntitiesLinkedToPolicyPolicyEntityUserArrayOutput)
}

type GetEntitiesLinkedToPolicyPolicyEntityUserOutput struct{ *pulumi.OutputState }

func (GetEntitiesLinkedToPolicyPolicyEntityUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEntitiesLinkedToPolicyPolicyEntityUser)(nil)).Elem()
}

func (o GetEntitiesLinkedToPolicyPolicyEntityUserOutput) ToGetEntitiesLinkedToPolicyPolicyEntityUserOutput() GetEntitiesLinkedToPolicyPolicyEntityUserOutput {
	return o
}

func (o GetEntitiesLinkedToPolicyPolicyEntityUserOutput) ToGetEntitiesLinkedToPolicyPolicyEntityUserOutputWithContext(ctx context.Context) GetEntitiesLinkedToPolicyPolicyEntityUserOutput {
	return o
}

// The ID of the entity.
func (o GetEntitiesLinkedToPolicyPolicyEntityUserOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetEntitiesLinkedToPolicyPolicyEntityUser) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the entity.
func (o GetEntitiesLinkedToPolicyPolicyEntityUserOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetEntitiesLinkedToPolicyPolicyEntityUser) string { return v.Name }).(pulumi.StringOutput)
}

// The OUTSCALE Resource Name (ORN) of the entity. For more information, see [Resource Identifiers](https://docs.outscale.com/en/userguide/Resource-Identifiers.html).
func (o GetEntitiesLinkedToPolicyPolicyEntityUserOutput) Orn() pulumi.StringOutput {
	return o.ApplyT(func(v GetEntitiesLinkedToPolicyPolicyEntityUser) string { return v.Orn }).(pulumi.StringOutput)
}

type GetEntitiesLinkedToPolicyPolicyEntityUserArrayOutput struct{ *pulumi.OutputState }

func (GetEntitiesLinkedToPolicyPolicyEntityUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEntitiesLinkedToPolicyPolicyEntityUser)(nil)).Elem()
}

func (o GetEntitiesLinkedToPolicyPolicyEntityUserArrayOutput) ToGetEntitiesLinkedToPolicyPolicyEntityUserArrayOutput() GetEntitiesLinkedToPolicyPolicyEntityUserArrayOutput {
	return o
}

func (o GetEntitiesLinkedToPolicyPolicyEntityUserArrayOutput) ToGetEntitiesLinkedToPolicyPolicyEntityUserArrayOutputWithContext(ctx context.Context) GetEntitiesLinkedToPolicyPolicyEntityUserArrayOutput {
	return o
}

func (o GetEntitiesLinkedToPolicyPolicyEntityUserArrayOutput) Index(i pulumi.IntInput) GetEntitiesLinkedToPolicyPolicyEntityUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetEntitiesLinkedToPolicyPolicyEntityUser {
		return vs[0].([]GetEntitiesLinkedToPolicyPolicyEntityUser)[vs[1].(int)]
	}).(GetEntitiesLinkedToPolicyPolicyEntityUserOutput)
}

type GetFlexibleGpuCatalogFilter struct {
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// GetFlexibleGpuCatalogFilterInput is an input type that accepts GetFlexibleGpuCatalogFilterArgs and GetFlexibleGpuCatalogFilterOutput values.
// You can construct a concrete instance of `GetFlexibleGpuCatalogFilterInput` via:
//
//	GetFlexibleGpuCatalogFilterArgs{...}
type GetFlexibleGpuCatalogFilterInput interface {
	pulumi.Input

	ToGetFlexibleGpuCatalogFilterOutput() GetFlexibleGpuCatalogFilterOutput
	ToGetFlexibleGpuCatalogFilterOutputWithContext(context.Context) GetFlexibleGpuCatalogFilterOutput
}

type GetFlexibleGpuCatalogFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetFlexibleGpuCatalogFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFlexibleGpuCatalogFilter)(nil)).Elem()
}

func (i GetFlexibleGpuCatalogFilterArgs) ToGetFlexibleGpuCatalogFilterOutput() GetFlexibleGpuCatalogFilterOutput {
	return i.ToGetFlexibleGpuCatalogFilterOutputWithContext(context.Background())
}

func (i GetFlexibleGpuCatalogFilterArgs) ToGetFlexibleGpuCatalogFilterOutputWithContext(ctx context.Context) GetFlexibleGpuCatalogFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFlexibleGpuCatalogFilterOutput)
}

// GetFlexibleGpuCatalogFilterArrayInput is an input type that accepts GetFlexibleGpuCatalogFilterArray and GetFlexibleGpuCatalogFilterArrayOutput values.
// You can construct a concrete instance of `GetFlexibleGpuCatalogFilterArrayInput` via:
//
//	GetFlexibleGpuCatalogFilterArray{ GetFlexibleGpuCatalogFilterArgs{...} }
type GetFlexibleGpuCatalogFilterArrayInput interface {
	pulumi.Input

	ToGetFlexibleGpuCatalogFilterArrayOutput() GetFlexibleGpuCatalogFilterArrayOutput
	ToGetFlexibleGpuCatalogFilterArrayOutputWithContext(context.Context) GetFlexibleGpuCatalogFilterArrayOutput
}

type GetFlexibleGpuCatalogFilterArray []GetFlexibleGpuCatalogFilterInput

func (GetFlexibleGpuCatalogFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFlexibleGpuCatalogFilter)(nil)).Elem()
}

func (i GetFlexibleGpuCatalogFilterArray) ToGetFlexibleGpuCatalogFilterArrayOutput() GetFlexibleGpuCatalogFilterArrayOutput {
	return i.ToGetFlexibleGpuCatalogFilterArrayOutputWithContext(context.Background())
}

func (i GetFlexibleGpuCatalogFilterArray) ToGetFlexibleGpuCatalogFilterArrayOutputWithContext(ctx context.Context) GetFlexibleGpuCatalogFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFlexibleGpuCatalogFilterArrayOutput)
}

type GetFlexibleGpuCatalogFilterOutput struct{ *pulumi.OutputState }

func (GetFlexibleGpuCatalogFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFlexibleGpuCatalogFilter)(nil)).Elem()
}

func (o GetFlexibleGpuCatalogFilterOutput) ToGetFlexibleGpuCatalogFilterOutput() GetFlexibleGpuCatalogFilterOutput {
	return o
}

func (o GetFlexibleGpuCatalogFilterOutput) ToGetFlexibleGpuCatalogFilterOutputWithContext(ctx context.Context) GetFlexibleGpuCatalogFilterOutput {
	return o
}

func (o GetFlexibleGpuCatalogFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlexibleGpuCatalogFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetFlexibleGpuCatalogFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetFlexibleGpuCatalogFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetFlexibleGpuCatalogFilterArrayOutput struct{ *pulumi.OutputState }

func (GetFlexibleGpuCatalogFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFlexibleGpuCatalogFilter)(nil)).Elem()
}

func (o GetFlexibleGpuCatalogFilterArrayOutput) ToGetFlexibleGpuCatalogFilterArrayOutput() GetFlexibleGpuCatalogFilterArrayOutput {
	return o
}

func (o GetFlexibleGpuCatalogFilterArrayOutput) ToGetFlexibleGpuCatalogFilterArrayOutputWithContext(ctx context.Context) GetFlexibleGpuCatalogFilterArrayOutput {
	return o
}

func (o GetFlexibleGpuCatalogFilterArrayOutput) Index(i pulumi.IntInput) GetFlexibleGpuCatalogFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFlexibleGpuCatalogFilter {
		return vs[0].([]GetFlexibleGpuCatalogFilter)[vs[1].(int)]
	}).(GetFlexibleGpuCatalogFilterOutput)
}

type GetFlexibleGpuCatalogFlexibleGpuCatalog struct {
	// The processor generations that the fGPUs are compatible with.
	Generations []string `pulumi:"generations"`
	// The maximum number of VM vCores that the fGPU is compatible with.
	MaxCpu int `pulumi:"maxCpu"`
	// The maximum amount of VM memory that the fGPU is compatible with.
	MaxRam int `pulumi:"maxRam"`
	// The model of fGPU.
	ModelName string `pulumi:"modelName"`
	// The amount of video RAM (VRAM) of the fGPU.
	VRam int `pulumi:"vRam"`
}

// GetFlexibleGpuCatalogFlexibleGpuCatalogInput is an input type that accepts GetFlexibleGpuCatalogFlexibleGpuCatalogArgs and GetFlexibleGpuCatalogFlexibleGpuCatalogOutput values.
// You can construct a concrete instance of `GetFlexibleGpuCatalogFlexibleGpuCatalogInput` via:
//
//	GetFlexibleGpuCatalogFlexibleGpuCatalogArgs{...}
type GetFlexibleGpuCatalogFlexibleGpuCatalogInput interface {
	pulumi.Input

	ToGetFlexibleGpuCatalogFlexibleGpuCatalogOutput() GetFlexibleGpuCatalogFlexibleGpuCatalogOutput
	ToGetFlexibleGpuCatalogFlexibleGpuCatalogOutputWithContext(context.Context) GetFlexibleGpuCatalogFlexibleGpuCatalogOutput
}

type GetFlexibleGpuCatalogFlexibleGpuCatalogArgs struct {
	// The processor generations that the fGPUs are compatible with.
	Generations pulumi.StringArrayInput `pulumi:"generations"`
	// The maximum number of VM vCores that the fGPU is compatible with.
	MaxCpu pulumi.IntInput `pulumi:"maxCpu"`
	// The maximum amount of VM memory that the fGPU is compatible with.
	MaxRam pulumi.IntInput `pulumi:"maxRam"`
	// The model of fGPU.
	ModelName pulumi.StringInput `pulumi:"modelName"`
	// The amount of video RAM (VRAM) of the fGPU.
	VRam pulumi.IntInput `pulumi:"vRam"`
}

func (GetFlexibleGpuCatalogFlexibleGpuCatalogArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFlexibleGpuCatalogFlexibleGpuCatalog)(nil)).Elem()
}

func (i GetFlexibleGpuCatalogFlexibleGpuCatalogArgs) ToGetFlexibleGpuCatalogFlexibleGpuCatalogOutput() GetFlexibleGpuCatalogFlexibleGpuCatalogOutput {
	return i.ToGetFlexibleGpuCatalogFlexibleGpuCatalogOutputWithContext(context.Background())
}

func (i GetFlexibleGpuCatalogFlexibleGpuCatalogArgs) ToGetFlexibleGpuCatalogFlexibleGpuCatalogOutputWithContext(ctx context.Context) GetFlexibleGpuCatalogFlexibleGpuCatalogOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFlexibleGpuCatalogFlexibleGpuCatalogOutput)
}

// GetFlexibleGpuCatalogFlexibleGpuCatalogArrayInput is an input type that accepts GetFlexibleGpuCatalogFlexibleGpuCatalogArray and GetFlexibleGpuCatalogFlexibleGpuCatalogArrayOutput values.
// You can construct a concrete instance of `GetFlexibleGpuCatalogFlexibleGpuCatalogArrayInput` via:
//
//	GetFlexibleGpuCatalogFlexibleGpuCatalogArray{ GetFlexibleGpuCatalogFlexibleGpuCatalogArgs{...} }
type GetFlexibleGpuCatalogFlexibleGpuCatalogArrayInput interface {
	pulumi.Input

	ToGetFlexibleGpuCatalogFlexibleGpuCatalogArrayOutput() GetFlexibleGpuCatalogFlexibleGpuCatalogArrayOutput
	ToGetFlexibleGpuCatalogFlexibleGpuCatalogArrayOutputWithContext(context.Context) GetFlexibleGpuCatalogFlexibleGpuCatalogArrayOutput
}

type GetFlexibleGpuCatalogFlexibleGpuCatalogArray []GetFlexibleGpuCatalogFlexibleGpuCatalogInput

func (GetFlexibleGpuCatalogFlexibleGpuCatalogArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFlexibleGpuCatalogFlexibleGpuCatalog)(nil)).Elem()
}

func (i GetFlexibleGpuCatalogFlexibleGpuCatalogArray) ToGetFlexibleGpuCatalogFlexibleGpuCatalogArrayOutput() GetFlexibleGpuCatalogFlexibleGpuCatalogArrayOutput {
	return i.ToGetFlexibleGpuCatalogFlexibleGpuCatalogArrayOutputWithContext(context.Background())
}

func (i GetFlexibleGpuCatalogFlexibleGpuCatalogArray) ToGetFlexibleGpuCatalogFlexibleGpuCatalogArrayOutputWithContext(ctx context.Context) GetFlexibleGpuCatalogFlexibleGpuCatalogArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFlexibleGpuCatalogFlexibleGpuCatalogArrayOutput)
}

type GetFlexibleGpuCatalogFlexibleGpuCatalogOutput struct{ *pulumi.OutputState }

func (GetFlexibleGpuCatalogFlexibleGpuCatalogOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFlexibleGpuCatalogFlexibleGpuCatalog)(nil)).Elem()
}

func (o GetFlexibleGpuCatalogFlexibleGpuCatalogOutput) ToGetFlexibleGpuCatalogFlexibleGpuCatalogOutput() GetFlexibleGpuCatalogFlexibleGpuCatalogOutput {
	return o
}

func (o GetFlexibleGpuCatalogFlexibleGpuCatalogOutput) ToGetFlexibleGpuCatalogFlexibleGpuCatalogOutputWithContext(ctx context.Context) GetFlexibleGpuCatalogFlexibleGpuCatalogOutput {
	return o
}

// The processor generations that the fGPUs are compatible with.
func (o GetFlexibleGpuCatalogFlexibleGpuCatalogOutput) Generations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetFlexibleGpuCatalogFlexibleGpuCatalog) []string { return v.Generations }).(pulumi.StringArrayOutput)
}

// The maximum number of VM vCores that the fGPU is compatible with.
func (o GetFlexibleGpuCatalogFlexibleGpuCatalogOutput) MaxCpu() pulumi.IntOutput {
	return o.ApplyT(func(v GetFlexibleGpuCatalogFlexibleGpuCatalog) int { return v.MaxCpu }).(pulumi.IntOutput)
}

// The maximum amount of VM memory that the fGPU is compatible with.
func (o GetFlexibleGpuCatalogFlexibleGpuCatalogOutput) MaxRam() pulumi.IntOutput {
	return o.ApplyT(func(v GetFlexibleGpuCatalogFlexibleGpuCatalog) int { return v.MaxRam }).(pulumi.IntOutput)
}

// The model of fGPU.
func (o GetFlexibleGpuCatalogFlexibleGpuCatalogOutput) ModelName() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlexibleGpuCatalogFlexibleGpuCatalog) string { return v.ModelName }).(pulumi.StringOutput)
}

// The amount of video RAM (VRAM) of the fGPU.
func (o GetFlexibleGpuCatalogFlexibleGpuCatalogOutput) VRam() pulumi.IntOutput {
	return o.ApplyT(func(v GetFlexibleGpuCatalogFlexibleGpuCatalog) int { return v.VRam }).(pulumi.IntOutput)
}

type GetFlexibleGpuCatalogFlexibleGpuCatalogArrayOutput struct{ *pulumi.OutputState }

func (GetFlexibleGpuCatalogFlexibleGpuCatalogArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFlexibleGpuCatalogFlexibleGpuCatalog)(nil)).Elem()
}

func (o GetFlexibleGpuCatalogFlexibleGpuCatalogArrayOutput) ToGetFlexibleGpuCatalogFlexibleGpuCatalogArrayOutput() GetFlexibleGpuCatalogFlexibleGpuCatalogArrayOutput {
	return o
}

func (o GetFlexibleGpuCatalogFlexibleGpuCatalogArrayOutput) ToGetFlexibleGpuCatalogFlexibleGpuCatalogArrayOutputWithContext(ctx context.Context) GetFlexibleGpuCatalogFlexibleGpuCatalogArrayOutput {
	return o
}

func (o GetFlexibleGpuCatalogFlexibleGpuCatalogArrayOutput) Index(i pulumi.IntInput) GetFlexibleGpuCatalogFlexibleGpuCatalogOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFlexibleGpuCatalogFlexibleGpuCatalog {
		return vs[0].([]GetFlexibleGpuCatalogFlexibleGpuCatalog)[vs[1].(int)]
	}).(GetFlexibleGpuCatalogFlexibleGpuCatalogOutput)
}

type GetFlexibleGpuFilter struct {
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// GetFlexibleGpuFilterInput is an input type that accepts GetFlexibleGpuFilterArgs and GetFlexibleGpuFilterOutput values.
// You can construct a concrete instance of `GetFlexibleGpuFilterInput` via:
//
//	GetFlexibleGpuFilterArgs{...}
type GetFlexibleGpuFilterInput interface {
	pulumi.Input

	ToGetFlexibleGpuFilterOutput() GetFlexibleGpuFilterOutput
	ToGetFlexibleGpuFilterOutputWithContext(context.Context) GetFlexibleGpuFilterOutput
}

type GetFlexibleGpuFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetFlexibleGpuFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFlexibleGpuFilter)(nil)).Elem()
}

func (i GetFlexibleGpuFilterArgs) ToGetFlexibleGpuFilterOutput() GetFlexibleGpuFilterOutput {
	return i.ToGetFlexibleGpuFilterOutputWithContext(context.Background())
}

func (i GetFlexibleGpuFilterArgs) ToGetFlexibleGpuFilterOutputWithContext(ctx context.Context) GetFlexibleGpuFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFlexibleGpuFilterOutput)
}

// GetFlexibleGpuFilterArrayInput is an input type that accepts GetFlexibleGpuFilterArray and GetFlexibleGpuFilterArrayOutput values.
// You can construct a concrete instance of `GetFlexibleGpuFilterArrayInput` via:
//
//	GetFlexibleGpuFilterArray{ GetFlexibleGpuFilterArgs{...} }
type GetFlexibleGpuFilterArrayInput interface {
	pulumi.Input

	ToGetFlexibleGpuFilterArrayOutput() GetFlexibleGpuFilterArrayOutput
	ToGetFlexibleGpuFilterArrayOutputWithContext(context.Context) GetFlexibleGpuFilterArrayOutput
}

type GetFlexibleGpuFilterArray []GetFlexibleGpuFilterInput

func (GetFlexibleGpuFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFlexibleGpuFilter)(nil)).Elem()
}

func (i GetFlexibleGpuFilterArray) ToGetFlexibleGpuFilterArrayOutput() GetFlexibleGpuFilterArrayOutput {
	return i.ToGetFlexibleGpuFilterArrayOutputWithContext(context.Background())
}

func (i GetFlexibleGpuFilterArray) ToGetFlexibleGpuFilterArrayOutputWithContext(ctx context.Context) GetFlexibleGpuFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFlexibleGpuFilterArrayOutput)
}

type GetFlexibleGpuFilterOutput struct{ *pulumi.OutputState }

func (GetFlexibleGpuFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFlexibleGpuFilter)(nil)).Elem()
}

func (o GetFlexibleGpuFilterOutput) ToGetFlexibleGpuFilterOutput() GetFlexibleGpuFilterOutput {
	return o
}

func (o GetFlexibleGpuFilterOutput) ToGetFlexibleGpuFilterOutputWithContext(ctx context.Context) GetFlexibleGpuFilterOutput {
	return o
}

func (o GetFlexibleGpuFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlexibleGpuFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetFlexibleGpuFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetFlexibleGpuFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetFlexibleGpuFilterArrayOutput struct{ *pulumi.OutputState }

func (GetFlexibleGpuFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFlexibleGpuFilter)(nil)).Elem()
}

func (o GetFlexibleGpuFilterArrayOutput) ToGetFlexibleGpuFilterArrayOutput() GetFlexibleGpuFilterArrayOutput {
	return o
}

func (o GetFlexibleGpuFilterArrayOutput) ToGetFlexibleGpuFilterArrayOutputWithContext(ctx context.Context) GetFlexibleGpuFilterArrayOutput {
	return o
}

func (o GetFlexibleGpuFilterArrayOutput) Index(i pulumi.IntInput) GetFlexibleGpuFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFlexibleGpuFilter {
		return vs[0].([]GetFlexibleGpuFilter)[vs[1].(int)]
	}).(GetFlexibleGpuFilterOutput)
}

type GetFlexibleGpusFilter struct {
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// GetFlexibleGpusFilterInput is an input type that accepts GetFlexibleGpusFilterArgs and GetFlexibleGpusFilterOutput values.
// You can construct a concrete instance of `GetFlexibleGpusFilterInput` via:
//
//	GetFlexibleGpusFilterArgs{...}
type GetFlexibleGpusFilterInput interface {
	pulumi.Input

	ToGetFlexibleGpusFilterOutput() GetFlexibleGpusFilterOutput
	ToGetFlexibleGpusFilterOutputWithContext(context.Context) GetFlexibleGpusFilterOutput
}

type GetFlexibleGpusFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetFlexibleGpusFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFlexibleGpusFilter)(nil)).Elem()
}

func (i GetFlexibleGpusFilterArgs) ToGetFlexibleGpusFilterOutput() GetFlexibleGpusFilterOutput {
	return i.ToGetFlexibleGpusFilterOutputWithContext(context.Background())
}

func (i GetFlexibleGpusFilterArgs) ToGetFlexibleGpusFilterOutputWithContext(ctx context.Context) GetFlexibleGpusFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFlexibleGpusFilterOutput)
}

// GetFlexibleGpusFilterArrayInput is an input type that accepts GetFlexibleGpusFilterArray and GetFlexibleGpusFilterArrayOutput values.
// You can construct a concrete instance of `GetFlexibleGpusFilterArrayInput` via:
//
//	GetFlexibleGpusFilterArray{ GetFlexibleGpusFilterArgs{...} }
type GetFlexibleGpusFilterArrayInput interface {
	pulumi.Input

	ToGetFlexibleGpusFilterArrayOutput() GetFlexibleGpusFilterArrayOutput
	ToGetFlexibleGpusFilterArrayOutputWithContext(context.Context) GetFlexibleGpusFilterArrayOutput
}

type GetFlexibleGpusFilterArray []GetFlexibleGpusFilterInput

func (GetFlexibleGpusFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFlexibleGpusFilter)(nil)).Elem()
}

func (i GetFlexibleGpusFilterArray) ToGetFlexibleGpusFilterArrayOutput() GetFlexibleGpusFilterArrayOutput {
	return i.ToGetFlexibleGpusFilterArrayOutputWithContext(context.Background())
}

func (i GetFlexibleGpusFilterArray) ToGetFlexibleGpusFilterArrayOutputWithContext(ctx context.Context) GetFlexibleGpusFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFlexibleGpusFilterArrayOutput)
}

type GetFlexibleGpusFilterOutput struct{ *pulumi.OutputState }

func (GetFlexibleGpusFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFlexibleGpusFilter)(nil)).Elem()
}

func (o GetFlexibleGpusFilterOutput) ToGetFlexibleGpusFilterOutput() GetFlexibleGpusFilterOutput {
	return o
}

func (o GetFlexibleGpusFilterOutput) ToGetFlexibleGpusFilterOutputWithContext(ctx context.Context) GetFlexibleGpusFilterOutput {
	return o
}

func (o GetFlexibleGpusFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlexibleGpusFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetFlexibleGpusFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetFlexibleGpusFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetFlexibleGpusFilterArrayOutput struct{ *pulumi.OutputState }

func (GetFlexibleGpusFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFlexibleGpusFilter)(nil)).Elem()
}

func (o GetFlexibleGpusFilterArrayOutput) ToGetFlexibleGpusFilterArrayOutput() GetFlexibleGpusFilterArrayOutput {
	return o
}

func (o GetFlexibleGpusFilterArrayOutput) ToGetFlexibleGpusFilterArrayOutputWithContext(ctx context.Context) GetFlexibleGpusFilterArrayOutput {
	return o
}

func (o GetFlexibleGpusFilterArrayOutput) Index(i pulumi.IntInput) GetFlexibleGpusFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFlexibleGpusFilter {
		return vs[0].([]GetFlexibleGpusFilter)[vs[1].(int)]
	}).(GetFlexibleGpusFilterOutput)
}

type GetFlexibleGpusFlexibleGpus struct {
	// If true, the fGPU is deleted when the VM is terminated.
	DeleteOnVmDeletion bool `pulumi:"deleteOnVmDeletion"`
	// The ID of the fGPU.
	FlexibleGpuId string `pulumi:"flexibleGpuId"`
	// The compatible processor generation.
	Generation string `pulumi:"generation"`
	// The model of fGPU. For more information, see [About Flexible GPUs](https://docs.outscale.com/en/userguide/About-Flexible-GPUs.html).
	ModelName string `pulumi:"modelName"`
	// The state of the fGPU (`allocated` \| `attaching` \| `attached` \| `detaching`).
	State string `pulumi:"state"`
	// The Subregion where the fGPU is located.
	SubregionName string `pulumi:"subregionName"`
	// The ID of the VM the fGPU is attached to, if any.
	VmId string `pulumi:"vmId"`
}

// GetFlexibleGpusFlexibleGpusInput is an input type that accepts GetFlexibleGpusFlexibleGpusArgs and GetFlexibleGpusFlexibleGpusOutput values.
// You can construct a concrete instance of `GetFlexibleGpusFlexibleGpusInput` via:
//
//	GetFlexibleGpusFlexibleGpusArgs{...}
type GetFlexibleGpusFlexibleGpusInput interface {
	pulumi.Input

	ToGetFlexibleGpusFlexibleGpusOutput() GetFlexibleGpusFlexibleGpusOutput
	ToGetFlexibleGpusFlexibleGpusOutputWithContext(context.Context) GetFlexibleGpusFlexibleGpusOutput
}

type GetFlexibleGpusFlexibleGpusArgs struct {
	// If true, the fGPU is deleted when the VM is terminated.
	DeleteOnVmDeletion pulumi.BoolInput `pulumi:"deleteOnVmDeletion"`
	// The ID of the fGPU.
	FlexibleGpuId pulumi.StringInput `pulumi:"flexibleGpuId"`
	// The compatible processor generation.
	Generation pulumi.StringInput `pulumi:"generation"`
	// The model of fGPU. For more information, see [About Flexible GPUs](https://docs.outscale.com/en/userguide/About-Flexible-GPUs.html).
	ModelName pulumi.StringInput `pulumi:"modelName"`
	// The state of the fGPU (`allocated` \| `attaching` \| `attached` \| `detaching`).
	State pulumi.StringInput `pulumi:"state"`
	// The Subregion where the fGPU is located.
	SubregionName pulumi.StringInput `pulumi:"subregionName"`
	// The ID of the VM the fGPU is attached to, if any.
	VmId pulumi.StringInput `pulumi:"vmId"`
}

func (GetFlexibleGpusFlexibleGpusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFlexibleGpusFlexibleGpus)(nil)).Elem()
}

func (i GetFlexibleGpusFlexibleGpusArgs) ToGetFlexibleGpusFlexibleGpusOutput() GetFlexibleGpusFlexibleGpusOutput {
	return i.ToGetFlexibleGpusFlexibleGpusOutputWithContext(context.Background())
}

func (i GetFlexibleGpusFlexibleGpusArgs) ToGetFlexibleGpusFlexibleGpusOutputWithContext(ctx context.Context) GetFlexibleGpusFlexibleGpusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFlexibleGpusFlexibleGpusOutput)
}

// GetFlexibleGpusFlexibleGpusArrayInput is an input type that accepts GetFlexibleGpusFlexibleGpusArray and GetFlexibleGpusFlexibleGpusArrayOutput values.
// You can construct a concrete instance of `GetFlexibleGpusFlexibleGpusArrayInput` via:
//
//	GetFlexibleGpusFlexibleGpusArray{ GetFlexibleGpusFlexibleGpusArgs{...} }
type GetFlexibleGpusFlexibleGpusArrayInput interface {
	pulumi.Input

	ToGetFlexibleGpusFlexibleGpusArrayOutput() GetFlexibleGpusFlexibleGpusArrayOutput
	ToGetFlexibleGpusFlexibleGpusArrayOutputWithContext(context.Context) GetFlexibleGpusFlexibleGpusArrayOutput
}

type GetFlexibleGpusFlexibleGpusArray []GetFlexibleGpusFlexibleGpusInput

func (GetFlexibleGpusFlexibleGpusArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFlexibleGpusFlexibleGpus)(nil)).Elem()
}

func (i GetFlexibleGpusFlexibleGpusArray) ToGetFlexibleGpusFlexibleGpusArrayOutput() GetFlexibleGpusFlexibleGpusArrayOutput {
	return i.ToGetFlexibleGpusFlexibleGpusArrayOutputWithContext(context.Background())
}

func (i GetFlexibleGpusFlexibleGpusArray) ToGetFlexibleGpusFlexibleGpusArrayOutputWithContext(ctx context.Context) GetFlexibleGpusFlexibleGpusArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFlexibleGpusFlexibleGpusArrayOutput)
}

type GetFlexibleGpusFlexibleGpusOutput struct{ *pulumi.OutputState }

func (GetFlexibleGpusFlexibleGpusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFlexibleGpusFlexibleGpus)(nil)).Elem()
}

func (o GetFlexibleGpusFlexibleGpusOutput) ToGetFlexibleGpusFlexibleGpusOutput() GetFlexibleGpusFlexibleGpusOutput {
	return o
}

func (o GetFlexibleGpusFlexibleGpusOutput) ToGetFlexibleGpusFlexibleGpusOutputWithContext(ctx context.Context) GetFlexibleGpusFlexibleGpusOutput {
	return o
}

// If true, the fGPU is deleted when the VM is terminated.
func (o GetFlexibleGpusFlexibleGpusOutput) DeleteOnVmDeletion() pulumi.BoolOutput {
	return o.ApplyT(func(v GetFlexibleGpusFlexibleGpus) bool { return v.DeleteOnVmDeletion }).(pulumi.BoolOutput)
}

// The ID of the fGPU.
func (o GetFlexibleGpusFlexibleGpusOutput) FlexibleGpuId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlexibleGpusFlexibleGpus) string { return v.FlexibleGpuId }).(pulumi.StringOutput)
}

// The compatible processor generation.
func (o GetFlexibleGpusFlexibleGpusOutput) Generation() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlexibleGpusFlexibleGpus) string { return v.Generation }).(pulumi.StringOutput)
}

// The model of fGPU. For more information, see [About Flexible GPUs](https://docs.outscale.com/en/userguide/About-Flexible-GPUs.html).
func (o GetFlexibleGpusFlexibleGpusOutput) ModelName() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlexibleGpusFlexibleGpus) string { return v.ModelName }).(pulumi.StringOutput)
}

// The state of the fGPU (`allocated` \| `attaching` \| `attached` \| `detaching`).
func (o GetFlexibleGpusFlexibleGpusOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlexibleGpusFlexibleGpus) string { return v.State }).(pulumi.StringOutput)
}

// The Subregion where the fGPU is located.
func (o GetFlexibleGpusFlexibleGpusOutput) SubregionName() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlexibleGpusFlexibleGpus) string { return v.SubregionName }).(pulumi.StringOutput)
}

// The ID of the VM the fGPU is attached to, if any.
func (o GetFlexibleGpusFlexibleGpusOutput) VmId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlexibleGpusFlexibleGpus) string { return v.VmId }).(pulumi.StringOutput)
}

type GetFlexibleGpusFlexibleGpusArrayOutput struct{ *pulumi.OutputState }

func (GetFlexibleGpusFlexibleGpusArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFlexibleGpusFlexibleGpus)(nil)).Elem()
}

func (o GetFlexibleGpusFlexibleGpusArrayOutput) ToGetFlexibleGpusFlexibleGpusArrayOutput() GetFlexibleGpusFlexibleGpusArrayOutput {
	return o
}

func (o GetFlexibleGpusFlexibleGpusArrayOutput) ToGetFlexibleGpusFlexibleGpusArrayOutputWithContext(ctx context.Context) GetFlexibleGpusFlexibleGpusArrayOutput {
	return o
}

func (o GetFlexibleGpusFlexibleGpusArrayOutput) Index(i pulumi.IntInput) GetFlexibleGpusFlexibleGpusOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFlexibleGpusFlexibleGpus {
		return vs[0].([]GetFlexibleGpusFlexibleGpus)[vs[1].(int)]
	}).(GetFlexibleGpusFlexibleGpusOutput)
}

type GetImageBlockDeviceMapping struct {
	// Information about the BSU volume to create.
	Bsus []GetImageBlockDeviceMappingBsus `pulumi:"bsus"`
	// The device name for the volume. For a root device, you must use `/dev/sda1`. For other volumes, you must use `/dev/sdX`, `/dev/sdXX`, `/dev/xvdX`, or `/dev/xvdXX` (where the first `X` is a letter between `b` and `z`, and the second `X` is a letter between `a` and `z`).
	DeviceName string `pulumi:"deviceName"`
	// The name of the virtual device (`ephemeralN`).
	VirtualDeviceName string `pulumi:"virtualDeviceName"`
}

// GetImageBlockDeviceMappingInput is an input type that accepts GetImageBlockDeviceMappingArgs and GetImageBlockDeviceMappingOutput values.
// You can construct a concrete instance of `GetImageBlockDeviceMappingInput` via:
//
//	GetImageBlockDeviceMappingArgs{...}
type GetImageBlockDeviceMappingInput interface {
	pulumi.Input

	ToGetImageBlockDeviceMappingOutput() GetImageBlockDeviceMappingOutput
	ToGetImageBlockDeviceMappingOutputWithContext(context.Context) GetImageBlockDeviceMappingOutput
}

type GetImageBlockDeviceMappingArgs struct {
	// Information about the BSU volume to create.
	Bsus GetImageBlockDeviceMappingBsusArrayInput `pulumi:"bsus"`
	// The device name for the volume. For a root device, you must use `/dev/sda1`. For other volumes, you must use `/dev/sdX`, `/dev/sdXX`, `/dev/xvdX`, or `/dev/xvdXX` (where the first `X` is a letter between `b` and `z`, and the second `X` is a letter between `a` and `z`).
	DeviceName pulumi.StringInput `pulumi:"deviceName"`
	// The name of the virtual device (`ephemeralN`).
	VirtualDeviceName pulumi.StringInput `pulumi:"virtualDeviceName"`
}

func (GetImageBlockDeviceMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImageBlockDeviceMapping)(nil)).Elem()
}

func (i GetImageBlockDeviceMappingArgs) ToGetImageBlockDeviceMappingOutput() GetImageBlockDeviceMappingOutput {
	return i.ToGetImageBlockDeviceMappingOutputWithContext(context.Background())
}

func (i GetImageBlockDeviceMappingArgs) ToGetImageBlockDeviceMappingOutputWithContext(ctx context.Context) GetImageBlockDeviceMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImageBlockDeviceMappingOutput)
}

// GetImageBlockDeviceMappingArrayInput is an input type that accepts GetImageBlockDeviceMappingArray and GetImageBlockDeviceMappingArrayOutput values.
// You can construct a concrete instance of `GetImageBlockDeviceMappingArrayInput` via:
//
//	GetImageBlockDeviceMappingArray{ GetImageBlockDeviceMappingArgs{...} }
type GetImageBlockDeviceMappingArrayInput interface {
	pulumi.Input

	ToGetImageBlockDeviceMappingArrayOutput() GetImageBlockDeviceMappingArrayOutput
	ToGetImageBlockDeviceMappingArrayOutputWithContext(context.Context) GetImageBlockDeviceMappingArrayOutput
}

type GetImageBlockDeviceMappingArray []GetImageBlockDeviceMappingInput

func (GetImageBlockDeviceMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImageBlockDeviceMapping)(nil)).Elem()
}

func (i GetImageBlockDeviceMappingArray) ToGetImageBlockDeviceMappingArrayOutput() GetImageBlockDeviceMappingArrayOutput {
	return i.ToGetImageBlockDeviceMappingArrayOutputWithContext(context.Background())
}

func (i GetImageBlockDeviceMappingArray) ToGetImageBlockDeviceMappingArrayOutputWithContext(ctx context.Context) GetImageBlockDeviceMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImageBlockDeviceMappingArrayOutput)
}

type GetImageBlockDeviceMappingOutput struct{ *pulumi.OutputState }

func (GetImageBlockDeviceMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImageBlockDeviceMapping)(nil)).Elem()
}

func (o GetImageBlockDeviceMappingOutput) ToGetImageBlockDeviceMappingOutput() GetImageBlockDeviceMappingOutput {
	return o
}

func (o GetImageBlockDeviceMappingOutput) ToGetImageBlockDeviceMappingOutputWithContext(ctx context.Context) GetImageBlockDeviceMappingOutput {
	return o
}

// Information about the BSU volume to create.
func (o GetImageBlockDeviceMappingOutput) Bsus() GetImageBlockDeviceMappingBsusArrayOutput {
	return o.ApplyT(func(v GetImageBlockDeviceMapping) []GetImageBlockDeviceMappingBsus { return v.Bsus }).(GetImageBlockDeviceMappingBsusArrayOutput)
}

// The device name for the volume. For a root device, you must use `/dev/sda1`. For other volumes, you must use `/dev/sdX`, `/dev/sdXX`, `/dev/xvdX`, or `/dev/xvdXX` (where the first `X` is a letter between `b` and `z`, and the second `X` is a letter between `a` and `z`).
func (o GetImageBlockDeviceMappingOutput) DeviceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetImageBlockDeviceMapping) string { return v.DeviceName }).(pulumi.StringOutput)
}

// The name of the virtual device (`ephemeralN`).
func (o GetImageBlockDeviceMappingOutput) VirtualDeviceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetImageBlockDeviceMapping) string { return v.VirtualDeviceName }).(pulumi.StringOutput)
}

type GetImageBlockDeviceMappingArrayOutput struct{ *pulumi.OutputState }

func (GetImageBlockDeviceMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImageBlockDeviceMapping)(nil)).Elem()
}

func (o GetImageBlockDeviceMappingArrayOutput) ToGetImageBlockDeviceMappingArrayOutput() GetImageBlockDeviceMappingArrayOutput {
	return o
}

func (o GetImageBlockDeviceMappingArrayOutput) ToGetImageBlockDeviceMappingArrayOutputWithContext(ctx context.Context) GetImageBlockDeviceMappingArrayOutput {
	return o
}

func (o GetImageBlockDeviceMappingArrayOutput) Index(i pulumi.IntInput) GetImageBlockDeviceMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetImageBlockDeviceMapping {
		return vs[0].([]GetImageBlockDeviceMapping)[vs[1].(int)]
	}).(GetImageBlockDeviceMappingOutput)
}

type GetImageBlockDeviceMappingBsus struct {
	// By default or if set to true, the volume is deleted when terminating the VM. If false, the volume is not deleted when terminating the VM.
	DeleteOnVmDeletion bool `pulumi:"deleteOnVmDeletion"`
	// The number of I/O operations per second (IOPS). This parameter must be specified only if you create an `io1` volume. The maximum number of IOPS allowed for `io1` volumes is `13000` with a maximum performance ratio of 300 IOPS per gibibyte.
	Iops int `pulumi:"iops"`
	// The ID of the snapshot used to create the volume.
	SnapshotId string `pulumi:"snapshotId"`
	// The size of the volume, in gibibytes (GiB).<br />
	// If you specify a snapshot ID, the volume size must be at least equal to the snapshot size.<br />
	// If you specify a snapshot ID but no volume size, the volume is created with a size similar to the snapshot one.
	VolumeSize int `pulumi:"volumeSize"`
	// The type of the volume (`standard` \| `io1` \| `gp2`). If not specified in the request, a `standard` volume is created.<br />
	// For more information about volume types, see [About Volumes > Volume Types and IOPS](https://docs.outscale.com/en/userguide/About-Volumes.html#_volume_types_and_iops).
	VolumeType string `pulumi:"volumeType"`
}

// GetImageBlockDeviceMappingBsusInput is an input type that accepts GetImageBlockDeviceMappingBsusArgs and GetImageBlockDeviceMappingBsusOutput values.
// You can construct a concrete instance of `GetImageBlockDeviceMappingBsusInput` via:
//
//	GetImageBlockDeviceMappingBsusArgs{...}
type GetImageBlockDeviceMappingBsusInput interface {
	pulumi.Input

	ToGetImageBlockDeviceMappingBsusOutput() GetImageBlockDeviceMappingBsusOutput
	ToGetImageBlockDeviceMappingBsusOutputWithContext(context.Context) GetImageBlockDeviceMappingBsusOutput
}

type GetImageBlockDeviceMappingBsusArgs struct {
	// By default or if set to true, the volume is deleted when terminating the VM. If false, the volume is not deleted when terminating the VM.
	DeleteOnVmDeletion pulumi.BoolInput `pulumi:"deleteOnVmDeletion"`
	// The number of I/O operations per second (IOPS). This parameter must be specified only if you create an `io1` volume. The maximum number of IOPS allowed for `io1` volumes is `13000` with a maximum performance ratio of 300 IOPS per gibibyte.
	Iops pulumi.IntInput `pulumi:"iops"`
	// The ID of the snapshot used to create the volume.
	SnapshotId pulumi.StringInput `pulumi:"snapshotId"`
	// The size of the volume, in gibibytes (GiB).<br />
	// If you specify a snapshot ID, the volume size must be at least equal to the snapshot size.<br />
	// If you specify a snapshot ID but no volume size, the volume is created with a size similar to the snapshot one.
	VolumeSize pulumi.IntInput `pulumi:"volumeSize"`
	// The type of the volume (`standard` \| `io1` \| `gp2`). If not specified in the request, a `standard` volume is created.<br />
	// For more information about volume types, see [About Volumes > Volume Types and IOPS](https://docs.outscale.com/en/userguide/About-Volumes.html#_volume_types_and_iops).
	VolumeType pulumi.StringInput `pulumi:"volumeType"`
}

func (GetImageBlockDeviceMappingBsusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImageBlockDeviceMappingBsus)(nil)).Elem()
}

func (i GetImageBlockDeviceMappingBsusArgs) ToGetImageBlockDeviceMappingBsusOutput() GetImageBlockDeviceMappingBsusOutput {
	return i.ToGetImageBlockDeviceMappingBsusOutputWithContext(context.Background())
}

func (i GetImageBlockDeviceMappingBsusArgs) ToGetImageBlockDeviceMappingBsusOutputWithContext(ctx context.Context) GetImageBlockDeviceMappingBsusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImageBlockDeviceMappingBsusOutput)
}

// GetImageBlockDeviceMappingBsusArrayInput is an input type that accepts GetImageBlockDeviceMappingBsusArray and GetImageBlockDeviceMappingBsusArrayOutput values.
// You can construct a concrete instance of `GetImageBlockDeviceMappingBsusArrayInput` via:
//
//	GetImageBlockDeviceMappingBsusArray{ GetImageBlockDeviceMappingBsusArgs{...} }
type GetImageBlockDeviceMappingBsusArrayInput interface {
	pulumi.Input

	ToGetImageBlockDeviceMappingBsusArrayOutput() GetImageBlockDeviceMappingBsusArrayOutput
	ToGetImageBlockDeviceMappingBsusArrayOutputWithContext(context.Context) GetImageBlockDeviceMappingBsusArrayOutput
}

type GetImageBlockDeviceMappingBsusArray []GetImageBlockDeviceMappingBsusInput

func (GetImageBlockDeviceMappingBsusArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImageBlockDeviceMappingBsus)(nil)).Elem()
}

func (i GetImageBlockDeviceMappingBsusArray) ToGetImageBlockDeviceMappingBsusArrayOutput() GetImageBlockDeviceMappingBsusArrayOutput {
	return i.ToGetImageBlockDeviceMappingBsusArrayOutputWithContext(context.Background())
}

func (i GetImageBlockDeviceMappingBsusArray) ToGetImageBlockDeviceMappingBsusArrayOutputWithContext(ctx context.Context) GetImageBlockDeviceMappingBsusArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImageBlockDeviceMappingBsusArrayOutput)
}

type GetImageBlockDeviceMappingBsusOutput struct{ *pulumi.OutputState }

func (GetImageBlockDeviceMappingBsusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImageBlockDeviceMappingBsus)(nil)).Elem()
}

func (o GetImageBlockDeviceMappingBsusOutput) ToGetImageBlockDeviceMappingBsusOutput() GetImageBlockDeviceMappingBsusOutput {
	return o
}

func (o GetImageBlockDeviceMappingBsusOutput) ToGetImageBlockDeviceMappingBsusOutputWithContext(ctx context.Context) GetImageBlockDeviceMappingBsusOutput {
	return o
}

// By default or if set to true, the volume is deleted when terminating the VM. If false, the volume is not deleted when terminating the VM.
func (o GetImageBlockDeviceMappingBsusOutput) DeleteOnVmDeletion() pulumi.BoolOutput {
	return o.ApplyT(func(v GetImageBlockDeviceMappingBsus) bool { return v.DeleteOnVmDeletion }).(pulumi.BoolOutput)
}

// The number of I/O operations per second (IOPS). This parameter must be specified only if you create an `io1` volume. The maximum number of IOPS allowed for `io1` volumes is `13000` with a maximum performance ratio of 300 IOPS per gibibyte.
func (o GetImageBlockDeviceMappingBsusOutput) Iops() pulumi.IntOutput {
	return o.ApplyT(func(v GetImageBlockDeviceMappingBsus) int { return v.Iops }).(pulumi.IntOutput)
}

// The ID of the snapshot used to create the volume.
func (o GetImageBlockDeviceMappingBsusOutput) SnapshotId() pulumi.StringOutput {
	return o.ApplyT(func(v GetImageBlockDeviceMappingBsus) string { return v.SnapshotId }).(pulumi.StringOutput)
}

// The size of the volume, in gibibytes (GiB).<br />
// If you specify a snapshot ID, the volume size must be at least equal to the snapshot size.<br />
// If you specify a snapshot ID but no volume size, the volume is created with a size similar to the snapshot one.
func (o GetImageBlockDeviceMappingBsusOutput) VolumeSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetImageBlockDeviceMappingBsus) int { return v.VolumeSize }).(pulumi.IntOutput)
}

// The type of the volume (`standard` \| `io1` \| `gp2`). If not specified in the request, a `standard` volume is created.<br />
// For more information about volume types, see [About Volumes > Volume Types and IOPS](https://docs.outscale.com/en/userguide/About-Volumes.html#_volume_types_and_iops).
func (o GetImageBlockDeviceMappingBsusOutput) VolumeType() pulumi.StringOutput {
	return o.ApplyT(func(v GetImageBlockDeviceMappingBsus) string { return v.VolumeType }).(pulumi.StringOutput)
}

type GetImageBlockDeviceMappingBsusArrayOutput struct{ *pulumi.OutputState }

func (GetImageBlockDeviceMappingBsusArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImageBlockDeviceMappingBsus)(nil)).Elem()
}

func (o GetImageBlockDeviceMappingBsusArrayOutput) ToGetImageBlockDeviceMappingBsusArrayOutput() GetImageBlockDeviceMappingBsusArrayOutput {
	return o
}

func (o GetImageBlockDeviceMappingBsusArrayOutput) ToGetImageBlockDeviceMappingBsusArrayOutputWithContext(ctx context.Context) GetImageBlockDeviceMappingBsusArrayOutput {
	return o
}

func (o GetImageBlockDeviceMappingBsusArrayOutput) Index(i pulumi.IntInput) GetImageBlockDeviceMappingBsusOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetImageBlockDeviceMappingBsus {
		return vs[0].([]GetImageBlockDeviceMappingBsus)[vs[1].(int)]
	}).(GetImageBlockDeviceMappingBsusOutput)
}

type GetImageExportTaskFilter struct {
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// GetImageExportTaskFilterInput is an input type that accepts GetImageExportTaskFilterArgs and GetImageExportTaskFilterOutput values.
// You can construct a concrete instance of `GetImageExportTaskFilterInput` via:
//
//	GetImageExportTaskFilterArgs{...}
type GetImageExportTaskFilterInput interface {
	pulumi.Input

	ToGetImageExportTaskFilterOutput() GetImageExportTaskFilterOutput
	ToGetImageExportTaskFilterOutputWithContext(context.Context) GetImageExportTaskFilterOutput
}

type GetImageExportTaskFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetImageExportTaskFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImageExportTaskFilter)(nil)).Elem()
}

func (i GetImageExportTaskFilterArgs) ToGetImageExportTaskFilterOutput() GetImageExportTaskFilterOutput {
	return i.ToGetImageExportTaskFilterOutputWithContext(context.Background())
}

func (i GetImageExportTaskFilterArgs) ToGetImageExportTaskFilterOutputWithContext(ctx context.Context) GetImageExportTaskFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImageExportTaskFilterOutput)
}

// GetImageExportTaskFilterArrayInput is an input type that accepts GetImageExportTaskFilterArray and GetImageExportTaskFilterArrayOutput values.
// You can construct a concrete instance of `GetImageExportTaskFilterArrayInput` via:
//
//	GetImageExportTaskFilterArray{ GetImageExportTaskFilterArgs{...} }
type GetImageExportTaskFilterArrayInput interface {
	pulumi.Input

	ToGetImageExportTaskFilterArrayOutput() GetImageExportTaskFilterArrayOutput
	ToGetImageExportTaskFilterArrayOutputWithContext(context.Context) GetImageExportTaskFilterArrayOutput
}

type GetImageExportTaskFilterArray []GetImageExportTaskFilterInput

func (GetImageExportTaskFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImageExportTaskFilter)(nil)).Elem()
}

func (i GetImageExportTaskFilterArray) ToGetImageExportTaskFilterArrayOutput() GetImageExportTaskFilterArrayOutput {
	return i.ToGetImageExportTaskFilterArrayOutputWithContext(context.Background())
}

func (i GetImageExportTaskFilterArray) ToGetImageExportTaskFilterArrayOutputWithContext(ctx context.Context) GetImageExportTaskFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImageExportTaskFilterArrayOutput)
}

type GetImageExportTaskFilterOutput struct{ *pulumi.OutputState }

func (GetImageExportTaskFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImageExportTaskFilter)(nil)).Elem()
}

func (o GetImageExportTaskFilterOutput) ToGetImageExportTaskFilterOutput() GetImageExportTaskFilterOutput {
	return o
}

func (o GetImageExportTaskFilterOutput) ToGetImageExportTaskFilterOutputWithContext(ctx context.Context) GetImageExportTaskFilterOutput {
	return o
}

func (o GetImageExportTaskFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetImageExportTaskFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetImageExportTaskFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetImageExportTaskFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetImageExportTaskFilterArrayOutput struct{ *pulumi.OutputState }

func (GetImageExportTaskFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImageExportTaskFilter)(nil)).Elem()
}

func (o GetImageExportTaskFilterArrayOutput) ToGetImageExportTaskFilterArrayOutput() GetImageExportTaskFilterArrayOutput {
	return o
}

func (o GetImageExportTaskFilterArrayOutput) ToGetImageExportTaskFilterArrayOutputWithContext(ctx context.Context) GetImageExportTaskFilterArrayOutput {
	return o
}

func (o GetImageExportTaskFilterArrayOutput) Index(i pulumi.IntInput) GetImageExportTaskFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetImageExportTaskFilter {
		return vs[0].([]GetImageExportTaskFilter)[vs[1].(int)]
	}).(GetImageExportTaskFilterOutput)
}

type GetImageExportTaskOsuExport struct {
	// The format of the export disk (`qcow2` \| `raw`).
	DiskImageFormat string `pulumi:"diskImageFormat"`
	// The name of the OOS bucket the OMI is exported to.
	OsuBucket string `pulumi:"osuBucket"`
	// The URL of the manifest file.
	OsuManifestUrl string `pulumi:"osuManifestUrl"`
	// The prefix for the key of the OOS object corresponding to the image.
	OsuPrefix string `pulumi:"osuPrefix"`
}

// GetImageExportTaskOsuExportInput is an input type that accepts GetImageExportTaskOsuExportArgs and GetImageExportTaskOsuExportOutput values.
// You can construct a concrete instance of `GetImageExportTaskOsuExportInput` via:
//
//	GetImageExportTaskOsuExportArgs{...}
type GetImageExportTaskOsuExportInput interface {
	pulumi.Input

	ToGetImageExportTaskOsuExportOutput() GetImageExportTaskOsuExportOutput
	ToGetImageExportTaskOsuExportOutputWithContext(context.Context) GetImageExportTaskOsuExportOutput
}

type GetImageExportTaskOsuExportArgs struct {
	// The format of the export disk (`qcow2` \| `raw`).
	DiskImageFormat pulumi.StringInput `pulumi:"diskImageFormat"`
	// The name of the OOS bucket the OMI is exported to.
	OsuBucket pulumi.StringInput `pulumi:"osuBucket"`
	// The URL of the manifest file.
	OsuManifestUrl pulumi.StringInput `pulumi:"osuManifestUrl"`
	// The prefix for the key of the OOS object corresponding to the image.
	OsuPrefix pulumi.StringInput `pulumi:"osuPrefix"`
}

func (GetImageExportTaskOsuExportArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImageExportTaskOsuExport)(nil)).Elem()
}

func (i GetImageExportTaskOsuExportArgs) ToGetImageExportTaskOsuExportOutput() GetImageExportTaskOsuExportOutput {
	return i.ToGetImageExportTaskOsuExportOutputWithContext(context.Background())
}

func (i GetImageExportTaskOsuExportArgs) ToGetImageExportTaskOsuExportOutputWithContext(ctx context.Context) GetImageExportTaskOsuExportOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImageExportTaskOsuExportOutput)
}

// GetImageExportTaskOsuExportArrayInput is an input type that accepts GetImageExportTaskOsuExportArray and GetImageExportTaskOsuExportArrayOutput values.
// You can construct a concrete instance of `GetImageExportTaskOsuExportArrayInput` via:
//
//	GetImageExportTaskOsuExportArray{ GetImageExportTaskOsuExportArgs{...} }
type GetImageExportTaskOsuExportArrayInput interface {
	pulumi.Input

	ToGetImageExportTaskOsuExportArrayOutput() GetImageExportTaskOsuExportArrayOutput
	ToGetImageExportTaskOsuExportArrayOutputWithContext(context.Context) GetImageExportTaskOsuExportArrayOutput
}

type GetImageExportTaskOsuExportArray []GetImageExportTaskOsuExportInput

func (GetImageExportTaskOsuExportArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImageExportTaskOsuExport)(nil)).Elem()
}

func (i GetImageExportTaskOsuExportArray) ToGetImageExportTaskOsuExportArrayOutput() GetImageExportTaskOsuExportArrayOutput {
	return i.ToGetImageExportTaskOsuExportArrayOutputWithContext(context.Background())
}

func (i GetImageExportTaskOsuExportArray) ToGetImageExportTaskOsuExportArrayOutputWithContext(ctx context.Context) GetImageExportTaskOsuExportArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImageExportTaskOsuExportArrayOutput)
}

type GetImageExportTaskOsuExportOutput struct{ *pulumi.OutputState }

func (GetImageExportTaskOsuExportOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImageExportTaskOsuExport)(nil)).Elem()
}

func (o GetImageExportTaskOsuExportOutput) ToGetImageExportTaskOsuExportOutput() GetImageExportTaskOsuExportOutput {
	return o
}

func (o GetImageExportTaskOsuExportOutput) ToGetImageExportTaskOsuExportOutputWithContext(ctx context.Context) GetImageExportTaskOsuExportOutput {
	return o
}

// The format of the export disk (`qcow2` \| `raw`).
func (o GetImageExportTaskOsuExportOutput) DiskImageFormat() pulumi.StringOutput {
	return o.ApplyT(func(v GetImageExportTaskOsuExport) string { return v.DiskImageFormat }).(pulumi.StringOutput)
}

// The name of the OOS bucket the OMI is exported to.
func (o GetImageExportTaskOsuExportOutput) OsuBucket() pulumi.StringOutput {
	return o.ApplyT(func(v GetImageExportTaskOsuExport) string { return v.OsuBucket }).(pulumi.StringOutput)
}

// The URL of the manifest file.
func (o GetImageExportTaskOsuExportOutput) OsuManifestUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetImageExportTaskOsuExport) string { return v.OsuManifestUrl }).(pulumi.StringOutput)
}

// The prefix for the key of the OOS object corresponding to the image.
func (o GetImageExportTaskOsuExportOutput) OsuPrefix() pulumi.StringOutput {
	return o.ApplyT(func(v GetImageExportTaskOsuExport) string { return v.OsuPrefix }).(pulumi.StringOutput)
}

type GetImageExportTaskOsuExportArrayOutput struct{ *pulumi.OutputState }

func (GetImageExportTaskOsuExportArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImageExportTaskOsuExport)(nil)).Elem()
}

func (o GetImageExportTaskOsuExportArrayOutput) ToGetImageExportTaskOsuExportArrayOutput() GetImageExportTaskOsuExportArrayOutput {
	return o
}

func (o GetImageExportTaskOsuExportArrayOutput) ToGetImageExportTaskOsuExportArrayOutputWithContext(ctx context.Context) GetImageExportTaskOsuExportArrayOutput {
	return o
}

func (o GetImageExportTaskOsuExportArrayOutput) Index(i pulumi.IntInput) GetImageExportTaskOsuExportOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetImageExportTaskOsuExport {
		return vs[0].([]GetImageExportTaskOsuExport)[vs[1].(int)]
	}).(GetImageExportTaskOsuExportOutput)
}

type GetImageExportTaskTag struct {
	// The key of the tag, with a minimum of 1 character.
	Key string `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value string `pulumi:"value"`
}

// GetImageExportTaskTagInput is an input type that accepts GetImageExportTaskTagArgs and GetImageExportTaskTagOutput values.
// You can construct a concrete instance of `GetImageExportTaskTagInput` via:
//
//	GetImageExportTaskTagArgs{...}
type GetImageExportTaskTagInput interface {
	pulumi.Input

	ToGetImageExportTaskTagOutput() GetImageExportTaskTagOutput
	ToGetImageExportTaskTagOutputWithContext(context.Context) GetImageExportTaskTagOutput
}

type GetImageExportTaskTagArgs struct {
	// The key of the tag, with a minimum of 1 character.
	Key pulumi.StringInput `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetImageExportTaskTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImageExportTaskTag)(nil)).Elem()
}

func (i GetImageExportTaskTagArgs) ToGetImageExportTaskTagOutput() GetImageExportTaskTagOutput {
	return i.ToGetImageExportTaskTagOutputWithContext(context.Background())
}

func (i GetImageExportTaskTagArgs) ToGetImageExportTaskTagOutputWithContext(ctx context.Context) GetImageExportTaskTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImageExportTaskTagOutput)
}

// GetImageExportTaskTagArrayInput is an input type that accepts GetImageExportTaskTagArray and GetImageExportTaskTagArrayOutput values.
// You can construct a concrete instance of `GetImageExportTaskTagArrayInput` via:
//
//	GetImageExportTaskTagArray{ GetImageExportTaskTagArgs{...} }
type GetImageExportTaskTagArrayInput interface {
	pulumi.Input

	ToGetImageExportTaskTagArrayOutput() GetImageExportTaskTagArrayOutput
	ToGetImageExportTaskTagArrayOutputWithContext(context.Context) GetImageExportTaskTagArrayOutput
}

type GetImageExportTaskTagArray []GetImageExportTaskTagInput

func (GetImageExportTaskTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImageExportTaskTag)(nil)).Elem()
}

func (i GetImageExportTaskTagArray) ToGetImageExportTaskTagArrayOutput() GetImageExportTaskTagArrayOutput {
	return i.ToGetImageExportTaskTagArrayOutputWithContext(context.Background())
}

func (i GetImageExportTaskTagArray) ToGetImageExportTaskTagArrayOutputWithContext(ctx context.Context) GetImageExportTaskTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImageExportTaskTagArrayOutput)
}

type GetImageExportTaskTagOutput struct{ *pulumi.OutputState }

func (GetImageExportTaskTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImageExportTaskTag)(nil)).Elem()
}

func (o GetImageExportTaskTagOutput) ToGetImageExportTaskTagOutput() GetImageExportTaskTagOutput {
	return o
}

func (o GetImageExportTaskTagOutput) ToGetImageExportTaskTagOutputWithContext(ctx context.Context) GetImageExportTaskTagOutput {
	return o
}

// The key of the tag, with a minimum of 1 character.
func (o GetImageExportTaskTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetImageExportTaskTag) string { return v.Key }).(pulumi.StringOutput)
}

// The value of the tag, between 0 and 255 characters.
func (o GetImageExportTaskTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetImageExportTaskTag) string { return v.Value }).(pulumi.StringOutput)
}

type GetImageExportTaskTagArrayOutput struct{ *pulumi.OutputState }

func (GetImageExportTaskTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImageExportTaskTag)(nil)).Elem()
}

func (o GetImageExportTaskTagArrayOutput) ToGetImageExportTaskTagArrayOutput() GetImageExportTaskTagArrayOutput {
	return o
}

func (o GetImageExportTaskTagArrayOutput) ToGetImageExportTaskTagArrayOutputWithContext(ctx context.Context) GetImageExportTaskTagArrayOutput {
	return o
}

func (o GetImageExportTaskTagArrayOutput) Index(i pulumi.IntInput) GetImageExportTaskTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetImageExportTaskTag {
		return vs[0].([]GetImageExportTaskTag)[vs[1].(int)]
	}).(GetImageExportTaskTagOutput)
}

type GetImageExportTasksFilter struct {
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// GetImageExportTasksFilterInput is an input type that accepts GetImageExportTasksFilterArgs and GetImageExportTasksFilterOutput values.
// You can construct a concrete instance of `GetImageExportTasksFilterInput` via:
//
//	GetImageExportTasksFilterArgs{...}
type GetImageExportTasksFilterInput interface {
	pulumi.Input

	ToGetImageExportTasksFilterOutput() GetImageExportTasksFilterOutput
	ToGetImageExportTasksFilterOutputWithContext(context.Context) GetImageExportTasksFilterOutput
}

type GetImageExportTasksFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetImageExportTasksFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImageExportTasksFilter)(nil)).Elem()
}

func (i GetImageExportTasksFilterArgs) ToGetImageExportTasksFilterOutput() GetImageExportTasksFilterOutput {
	return i.ToGetImageExportTasksFilterOutputWithContext(context.Background())
}

func (i GetImageExportTasksFilterArgs) ToGetImageExportTasksFilterOutputWithContext(ctx context.Context) GetImageExportTasksFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImageExportTasksFilterOutput)
}

// GetImageExportTasksFilterArrayInput is an input type that accepts GetImageExportTasksFilterArray and GetImageExportTasksFilterArrayOutput values.
// You can construct a concrete instance of `GetImageExportTasksFilterArrayInput` via:
//
//	GetImageExportTasksFilterArray{ GetImageExportTasksFilterArgs{...} }
type GetImageExportTasksFilterArrayInput interface {
	pulumi.Input

	ToGetImageExportTasksFilterArrayOutput() GetImageExportTasksFilterArrayOutput
	ToGetImageExportTasksFilterArrayOutputWithContext(context.Context) GetImageExportTasksFilterArrayOutput
}

type GetImageExportTasksFilterArray []GetImageExportTasksFilterInput

func (GetImageExportTasksFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImageExportTasksFilter)(nil)).Elem()
}

func (i GetImageExportTasksFilterArray) ToGetImageExportTasksFilterArrayOutput() GetImageExportTasksFilterArrayOutput {
	return i.ToGetImageExportTasksFilterArrayOutputWithContext(context.Background())
}

func (i GetImageExportTasksFilterArray) ToGetImageExportTasksFilterArrayOutputWithContext(ctx context.Context) GetImageExportTasksFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImageExportTasksFilterArrayOutput)
}

type GetImageExportTasksFilterOutput struct{ *pulumi.OutputState }

func (GetImageExportTasksFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImageExportTasksFilter)(nil)).Elem()
}

func (o GetImageExportTasksFilterOutput) ToGetImageExportTasksFilterOutput() GetImageExportTasksFilterOutput {
	return o
}

func (o GetImageExportTasksFilterOutput) ToGetImageExportTasksFilterOutputWithContext(ctx context.Context) GetImageExportTasksFilterOutput {
	return o
}

func (o GetImageExportTasksFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetImageExportTasksFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetImageExportTasksFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetImageExportTasksFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetImageExportTasksFilterArrayOutput struct{ *pulumi.OutputState }

func (GetImageExportTasksFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImageExportTasksFilter)(nil)).Elem()
}

func (o GetImageExportTasksFilterArrayOutput) ToGetImageExportTasksFilterArrayOutput() GetImageExportTasksFilterArrayOutput {
	return o
}

func (o GetImageExportTasksFilterArrayOutput) ToGetImageExportTasksFilterArrayOutputWithContext(ctx context.Context) GetImageExportTasksFilterArrayOutput {
	return o
}

func (o GetImageExportTasksFilterArrayOutput) Index(i pulumi.IntInput) GetImageExportTasksFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetImageExportTasksFilter {
		return vs[0].([]GetImageExportTasksFilter)[vs[1].(int)]
	}).(GetImageExportTasksFilterOutput)
}

type GetImageExportTasksImageExportTask struct {
	// If the OMI export task fails, an error message appears.
	Comment string `pulumi:"comment"`
	// The ID of the OMI to be exported.
	ImageId string `pulumi:"imageId"`
	// Information about the OMI export task.
	OsuExports []GetImageExportTasksImageExportTaskOsuExport `pulumi:"osuExports"`
	// The progress of the OMI export task, as a percentage.
	Progress int `pulumi:"progress"`
	// The state of the OMI export task (`pending/queued` \| `pending` \| `completed` \| `failed` \| `cancelled`).
	State string `pulumi:"state"`
	// One or more tags associated with the image export task.
	Tags []GetImageExportTasksImageExportTaskTag `pulumi:"tags"`
	// The ID of the OMI export task.
	TaskId string `pulumi:"taskId"`
}

// GetImageExportTasksImageExportTaskInput is an input type that accepts GetImageExportTasksImageExportTaskArgs and GetImageExportTasksImageExportTaskOutput values.
// You can construct a concrete instance of `GetImageExportTasksImageExportTaskInput` via:
//
//	GetImageExportTasksImageExportTaskArgs{...}
type GetImageExportTasksImageExportTaskInput interface {
	pulumi.Input

	ToGetImageExportTasksImageExportTaskOutput() GetImageExportTasksImageExportTaskOutput
	ToGetImageExportTasksImageExportTaskOutputWithContext(context.Context) GetImageExportTasksImageExportTaskOutput
}

type GetImageExportTasksImageExportTaskArgs struct {
	// If the OMI export task fails, an error message appears.
	Comment pulumi.StringInput `pulumi:"comment"`
	// The ID of the OMI to be exported.
	ImageId pulumi.StringInput `pulumi:"imageId"`
	// Information about the OMI export task.
	OsuExports GetImageExportTasksImageExportTaskOsuExportArrayInput `pulumi:"osuExports"`
	// The progress of the OMI export task, as a percentage.
	Progress pulumi.IntInput `pulumi:"progress"`
	// The state of the OMI export task (`pending/queued` \| `pending` \| `completed` \| `failed` \| `cancelled`).
	State pulumi.StringInput `pulumi:"state"`
	// One or more tags associated with the image export task.
	Tags GetImageExportTasksImageExportTaskTagArrayInput `pulumi:"tags"`
	// The ID of the OMI export task.
	TaskId pulumi.StringInput `pulumi:"taskId"`
}

func (GetImageExportTasksImageExportTaskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImageExportTasksImageExportTask)(nil)).Elem()
}

func (i GetImageExportTasksImageExportTaskArgs) ToGetImageExportTasksImageExportTaskOutput() GetImageExportTasksImageExportTaskOutput {
	return i.ToGetImageExportTasksImageExportTaskOutputWithContext(context.Background())
}

func (i GetImageExportTasksImageExportTaskArgs) ToGetImageExportTasksImageExportTaskOutputWithContext(ctx context.Context) GetImageExportTasksImageExportTaskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImageExportTasksImageExportTaskOutput)
}

// GetImageExportTasksImageExportTaskArrayInput is an input type that accepts GetImageExportTasksImageExportTaskArray and GetImageExportTasksImageExportTaskArrayOutput values.
// You can construct a concrete instance of `GetImageExportTasksImageExportTaskArrayInput` via:
//
//	GetImageExportTasksImageExportTaskArray{ GetImageExportTasksImageExportTaskArgs{...} }
type GetImageExportTasksImageExportTaskArrayInput interface {
	pulumi.Input

	ToGetImageExportTasksImageExportTaskArrayOutput() GetImageExportTasksImageExportTaskArrayOutput
	ToGetImageExportTasksImageExportTaskArrayOutputWithContext(context.Context) GetImageExportTasksImageExportTaskArrayOutput
}

type GetImageExportTasksImageExportTaskArray []GetImageExportTasksImageExportTaskInput

func (GetImageExportTasksImageExportTaskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImageExportTasksImageExportTask)(nil)).Elem()
}

func (i GetImageExportTasksImageExportTaskArray) ToGetImageExportTasksImageExportTaskArrayOutput() GetImageExportTasksImageExportTaskArrayOutput {
	return i.ToGetImageExportTasksImageExportTaskArrayOutputWithContext(context.Background())
}

func (i GetImageExportTasksImageExportTaskArray) ToGetImageExportTasksImageExportTaskArrayOutputWithContext(ctx context.Context) GetImageExportTasksImageExportTaskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImageExportTasksImageExportTaskArrayOutput)
}

type GetImageExportTasksImageExportTaskOutput struct{ *pulumi.OutputState }

func (GetImageExportTasksImageExportTaskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImageExportTasksImageExportTask)(nil)).Elem()
}

func (o GetImageExportTasksImageExportTaskOutput) ToGetImageExportTasksImageExportTaskOutput() GetImageExportTasksImageExportTaskOutput {
	return o
}

func (o GetImageExportTasksImageExportTaskOutput) ToGetImageExportTasksImageExportTaskOutputWithContext(ctx context.Context) GetImageExportTasksImageExportTaskOutput {
	return o
}

// If the OMI export task fails, an error message appears.
func (o GetImageExportTasksImageExportTaskOutput) Comment() pulumi.StringOutput {
	return o.ApplyT(func(v GetImageExportTasksImageExportTask) string { return v.Comment }).(pulumi.StringOutput)
}

// The ID of the OMI to be exported.
func (o GetImageExportTasksImageExportTaskOutput) ImageId() pulumi.StringOutput {
	return o.ApplyT(func(v GetImageExportTasksImageExportTask) string { return v.ImageId }).(pulumi.StringOutput)
}

// Information about the OMI export task.
func (o GetImageExportTasksImageExportTaskOutput) OsuExports() GetImageExportTasksImageExportTaskOsuExportArrayOutput {
	return o.ApplyT(func(v GetImageExportTasksImageExportTask) []GetImageExportTasksImageExportTaskOsuExport {
		return v.OsuExports
	}).(GetImageExportTasksImageExportTaskOsuExportArrayOutput)
}

// The progress of the OMI export task, as a percentage.
func (o GetImageExportTasksImageExportTaskOutput) Progress() pulumi.IntOutput {
	return o.ApplyT(func(v GetImageExportTasksImageExportTask) int { return v.Progress }).(pulumi.IntOutput)
}

// The state of the OMI export task (`pending/queued` \| `pending` \| `completed` \| `failed` \| `cancelled`).
func (o GetImageExportTasksImageExportTaskOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetImageExportTasksImageExportTask) string { return v.State }).(pulumi.StringOutput)
}

// One or more tags associated with the image export task.
func (o GetImageExportTasksImageExportTaskOutput) Tags() GetImageExportTasksImageExportTaskTagArrayOutput {
	return o.ApplyT(func(v GetImageExportTasksImageExportTask) []GetImageExportTasksImageExportTaskTag { return v.Tags }).(GetImageExportTasksImageExportTaskTagArrayOutput)
}

// The ID of the OMI export task.
func (o GetImageExportTasksImageExportTaskOutput) TaskId() pulumi.StringOutput {
	return o.ApplyT(func(v GetImageExportTasksImageExportTask) string { return v.TaskId }).(pulumi.StringOutput)
}

type GetImageExportTasksImageExportTaskArrayOutput struct{ *pulumi.OutputState }

func (GetImageExportTasksImageExportTaskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImageExportTasksImageExportTask)(nil)).Elem()
}

func (o GetImageExportTasksImageExportTaskArrayOutput) ToGetImageExportTasksImageExportTaskArrayOutput() GetImageExportTasksImageExportTaskArrayOutput {
	return o
}

func (o GetImageExportTasksImageExportTaskArrayOutput) ToGetImageExportTasksImageExportTaskArrayOutputWithContext(ctx context.Context) GetImageExportTasksImageExportTaskArrayOutput {
	return o
}

func (o GetImageExportTasksImageExportTaskArrayOutput) Index(i pulumi.IntInput) GetImageExportTasksImageExportTaskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetImageExportTasksImageExportTask {
		return vs[0].([]GetImageExportTasksImageExportTask)[vs[1].(int)]
	}).(GetImageExportTasksImageExportTaskOutput)
}

type GetImageExportTasksImageExportTaskOsuExport struct {
	// The format of the export disk (`qcow2` \| `raw`).
	DiskImageFormat string `pulumi:"diskImageFormat"`
	// The name of the OOS bucket the OMI is exported to.
	OsuBucket string `pulumi:"osuBucket"`
	// The URL of the manifest file.
	OsuManifestUrl string `pulumi:"osuManifestUrl"`
	// The prefix for the key of the OOS object corresponding to the image.
	OsuPrefix string `pulumi:"osuPrefix"`
}

// GetImageExportTasksImageExportTaskOsuExportInput is an input type that accepts GetImageExportTasksImageExportTaskOsuExportArgs and GetImageExportTasksImageExportTaskOsuExportOutput values.
// You can construct a concrete instance of `GetImageExportTasksImageExportTaskOsuExportInput` via:
//
//	GetImageExportTasksImageExportTaskOsuExportArgs{...}
type GetImageExportTasksImageExportTaskOsuExportInput interface {
	pulumi.Input

	ToGetImageExportTasksImageExportTaskOsuExportOutput() GetImageExportTasksImageExportTaskOsuExportOutput
	ToGetImageExportTasksImageExportTaskOsuExportOutputWithContext(context.Context) GetImageExportTasksImageExportTaskOsuExportOutput
}

type GetImageExportTasksImageExportTaskOsuExportArgs struct {
	// The format of the export disk (`qcow2` \| `raw`).
	DiskImageFormat pulumi.StringInput `pulumi:"diskImageFormat"`
	// The name of the OOS bucket the OMI is exported to.
	OsuBucket pulumi.StringInput `pulumi:"osuBucket"`
	// The URL of the manifest file.
	OsuManifestUrl pulumi.StringInput `pulumi:"osuManifestUrl"`
	// The prefix for the key of the OOS object corresponding to the image.
	OsuPrefix pulumi.StringInput `pulumi:"osuPrefix"`
}

func (GetImageExportTasksImageExportTaskOsuExportArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImageExportTasksImageExportTaskOsuExport)(nil)).Elem()
}

func (i GetImageExportTasksImageExportTaskOsuExportArgs) ToGetImageExportTasksImageExportTaskOsuExportOutput() GetImageExportTasksImageExportTaskOsuExportOutput {
	return i.ToGetImageExportTasksImageExportTaskOsuExportOutputWithContext(context.Background())
}

func (i GetImageExportTasksImageExportTaskOsuExportArgs) ToGetImageExportTasksImageExportTaskOsuExportOutputWithContext(ctx context.Context) GetImageExportTasksImageExportTaskOsuExportOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImageExportTasksImageExportTaskOsuExportOutput)
}

// GetImageExportTasksImageExportTaskOsuExportArrayInput is an input type that accepts GetImageExportTasksImageExportTaskOsuExportArray and GetImageExportTasksImageExportTaskOsuExportArrayOutput values.
// You can construct a concrete instance of `GetImageExportTasksImageExportTaskOsuExportArrayInput` via:
//
//	GetImageExportTasksImageExportTaskOsuExportArray{ GetImageExportTasksImageExportTaskOsuExportArgs{...} }
type GetImageExportTasksImageExportTaskOsuExportArrayInput interface {
	pulumi.Input

	ToGetImageExportTasksImageExportTaskOsuExportArrayOutput() GetImageExportTasksImageExportTaskOsuExportArrayOutput
	ToGetImageExportTasksImageExportTaskOsuExportArrayOutputWithContext(context.Context) GetImageExportTasksImageExportTaskOsuExportArrayOutput
}

type GetImageExportTasksImageExportTaskOsuExportArray []GetImageExportTasksImageExportTaskOsuExportInput

func (GetImageExportTasksImageExportTaskOsuExportArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImageExportTasksImageExportTaskOsuExport)(nil)).Elem()
}

func (i GetImageExportTasksImageExportTaskOsuExportArray) ToGetImageExportTasksImageExportTaskOsuExportArrayOutput() GetImageExportTasksImageExportTaskOsuExportArrayOutput {
	return i.ToGetImageExportTasksImageExportTaskOsuExportArrayOutputWithContext(context.Background())
}

func (i GetImageExportTasksImageExportTaskOsuExportArray) ToGetImageExportTasksImageExportTaskOsuExportArrayOutputWithContext(ctx context.Context) GetImageExportTasksImageExportTaskOsuExportArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImageExportTasksImageExportTaskOsuExportArrayOutput)
}

type GetImageExportTasksImageExportTaskOsuExportOutput struct{ *pulumi.OutputState }

func (GetImageExportTasksImageExportTaskOsuExportOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImageExportTasksImageExportTaskOsuExport)(nil)).Elem()
}

func (o GetImageExportTasksImageExportTaskOsuExportOutput) ToGetImageExportTasksImageExportTaskOsuExportOutput() GetImageExportTasksImageExportTaskOsuExportOutput {
	return o
}

func (o GetImageExportTasksImageExportTaskOsuExportOutput) ToGetImageExportTasksImageExportTaskOsuExportOutputWithContext(ctx context.Context) GetImageExportTasksImageExportTaskOsuExportOutput {
	return o
}

// The format of the export disk (`qcow2` \| `raw`).
func (o GetImageExportTasksImageExportTaskOsuExportOutput) DiskImageFormat() pulumi.StringOutput {
	return o.ApplyT(func(v GetImageExportTasksImageExportTaskOsuExport) string { return v.DiskImageFormat }).(pulumi.StringOutput)
}

// The name of the OOS bucket the OMI is exported to.
func (o GetImageExportTasksImageExportTaskOsuExportOutput) OsuBucket() pulumi.StringOutput {
	return o.ApplyT(func(v GetImageExportTasksImageExportTaskOsuExport) string { return v.OsuBucket }).(pulumi.StringOutput)
}

// The URL of the manifest file.
func (o GetImageExportTasksImageExportTaskOsuExportOutput) OsuManifestUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetImageExportTasksImageExportTaskOsuExport) string { return v.OsuManifestUrl }).(pulumi.StringOutput)
}

// The prefix for the key of the OOS object corresponding to the image.
func (o GetImageExportTasksImageExportTaskOsuExportOutput) OsuPrefix() pulumi.StringOutput {
	return o.ApplyT(func(v GetImageExportTasksImageExportTaskOsuExport) string { return v.OsuPrefix }).(pulumi.StringOutput)
}

type GetImageExportTasksImageExportTaskOsuExportArrayOutput struct{ *pulumi.OutputState }

func (GetImageExportTasksImageExportTaskOsuExportArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImageExportTasksImageExportTaskOsuExport)(nil)).Elem()
}

func (o GetImageExportTasksImageExportTaskOsuExportArrayOutput) ToGetImageExportTasksImageExportTaskOsuExportArrayOutput() GetImageExportTasksImageExportTaskOsuExportArrayOutput {
	return o
}

func (o GetImageExportTasksImageExportTaskOsuExportArrayOutput) ToGetImageExportTasksImageExportTaskOsuExportArrayOutputWithContext(ctx context.Context) GetImageExportTasksImageExportTaskOsuExportArrayOutput {
	return o
}

func (o GetImageExportTasksImageExportTaskOsuExportArrayOutput) Index(i pulumi.IntInput) GetImageExportTasksImageExportTaskOsuExportOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetImageExportTasksImageExportTaskOsuExport {
		return vs[0].([]GetImageExportTasksImageExportTaskOsuExport)[vs[1].(int)]
	}).(GetImageExportTasksImageExportTaskOsuExportOutput)
}

type GetImageExportTasksImageExportTaskTag struct {
	// The key of the tag, with a minimum of 1 character.
	Key string `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value string `pulumi:"value"`
}

// GetImageExportTasksImageExportTaskTagInput is an input type that accepts GetImageExportTasksImageExportTaskTagArgs and GetImageExportTasksImageExportTaskTagOutput values.
// You can construct a concrete instance of `GetImageExportTasksImageExportTaskTagInput` via:
//
//	GetImageExportTasksImageExportTaskTagArgs{...}
type GetImageExportTasksImageExportTaskTagInput interface {
	pulumi.Input

	ToGetImageExportTasksImageExportTaskTagOutput() GetImageExportTasksImageExportTaskTagOutput
	ToGetImageExportTasksImageExportTaskTagOutputWithContext(context.Context) GetImageExportTasksImageExportTaskTagOutput
}

type GetImageExportTasksImageExportTaskTagArgs struct {
	// The key of the tag, with a minimum of 1 character.
	Key pulumi.StringInput `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetImageExportTasksImageExportTaskTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImageExportTasksImageExportTaskTag)(nil)).Elem()
}

func (i GetImageExportTasksImageExportTaskTagArgs) ToGetImageExportTasksImageExportTaskTagOutput() GetImageExportTasksImageExportTaskTagOutput {
	return i.ToGetImageExportTasksImageExportTaskTagOutputWithContext(context.Background())
}

func (i GetImageExportTasksImageExportTaskTagArgs) ToGetImageExportTasksImageExportTaskTagOutputWithContext(ctx context.Context) GetImageExportTasksImageExportTaskTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImageExportTasksImageExportTaskTagOutput)
}

// GetImageExportTasksImageExportTaskTagArrayInput is an input type that accepts GetImageExportTasksImageExportTaskTagArray and GetImageExportTasksImageExportTaskTagArrayOutput values.
// You can construct a concrete instance of `GetImageExportTasksImageExportTaskTagArrayInput` via:
//
//	GetImageExportTasksImageExportTaskTagArray{ GetImageExportTasksImageExportTaskTagArgs{...} }
type GetImageExportTasksImageExportTaskTagArrayInput interface {
	pulumi.Input

	ToGetImageExportTasksImageExportTaskTagArrayOutput() GetImageExportTasksImageExportTaskTagArrayOutput
	ToGetImageExportTasksImageExportTaskTagArrayOutputWithContext(context.Context) GetImageExportTasksImageExportTaskTagArrayOutput
}

type GetImageExportTasksImageExportTaskTagArray []GetImageExportTasksImageExportTaskTagInput

func (GetImageExportTasksImageExportTaskTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImageExportTasksImageExportTaskTag)(nil)).Elem()
}

func (i GetImageExportTasksImageExportTaskTagArray) ToGetImageExportTasksImageExportTaskTagArrayOutput() GetImageExportTasksImageExportTaskTagArrayOutput {
	return i.ToGetImageExportTasksImageExportTaskTagArrayOutputWithContext(context.Background())
}

func (i GetImageExportTasksImageExportTaskTagArray) ToGetImageExportTasksImageExportTaskTagArrayOutputWithContext(ctx context.Context) GetImageExportTasksImageExportTaskTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImageExportTasksImageExportTaskTagArrayOutput)
}

type GetImageExportTasksImageExportTaskTagOutput struct{ *pulumi.OutputState }

func (GetImageExportTasksImageExportTaskTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImageExportTasksImageExportTaskTag)(nil)).Elem()
}

func (o GetImageExportTasksImageExportTaskTagOutput) ToGetImageExportTasksImageExportTaskTagOutput() GetImageExportTasksImageExportTaskTagOutput {
	return o
}

func (o GetImageExportTasksImageExportTaskTagOutput) ToGetImageExportTasksImageExportTaskTagOutputWithContext(ctx context.Context) GetImageExportTasksImageExportTaskTagOutput {
	return o
}

// The key of the tag, with a minimum of 1 character.
func (o GetImageExportTasksImageExportTaskTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetImageExportTasksImageExportTaskTag) string { return v.Key }).(pulumi.StringOutput)
}

// The value of the tag, between 0 and 255 characters.
func (o GetImageExportTasksImageExportTaskTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetImageExportTasksImageExportTaskTag) string { return v.Value }).(pulumi.StringOutput)
}

type GetImageExportTasksImageExportTaskTagArrayOutput struct{ *pulumi.OutputState }

func (GetImageExportTasksImageExportTaskTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImageExportTasksImageExportTaskTag)(nil)).Elem()
}

func (o GetImageExportTasksImageExportTaskTagArrayOutput) ToGetImageExportTasksImageExportTaskTagArrayOutput() GetImageExportTasksImageExportTaskTagArrayOutput {
	return o
}

func (o GetImageExportTasksImageExportTaskTagArrayOutput) ToGetImageExportTasksImageExportTaskTagArrayOutputWithContext(ctx context.Context) GetImageExportTasksImageExportTaskTagArrayOutput {
	return o
}

func (o GetImageExportTasksImageExportTaskTagArrayOutput) Index(i pulumi.IntInput) GetImageExportTasksImageExportTaskTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetImageExportTasksImageExportTaskTag {
		return vs[0].([]GetImageExportTasksImageExportTaskTag)[vs[1].(int)]
	}).(GetImageExportTasksImageExportTaskTagOutput)
}

type GetImageFilter struct {
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// GetImageFilterInput is an input type that accepts GetImageFilterArgs and GetImageFilterOutput values.
// You can construct a concrete instance of `GetImageFilterInput` via:
//
//	GetImageFilterArgs{...}
type GetImageFilterInput interface {
	pulumi.Input

	ToGetImageFilterOutput() GetImageFilterOutput
	ToGetImageFilterOutputWithContext(context.Context) GetImageFilterOutput
}

type GetImageFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetImageFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImageFilter)(nil)).Elem()
}

func (i GetImageFilterArgs) ToGetImageFilterOutput() GetImageFilterOutput {
	return i.ToGetImageFilterOutputWithContext(context.Background())
}

func (i GetImageFilterArgs) ToGetImageFilterOutputWithContext(ctx context.Context) GetImageFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImageFilterOutput)
}

// GetImageFilterArrayInput is an input type that accepts GetImageFilterArray and GetImageFilterArrayOutput values.
// You can construct a concrete instance of `GetImageFilterArrayInput` via:
//
//	GetImageFilterArray{ GetImageFilterArgs{...} }
type GetImageFilterArrayInput interface {
	pulumi.Input

	ToGetImageFilterArrayOutput() GetImageFilterArrayOutput
	ToGetImageFilterArrayOutputWithContext(context.Context) GetImageFilterArrayOutput
}

type GetImageFilterArray []GetImageFilterInput

func (GetImageFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImageFilter)(nil)).Elem()
}

func (i GetImageFilterArray) ToGetImageFilterArrayOutput() GetImageFilterArrayOutput {
	return i.ToGetImageFilterArrayOutputWithContext(context.Background())
}

func (i GetImageFilterArray) ToGetImageFilterArrayOutputWithContext(ctx context.Context) GetImageFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImageFilterArrayOutput)
}

type GetImageFilterOutput struct{ *pulumi.OutputState }

func (GetImageFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImageFilter)(nil)).Elem()
}

func (o GetImageFilterOutput) ToGetImageFilterOutput() GetImageFilterOutput {
	return o
}

func (o GetImageFilterOutput) ToGetImageFilterOutputWithContext(ctx context.Context) GetImageFilterOutput {
	return o
}

func (o GetImageFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetImageFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetImageFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetImageFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetImageFilterArrayOutput struct{ *pulumi.OutputState }

func (GetImageFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImageFilter)(nil)).Elem()
}

func (o GetImageFilterArrayOutput) ToGetImageFilterArrayOutput() GetImageFilterArrayOutput {
	return o
}

func (o GetImageFilterArrayOutput) ToGetImageFilterArrayOutputWithContext(ctx context.Context) GetImageFilterArrayOutput {
	return o
}

func (o GetImageFilterArrayOutput) Index(i pulumi.IntInput) GetImageFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetImageFilter {
		return vs[0].([]GetImageFilter)[vs[1].(int)]
	}).(GetImageFilterOutput)
}

type GetImagePermissionsToLaunch struct {
	// The account ID of the owner of the OMI.
	AccountId string `pulumi:"accountId"`
	// A global permission for all accounts.<br />
	// (Request) Set this parameter to true to make the resource public (if the parent parameter is `Additions`) or to make the resource private (if the parent parameter is `Removals`).<br />
	// (Response) If true, the resource is public. If false, the resource is private.
	GlobalPermission bool `pulumi:"globalPermission"`
}

// GetImagePermissionsToLaunchInput is an input type that accepts GetImagePermissionsToLaunchArgs and GetImagePermissionsToLaunchOutput values.
// You can construct a concrete instance of `GetImagePermissionsToLaunchInput` via:
//
//	GetImagePermissionsToLaunchArgs{...}
type GetImagePermissionsToLaunchInput interface {
	pulumi.Input

	ToGetImagePermissionsToLaunchOutput() GetImagePermissionsToLaunchOutput
	ToGetImagePermissionsToLaunchOutputWithContext(context.Context) GetImagePermissionsToLaunchOutput
}

type GetImagePermissionsToLaunchArgs struct {
	// The account ID of the owner of the OMI.
	AccountId pulumi.StringInput `pulumi:"accountId"`
	// A global permission for all accounts.<br />
	// (Request) Set this parameter to true to make the resource public (if the parent parameter is `Additions`) or to make the resource private (if the parent parameter is `Removals`).<br />
	// (Response) If true, the resource is public. If false, the resource is private.
	GlobalPermission pulumi.BoolInput `pulumi:"globalPermission"`
}

func (GetImagePermissionsToLaunchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImagePermissionsToLaunch)(nil)).Elem()
}

func (i GetImagePermissionsToLaunchArgs) ToGetImagePermissionsToLaunchOutput() GetImagePermissionsToLaunchOutput {
	return i.ToGetImagePermissionsToLaunchOutputWithContext(context.Background())
}

func (i GetImagePermissionsToLaunchArgs) ToGetImagePermissionsToLaunchOutputWithContext(ctx context.Context) GetImagePermissionsToLaunchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImagePermissionsToLaunchOutput)
}

// GetImagePermissionsToLaunchArrayInput is an input type that accepts GetImagePermissionsToLaunchArray and GetImagePermissionsToLaunchArrayOutput values.
// You can construct a concrete instance of `GetImagePermissionsToLaunchArrayInput` via:
//
//	GetImagePermissionsToLaunchArray{ GetImagePermissionsToLaunchArgs{...} }
type GetImagePermissionsToLaunchArrayInput interface {
	pulumi.Input

	ToGetImagePermissionsToLaunchArrayOutput() GetImagePermissionsToLaunchArrayOutput
	ToGetImagePermissionsToLaunchArrayOutputWithContext(context.Context) GetImagePermissionsToLaunchArrayOutput
}

type GetImagePermissionsToLaunchArray []GetImagePermissionsToLaunchInput

func (GetImagePermissionsToLaunchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImagePermissionsToLaunch)(nil)).Elem()
}

func (i GetImagePermissionsToLaunchArray) ToGetImagePermissionsToLaunchArrayOutput() GetImagePermissionsToLaunchArrayOutput {
	return i.ToGetImagePermissionsToLaunchArrayOutputWithContext(context.Background())
}

func (i GetImagePermissionsToLaunchArray) ToGetImagePermissionsToLaunchArrayOutputWithContext(ctx context.Context) GetImagePermissionsToLaunchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImagePermissionsToLaunchArrayOutput)
}

type GetImagePermissionsToLaunchOutput struct{ *pulumi.OutputState }

func (GetImagePermissionsToLaunchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImagePermissionsToLaunch)(nil)).Elem()
}

func (o GetImagePermissionsToLaunchOutput) ToGetImagePermissionsToLaunchOutput() GetImagePermissionsToLaunchOutput {
	return o
}

func (o GetImagePermissionsToLaunchOutput) ToGetImagePermissionsToLaunchOutputWithContext(ctx context.Context) GetImagePermissionsToLaunchOutput {
	return o
}

// The account ID of the owner of the OMI.
func (o GetImagePermissionsToLaunchOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagePermissionsToLaunch) string { return v.AccountId }).(pulumi.StringOutput)
}

// A global permission for all accounts.<br />
// (Request) Set this parameter to true to make the resource public (if the parent parameter is `Additions`) or to make the resource private (if the parent parameter is `Removals`).<br />
// (Response) If true, the resource is public. If false, the resource is private.
func (o GetImagePermissionsToLaunchOutput) GlobalPermission() pulumi.BoolOutput {
	return o.ApplyT(func(v GetImagePermissionsToLaunch) bool { return v.GlobalPermission }).(pulumi.BoolOutput)
}

type GetImagePermissionsToLaunchArrayOutput struct{ *pulumi.OutputState }

func (GetImagePermissionsToLaunchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImagePermissionsToLaunch)(nil)).Elem()
}

func (o GetImagePermissionsToLaunchArrayOutput) ToGetImagePermissionsToLaunchArrayOutput() GetImagePermissionsToLaunchArrayOutput {
	return o
}

func (o GetImagePermissionsToLaunchArrayOutput) ToGetImagePermissionsToLaunchArrayOutputWithContext(ctx context.Context) GetImagePermissionsToLaunchArrayOutput {
	return o
}

func (o GetImagePermissionsToLaunchArrayOutput) Index(i pulumi.IntInput) GetImagePermissionsToLaunchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetImagePermissionsToLaunch {
		return vs[0].([]GetImagePermissionsToLaunch)[vs[1].(int)]
	}).(GetImagePermissionsToLaunchOutput)
}

type GetImageStateComment struct {
	// The code of the change of state.
	StateCode string `pulumi:"stateCode"`
	// A message explaining the change of state.
	StateMessage string `pulumi:"stateMessage"`
}

// GetImageStateCommentInput is an input type that accepts GetImageStateCommentArgs and GetImageStateCommentOutput values.
// You can construct a concrete instance of `GetImageStateCommentInput` via:
//
//	GetImageStateCommentArgs{...}
type GetImageStateCommentInput interface {
	pulumi.Input

	ToGetImageStateCommentOutput() GetImageStateCommentOutput
	ToGetImageStateCommentOutputWithContext(context.Context) GetImageStateCommentOutput
}

type GetImageStateCommentArgs struct {
	// The code of the change of state.
	StateCode pulumi.StringInput `pulumi:"stateCode"`
	// A message explaining the change of state.
	StateMessage pulumi.StringInput `pulumi:"stateMessage"`
}

func (GetImageStateCommentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImageStateComment)(nil)).Elem()
}

func (i GetImageStateCommentArgs) ToGetImageStateCommentOutput() GetImageStateCommentOutput {
	return i.ToGetImageStateCommentOutputWithContext(context.Background())
}

func (i GetImageStateCommentArgs) ToGetImageStateCommentOutputWithContext(ctx context.Context) GetImageStateCommentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImageStateCommentOutput)
}

// GetImageStateCommentArrayInput is an input type that accepts GetImageStateCommentArray and GetImageStateCommentArrayOutput values.
// You can construct a concrete instance of `GetImageStateCommentArrayInput` via:
//
//	GetImageStateCommentArray{ GetImageStateCommentArgs{...} }
type GetImageStateCommentArrayInput interface {
	pulumi.Input

	ToGetImageStateCommentArrayOutput() GetImageStateCommentArrayOutput
	ToGetImageStateCommentArrayOutputWithContext(context.Context) GetImageStateCommentArrayOutput
}

type GetImageStateCommentArray []GetImageStateCommentInput

func (GetImageStateCommentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImageStateComment)(nil)).Elem()
}

func (i GetImageStateCommentArray) ToGetImageStateCommentArrayOutput() GetImageStateCommentArrayOutput {
	return i.ToGetImageStateCommentArrayOutputWithContext(context.Background())
}

func (i GetImageStateCommentArray) ToGetImageStateCommentArrayOutputWithContext(ctx context.Context) GetImageStateCommentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImageStateCommentArrayOutput)
}

type GetImageStateCommentOutput struct{ *pulumi.OutputState }

func (GetImageStateCommentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImageStateComment)(nil)).Elem()
}

func (o GetImageStateCommentOutput) ToGetImageStateCommentOutput() GetImageStateCommentOutput {
	return o
}

func (o GetImageStateCommentOutput) ToGetImageStateCommentOutputWithContext(ctx context.Context) GetImageStateCommentOutput {
	return o
}

// The code of the change of state.
func (o GetImageStateCommentOutput) StateCode() pulumi.StringOutput {
	return o.ApplyT(func(v GetImageStateComment) string { return v.StateCode }).(pulumi.StringOutput)
}

// A message explaining the change of state.
func (o GetImageStateCommentOutput) StateMessage() pulumi.StringOutput {
	return o.ApplyT(func(v GetImageStateComment) string { return v.StateMessage }).(pulumi.StringOutput)
}

type GetImageStateCommentArrayOutput struct{ *pulumi.OutputState }

func (GetImageStateCommentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImageStateComment)(nil)).Elem()
}

func (o GetImageStateCommentArrayOutput) ToGetImageStateCommentArrayOutput() GetImageStateCommentArrayOutput {
	return o
}

func (o GetImageStateCommentArrayOutput) ToGetImageStateCommentArrayOutputWithContext(ctx context.Context) GetImageStateCommentArrayOutput {
	return o
}

func (o GetImageStateCommentArrayOutput) Index(i pulumi.IntInput) GetImageStateCommentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetImageStateComment {
		return vs[0].([]GetImageStateComment)[vs[1].(int)]
	}).(GetImageStateCommentOutput)
}

type GetImageTag struct {
	// The key of the tag, with a minimum of 1 character.
	Key string `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value string `pulumi:"value"`
}

// GetImageTagInput is an input type that accepts GetImageTagArgs and GetImageTagOutput values.
// You can construct a concrete instance of `GetImageTagInput` via:
//
//	GetImageTagArgs{...}
type GetImageTagInput interface {
	pulumi.Input

	ToGetImageTagOutput() GetImageTagOutput
	ToGetImageTagOutputWithContext(context.Context) GetImageTagOutput
}

type GetImageTagArgs struct {
	// The key of the tag, with a minimum of 1 character.
	Key pulumi.StringInput `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetImageTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImageTag)(nil)).Elem()
}

func (i GetImageTagArgs) ToGetImageTagOutput() GetImageTagOutput {
	return i.ToGetImageTagOutputWithContext(context.Background())
}

func (i GetImageTagArgs) ToGetImageTagOutputWithContext(ctx context.Context) GetImageTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImageTagOutput)
}

// GetImageTagArrayInput is an input type that accepts GetImageTagArray and GetImageTagArrayOutput values.
// You can construct a concrete instance of `GetImageTagArrayInput` via:
//
//	GetImageTagArray{ GetImageTagArgs{...} }
type GetImageTagArrayInput interface {
	pulumi.Input

	ToGetImageTagArrayOutput() GetImageTagArrayOutput
	ToGetImageTagArrayOutputWithContext(context.Context) GetImageTagArrayOutput
}

type GetImageTagArray []GetImageTagInput

func (GetImageTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImageTag)(nil)).Elem()
}

func (i GetImageTagArray) ToGetImageTagArrayOutput() GetImageTagArrayOutput {
	return i.ToGetImageTagArrayOutputWithContext(context.Background())
}

func (i GetImageTagArray) ToGetImageTagArrayOutputWithContext(ctx context.Context) GetImageTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImageTagArrayOutput)
}

type GetImageTagOutput struct{ *pulumi.OutputState }

func (GetImageTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImageTag)(nil)).Elem()
}

func (o GetImageTagOutput) ToGetImageTagOutput() GetImageTagOutput {
	return o
}

func (o GetImageTagOutput) ToGetImageTagOutputWithContext(ctx context.Context) GetImageTagOutput {
	return o
}

// The key of the tag, with a minimum of 1 character.
func (o GetImageTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetImageTag) string { return v.Key }).(pulumi.StringOutput)
}

// The value of the tag, between 0 and 255 characters.
func (o GetImageTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetImageTag) string { return v.Value }).(pulumi.StringOutput)
}

type GetImageTagArrayOutput struct{ *pulumi.OutputState }

func (GetImageTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImageTag)(nil)).Elem()
}

func (o GetImageTagArrayOutput) ToGetImageTagArrayOutput() GetImageTagArrayOutput {
	return o
}

func (o GetImageTagArrayOutput) ToGetImageTagArrayOutputWithContext(ctx context.Context) GetImageTagArrayOutput {
	return o
}

func (o GetImageTagArrayOutput) Index(i pulumi.IntInput) GetImageTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetImageTag {
		return vs[0].([]GetImageTag)[vs[1].(int)]
	}).(GetImageTagOutput)
}

type GetImagesFilter struct {
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// GetImagesFilterInput is an input type that accepts GetImagesFilterArgs and GetImagesFilterOutput values.
// You can construct a concrete instance of `GetImagesFilterInput` via:
//
//	GetImagesFilterArgs{...}
type GetImagesFilterInput interface {
	pulumi.Input

	ToGetImagesFilterOutput() GetImagesFilterOutput
	ToGetImagesFilterOutputWithContext(context.Context) GetImagesFilterOutput
}

type GetImagesFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetImagesFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImagesFilter)(nil)).Elem()
}

func (i GetImagesFilterArgs) ToGetImagesFilterOutput() GetImagesFilterOutput {
	return i.ToGetImagesFilterOutputWithContext(context.Background())
}

func (i GetImagesFilterArgs) ToGetImagesFilterOutputWithContext(ctx context.Context) GetImagesFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImagesFilterOutput)
}

// GetImagesFilterArrayInput is an input type that accepts GetImagesFilterArray and GetImagesFilterArrayOutput values.
// You can construct a concrete instance of `GetImagesFilterArrayInput` via:
//
//	GetImagesFilterArray{ GetImagesFilterArgs{...} }
type GetImagesFilterArrayInput interface {
	pulumi.Input

	ToGetImagesFilterArrayOutput() GetImagesFilterArrayOutput
	ToGetImagesFilterArrayOutputWithContext(context.Context) GetImagesFilterArrayOutput
}

type GetImagesFilterArray []GetImagesFilterInput

func (GetImagesFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImagesFilter)(nil)).Elem()
}

func (i GetImagesFilterArray) ToGetImagesFilterArrayOutput() GetImagesFilterArrayOutput {
	return i.ToGetImagesFilterArrayOutputWithContext(context.Background())
}

func (i GetImagesFilterArray) ToGetImagesFilterArrayOutputWithContext(ctx context.Context) GetImagesFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImagesFilterArrayOutput)
}

type GetImagesFilterOutput struct{ *pulumi.OutputState }

func (GetImagesFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImagesFilter)(nil)).Elem()
}

func (o GetImagesFilterOutput) ToGetImagesFilterOutput() GetImagesFilterOutput {
	return o
}

func (o GetImagesFilterOutput) ToGetImagesFilterOutputWithContext(ctx context.Context) GetImagesFilterOutput {
	return o
}

func (o GetImagesFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetImagesFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetImagesFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetImagesFilterArrayOutput struct{ *pulumi.OutputState }

func (GetImagesFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImagesFilter)(nil)).Elem()
}

func (o GetImagesFilterArrayOutput) ToGetImagesFilterArrayOutput() GetImagesFilterArrayOutput {
	return o
}

func (o GetImagesFilterArrayOutput) ToGetImagesFilterArrayOutputWithContext(ctx context.Context) GetImagesFilterArrayOutput {
	return o
}

func (o GetImagesFilterArrayOutput) Index(i pulumi.IntInput) GetImagesFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetImagesFilter {
		return vs[0].([]GetImagesFilter)[vs[1].(int)]
	}).(GetImagesFilterOutput)
}

type GetImagesImage struct {
	// The account alias of the owner of the OMI.
	AccountAlias string `pulumi:"accountAlias"`
	// The account ID of the owner of the OMI.
	AccountId string `pulumi:"accountId"`
	// The architecture of the OMI.
	Architecture string `pulumi:"architecture"`
	// One or more block device mappings.
	BlockDeviceMappings []GetImagesImageBlockDeviceMapping `pulumi:"blockDeviceMappings"`
	// The date and time (UTC) at which the OMI was created.
	CreationDate string `pulumi:"creationDate"`
	// The description of the OMI.
	Description string `pulumi:"description"`
	// The location from which the OMI files were created.
	FileLocation string `pulumi:"fileLocation"`
	// The ID of the OMI.
	ImageId string `pulumi:"imageId"`
	// The name of the OMI.
	ImageName string `pulumi:"imageName"`
	// The type of the OMI.
	ImageType string `pulumi:"imageType"`
	// Permissions for the resource.
	PermissionsToLaunches []GetImagesImagePermissionsToLaunch `pulumi:"permissionsToLaunches"`
	// The product codes associated with the OMI.
	ProductCodes []string `pulumi:"productCodes"`
	// The name of the root device.
	RootDeviceName string `pulumi:"rootDeviceName"`
	// The type of root device used by the OMI (always `bsu`).
	RootDeviceType string `pulumi:"rootDeviceType"`
	// The state of the OMI (`pending` \| `available` \| `failed`).
	State string `pulumi:"state"`
	// Information about the change of state.
	StateComments []GetImagesImageStateComment `pulumi:"stateComments"`
	// One or more tags associated with the OMI.
	Tags []GetImagesImageTag `pulumi:"tags"`
}

// GetImagesImageInput is an input type that accepts GetImagesImageArgs and GetImagesImageOutput values.
// You can construct a concrete instance of `GetImagesImageInput` via:
//
//	GetImagesImageArgs{...}
type GetImagesImageInput interface {
	pulumi.Input

	ToGetImagesImageOutput() GetImagesImageOutput
	ToGetImagesImageOutputWithContext(context.Context) GetImagesImageOutput
}

type GetImagesImageArgs struct {
	// The account alias of the owner of the OMI.
	AccountAlias pulumi.StringInput `pulumi:"accountAlias"`
	// The account ID of the owner of the OMI.
	AccountId pulumi.StringInput `pulumi:"accountId"`
	// The architecture of the OMI.
	Architecture pulumi.StringInput `pulumi:"architecture"`
	// One or more block device mappings.
	BlockDeviceMappings GetImagesImageBlockDeviceMappingArrayInput `pulumi:"blockDeviceMappings"`
	// The date and time (UTC) at which the OMI was created.
	CreationDate pulumi.StringInput `pulumi:"creationDate"`
	// The description of the OMI.
	Description pulumi.StringInput `pulumi:"description"`
	// The location from which the OMI files were created.
	FileLocation pulumi.StringInput `pulumi:"fileLocation"`
	// The ID of the OMI.
	ImageId pulumi.StringInput `pulumi:"imageId"`
	// The name of the OMI.
	ImageName pulumi.StringInput `pulumi:"imageName"`
	// The type of the OMI.
	ImageType pulumi.StringInput `pulumi:"imageType"`
	// Permissions for the resource.
	PermissionsToLaunches GetImagesImagePermissionsToLaunchArrayInput `pulumi:"permissionsToLaunches"`
	// The product codes associated with the OMI.
	ProductCodes pulumi.StringArrayInput `pulumi:"productCodes"`
	// The name of the root device.
	RootDeviceName pulumi.StringInput `pulumi:"rootDeviceName"`
	// The type of root device used by the OMI (always `bsu`).
	RootDeviceType pulumi.StringInput `pulumi:"rootDeviceType"`
	// The state of the OMI (`pending` \| `available` \| `failed`).
	State pulumi.StringInput `pulumi:"state"`
	// Information about the change of state.
	StateComments GetImagesImageStateCommentArrayInput `pulumi:"stateComments"`
	// One or more tags associated with the OMI.
	Tags GetImagesImageTagArrayInput `pulumi:"tags"`
}

func (GetImagesImageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImagesImage)(nil)).Elem()
}

func (i GetImagesImageArgs) ToGetImagesImageOutput() GetImagesImageOutput {
	return i.ToGetImagesImageOutputWithContext(context.Background())
}

func (i GetImagesImageArgs) ToGetImagesImageOutputWithContext(ctx context.Context) GetImagesImageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImagesImageOutput)
}

// GetImagesImageArrayInput is an input type that accepts GetImagesImageArray and GetImagesImageArrayOutput values.
// You can construct a concrete instance of `GetImagesImageArrayInput` via:
//
//	GetImagesImageArray{ GetImagesImageArgs{...} }
type GetImagesImageArrayInput interface {
	pulumi.Input

	ToGetImagesImageArrayOutput() GetImagesImageArrayOutput
	ToGetImagesImageArrayOutputWithContext(context.Context) GetImagesImageArrayOutput
}

type GetImagesImageArray []GetImagesImageInput

func (GetImagesImageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImagesImage)(nil)).Elem()
}

func (i GetImagesImageArray) ToGetImagesImageArrayOutput() GetImagesImageArrayOutput {
	return i.ToGetImagesImageArrayOutputWithContext(context.Background())
}

func (i GetImagesImageArray) ToGetImagesImageArrayOutputWithContext(ctx context.Context) GetImagesImageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImagesImageArrayOutput)
}

type GetImagesImageOutput struct{ *pulumi.OutputState }

func (GetImagesImageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImagesImage)(nil)).Elem()
}

func (o GetImagesImageOutput) ToGetImagesImageOutput() GetImagesImageOutput {
	return o
}

func (o GetImagesImageOutput) ToGetImagesImageOutputWithContext(ctx context.Context) GetImagesImageOutput {
	return o
}

// The account alias of the owner of the OMI.
func (o GetImagesImageOutput) AccountAlias() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImage) string { return v.AccountAlias }).(pulumi.StringOutput)
}

// The account ID of the owner of the OMI.
func (o GetImagesImageOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImage) string { return v.AccountId }).(pulumi.StringOutput)
}

// The architecture of the OMI.
func (o GetImagesImageOutput) Architecture() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImage) string { return v.Architecture }).(pulumi.StringOutput)
}

// One or more block device mappings.
func (o GetImagesImageOutput) BlockDeviceMappings() GetImagesImageBlockDeviceMappingArrayOutput {
	return o.ApplyT(func(v GetImagesImage) []GetImagesImageBlockDeviceMapping { return v.BlockDeviceMappings }).(GetImagesImageBlockDeviceMappingArrayOutput)
}

// The date and time (UTC) at which the OMI was created.
func (o GetImagesImageOutput) CreationDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImage) string { return v.CreationDate }).(pulumi.StringOutput)
}

// The description of the OMI.
func (o GetImagesImageOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImage) string { return v.Description }).(pulumi.StringOutput)
}

// The location from which the OMI files were created.
func (o GetImagesImageOutput) FileLocation() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImage) string { return v.FileLocation }).(pulumi.StringOutput)
}

// The ID of the OMI.
func (o GetImagesImageOutput) ImageId() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImage) string { return v.ImageId }).(pulumi.StringOutput)
}

// The name of the OMI.
func (o GetImagesImageOutput) ImageName() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImage) string { return v.ImageName }).(pulumi.StringOutput)
}

// The type of the OMI.
func (o GetImagesImageOutput) ImageType() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImage) string { return v.ImageType }).(pulumi.StringOutput)
}

// Permissions for the resource.
func (o GetImagesImageOutput) PermissionsToLaunches() GetImagesImagePermissionsToLaunchArrayOutput {
	return o.ApplyT(func(v GetImagesImage) []GetImagesImagePermissionsToLaunch { return v.PermissionsToLaunches }).(GetImagesImagePermissionsToLaunchArrayOutput)
}

// The product codes associated with the OMI.
func (o GetImagesImageOutput) ProductCodes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetImagesImage) []string { return v.ProductCodes }).(pulumi.StringArrayOutput)
}

// The name of the root device.
func (o GetImagesImageOutput) RootDeviceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImage) string { return v.RootDeviceName }).(pulumi.StringOutput)
}

// The type of root device used by the OMI (always `bsu`).
func (o GetImagesImageOutput) RootDeviceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImage) string { return v.RootDeviceType }).(pulumi.StringOutput)
}

// The state of the OMI (`pending` \| `available` \| `failed`).
func (o GetImagesImageOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImage) string { return v.State }).(pulumi.StringOutput)
}

// Information about the change of state.
func (o GetImagesImageOutput) StateComments() GetImagesImageStateCommentArrayOutput {
	return o.ApplyT(func(v GetImagesImage) []GetImagesImageStateComment { return v.StateComments }).(GetImagesImageStateCommentArrayOutput)
}

// One or more tags associated with the OMI.
func (o GetImagesImageOutput) Tags() GetImagesImageTagArrayOutput {
	return o.ApplyT(func(v GetImagesImage) []GetImagesImageTag { return v.Tags }).(GetImagesImageTagArrayOutput)
}

type GetImagesImageArrayOutput struct{ *pulumi.OutputState }

func (GetImagesImageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImagesImage)(nil)).Elem()
}

func (o GetImagesImageArrayOutput) ToGetImagesImageArrayOutput() GetImagesImageArrayOutput {
	return o
}

func (o GetImagesImageArrayOutput) ToGetImagesImageArrayOutputWithContext(ctx context.Context) GetImagesImageArrayOutput {
	return o
}

func (o GetImagesImageArrayOutput) Index(i pulumi.IntInput) GetImagesImageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetImagesImage {
		return vs[0].([]GetImagesImage)[vs[1].(int)]
	}).(GetImagesImageOutput)
}

type GetImagesImageBlockDeviceMapping struct {
	// Information about the BSU volume to create.
	Bsus []GetImagesImageBlockDeviceMappingBsus `pulumi:"bsus"`
	// The device name for the volume. For a root device, you must use `/dev/sda1`. For other volumes, you must use `/dev/sdX`, `/dev/sdXX`, `/dev/xvdX`, or `/dev/xvdXX` (where the first `X` is a letter between `b` and `z`, and the second `X` is a letter between `a` and `z`).
	DeviceName string `pulumi:"deviceName"`
	// The name of the virtual device (`ephemeralN`).
	VirtualDeviceName string `pulumi:"virtualDeviceName"`
}

// GetImagesImageBlockDeviceMappingInput is an input type that accepts GetImagesImageBlockDeviceMappingArgs and GetImagesImageBlockDeviceMappingOutput values.
// You can construct a concrete instance of `GetImagesImageBlockDeviceMappingInput` via:
//
//	GetImagesImageBlockDeviceMappingArgs{...}
type GetImagesImageBlockDeviceMappingInput interface {
	pulumi.Input

	ToGetImagesImageBlockDeviceMappingOutput() GetImagesImageBlockDeviceMappingOutput
	ToGetImagesImageBlockDeviceMappingOutputWithContext(context.Context) GetImagesImageBlockDeviceMappingOutput
}

type GetImagesImageBlockDeviceMappingArgs struct {
	// Information about the BSU volume to create.
	Bsus GetImagesImageBlockDeviceMappingBsusArrayInput `pulumi:"bsus"`
	// The device name for the volume. For a root device, you must use `/dev/sda1`. For other volumes, you must use `/dev/sdX`, `/dev/sdXX`, `/dev/xvdX`, or `/dev/xvdXX` (where the first `X` is a letter between `b` and `z`, and the second `X` is a letter between `a` and `z`).
	DeviceName pulumi.StringInput `pulumi:"deviceName"`
	// The name of the virtual device (`ephemeralN`).
	VirtualDeviceName pulumi.StringInput `pulumi:"virtualDeviceName"`
}

func (GetImagesImageBlockDeviceMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImagesImageBlockDeviceMapping)(nil)).Elem()
}

func (i GetImagesImageBlockDeviceMappingArgs) ToGetImagesImageBlockDeviceMappingOutput() GetImagesImageBlockDeviceMappingOutput {
	return i.ToGetImagesImageBlockDeviceMappingOutputWithContext(context.Background())
}

func (i GetImagesImageBlockDeviceMappingArgs) ToGetImagesImageBlockDeviceMappingOutputWithContext(ctx context.Context) GetImagesImageBlockDeviceMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImagesImageBlockDeviceMappingOutput)
}

// GetImagesImageBlockDeviceMappingArrayInput is an input type that accepts GetImagesImageBlockDeviceMappingArray and GetImagesImageBlockDeviceMappingArrayOutput values.
// You can construct a concrete instance of `GetImagesImageBlockDeviceMappingArrayInput` via:
//
//	GetImagesImageBlockDeviceMappingArray{ GetImagesImageBlockDeviceMappingArgs{...} }
type GetImagesImageBlockDeviceMappingArrayInput interface {
	pulumi.Input

	ToGetImagesImageBlockDeviceMappingArrayOutput() GetImagesImageBlockDeviceMappingArrayOutput
	ToGetImagesImageBlockDeviceMappingArrayOutputWithContext(context.Context) GetImagesImageBlockDeviceMappingArrayOutput
}

type GetImagesImageBlockDeviceMappingArray []GetImagesImageBlockDeviceMappingInput

func (GetImagesImageBlockDeviceMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImagesImageBlockDeviceMapping)(nil)).Elem()
}

func (i GetImagesImageBlockDeviceMappingArray) ToGetImagesImageBlockDeviceMappingArrayOutput() GetImagesImageBlockDeviceMappingArrayOutput {
	return i.ToGetImagesImageBlockDeviceMappingArrayOutputWithContext(context.Background())
}

func (i GetImagesImageBlockDeviceMappingArray) ToGetImagesImageBlockDeviceMappingArrayOutputWithContext(ctx context.Context) GetImagesImageBlockDeviceMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImagesImageBlockDeviceMappingArrayOutput)
}

type GetImagesImageBlockDeviceMappingOutput struct{ *pulumi.OutputState }

func (GetImagesImageBlockDeviceMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImagesImageBlockDeviceMapping)(nil)).Elem()
}

func (o GetImagesImageBlockDeviceMappingOutput) ToGetImagesImageBlockDeviceMappingOutput() GetImagesImageBlockDeviceMappingOutput {
	return o
}

func (o GetImagesImageBlockDeviceMappingOutput) ToGetImagesImageBlockDeviceMappingOutputWithContext(ctx context.Context) GetImagesImageBlockDeviceMappingOutput {
	return o
}

// Information about the BSU volume to create.
func (o GetImagesImageBlockDeviceMappingOutput) Bsus() GetImagesImageBlockDeviceMappingBsusArrayOutput {
	return o.ApplyT(func(v GetImagesImageBlockDeviceMapping) []GetImagesImageBlockDeviceMappingBsus { return v.Bsus }).(GetImagesImageBlockDeviceMappingBsusArrayOutput)
}

// The device name for the volume. For a root device, you must use `/dev/sda1`. For other volumes, you must use `/dev/sdX`, `/dev/sdXX`, `/dev/xvdX`, or `/dev/xvdXX` (where the first `X` is a letter between `b` and `z`, and the second `X` is a letter between `a` and `z`).
func (o GetImagesImageBlockDeviceMappingOutput) DeviceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImageBlockDeviceMapping) string { return v.DeviceName }).(pulumi.StringOutput)
}

// The name of the virtual device (`ephemeralN`).
func (o GetImagesImageBlockDeviceMappingOutput) VirtualDeviceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImageBlockDeviceMapping) string { return v.VirtualDeviceName }).(pulumi.StringOutput)
}

type GetImagesImageBlockDeviceMappingArrayOutput struct{ *pulumi.OutputState }

func (GetImagesImageBlockDeviceMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImagesImageBlockDeviceMapping)(nil)).Elem()
}

func (o GetImagesImageBlockDeviceMappingArrayOutput) ToGetImagesImageBlockDeviceMappingArrayOutput() GetImagesImageBlockDeviceMappingArrayOutput {
	return o
}

func (o GetImagesImageBlockDeviceMappingArrayOutput) ToGetImagesImageBlockDeviceMappingArrayOutputWithContext(ctx context.Context) GetImagesImageBlockDeviceMappingArrayOutput {
	return o
}

func (o GetImagesImageBlockDeviceMappingArrayOutput) Index(i pulumi.IntInput) GetImagesImageBlockDeviceMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetImagesImageBlockDeviceMapping {
		return vs[0].([]GetImagesImageBlockDeviceMapping)[vs[1].(int)]
	}).(GetImagesImageBlockDeviceMappingOutput)
}

type GetImagesImageBlockDeviceMappingBsus struct {
	// By default or if set to true, the volume is deleted when terminating the VM. If false, the volume is not deleted when terminating the VM.
	DeleteOnVmDeletion bool `pulumi:"deleteOnVmDeletion"`
	// The number of I/O operations per second (IOPS). This parameter must be specified only if you create an `io1` volume. The maximum number of IOPS allowed for `io1` volumes is `13000` with a maximum performance ratio of 300 IOPS per gibibyte.
	Iops int `pulumi:"iops"`
	// The ID of the snapshot used to create the volume.
	SnapshotId string `pulumi:"snapshotId"`
	// The size of the volume, in gibibytes (GiB).<br />
	// If you specify a snapshot ID, the volume size must be at least equal to the snapshot size.<br />
	// If you specify a snapshot ID but no volume size, the volume is created with a size similar to the snapshot one.
	VolumeSize int `pulumi:"volumeSize"`
	// The type of the volume (`standard` \| `io1` \| `gp2`). If not specified in the request, a `standard` volume is created.<br />
	// For more information about volume types, see [About Volumes > Volume Types and IOPS](https://docs.outscale.com/en/userguide/About-Volumes.html#_volume_types_and_iops).
	VolumeType string `pulumi:"volumeType"`
}

// GetImagesImageBlockDeviceMappingBsusInput is an input type that accepts GetImagesImageBlockDeviceMappingBsusArgs and GetImagesImageBlockDeviceMappingBsusOutput values.
// You can construct a concrete instance of `GetImagesImageBlockDeviceMappingBsusInput` via:
//
//	GetImagesImageBlockDeviceMappingBsusArgs{...}
type GetImagesImageBlockDeviceMappingBsusInput interface {
	pulumi.Input

	ToGetImagesImageBlockDeviceMappingBsusOutput() GetImagesImageBlockDeviceMappingBsusOutput
	ToGetImagesImageBlockDeviceMappingBsusOutputWithContext(context.Context) GetImagesImageBlockDeviceMappingBsusOutput
}

type GetImagesImageBlockDeviceMappingBsusArgs struct {
	// By default or if set to true, the volume is deleted when terminating the VM. If false, the volume is not deleted when terminating the VM.
	DeleteOnVmDeletion pulumi.BoolInput `pulumi:"deleteOnVmDeletion"`
	// The number of I/O operations per second (IOPS). This parameter must be specified only if you create an `io1` volume. The maximum number of IOPS allowed for `io1` volumes is `13000` with a maximum performance ratio of 300 IOPS per gibibyte.
	Iops pulumi.IntInput `pulumi:"iops"`
	// The ID of the snapshot used to create the volume.
	SnapshotId pulumi.StringInput `pulumi:"snapshotId"`
	// The size of the volume, in gibibytes (GiB).<br />
	// If you specify a snapshot ID, the volume size must be at least equal to the snapshot size.<br />
	// If you specify a snapshot ID but no volume size, the volume is created with a size similar to the snapshot one.
	VolumeSize pulumi.IntInput `pulumi:"volumeSize"`
	// The type of the volume (`standard` \| `io1` \| `gp2`). If not specified in the request, a `standard` volume is created.<br />
	// For more information about volume types, see [About Volumes > Volume Types and IOPS](https://docs.outscale.com/en/userguide/About-Volumes.html#_volume_types_and_iops).
	VolumeType pulumi.StringInput `pulumi:"volumeType"`
}

func (GetImagesImageBlockDeviceMappingBsusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImagesImageBlockDeviceMappingBsus)(nil)).Elem()
}

func (i GetImagesImageBlockDeviceMappingBsusArgs) ToGetImagesImageBlockDeviceMappingBsusOutput() GetImagesImageBlockDeviceMappingBsusOutput {
	return i.ToGetImagesImageBlockDeviceMappingBsusOutputWithContext(context.Background())
}

func (i GetImagesImageBlockDeviceMappingBsusArgs) ToGetImagesImageBlockDeviceMappingBsusOutputWithContext(ctx context.Context) GetImagesImageBlockDeviceMappingBsusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImagesImageBlockDeviceMappingBsusOutput)
}

// GetImagesImageBlockDeviceMappingBsusArrayInput is an input type that accepts GetImagesImageBlockDeviceMappingBsusArray and GetImagesImageBlockDeviceMappingBsusArrayOutput values.
// You can construct a concrete instance of `GetImagesImageBlockDeviceMappingBsusArrayInput` via:
//
//	GetImagesImageBlockDeviceMappingBsusArray{ GetImagesImageBlockDeviceMappingBsusArgs{...} }
type GetImagesImageBlockDeviceMappingBsusArrayInput interface {
	pulumi.Input

	ToGetImagesImageBlockDeviceMappingBsusArrayOutput() GetImagesImageBlockDeviceMappingBsusArrayOutput
	ToGetImagesImageBlockDeviceMappingBsusArrayOutputWithContext(context.Context) GetImagesImageBlockDeviceMappingBsusArrayOutput
}

type GetImagesImageBlockDeviceMappingBsusArray []GetImagesImageBlockDeviceMappingBsusInput

func (GetImagesImageBlockDeviceMappingBsusArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImagesImageBlockDeviceMappingBsus)(nil)).Elem()
}

func (i GetImagesImageBlockDeviceMappingBsusArray) ToGetImagesImageBlockDeviceMappingBsusArrayOutput() GetImagesImageBlockDeviceMappingBsusArrayOutput {
	return i.ToGetImagesImageBlockDeviceMappingBsusArrayOutputWithContext(context.Background())
}

func (i GetImagesImageBlockDeviceMappingBsusArray) ToGetImagesImageBlockDeviceMappingBsusArrayOutputWithContext(ctx context.Context) GetImagesImageBlockDeviceMappingBsusArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImagesImageBlockDeviceMappingBsusArrayOutput)
}

type GetImagesImageBlockDeviceMappingBsusOutput struct{ *pulumi.OutputState }

func (GetImagesImageBlockDeviceMappingBsusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImagesImageBlockDeviceMappingBsus)(nil)).Elem()
}

func (o GetImagesImageBlockDeviceMappingBsusOutput) ToGetImagesImageBlockDeviceMappingBsusOutput() GetImagesImageBlockDeviceMappingBsusOutput {
	return o
}

func (o GetImagesImageBlockDeviceMappingBsusOutput) ToGetImagesImageBlockDeviceMappingBsusOutputWithContext(ctx context.Context) GetImagesImageBlockDeviceMappingBsusOutput {
	return o
}

// By default or if set to true, the volume is deleted when terminating the VM. If false, the volume is not deleted when terminating the VM.
func (o GetImagesImageBlockDeviceMappingBsusOutput) DeleteOnVmDeletion() pulumi.BoolOutput {
	return o.ApplyT(func(v GetImagesImageBlockDeviceMappingBsus) bool { return v.DeleteOnVmDeletion }).(pulumi.BoolOutput)
}

// The number of I/O operations per second (IOPS). This parameter must be specified only if you create an `io1` volume. The maximum number of IOPS allowed for `io1` volumes is `13000` with a maximum performance ratio of 300 IOPS per gibibyte.
func (o GetImagesImageBlockDeviceMappingBsusOutput) Iops() pulumi.IntOutput {
	return o.ApplyT(func(v GetImagesImageBlockDeviceMappingBsus) int { return v.Iops }).(pulumi.IntOutput)
}

// The ID of the snapshot used to create the volume.
func (o GetImagesImageBlockDeviceMappingBsusOutput) SnapshotId() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImageBlockDeviceMappingBsus) string { return v.SnapshotId }).(pulumi.StringOutput)
}

// The size of the volume, in gibibytes (GiB).<br />
// If you specify a snapshot ID, the volume size must be at least equal to the snapshot size.<br />
// If you specify a snapshot ID but no volume size, the volume is created with a size similar to the snapshot one.
func (o GetImagesImageBlockDeviceMappingBsusOutput) VolumeSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetImagesImageBlockDeviceMappingBsus) int { return v.VolumeSize }).(pulumi.IntOutput)
}

// The type of the volume (`standard` \| `io1` \| `gp2`). If not specified in the request, a `standard` volume is created.<br />
// For more information about volume types, see [About Volumes > Volume Types and IOPS](https://docs.outscale.com/en/userguide/About-Volumes.html#_volume_types_and_iops).
func (o GetImagesImageBlockDeviceMappingBsusOutput) VolumeType() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImageBlockDeviceMappingBsus) string { return v.VolumeType }).(pulumi.StringOutput)
}

type GetImagesImageBlockDeviceMappingBsusArrayOutput struct{ *pulumi.OutputState }

func (GetImagesImageBlockDeviceMappingBsusArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImagesImageBlockDeviceMappingBsus)(nil)).Elem()
}

func (o GetImagesImageBlockDeviceMappingBsusArrayOutput) ToGetImagesImageBlockDeviceMappingBsusArrayOutput() GetImagesImageBlockDeviceMappingBsusArrayOutput {
	return o
}

func (o GetImagesImageBlockDeviceMappingBsusArrayOutput) ToGetImagesImageBlockDeviceMappingBsusArrayOutputWithContext(ctx context.Context) GetImagesImageBlockDeviceMappingBsusArrayOutput {
	return o
}

func (o GetImagesImageBlockDeviceMappingBsusArrayOutput) Index(i pulumi.IntInput) GetImagesImageBlockDeviceMappingBsusOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetImagesImageBlockDeviceMappingBsus {
		return vs[0].([]GetImagesImageBlockDeviceMappingBsus)[vs[1].(int)]
	}).(GetImagesImageBlockDeviceMappingBsusOutput)
}

type GetImagesImagePermissionsToLaunch struct {
	// The account ID of the owner of the OMI.
	AccountId string `pulumi:"accountId"`
	// A global permission for all accounts.<br />
	// (Request) Set this parameter to true to make the resource public (if the parent parameter is `Additions`) or to make the resource private (if the parent parameter is `Removals`).<br />
	// (Response) If true, the resource is public. If false, the resource is private.
	GlobalPermission bool `pulumi:"globalPermission"`
}

// GetImagesImagePermissionsToLaunchInput is an input type that accepts GetImagesImagePermissionsToLaunchArgs and GetImagesImagePermissionsToLaunchOutput values.
// You can construct a concrete instance of `GetImagesImagePermissionsToLaunchInput` via:
//
//	GetImagesImagePermissionsToLaunchArgs{...}
type GetImagesImagePermissionsToLaunchInput interface {
	pulumi.Input

	ToGetImagesImagePermissionsToLaunchOutput() GetImagesImagePermissionsToLaunchOutput
	ToGetImagesImagePermissionsToLaunchOutputWithContext(context.Context) GetImagesImagePermissionsToLaunchOutput
}

type GetImagesImagePermissionsToLaunchArgs struct {
	// The account ID of the owner of the OMI.
	AccountId pulumi.StringInput `pulumi:"accountId"`
	// A global permission for all accounts.<br />
	// (Request) Set this parameter to true to make the resource public (if the parent parameter is `Additions`) or to make the resource private (if the parent parameter is `Removals`).<br />
	// (Response) If true, the resource is public. If false, the resource is private.
	GlobalPermission pulumi.BoolInput `pulumi:"globalPermission"`
}

func (GetImagesImagePermissionsToLaunchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImagesImagePermissionsToLaunch)(nil)).Elem()
}

func (i GetImagesImagePermissionsToLaunchArgs) ToGetImagesImagePermissionsToLaunchOutput() GetImagesImagePermissionsToLaunchOutput {
	return i.ToGetImagesImagePermissionsToLaunchOutputWithContext(context.Background())
}

func (i GetImagesImagePermissionsToLaunchArgs) ToGetImagesImagePermissionsToLaunchOutputWithContext(ctx context.Context) GetImagesImagePermissionsToLaunchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImagesImagePermissionsToLaunchOutput)
}

// GetImagesImagePermissionsToLaunchArrayInput is an input type that accepts GetImagesImagePermissionsToLaunchArray and GetImagesImagePermissionsToLaunchArrayOutput values.
// You can construct a concrete instance of `GetImagesImagePermissionsToLaunchArrayInput` via:
//
//	GetImagesImagePermissionsToLaunchArray{ GetImagesImagePermissionsToLaunchArgs{...} }
type GetImagesImagePermissionsToLaunchArrayInput interface {
	pulumi.Input

	ToGetImagesImagePermissionsToLaunchArrayOutput() GetImagesImagePermissionsToLaunchArrayOutput
	ToGetImagesImagePermissionsToLaunchArrayOutputWithContext(context.Context) GetImagesImagePermissionsToLaunchArrayOutput
}

type GetImagesImagePermissionsToLaunchArray []GetImagesImagePermissionsToLaunchInput

func (GetImagesImagePermissionsToLaunchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImagesImagePermissionsToLaunch)(nil)).Elem()
}

func (i GetImagesImagePermissionsToLaunchArray) ToGetImagesImagePermissionsToLaunchArrayOutput() GetImagesImagePermissionsToLaunchArrayOutput {
	return i.ToGetImagesImagePermissionsToLaunchArrayOutputWithContext(context.Background())
}

func (i GetImagesImagePermissionsToLaunchArray) ToGetImagesImagePermissionsToLaunchArrayOutputWithContext(ctx context.Context) GetImagesImagePermissionsToLaunchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImagesImagePermissionsToLaunchArrayOutput)
}

type GetImagesImagePermissionsToLaunchOutput struct{ *pulumi.OutputState }

func (GetImagesImagePermissionsToLaunchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImagesImagePermissionsToLaunch)(nil)).Elem()
}

func (o GetImagesImagePermissionsToLaunchOutput) ToGetImagesImagePermissionsToLaunchOutput() GetImagesImagePermissionsToLaunchOutput {
	return o
}

func (o GetImagesImagePermissionsToLaunchOutput) ToGetImagesImagePermissionsToLaunchOutputWithContext(ctx context.Context) GetImagesImagePermissionsToLaunchOutput {
	return o
}

// The account ID of the owner of the OMI.
func (o GetImagesImagePermissionsToLaunchOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImagePermissionsToLaunch) string { return v.AccountId }).(pulumi.StringOutput)
}

// A global permission for all accounts.<br />
// (Request) Set this parameter to true to make the resource public (if the parent parameter is `Additions`) or to make the resource private (if the parent parameter is `Removals`).<br />
// (Response) If true, the resource is public. If false, the resource is private.
func (o GetImagesImagePermissionsToLaunchOutput) GlobalPermission() pulumi.BoolOutput {
	return o.ApplyT(func(v GetImagesImagePermissionsToLaunch) bool { return v.GlobalPermission }).(pulumi.BoolOutput)
}

type GetImagesImagePermissionsToLaunchArrayOutput struct{ *pulumi.OutputState }

func (GetImagesImagePermissionsToLaunchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImagesImagePermissionsToLaunch)(nil)).Elem()
}

func (o GetImagesImagePermissionsToLaunchArrayOutput) ToGetImagesImagePermissionsToLaunchArrayOutput() GetImagesImagePermissionsToLaunchArrayOutput {
	return o
}

func (o GetImagesImagePermissionsToLaunchArrayOutput) ToGetImagesImagePermissionsToLaunchArrayOutputWithContext(ctx context.Context) GetImagesImagePermissionsToLaunchArrayOutput {
	return o
}

func (o GetImagesImagePermissionsToLaunchArrayOutput) Index(i pulumi.IntInput) GetImagesImagePermissionsToLaunchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetImagesImagePermissionsToLaunch {
		return vs[0].([]GetImagesImagePermissionsToLaunch)[vs[1].(int)]
	}).(GetImagesImagePermissionsToLaunchOutput)
}

type GetImagesImageStateComment struct {
	// The code of the change of state.
	StateCode string `pulumi:"stateCode"`
	// A message explaining the change of state.
	StateMessage string `pulumi:"stateMessage"`
}

// GetImagesImageStateCommentInput is an input type that accepts GetImagesImageStateCommentArgs and GetImagesImageStateCommentOutput values.
// You can construct a concrete instance of `GetImagesImageStateCommentInput` via:
//
//	GetImagesImageStateCommentArgs{...}
type GetImagesImageStateCommentInput interface {
	pulumi.Input

	ToGetImagesImageStateCommentOutput() GetImagesImageStateCommentOutput
	ToGetImagesImageStateCommentOutputWithContext(context.Context) GetImagesImageStateCommentOutput
}

type GetImagesImageStateCommentArgs struct {
	// The code of the change of state.
	StateCode pulumi.StringInput `pulumi:"stateCode"`
	// A message explaining the change of state.
	StateMessage pulumi.StringInput `pulumi:"stateMessage"`
}

func (GetImagesImageStateCommentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImagesImageStateComment)(nil)).Elem()
}

func (i GetImagesImageStateCommentArgs) ToGetImagesImageStateCommentOutput() GetImagesImageStateCommentOutput {
	return i.ToGetImagesImageStateCommentOutputWithContext(context.Background())
}

func (i GetImagesImageStateCommentArgs) ToGetImagesImageStateCommentOutputWithContext(ctx context.Context) GetImagesImageStateCommentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImagesImageStateCommentOutput)
}

// GetImagesImageStateCommentArrayInput is an input type that accepts GetImagesImageStateCommentArray and GetImagesImageStateCommentArrayOutput values.
// You can construct a concrete instance of `GetImagesImageStateCommentArrayInput` via:
//
//	GetImagesImageStateCommentArray{ GetImagesImageStateCommentArgs{...} }
type GetImagesImageStateCommentArrayInput interface {
	pulumi.Input

	ToGetImagesImageStateCommentArrayOutput() GetImagesImageStateCommentArrayOutput
	ToGetImagesImageStateCommentArrayOutputWithContext(context.Context) GetImagesImageStateCommentArrayOutput
}

type GetImagesImageStateCommentArray []GetImagesImageStateCommentInput

func (GetImagesImageStateCommentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImagesImageStateComment)(nil)).Elem()
}

func (i GetImagesImageStateCommentArray) ToGetImagesImageStateCommentArrayOutput() GetImagesImageStateCommentArrayOutput {
	return i.ToGetImagesImageStateCommentArrayOutputWithContext(context.Background())
}

func (i GetImagesImageStateCommentArray) ToGetImagesImageStateCommentArrayOutputWithContext(ctx context.Context) GetImagesImageStateCommentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImagesImageStateCommentArrayOutput)
}

type GetImagesImageStateCommentOutput struct{ *pulumi.OutputState }

func (GetImagesImageStateCommentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImagesImageStateComment)(nil)).Elem()
}

func (o GetImagesImageStateCommentOutput) ToGetImagesImageStateCommentOutput() GetImagesImageStateCommentOutput {
	return o
}

func (o GetImagesImageStateCommentOutput) ToGetImagesImageStateCommentOutputWithContext(ctx context.Context) GetImagesImageStateCommentOutput {
	return o
}

// The code of the change of state.
func (o GetImagesImageStateCommentOutput) StateCode() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImageStateComment) string { return v.StateCode }).(pulumi.StringOutput)
}

// A message explaining the change of state.
func (o GetImagesImageStateCommentOutput) StateMessage() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImageStateComment) string { return v.StateMessage }).(pulumi.StringOutput)
}

type GetImagesImageStateCommentArrayOutput struct{ *pulumi.OutputState }

func (GetImagesImageStateCommentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImagesImageStateComment)(nil)).Elem()
}

func (o GetImagesImageStateCommentArrayOutput) ToGetImagesImageStateCommentArrayOutput() GetImagesImageStateCommentArrayOutput {
	return o
}

func (o GetImagesImageStateCommentArrayOutput) ToGetImagesImageStateCommentArrayOutputWithContext(ctx context.Context) GetImagesImageStateCommentArrayOutput {
	return o
}

func (o GetImagesImageStateCommentArrayOutput) Index(i pulumi.IntInput) GetImagesImageStateCommentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetImagesImageStateComment {
		return vs[0].([]GetImagesImageStateComment)[vs[1].(int)]
	}).(GetImagesImageStateCommentOutput)
}

type GetImagesImageTag struct {
	// The key of the tag, with a minimum of 1 character.
	Key string `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value string `pulumi:"value"`
}

// GetImagesImageTagInput is an input type that accepts GetImagesImageTagArgs and GetImagesImageTagOutput values.
// You can construct a concrete instance of `GetImagesImageTagInput` via:
//
//	GetImagesImageTagArgs{...}
type GetImagesImageTagInput interface {
	pulumi.Input

	ToGetImagesImageTagOutput() GetImagesImageTagOutput
	ToGetImagesImageTagOutputWithContext(context.Context) GetImagesImageTagOutput
}

type GetImagesImageTagArgs struct {
	// The key of the tag, with a minimum of 1 character.
	Key pulumi.StringInput `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetImagesImageTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImagesImageTag)(nil)).Elem()
}

func (i GetImagesImageTagArgs) ToGetImagesImageTagOutput() GetImagesImageTagOutput {
	return i.ToGetImagesImageTagOutputWithContext(context.Background())
}

func (i GetImagesImageTagArgs) ToGetImagesImageTagOutputWithContext(ctx context.Context) GetImagesImageTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImagesImageTagOutput)
}

// GetImagesImageTagArrayInput is an input type that accepts GetImagesImageTagArray and GetImagesImageTagArrayOutput values.
// You can construct a concrete instance of `GetImagesImageTagArrayInput` via:
//
//	GetImagesImageTagArray{ GetImagesImageTagArgs{...} }
type GetImagesImageTagArrayInput interface {
	pulumi.Input

	ToGetImagesImageTagArrayOutput() GetImagesImageTagArrayOutput
	ToGetImagesImageTagArrayOutputWithContext(context.Context) GetImagesImageTagArrayOutput
}

type GetImagesImageTagArray []GetImagesImageTagInput

func (GetImagesImageTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImagesImageTag)(nil)).Elem()
}

func (i GetImagesImageTagArray) ToGetImagesImageTagArrayOutput() GetImagesImageTagArrayOutput {
	return i.ToGetImagesImageTagArrayOutputWithContext(context.Background())
}

func (i GetImagesImageTagArray) ToGetImagesImageTagArrayOutputWithContext(ctx context.Context) GetImagesImageTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImagesImageTagArrayOutput)
}

type GetImagesImageTagOutput struct{ *pulumi.OutputState }

func (GetImagesImageTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImagesImageTag)(nil)).Elem()
}

func (o GetImagesImageTagOutput) ToGetImagesImageTagOutput() GetImagesImageTagOutput {
	return o
}

func (o GetImagesImageTagOutput) ToGetImagesImageTagOutputWithContext(ctx context.Context) GetImagesImageTagOutput {
	return o
}

// The key of the tag, with a minimum of 1 character.
func (o GetImagesImageTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImageTag) string { return v.Key }).(pulumi.StringOutput)
}

// The value of the tag, between 0 and 255 characters.
func (o GetImagesImageTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImageTag) string { return v.Value }).(pulumi.StringOutput)
}

type GetImagesImageTagArrayOutput struct{ *pulumi.OutputState }

func (GetImagesImageTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImagesImageTag)(nil)).Elem()
}

func (o GetImagesImageTagArrayOutput) ToGetImagesImageTagArrayOutput() GetImagesImageTagArrayOutput {
	return o
}

func (o GetImagesImageTagArrayOutput) ToGetImagesImageTagArrayOutputWithContext(ctx context.Context) GetImagesImageTagArrayOutput {
	return o
}

func (o GetImagesImageTagArrayOutput) Index(i pulumi.IntInput) GetImagesImageTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetImagesImageTag {
		return vs[0].([]GetImagesImageTag)[vs[1].(int)]
	}).(GetImagesImageTagOutput)
}

type GetInternetServiceFilter struct {
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// GetInternetServiceFilterInput is an input type that accepts GetInternetServiceFilterArgs and GetInternetServiceFilterOutput values.
// You can construct a concrete instance of `GetInternetServiceFilterInput` via:
//
//	GetInternetServiceFilterArgs{...}
type GetInternetServiceFilterInput interface {
	pulumi.Input

	ToGetInternetServiceFilterOutput() GetInternetServiceFilterOutput
	ToGetInternetServiceFilterOutputWithContext(context.Context) GetInternetServiceFilterOutput
}

type GetInternetServiceFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetInternetServiceFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInternetServiceFilter)(nil)).Elem()
}

func (i GetInternetServiceFilterArgs) ToGetInternetServiceFilterOutput() GetInternetServiceFilterOutput {
	return i.ToGetInternetServiceFilterOutputWithContext(context.Background())
}

func (i GetInternetServiceFilterArgs) ToGetInternetServiceFilterOutputWithContext(ctx context.Context) GetInternetServiceFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInternetServiceFilterOutput)
}

// GetInternetServiceFilterArrayInput is an input type that accepts GetInternetServiceFilterArray and GetInternetServiceFilterArrayOutput values.
// You can construct a concrete instance of `GetInternetServiceFilterArrayInput` via:
//
//	GetInternetServiceFilterArray{ GetInternetServiceFilterArgs{...} }
type GetInternetServiceFilterArrayInput interface {
	pulumi.Input

	ToGetInternetServiceFilterArrayOutput() GetInternetServiceFilterArrayOutput
	ToGetInternetServiceFilterArrayOutputWithContext(context.Context) GetInternetServiceFilterArrayOutput
}

type GetInternetServiceFilterArray []GetInternetServiceFilterInput

func (GetInternetServiceFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInternetServiceFilter)(nil)).Elem()
}

func (i GetInternetServiceFilterArray) ToGetInternetServiceFilterArrayOutput() GetInternetServiceFilterArrayOutput {
	return i.ToGetInternetServiceFilterArrayOutputWithContext(context.Background())
}

func (i GetInternetServiceFilterArray) ToGetInternetServiceFilterArrayOutputWithContext(ctx context.Context) GetInternetServiceFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInternetServiceFilterArrayOutput)
}

type GetInternetServiceFilterOutput struct{ *pulumi.OutputState }

func (GetInternetServiceFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInternetServiceFilter)(nil)).Elem()
}

func (o GetInternetServiceFilterOutput) ToGetInternetServiceFilterOutput() GetInternetServiceFilterOutput {
	return o
}

func (o GetInternetServiceFilterOutput) ToGetInternetServiceFilterOutputWithContext(ctx context.Context) GetInternetServiceFilterOutput {
	return o
}

func (o GetInternetServiceFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetInternetServiceFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetInternetServiceFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetInternetServiceFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetInternetServiceFilterArrayOutput struct{ *pulumi.OutputState }

func (GetInternetServiceFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInternetServiceFilter)(nil)).Elem()
}

func (o GetInternetServiceFilterArrayOutput) ToGetInternetServiceFilterArrayOutput() GetInternetServiceFilterArrayOutput {
	return o
}

func (o GetInternetServiceFilterArrayOutput) ToGetInternetServiceFilterArrayOutputWithContext(ctx context.Context) GetInternetServiceFilterArrayOutput {
	return o
}

func (o GetInternetServiceFilterArrayOutput) Index(i pulumi.IntInput) GetInternetServiceFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInternetServiceFilter {
		return vs[0].([]GetInternetServiceFilter)[vs[1].(int)]
	}).(GetInternetServiceFilterOutput)
}

type GetInternetServiceTag struct {
	// The key of the tag, with a minimum of 1 character.
	Key string `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value string `pulumi:"value"`
}

// GetInternetServiceTagInput is an input type that accepts GetInternetServiceTagArgs and GetInternetServiceTagOutput values.
// You can construct a concrete instance of `GetInternetServiceTagInput` via:
//
//	GetInternetServiceTagArgs{...}
type GetInternetServiceTagInput interface {
	pulumi.Input

	ToGetInternetServiceTagOutput() GetInternetServiceTagOutput
	ToGetInternetServiceTagOutputWithContext(context.Context) GetInternetServiceTagOutput
}

type GetInternetServiceTagArgs struct {
	// The key of the tag, with a minimum of 1 character.
	Key pulumi.StringInput `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetInternetServiceTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInternetServiceTag)(nil)).Elem()
}

func (i GetInternetServiceTagArgs) ToGetInternetServiceTagOutput() GetInternetServiceTagOutput {
	return i.ToGetInternetServiceTagOutputWithContext(context.Background())
}

func (i GetInternetServiceTagArgs) ToGetInternetServiceTagOutputWithContext(ctx context.Context) GetInternetServiceTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInternetServiceTagOutput)
}

// GetInternetServiceTagArrayInput is an input type that accepts GetInternetServiceTagArray and GetInternetServiceTagArrayOutput values.
// You can construct a concrete instance of `GetInternetServiceTagArrayInput` via:
//
//	GetInternetServiceTagArray{ GetInternetServiceTagArgs{...} }
type GetInternetServiceTagArrayInput interface {
	pulumi.Input

	ToGetInternetServiceTagArrayOutput() GetInternetServiceTagArrayOutput
	ToGetInternetServiceTagArrayOutputWithContext(context.Context) GetInternetServiceTagArrayOutput
}

type GetInternetServiceTagArray []GetInternetServiceTagInput

func (GetInternetServiceTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInternetServiceTag)(nil)).Elem()
}

func (i GetInternetServiceTagArray) ToGetInternetServiceTagArrayOutput() GetInternetServiceTagArrayOutput {
	return i.ToGetInternetServiceTagArrayOutputWithContext(context.Background())
}

func (i GetInternetServiceTagArray) ToGetInternetServiceTagArrayOutputWithContext(ctx context.Context) GetInternetServiceTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInternetServiceTagArrayOutput)
}

type GetInternetServiceTagOutput struct{ *pulumi.OutputState }

func (GetInternetServiceTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInternetServiceTag)(nil)).Elem()
}

func (o GetInternetServiceTagOutput) ToGetInternetServiceTagOutput() GetInternetServiceTagOutput {
	return o
}

func (o GetInternetServiceTagOutput) ToGetInternetServiceTagOutputWithContext(ctx context.Context) GetInternetServiceTagOutput {
	return o
}

// The key of the tag, with a minimum of 1 character.
func (o GetInternetServiceTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetInternetServiceTag) string { return v.Key }).(pulumi.StringOutput)
}

// The value of the tag, between 0 and 255 characters.
func (o GetInternetServiceTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetInternetServiceTag) string { return v.Value }).(pulumi.StringOutput)
}

type GetInternetServiceTagArrayOutput struct{ *pulumi.OutputState }

func (GetInternetServiceTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInternetServiceTag)(nil)).Elem()
}

func (o GetInternetServiceTagArrayOutput) ToGetInternetServiceTagArrayOutput() GetInternetServiceTagArrayOutput {
	return o
}

func (o GetInternetServiceTagArrayOutput) ToGetInternetServiceTagArrayOutputWithContext(ctx context.Context) GetInternetServiceTagArrayOutput {
	return o
}

func (o GetInternetServiceTagArrayOutput) Index(i pulumi.IntInput) GetInternetServiceTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInternetServiceTag {
		return vs[0].([]GetInternetServiceTag)[vs[1].(int)]
	}).(GetInternetServiceTagOutput)
}

type GetInternetServicesFilter struct {
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// GetInternetServicesFilterInput is an input type that accepts GetInternetServicesFilterArgs and GetInternetServicesFilterOutput values.
// You can construct a concrete instance of `GetInternetServicesFilterInput` via:
//
//	GetInternetServicesFilterArgs{...}
type GetInternetServicesFilterInput interface {
	pulumi.Input

	ToGetInternetServicesFilterOutput() GetInternetServicesFilterOutput
	ToGetInternetServicesFilterOutputWithContext(context.Context) GetInternetServicesFilterOutput
}

type GetInternetServicesFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetInternetServicesFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInternetServicesFilter)(nil)).Elem()
}

func (i GetInternetServicesFilterArgs) ToGetInternetServicesFilterOutput() GetInternetServicesFilterOutput {
	return i.ToGetInternetServicesFilterOutputWithContext(context.Background())
}

func (i GetInternetServicesFilterArgs) ToGetInternetServicesFilterOutputWithContext(ctx context.Context) GetInternetServicesFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInternetServicesFilterOutput)
}

// GetInternetServicesFilterArrayInput is an input type that accepts GetInternetServicesFilterArray and GetInternetServicesFilterArrayOutput values.
// You can construct a concrete instance of `GetInternetServicesFilterArrayInput` via:
//
//	GetInternetServicesFilterArray{ GetInternetServicesFilterArgs{...} }
type GetInternetServicesFilterArrayInput interface {
	pulumi.Input

	ToGetInternetServicesFilterArrayOutput() GetInternetServicesFilterArrayOutput
	ToGetInternetServicesFilterArrayOutputWithContext(context.Context) GetInternetServicesFilterArrayOutput
}

type GetInternetServicesFilterArray []GetInternetServicesFilterInput

func (GetInternetServicesFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInternetServicesFilter)(nil)).Elem()
}

func (i GetInternetServicesFilterArray) ToGetInternetServicesFilterArrayOutput() GetInternetServicesFilterArrayOutput {
	return i.ToGetInternetServicesFilterArrayOutputWithContext(context.Background())
}

func (i GetInternetServicesFilterArray) ToGetInternetServicesFilterArrayOutputWithContext(ctx context.Context) GetInternetServicesFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInternetServicesFilterArrayOutput)
}

type GetInternetServicesFilterOutput struct{ *pulumi.OutputState }

func (GetInternetServicesFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInternetServicesFilter)(nil)).Elem()
}

func (o GetInternetServicesFilterOutput) ToGetInternetServicesFilterOutput() GetInternetServicesFilterOutput {
	return o
}

func (o GetInternetServicesFilterOutput) ToGetInternetServicesFilterOutputWithContext(ctx context.Context) GetInternetServicesFilterOutput {
	return o
}

func (o GetInternetServicesFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetInternetServicesFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetInternetServicesFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetInternetServicesFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetInternetServicesFilterArrayOutput struct{ *pulumi.OutputState }

func (GetInternetServicesFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInternetServicesFilter)(nil)).Elem()
}

func (o GetInternetServicesFilterArrayOutput) ToGetInternetServicesFilterArrayOutput() GetInternetServicesFilterArrayOutput {
	return o
}

func (o GetInternetServicesFilterArrayOutput) ToGetInternetServicesFilterArrayOutputWithContext(ctx context.Context) GetInternetServicesFilterArrayOutput {
	return o
}

func (o GetInternetServicesFilterArrayOutput) Index(i pulumi.IntInput) GetInternetServicesFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInternetServicesFilter {
		return vs[0].([]GetInternetServicesFilter)[vs[1].(int)]
	}).(GetInternetServicesFilterOutput)
}

type GetInternetServicesInternetService struct {
	// The ID of the internet service.
	InternetServiceId string `pulumi:"internetServiceId"`
	// The ID of the Net attached to the internet service.
	NetId string `pulumi:"netId"`
	// The state of the attachment of the internet service to the Net (always `available`).
	State string `pulumi:"state"`
	// One or more tags associated with the internet service.
	Tags []GetInternetServicesInternetServiceTag `pulumi:"tags"`
}

// GetInternetServicesInternetServiceInput is an input type that accepts GetInternetServicesInternetServiceArgs and GetInternetServicesInternetServiceOutput values.
// You can construct a concrete instance of `GetInternetServicesInternetServiceInput` via:
//
//	GetInternetServicesInternetServiceArgs{...}
type GetInternetServicesInternetServiceInput interface {
	pulumi.Input

	ToGetInternetServicesInternetServiceOutput() GetInternetServicesInternetServiceOutput
	ToGetInternetServicesInternetServiceOutputWithContext(context.Context) GetInternetServicesInternetServiceOutput
}

type GetInternetServicesInternetServiceArgs struct {
	// The ID of the internet service.
	InternetServiceId pulumi.StringInput `pulumi:"internetServiceId"`
	// The ID of the Net attached to the internet service.
	NetId pulumi.StringInput `pulumi:"netId"`
	// The state of the attachment of the internet service to the Net (always `available`).
	State pulumi.StringInput `pulumi:"state"`
	// One or more tags associated with the internet service.
	Tags GetInternetServicesInternetServiceTagArrayInput `pulumi:"tags"`
}

func (GetInternetServicesInternetServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInternetServicesInternetService)(nil)).Elem()
}

func (i GetInternetServicesInternetServiceArgs) ToGetInternetServicesInternetServiceOutput() GetInternetServicesInternetServiceOutput {
	return i.ToGetInternetServicesInternetServiceOutputWithContext(context.Background())
}

func (i GetInternetServicesInternetServiceArgs) ToGetInternetServicesInternetServiceOutputWithContext(ctx context.Context) GetInternetServicesInternetServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInternetServicesInternetServiceOutput)
}

// GetInternetServicesInternetServiceArrayInput is an input type that accepts GetInternetServicesInternetServiceArray and GetInternetServicesInternetServiceArrayOutput values.
// You can construct a concrete instance of `GetInternetServicesInternetServiceArrayInput` via:
//
//	GetInternetServicesInternetServiceArray{ GetInternetServicesInternetServiceArgs{...} }
type GetInternetServicesInternetServiceArrayInput interface {
	pulumi.Input

	ToGetInternetServicesInternetServiceArrayOutput() GetInternetServicesInternetServiceArrayOutput
	ToGetInternetServicesInternetServiceArrayOutputWithContext(context.Context) GetInternetServicesInternetServiceArrayOutput
}

type GetInternetServicesInternetServiceArray []GetInternetServicesInternetServiceInput

func (GetInternetServicesInternetServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInternetServicesInternetService)(nil)).Elem()
}

func (i GetInternetServicesInternetServiceArray) ToGetInternetServicesInternetServiceArrayOutput() GetInternetServicesInternetServiceArrayOutput {
	return i.ToGetInternetServicesInternetServiceArrayOutputWithContext(context.Background())
}

func (i GetInternetServicesInternetServiceArray) ToGetInternetServicesInternetServiceArrayOutputWithContext(ctx context.Context) GetInternetServicesInternetServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInternetServicesInternetServiceArrayOutput)
}

type GetInternetServicesInternetServiceOutput struct{ *pulumi.OutputState }

func (GetInternetServicesInternetServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInternetServicesInternetService)(nil)).Elem()
}

func (o GetInternetServicesInternetServiceOutput) ToGetInternetServicesInternetServiceOutput() GetInternetServicesInternetServiceOutput {
	return o
}

func (o GetInternetServicesInternetServiceOutput) ToGetInternetServicesInternetServiceOutputWithContext(ctx context.Context) GetInternetServicesInternetServiceOutput {
	return o
}

// The ID of the internet service.
func (o GetInternetServicesInternetServiceOutput) InternetServiceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInternetServicesInternetService) string { return v.InternetServiceId }).(pulumi.StringOutput)
}

// The ID of the Net attached to the internet service.
func (o GetInternetServicesInternetServiceOutput) NetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInternetServicesInternetService) string { return v.NetId }).(pulumi.StringOutput)
}

// The state of the attachment of the internet service to the Net (always `available`).
func (o GetInternetServicesInternetServiceOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetInternetServicesInternetService) string { return v.State }).(pulumi.StringOutput)
}

// One or more tags associated with the internet service.
func (o GetInternetServicesInternetServiceOutput) Tags() GetInternetServicesInternetServiceTagArrayOutput {
	return o.ApplyT(func(v GetInternetServicesInternetService) []GetInternetServicesInternetServiceTag { return v.Tags }).(GetInternetServicesInternetServiceTagArrayOutput)
}

type GetInternetServicesInternetServiceArrayOutput struct{ *pulumi.OutputState }

func (GetInternetServicesInternetServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInternetServicesInternetService)(nil)).Elem()
}

func (o GetInternetServicesInternetServiceArrayOutput) ToGetInternetServicesInternetServiceArrayOutput() GetInternetServicesInternetServiceArrayOutput {
	return o
}

func (o GetInternetServicesInternetServiceArrayOutput) ToGetInternetServicesInternetServiceArrayOutputWithContext(ctx context.Context) GetInternetServicesInternetServiceArrayOutput {
	return o
}

func (o GetInternetServicesInternetServiceArrayOutput) Index(i pulumi.IntInput) GetInternetServicesInternetServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInternetServicesInternetService {
		return vs[0].([]GetInternetServicesInternetService)[vs[1].(int)]
	}).(GetInternetServicesInternetServiceOutput)
}

type GetInternetServicesInternetServiceTag struct {
	// The key of the tag, with a minimum of 1 character.
	Key string `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value string `pulumi:"value"`
}

// GetInternetServicesInternetServiceTagInput is an input type that accepts GetInternetServicesInternetServiceTagArgs and GetInternetServicesInternetServiceTagOutput values.
// You can construct a concrete instance of `GetInternetServicesInternetServiceTagInput` via:
//
//	GetInternetServicesInternetServiceTagArgs{...}
type GetInternetServicesInternetServiceTagInput interface {
	pulumi.Input

	ToGetInternetServicesInternetServiceTagOutput() GetInternetServicesInternetServiceTagOutput
	ToGetInternetServicesInternetServiceTagOutputWithContext(context.Context) GetInternetServicesInternetServiceTagOutput
}

type GetInternetServicesInternetServiceTagArgs struct {
	// The key of the tag, with a minimum of 1 character.
	Key pulumi.StringInput `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetInternetServicesInternetServiceTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInternetServicesInternetServiceTag)(nil)).Elem()
}

func (i GetInternetServicesInternetServiceTagArgs) ToGetInternetServicesInternetServiceTagOutput() GetInternetServicesInternetServiceTagOutput {
	return i.ToGetInternetServicesInternetServiceTagOutputWithContext(context.Background())
}

func (i GetInternetServicesInternetServiceTagArgs) ToGetInternetServicesInternetServiceTagOutputWithContext(ctx context.Context) GetInternetServicesInternetServiceTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInternetServicesInternetServiceTagOutput)
}

// GetInternetServicesInternetServiceTagArrayInput is an input type that accepts GetInternetServicesInternetServiceTagArray and GetInternetServicesInternetServiceTagArrayOutput values.
// You can construct a concrete instance of `GetInternetServicesInternetServiceTagArrayInput` via:
//
//	GetInternetServicesInternetServiceTagArray{ GetInternetServicesInternetServiceTagArgs{...} }
type GetInternetServicesInternetServiceTagArrayInput interface {
	pulumi.Input

	ToGetInternetServicesInternetServiceTagArrayOutput() GetInternetServicesInternetServiceTagArrayOutput
	ToGetInternetServicesInternetServiceTagArrayOutputWithContext(context.Context) GetInternetServicesInternetServiceTagArrayOutput
}

type GetInternetServicesInternetServiceTagArray []GetInternetServicesInternetServiceTagInput

func (GetInternetServicesInternetServiceTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInternetServicesInternetServiceTag)(nil)).Elem()
}

func (i GetInternetServicesInternetServiceTagArray) ToGetInternetServicesInternetServiceTagArrayOutput() GetInternetServicesInternetServiceTagArrayOutput {
	return i.ToGetInternetServicesInternetServiceTagArrayOutputWithContext(context.Background())
}

func (i GetInternetServicesInternetServiceTagArray) ToGetInternetServicesInternetServiceTagArrayOutputWithContext(ctx context.Context) GetInternetServicesInternetServiceTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInternetServicesInternetServiceTagArrayOutput)
}

type GetInternetServicesInternetServiceTagOutput struct{ *pulumi.OutputState }

func (GetInternetServicesInternetServiceTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInternetServicesInternetServiceTag)(nil)).Elem()
}

func (o GetInternetServicesInternetServiceTagOutput) ToGetInternetServicesInternetServiceTagOutput() GetInternetServicesInternetServiceTagOutput {
	return o
}

func (o GetInternetServicesInternetServiceTagOutput) ToGetInternetServicesInternetServiceTagOutputWithContext(ctx context.Context) GetInternetServicesInternetServiceTagOutput {
	return o
}

// The key of the tag, with a minimum of 1 character.
func (o GetInternetServicesInternetServiceTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetInternetServicesInternetServiceTag) string { return v.Key }).(pulumi.StringOutput)
}

// The value of the tag, between 0 and 255 characters.
func (o GetInternetServicesInternetServiceTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetInternetServicesInternetServiceTag) string { return v.Value }).(pulumi.StringOutput)
}

type GetInternetServicesInternetServiceTagArrayOutput struct{ *pulumi.OutputState }

func (GetInternetServicesInternetServiceTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInternetServicesInternetServiceTag)(nil)).Elem()
}

func (o GetInternetServicesInternetServiceTagArrayOutput) ToGetInternetServicesInternetServiceTagArrayOutput() GetInternetServicesInternetServiceTagArrayOutput {
	return o
}

func (o GetInternetServicesInternetServiceTagArrayOutput) ToGetInternetServicesInternetServiceTagArrayOutputWithContext(ctx context.Context) GetInternetServicesInternetServiceTagArrayOutput {
	return o
}

func (o GetInternetServicesInternetServiceTagArrayOutput) Index(i pulumi.IntInput) GetInternetServicesInternetServiceTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInternetServicesInternetServiceTag {
		return vs[0].([]GetInternetServicesInternetServiceTag)[vs[1].(int)]
	}).(GetInternetServicesInternetServiceTagOutput)
}

type GetKeypairFilter struct {
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// GetKeypairFilterInput is an input type that accepts GetKeypairFilterArgs and GetKeypairFilterOutput values.
// You can construct a concrete instance of `GetKeypairFilterInput` via:
//
//	GetKeypairFilterArgs{...}
type GetKeypairFilterInput interface {
	pulumi.Input

	ToGetKeypairFilterOutput() GetKeypairFilterOutput
	ToGetKeypairFilterOutputWithContext(context.Context) GetKeypairFilterOutput
}

type GetKeypairFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetKeypairFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKeypairFilter)(nil)).Elem()
}

func (i GetKeypairFilterArgs) ToGetKeypairFilterOutput() GetKeypairFilterOutput {
	return i.ToGetKeypairFilterOutputWithContext(context.Background())
}

func (i GetKeypairFilterArgs) ToGetKeypairFilterOutputWithContext(ctx context.Context) GetKeypairFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKeypairFilterOutput)
}

// GetKeypairFilterArrayInput is an input type that accepts GetKeypairFilterArray and GetKeypairFilterArrayOutput values.
// You can construct a concrete instance of `GetKeypairFilterArrayInput` via:
//
//	GetKeypairFilterArray{ GetKeypairFilterArgs{...} }
type GetKeypairFilterArrayInput interface {
	pulumi.Input

	ToGetKeypairFilterArrayOutput() GetKeypairFilterArrayOutput
	ToGetKeypairFilterArrayOutputWithContext(context.Context) GetKeypairFilterArrayOutput
}

type GetKeypairFilterArray []GetKeypairFilterInput

func (GetKeypairFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKeypairFilter)(nil)).Elem()
}

func (i GetKeypairFilterArray) ToGetKeypairFilterArrayOutput() GetKeypairFilterArrayOutput {
	return i.ToGetKeypairFilterArrayOutputWithContext(context.Background())
}

func (i GetKeypairFilterArray) ToGetKeypairFilterArrayOutputWithContext(ctx context.Context) GetKeypairFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKeypairFilterArrayOutput)
}

type GetKeypairFilterOutput struct{ *pulumi.OutputState }

func (GetKeypairFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKeypairFilter)(nil)).Elem()
}

func (o GetKeypairFilterOutput) ToGetKeypairFilterOutput() GetKeypairFilterOutput {
	return o
}

func (o GetKeypairFilterOutput) ToGetKeypairFilterOutputWithContext(ctx context.Context) GetKeypairFilterOutput {
	return o
}

func (o GetKeypairFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeypairFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetKeypairFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetKeypairFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetKeypairFilterArrayOutput struct{ *pulumi.OutputState }

func (GetKeypairFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKeypairFilter)(nil)).Elem()
}

func (o GetKeypairFilterArrayOutput) ToGetKeypairFilterArrayOutput() GetKeypairFilterArrayOutput {
	return o
}

func (o GetKeypairFilterArrayOutput) ToGetKeypairFilterArrayOutputWithContext(ctx context.Context) GetKeypairFilterArrayOutput {
	return o
}

func (o GetKeypairFilterArrayOutput) Index(i pulumi.IntInput) GetKeypairFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKeypairFilter {
		return vs[0].([]GetKeypairFilter)[vs[1].(int)]
	}).(GetKeypairFilterOutput)
}

type GetKeypairTag struct {
	// The key of the tag, with a minimum of 1 character.
	Key string `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value string `pulumi:"value"`
}

// GetKeypairTagInput is an input type that accepts GetKeypairTagArgs and GetKeypairTagOutput values.
// You can construct a concrete instance of `GetKeypairTagInput` via:
//
//	GetKeypairTagArgs{...}
type GetKeypairTagInput interface {
	pulumi.Input

	ToGetKeypairTagOutput() GetKeypairTagOutput
	ToGetKeypairTagOutputWithContext(context.Context) GetKeypairTagOutput
}

type GetKeypairTagArgs struct {
	// The key of the tag, with a minimum of 1 character.
	Key pulumi.StringInput `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetKeypairTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKeypairTag)(nil)).Elem()
}

func (i GetKeypairTagArgs) ToGetKeypairTagOutput() GetKeypairTagOutput {
	return i.ToGetKeypairTagOutputWithContext(context.Background())
}

func (i GetKeypairTagArgs) ToGetKeypairTagOutputWithContext(ctx context.Context) GetKeypairTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKeypairTagOutput)
}

// GetKeypairTagArrayInput is an input type that accepts GetKeypairTagArray and GetKeypairTagArrayOutput values.
// You can construct a concrete instance of `GetKeypairTagArrayInput` via:
//
//	GetKeypairTagArray{ GetKeypairTagArgs{...} }
type GetKeypairTagArrayInput interface {
	pulumi.Input

	ToGetKeypairTagArrayOutput() GetKeypairTagArrayOutput
	ToGetKeypairTagArrayOutputWithContext(context.Context) GetKeypairTagArrayOutput
}

type GetKeypairTagArray []GetKeypairTagInput

func (GetKeypairTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKeypairTag)(nil)).Elem()
}

func (i GetKeypairTagArray) ToGetKeypairTagArrayOutput() GetKeypairTagArrayOutput {
	return i.ToGetKeypairTagArrayOutputWithContext(context.Background())
}

func (i GetKeypairTagArray) ToGetKeypairTagArrayOutputWithContext(ctx context.Context) GetKeypairTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKeypairTagArrayOutput)
}

type GetKeypairTagOutput struct{ *pulumi.OutputState }

func (GetKeypairTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKeypairTag)(nil)).Elem()
}

func (o GetKeypairTagOutput) ToGetKeypairTagOutput() GetKeypairTagOutput {
	return o
}

func (o GetKeypairTagOutput) ToGetKeypairTagOutputWithContext(ctx context.Context) GetKeypairTagOutput {
	return o
}

// The key of the tag, with a minimum of 1 character.
func (o GetKeypairTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeypairTag) string { return v.Key }).(pulumi.StringOutput)
}

// The value of the tag, between 0 and 255 characters.
func (o GetKeypairTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeypairTag) string { return v.Value }).(pulumi.StringOutput)
}

type GetKeypairTagArrayOutput struct{ *pulumi.OutputState }

func (GetKeypairTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKeypairTag)(nil)).Elem()
}

func (o GetKeypairTagArrayOutput) ToGetKeypairTagArrayOutput() GetKeypairTagArrayOutput {
	return o
}

func (o GetKeypairTagArrayOutput) ToGetKeypairTagArrayOutputWithContext(ctx context.Context) GetKeypairTagArrayOutput {
	return o
}

func (o GetKeypairTagArrayOutput) Index(i pulumi.IntInput) GetKeypairTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKeypairTag {
		return vs[0].([]GetKeypairTag)[vs[1].(int)]
	}).(GetKeypairTagOutput)
}

type GetKeypairsFilter struct {
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// GetKeypairsFilterInput is an input type that accepts GetKeypairsFilterArgs and GetKeypairsFilterOutput values.
// You can construct a concrete instance of `GetKeypairsFilterInput` via:
//
//	GetKeypairsFilterArgs{...}
type GetKeypairsFilterInput interface {
	pulumi.Input

	ToGetKeypairsFilterOutput() GetKeypairsFilterOutput
	ToGetKeypairsFilterOutputWithContext(context.Context) GetKeypairsFilterOutput
}

type GetKeypairsFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetKeypairsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKeypairsFilter)(nil)).Elem()
}

func (i GetKeypairsFilterArgs) ToGetKeypairsFilterOutput() GetKeypairsFilterOutput {
	return i.ToGetKeypairsFilterOutputWithContext(context.Background())
}

func (i GetKeypairsFilterArgs) ToGetKeypairsFilterOutputWithContext(ctx context.Context) GetKeypairsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKeypairsFilterOutput)
}

// GetKeypairsFilterArrayInput is an input type that accepts GetKeypairsFilterArray and GetKeypairsFilterArrayOutput values.
// You can construct a concrete instance of `GetKeypairsFilterArrayInput` via:
//
//	GetKeypairsFilterArray{ GetKeypairsFilterArgs{...} }
type GetKeypairsFilterArrayInput interface {
	pulumi.Input

	ToGetKeypairsFilterArrayOutput() GetKeypairsFilterArrayOutput
	ToGetKeypairsFilterArrayOutputWithContext(context.Context) GetKeypairsFilterArrayOutput
}

type GetKeypairsFilterArray []GetKeypairsFilterInput

func (GetKeypairsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKeypairsFilter)(nil)).Elem()
}

func (i GetKeypairsFilterArray) ToGetKeypairsFilterArrayOutput() GetKeypairsFilterArrayOutput {
	return i.ToGetKeypairsFilterArrayOutputWithContext(context.Background())
}

func (i GetKeypairsFilterArray) ToGetKeypairsFilterArrayOutputWithContext(ctx context.Context) GetKeypairsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKeypairsFilterArrayOutput)
}

type GetKeypairsFilterOutput struct{ *pulumi.OutputState }

func (GetKeypairsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKeypairsFilter)(nil)).Elem()
}

func (o GetKeypairsFilterOutput) ToGetKeypairsFilterOutput() GetKeypairsFilterOutput {
	return o
}

func (o GetKeypairsFilterOutput) ToGetKeypairsFilterOutputWithContext(ctx context.Context) GetKeypairsFilterOutput {
	return o
}

func (o GetKeypairsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeypairsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetKeypairsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetKeypairsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetKeypairsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetKeypairsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKeypairsFilter)(nil)).Elem()
}

func (o GetKeypairsFilterArrayOutput) ToGetKeypairsFilterArrayOutput() GetKeypairsFilterArrayOutput {
	return o
}

func (o GetKeypairsFilterArrayOutput) ToGetKeypairsFilterArrayOutputWithContext(ctx context.Context) GetKeypairsFilterArrayOutput {
	return o
}

func (o GetKeypairsFilterArrayOutput) Index(i pulumi.IntInput) GetKeypairsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKeypairsFilter {
		return vs[0].([]GetKeypairsFilter)[vs[1].(int)]
	}).(GetKeypairsFilterOutput)
}

type GetKeypairsKeypair struct {
	// The MD5 public key fingerprint as specified in section 4 of RFC 4716.
	KeypairFingerprint string `pulumi:"keypairFingerprint"`
	// The ID of the keypair.
	KeypairId string `pulumi:"keypairId"`
	// The name of the keypair.
	KeypairName string `pulumi:"keypairName"`
	// The type of the keypair (`ssh-rsa`, `ssh-ed25519`, `ecdsa-sha2-nistp256`, `ecdsa-sha2-nistp384`, or `ecdsa-sha2-nistp521`).
	KeypairType string `pulumi:"keypairType"`
	// One or more tags associated with the keypair.
	Tags []GetKeypairsKeypairTag `pulumi:"tags"`
}

// GetKeypairsKeypairInput is an input type that accepts GetKeypairsKeypairArgs and GetKeypairsKeypairOutput values.
// You can construct a concrete instance of `GetKeypairsKeypairInput` via:
//
//	GetKeypairsKeypairArgs{...}
type GetKeypairsKeypairInput interface {
	pulumi.Input

	ToGetKeypairsKeypairOutput() GetKeypairsKeypairOutput
	ToGetKeypairsKeypairOutputWithContext(context.Context) GetKeypairsKeypairOutput
}

type GetKeypairsKeypairArgs struct {
	// The MD5 public key fingerprint as specified in section 4 of RFC 4716.
	KeypairFingerprint pulumi.StringInput `pulumi:"keypairFingerprint"`
	// The ID of the keypair.
	KeypairId pulumi.StringInput `pulumi:"keypairId"`
	// The name of the keypair.
	KeypairName pulumi.StringInput `pulumi:"keypairName"`
	// The type of the keypair (`ssh-rsa`, `ssh-ed25519`, `ecdsa-sha2-nistp256`, `ecdsa-sha2-nistp384`, or `ecdsa-sha2-nistp521`).
	KeypairType pulumi.StringInput `pulumi:"keypairType"`
	// One or more tags associated with the keypair.
	Tags GetKeypairsKeypairTagArrayInput `pulumi:"tags"`
}

func (GetKeypairsKeypairArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKeypairsKeypair)(nil)).Elem()
}

func (i GetKeypairsKeypairArgs) ToGetKeypairsKeypairOutput() GetKeypairsKeypairOutput {
	return i.ToGetKeypairsKeypairOutputWithContext(context.Background())
}

func (i GetKeypairsKeypairArgs) ToGetKeypairsKeypairOutputWithContext(ctx context.Context) GetKeypairsKeypairOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKeypairsKeypairOutput)
}

// GetKeypairsKeypairArrayInput is an input type that accepts GetKeypairsKeypairArray and GetKeypairsKeypairArrayOutput values.
// You can construct a concrete instance of `GetKeypairsKeypairArrayInput` via:
//
//	GetKeypairsKeypairArray{ GetKeypairsKeypairArgs{...} }
type GetKeypairsKeypairArrayInput interface {
	pulumi.Input

	ToGetKeypairsKeypairArrayOutput() GetKeypairsKeypairArrayOutput
	ToGetKeypairsKeypairArrayOutputWithContext(context.Context) GetKeypairsKeypairArrayOutput
}

type GetKeypairsKeypairArray []GetKeypairsKeypairInput

func (GetKeypairsKeypairArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKeypairsKeypair)(nil)).Elem()
}

func (i GetKeypairsKeypairArray) ToGetKeypairsKeypairArrayOutput() GetKeypairsKeypairArrayOutput {
	return i.ToGetKeypairsKeypairArrayOutputWithContext(context.Background())
}

func (i GetKeypairsKeypairArray) ToGetKeypairsKeypairArrayOutputWithContext(ctx context.Context) GetKeypairsKeypairArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKeypairsKeypairArrayOutput)
}

type GetKeypairsKeypairOutput struct{ *pulumi.OutputState }

func (GetKeypairsKeypairOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKeypairsKeypair)(nil)).Elem()
}

func (o GetKeypairsKeypairOutput) ToGetKeypairsKeypairOutput() GetKeypairsKeypairOutput {
	return o
}

func (o GetKeypairsKeypairOutput) ToGetKeypairsKeypairOutputWithContext(ctx context.Context) GetKeypairsKeypairOutput {
	return o
}

// The MD5 public key fingerprint as specified in section 4 of RFC 4716.
func (o GetKeypairsKeypairOutput) KeypairFingerprint() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeypairsKeypair) string { return v.KeypairFingerprint }).(pulumi.StringOutput)
}

// The ID of the keypair.
func (o GetKeypairsKeypairOutput) KeypairId() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeypairsKeypair) string { return v.KeypairId }).(pulumi.StringOutput)
}

// The name of the keypair.
func (o GetKeypairsKeypairOutput) KeypairName() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeypairsKeypair) string { return v.KeypairName }).(pulumi.StringOutput)
}

// The type of the keypair (`ssh-rsa`, `ssh-ed25519`, `ecdsa-sha2-nistp256`, `ecdsa-sha2-nistp384`, or `ecdsa-sha2-nistp521`).
func (o GetKeypairsKeypairOutput) KeypairType() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeypairsKeypair) string { return v.KeypairType }).(pulumi.StringOutput)
}

// One or more tags associated with the keypair.
func (o GetKeypairsKeypairOutput) Tags() GetKeypairsKeypairTagArrayOutput {
	return o.ApplyT(func(v GetKeypairsKeypair) []GetKeypairsKeypairTag { return v.Tags }).(GetKeypairsKeypairTagArrayOutput)
}

type GetKeypairsKeypairArrayOutput struct{ *pulumi.OutputState }

func (GetKeypairsKeypairArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKeypairsKeypair)(nil)).Elem()
}

func (o GetKeypairsKeypairArrayOutput) ToGetKeypairsKeypairArrayOutput() GetKeypairsKeypairArrayOutput {
	return o
}

func (o GetKeypairsKeypairArrayOutput) ToGetKeypairsKeypairArrayOutputWithContext(ctx context.Context) GetKeypairsKeypairArrayOutput {
	return o
}

func (o GetKeypairsKeypairArrayOutput) Index(i pulumi.IntInput) GetKeypairsKeypairOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKeypairsKeypair {
		return vs[0].([]GetKeypairsKeypair)[vs[1].(int)]
	}).(GetKeypairsKeypairOutput)
}

type GetKeypairsKeypairTag struct {
	// The key of the tag, with a minimum of 1 character.
	Key string `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value string `pulumi:"value"`
}

// GetKeypairsKeypairTagInput is an input type that accepts GetKeypairsKeypairTagArgs and GetKeypairsKeypairTagOutput values.
// You can construct a concrete instance of `GetKeypairsKeypairTagInput` via:
//
//	GetKeypairsKeypairTagArgs{...}
type GetKeypairsKeypairTagInput interface {
	pulumi.Input

	ToGetKeypairsKeypairTagOutput() GetKeypairsKeypairTagOutput
	ToGetKeypairsKeypairTagOutputWithContext(context.Context) GetKeypairsKeypairTagOutput
}

type GetKeypairsKeypairTagArgs struct {
	// The key of the tag, with a minimum of 1 character.
	Key pulumi.StringInput `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetKeypairsKeypairTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKeypairsKeypairTag)(nil)).Elem()
}

func (i GetKeypairsKeypairTagArgs) ToGetKeypairsKeypairTagOutput() GetKeypairsKeypairTagOutput {
	return i.ToGetKeypairsKeypairTagOutputWithContext(context.Background())
}

func (i GetKeypairsKeypairTagArgs) ToGetKeypairsKeypairTagOutputWithContext(ctx context.Context) GetKeypairsKeypairTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKeypairsKeypairTagOutput)
}

// GetKeypairsKeypairTagArrayInput is an input type that accepts GetKeypairsKeypairTagArray and GetKeypairsKeypairTagArrayOutput values.
// You can construct a concrete instance of `GetKeypairsKeypairTagArrayInput` via:
//
//	GetKeypairsKeypairTagArray{ GetKeypairsKeypairTagArgs{...} }
type GetKeypairsKeypairTagArrayInput interface {
	pulumi.Input

	ToGetKeypairsKeypairTagArrayOutput() GetKeypairsKeypairTagArrayOutput
	ToGetKeypairsKeypairTagArrayOutputWithContext(context.Context) GetKeypairsKeypairTagArrayOutput
}

type GetKeypairsKeypairTagArray []GetKeypairsKeypairTagInput

func (GetKeypairsKeypairTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKeypairsKeypairTag)(nil)).Elem()
}

func (i GetKeypairsKeypairTagArray) ToGetKeypairsKeypairTagArrayOutput() GetKeypairsKeypairTagArrayOutput {
	return i.ToGetKeypairsKeypairTagArrayOutputWithContext(context.Background())
}

func (i GetKeypairsKeypairTagArray) ToGetKeypairsKeypairTagArrayOutputWithContext(ctx context.Context) GetKeypairsKeypairTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKeypairsKeypairTagArrayOutput)
}

type GetKeypairsKeypairTagOutput struct{ *pulumi.OutputState }

func (GetKeypairsKeypairTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKeypairsKeypairTag)(nil)).Elem()
}

func (o GetKeypairsKeypairTagOutput) ToGetKeypairsKeypairTagOutput() GetKeypairsKeypairTagOutput {
	return o
}

func (o GetKeypairsKeypairTagOutput) ToGetKeypairsKeypairTagOutputWithContext(ctx context.Context) GetKeypairsKeypairTagOutput {
	return o
}

// The key of the tag, with a minimum of 1 character.
func (o GetKeypairsKeypairTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeypairsKeypairTag) string { return v.Key }).(pulumi.StringOutput)
}

// The value of the tag, between 0 and 255 characters.
func (o GetKeypairsKeypairTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeypairsKeypairTag) string { return v.Value }).(pulumi.StringOutput)
}

type GetKeypairsKeypairTagArrayOutput struct{ *pulumi.OutputState }

func (GetKeypairsKeypairTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKeypairsKeypairTag)(nil)).Elem()
}

func (o GetKeypairsKeypairTagArrayOutput) ToGetKeypairsKeypairTagArrayOutput() GetKeypairsKeypairTagArrayOutput {
	return o
}

func (o GetKeypairsKeypairTagArrayOutput) ToGetKeypairsKeypairTagArrayOutputWithContext(ctx context.Context) GetKeypairsKeypairTagArrayOutput {
	return o
}

func (o GetKeypairsKeypairTagArrayOutput) Index(i pulumi.IntInput) GetKeypairsKeypairTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKeypairsKeypairTag {
		return vs[0].([]GetKeypairsKeypairTag)[vs[1].(int)]
	}).(GetKeypairsKeypairTagOutput)
}

type GetLoadBalancerAccessLog struct {
	// If true, access logs are enabled for your load balancer. If false, they are not. If you set this to true in your request, the `osuBucketName` parameter is required.
	IsEnabled bool `pulumi:"isEnabled"`
	// The name of the OOS bucket for the access logs.
	OsuBucketName string `pulumi:"osuBucketName"`
	// The path to the folder of the access logs in your OOS bucket (by default, the `root` level of your bucket).
	OsuBucketPrefix string `pulumi:"osuBucketPrefix"`
	// The time interval for the publication of access logs in the OOS bucket, in minutes. This value can be either `5` or `60` (by default, `60`).
	PublicationInterval int `pulumi:"publicationInterval"`
}

// GetLoadBalancerAccessLogInput is an input type that accepts GetLoadBalancerAccessLogArgs and GetLoadBalancerAccessLogOutput values.
// You can construct a concrete instance of `GetLoadBalancerAccessLogInput` via:
//
//	GetLoadBalancerAccessLogArgs{...}
type GetLoadBalancerAccessLogInput interface {
	pulumi.Input

	ToGetLoadBalancerAccessLogOutput() GetLoadBalancerAccessLogOutput
	ToGetLoadBalancerAccessLogOutputWithContext(context.Context) GetLoadBalancerAccessLogOutput
}

type GetLoadBalancerAccessLogArgs struct {
	// If true, access logs are enabled for your load balancer. If false, they are not. If you set this to true in your request, the `osuBucketName` parameter is required.
	IsEnabled pulumi.BoolInput `pulumi:"isEnabled"`
	// The name of the OOS bucket for the access logs.
	OsuBucketName pulumi.StringInput `pulumi:"osuBucketName"`
	// The path to the folder of the access logs in your OOS bucket (by default, the `root` level of your bucket).
	OsuBucketPrefix pulumi.StringInput `pulumi:"osuBucketPrefix"`
	// The time interval for the publication of access logs in the OOS bucket, in minutes. This value can be either `5` or `60` (by default, `60`).
	PublicationInterval pulumi.IntInput `pulumi:"publicationInterval"`
}

func (GetLoadBalancerAccessLogArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLoadBalancerAccessLog)(nil)).Elem()
}

func (i GetLoadBalancerAccessLogArgs) ToGetLoadBalancerAccessLogOutput() GetLoadBalancerAccessLogOutput {
	return i.ToGetLoadBalancerAccessLogOutputWithContext(context.Background())
}

func (i GetLoadBalancerAccessLogArgs) ToGetLoadBalancerAccessLogOutputWithContext(ctx context.Context) GetLoadBalancerAccessLogOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLoadBalancerAccessLogOutput)
}

// GetLoadBalancerAccessLogArrayInput is an input type that accepts GetLoadBalancerAccessLogArray and GetLoadBalancerAccessLogArrayOutput values.
// You can construct a concrete instance of `GetLoadBalancerAccessLogArrayInput` via:
//
//	GetLoadBalancerAccessLogArray{ GetLoadBalancerAccessLogArgs{...} }
type GetLoadBalancerAccessLogArrayInput interface {
	pulumi.Input

	ToGetLoadBalancerAccessLogArrayOutput() GetLoadBalancerAccessLogArrayOutput
	ToGetLoadBalancerAccessLogArrayOutputWithContext(context.Context) GetLoadBalancerAccessLogArrayOutput
}

type GetLoadBalancerAccessLogArray []GetLoadBalancerAccessLogInput

func (GetLoadBalancerAccessLogArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLoadBalancerAccessLog)(nil)).Elem()
}

func (i GetLoadBalancerAccessLogArray) ToGetLoadBalancerAccessLogArrayOutput() GetLoadBalancerAccessLogArrayOutput {
	return i.ToGetLoadBalancerAccessLogArrayOutputWithContext(context.Background())
}

func (i GetLoadBalancerAccessLogArray) ToGetLoadBalancerAccessLogArrayOutputWithContext(ctx context.Context) GetLoadBalancerAccessLogArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLoadBalancerAccessLogArrayOutput)
}

type GetLoadBalancerAccessLogOutput struct{ *pulumi.OutputState }

func (GetLoadBalancerAccessLogOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLoadBalancerAccessLog)(nil)).Elem()
}

func (o GetLoadBalancerAccessLogOutput) ToGetLoadBalancerAccessLogOutput() GetLoadBalancerAccessLogOutput {
	return o
}

func (o GetLoadBalancerAccessLogOutput) ToGetLoadBalancerAccessLogOutputWithContext(ctx context.Context) GetLoadBalancerAccessLogOutput {
	return o
}

// If true, access logs are enabled for your load balancer. If false, they are not. If you set this to true in your request, the `osuBucketName` parameter is required.
func (o GetLoadBalancerAccessLogOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetLoadBalancerAccessLog) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

// The name of the OOS bucket for the access logs.
func (o GetLoadBalancerAccessLogOutput) OsuBucketName() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancerAccessLog) string { return v.OsuBucketName }).(pulumi.StringOutput)
}

// The path to the folder of the access logs in your OOS bucket (by default, the `root` level of your bucket).
func (o GetLoadBalancerAccessLogOutput) OsuBucketPrefix() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancerAccessLog) string { return v.OsuBucketPrefix }).(pulumi.StringOutput)
}

// The time interval for the publication of access logs in the OOS bucket, in minutes. This value can be either `5` or `60` (by default, `60`).
func (o GetLoadBalancerAccessLogOutput) PublicationInterval() pulumi.IntOutput {
	return o.ApplyT(func(v GetLoadBalancerAccessLog) int { return v.PublicationInterval }).(pulumi.IntOutput)
}

type GetLoadBalancerAccessLogArrayOutput struct{ *pulumi.OutputState }

func (GetLoadBalancerAccessLogArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLoadBalancerAccessLog)(nil)).Elem()
}

func (o GetLoadBalancerAccessLogArrayOutput) ToGetLoadBalancerAccessLogArrayOutput() GetLoadBalancerAccessLogArrayOutput {
	return o
}

func (o GetLoadBalancerAccessLogArrayOutput) ToGetLoadBalancerAccessLogArrayOutputWithContext(ctx context.Context) GetLoadBalancerAccessLogArrayOutput {
	return o
}

func (o GetLoadBalancerAccessLogArrayOutput) Index(i pulumi.IntInput) GetLoadBalancerAccessLogOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLoadBalancerAccessLog {
		return vs[0].([]GetLoadBalancerAccessLog)[vs[1].(int)]
	}).(GetLoadBalancerAccessLogOutput)
}

type GetLoadBalancerApplicationStickyCookiePolicy struct {
	// The name of the application cookie used for stickiness.
	CookieName string `pulumi:"cookieName"`
	// The name of the stickiness policy.
	PolicyName string `pulumi:"policyName"`
}

// GetLoadBalancerApplicationStickyCookiePolicyInput is an input type that accepts GetLoadBalancerApplicationStickyCookiePolicyArgs and GetLoadBalancerApplicationStickyCookiePolicyOutput values.
// You can construct a concrete instance of `GetLoadBalancerApplicationStickyCookiePolicyInput` via:
//
//	GetLoadBalancerApplicationStickyCookiePolicyArgs{...}
type GetLoadBalancerApplicationStickyCookiePolicyInput interface {
	pulumi.Input

	ToGetLoadBalancerApplicationStickyCookiePolicyOutput() GetLoadBalancerApplicationStickyCookiePolicyOutput
	ToGetLoadBalancerApplicationStickyCookiePolicyOutputWithContext(context.Context) GetLoadBalancerApplicationStickyCookiePolicyOutput
}

type GetLoadBalancerApplicationStickyCookiePolicyArgs struct {
	// The name of the application cookie used for stickiness.
	CookieName pulumi.StringInput `pulumi:"cookieName"`
	// The name of the stickiness policy.
	PolicyName pulumi.StringInput `pulumi:"policyName"`
}

func (GetLoadBalancerApplicationStickyCookiePolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLoadBalancerApplicationStickyCookiePolicy)(nil)).Elem()
}

func (i GetLoadBalancerApplicationStickyCookiePolicyArgs) ToGetLoadBalancerApplicationStickyCookiePolicyOutput() GetLoadBalancerApplicationStickyCookiePolicyOutput {
	return i.ToGetLoadBalancerApplicationStickyCookiePolicyOutputWithContext(context.Background())
}

func (i GetLoadBalancerApplicationStickyCookiePolicyArgs) ToGetLoadBalancerApplicationStickyCookiePolicyOutputWithContext(ctx context.Context) GetLoadBalancerApplicationStickyCookiePolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLoadBalancerApplicationStickyCookiePolicyOutput)
}

// GetLoadBalancerApplicationStickyCookiePolicyArrayInput is an input type that accepts GetLoadBalancerApplicationStickyCookiePolicyArray and GetLoadBalancerApplicationStickyCookiePolicyArrayOutput values.
// You can construct a concrete instance of `GetLoadBalancerApplicationStickyCookiePolicyArrayInput` via:
//
//	GetLoadBalancerApplicationStickyCookiePolicyArray{ GetLoadBalancerApplicationStickyCookiePolicyArgs{...} }
type GetLoadBalancerApplicationStickyCookiePolicyArrayInput interface {
	pulumi.Input

	ToGetLoadBalancerApplicationStickyCookiePolicyArrayOutput() GetLoadBalancerApplicationStickyCookiePolicyArrayOutput
	ToGetLoadBalancerApplicationStickyCookiePolicyArrayOutputWithContext(context.Context) GetLoadBalancerApplicationStickyCookiePolicyArrayOutput
}

type GetLoadBalancerApplicationStickyCookiePolicyArray []GetLoadBalancerApplicationStickyCookiePolicyInput

func (GetLoadBalancerApplicationStickyCookiePolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLoadBalancerApplicationStickyCookiePolicy)(nil)).Elem()
}

func (i GetLoadBalancerApplicationStickyCookiePolicyArray) ToGetLoadBalancerApplicationStickyCookiePolicyArrayOutput() GetLoadBalancerApplicationStickyCookiePolicyArrayOutput {
	return i.ToGetLoadBalancerApplicationStickyCookiePolicyArrayOutputWithContext(context.Background())
}

func (i GetLoadBalancerApplicationStickyCookiePolicyArray) ToGetLoadBalancerApplicationStickyCookiePolicyArrayOutputWithContext(ctx context.Context) GetLoadBalancerApplicationStickyCookiePolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLoadBalancerApplicationStickyCookiePolicyArrayOutput)
}

type GetLoadBalancerApplicationStickyCookiePolicyOutput struct{ *pulumi.OutputState }

func (GetLoadBalancerApplicationStickyCookiePolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLoadBalancerApplicationStickyCookiePolicy)(nil)).Elem()
}

func (o GetLoadBalancerApplicationStickyCookiePolicyOutput) ToGetLoadBalancerApplicationStickyCookiePolicyOutput() GetLoadBalancerApplicationStickyCookiePolicyOutput {
	return o
}

func (o GetLoadBalancerApplicationStickyCookiePolicyOutput) ToGetLoadBalancerApplicationStickyCookiePolicyOutputWithContext(ctx context.Context) GetLoadBalancerApplicationStickyCookiePolicyOutput {
	return o
}

// The name of the application cookie used for stickiness.
func (o GetLoadBalancerApplicationStickyCookiePolicyOutput) CookieName() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancerApplicationStickyCookiePolicy) string { return v.CookieName }).(pulumi.StringOutput)
}

// The name of the stickiness policy.
func (o GetLoadBalancerApplicationStickyCookiePolicyOutput) PolicyName() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancerApplicationStickyCookiePolicy) string { return v.PolicyName }).(pulumi.StringOutput)
}

type GetLoadBalancerApplicationStickyCookiePolicyArrayOutput struct{ *pulumi.OutputState }

func (GetLoadBalancerApplicationStickyCookiePolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLoadBalancerApplicationStickyCookiePolicy)(nil)).Elem()
}

func (o GetLoadBalancerApplicationStickyCookiePolicyArrayOutput) ToGetLoadBalancerApplicationStickyCookiePolicyArrayOutput() GetLoadBalancerApplicationStickyCookiePolicyArrayOutput {
	return o
}

func (o GetLoadBalancerApplicationStickyCookiePolicyArrayOutput) ToGetLoadBalancerApplicationStickyCookiePolicyArrayOutputWithContext(ctx context.Context) GetLoadBalancerApplicationStickyCookiePolicyArrayOutput {
	return o
}

func (o GetLoadBalancerApplicationStickyCookiePolicyArrayOutput) Index(i pulumi.IntInput) GetLoadBalancerApplicationStickyCookiePolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLoadBalancerApplicationStickyCookiePolicy {
		return vs[0].([]GetLoadBalancerApplicationStickyCookiePolicy)[vs[1].(int)]
	}).(GetLoadBalancerApplicationStickyCookiePolicyOutput)
}

type GetLoadBalancerFilter struct {
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// GetLoadBalancerFilterInput is an input type that accepts GetLoadBalancerFilterArgs and GetLoadBalancerFilterOutput values.
// You can construct a concrete instance of `GetLoadBalancerFilterInput` via:
//
//	GetLoadBalancerFilterArgs{...}
type GetLoadBalancerFilterInput interface {
	pulumi.Input

	ToGetLoadBalancerFilterOutput() GetLoadBalancerFilterOutput
	ToGetLoadBalancerFilterOutputWithContext(context.Context) GetLoadBalancerFilterOutput
}

type GetLoadBalancerFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetLoadBalancerFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLoadBalancerFilter)(nil)).Elem()
}

func (i GetLoadBalancerFilterArgs) ToGetLoadBalancerFilterOutput() GetLoadBalancerFilterOutput {
	return i.ToGetLoadBalancerFilterOutputWithContext(context.Background())
}

func (i GetLoadBalancerFilterArgs) ToGetLoadBalancerFilterOutputWithContext(ctx context.Context) GetLoadBalancerFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLoadBalancerFilterOutput)
}

// GetLoadBalancerFilterArrayInput is an input type that accepts GetLoadBalancerFilterArray and GetLoadBalancerFilterArrayOutput values.
// You can construct a concrete instance of `GetLoadBalancerFilterArrayInput` via:
//
//	GetLoadBalancerFilterArray{ GetLoadBalancerFilterArgs{...} }
type GetLoadBalancerFilterArrayInput interface {
	pulumi.Input

	ToGetLoadBalancerFilterArrayOutput() GetLoadBalancerFilterArrayOutput
	ToGetLoadBalancerFilterArrayOutputWithContext(context.Context) GetLoadBalancerFilterArrayOutput
}

type GetLoadBalancerFilterArray []GetLoadBalancerFilterInput

func (GetLoadBalancerFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLoadBalancerFilter)(nil)).Elem()
}

func (i GetLoadBalancerFilterArray) ToGetLoadBalancerFilterArrayOutput() GetLoadBalancerFilterArrayOutput {
	return i.ToGetLoadBalancerFilterArrayOutputWithContext(context.Background())
}

func (i GetLoadBalancerFilterArray) ToGetLoadBalancerFilterArrayOutputWithContext(ctx context.Context) GetLoadBalancerFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLoadBalancerFilterArrayOutput)
}

type GetLoadBalancerFilterOutput struct{ *pulumi.OutputState }

func (GetLoadBalancerFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLoadBalancerFilter)(nil)).Elem()
}

func (o GetLoadBalancerFilterOutput) ToGetLoadBalancerFilterOutput() GetLoadBalancerFilterOutput {
	return o
}

func (o GetLoadBalancerFilterOutput) ToGetLoadBalancerFilterOutputWithContext(ctx context.Context) GetLoadBalancerFilterOutput {
	return o
}

func (o GetLoadBalancerFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancerFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetLoadBalancerFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetLoadBalancerFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetLoadBalancerFilterArrayOutput struct{ *pulumi.OutputState }

func (GetLoadBalancerFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLoadBalancerFilter)(nil)).Elem()
}

func (o GetLoadBalancerFilterArrayOutput) ToGetLoadBalancerFilterArrayOutput() GetLoadBalancerFilterArrayOutput {
	return o
}

func (o GetLoadBalancerFilterArrayOutput) ToGetLoadBalancerFilterArrayOutputWithContext(ctx context.Context) GetLoadBalancerFilterArrayOutput {
	return o
}

func (o GetLoadBalancerFilterArrayOutput) Index(i pulumi.IntInput) GetLoadBalancerFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLoadBalancerFilter {
		return vs[0].([]GetLoadBalancerFilter)[vs[1].(int)]
	}).(GetLoadBalancerFilterOutput)
}

type GetLoadBalancerHealthCheck struct {
	// The number of seconds between two requests (between `5` and `600` both included).
	CheckInterval int `pulumi:"checkInterval"`
	// The number of consecutive successful requests before considering the VM as healthy (between `2` and `10` both included).
	HealthyThreshold int `pulumi:"healthyThreshold"`
	// If you use the HTTP or HTTPS protocols, the request URL path.
	Path string `pulumi:"path"`
	// The port number (between `1` and `65535`, both included).
	Port int `pulumi:"port"`
	// The protocol for the URL of the VM (`HTTP` \| `HTTPS` \| `TCP` \| `SSL`).
	Protocol string `pulumi:"protocol"`
	// The maximum waiting time for a response before considering the VM as unhealthy, in seconds (between `2` and `60` both included).
	Timeout int `pulumi:"timeout"`
	// The number of consecutive failed requests before considering the VM as unhealthy (between `2` and `10` both included).
	UnhealthyThreshold int `pulumi:"unhealthyThreshold"`
}

// GetLoadBalancerHealthCheckInput is an input type that accepts GetLoadBalancerHealthCheckArgs and GetLoadBalancerHealthCheckOutput values.
// You can construct a concrete instance of `GetLoadBalancerHealthCheckInput` via:
//
//	GetLoadBalancerHealthCheckArgs{...}
type GetLoadBalancerHealthCheckInput interface {
	pulumi.Input

	ToGetLoadBalancerHealthCheckOutput() GetLoadBalancerHealthCheckOutput
	ToGetLoadBalancerHealthCheckOutputWithContext(context.Context) GetLoadBalancerHealthCheckOutput
}

type GetLoadBalancerHealthCheckArgs struct {
	// The number of seconds between two requests (between `5` and `600` both included).
	CheckInterval pulumi.IntInput `pulumi:"checkInterval"`
	// The number of consecutive successful requests before considering the VM as healthy (between `2` and `10` both included).
	HealthyThreshold pulumi.IntInput `pulumi:"healthyThreshold"`
	// If you use the HTTP or HTTPS protocols, the request URL path.
	Path pulumi.StringInput `pulumi:"path"`
	// The port number (between `1` and `65535`, both included).
	Port pulumi.IntInput `pulumi:"port"`
	// The protocol for the URL of the VM (`HTTP` \| `HTTPS` \| `TCP` \| `SSL`).
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// The maximum waiting time for a response before considering the VM as unhealthy, in seconds (between `2` and `60` both included).
	Timeout pulumi.IntInput `pulumi:"timeout"`
	// The number of consecutive failed requests before considering the VM as unhealthy (between `2` and `10` both included).
	UnhealthyThreshold pulumi.IntInput `pulumi:"unhealthyThreshold"`
}

func (GetLoadBalancerHealthCheckArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLoadBalancerHealthCheck)(nil)).Elem()
}

func (i GetLoadBalancerHealthCheckArgs) ToGetLoadBalancerHealthCheckOutput() GetLoadBalancerHealthCheckOutput {
	return i.ToGetLoadBalancerHealthCheckOutputWithContext(context.Background())
}

func (i GetLoadBalancerHealthCheckArgs) ToGetLoadBalancerHealthCheckOutputWithContext(ctx context.Context) GetLoadBalancerHealthCheckOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLoadBalancerHealthCheckOutput)
}

// GetLoadBalancerHealthCheckArrayInput is an input type that accepts GetLoadBalancerHealthCheckArray and GetLoadBalancerHealthCheckArrayOutput values.
// You can construct a concrete instance of `GetLoadBalancerHealthCheckArrayInput` via:
//
//	GetLoadBalancerHealthCheckArray{ GetLoadBalancerHealthCheckArgs{...} }
type GetLoadBalancerHealthCheckArrayInput interface {
	pulumi.Input

	ToGetLoadBalancerHealthCheckArrayOutput() GetLoadBalancerHealthCheckArrayOutput
	ToGetLoadBalancerHealthCheckArrayOutputWithContext(context.Context) GetLoadBalancerHealthCheckArrayOutput
}

type GetLoadBalancerHealthCheckArray []GetLoadBalancerHealthCheckInput

func (GetLoadBalancerHealthCheckArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLoadBalancerHealthCheck)(nil)).Elem()
}

func (i GetLoadBalancerHealthCheckArray) ToGetLoadBalancerHealthCheckArrayOutput() GetLoadBalancerHealthCheckArrayOutput {
	return i.ToGetLoadBalancerHealthCheckArrayOutputWithContext(context.Background())
}

func (i GetLoadBalancerHealthCheckArray) ToGetLoadBalancerHealthCheckArrayOutputWithContext(ctx context.Context) GetLoadBalancerHealthCheckArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLoadBalancerHealthCheckArrayOutput)
}

type GetLoadBalancerHealthCheckOutput struct{ *pulumi.OutputState }

func (GetLoadBalancerHealthCheckOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLoadBalancerHealthCheck)(nil)).Elem()
}

func (o GetLoadBalancerHealthCheckOutput) ToGetLoadBalancerHealthCheckOutput() GetLoadBalancerHealthCheckOutput {
	return o
}

func (o GetLoadBalancerHealthCheckOutput) ToGetLoadBalancerHealthCheckOutputWithContext(ctx context.Context) GetLoadBalancerHealthCheckOutput {
	return o
}

// The number of seconds between two requests (between `5` and `600` both included).
func (o GetLoadBalancerHealthCheckOutput) CheckInterval() pulumi.IntOutput {
	return o.ApplyT(func(v GetLoadBalancerHealthCheck) int { return v.CheckInterval }).(pulumi.IntOutput)
}

// The number of consecutive successful requests before considering the VM as healthy (between `2` and `10` both included).
func (o GetLoadBalancerHealthCheckOutput) HealthyThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v GetLoadBalancerHealthCheck) int { return v.HealthyThreshold }).(pulumi.IntOutput)
}

// If you use the HTTP or HTTPS protocols, the request URL path.
func (o GetLoadBalancerHealthCheckOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancerHealthCheck) string { return v.Path }).(pulumi.StringOutput)
}

// The port number (between `1` and `65535`, both included).
func (o GetLoadBalancerHealthCheckOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetLoadBalancerHealthCheck) int { return v.Port }).(pulumi.IntOutput)
}

// The protocol for the URL of the VM (`HTTP` \| `HTTPS` \| `TCP` \| `SSL`).
func (o GetLoadBalancerHealthCheckOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancerHealthCheck) string { return v.Protocol }).(pulumi.StringOutput)
}

// The maximum waiting time for a response before considering the VM as unhealthy, in seconds (between `2` and `60` both included).
func (o GetLoadBalancerHealthCheckOutput) Timeout() pulumi.IntOutput {
	return o.ApplyT(func(v GetLoadBalancerHealthCheck) int { return v.Timeout }).(pulumi.IntOutput)
}

// The number of consecutive failed requests before considering the VM as unhealthy (between `2` and `10` both included).
func (o GetLoadBalancerHealthCheckOutput) UnhealthyThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v GetLoadBalancerHealthCheck) int { return v.UnhealthyThreshold }).(pulumi.IntOutput)
}

type GetLoadBalancerHealthCheckArrayOutput struct{ *pulumi.OutputState }

func (GetLoadBalancerHealthCheckArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLoadBalancerHealthCheck)(nil)).Elem()
}

func (o GetLoadBalancerHealthCheckArrayOutput) ToGetLoadBalancerHealthCheckArrayOutput() GetLoadBalancerHealthCheckArrayOutput {
	return o
}

func (o GetLoadBalancerHealthCheckArrayOutput) ToGetLoadBalancerHealthCheckArrayOutputWithContext(ctx context.Context) GetLoadBalancerHealthCheckArrayOutput {
	return o
}

func (o GetLoadBalancerHealthCheckArrayOutput) Index(i pulumi.IntInput) GetLoadBalancerHealthCheckOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLoadBalancerHealthCheck {
		return vs[0].([]GetLoadBalancerHealthCheck)[vs[1].(int)]
	}).(GetLoadBalancerHealthCheckOutput)
}

type GetLoadBalancerListener struct {
	// The port on which the backend VM is listening (between `1` and `65535`, both included).
	BackendPort int `pulumi:"backendPort"`
	// The protocol for routing traffic to backend VMs (`HTTP` \| `HTTPS` \| `TCP` \| `SSL`).
	BackendProtocol string `pulumi:"backendProtocol"`
	// The port on which the load balancer is listening (between `1` and `65535`, both included).
	LoadBalancerPort int `pulumi:"loadBalancerPort"`
	// The routing protocol (`HTTP` \| `HTTPS` \| `TCP` \| `SSL`).
	LoadBalancerProtocol string `pulumi:"loadBalancerProtocol"`
	// The names of the policies. If there are no policies enabled, the list is empty.
	PolicyNames []string `pulumi:"policyNames"`
	// The OUTSCALE Resource Name (ORN) of the server certificate. For more information, see [Resource Identifiers > OUTSCALE Resource Names (ORNs)](https://docs.outscale.com/en/userguide/Resource-Identifiers.html#_outscale_resource_names_orns).
	ServerCertificateId string `pulumi:"serverCertificateId"`
}

// GetLoadBalancerListenerInput is an input type that accepts GetLoadBalancerListenerArgs and GetLoadBalancerListenerOutput values.
// You can construct a concrete instance of `GetLoadBalancerListenerInput` via:
//
//	GetLoadBalancerListenerArgs{...}
type GetLoadBalancerListenerInput interface {
	pulumi.Input

	ToGetLoadBalancerListenerOutput() GetLoadBalancerListenerOutput
	ToGetLoadBalancerListenerOutputWithContext(context.Context) GetLoadBalancerListenerOutput
}

type GetLoadBalancerListenerArgs struct {
	// The port on which the backend VM is listening (between `1` and `65535`, both included).
	BackendPort pulumi.IntInput `pulumi:"backendPort"`
	// The protocol for routing traffic to backend VMs (`HTTP` \| `HTTPS` \| `TCP` \| `SSL`).
	BackendProtocol pulumi.StringInput `pulumi:"backendProtocol"`
	// The port on which the load balancer is listening (between `1` and `65535`, both included).
	LoadBalancerPort pulumi.IntInput `pulumi:"loadBalancerPort"`
	// The routing protocol (`HTTP` \| `HTTPS` \| `TCP` \| `SSL`).
	LoadBalancerProtocol pulumi.StringInput `pulumi:"loadBalancerProtocol"`
	// The names of the policies. If there are no policies enabled, the list is empty.
	PolicyNames pulumi.StringArrayInput `pulumi:"policyNames"`
	// The OUTSCALE Resource Name (ORN) of the server certificate. For more information, see [Resource Identifiers > OUTSCALE Resource Names (ORNs)](https://docs.outscale.com/en/userguide/Resource-Identifiers.html#_outscale_resource_names_orns).
	ServerCertificateId pulumi.StringInput `pulumi:"serverCertificateId"`
}

func (GetLoadBalancerListenerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLoadBalancerListener)(nil)).Elem()
}

func (i GetLoadBalancerListenerArgs) ToGetLoadBalancerListenerOutput() GetLoadBalancerListenerOutput {
	return i.ToGetLoadBalancerListenerOutputWithContext(context.Background())
}

func (i GetLoadBalancerListenerArgs) ToGetLoadBalancerListenerOutputWithContext(ctx context.Context) GetLoadBalancerListenerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLoadBalancerListenerOutput)
}

// GetLoadBalancerListenerArrayInput is an input type that accepts GetLoadBalancerListenerArray and GetLoadBalancerListenerArrayOutput values.
// You can construct a concrete instance of `GetLoadBalancerListenerArrayInput` via:
//
//	GetLoadBalancerListenerArray{ GetLoadBalancerListenerArgs{...} }
type GetLoadBalancerListenerArrayInput interface {
	pulumi.Input

	ToGetLoadBalancerListenerArrayOutput() GetLoadBalancerListenerArrayOutput
	ToGetLoadBalancerListenerArrayOutputWithContext(context.Context) GetLoadBalancerListenerArrayOutput
}

type GetLoadBalancerListenerArray []GetLoadBalancerListenerInput

func (GetLoadBalancerListenerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLoadBalancerListener)(nil)).Elem()
}

func (i GetLoadBalancerListenerArray) ToGetLoadBalancerListenerArrayOutput() GetLoadBalancerListenerArrayOutput {
	return i.ToGetLoadBalancerListenerArrayOutputWithContext(context.Background())
}

func (i GetLoadBalancerListenerArray) ToGetLoadBalancerListenerArrayOutputWithContext(ctx context.Context) GetLoadBalancerListenerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLoadBalancerListenerArrayOutput)
}

type GetLoadBalancerListenerOutput struct{ *pulumi.OutputState }

func (GetLoadBalancerListenerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLoadBalancerListener)(nil)).Elem()
}

func (o GetLoadBalancerListenerOutput) ToGetLoadBalancerListenerOutput() GetLoadBalancerListenerOutput {
	return o
}

func (o GetLoadBalancerListenerOutput) ToGetLoadBalancerListenerOutputWithContext(ctx context.Context) GetLoadBalancerListenerOutput {
	return o
}

// The port on which the backend VM is listening (between `1` and `65535`, both included).
func (o GetLoadBalancerListenerOutput) BackendPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetLoadBalancerListener) int { return v.BackendPort }).(pulumi.IntOutput)
}

// The protocol for routing traffic to backend VMs (`HTTP` \| `HTTPS` \| `TCP` \| `SSL`).
func (o GetLoadBalancerListenerOutput) BackendProtocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancerListener) string { return v.BackendProtocol }).(pulumi.StringOutput)
}

// The port on which the load balancer is listening (between `1` and `65535`, both included).
func (o GetLoadBalancerListenerOutput) LoadBalancerPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetLoadBalancerListener) int { return v.LoadBalancerPort }).(pulumi.IntOutput)
}

// The routing protocol (`HTTP` \| `HTTPS` \| `TCP` \| `SSL`).
func (o GetLoadBalancerListenerOutput) LoadBalancerProtocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancerListener) string { return v.LoadBalancerProtocol }).(pulumi.StringOutput)
}

// The names of the policies. If there are no policies enabled, the list is empty.
func (o GetLoadBalancerListenerOutput) PolicyNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetLoadBalancerListener) []string { return v.PolicyNames }).(pulumi.StringArrayOutput)
}

// The OUTSCALE Resource Name (ORN) of the server certificate. For more information, see [Resource Identifiers > OUTSCALE Resource Names (ORNs)](https://docs.outscale.com/en/userguide/Resource-Identifiers.html#_outscale_resource_names_orns).
func (o GetLoadBalancerListenerOutput) ServerCertificateId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancerListener) string { return v.ServerCertificateId }).(pulumi.StringOutput)
}

type GetLoadBalancerListenerArrayOutput struct{ *pulumi.OutputState }

func (GetLoadBalancerListenerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLoadBalancerListener)(nil)).Elem()
}

func (o GetLoadBalancerListenerArrayOutput) ToGetLoadBalancerListenerArrayOutput() GetLoadBalancerListenerArrayOutput {
	return o
}

func (o GetLoadBalancerListenerArrayOutput) ToGetLoadBalancerListenerArrayOutputWithContext(ctx context.Context) GetLoadBalancerListenerArrayOutput {
	return o
}

func (o GetLoadBalancerListenerArrayOutput) Index(i pulumi.IntInput) GetLoadBalancerListenerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLoadBalancerListener {
		return vs[0].([]GetLoadBalancerListener)[vs[1].(int)]
	}).(GetLoadBalancerListenerOutput)
}

type GetLoadBalancerListenerRuleFilter struct {
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// GetLoadBalancerListenerRuleFilterInput is an input type that accepts GetLoadBalancerListenerRuleFilterArgs and GetLoadBalancerListenerRuleFilterOutput values.
// You can construct a concrete instance of `GetLoadBalancerListenerRuleFilterInput` via:
//
//	GetLoadBalancerListenerRuleFilterArgs{...}
type GetLoadBalancerListenerRuleFilterInput interface {
	pulumi.Input

	ToGetLoadBalancerListenerRuleFilterOutput() GetLoadBalancerListenerRuleFilterOutput
	ToGetLoadBalancerListenerRuleFilterOutputWithContext(context.Context) GetLoadBalancerListenerRuleFilterOutput
}

type GetLoadBalancerListenerRuleFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetLoadBalancerListenerRuleFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLoadBalancerListenerRuleFilter)(nil)).Elem()
}

func (i GetLoadBalancerListenerRuleFilterArgs) ToGetLoadBalancerListenerRuleFilterOutput() GetLoadBalancerListenerRuleFilterOutput {
	return i.ToGetLoadBalancerListenerRuleFilterOutputWithContext(context.Background())
}

func (i GetLoadBalancerListenerRuleFilterArgs) ToGetLoadBalancerListenerRuleFilterOutputWithContext(ctx context.Context) GetLoadBalancerListenerRuleFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLoadBalancerListenerRuleFilterOutput)
}

// GetLoadBalancerListenerRuleFilterArrayInput is an input type that accepts GetLoadBalancerListenerRuleFilterArray and GetLoadBalancerListenerRuleFilterArrayOutput values.
// You can construct a concrete instance of `GetLoadBalancerListenerRuleFilterArrayInput` via:
//
//	GetLoadBalancerListenerRuleFilterArray{ GetLoadBalancerListenerRuleFilterArgs{...} }
type GetLoadBalancerListenerRuleFilterArrayInput interface {
	pulumi.Input

	ToGetLoadBalancerListenerRuleFilterArrayOutput() GetLoadBalancerListenerRuleFilterArrayOutput
	ToGetLoadBalancerListenerRuleFilterArrayOutputWithContext(context.Context) GetLoadBalancerListenerRuleFilterArrayOutput
}

type GetLoadBalancerListenerRuleFilterArray []GetLoadBalancerListenerRuleFilterInput

func (GetLoadBalancerListenerRuleFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLoadBalancerListenerRuleFilter)(nil)).Elem()
}

func (i GetLoadBalancerListenerRuleFilterArray) ToGetLoadBalancerListenerRuleFilterArrayOutput() GetLoadBalancerListenerRuleFilterArrayOutput {
	return i.ToGetLoadBalancerListenerRuleFilterArrayOutputWithContext(context.Background())
}

func (i GetLoadBalancerListenerRuleFilterArray) ToGetLoadBalancerListenerRuleFilterArrayOutputWithContext(ctx context.Context) GetLoadBalancerListenerRuleFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLoadBalancerListenerRuleFilterArrayOutput)
}

type GetLoadBalancerListenerRuleFilterOutput struct{ *pulumi.OutputState }

func (GetLoadBalancerListenerRuleFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLoadBalancerListenerRuleFilter)(nil)).Elem()
}

func (o GetLoadBalancerListenerRuleFilterOutput) ToGetLoadBalancerListenerRuleFilterOutput() GetLoadBalancerListenerRuleFilterOutput {
	return o
}

func (o GetLoadBalancerListenerRuleFilterOutput) ToGetLoadBalancerListenerRuleFilterOutputWithContext(ctx context.Context) GetLoadBalancerListenerRuleFilterOutput {
	return o
}

func (o GetLoadBalancerListenerRuleFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancerListenerRuleFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetLoadBalancerListenerRuleFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetLoadBalancerListenerRuleFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetLoadBalancerListenerRuleFilterArrayOutput struct{ *pulumi.OutputState }

func (GetLoadBalancerListenerRuleFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLoadBalancerListenerRuleFilter)(nil)).Elem()
}

func (o GetLoadBalancerListenerRuleFilterArrayOutput) ToGetLoadBalancerListenerRuleFilterArrayOutput() GetLoadBalancerListenerRuleFilterArrayOutput {
	return o
}

func (o GetLoadBalancerListenerRuleFilterArrayOutput) ToGetLoadBalancerListenerRuleFilterArrayOutputWithContext(ctx context.Context) GetLoadBalancerListenerRuleFilterArrayOutput {
	return o
}

func (o GetLoadBalancerListenerRuleFilterArrayOutput) Index(i pulumi.IntInput) GetLoadBalancerListenerRuleFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLoadBalancerListenerRuleFilter {
		return vs[0].([]GetLoadBalancerListenerRuleFilter)[vs[1].(int)]
	}).(GetLoadBalancerListenerRuleFilterOutput)
}

type GetLoadBalancerListenerRulesFilter struct {
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// GetLoadBalancerListenerRulesFilterInput is an input type that accepts GetLoadBalancerListenerRulesFilterArgs and GetLoadBalancerListenerRulesFilterOutput values.
// You can construct a concrete instance of `GetLoadBalancerListenerRulesFilterInput` via:
//
//	GetLoadBalancerListenerRulesFilterArgs{...}
type GetLoadBalancerListenerRulesFilterInput interface {
	pulumi.Input

	ToGetLoadBalancerListenerRulesFilterOutput() GetLoadBalancerListenerRulesFilterOutput
	ToGetLoadBalancerListenerRulesFilterOutputWithContext(context.Context) GetLoadBalancerListenerRulesFilterOutput
}

type GetLoadBalancerListenerRulesFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetLoadBalancerListenerRulesFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLoadBalancerListenerRulesFilter)(nil)).Elem()
}

func (i GetLoadBalancerListenerRulesFilterArgs) ToGetLoadBalancerListenerRulesFilterOutput() GetLoadBalancerListenerRulesFilterOutput {
	return i.ToGetLoadBalancerListenerRulesFilterOutputWithContext(context.Background())
}

func (i GetLoadBalancerListenerRulesFilterArgs) ToGetLoadBalancerListenerRulesFilterOutputWithContext(ctx context.Context) GetLoadBalancerListenerRulesFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLoadBalancerListenerRulesFilterOutput)
}

// GetLoadBalancerListenerRulesFilterArrayInput is an input type that accepts GetLoadBalancerListenerRulesFilterArray and GetLoadBalancerListenerRulesFilterArrayOutput values.
// You can construct a concrete instance of `GetLoadBalancerListenerRulesFilterArrayInput` via:
//
//	GetLoadBalancerListenerRulesFilterArray{ GetLoadBalancerListenerRulesFilterArgs{...} }
type GetLoadBalancerListenerRulesFilterArrayInput interface {
	pulumi.Input

	ToGetLoadBalancerListenerRulesFilterArrayOutput() GetLoadBalancerListenerRulesFilterArrayOutput
	ToGetLoadBalancerListenerRulesFilterArrayOutputWithContext(context.Context) GetLoadBalancerListenerRulesFilterArrayOutput
}

type GetLoadBalancerListenerRulesFilterArray []GetLoadBalancerListenerRulesFilterInput

func (GetLoadBalancerListenerRulesFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLoadBalancerListenerRulesFilter)(nil)).Elem()
}

func (i GetLoadBalancerListenerRulesFilterArray) ToGetLoadBalancerListenerRulesFilterArrayOutput() GetLoadBalancerListenerRulesFilterArrayOutput {
	return i.ToGetLoadBalancerListenerRulesFilterArrayOutputWithContext(context.Background())
}

func (i GetLoadBalancerListenerRulesFilterArray) ToGetLoadBalancerListenerRulesFilterArrayOutputWithContext(ctx context.Context) GetLoadBalancerListenerRulesFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLoadBalancerListenerRulesFilterArrayOutput)
}

type GetLoadBalancerListenerRulesFilterOutput struct{ *pulumi.OutputState }

func (GetLoadBalancerListenerRulesFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLoadBalancerListenerRulesFilter)(nil)).Elem()
}

func (o GetLoadBalancerListenerRulesFilterOutput) ToGetLoadBalancerListenerRulesFilterOutput() GetLoadBalancerListenerRulesFilterOutput {
	return o
}

func (o GetLoadBalancerListenerRulesFilterOutput) ToGetLoadBalancerListenerRulesFilterOutputWithContext(ctx context.Context) GetLoadBalancerListenerRulesFilterOutput {
	return o
}

func (o GetLoadBalancerListenerRulesFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancerListenerRulesFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetLoadBalancerListenerRulesFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetLoadBalancerListenerRulesFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetLoadBalancerListenerRulesFilterArrayOutput struct{ *pulumi.OutputState }

func (GetLoadBalancerListenerRulesFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLoadBalancerListenerRulesFilter)(nil)).Elem()
}

func (o GetLoadBalancerListenerRulesFilterArrayOutput) ToGetLoadBalancerListenerRulesFilterArrayOutput() GetLoadBalancerListenerRulesFilterArrayOutput {
	return o
}

func (o GetLoadBalancerListenerRulesFilterArrayOutput) ToGetLoadBalancerListenerRulesFilterArrayOutputWithContext(ctx context.Context) GetLoadBalancerListenerRulesFilterArrayOutput {
	return o
}

func (o GetLoadBalancerListenerRulesFilterArrayOutput) Index(i pulumi.IntInput) GetLoadBalancerListenerRulesFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLoadBalancerListenerRulesFilter {
		return vs[0].([]GetLoadBalancerListenerRulesFilter)[vs[1].(int)]
	}).(GetLoadBalancerListenerRulesFilterOutput)
}

type GetLoadBalancerListenerRulesListenerRule struct {
	// The type of action for the rule (always `forward`).
	Action string `pulumi:"action"`
	// A host-name pattern for the rule, with a maximum length of 128 characters. This host-name pattern supports maximum three wildcards, and must not contain any special characters except `-.?`.
	HostNamePattern string `pulumi:"hostNamePattern"`
	// The ID of the listener.
	ListenerId int `pulumi:"listenerId"`
	// The ID of the listener rule.
	ListenerRuleId int `pulumi:"listenerRuleId"`
	// A human-readable name for the listener rule.
	ListenerRuleName string `pulumi:"listenerRuleName"`
	// A path pattern for the rule, with a maximum length of 128 characters. This path pattern supports maximum three wildcards, and must not contain any special characters except `_-.$/~&quot;'@:+?`.
	PathPattern string `pulumi:"pathPattern"`
	// The priority level of the listener rule, between `1` and `19999` both included. Each rule must have a unique priority level. Otherwise, an error is returned.
	Priority int `pulumi:"priority"`
	// The IDs of the backend VMs.
	VmIds []string `pulumi:"vmIds"`
}

// GetLoadBalancerListenerRulesListenerRuleInput is an input type that accepts GetLoadBalancerListenerRulesListenerRuleArgs and GetLoadBalancerListenerRulesListenerRuleOutput values.
// You can construct a concrete instance of `GetLoadBalancerListenerRulesListenerRuleInput` via:
//
//	GetLoadBalancerListenerRulesListenerRuleArgs{...}
type GetLoadBalancerListenerRulesListenerRuleInput interface {
	pulumi.Input

	ToGetLoadBalancerListenerRulesListenerRuleOutput() GetLoadBalancerListenerRulesListenerRuleOutput
	ToGetLoadBalancerListenerRulesListenerRuleOutputWithContext(context.Context) GetLoadBalancerListenerRulesListenerRuleOutput
}

type GetLoadBalancerListenerRulesListenerRuleArgs struct {
	// The type of action for the rule (always `forward`).
	Action pulumi.StringInput `pulumi:"action"`
	// A host-name pattern for the rule, with a maximum length of 128 characters. This host-name pattern supports maximum three wildcards, and must not contain any special characters except `-.?`.
	HostNamePattern pulumi.StringInput `pulumi:"hostNamePattern"`
	// The ID of the listener.
	ListenerId pulumi.IntInput `pulumi:"listenerId"`
	// The ID of the listener rule.
	ListenerRuleId pulumi.IntInput `pulumi:"listenerRuleId"`
	// A human-readable name for the listener rule.
	ListenerRuleName pulumi.StringInput `pulumi:"listenerRuleName"`
	// A path pattern for the rule, with a maximum length of 128 characters. This path pattern supports maximum three wildcards, and must not contain any special characters except `_-.$/~&quot;'@:+?`.
	PathPattern pulumi.StringInput `pulumi:"pathPattern"`
	// The priority level of the listener rule, between `1` and `19999` both included. Each rule must have a unique priority level. Otherwise, an error is returned.
	Priority pulumi.IntInput `pulumi:"priority"`
	// The IDs of the backend VMs.
	VmIds pulumi.StringArrayInput `pulumi:"vmIds"`
}

func (GetLoadBalancerListenerRulesListenerRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLoadBalancerListenerRulesListenerRule)(nil)).Elem()
}

func (i GetLoadBalancerListenerRulesListenerRuleArgs) ToGetLoadBalancerListenerRulesListenerRuleOutput() GetLoadBalancerListenerRulesListenerRuleOutput {
	return i.ToGetLoadBalancerListenerRulesListenerRuleOutputWithContext(context.Background())
}

func (i GetLoadBalancerListenerRulesListenerRuleArgs) ToGetLoadBalancerListenerRulesListenerRuleOutputWithContext(ctx context.Context) GetLoadBalancerListenerRulesListenerRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLoadBalancerListenerRulesListenerRuleOutput)
}

// GetLoadBalancerListenerRulesListenerRuleArrayInput is an input type that accepts GetLoadBalancerListenerRulesListenerRuleArray and GetLoadBalancerListenerRulesListenerRuleArrayOutput values.
// You can construct a concrete instance of `GetLoadBalancerListenerRulesListenerRuleArrayInput` via:
//
//	GetLoadBalancerListenerRulesListenerRuleArray{ GetLoadBalancerListenerRulesListenerRuleArgs{...} }
type GetLoadBalancerListenerRulesListenerRuleArrayInput interface {
	pulumi.Input

	ToGetLoadBalancerListenerRulesListenerRuleArrayOutput() GetLoadBalancerListenerRulesListenerRuleArrayOutput
	ToGetLoadBalancerListenerRulesListenerRuleArrayOutputWithContext(context.Context) GetLoadBalancerListenerRulesListenerRuleArrayOutput
}

type GetLoadBalancerListenerRulesListenerRuleArray []GetLoadBalancerListenerRulesListenerRuleInput

func (GetLoadBalancerListenerRulesListenerRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLoadBalancerListenerRulesListenerRule)(nil)).Elem()
}

func (i GetLoadBalancerListenerRulesListenerRuleArray) ToGetLoadBalancerListenerRulesListenerRuleArrayOutput() GetLoadBalancerListenerRulesListenerRuleArrayOutput {
	return i.ToGetLoadBalancerListenerRulesListenerRuleArrayOutputWithContext(context.Background())
}

func (i GetLoadBalancerListenerRulesListenerRuleArray) ToGetLoadBalancerListenerRulesListenerRuleArrayOutputWithContext(ctx context.Context) GetLoadBalancerListenerRulesListenerRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLoadBalancerListenerRulesListenerRuleArrayOutput)
}

type GetLoadBalancerListenerRulesListenerRuleOutput struct{ *pulumi.OutputState }

func (GetLoadBalancerListenerRulesListenerRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLoadBalancerListenerRulesListenerRule)(nil)).Elem()
}

func (o GetLoadBalancerListenerRulesListenerRuleOutput) ToGetLoadBalancerListenerRulesListenerRuleOutput() GetLoadBalancerListenerRulesListenerRuleOutput {
	return o
}

func (o GetLoadBalancerListenerRulesListenerRuleOutput) ToGetLoadBalancerListenerRulesListenerRuleOutputWithContext(ctx context.Context) GetLoadBalancerListenerRulesListenerRuleOutput {
	return o
}

// The type of action for the rule (always `forward`).
func (o GetLoadBalancerListenerRulesListenerRuleOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancerListenerRulesListenerRule) string { return v.Action }).(pulumi.StringOutput)
}

// A host-name pattern for the rule, with a maximum length of 128 characters. This host-name pattern supports maximum three wildcards, and must not contain any special characters except `-.?`.
func (o GetLoadBalancerListenerRulesListenerRuleOutput) HostNamePattern() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancerListenerRulesListenerRule) string { return v.HostNamePattern }).(pulumi.StringOutput)
}

// The ID of the listener.
func (o GetLoadBalancerListenerRulesListenerRuleOutput) ListenerId() pulumi.IntOutput {
	return o.ApplyT(func(v GetLoadBalancerListenerRulesListenerRule) int { return v.ListenerId }).(pulumi.IntOutput)
}

// The ID of the listener rule.
func (o GetLoadBalancerListenerRulesListenerRuleOutput) ListenerRuleId() pulumi.IntOutput {
	return o.ApplyT(func(v GetLoadBalancerListenerRulesListenerRule) int { return v.ListenerRuleId }).(pulumi.IntOutput)
}

// A human-readable name for the listener rule.
func (o GetLoadBalancerListenerRulesListenerRuleOutput) ListenerRuleName() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancerListenerRulesListenerRule) string { return v.ListenerRuleName }).(pulumi.StringOutput)
}

// A path pattern for the rule, with a maximum length of 128 characters. This path pattern supports maximum three wildcards, and must not contain any special characters except `_-.$/~&quot;'@:+?`.
func (o GetLoadBalancerListenerRulesListenerRuleOutput) PathPattern() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancerListenerRulesListenerRule) string { return v.PathPattern }).(pulumi.StringOutput)
}

// The priority level of the listener rule, between `1` and `19999` both included. Each rule must have a unique priority level. Otherwise, an error is returned.
func (o GetLoadBalancerListenerRulesListenerRuleOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v GetLoadBalancerListenerRulesListenerRule) int { return v.Priority }).(pulumi.IntOutput)
}

// The IDs of the backend VMs.
func (o GetLoadBalancerListenerRulesListenerRuleOutput) VmIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetLoadBalancerListenerRulesListenerRule) []string { return v.VmIds }).(pulumi.StringArrayOutput)
}

type GetLoadBalancerListenerRulesListenerRuleArrayOutput struct{ *pulumi.OutputState }

func (GetLoadBalancerListenerRulesListenerRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLoadBalancerListenerRulesListenerRule)(nil)).Elem()
}

func (o GetLoadBalancerListenerRulesListenerRuleArrayOutput) ToGetLoadBalancerListenerRulesListenerRuleArrayOutput() GetLoadBalancerListenerRulesListenerRuleArrayOutput {
	return o
}

func (o GetLoadBalancerListenerRulesListenerRuleArrayOutput) ToGetLoadBalancerListenerRulesListenerRuleArrayOutputWithContext(ctx context.Context) GetLoadBalancerListenerRulesListenerRuleArrayOutput {
	return o
}

func (o GetLoadBalancerListenerRulesListenerRuleArrayOutput) Index(i pulumi.IntInput) GetLoadBalancerListenerRulesListenerRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLoadBalancerListenerRulesListenerRule {
		return vs[0].([]GetLoadBalancerListenerRulesListenerRule)[vs[1].(int)]
	}).(GetLoadBalancerListenerRulesListenerRuleOutput)
}

type GetLoadBalancerLoadBalancerStickyCookiePolicy struct {
	// The name of the stickiness policy.
	PolicyName string `pulumi:"policyName"`
}

// GetLoadBalancerLoadBalancerStickyCookiePolicyInput is an input type that accepts GetLoadBalancerLoadBalancerStickyCookiePolicyArgs and GetLoadBalancerLoadBalancerStickyCookiePolicyOutput values.
// You can construct a concrete instance of `GetLoadBalancerLoadBalancerStickyCookiePolicyInput` via:
//
//	GetLoadBalancerLoadBalancerStickyCookiePolicyArgs{...}
type GetLoadBalancerLoadBalancerStickyCookiePolicyInput interface {
	pulumi.Input

	ToGetLoadBalancerLoadBalancerStickyCookiePolicyOutput() GetLoadBalancerLoadBalancerStickyCookiePolicyOutput
	ToGetLoadBalancerLoadBalancerStickyCookiePolicyOutputWithContext(context.Context) GetLoadBalancerLoadBalancerStickyCookiePolicyOutput
}

type GetLoadBalancerLoadBalancerStickyCookiePolicyArgs struct {
	// The name of the stickiness policy.
	PolicyName pulumi.StringInput `pulumi:"policyName"`
}

func (GetLoadBalancerLoadBalancerStickyCookiePolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLoadBalancerLoadBalancerStickyCookiePolicy)(nil)).Elem()
}

func (i GetLoadBalancerLoadBalancerStickyCookiePolicyArgs) ToGetLoadBalancerLoadBalancerStickyCookiePolicyOutput() GetLoadBalancerLoadBalancerStickyCookiePolicyOutput {
	return i.ToGetLoadBalancerLoadBalancerStickyCookiePolicyOutputWithContext(context.Background())
}

func (i GetLoadBalancerLoadBalancerStickyCookiePolicyArgs) ToGetLoadBalancerLoadBalancerStickyCookiePolicyOutputWithContext(ctx context.Context) GetLoadBalancerLoadBalancerStickyCookiePolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLoadBalancerLoadBalancerStickyCookiePolicyOutput)
}

// GetLoadBalancerLoadBalancerStickyCookiePolicyArrayInput is an input type that accepts GetLoadBalancerLoadBalancerStickyCookiePolicyArray and GetLoadBalancerLoadBalancerStickyCookiePolicyArrayOutput values.
// You can construct a concrete instance of `GetLoadBalancerLoadBalancerStickyCookiePolicyArrayInput` via:
//
//	GetLoadBalancerLoadBalancerStickyCookiePolicyArray{ GetLoadBalancerLoadBalancerStickyCookiePolicyArgs{...} }
type GetLoadBalancerLoadBalancerStickyCookiePolicyArrayInput interface {
	pulumi.Input

	ToGetLoadBalancerLoadBalancerStickyCookiePolicyArrayOutput() GetLoadBalancerLoadBalancerStickyCookiePolicyArrayOutput
	ToGetLoadBalancerLoadBalancerStickyCookiePolicyArrayOutputWithContext(context.Context) GetLoadBalancerLoadBalancerStickyCookiePolicyArrayOutput
}

type GetLoadBalancerLoadBalancerStickyCookiePolicyArray []GetLoadBalancerLoadBalancerStickyCookiePolicyInput

func (GetLoadBalancerLoadBalancerStickyCookiePolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLoadBalancerLoadBalancerStickyCookiePolicy)(nil)).Elem()
}

func (i GetLoadBalancerLoadBalancerStickyCookiePolicyArray) ToGetLoadBalancerLoadBalancerStickyCookiePolicyArrayOutput() GetLoadBalancerLoadBalancerStickyCookiePolicyArrayOutput {
	return i.ToGetLoadBalancerLoadBalancerStickyCookiePolicyArrayOutputWithContext(context.Background())
}

func (i GetLoadBalancerLoadBalancerStickyCookiePolicyArray) ToGetLoadBalancerLoadBalancerStickyCookiePolicyArrayOutputWithContext(ctx context.Context) GetLoadBalancerLoadBalancerStickyCookiePolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLoadBalancerLoadBalancerStickyCookiePolicyArrayOutput)
}

type GetLoadBalancerLoadBalancerStickyCookiePolicyOutput struct{ *pulumi.OutputState }

func (GetLoadBalancerLoadBalancerStickyCookiePolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLoadBalancerLoadBalancerStickyCookiePolicy)(nil)).Elem()
}

func (o GetLoadBalancerLoadBalancerStickyCookiePolicyOutput) ToGetLoadBalancerLoadBalancerStickyCookiePolicyOutput() GetLoadBalancerLoadBalancerStickyCookiePolicyOutput {
	return o
}

func (o GetLoadBalancerLoadBalancerStickyCookiePolicyOutput) ToGetLoadBalancerLoadBalancerStickyCookiePolicyOutputWithContext(ctx context.Context) GetLoadBalancerLoadBalancerStickyCookiePolicyOutput {
	return o
}

// The name of the stickiness policy.
func (o GetLoadBalancerLoadBalancerStickyCookiePolicyOutput) PolicyName() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancerLoadBalancerStickyCookiePolicy) string { return v.PolicyName }).(pulumi.StringOutput)
}

type GetLoadBalancerLoadBalancerStickyCookiePolicyArrayOutput struct{ *pulumi.OutputState }

func (GetLoadBalancerLoadBalancerStickyCookiePolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLoadBalancerLoadBalancerStickyCookiePolicy)(nil)).Elem()
}

func (o GetLoadBalancerLoadBalancerStickyCookiePolicyArrayOutput) ToGetLoadBalancerLoadBalancerStickyCookiePolicyArrayOutput() GetLoadBalancerLoadBalancerStickyCookiePolicyArrayOutput {
	return o
}

func (o GetLoadBalancerLoadBalancerStickyCookiePolicyArrayOutput) ToGetLoadBalancerLoadBalancerStickyCookiePolicyArrayOutputWithContext(ctx context.Context) GetLoadBalancerLoadBalancerStickyCookiePolicyArrayOutput {
	return o
}

func (o GetLoadBalancerLoadBalancerStickyCookiePolicyArrayOutput) Index(i pulumi.IntInput) GetLoadBalancerLoadBalancerStickyCookiePolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLoadBalancerLoadBalancerStickyCookiePolicy {
		return vs[0].([]GetLoadBalancerLoadBalancerStickyCookiePolicy)[vs[1].(int)]
	}).(GetLoadBalancerLoadBalancerStickyCookiePolicyOutput)
}

type GetLoadBalancerSourceSecurityGroup struct {
	// The account ID of the owner of the security group.
	SecurityGroupAccountId string `pulumi:"securityGroupAccountId"`
	// The name of the security group.
	SecurityGroupName string `pulumi:"securityGroupName"`
}

// GetLoadBalancerSourceSecurityGroupInput is an input type that accepts GetLoadBalancerSourceSecurityGroupArgs and GetLoadBalancerSourceSecurityGroupOutput values.
// You can construct a concrete instance of `GetLoadBalancerSourceSecurityGroupInput` via:
//
//	GetLoadBalancerSourceSecurityGroupArgs{...}
type GetLoadBalancerSourceSecurityGroupInput interface {
	pulumi.Input

	ToGetLoadBalancerSourceSecurityGroupOutput() GetLoadBalancerSourceSecurityGroupOutput
	ToGetLoadBalancerSourceSecurityGroupOutputWithContext(context.Context) GetLoadBalancerSourceSecurityGroupOutput
}

type GetLoadBalancerSourceSecurityGroupArgs struct {
	// The account ID of the owner of the security group.
	SecurityGroupAccountId pulumi.StringInput `pulumi:"securityGroupAccountId"`
	// The name of the security group.
	SecurityGroupName pulumi.StringInput `pulumi:"securityGroupName"`
}

func (GetLoadBalancerSourceSecurityGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLoadBalancerSourceSecurityGroup)(nil)).Elem()
}

func (i GetLoadBalancerSourceSecurityGroupArgs) ToGetLoadBalancerSourceSecurityGroupOutput() GetLoadBalancerSourceSecurityGroupOutput {
	return i.ToGetLoadBalancerSourceSecurityGroupOutputWithContext(context.Background())
}

func (i GetLoadBalancerSourceSecurityGroupArgs) ToGetLoadBalancerSourceSecurityGroupOutputWithContext(ctx context.Context) GetLoadBalancerSourceSecurityGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLoadBalancerSourceSecurityGroupOutput)
}

// GetLoadBalancerSourceSecurityGroupArrayInput is an input type that accepts GetLoadBalancerSourceSecurityGroupArray and GetLoadBalancerSourceSecurityGroupArrayOutput values.
// You can construct a concrete instance of `GetLoadBalancerSourceSecurityGroupArrayInput` via:
//
//	GetLoadBalancerSourceSecurityGroupArray{ GetLoadBalancerSourceSecurityGroupArgs{...} }
type GetLoadBalancerSourceSecurityGroupArrayInput interface {
	pulumi.Input

	ToGetLoadBalancerSourceSecurityGroupArrayOutput() GetLoadBalancerSourceSecurityGroupArrayOutput
	ToGetLoadBalancerSourceSecurityGroupArrayOutputWithContext(context.Context) GetLoadBalancerSourceSecurityGroupArrayOutput
}

type GetLoadBalancerSourceSecurityGroupArray []GetLoadBalancerSourceSecurityGroupInput

func (GetLoadBalancerSourceSecurityGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLoadBalancerSourceSecurityGroup)(nil)).Elem()
}

func (i GetLoadBalancerSourceSecurityGroupArray) ToGetLoadBalancerSourceSecurityGroupArrayOutput() GetLoadBalancerSourceSecurityGroupArrayOutput {
	return i.ToGetLoadBalancerSourceSecurityGroupArrayOutputWithContext(context.Background())
}

func (i GetLoadBalancerSourceSecurityGroupArray) ToGetLoadBalancerSourceSecurityGroupArrayOutputWithContext(ctx context.Context) GetLoadBalancerSourceSecurityGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLoadBalancerSourceSecurityGroupArrayOutput)
}

type GetLoadBalancerSourceSecurityGroupOutput struct{ *pulumi.OutputState }

func (GetLoadBalancerSourceSecurityGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLoadBalancerSourceSecurityGroup)(nil)).Elem()
}

func (o GetLoadBalancerSourceSecurityGroupOutput) ToGetLoadBalancerSourceSecurityGroupOutput() GetLoadBalancerSourceSecurityGroupOutput {
	return o
}

func (o GetLoadBalancerSourceSecurityGroupOutput) ToGetLoadBalancerSourceSecurityGroupOutputWithContext(ctx context.Context) GetLoadBalancerSourceSecurityGroupOutput {
	return o
}

// The account ID of the owner of the security group.
func (o GetLoadBalancerSourceSecurityGroupOutput) SecurityGroupAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancerSourceSecurityGroup) string { return v.SecurityGroupAccountId }).(pulumi.StringOutput)
}

// The name of the security group.
func (o GetLoadBalancerSourceSecurityGroupOutput) SecurityGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancerSourceSecurityGroup) string { return v.SecurityGroupName }).(pulumi.StringOutput)
}

type GetLoadBalancerSourceSecurityGroupArrayOutput struct{ *pulumi.OutputState }

func (GetLoadBalancerSourceSecurityGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLoadBalancerSourceSecurityGroup)(nil)).Elem()
}

func (o GetLoadBalancerSourceSecurityGroupArrayOutput) ToGetLoadBalancerSourceSecurityGroupArrayOutput() GetLoadBalancerSourceSecurityGroupArrayOutput {
	return o
}

func (o GetLoadBalancerSourceSecurityGroupArrayOutput) ToGetLoadBalancerSourceSecurityGroupArrayOutputWithContext(ctx context.Context) GetLoadBalancerSourceSecurityGroupArrayOutput {
	return o
}

func (o GetLoadBalancerSourceSecurityGroupArrayOutput) Index(i pulumi.IntInput) GetLoadBalancerSourceSecurityGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLoadBalancerSourceSecurityGroup {
		return vs[0].([]GetLoadBalancerSourceSecurityGroup)[vs[1].(int)]
	}).(GetLoadBalancerSourceSecurityGroupOutput)
}

type GetLoadBalancerTag struct {
	// The key of the tag, with a minimum of 1 character.
	Key string `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value string `pulumi:"value"`
}

// GetLoadBalancerTagInput is an input type that accepts GetLoadBalancerTagArgs and GetLoadBalancerTagOutput values.
// You can construct a concrete instance of `GetLoadBalancerTagInput` via:
//
//	GetLoadBalancerTagArgs{...}
type GetLoadBalancerTagInput interface {
	pulumi.Input

	ToGetLoadBalancerTagOutput() GetLoadBalancerTagOutput
	ToGetLoadBalancerTagOutputWithContext(context.Context) GetLoadBalancerTagOutput
}

type GetLoadBalancerTagArgs struct {
	// The key of the tag, with a minimum of 1 character.
	Key pulumi.StringInput `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetLoadBalancerTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLoadBalancerTag)(nil)).Elem()
}

func (i GetLoadBalancerTagArgs) ToGetLoadBalancerTagOutput() GetLoadBalancerTagOutput {
	return i.ToGetLoadBalancerTagOutputWithContext(context.Background())
}

func (i GetLoadBalancerTagArgs) ToGetLoadBalancerTagOutputWithContext(ctx context.Context) GetLoadBalancerTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLoadBalancerTagOutput)
}

// GetLoadBalancerTagArrayInput is an input type that accepts GetLoadBalancerTagArray and GetLoadBalancerTagArrayOutput values.
// You can construct a concrete instance of `GetLoadBalancerTagArrayInput` via:
//
//	GetLoadBalancerTagArray{ GetLoadBalancerTagArgs{...} }
type GetLoadBalancerTagArrayInput interface {
	pulumi.Input

	ToGetLoadBalancerTagArrayOutput() GetLoadBalancerTagArrayOutput
	ToGetLoadBalancerTagArrayOutputWithContext(context.Context) GetLoadBalancerTagArrayOutput
}

type GetLoadBalancerTagArray []GetLoadBalancerTagInput

func (GetLoadBalancerTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLoadBalancerTag)(nil)).Elem()
}

func (i GetLoadBalancerTagArray) ToGetLoadBalancerTagArrayOutput() GetLoadBalancerTagArrayOutput {
	return i.ToGetLoadBalancerTagArrayOutputWithContext(context.Background())
}

func (i GetLoadBalancerTagArray) ToGetLoadBalancerTagArrayOutputWithContext(ctx context.Context) GetLoadBalancerTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLoadBalancerTagArrayOutput)
}

type GetLoadBalancerTagOutput struct{ *pulumi.OutputState }

func (GetLoadBalancerTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLoadBalancerTag)(nil)).Elem()
}

func (o GetLoadBalancerTagOutput) ToGetLoadBalancerTagOutput() GetLoadBalancerTagOutput {
	return o
}

func (o GetLoadBalancerTagOutput) ToGetLoadBalancerTagOutputWithContext(ctx context.Context) GetLoadBalancerTagOutput {
	return o
}

// The key of the tag, with a minimum of 1 character.
func (o GetLoadBalancerTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancerTag) string { return v.Key }).(pulumi.StringOutput)
}

// The value of the tag, between 0 and 255 characters.
func (o GetLoadBalancerTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancerTag) string { return v.Value }).(pulumi.StringOutput)
}

type GetLoadBalancerTagArrayOutput struct{ *pulumi.OutputState }

func (GetLoadBalancerTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLoadBalancerTag)(nil)).Elem()
}

func (o GetLoadBalancerTagArrayOutput) ToGetLoadBalancerTagArrayOutput() GetLoadBalancerTagArrayOutput {
	return o
}

func (o GetLoadBalancerTagArrayOutput) ToGetLoadBalancerTagArrayOutputWithContext(ctx context.Context) GetLoadBalancerTagArrayOutput {
	return o
}

func (o GetLoadBalancerTagArrayOutput) Index(i pulumi.IntInput) GetLoadBalancerTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLoadBalancerTag {
		return vs[0].([]GetLoadBalancerTag)[vs[1].(int)]
	}).(GetLoadBalancerTagOutput)
}

type GetLoadBalancerTagsFilter struct {
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// GetLoadBalancerTagsFilterInput is an input type that accepts GetLoadBalancerTagsFilterArgs and GetLoadBalancerTagsFilterOutput values.
// You can construct a concrete instance of `GetLoadBalancerTagsFilterInput` via:
//
//	GetLoadBalancerTagsFilterArgs{...}
type GetLoadBalancerTagsFilterInput interface {
	pulumi.Input

	ToGetLoadBalancerTagsFilterOutput() GetLoadBalancerTagsFilterOutput
	ToGetLoadBalancerTagsFilterOutputWithContext(context.Context) GetLoadBalancerTagsFilterOutput
}

type GetLoadBalancerTagsFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetLoadBalancerTagsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLoadBalancerTagsFilter)(nil)).Elem()
}

func (i GetLoadBalancerTagsFilterArgs) ToGetLoadBalancerTagsFilterOutput() GetLoadBalancerTagsFilterOutput {
	return i.ToGetLoadBalancerTagsFilterOutputWithContext(context.Background())
}

func (i GetLoadBalancerTagsFilterArgs) ToGetLoadBalancerTagsFilterOutputWithContext(ctx context.Context) GetLoadBalancerTagsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLoadBalancerTagsFilterOutput)
}

// GetLoadBalancerTagsFilterArrayInput is an input type that accepts GetLoadBalancerTagsFilterArray and GetLoadBalancerTagsFilterArrayOutput values.
// You can construct a concrete instance of `GetLoadBalancerTagsFilterArrayInput` via:
//
//	GetLoadBalancerTagsFilterArray{ GetLoadBalancerTagsFilterArgs{...} }
type GetLoadBalancerTagsFilterArrayInput interface {
	pulumi.Input

	ToGetLoadBalancerTagsFilterArrayOutput() GetLoadBalancerTagsFilterArrayOutput
	ToGetLoadBalancerTagsFilterArrayOutputWithContext(context.Context) GetLoadBalancerTagsFilterArrayOutput
}

type GetLoadBalancerTagsFilterArray []GetLoadBalancerTagsFilterInput

func (GetLoadBalancerTagsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLoadBalancerTagsFilter)(nil)).Elem()
}

func (i GetLoadBalancerTagsFilterArray) ToGetLoadBalancerTagsFilterArrayOutput() GetLoadBalancerTagsFilterArrayOutput {
	return i.ToGetLoadBalancerTagsFilterArrayOutputWithContext(context.Background())
}

func (i GetLoadBalancerTagsFilterArray) ToGetLoadBalancerTagsFilterArrayOutputWithContext(ctx context.Context) GetLoadBalancerTagsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLoadBalancerTagsFilterArrayOutput)
}

type GetLoadBalancerTagsFilterOutput struct{ *pulumi.OutputState }

func (GetLoadBalancerTagsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLoadBalancerTagsFilter)(nil)).Elem()
}

func (o GetLoadBalancerTagsFilterOutput) ToGetLoadBalancerTagsFilterOutput() GetLoadBalancerTagsFilterOutput {
	return o
}

func (o GetLoadBalancerTagsFilterOutput) ToGetLoadBalancerTagsFilterOutputWithContext(ctx context.Context) GetLoadBalancerTagsFilterOutput {
	return o
}

func (o GetLoadBalancerTagsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancerTagsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetLoadBalancerTagsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetLoadBalancerTagsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetLoadBalancerTagsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetLoadBalancerTagsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLoadBalancerTagsFilter)(nil)).Elem()
}

func (o GetLoadBalancerTagsFilterArrayOutput) ToGetLoadBalancerTagsFilterArrayOutput() GetLoadBalancerTagsFilterArrayOutput {
	return o
}

func (o GetLoadBalancerTagsFilterArrayOutput) ToGetLoadBalancerTagsFilterArrayOutputWithContext(ctx context.Context) GetLoadBalancerTagsFilterArrayOutput {
	return o
}

func (o GetLoadBalancerTagsFilterArrayOutput) Index(i pulumi.IntInput) GetLoadBalancerTagsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLoadBalancerTagsFilter {
		return vs[0].([]GetLoadBalancerTagsFilter)[vs[1].(int)]
	}).(GetLoadBalancerTagsFilterOutput)
}

type GetLoadBalancerTagsTag struct {
	Key              string `pulumi:"key"`
	LoadBalancerName string `pulumi:"loadBalancerName"`
	Value            string `pulumi:"value"`
}

// GetLoadBalancerTagsTagInput is an input type that accepts GetLoadBalancerTagsTagArgs and GetLoadBalancerTagsTagOutput values.
// You can construct a concrete instance of `GetLoadBalancerTagsTagInput` via:
//
//	GetLoadBalancerTagsTagArgs{...}
type GetLoadBalancerTagsTagInput interface {
	pulumi.Input

	ToGetLoadBalancerTagsTagOutput() GetLoadBalancerTagsTagOutput
	ToGetLoadBalancerTagsTagOutputWithContext(context.Context) GetLoadBalancerTagsTagOutput
}

type GetLoadBalancerTagsTagArgs struct {
	Key              pulumi.StringInput `pulumi:"key"`
	LoadBalancerName pulumi.StringInput `pulumi:"loadBalancerName"`
	Value            pulumi.StringInput `pulumi:"value"`
}

func (GetLoadBalancerTagsTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLoadBalancerTagsTag)(nil)).Elem()
}

func (i GetLoadBalancerTagsTagArgs) ToGetLoadBalancerTagsTagOutput() GetLoadBalancerTagsTagOutput {
	return i.ToGetLoadBalancerTagsTagOutputWithContext(context.Background())
}

func (i GetLoadBalancerTagsTagArgs) ToGetLoadBalancerTagsTagOutputWithContext(ctx context.Context) GetLoadBalancerTagsTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLoadBalancerTagsTagOutput)
}

// GetLoadBalancerTagsTagArrayInput is an input type that accepts GetLoadBalancerTagsTagArray and GetLoadBalancerTagsTagArrayOutput values.
// You can construct a concrete instance of `GetLoadBalancerTagsTagArrayInput` via:
//
//	GetLoadBalancerTagsTagArray{ GetLoadBalancerTagsTagArgs{...} }
type GetLoadBalancerTagsTagArrayInput interface {
	pulumi.Input

	ToGetLoadBalancerTagsTagArrayOutput() GetLoadBalancerTagsTagArrayOutput
	ToGetLoadBalancerTagsTagArrayOutputWithContext(context.Context) GetLoadBalancerTagsTagArrayOutput
}

type GetLoadBalancerTagsTagArray []GetLoadBalancerTagsTagInput

func (GetLoadBalancerTagsTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLoadBalancerTagsTag)(nil)).Elem()
}

func (i GetLoadBalancerTagsTagArray) ToGetLoadBalancerTagsTagArrayOutput() GetLoadBalancerTagsTagArrayOutput {
	return i.ToGetLoadBalancerTagsTagArrayOutputWithContext(context.Background())
}

func (i GetLoadBalancerTagsTagArray) ToGetLoadBalancerTagsTagArrayOutputWithContext(ctx context.Context) GetLoadBalancerTagsTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLoadBalancerTagsTagArrayOutput)
}

type GetLoadBalancerTagsTagOutput struct{ *pulumi.OutputState }

func (GetLoadBalancerTagsTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLoadBalancerTagsTag)(nil)).Elem()
}

func (o GetLoadBalancerTagsTagOutput) ToGetLoadBalancerTagsTagOutput() GetLoadBalancerTagsTagOutput {
	return o
}

func (o GetLoadBalancerTagsTagOutput) ToGetLoadBalancerTagsTagOutputWithContext(ctx context.Context) GetLoadBalancerTagsTagOutput {
	return o
}

func (o GetLoadBalancerTagsTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancerTagsTag) string { return v.Key }).(pulumi.StringOutput)
}

func (o GetLoadBalancerTagsTagOutput) LoadBalancerName() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancerTagsTag) string { return v.LoadBalancerName }).(pulumi.StringOutput)
}

func (o GetLoadBalancerTagsTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancerTagsTag) string { return v.Value }).(pulumi.StringOutput)
}

type GetLoadBalancerTagsTagArrayOutput struct{ *pulumi.OutputState }

func (GetLoadBalancerTagsTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLoadBalancerTagsTag)(nil)).Elem()
}

func (o GetLoadBalancerTagsTagArrayOutput) ToGetLoadBalancerTagsTagArrayOutput() GetLoadBalancerTagsTagArrayOutput {
	return o
}

func (o GetLoadBalancerTagsTagArrayOutput) ToGetLoadBalancerTagsTagArrayOutputWithContext(ctx context.Context) GetLoadBalancerTagsTagArrayOutput {
	return o
}

func (o GetLoadBalancerTagsTagArrayOutput) Index(i pulumi.IntInput) GetLoadBalancerTagsTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLoadBalancerTagsTag {
		return vs[0].([]GetLoadBalancerTagsTag)[vs[1].(int)]
	}).(GetLoadBalancerTagsTagOutput)
}

type GetLoadBalancerVmHealthBackendVmHealth struct {
	// The description of the state of the backend VM.
	Description string `pulumi:"description"`
	// The state of the backend VM (`InService` \| `OutOfService` \| `Unknown`).
	State string `pulumi:"state"`
	// Information about the cause of `OutOfService` VMs.<br />
	// Specifically, whether the cause is Elastic Load Balancing or the VM (`ELB` \| `Instance` \| `N/A`).
	StateReason string `pulumi:"stateReason"`
	// The ID of the backend VM.
	VmId string `pulumi:"vmId"`
}

// GetLoadBalancerVmHealthBackendVmHealthInput is an input type that accepts GetLoadBalancerVmHealthBackendVmHealthArgs and GetLoadBalancerVmHealthBackendVmHealthOutput values.
// You can construct a concrete instance of `GetLoadBalancerVmHealthBackendVmHealthInput` via:
//
//	GetLoadBalancerVmHealthBackendVmHealthArgs{...}
type GetLoadBalancerVmHealthBackendVmHealthInput interface {
	pulumi.Input

	ToGetLoadBalancerVmHealthBackendVmHealthOutput() GetLoadBalancerVmHealthBackendVmHealthOutput
	ToGetLoadBalancerVmHealthBackendVmHealthOutputWithContext(context.Context) GetLoadBalancerVmHealthBackendVmHealthOutput
}

type GetLoadBalancerVmHealthBackendVmHealthArgs struct {
	// The description of the state of the backend VM.
	Description pulumi.StringInput `pulumi:"description"`
	// The state of the backend VM (`InService` \| `OutOfService` \| `Unknown`).
	State pulumi.StringInput `pulumi:"state"`
	// Information about the cause of `OutOfService` VMs.<br />
	// Specifically, whether the cause is Elastic Load Balancing or the VM (`ELB` \| `Instance` \| `N/A`).
	StateReason pulumi.StringInput `pulumi:"stateReason"`
	// The ID of the backend VM.
	VmId pulumi.StringInput `pulumi:"vmId"`
}

func (GetLoadBalancerVmHealthBackendVmHealthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLoadBalancerVmHealthBackendVmHealth)(nil)).Elem()
}

func (i GetLoadBalancerVmHealthBackendVmHealthArgs) ToGetLoadBalancerVmHealthBackendVmHealthOutput() GetLoadBalancerVmHealthBackendVmHealthOutput {
	return i.ToGetLoadBalancerVmHealthBackendVmHealthOutputWithContext(context.Background())
}

func (i GetLoadBalancerVmHealthBackendVmHealthArgs) ToGetLoadBalancerVmHealthBackendVmHealthOutputWithContext(ctx context.Context) GetLoadBalancerVmHealthBackendVmHealthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLoadBalancerVmHealthBackendVmHealthOutput)
}

// GetLoadBalancerVmHealthBackendVmHealthArrayInput is an input type that accepts GetLoadBalancerVmHealthBackendVmHealthArray and GetLoadBalancerVmHealthBackendVmHealthArrayOutput values.
// You can construct a concrete instance of `GetLoadBalancerVmHealthBackendVmHealthArrayInput` via:
//
//	GetLoadBalancerVmHealthBackendVmHealthArray{ GetLoadBalancerVmHealthBackendVmHealthArgs{...} }
type GetLoadBalancerVmHealthBackendVmHealthArrayInput interface {
	pulumi.Input

	ToGetLoadBalancerVmHealthBackendVmHealthArrayOutput() GetLoadBalancerVmHealthBackendVmHealthArrayOutput
	ToGetLoadBalancerVmHealthBackendVmHealthArrayOutputWithContext(context.Context) GetLoadBalancerVmHealthBackendVmHealthArrayOutput
}

type GetLoadBalancerVmHealthBackendVmHealthArray []GetLoadBalancerVmHealthBackendVmHealthInput

func (GetLoadBalancerVmHealthBackendVmHealthArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLoadBalancerVmHealthBackendVmHealth)(nil)).Elem()
}

func (i GetLoadBalancerVmHealthBackendVmHealthArray) ToGetLoadBalancerVmHealthBackendVmHealthArrayOutput() GetLoadBalancerVmHealthBackendVmHealthArrayOutput {
	return i.ToGetLoadBalancerVmHealthBackendVmHealthArrayOutputWithContext(context.Background())
}

func (i GetLoadBalancerVmHealthBackendVmHealthArray) ToGetLoadBalancerVmHealthBackendVmHealthArrayOutputWithContext(ctx context.Context) GetLoadBalancerVmHealthBackendVmHealthArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLoadBalancerVmHealthBackendVmHealthArrayOutput)
}

type GetLoadBalancerVmHealthBackendVmHealthOutput struct{ *pulumi.OutputState }

func (GetLoadBalancerVmHealthBackendVmHealthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLoadBalancerVmHealthBackendVmHealth)(nil)).Elem()
}

func (o GetLoadBalancerVmHealthBackendVmHealthOutput) ToGetLoadBalancerVmHealthBackendVmHealthOutput() GetLoadBalancerVmHealthBackendVmHealthOutput {
	return o
}

func (o GetLoadBalancerVmHealthBackendVmHealthOutput) ToGetLoadBalancerVmHealthBackendVmHealthOutputWithContext(ctx context.Context) GetLoadBalancerVmHealthBackendVmHealthOutput {
	return o
}

// The description of the state of the backend VM.
func (o GetLoadBalancerVmHealthBackendVmHealthOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancerVmHealthBackendVmHealth) string { return v.Description }).(pulumi.StringOutput)
}

// The state of the backend VM (`InService` \| `OutOfService` \| `Unknown`).
func (o GetLoadBalancerVmHealthBackendVmHealthOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancerVmHealthBackendVmHealth) string { return v.State }).(pulumi.StringOutput)
}

// Information about the cause of `OutOfService` VMs.<br />
// Specifically, whether the cause is Elastic Load Balancing or the VM (`ELB` \| `Instance` \| `N/A`).
func (o GetLoadBalancerVmHealthBackendVmHealthOutput) StateReason() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancerVmHealthBackendVmHealth) string { return v.StateReason }).(pulumi.StringOutput)
}

// The ID of the backend VM.
func (o GetLoadBalancerVmHealthBackendVmHealthOutput) VmId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancerVmHealthBackendVmHealth) string { return v.VmId }).(pulumi.StringOutput)
}

type GetLoadBalancerVmHealthBackendVmHealthArrayOutput struct{ *pulumi.OutputState }

func (GetLoadBalancerVmHealthBackendVmHealthArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLoadBalancerVmHealthBackendVmHealth)(nil)).Elem()
}

func (o GetLoadBalancerVmHealthBackendVmHealthArrayOutput) ToGetLoadBalancerVmHealthBackendVmHealthArrayOutput() GetLoadBalancerVmHealthBackendVmHealthArrayOutput {
	return o
}

func (o GetLoadBalancerVmHealthBackendVmHealthArrayOutput) ToGetLoadBalancerVmHealthBackendVmHealthArrayOutputWithContext(ctx context.Context) GetLoadBalancerVmHealthBackendVmHealthArrayOutput {
	return o
}

func (o GetLoadBalancerVmHealthBackendVmHealthArrayOutput) Index(i pulumi.IntInput) GetLoadBalancerVmHealthBackendVmHealthOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLoadBalancerVmHealthBackendVmHealth {
		return vs[0].([]GetLoadBalancerVmHealthBackendVmHealth)[vs[1].(int)]
	}).(GetLoadBalancerVmHealthBackendVmHealthOutput)
}

type GetLoadBalancerVmHealthFilter struct {
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// GetLoadBalancerVmHealthFilterInput is an input type that accepts GetLoadBalancerVmHealthFilterArgs and GetLoadBalancerVmHealthFilterOutput values.
// You can construct a concrete instance of `GetLoadBalancerVmHealthFilterInput` via:
//
//	GetLoadBalancerVmHealthFilterArgs{...}
type GetLoadBalancerVmHealthFilterInput interface {
	pulumi.Input

	ToGetLoadBalancerVmHealthFilterOutput() GetLoadBalancerVmHealthFilterOutput
	ToGetLoadBalancerVmHealthFilterOutputWithContext(context.Context) GetLoadBalancerVmHealthFilterOutput
}

type GetLoadBalancerVmHealthFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetLoadBalancerVmHealthFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLoadBalancerVmHealthFilter)(nil)).Elem()
}

func (i GetLoadBalancerVmHealthFilterArgs) ToGetLoadBalancerVmHealthFilterOutput() GetLoadBalancerVmHealthFilterOutput {
	return i.ToGetLoadBalancerVmHealthFilterOutputWithContext(context.Background())
}

func (i GetLoadBalancerVmHealthFilterArgs) ToGetLoadBalancerVmHealthFilterOutputWithContext(ctx context.Context) GetLoadBalancerVmHealthFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLoadBalancerVmHealthFilterOutput)
}

// GetLoadBalancerVmHealthFilterArrayInput is an input type that accepts GetLoadBalancerVmHealthFilterArray and GetLoadBalancerVmHealthFilterArrayOutput values.
// You can construct a concrete instance of `GetLoadBalancerVmHealthFilterArrayInput` via:
//
//	GetLoadBalancerVmHealthFilterArray{ GetLoadBalancerVmHealthFilterArgs{...} }
type GetLoadBalancerVmHealthFilterArrayInput interface {
	pulumi.Input

	ToGetLoadBalancerVmHealthFilterArrayOutput() GetLoadBalancerVmHealthFilterArrayOutput
	ToGetLoadBalancerVmHealthFilterArrayOutputWithContext(context.Context) GetLoadBalancerVmHealthFilterArrayOutput
}

type GetLoadBalancerVmHealthFilterArray []GetLoadBalancerVmHealthFilterInput

func (GetLoadBalancerVmHealthFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLoadBalancerVmHealthFilter)(nil)).Elem()
}

func (i GetLoadBalancerVmHealthFilterArray) ToGetLoadBalancerVmHealthFilterArrayOutput() GetLoadBalancerVmHealthFilterArrayOutput {
	return i.ToGetLoadBalancerVmHealthFilterArrayOutputWithContext(context.Background())
}

func (i GetLoadBalancerVmHealthFilterArray) ToGetLoadBalancerVmHealthFilterArrayOutputWithContext(ctx context.Context) GetLoadBalancerVmHealthFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLoadBalancerVmHealthFilterArrayOutput)
}

type GetLoadBalancerVmHealthFilterOutput struct{ *pulumi.OutputState }

func (GetLoadBalancerVmHealthFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLoadBalancerVmHealthFilter)(nil)).Elem()
}

func (o GetLoadBalancerVmHealthFilterOutput) ToGetLoadBalancerVmHealthFilterOutput() GetLoadBalancerVmHealthFilterOutput {
	return o
}

func (o GetLoadBalancerVmHealthFilterOutput) ToGetLoadBalancerVmHealthFilterOutputWithContext(ctx context.Context) GetLoadBalancerVmHealthFilterOutput {
	return o
}

func (o GetLoadBalancerVmHealthFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancerVmHealthFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetLoadBalancerVmHealthFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetLoadBalancerVmHealthFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetLoadBalancerVmHealthFilterArrayOutput struct{ *pulumi.OutputState }

func (GetLoadBalancerVmHealthFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLoadBalancerVmHealthFilter)(nil)).Elem()
}

func (o GetLoadBalancerVmHealthFilterArrayOutput) ToGetLoadBalancerVmHealthFilterArrayOutput() GetLoadBalancerVmHealthFilterArrayOutput {
	return o
}

func (o GetLoadBalancerVmHealthFilterArrayOutput) ToGetLoadBalancerVmHealthFilterArrayOutputWithContext(ctx context.Context) GetLoadBalancerVmHealthFilterArrayOutput {
	return o
}

func (o GetLoadBalancerVmHealthFilterArrayOutput) Index(i pulumi.IntInput) GetLoadBalancerVmHealthFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLoadBalancerVmHealthFilter {
		return vs[0].([]GetLoadBalancerVmHealthFilter)[vs[1].(int)]
	}).(GetLoadBalancerVmHealthFilterOutput)
}

type GetLoadBalancersFilter struct {
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// GetLoadBalancersFilterInput is an input type that accepts GetLoadBalancersFilterArgs and GetLoadBalancersFilterOutput values.
// You can construct a concrete instance of `GetLoadBalancersFilterInput` via:
//
//	GetLoadBalancersFilterArgs{...}
type GetLoadBalancersFilterInput interface {
	pulumi.Input

	ToGetLoadBalancersFilterOutput() GetLoadBalancersFilterOutput
	ToGetLoadBalancersFilterOutputWithContext(context.Context) GetLoadBalancersFilterOutput
}

type GetLoadBalancersFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetLoadBalancersFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLoadBalancersFilter)(nil)).Elem()
}

func (i GetLoadBalancersFilterArgs) ToGetLoadBalancersFilterOutput() GetLoadBalancersFilterOutput {
	return i.ToGetLoadBalancersFilterOutputWithContext(context.Background())
}

func (i GetLoadBalancersFilterArgs) ToGetLoadBalancersFilterOutputWithContext(ctx context.Context) GetLoadBalancersFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLoadBalancersFilterOutput)
}

// GetLoadBalancersFilterArrayInput is an input type that accepts GetLoadBalancersFilterArray and GetLoadBalancersFilterArrayOutput values.
// You can construct a concrete instance of `GetLoadBalancersFilterArrayInput` via:
//
//	GetLoadBalancersFilterArray{ GetLoadBalancersFilterArgs{...} }
type GetLoadBalancersFilterArrayInput interface {
	pulumi.Input

	ToGetLoadBalancersFilterArrayOutput() GetLoadBalancersFilterArrayOutput
	ToGetLoadBalancersFilterArrayOutputWithContext(context.Context) GetLoadBalancersFilterArrayOutput
}

type GetLoadBalancersFilterArray []GetLoadBalancersFilterInput

func (GetLoadBalancersFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLoadBalancersFilter)(nil)).Elem()
}

func (i GetLoadBalancersFilterArray) ToGetLoadBalancersFilterArrayOutput() GetLoadBalancersFilterArrayOutput {
	return i.ToGetLoadBalancersFilterArrayOutputWithContext(context.Background())
}

func (i GetLoadBalancersFilterArray) ToGetLoadBalancersFilterArrayOutputWithContext(ctx context.Context) GetLoadBalancersFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLoadBalancersFilterArrayOutput)
}

type GetLoadBalancersFilterOutput struct{ *pulumi.OutputState }

func (GetLoadBalancersFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLoadBalancersFilter)(nil)).Elem()
}

func (o GetLoadBalancersFilterOutput) ToGetLoadBalancersFilterOutput() GetLoadBalancersFilterOutput {
	return o
}

func (o GetLoadBalancersFilterOutput) ToGetLoadBalancersFilterOutputWithContext(ctx context.Context) GetLoadBalancersFilterOutput {
	return o
}

func (o GetLoadBalancersFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancersFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetLoadBalancersFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetLoadBalancersFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetLoadBalancersFilterArrayOutput struct{ *pulumi.OutputState }

func (GetLoadBalancersFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLoadBalancersFilter)(nil)).Elem()
}

func (o GetLoadBalancersFilterArrayOutput) ToGetLoadBalancersFilterArrayOutput() GetLoadBalancersFilterArrayOutput {
	return o
}

func (o GetLoadBalancersFilterArrayOutput) ToGetLoadBalancersFilterArrayOutputWithContext(ctx context.Context) GetLoadBalancersFilterArrayOutput {
	return o
}

func (o GetLoadBalancersFilterArrayOutput) Index(i pulumi.IntInput) GetLoadBalancersFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLoadBalancersFilter {
		return vs[0].([]GetLoadBalancersFilter)[vs[1].(int)]
	}).(GetLoadBalancersFilterOutput)
}

type GetLoadBalancersLoadBalancer struct {
	// Information about access logs.
	AccessLogs []GetLoadBalancersLoadBalancerAccessLog `pulumi:"accessLogs"`
	// The stickiness policies defined for the load balancer.
	ApplicationStickyCookiePolicies []GetLoadBalancersLoadBalancerApplicationStickyCookiePolicy `pulumi:"applicationStickyCookiePolicies"`
	BackendIps                      []string                                                    `pulumi:"backendIps"`
	// One or more IDs of backend VMs for the load balancer.
	BackendVmIds []GetLoadBalancersLoadBalancerBackendVmId `pulumi:"backendVmIds"`
	// The DNS name of the load balancer.
	DnsName string `pulumi:"dnsName"`
	// Information about the health check configuration.
	HealthChecks []GetLoadBalancersLoadBalancerHealthCheck `pulumi:"healthChecks"`
	// The listeners for the load balancer.
	Listeners []GetLoadBalancersLoadBalancerListener `pulumi:"listeners"`
	// The name of the load balancer.
	LoadBalancerName string `pulumi:"loadBalancerName"`
	// The policies defined for the load balancer.
	LoadBalancerStickyCookiePolicies []GetLoadBalancersLoadBalancerLoadBalancerStickyCookiePolicy `pulumi:"loadBalancerStickyCookiePolicies"`
	// The type of load balancer. Valid only for load balancers in a Net.<br />
	// If `loadBalancerType` is `internet-facing`, the load balancer has a public DNS name that resolves to a public IP.<br />
	// If `loadBalancerType` is `internal`, the load balancer has a public DNS name that resolves to a private IP.
	LoadBalancerType string `pulumi:"loadBalancerType"`
	// The ID of the Net for the load balancer.
	NetId string `pulumi:"netId"`
	// (internet-facing only) The public IP associated with the load balancer.
	PublicIp string `pulumi:"publicIp"`
	// Whether secure cookies are enabled for the load balancer.
	SecuredCookies bool `pulumi:"securedCookies"`
	// One or more IDs of security groups for the load balancers. Valid only for load balancers in a Net.
	SecurityGroups []string `pulumi:"securityGroups"`
	// Information about the source security group of the load balancer, which you can use as part of your inbound rules for your registered VMs.<br />
	// To only allow traffic from load balancers, add a security group rule that specifies this source security group as the inbound source.
	SourceSecurityGroups []GetLoadBalancersLoadBalancerSourceSecurityGroup `pulumi:"sourceSecurityGroups"`
	SubnetIds            []string                                          `pulumi:"subnetIds"`
	// The ID of the Subregion in which the load balancer was created.
	SubregionNames []string `pulumi:"subregionNames"`
	// One or more tags associated with the load balancer.
	Tags []GetLoadBalancersLoadBalancerTag `pulumi:"tags"`
}

// GetLoadBalancersLoadBalancerInput is an input type that accepts GetLoadBalancersLoadBalancerArgs and GetLoadBalancersLoadBalancerOutput values.
// You can construct a concrete instance of `GetLoadBalancersLoadBalancerInput` via:
//
//	GetLoadBalancersLoadBalancerArgs{...}
type GetLoadBalancersLoadBalancerInput interface {
	pulumi.Input

	ToGetLoadBalancersLoadBalancerOutput() GetLoadBalancersLoadBalancerOutput
	ToGetLoadBalancersLoadBalancerOutputWithContext(context.Context) GetLoadBalancersLoadBalancerOutput
}

type GetLoadBalancersLoadBalancerArgs struct {
	// Information about access logs.
	AccessLogs GetLoadBalancersLoadBalancerAccessLogArrayInput `pulumi:"accessLogs"`
	// The stickiness policies defined for the load balancer.
	ApplicationStickyCookiePolicies GetLoadBalancersLoadBalancerApplicationStickyCookiePolicyArrayInput `pulumi:"applicationStickyCookiePolicies"`
	BackendIps                      pulumi.StringArrayInput                                             `pulumi:"backendIps"`
	// One or more IDs of backend VMs for the load balancer.
	BackendVmIds GetLoadBalancersLoadBalancerBackendVmIdArrayInput `pulumi:"backendVmIds"`
	// The DNS name of the load balancer.
	DnsName pulumi.StringInput `pulumi:"dnsName"`
	// Information about the health check configuration.
	HealthChecks GetLoadBalancersLoadBalancerHealthCheckArrayInput `pulumi:"healthChecks"`
	// The listeners for the load balancer.
	Listeners GetLoadBalancersLoadBalancerListenerArrayInput `pulumi:"listeners"`
	// The name of the load balancer.
	LoadBalancerName pulumi.StringInput `pulumi:"loadBalancerName"`
	// The policies defined for the load balancer.
	LoadBalancerStickyCookiePolicies GetLoadBalancersLoadBalancerLoadBalancerStickyCookiePolicyArrayInput `pulumi:"loadBalancerStickyCookiePolicies"`
	// The type of load balancer. Valid only for load balancers in a Net.<br />
	// If `loadBalancerType` is `internet-facing`, the load balancer has a public DNS name that resolves to a public IP.<br />
	// If `loadBalancerType` is `internal`, the load balancer has a public DNS name that resolves to a private IP.
	LoadBalancerType pulumi.StringInput `pulumi:"loadBalancerType"`
	// The ID of the Net for the load balancer.
	NetId pulumi.StringInput `pulumi:"netId"`
	// (internet-facing only) The public IP associated with the load balancer.
	PublicIp pulumi.StringInput `pulumi:"publicIp"`
	// Whether secure cookies are enabled for the load balancer.
	SecuredCookies pulumi.BoolInput `pulumi:"securedCookies"`
	// One or more IDs of security groups for the load balancers. Valid only for load balancers in a Net.
	SecurityGroups pulumi.StringArrayInput `pulumi:"securityGroups"`
	// Information about the source security group of the load balancer, which you can use as part of your inbound rules for your registered VMs.<br />
	// To only allow traffic from load balancers, add a security group rule that specifies this source security group as the inbound source.
	SourceSecurityGroups GetLoadBalancersLoadBalancerSourceSecurityGroupArrayInput `pulumi:"sourceSecurityGroups"`
	SubnetIds            pulumi.StringArrayInput                                   `pulumi:"subnetIds"`
	// The ID of the Subregion in which the load balancer was created.
	SubregionNames pulumi.StringArrayInput `pulumi:"subregionNames"`
	// One or more tags associated with the load balancer.
	Tags GetLoadBalancersLoadBalancerTagArrayInput `pulumi:"tags"`
}

func (GetLoadBalancersLoadBalancerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLoadBalancersLoadBalancer)(nil)).Elem()
}

func (i GetLoadBalancersLoadBalancerArgs) ToGetLoadBalancersLoadBalancerOutput() GetLoadBalancersLoadBalancerOutput {
	return i.ToGetLoadBalancersLoadBalancerOutputWithContext(context.Background())
}

func (i GetLoadBalancersLoadBalancerArgs) ToGetLoadBalancersLoadBalancerOutputWithContext(ctx context.Context) GetLoadBalancersLoadBalancerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLoadBalancersLoadBalancerOutput)
}

// GetLoadBalancersLoadBalancerArrayInput is an input type that accepts GetLoadBalancersLoadBalancerArray and GetLoadBalancersLoadBalancerArrayOutput values.
// You can construct a concrete instance of `GetLoadBalancersLoadBalancerArrayInput` via:
//
//	GetLoadBalancersLoadBalancerArray{ GetLoadBalancersLoadBalancerArgs{...} }
type GetLoadBalancersLoadBalancerArrayInput interface {
	pulumi.Input

	ToGetLoadBalancersLoadBalancerArrayOutput() GetLoadBalancersLoadBalancerArrayOutput
	ToGetLoadBalancersLoadBalancerArrayOutputWithContext(context.Context) GetLoadBalancersLoadBalancerArrayOutput
}

type GetLoadBalancersLoadBalancerArray []GetLoadBalancersLoadBalancerInput

func (GetLoadBalancersLoadBalancerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLoadBalancersLoadBalancer)(nil)).Elem()
}

func (i GetLoadBalancersLoadBalancerArray) ToGetLoadBalancersLoadBalancerArrayOutput() GetLoadBalancersLoadBalancerArrayOutput {
	return i.ToGetLoadBalancersLoadBalancerArrayOutputWithContext(context.Background())
}

func (i GetLoadBalancersLoadBalancerArray) ToGetLoadBalancersLoadBalancerArrayOutputWithContext(ctx context.Context) GetLoadBalancersLoadBalancerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLoadBalancersLoadBalancerArrayOutput)
}

type GetLoadBalancersLoadBalancerOutput struct{ *pulumi.OutputState }

func (GetLoadBalancersLoadBalancerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLoadBalancersLoadBalancer)(nil)).Elem()
}

func (o GetLoadBalancersLoadBalancerOutput) ToGetLoadBalancersLoadBalancerOutput() GetLoadBalancersLoadBalancerOutput {
	return o
}

func (o GetLoadBalancersLoadBalancerOutput) ToGetLoadBalancersLoadBalancerOutputWithContext(ctx context.Context) GetLoadBalancersLoadBalancerOutput {
	return o
}

// Information about access logs.
func (o GetLoadBalancersLoadBalancerOutput) AccessLogs() GetLoadBalancersLoadBalancerAccessLogArrayOutput {
	return o.ApplyT(func(v GetLoadBalancersLoadBalancer) []GetLoadBalancersLoadBalancerAccessLog { return v.AccessLogs }).(GetLoadBalancersLoadBalancerAccessLogArrayOutput)
}

// The stickiness policies defined for the load balancer.
func (o GetLoadBalancersLoadBalancerOutput) ApplicationStickyCookiePolicies() GetLoadBalancersLoadBalancerApplicationStickyCookiePolicyArrayOutput {
	return o.ApplyT(func(v GetLoadBalancersLoadBalancer) []GetLoadBalancersLoadBalancerApplicationStickyCookiePolicy {
		return v.ApplicationStickyCookiePolicies
	}).(GetLoadBalancersLoadBalancerApplicationStickyCookiePolicyArrayOutput)
}

func (o GetLoadBalancersLoadBalancerOutput) BackendIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetLoadBalancersLoadBalancer) []string { return v.BackendIps }).(pulumi.StringArrayOutput)
}

// One or more IDs of backend VMs for the load balancer.
func (o GetLoadBalancersLoadBalancerOutput) BackendVmIds() GetLoadBalancersLoadBalancerBackendVmIdArrayOutput {
	return o.ApplyT(func(v GetLoadBalancersLoadBalancer) []GetLoadBalancersLoadBalancerBackendVmId { return v.BackendVmIds }).(GetLoadBalancersLoadBalancerBackendVmIdArrayOutput)
}

// The DNS name of the load balancer.
func (o GetLoadBalancersLoadBalancerOutput) DnsName() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancersLoadBalancer) string { return v.DnsName }).(pulumi.StringOutput)
}

// Information about the health check configuration.
func (o GetLoadBalancersLoadBalancerOutput) HealthChecks() GetLoadBalancersLoadBalancerHealthCheckArrayOutput {
	return o.ApplyT(func(v GetLoadBalancersLoadBalancer) []GetLoadBalancersLoadBalancerHealthCheck { return v.HealthChecks }).(GetLoadBalancersLoadBalancerHealthCheckArrayOutput)
}

// The listeners for the load balancer.
func (o GetLoadBalancersLoadBalancerOutput) Listeners() GetLoadBalancersLoadBalancerListenerArrayOutput {
	return o.ApplyT(func(v GetLoadBalancersLoadBalancer) []GetLoadBalancersLoadBalancerListener { return v.Listeners }).(GetLoadBalancersLoadBalancerListenerArrayOutput)
}

// The name of the load balancer.
func (o GetLoadBalancersLoadBalancerOutput) LoadBalancerName() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancersLoadBalancer) string { return v.LoadBalancerName }).(pulumi.StringOutput)
}

// The policies defined for the load balancer.
func (o GetLoadBalancersLoadBalancerOutput) LoadBalancerStickyCookiePolicies() GetLoadBalancersLoadBalancerLoadBalancerStickyCookiePolicyArrayOutput {
	return o.ApplyT(func(v GetLoadBalancersLoadBalancer) []GetLoadBalancersLoadBalancerLoadBalancerStickyCookiePolicy {
		return v.LoadBalancerStickyCookiePolicies
	}).(GetLoadBalancersLoadBalancerLoadBalancerStickyCookiePolicyArrayOutput)
}

// The type of load balancer. Valid only for load balancers in a Net.<br />
// If `loadBalancerType` is `internet-facing`, the load balancer has a public DNS name that resolves to a public IP.<br />
// If `loadBalancerType` is `internal`, the load balancer has a public DNS name that resolves to a private IP.
func (o GetLoadBalancersLoadBalancerOutput) LoadBalancerType() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancersLoadBalancer) string { return v.LoadBalancerType }).(pulumi.StringOutput)
}

// The ID of the Net for the load balancer.
func (o GetLoadBalancersLoadBalancerOutput) NetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancersLoadBalancer) string { return v.NetId }).(pulumi.StringOutput)
}

// (internet-facing only) The public IP associated with the load balancer.
func (o GetLoadBalancersLoadBalancerOutput) PublicIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancersLoadBalancer) string { return v.PublicIp }).(pulumi.StringOutput)
}

// Whether secure cookies are enabled for the load balancer.
func (o GetLoadBalancersLoadBalancerOutput) SecuredCookies() pulumi.BoolOutput {
	return o.ApplyT(func(v GetLoadBalancersLoadBalancer) bool { return v.SecuredCookies }).(pulumi.BoolOutput)
}

// One or more IDs of security groups for the load balancers. Valid only for load balancers in a Net.
func (o GetLoadBalancersLoadBalancerOutput) SecurityGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetLoadBalancersLoadBalancer) []string { return v.SecurityGroups }).(pulumi.StringArrayOutput)
}

// Information about the source security group of the load balancer, which you can use as part of your inbound rules for your registered VMs.<br />
// To only allow traffic from load balancers, add a security group rule that specifies this source security group as the inbound source.
func (o GetLoadBalancersLoadBalancerOutput) SourceSecurityGroups() GetLoadBalancersLoadBalancerSourceSecurityGroupArrayOutput {
	return o.ApplyT(func(v GetLoadBalancersLoadBalancer) []GetLoadBalancersLoadBalancerSourceSecurityGroup {
		return v.SourceSecurityGroups
	}).(GetLoadBalancersLoadBalancerSourceSecurityGroupArrayOutput)
}

func (o GetLoadBalancersLoadBalancerOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetLoadBalancersLoadBalancer) []string { return v.SubnetIds }).(pulumi.StringArrayOutput)
}

// The ID of the Subregion in which the load balancer was created.
func (o GetLoadBalancersLoadBalancerOutput) SubregionNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetLoadBalancersLoadBalancer) []string { return v.SubregionNames }).(pulumi.StringArrayOutput)
}

// One or more tags associated with the load balancer.
func (o GetLoadBalancersLoadBalancerOutput) Tags() GetLoadBalancersLoadBalancerTagArrayOutput {
	return o.ApplyT(func(v GetLoadBalancersLoadBalancer) []GetLoadBalancersLoadBalancerTag { return v.Tags }).(GetLoadBalancersLoadBalancerTagArrayOutput)
}

type GetLoadBalancersLoadBalancerArrayOutput struct{ *pulumi.OutputState }

func (GetLoadBalancersLoadBalancerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLoadBalancersLoadBalancer)(nil)).Elem()
}

func (o GetLoadBalancersLoadBalancerArrayOutput) ToGetLoadBalancersLoadBalancerArrayOutput() GetLoadBalancersLoadBalancerArrayOutput {
	return o
}

func (o GetLoadBalancersLoadBalancerArrayOutput) ToGetLoadBalancersLoadBalancerArrayOutputWithContext(ctx context.Context) GetLoadBalancersLoadBalancerArrayOutput {
	return o
}

func (o GetLoadBalancersLoadBalancerArrayOutput) Index(i pulumi.IntInput) GetLoadBalancersLoadBalancerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLoadBalancersLoadBalancer {
		return vs[0].([]GetLoadBalancersLoadBalancer)[vs[1].(int)]
	}).(GetLoadBalancersLoadBalancerOutput)
}

type GetLoadBalancersLoadBalancerAccessLog struct {
	// If true, access logs are enabled for your load balancer. If false, they are not. If you set this to true in your request, the `osuBucketName` parameter is required.
	IsEnabled bool `pulumi:"isEnabled"`
	// The name of the OOS bucket for the access logs.
	OsuBucketName string `pulumi:"osuBucketName"`
	// The path to the folder of the access logs in your OOS bucket (by default, the `root` level of your bucket).
	OsuBucketPrefix string `pulumi:"osuBucketPrefix"`
	// The time interval for the publication of access logs in the OOS bucket, in minutes. This value can be either `5` or `60` (by default, `60`).
	PublicationInterval int `pulumi:"publicationInterval"`
}

// GetLoadBalancersLoadBalancerAccessLogInput is an input type that accepts GetLoadBalancersLoadBalancerAccessLogArgs and GetLoadBalancersLoadBalancerAccessLogOutput values.
// You can construct a concrete instance of `GetLoadBalancersLoadBalancerAccessLogInput` via:
//
//	GetLoadBalancersLoadBalancerAccessLogArgs{...}
type GetLoadBalancersLoadBalancerAccessLogInput interface {
	pulumi.Input

	ToGetLoadBalancersLoadBalancerAccessLogOutput() GetLoadBalancersLoadBalancerAccessLogOutput
	ToGetLoadBalancersLoadBalancerAccessLogOutputWithContext(context.Context) GetLoadBalancersLoadBalancerAccessLogOutput
}

type GetLoadBalancersLoadBalancerAccessLogArgs struct {
	// If true, access logs are enabled for your load balancer. If false, they are not. If you set this to true in your request, the `osuBucketName` parameter is required.
	IsEnabled pulumi.BoolInput `pulumi:"isEnabled"`
	// The name of the OOS bucket for the access logs.
	OsuBucketName pulumi.StringInput `pulumi:"osuBucketName"`
	// The path to the folder of the access logs in your OOS bucket (by default, the `root` level of your bucket).
	OsuBucketPrefix pulumi.StringInput `pulumi:"osuBucketPrefix"`
	// The time interval for the publication of access logs in the OOS bucket, in minutes. This value can be either `5` or `60` (by default, `60`).
	PublicationInterval pulumi.IntInput `pulumi:"publicationInterval"`
}

func (GetLoadBalancersLoadBalancerAccessLogArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLoadBalancersLoadBalancerAccessLog)(nil)).Elem()
}

func (i GetLoadBalancersLoadBalancerAccessLogArgs) ToGetLoadBalancersLoadBalancerAccessLogOutput() GetLoadBalancersLoadBalancerAccessLogOutput {
	return i.ToGetLoadBalancersLoadBalancerAccessLogOutputWithContext(context.Background())
}

func (i GetLoadBalancersLoadBalancerAccessLogArgs) ToGetLoadBalancersLoadBalancerAccessLogOutputWithContext(ctx context.Context) GetLoadBalancersLoadBalancerAccessLogOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLoadBalancersLoadBalancerAccessLogOutput)
}

// GetLoadBalancersLoadBalancerAccessLogArrayInput is an input type that accepts GetLoadBalancersLoadBalancerAccessLogArray and GetLoadBalancersLoadBalancerAccessLogArrayOutput values.
// You can construct a concrete instance of `GetLoadBalancersLoadBalancerAccessLogArrayInput` via:
//
//	GetLoadBalancersLoadBalancerAccessLogArray{ GetLoadBalancersLoadBalancerAccessLogArgs{...} }
type GetLoadBalancersLoadBalancerAccessLogArrayInput interface {
	pulumi.Input

	ToGetLoadBalancersLoadBalancerAccessLogArrayOutput() GetLoadBalancersLoadBalancerAccessLogArrayOutput
	ToGetLoadBalancersLoadBalancerAccessLogArrayOutputWithContext(context.Context) GetLoadBalancersLoadBalancerAccessLogArrayOutput
}

type GetLoadBalancersLoadBalancerAccessLogArray []GetLoadBalancersLoadBalancerAccessLogInput

func (GetLoadBalancersLoadBalancerAccessLogArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLoadBalancersLoadBalancerAccessLog)(nil)).Elem()
}

func (i GetLoadBalancersLoadBalancerAccessLogArray) ToGetLoadBalancersLoadBalancerAccessLogArrayOutput() GetLoadBalancersLoadBalancerAccessLogArrayOutput {
	return i.ToGetLoadBalancersLoadBalancerAccessLogArrayOutputWithContext(context.Background())
}

func (i GetLoadBalancersLoadBalancerAccessLogArray) ToGetLoadBalancersLoadBalancerAccessLogArrayOutputWithContext(ctx context.Context) GetLoadBalancersLoadBalancerAccessLogArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLoadBalancersLoadBalancerAccessLogArrayOutput)
}

type GetLoadBalancersLoadBalancerAccessLogOutput struct{ *pulumi.OutputState }

func (GetLoadBalancersLoadBalancerAccessLogOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLoadBalancersLoadBalancerAccessLog)(nil)).Elem()
}

func (o GetLoadBalancersLoadBalancerAccessLogOutput) ToGetLoadBalancersLoadBalancerAccessLogOutput() GetLoadBalancersLoadBalancerAccessLogOutput {
	return o
}

func (o GetLoadBalancersLoadBalancerAccessLogOutput) ToGetLoadBalancersLoadBalancerAccessLogOutputWithContext(ctx context.Context) GetLoadBalancersLoadBalancerAccessLogOutput {
	return o
}

// If true, access logs are enabled for your load balancer. If false, they are not. If you set this to true in your request, the `osuBucketName` parameter is required.
func (o GetLoadBalancersLoadBalancerAccessLogOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetLoadBalancersLoadBalancerAccessLog) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

// The name of the OOS bucket for the access logs.
func (o GetLoadBalancersLoadBalancerAccessLogOutput) OsuBucketName() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancersLoadBalancerAccessLog) string { return v.OsuBucketName }).(pulumi.StringOutput)
}

// The path to the folder of the access logs in your OOS bucket (by default, the `root` level of your bucket).
func (o GetLoadBalancersLoadBalancerAccessLogOutput) OsuBucketPrefix() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancersLoadBalancerAccessLog) string { return v.OsuBucketPrefix }).(pulumi.StringOutput)
}

// The time interval for the publication of access logs in the OOS bucket, in minutes. This value can be either `5` or `60` (by default, `60`).
func (o GetLoadBalancersLoadBalancerAccessLogOutput) PublicationInterval() pulumi.IntOutput {
	return o.ApplyT(func(v GetLoadBalancersLoadBalancerAccessLog) int { return v.PublicationInterval }).(pulumi.IntOutput)
}

type GetLoadBalancersLoadBalancerAccessLogArrayOutput struct{ *pulumi.OutputState }

func (GetLoadBalancersLoadBalancerAccessLogArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLoadBalancersLoadBalancerAccessLog)(nil)).Elem()
}

func (o GetLoadBalancersLoadBalancerAccessLogArrayOutput) ToGetLoadBalancersLoadBalancerAccessLogArrayOutput() GetLoadBalancersLoadBalancerAccessLogArrayOutput {
	return o
}

func (o GetLoadBalancersLoadBalancerAccessLogArrayOutput) ToGetLoadBalancersLoadBalancerAccessLogArrayOutputWithContext(ctx context.Context) GetLoadBalancersLoadBalancerAccessLogArrayOutput {
	return o
}

func (o GetLoadBalancersLoadBalancerAccessLogArrayOutput) Index(i pulumi.IntInput) GetLoadBalancersLoadBalancerAccessLogOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLoadBalancersLoadBalancerAccessLog {
		return vs[0].([]GetLoadBalancersLoadBalancerAccessLog)[vs[1].(int)]
	}).(GetLoadBalancersLoadBalancerAccessLogOutput)
}

type GetLoadBalancersLoadBalancerApplicationStickyCookiePolicy struct {
	// The name of the application cookie used for stickiness.
	CookieName string `pulumi:"cookieName"`
	// The name of the stickiness policy.
	PolicyName string `pulumi:"policyName"`
}

// GetLoadBalancersLoadBalancerApplicationStickyCookiePolicyInput is an input type that accepts GetLoadBalancersLoadBalancerApplicationStickyCookiePolicyArgs and GetLoadBalancersLoadBalancerApplicationStickyCookiePolicyOutput values.
// You can construct a concrete instance of `GetLoadBalancersLoadBalancerApplicationStickyCookiePolicyInput` via:
//
//	GetLoadBalancersLoadBalancerApplicationStickyCookiePolicyArgs{...}
type GetLoadBalancersLoadBalancerApplicationStickyCookiePolicyInput interface {
	pulumi.Input

	ToGetLoadBalancersLoadBalancerApplicationStickyCookiePolicyOutput() GetLoadBalancersLoadBalancerApplicationStickyCookiePolicyOutput
	ToGetLoadBalancersLoadBalancerApplicationStickyCookiePolicyOutputWithContext(context.Context) GetLoadBalancersLoadBalancerApplicationStickyCookiePolicyOutput
}

type GetLoadBalancersLoadBalancerApplicationStickyCookiePolicyArgs struct {
	// The name of the application cookie used for stickiness.
	CookieName pulumi.StringInput `pulumi:"cookieName"`
	// The name of the stickiness policy.
	PolicyName pulumi.StringInput `pulumi:"policyName"`
}

func (GetLoadBalancersLoadBalancerApplicationStickyCookiePolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLoadBalancersLoadBalancerApplicationStickyCookiePolicy)(nil)).Elem()
}

func (i GetLoadBalancersLoadBalancerApplicationStickyCookiePolicyArgs) ToGetLoadBalancersLoadBalancerApplicationStickyCookiePolicyOutput() GetLoadBalancersLoadBalancerApplicationStickyCookiePolicyOutput {
	return i.ToGetLoadBalancersLoadBalancerApplicationStickyCookiePolicyOutputWithContext(context.Background())
}

func (i GetLoadBalancersLoadBalancerApplicationStickyCookiePolicyArgs) ToGetLoadBalancersLoadBalancerApplicationStickyCookiePolicyOutputWithContext(ctx context.Context) GetLoadBalancersLoadBalancerApplicationStickyCookiePolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLoadBalancersLoadBalancerApplicationStickyCookiePolicyOutput)
}

// GetLoadBalancersLoadBalancerApplicationStickyCookiePolicyArrayInput is an input type that accepts GetLoadBalancersLoadBalancerApplicationStickyCookiePolicyArray and GetLoadBalancersLoadBalancerApplicationStickyCookiePolicyArrayOutput values.
// You can construct a concrete instance of `GetLoadBalancersLoadBalancerApplicationStickyCookiePolicyArrayInput` via:
//
//	GetLoadBalancersLoadBalancerApplicationStickyCookiePolicyArray{ GetLoadBalancersLoadBalancerApplicationStickyCookiePolicyArgs{...} }
type GetLoadBalancersLoadBalancerApplicationStickyCookiePolicyArrayInput interface {
	pulumi.Input

	ToGetLoadBalancersLoadBalancerApplicationStickyCookiePolicyArrayOutput() GetLoadBalancersLoadBalancerApplicationStickyCookiePolicyArrayOutput
	ToGetLoadBalancersLoadBalancerApplicationStickyCookiePolicyArrayOutputWithContext(context.Context) GetLoadBalancersLoadBalancerApplicationStickyCookiePolicyArrayOutput
}

type GetLoadBalancersLoadBalancerApplicationStickyCookiePolicyArray []GetLoadBalancersLoadBalancerApplicationStickyCookiePolicyInput

func (GetLoadBalancersLoadBalancerApplicationStickyCookiePolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLoadBalancersLoadBalancerApplicationStickyCookiePolicy)(nil)).Elem()
}

func (i GetLoadBalancersLoadBalancerApplicationStickyCookiePolicyArray) ToGetLoadBalancersLoadBalancerApplicationStickyCookiePolicyArrayOutput() GetLoadBalancersLoadBalancerApplicationStickyCookiePolicyArrayOutput {
	return i.ToGetLoadBalancersLoadBalancerApplicationStickyCookiePolicyArrayOutputWithContext(context.Background())
}

func (i GetLoadBalancersLoadBalancerApplicationStickyCookiePolicyArray) ToGetLoadBalancersLoadBalancerApplicationStickyCookiePolicyArrayOutputWithContext(ctx context.Context) GetLoadBalancersLoadBalancerApplicationStickyCookiePolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLoadBalancersLoadBalancerApplicationStickyCookiePolicyArrayOutput)
}

type GetLoadBalancersLoadBalancerApplicationStickyCookiePolicyOutput struct{ *pulumi.OutputState }

func (GetLoadBalancersLoadBalancerApplicationStickyCookiePolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLoadBalancersLoadBalancerApplicationStickyCookiePolicy)(nil)).Elem()
}

func (o GetLoadBalancersLoadBalancerApplicationStickyCookiePolicyOutput) ToGetLoadBalancersLoadBalancerApplicationStickyCookiePolicyOutput() GetLoadBalancersLoadBalancerApplicationStickyCookiePolicyOutput {
	return o
}

func (o GetLoadBalancersLoadBalancerApplicationStickyCookiePolicyOutput) ToGetLoadBalancersLoadBalancerApplicationStickyCookiePolicyOutputWithContext(ctx context.Context) GetLoadBalancersLoadBalancerApplicationStickyCookiePolicyOutput {
	return o
}

// The name of the application cookie used for stickiness.
func (o GetLoadBalancersLoadBalancerApplicationStickyCookiePolicyOutput) CookieName() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancersLoadBalancerApplicationStickyCookiePolicy) string { return v.CookieName }).(pulumi.StringOutput)
}

// The name of the stickiness policy.
func (o GetLoadBalancersLoadBalancerApplicationStickyCookiePolicyOutput) PolicyName() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancersLoadBalancerApplicationStickyCookiePolicy) string { return v.PolicyName }).(pulumi.StringOutput)
}

type GetLoadBalancersLoadBalancerApplicationStickyCookiePolicyArrayOutput struct{ *pulumi.OutputState }

func (GetLoadBalancersLoadBalancerApplicationStickyCookiePolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLoadBalancersLoadBalancerApplicationStickyCookiePolicy)(nil)).Elem()
}

func (o GetLoadBalancersLoadBalancerApplicationStickyCookiePolicyArrayOutput) ToGetLoadBalancersLoadBalancerApplicationStickyCookiePolicyArrayOutput() GetLoadBalancersLoadBalancerApplicationStickyCookiePolicyArrayOutput {
	return o
}

func (o GetLoadBalancersLoadBalancerApplicationStickyCookiePolicyArrayOutput) ToGetLoadBalancersLoadBalancerApplicationStickyCookiePolicyArrayOutputWithContext(ctx context.Context) GetLoadBalancersLoadBalancerApplicationStickyCookiePolicyArrayOutput {
	return o
}

func (o GetLoadBalancersLoadBalancerApplicationStickyCookiePolicyArrayOutput) Index(i pulumi.IntInput) GetLoadBalancersLoadBalancerApplicationStickyCookiePolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLoadBalancersLoadBalancerApplicationStickyCookiePolicy {
		return vs[0].([]GetLoadBalancersLoadBalancerApplicationStickyCookiePolicy)[vs[1].(int)]
	}).(GetLoadBalancersLoadBalancerApplicationStickyCookiePolicyOutput)
}

type GetLoadBalancersLoadBalancerBackendVmId struct {
	VmId string `pulumi:"vmId"`
}

// GetLoadBalancersLoadBalancerBackendVmIdInput is an input type that accepts GetLoadBalancersLoadBalancerBackendVmIdArgs and GetLoadBalancersLoadBalancerBackendVmIdOutput values.
// You can construct a concrete instance of `GetLoadBalancersLoadBalancerBackendVmIdInput` via:
//
//	GetLoadBalancersLoadBalancerBackendVmIdArgs{...}
type GetLoadBalancersLoadBalancerBackendVmIdInput interface {
	pulumi.Input

	ToGetLoadBalancersLoadBalancerBackendVmIdOutput() GetLoadBalancersLoadBalancerBackendVmIdOutput
	ToGetLoadBalancersLoadBalancerBackendVmIdOutputWithContext(context.Context) GetLoadBalancersLoadBalancerBackendVmIdOutput
}

type GetLoadBalancersLoadBalancerBackendVmIdArgs struct {
	VmId pulumi.StringInput `pulumi:"vmId"`
}

func (GetLoadBalancersLoadBalancerBackendVmIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLoadBalancersLoadBalancerBackendVmId)(nil)).Elem()
}

func (i GetLoadBalancersLoadBalancerBackendVmIdArgs) ToGetLoadBalancersLoadBalancerBackendVmIdOutput() GetLoadBalancersLoadBalancerBackendVmIdOutput {
	return i.ToGetLoadBalancersLoadBalancerBackendVmIdOutputWithContext(context.Background())
}

func (i GetLoadBalancersLoadBalancerBackendVmIdArgs) ToGetLoadBalancersLoadBalancerBackendVmIdOutputWithContext(ctx context.Context) GetLoadBalancersLoadBalancerBackendVmIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLoadBalancersLoadBalancerBackendVmIdOutput)
}

// GetLoadBalancersLoadBalancerBackendVmIdArrayInput is an input type that accepts GetLoadBalancersLoadBalancerBackendVmIdArray and GetLoadBalancersLoadBalancerBackendVmIdArrayOutput values.
// You can construct a concrete instance of `GetLoadBalancersLoadBalancerBackendVmIdArrayInput` via:
//
//	GetLoadBalancersLoadBalancerBackendVmIdArray{ GetLoadBalancersLoadBalancerBackendVmIdArgs{...} }
type GetLoadBalancersLoadBalancerBackendVmIdArrayInput interface {
	pulumi.Input

	ToGetLoadBalancersLoadBalancerBackendVmIdArrayOutput() GetLoadBalancersLoadBalancerBackendVmIdArrayOutput
	ToGetLoadBalancersLoadBalancerBackendVmIdArrayOutputWithContext(context.Context) GetLoadBalancersLoadBalancerBackendVmIdArrayOutput
}

type GetLoadBalancersLoadBalancerBackendVmIdArray []GetLoadBalancersLoadBalancerBackendVmIdInput

func (GetLoadBalancersLoadBalancerBackendVmIdArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLoadBalancersLoadBalancerBackendVmId)(nil)).Elem()
}

func (i GetLoadBalancersLoadBalancerBackendVmIdArray) ToGetLoadBalancersLoadBalancerBackendVmIdArrayOutput() GetLoadBalancersLoadBalancerBackendVmIdArrayOutput {
	return i.ToGetLoadBalancersLoadBalancerBackendVmIdArrayOutputWithContext(context.Background())
}

func (i GetLoadBalancersLoadBalancerBackendVmIdArray) ToGetLoadBalancersLoadBalancerBackendVmIdArrayOutputWithContext(ctx context.Context) GetLoadBalancersLoadBalancerBackendVmIdArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLoadBalancersLoadBalancerBackendVmIdArrayOutput)
}

type GetLoadBalancersLoadBalancerBackendVmIdOutput struct{ *pulumi.OutputState }

func (GetLoadBalancersLoadBalancerBackendVmIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLoadBalancersLoadBalancerBackendVmId)(nil)).Elem()
}

func (o GetLoadBalancersLoadBalancerBackendVmIdOutput) ToGetLoadBalancersLoadBalancerBackendVmIdOutput() GetLoadBalancersLoadBalancerBackendVmIdOutput {
	return o
}

func (o GetLoadBalancersLoadBalancerBackendVmIdOutput) ToGetLoadBalancersLoadBalancerBackendVmIdOutputWithContext(ctx context.Context) GetLoadBalancersLoadBalancerBackendVmIdOutput {
	return o
}

func (o GetLoadBalancersLoadBalancerBackendVmIdOutput) VmId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancersLoadBalancerBackendVmId) string { return v.VmId }).(pulumi.StringOutput)
}

type GetLoadBalancersLoadBalancerBackendVmIdArrayOutput struct{ *pulumi.OutputState }

func (GetLoadBalancersLoadBalancerBackendVmIdArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLoadBalancersLoadBalancerBackendVmId)(nil)).Elem()
}

func (o GetLoadBalancersLoadBalancerBackendVmIdArrayOutput) ToGetLoadBalancersLoadBalancerBackendVmIdArrayOutput() GetLoadBalancersLoadBalancerBackendVmIdArrayOutput {
	return o
}

func (o GetLoadBalancersLoadBalancerBackendVmIdArrayOutput) ToGetLoadBalancersLoadBalancerBackendVmIdArrayOutputWithContext(ctx context.Context) GetLoadBalancersLoadBalancerBackendVmIdArrayOutput {
	return o
}

func (o GetLoadBalancersLoadBalancerBackendVmIdArrayOutput) Index(i pulumi.IntInput) GetLoadBalancersLoadBalancerBackendVmIdOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLoadBalancersLoadBalancerBackendVmId {
		return vs[0].([]GetLoadBalancersLoadBalancerBackendVmId)[vs[1].(int)]
	}).(GetLoadBalancersLoadBalancerBackendVmIdOutput)
}

type GetLoadBalancersLoadBalancerHealthCheck struct {
	// The number of seconds between two requests (between `5` and `600` both included).
	CheckInterval int `pulumi:"checkInterval"`
	// The number of consecutive successful requests before considering the VM as healthy (between `2` and `10` both included).
	HealthyThreshold int `pulumi:"healthyThreshold"`
	// If you use the HTTP or HTTPS protocols, the request URL path.
	Path string `pulumi:"path"`
	// The port number (between `1` and `65535`, both included).
	Port int `pulumi:"port"`
	// The protocol for the URL of the VM (`HTTP` \| `HTTPS` \| `TCP` \| `SSL`).
	Protocol string `pulumi:"protocol"`
	// The maximum waiting time for a response before considering the VM as unhealthy, in seconds (between `2` and `60` both included).
	Timeout int `pulumi:"timeout"`
	// The number of consecutive failed requests before considering the VM as unhealthy (between `2` and `10` both included).
	UnhealthyThreshold int `pulumi:"unhealthyThreshold"`
}

// GetLoadBalancersLoadBalancerHealthCheckInput is an input type that accepts GetLoadBalancersLoadBalancerHealthCheckArgs and GetLoadBalancersLoadBalancerHealthCheckOutput values.
// You can construct a concrete instance of `GetLoadBalancersLoadBalancerHealthCheckInput` via:
//
//	GetLoadBalancersLoadBalancerHealthCheckArgs{...}
type GetLoadBalancersLoadBalancerHealthCheckInput interface {
	pulumi.Input

	ToGetLoadBalancersLoadBalancerHealthCheckOutput() GetLoadBalancersLoadBalancerHealthCheckOutput
	ToGetLoadBalancersLoadBalancerHealthCheckOutputWithContext(context.Context) GetLoadBalancersLoadBalancerHealthCheckOutput
}

type GetLoadBalancersLoadBalancerHealthCheckArgs struct {
	// The number of seconds between two requests (between `5` and `600` both included).
	CheckInterval pulumi.IntInput `pulumi:"checkInterval"`
	// The number of consecutive successful requests before considering the VM as healthy (between `2` and `10` both included).
	HealthyThreshold pulumi.IntInput `pulumi:"healthyThreshold"`
	// If you use the HTTP or HTTPS protocols, the request URL path.
	Path pulumi.StringInput `pulumi:"path"`
	// The port number (between `1` and `65535`, both included).
	Port pulumi.IntInput `pulumi:"port"`
	// The protocol for the URL of the VM (`HTTP` \| `HTTPS` \| `TCP` \| `SSL`).
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// The maximum waiting time for a response before considering the VM as unhealthy, in seconds (between `2` and `60` both included).
	Timeout pulumi.IntInput `pulumi:"timeout"`
	// The number of consecutive failed requests before considering the VM as unhealthy (between `2` and `10` both included).
	UnhealthyThreshold pulumi.IntInput `pulumi:"unhealthyThreshold"`
}

func (GetLoadBalancersLoadBalancerHealthCheckArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLoadBalancersLoadBalancerHealthCheck)(nil)).Elem()
}

func (i GetLoadBalancersLoadBalancerHealthCheckArgs) ToGetLoadBalancersLoadBalancerHealthCheckOutput() GetLoadBalancersLoadBalancerHealthCheckOutput {
	return i.ToGetLoadBalancersLoadBalancerHealthCheckOutputWithContext(context.Background())
}

func (i GetLoadBalancersLoadBalancerHealthCheckArgs) ToGetLoadBalancersLoadBalancerHealthCheckOutputWithContext(ctx context.Context) GetLoadBalancersLoadBalancerHealthCheckOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLoadBalancersLoadBalancerHealthCheckOutput)
}

// GetLoadBalancersLoadBalancerHealthCheckArrayInput is an input type that accepts GetLoadBalancersLoadBalancerHealthCheckArray and GetLoadBalancersLoadBalancerHealthCheckArrayOutput values.
// You can construct a concrete instance of `GetLoadBalancersLoadBalancerHealthCheckArrayInput` via:
//
//	GetLoadBalancersLoadBalancerHealthCheckArray{ GetLoadBalancersLoadBalancerHealthCheckArgs{...} }
type GetLoadBalancersLoadBalancerHealthCheckArrayInput interface {
	pulumi.Input

	ToGetLoadBalancersLoadBalancerHealthCheckArrayOutput() GetLoadBalancersLoadBalancerHealthCheckArrayOutput
	ToGetLoadBalancersLoadBalancerHealthCheckArrayOutputWithContext(context.Context) GetLoadBalancersLoadBalancerHealthCheckArrayOutput
}

type GetLoadBalancersLoadBalancerHealthCheckArray []GetLoadBalancersLoadBalancerHealthCheckInput

func (GetLoadBalancersLoadBalancerHealthCheckArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLoadBalancersLoadBalancerHealthCheck)(nil)).Elem()
}

func (i GetLoadBalancersLoadBalancerHealthCheckArray) ToGetLoadBalancersLoadBalancerHealthCheckArrayOutput() GetLoadBalancersLoadBalancerHealthCheckArrayOutput {
	return i.ToGetLoadBalancersLoadBalancerHealthCheckArrayOutputWithContext(context.Background())
}

func (i GetLoadBalancersLoadBalancerHealthCheckArray) ToGetLoadBalancersLoadBalancerHealthCheckArrayOutputWithContext(ctx context.Context) GetLoadBalancersLoadBalancerHealthCheckArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLoadBalancersLoadBalancerHealthCheckArrayOutput)
}

type GetLoadBalancersLoadBalancerHealthCheckOutput struct{ *pulumi.OutputState }

func (GetLoadBalancersLoadBalancerHealthCheckOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLoadBalancersLoadBalancerHealthCheck)(nil)).Elem()
}

func (o GetLoadBalancersLoadBalancerHealthCheckOutput) ToGetLoadBalancersLoadBalancerHealthCheckOutput() GetLoadBalancersLoadBalancerHealthCheckOutput {
	return o
}

func (o GetLoadBalancersLoadBalancerHealthCheckOutput) ToGetLoadBalancersLoadBalancerHealthCheckOutputWithContext(ctx context.Context) GetLoadBalancersLoadBalancerHealthCheckOutput {
	return o
}

// The number of seconds between two requests (between `5` and `600` both included).
func (o GetLoadBalancersLoadBalancerHealthCheckOutput) CheckInterval() pulumi.IntOutput {
	return o.ApplyT(func(v GetLoadBalancersLoadBalancerHealthCheck) int { return v.CheckInterval }).(pulumi.IntOutput)
}

// The number of consecutive successful requests before considering the VM as healthy (between `2` and `10` both included).
func (o GetLoadBalancersLoadBalancerHealthCheckOutput) HealthyThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v GetLoadBalancersLoadBalancerHealthCheck) int { return v.HealthyThreshold }).(pulumi.IntOutput)
}

// If you use the HTTP or HTTPS protocols, the request URL path.
func (o GetLoadBalancersLoadBalancerHealthCheckOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancersLoadBalancerHealthCheck) string { return v.Path }).(pulumi.StringOutput)
}

// The port number (between `1` and `65535`, both included).
func (o GetLoadBalancersLoadBalancerHealthCheckOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetLoadBalancersLoadBalancerHealthCheck) int { return v.Port }).(pulumi.IntOutput)
}

// The protocol for the URL of the VM (`HTTP` \| `HTTPS` \| `TCP` \| `SSL`).
func (o GetLoadBalancersLoadBalancerHealthCheckOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancersLoadBalancerHealthCheck) string { return v.Protocol }).(pulumi.StringOutput)
}

// The maximum waiting time for a response before considering the VM as unhealthy, in seconds (between `2` and `60` both included).
func (o GetLoadBalancersLoadBalancerHealthCheckOutput) Timeout() pulumi.IntOutput {
	return o.ApplyT(func(v GetLoadBalancersLoadBalancerHealthCheck) int { return v.Timeout }).(pulumi.IntOutput)
}

// The number of consecutive failed requests before considering the VM as unhealthy (between `2` and `10` both included).
func (o GetLoadBalancersLoadBalancerHealthCheckOutput) UnhealthyThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v GetLoadBalancersLoadBalancerHealthCheck) int { return v.UnhealthyThreshold }).(pulumi.IntOutput)
}

type GetLoadBalancersLoadBalancerHealthCheckArrayOutput struct{ *pulumi.OutputState }

func (GetLoadBalancersLoadBalancerHealthCheckArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLoadBalancersLoadBalancerHealthCheck)(nil)).Elem()
}

func (o GetLoadBalancersLoadBalancerHealthCheckArrayOutput) ToGetLoadBalancersLoadBalancerHealthCheckArrayOutput() GetLoadBalancersLoadBalancerHealthCheckArrayOutput {
	return o
}

func (o GetLoadBalancersLoadBalancerHealthCheckArrayOutput) ToGetLoadBalancersLoadBalancerHealthCheckArrayOutputWithContext(ctx context.Context) GetLoadBalancersLoadBalancerHealthCheckArrayOutput {
	return o
}

func (o GetLoadBalancersLoadBalancerHealthCheckArrayOutput) Index(i pulumi.IntInput) GetLoadBalancersLoadBalancerHealthCheckOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLoadBalancersLoadBalancerHealthCheck {
		return vs[0].([]GetLoadBalancersLoadBalancerHealthCheck)[vs[1].(int)]
	}).(GetLoadBalancersLoadBalancerHealthCheckOutput)
}

type GetLoadBalancersLoadBalancerListener struct {
	// The port on which the backend VM is listening (between `1` and `65535`, both included).
	BackendPort int `pulumi:"backendPort"`
	// The protocol for routing traffic to backend VMs (`HTTP` \| `HTTPS` \| `TCP` \| `SSL`).
	BackendProtocol string `pulumi:"backendProtocol"`
	// The port on which the load balancer is listening (between `1` and `65535`, both included).
	LoadBalancerPort int `pulumi:"loadBalancerPort"`
	// The routing protocol (`HTTP` \| `HTTPS` \| `TCP` \| `SSL`).
	LoadBalancerProtocol string `pulumi:"loadBalancerProtocol"`
	// The names of the policies. If there are no policies enabled, the list is empty.
	PolicyNames []string `pulumi:"policyNames"`
	// The OUTSCALE Resource Name (ORN) of the server certificate. For more information, see [Resource Identifiers > OUTSCALE Resource Names (ORNs)](https://docs.outscale.com/en/userguide/Resource-Identifiers.html#_outscale_resource_names_orns).
	ServerCertificateId string `pulumi:"serverCertificateId"`
}

// GetLoadBalancersLoadBalancerListenerInput is an input type that accepts GetLoadBalancersLoadBalancerListenerArgs and GetLoadBalancersLoadBalancerListenerOutput values.
// You can construct a concrete instance of `GetLoadBalancersLoadBalancerListenerInput` via:
//
//	GetLoadBalancersLoadBalancerListenerArgs{...}
type GetLoadBalancersLoadBalancerListenerInput interface {
	pulumi.Input

	ToGetLoadBalancersLoadBalancerListenerOutput() GetLoadBalancersLoadBalancerListenerOutput
	ToGetLoadBalancersLoadBalancerListenerOutputWithContext(context.Context) GetLoadBalancersLoadBalancerListenerOutput
}

type GetLoadBalancersLoadBalancerListenerArgs struct {
	// The port on which the backend VM is listening (between `1` and `65535`, both included).
	BackendPort pulumi.IntInput `pulumi:"backendPort"`
	// The protocol for routing traffic to backend VMs (`HTTP` \| `HTTPS` \| `TCP` \| `SSL`).
	BackendProtocol pulumi.StringInput `pulumi:"backendProtocol"`
	// The port on which the load balancer is listening (between `1` and `65535`, both included).
	LoadBalancerPort pulumi.IntInput `pulumi:"loadBalancerPort"`
	// The routing protocol (`HTTP` \| `HTTPS` \| `TCP` \| `SSL`).
	LoadBalancerProtocol pulumi.StringInput `pulumi:"loadBalancerProtocol"`
	// The names of the policies. If there are no policies enabled, the list is empty.
	PolicyNames pulumi.StringArrayInput `pulumi:"policyNames"`
	// The OUTSCALE Resource Name (ORN) of the server certificate. For more information, see [Resource Identifiers > OUTSCALE Resource Names (ORNs)](https://docs.outscale.com/en/userguide/Resource-Identifiers.html#_outscale_resource_names_orns).
	ServerCertificateId pulumi.StringInput `pulumi:"serverCertificateId"`
}

func (GetLoadBalancersLoadBalancerListenerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLoadBalancersLoadBalancerListener)(nil)).Elem()
}

func (i GetLoadBalancersLoadBalancerListenerArgs) ToGetLoadBalancersLoadBalancerListenerOutput() GetLoadBalancersLoadBalancerListenerOutput {
	return i.ToGetLoadBalancersLoadBalancerListenerOutputWithContext(context.Background())
}

func (i GetLoadBalancersLoadBalancerListenerArgs) ToGetLoadBalancersLoadBalancerListenerOutputWithContext(ctx context.Context) GetLoadBalancersLoadBalancerListenerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLoadBalancersLoadBalancerListenerOutput)
}

// GetLoadBalancersLoadBalancerListenerArrayInput is an input type that accepts GetLoadBalancersLoadBalancerListenerArray and GetLoadBalancersLoadBalancerListenerArrayOutput values.
// You can construct a concrete instance of `GetLoadBalancersLoadBalancerListenerArrayInput` via:
//
//	GetLoadBalancersLoadBalancerListenerArray{ GetLoadBalancersLoadBalancerListenerArgs{...} }
type GetLoadBalancersLoadBalancerListenerArrayInput interface {
	pulumi.Input

	ToGetLoadBalancersLoadBalancerListenerArrayOutput() GetLoadBalancersLoadBalancerListenerArrayOutput
	ToGetLoadBalancersLoadBalancerListenerArrayOutputWithContext(context.Context) GetLoadBalancersLoadBalancerListenerArrayOutput
}

type GetLoadBalancersLoadBalancerListenerArray []GetLoadBalancersLoadBalancerListenerInput

func (GetLoadBalancersLoadBalancerListenerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLoadBalancersLoadBalancerListener)(nil)).Elem()
}

func (i GetLoadBalancersLoadBalancerListenerArray) ToGetLoadBalancersLoadBalancerListenerArrayOutput() GetLoadBalancersLoadBalancerListenerArrayOutput {
	return i.ToGetLoadBalancersLoadBalancerListenerArrayOutputWithContext(context.Background())
}

func (i GetLoadBalancersLoadBalancerListenerArray) ToGetLoadBalancersLoadBalancerListenerArrayOutputWithContext(ctx context.Context) GetLoadBalancersLoadBalancerListenerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLoadBalancersLoadBalancerListenerArrayOutput)
}

type GetLoadBalancersLoadBalancerListenerOutput struct{ *pulumi.OutputState }

func (GetLoadBalancersLoadBalancerListenerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLoadBalancersLoadBalancerListener)(nil)).Elem()
}

func (o GetLoadBalancersLoadBalancerListenerOutput) ToGetLoadBalancersLoadBalancerListenerOutput() GetLoadBalancersLoadBalancerListenerOutput {
	return o
}

func (o GetLoadBalancersLoadBalancerListenerOutput) ToGetLoadBalancersLoadBalancerListenerOutputWithContext(ctx context.Context) GetLoadBalancersLoadBalancerListenerOutput {
	return o
}

// The port on which the backend VM is listening (between `1` and `65535`, both included).
func (o GetLoadBalancersLoadBalancerListenerOutput) BackendPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetLoadBalancersLoadBalancerListener) int { return v.BackendPort }).(pulumi.IntOutput)
}

// The protocol for routing traffic to backend VMs (`HTTP` \| `HTTPS` \| `TCP` \| `SSL`).
func (o GetLoadBalancersLoadBalancerListenerOutput) BackendProtocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancersLoadBalancerListener) string { return v.BackendProtocol }).(pulumi.StringOutput)
}

// The port on which the load balancer is listening (between `1` and `65535`, both included).
func (o GetLoadBalancersLoadBalancerListenerOutput) LoadBalancerPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetLoadBalancersLoadBalancerListener) int { return v.LoadBalancerPort }).(pulumi.IntOutput)
}

// The routing protocol (`HTTP` \| `HTTPS` \| `TCP` \| `SSL`).
func (o GetLoadBalancersLoadBalancerListenerOutput) LoadBalancerProtocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancersLoadBalancerListener) string { return v.LoadBalancerProtocol }).(pulumi.StringOutput)
}

// The names of the policies. If there are no policies enabled, the list is empty.
func (o GetLoadBalancersLoadBalancerListenerOutput) PolicyNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetLoadBalancersLoadBalancerListener) []string { return v.PolicyNames }).(pulumi.StringArrayOutput)
}

// The OUTSCALE Resource Name (ORN) of the server certificate. For more information, see [Resource Identifiers > OUTSCALE Resource Names (ORNs)](https://docs.outscale.com/en/userguide/Resource-Identifiers.html#_outscale_resource_names_orns).
func (o GetLoadBalancersLoadBalancerListenerOutput) ServerCertificateId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancersLoadBalancerListener) string { return v.ServerCertificateId }).(pulumi.StringOutput)
}

type GetLoadBalancersLoadBalancerListenerArrayOutput struct{ *pulumi.OutputState }

func (GetLoadBalancersLoadBalancerListenerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLoadBalancersLoadBalancerListener)(nil)).Elem()
}

func (o GetLoadBalancersLoadBalancerListenerArrayOutput) ToGetLoadBalancersLoadBalancerListenerArrayOutput() GetLoadBalancersLoadBalancerListenerArrayOutput {
	return o
}

func (o GetLoadBalancersLoadBalancerListenerArrayOutput) ToGetLoadBalancersLoadBalancerListenerArrayOutputWithContext(ctx context.Context) GetLoadBalancersLoadBalancerListenerArrayOutput {
	return o
}

func (o GetLoadBalancersLoadBalancerListenerArrayOutput) Index(i pulumi.IntInput) GetLoadBalancersLoadBalancerListenerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLoadBalancersLoadBalancerListener {
		return vs[0].([]GetLoadBalancersLoadBalancerListener)[vs[1].(int)]
	}).(GetLoadBalancersLoadBalancerListenerOutput)
}

type GetLoadBalancersLoadBalancerLoadBalancerStickyCookiePolicy struct {
	// The name of the stickiness policy.
	PolicyName string `pulumi:"policyName"`
}

// GetLoadBalancersLoadBalancerLoadBalancerStickyCookiePolicyInput is an input type that accepts GetLoadBalancersLoadBalancerLoadBalancerStickyCookiePolicyArgs and GetLoadBalancersLoadBalancerLoadBalancerStickyCookiePolicyOutput values.
// You can construct a concrete instance of `GetLoadBalancersLoadBalancerLoadBalancerStickyCookiePolicyInput` via:
//
//	GetLoadBalancersLoadBalancerLoadBalancerStickyCookiePolicyArgs{...}
type GetLoadBalancersLoadBalancerLoadBalancerStickyCookiePolicyInput interface {
	pulumi.Input

	ToGetLoadBalancersLoadBalancerLoadBalancerStickyCookiePolicyOutput() GetLoadBalancersLoadBalancerLoadBalancerStickyCookiePolicyOutput
	ToGetLoadBalancersLoadBalancerLoadBalancerStickyCookiePolicyOutputWithContext(context.Context) GetLoadBalancersLoadBalancerLoadBalancerStickyCookiePolicyOutput
}

type GetLoadBalancersLoadBalancerLoadBalancerStickyCookiePolicyArgs struct {
	// The name of the stickiness policy.
	PolicyName pulumi.StringInput `pulumi:"policyName"`
}

func (GetLoadBalancersLoadBalancerLoadBalancerStickyCookiePolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLoadBalancersLoadBalancerLoadBalancerStickyCookiePolicy)(nil)).Elem()
}

func (i GetLoadBalancersLoadBalancerLoadBalancerStickyCookiePolicyArgs) ToGetLoadBalancersLoadBalancerLoadBalancerStickyCookiePolicyOutput() GetLoadBalancersLoadBalancerLoadBalancerStickyCookiePolicyOutput {
	return i.ToGetLoadBalancersLoadBalancerLoadBalancerStickyCookiePolicyOutputWithContext(context.Background())
}

func (i GetLoadBalancersLoadBalancerLoadBalancerStickyCookiePolicyArgs) ToGetLoadBalancersLoadBalancerLoadBalancerStickyCookiePolicyOutputWithContext(ctx context.Context) GetLoadBalancersLoadBalancerLoadBalancerStickyCookiePolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLoadBalancersLoadBalancerLoadBalancerStickyCookiePolicyOutput)
}

// GetLoadBalancersLoadBalancerLoadBalancerStickyCookiePolicyArrayInput is an input type that accepts GetLoadBalancersLoadBalancerLoadBalancerStickyCookiePolicyArray and GetLoadBalancersLoadBalancerLoadBalancerStickyCookiePolicyArrayOutput values.
// You can construct a concrete instance of `GetLoadBalancersLoadBalancerLoadBalancerStickyCookiePolicyArrayInput` via:
//
//	GetLoadBalancersLoadBalancerLoadBalancerStickyCookiePolicyArray{ GetLoadBalancersLoadBalancerLoadBalancerStickyCookiePolicyArgs{...} }
type GetLoadBalancersLoadBalancerLoadBalancerStickyCookiePolicyArrayInput interface {
	pulumi.Input

	ToGetLoadBalancersLoadBalancerLoadBalancerStickyCookiePolicyArrayOutput() GetLoadBalancersLoadBalancerLoadBalancerStickyCookiePolicyArrayOutput
	ToGetLoadBalancersLoadBalancerLoadBalancerStickyCookiePolicyArrayOutputWithContext(context.Context) GetLoadBalancersLoadBalancerLoadBalancerStickyCookiePolicyArrayOutput
}

type GetLoadBalancersLoadBalancerLoadBalancerStickyCookiePolicyArray []GetLoadBalancersLoadBalancerLoadBalancerStickyCookiePolicyInput

func (GetLoadBalancersLoadBalancerLoadBalancerStickyCookiePolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLoadBalancersLoadBalancerLoadBalancerStickyCookiePolicy)(nil)).Elem()
}

func (i GetLoadBalancersLoadBalancerLoadBalancerStickyCookiePolicyArray) ToGetLoadBalancersLoadBalancerLoadBalancerStickyCookiePolicyArrayOutput() GetLoadBalancersLoadBalancerLoadBalancerStickyCookiePolicyArrayOutput {
	return i.ToGetLoadBalancersLoadBalancerLoadBalancerStickyCookiePolicyArrayOutputWithContext(context.Background())
}

func (i GetLoadBalancersLoadBalancerLoadBalancerStickyCookiePolicyArray) ToGetLoadBalancersLoadBalancerLoadBalancerStickyCookiePolicyArrayOutputWithContext(ctx context.Context) GetLoadBalancersLoadBalancerLoadBalancerStickyCookiePolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLoadBalancersLoadBalancerLoadBalancerStickyCookiePolicyArrayOutput)
}

type GetLoadBalancersLoadBalancerLoadBalancerStickyCookiePolicyOutput struct{ *pulumi.OutputState }

func (GetLoadBalancersLoadBalancerLoadBalancerStickyCookiePolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLoadBalancersLoadBalancerLoadBalancerStickyCookiePolicy)(nil)).Elem()
}

func (o GetLoadBalancersLoadBalancerLoadBalancerStickyCookiePolicyOutput) ToGetLoadBalancersLoadBalancerLoadBalancerStickyCookiePolicyOutput() GetLoadBalancersLoadBalancerLoadBalancerStickyCookiePolicyOutput {
	return o
}

func (o GetLoadBalancersLoadBalancerLoadBalancerStickyCookiePolicyOutput) ToGetLoadBalancersLoadBalancerLoadBalancerStickyCookiePolicyOutputWithContext(ctx context.Context) GetLoadBalancersLoadBalancerLoadBalancerStickyCookiePolicyOutput {
	return o
}

// The name of the stickiness policy.
func (o GetLoadBalancersLoadBalancerLoadBalancerStickyCookiePolicyOutput) PolicyName() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancersLoadBalancerLoadBalancerStickyCookiePolicy) string { return v.PolicyName }).(pulumi.StringOutput)
}

type GetLoadBalancersLoadBalancerLoadBalancerStickyCookiePolicyArrayOutput struct{ *pulumi.OutputState }

func (GetLoadBalancersLoadBalancerLoadBalancerStickyCookiePolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLoadBalancersLoadBalancerLoadBalancerStickyCookiePolicy)(nil)).Elem()
}

func (o GetLoadBalancersLoadBalancerLoadBalancerStickyCookiePolicyArrayOutput) ToGetLoadBalancersLoadBalancerLoadBalancerStickyCookiePolicyArrayOutput() GetLoadBalancersLoadBalancerLoadBalancerStickyCookiePolicyArrayOutput {
	return o
}

func (o GetLoadBalancersLoadBalancerLoadBalancerStickyCookiePolicyArrayOutput) ToGetLoadBalancersLoadBalancerLoadBalancerStickyCookiePolicyArrayOutputWithContext(ctx context.Context) GetLoadBalancersLoadBalancerLoadBalancerStickyCookiePolicyArrayOutput {
	return o
}

func (o GetLoadBalancersLoadBalancerLoadBalancerStickyCookiePolicyArrayOutput) Index(i pulumi.IntInput) GetLoadBalancersLoadBalancerLoadBalancerStickyCookiePolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLoadBalancersLoadBalancerLoadBalancerStickyCookiePolicy {
		return vs[0].([]GetLoadBalancersLoadBalancerLoadBalancerStickyCookiePolicy)[vs[1].(int)]
	}).(GetLoadBalancersLoadBalancerLoadBalancerStickyCookiePolicyOutput)
}

type GetLoadBalancersLoadBalancerSourceSecurityGroup struct {
	// The account ID of the owner of the security group.
	SecurityGroupAccountId string `pulumi:"securityGroupAccountId"`
	// The name of the security group.
	SecurityGroupName string `pulumi:"securityGroupName"`
}

// GetLoadBalancersLoadBalancerSourceSecurityGroupInput is an input type that accepts GetLoadBalancersLoadBalancerSourceSecurityGroupArgs and GetLoadBalancersLoadBalancerSourceSecurityGroupOutput values.
// You can construct a concrete instance of `GetLoadBalancersLoadBalancerSourceSecurityGroupInput` via:
//
//	GetLoadBalancersLoadBalancerSourceSecurityGroupArgs{...}
type GetLoadBalancersLoadBalancerSourceSecurityGroupInput interface {
	pulumi.Input

	ToGetLoadBalancersLoadBalancerSourceSecurityGroupOutput() GetLoadBalancersLoadBalancerSourceSecurityGroupOutput
	ToGetLoadBalancersLoadBalancerSourceSecurityGroupOutputWithContext(context.Context) GetLoadBalancersLoadBalancerSourceSecurityGroupOutput
}

type GetLoadBalancersLoadBalancerSourceSecurityGroupArgs struct {
	// The account ID of the owner of the security group.
	SecurityGroupAccountId pulumi.StringInput `pulumi:"securityGroupAccountId"`
	// The name of the security group.
	SecurityGroupName pulumi.StringInput `pulumi:"securityGroupName"`
}

func (GetLoadBalancersLoadBalancerSourceSecurityGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLoadBalancersLoadBalancerSourceSecurityGroup)(nil)).Elem()
}

func (i GetLoadBalancersLoadBalancerSourceSecurityGroupArgs) ToGetLoadBalancersLoadBalancerSourceSecurityGroupOutput() GetLoadBalancersLoadBalancerSourceSecurityGroupOutput {
	return i.ToGetLoadBalancersLoadBalancerSourceSecurityGroupOutputWithContext(context.Background())
}

func (i GetLoadBalancersLoadBalancerSourceSecurityGroupArgs) ToGetLoadBalancersLoadBalancerSourceSecurityGroupOutputWithContext(ctx context.Context) GetLoadBalancersLoadBalancerSourceSecurityGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLoadBalancersLoadBalancerSourceSecurityGroupOutput)
}

// GetLoadBalancersLoadBalancerSourceSecurityGroupArrayInput is an input type that accepts GetLoadBalancersLoadBalancerSourceSecurityGroupArray and GetLoadBalancersLoadBalancerSourceSecurityGroupArrayOutput values.
// You can construct a concrete instance of `GetLoadBalancersLoadBalancerSourceSecurityGroupArrayInput` via:
//
//	GetLoadBalancersLoadBalancerSourceSecurityGroupArray{ GetLoadBalancersLoadBalancerSourceSecurityGroupArgs{...} }
type GetLoadBalancersLoadBalancerSourceSecurityGroupArrayInput interface {
	pulumi.Input

	ToGetLoadBalancersLoadBalancerSourceSecurityGroupArrayOutput() GetLoadBalancersLoadBalancerSourceSecurityGroupArrayOutput
	ToGetLoadBalancersLoadBalancerSourceSecurityGroupArrayOutputWithContext(context.Context) GetLoadBalancersLoadBalancerSourceSecurityGroupArrayOutput
}

type GetLoadBalancersLoadBalancerSourceSecurityGroupArray []GetLoadBalancersLoadBalancerSourceSecurityGroupInput

func (GetLoadBalancersLoadBalancerSourceSecurityGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLoadBalancersLoadBalancerSourceSecurityGroup)(nil)).Elem()
}

func (i GetLoadBalancersLoadBalancerSourceSecurityGroupArray) ToGetLoadBalancersLoadBalancerSourceSecurityGroupArrayOutput() GetLoadBalancersLoadBalancerSourceSecurityGroupArrayOutput {
	return i.ToGetLoadBalancersLoadBalancerSourceSecurityGroupArrayOutputWithContext(context.Background())
}

func (i GetLoadBalancersLoadBalancerSourceSecurityGroupArray) ToGetLoadBalancersLoadBalancerSourceSecurityGroupArrayOutputWithContext(ctx context.Context) GetLoadBalancersLoadBalancerSourceSecurityGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLoadBalancersLoadBalancerSourceSecurityGroupArrayOutput)
}

type GetLoadBalancersLoadBalancerSourceSecurityGroupOutput struct{ *pulumi.OutputState }

func (GetLoadBalancersLoadBalancerSourceSecurityGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLoadBalancersLoadBalancerSourceSecurityGroup)(nil)).Elem()
}

func (o GetLoadBalancersLoadBalancerSourceSecurityGroupOutput) ToGetLoadBalancersLoadBalancerSourceSecurityGroupOutput() GetLoadBalancersLoadBalancerSourceSecurityGroupOutput {
	return o
}

func (o GetLoadBalancersLoadBalancerSourceSecurityGroupOutput) ToGetLoadBalancersLoadBalancerSourceSecurityGroupOutputWithContext(ctx context.Context) GetLoadBalancersLoadBalancerSourceSecurityGroupOutput {
	return o
}

// The account ID of the owner of the security group.
func (o GetLoadBalancersLoadBalancerSourceSecurityGroupOutput) SecurityGroupAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancersLoadBalancerSourceSecurityGroup) string { return v.SecurityGroupAccountId }).(pulumi.StringOutput)
}

// The name of the security group.
func (o GetLoadBalancersLoadBalancerSourceSecurityGroupOutput) SecurityGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancersLoadBalancerSourceSecurityGroup) string { return v.SecurityGroupName }).(pulumi.StringOutput)
}

type GetLoadBalancersLoadBalancerSourceSecurityGroupArrayOutput struct{ *pulumi.OutputState }

func (GetLoadBalancersLoadBalancerSourceSecurityGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLoadBalancersLoadBalancerSourceSecurityGroup)(nil)).Elem()
}

func (o GetLoadBalancersLoadBalancerSourceSecurityGroupArrayOutput) ToGetLoadBalancersLoadBalancerSourceSecurityGroupArrayOutput() GetLoadBalancersLoadBalancerSourceSecurityGroupArrayOutput {
	return o
}

func (o GetLoadBalancersLoadBalancerSourceSecurityGroupArrayOutput) ToGetLoadBalancersLoadBalancerSourceSecurityGroupArrayOutputWithContext(ctx context.Context) GetLoadBalancersLoadBalancerSourceSecurityGroupArrayOutput {
	return o
}

func (o GetLoadBalancersLoadBalancerSourceSecurityGroupArrayOutput) Index(i pulumi.IntInput) GetLoadBalancersLoadBalancerSourceSecurityGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLoadBalancersLoadBalancerSourceSecurityGroup {
		return vs[0].([]GetLoadBalancersLoadBalancerSourceSecurityGroup)[vs[1].(int)]
	}).(GetLoadBalancersLoadBalancerSourceSecurityGroupOutput)
}

type GetLoadBalancersLoadBalancerTag struct {
	// The key of the tag, with a minimum of 1 character.
	Key string `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value string `pulumi:"value"`
}

// GetLoadBalancersLoadBalancerTagInput is an input type that accepts GetLoadBalancersLoadBalancerTagArgs and GetLoadBalancersLoadBalancerTagOutput values.
// You can construct a concrete instance of `GetLoadBalancersLoadBalancerTagInput` via:
//
//	GetLoadBalancersLoadBalancerTagArgs{...}
type GetLoadBalancersLoadBalancerTagInput interface {
	pulumi.Input

	ToGetLoadBalancersLoadBalancerTagOutput() GetLoadBalancersLoadBalancerTagOutput
	ToGetLoadBalancersLoadBalancerTagOutputWithContext(context.Context) GetLoadBalancersLoadBalancerTagOutput
}

type GetLoadBalancersLoadBalancerTagArgs struct {
	// The key of the tag, with a minimum of 1 character.
	Key pulumi.StringInput `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetLoadBalancersLoadBalancerTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLoadBalancersLoadBalancerTag)(nil)).Elem()
}

func (i GetLoadBalancersLoadBalancerTagArgs) ToGetLoadBalancersLoadBalancerTagOutput() GetLoadBalancersLoadBalancerTagOutput {
	return i.ToGetLoadBalancersLoadBalancerTagOutputWithContext(context.Background())
}

func (i GetLoadBalancersLoadBalancerTagArgs) ToGetLoadBalancersLoadBalancerTagOutputWithContext(ctx context.Context) GetLoadBalancersLoadBalancerTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLoadBalancersLoadBalancerTagOutput)
}

// GetLoadBalancersLoadBalancerTagArrayInput is an input type that accepts GetLoadBalancersLoadBalancerTagArray and GetLoadBalancersLoadBalancerTagArrayOutput values.
// You can construct a concrete instance of `GetLoadBalancersLoadBalancerTagArrayInput` via:
//
//	GetLoadBalancersLoadBalancerTagArray{ GetLoadBalancersLoadBalancerTagArgs{...} }
type GetLoadBalancersLoadBalancerTagArrayInput interface {
	pulumi.Input

	ToGetLoadBalancersLoadBalancerTagArrayOutput() GetLoadBalancersLoadBalancerTagArrayOutput
	ToGetLoadBalancersLoadBalancerTagArrayOutputWithContext(context.Context) GetLoadBalancersLoadBalancerTagArrayOutput
}

type GetLoadBalancersLoadBalancerTagArray []GetLoadBalancersLoadBalancerTagInput

func (GetLoadBalancersLoadBalancerTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLoadBalancersLoadBalancerTag)(nil)).Elem()
}

func (i GetLoadBalancersLoadBalancerTagArray) ToGetLoadBalancersLoadBalancerTagArrayOutput() GetLoadBalancersLoadBalancerTagArrayOutput {
	return i.ToGetLoadBalancersLoadBalancerTagArrayOutputWithContext(context.Background())
}

func (i GetLoadBalancersLoadBalancerTagArray) ToGetLoadBalancersLoadBalancerTagArrayOutputWithContext(ctx context.Context) GetLoadBalancersLoadBalancerTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLoadBalancersLoadBalancerTagArrayOutput)
}

type GetLoadBalancersLoadBalancerTagOutput struct{ *pulumi.OutputState }

func (GetLoadBalancersLoadBalancerTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLoadBalancersLoadBalancerTag)(nil)).Elem()
}

func (o GetLoadBalancersLoadBalancerTagOutput) ToGetLoadBalancersLoadBalancerTagOutput() GetLoadBalancersLoadBalancerTagOutput {
	return o
}

func (o GetLoadBalancersLoadBalancerTagOutput) ToGetLoadBalancersLoadBalancerTagOutputWithContext(ctx context.Context) GetLoadBalancersLoadBalancerTagOutput {
	return o
}

// The key of the tag, with a minimum of 1 character.
func (o GetLoadBalancersLoadBalancerTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancersLoadBalancerTag) string { return v.Key }).(pulumi.StringOutput)
}

// The value of the tag, between 0 and 255 characters.
func (o GetLoadBalancersLoadBalancerTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancersLoadBalancerTag) string { return v.Value }).(pulumi.StringOutput)
}

type GetLoadBalancersLoadBalancerTagArrayOutput struct{ *pulumi.OutputState }

func (GetLoadBalancersLoadBalancerTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLoadBalancersLoadBalancerTag)(nil)).Elem()
}

func (o GetLoadBalancersLoadBalancerTagArrayOutput) ToGetLoadBalancersLoadBalancerTagArrayOutput() GetLoadBalancersLoadBalancerTagArrayOutput {
	return o
}

func (o GetLoadBalancersLoadBalancerTagArrayOutput) ToGetLoadBalancersLoadBalancerTagArrayOutputWithContext(ctx context.Context) GetLoadBalancersLoadBalancerTagArrayOutput {
	return o
}

func (o GetLoadBalancersLoadBalancerTagArrayOutput) Index(i pulumi.IntInput) GetLoadBalancersLoadBalancerTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLoadBalancersLoadBalancerTag {
		return vs[0].([]GetLoadBalancersLoadBalancerTag)[vs[1].(int)]
	}).(GetLoadBalancersLoadBalancerTagOutput)
}

type GetNatServiceFilter struct {
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// GetNatServiceFilterInput is an input type that accepts GetNatServiceFilterArgs and GetNatServiceFilterOutput values.
// You can construct a concrete instance of `GetNatServiceFilterInput` via:
//
//	GetNatServiceFilterArgs{...}
type GetNatServiceFilterInput interface {
	pulumi.Input

	ToGetNatServiceFilterOutput() GetNatServiceFilterOutput
	ToGetNatServiceFilterOutputWithContext(context.Context) GetNatServiceFilterOutput
}

type GetNatServiceFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetNatServiceFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNatServiceFilter)(nil)).Elem()
}

func (i GetNatServiceFilterArgs) ToGetNatServiceFilterOutput() GetNatServiceFilterOutput {
	return i.ToGetNatServiceFilterOutputWithContext(context.Background())
}

func (i GetNatServiceFilterArgs) ToGetNatServiceFilterOutputWithContext(ctx context.Context) GetNatServiceFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNatServiceFilterOutput)
}

// GetNatServiceFilterArrayInput is an input type that accepts GetNatServiceFilterArray and GetNatServiceFilterArrayOutput values.
// You can construct a concrete instance of `GetNatServiceFilterArrayInput` via:
//
//	GetNatServiceFilterArray{ GetNatServiceFilterArgs{...} }
type GetNatServiceFilterArrayInput interface {
	pulumi.Input

	ToGetNatServiceFilterArrayOutput() GetNatServiceFilterArrayOutput
	ToGetNatServiceFilterArrayOutputWithContext(context.Context) GetNatServiceFilterArrayOutput
}

type GetNatServiceFilterArray []GetNatServiceFilterInput

func (GetNatServiceFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNatServiceFilter)(nil)).Elem()
}

func (i GetNatServiceFilterArray) ToGetNatServiceFilterArrayOutput() GetNatServiceFilterArrayOutput {
	return i.ToGetNatServiceFilterArrayOutputWithContext(context.Background())
}

func (i GetNatServiceFilterArray) ToGetNatServiceFilterArrayOutputWithContext(ctx context.Context) GetNatServiceFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNatServiceFilterArrayOutput)
}

type GetNatServiceFilterOutput struct{ *pulumi.OutputState }

func (GetNatServiceFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNatServiceFilter)(nil)).Elem()
}

func (o GetNatServiceFilterOutput) ToGetNatServiceFilterOutput() GetNatServiceFilterOutput {
	return o
}

func (o GetNatServiceFilterOutput) ToGetNatServiceFilterOutputWithContext(ctx context.Context) GetNatServiceFilterOutput {
	return o
}

func (o GetNatServiceFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetNatServiceFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetNatServiceFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNatServiceFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetNatServiceFilterArrayOutput struct{ *pulumi.OutputState }

func (GetNatServiceFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNatServiceFilter)(nil)).Elem()
}

func (o GetNatServiceFilterArrayOutput) ToGetNatServiceFilterArrayOutput() GetNatServiceFilterArrayOutput {
	return o
}

func (o GetNatServiceFilterArrayOutput) ToGetNatServiceFilterArrayOutputWithContext(ctx context.Context) GetNatServiceFilterArrayOutput {
	return o
}

func (o GetNatServiceFilterArrayOutput) Index(i pulumi.IntInput) GetNatServiceFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNatServiceFilter {
		return vs[0].([]GetNatServiceFilter)[vs[1].(int)]
	}).(GetNatServiceFilterOutput)
}

type GetNatServicePublicIp struct {
	// The public IP associated with the NAT service.
	PublicIp string `pulumi:"publicIp"`
	// The allocation ID of the public IP associated with the NAT service.
	PublicIpId string `pulumi:"publicIpId"`
}

// GetNatServicePublicIpInput is an input type that accepts GetNatServicePublicIpArgs and GetNatServicePublicIpOutput values.
// You can construct a concrete instance of `GetNatServicePublicIpInput` via:
//
//	GetNatServicePublicIpArgs{...}
type GetNatServicePublicIpInput interface {
	pulumi.Input

	ToGetNatServicePublicIpOutput() GetNatServicePublicIpOutput
	ToGetNatServicePublicIpOutputWithContext(context.Context) GetNatServicePublicIpOutput
}

type GetNatServicePublicIpArgs struct {
	// The public IP associated with the NAT service.
	PublicIp pulumi.StringInput `pulumi:"publicIp"`
	// The allocation ID of the public IP associated with the NAT service.
	PublicIpId pulumi.StringInput `pulumi:"publicIpId"`
}

func (GetNatServicePublicIpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNatServicePublicIp)(nil)).Elem()
}

func (i GetNatServicePublicIpArgs) ToGetNatServicePublicIpOutput() GetNatServicePublicIpOutput {
	return i.ToGetNatServicePublicIpOutputWithContext(context.Background())
}

func (i GetNatServicePublicIpArgs) ToGetNatServicePublicIpOutputWithContext(ctx context.Context) GetNatServicePublicIpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNatServicePublicIpOutput)
}

// GetNatServicePublicIpArrayInput is an input type that accepts GetNatServicePublicIpArray and GetNatServicePublicIpArrayOutput values.
// You can construct a concrete instance of `GetNatServicePublicIpArrayInput` via:
//
//	GetNatServicePublicIpArray{ GetNatServicePublicIpArgs{...} }
type GetNatServicePublicIpArrayInput interface {
	pulumi.Input

	ToGetNatServicePublicIpArrayOutput() GetNatServicePublicIpArrayOutput
	ToGetNatServicePublicIpArrayOutputWithContext(context.Context) GetNatServicePublicIpArrayOutput
}

type GetNatServicePublicIpArray []GetNatServicePublicIpInput

func (GetNatServicePublicIpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNatServicePublicIp)(nil)).Elem()
}

func (i GetNatServicePublicIpArray) ToGetNatServicePublicIpArrayOutput() GetNatServicePublicIpArrayOutput {
	return i.ToGetNatServicePublicIpArrayOutputWithContext(context.Background())
}

func (i GetNatServicePublicIpArray) ToGetNatServicePublicIpArrayOutputWithContext(ctx context.Context) GetNatServicePublicIpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNatServicePublicIpArrayOutput)
}

type GetNatServicePublicIpOutput struct{ *pulumi.OutputState }

func (GetNatServicePublicIpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNatServicePublicIp)(nil)).Elem()
}

func (o GetNatServicePublicIpOutput) ToGetNatServicePublicIpOutput() GetNatServicePublicIpOutput {
	return o
}

func (o GetNatServicePublicIpOutput) ToGetNatServicePublicIpOutputWithContext(ctx context.Context) GetNatServicePublicIpOutput {
	return o
}

// The public IP associated with the NAT service.
func (o GetNatServicePublicIpOutput) PublicIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetNatServicePublicIp) string { return v.PublicIp }).(pulumi.StringOutput)
}

// The allocation ID of the public IP associated with the NAT service.
func (o GetNatServicePublicIpOutput) PublicIpId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNatServicePublicIp) string { return v.PublicIpId }).(pulumi.StringOutput)
}

type GetNatServicePublicIpArrayOutput struct{ *pulumi.OutputState }

func (GetNatServicePublicIpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNatServicePublicIp)(nil)).Elem()
}

func (o GetNatServicePublicIpArrayOutput) ToGetNatServicePublicIpArrayOutput() GetNatServicePublicIpArrayOutput {
	return o
}

func (o GetNatServicePublicIpArrayOutput) ToGetNatServicePublicIpArrayOutputWithContext(ctx context.Context) GetNatServicePublicIpArrayOutput {
	return o
}

func (o GetNatServicePublicIpArrayOutput) Index(i pulumi.IntInput) GetNatServicePublicIpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNatServicePublicIp {
		return vs[0].([]GetNatServicePublicIp)[vs[1].(int)]
	}).(GetNatServicePublicIpOutput)
}

type GetNatServiceTag struct {
	// The key of the tag, with a minimum of 1 character.
	Key string `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value string `pulumi:"value"`
}

// GetNatServiceTagInput is an input type that accepts GetNatServiceTagArgs and GetNatServiceTagOutput values.
// You can construct a concrete instance of `GetNatServiceTagInput` via:
//
//	GetNatServiceTagArgs{...}
type GetNatServiceTagInput interface {
	pulumi.Input

	ToGetNatServiceTagOutput() GetNatServiceTagOutput
	ToGetNatServiceTagOutputWithContext(context.Context) GetNatServiceTagOutput
}

type GetNatServiceTagArgs struct {
	// The key of the tag, with a minimum of 1 character.
	Key pulumi.StringInput `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetNatServiceTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNatServiceTag)(nil)).Elem()
}

func (i GetNatServiceTagArgs) ToGetNatServiceTagOutput() GetNatServiceTagOutput {
	return i.ToGetNatServiceTagOutputWithContext(context.Background())
}

func (i GetNatServiceTagArgs) ToGetNatServiceTagOutputWithContext(ctx context.Context) GetNatServiceTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNatServiceTagOutput)
}

// GetNatServiceTagArrayInput is an input type that accepts GetNatServiceTagArray and GetNatServiceTagArrayOutput values.
// You can construct a concrete instance of `GetNatServiceTagArrayInput` via:
//
//	GetNatServiceTagArray{ GetNatServiceTagArgs{...} }
type GetNatServiceTagArrayInput interface {
	pulumi.Input

	ToGetNatServiceTagArrayOutput() GetNatServiceTagArrayOutput
	ToGetNatServiceTagArrayOutputWithContext(context.Context) GetNatServiceTagArrayOutput
}

type GetNatServiceTagArray []GetNatServiceTagInput

func (GetNatServiceTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNatServiceTag)(nil)).Elem()
}

func (i GetNatServiceTagArray) ToGetNatServiceTagArrayOutput() GetNatServiceTagArrayOutput {
	return i.ToGetNatServiceTagArrayOutputWithContext(context.Background())
}

func (i GetNatServiceTagArray) ToGetNatServiceTagArrayOutputWithContext(ctx context.Context) GetNatServiceTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNatServiceTagArrayOutput)
}

type GetNatServiceTagOutput struct{ *pulumi.OutputState }

func (GetNatServiceTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNatServiceTag)(nil)).Elem()
}

func (o GetNatServiceTagOutput) ToGetNatServiceTagOutput() GetNatServiceTagOutput {
	return o
}

func (o GetNatServiceTagOutput) ToGetNatServiceTagOutputWithContext(ctx context.Context) GetNatServiceTagOutput {
	return o
}

// The key of the tag, with a minimum of 1 character.
func (o GetNatServiceTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetNatServiceTag) string { return v.Key }).(pulumi.StringOutput)
}

// The value of the tag, between 0 and 255 characters.
func (o GetNatServiceTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetNatServiceTag) string { return v.Value }).(pulumi.StringOutput)
}

type GetNatServiceTagArrayOutput struct{ *pulumi.OutputState }

func (GetNatServiceTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNatServiceTag)(nil)).Elem()
}

func (o GetNatServiceTagArrayOutput) ToGetNatServiceTagArrayOutput() GetNatServiceTagArrayOutput {
	return o
}

func (o GetNatServiceTagArrayOutput) ToGetNatServiceTagArrayOutputWithContext(ctx context.Context) GetNatServiceTagArrayOutput {
	return o
}

func (o GetNatServiceTagArrayOutput) Index(i pulumi.IntInput) GetNatServiceTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNatServiceTag {
		return vs[0].([]GetNatServiceTag)[vs[1].(int)]
	}).(GetNatServiceTagOutput)
}

type GetNatServicesFilter struct {
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// GetNatServicesFilterInput is an input type that accepts GetNatServicesFilterArgs and GetNatServicesFilterOutput values.
// You can construct a concrete instance of `GetNatServicesFilterInput` via:
//
//	GetNatServicesFilterArgs{...}
type GetNatServicesFilterInput interface {
	pulumi.Input

	ToGetNatServicesFilterOutput() GetNatServicesFilterOutput
	ToGetNatServicesFilterOutputWithContext(context.Context) GetNatServicesFilterOutput
}

type GetNatServicesFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetNatServicesFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNatServicesFilter)(nil)).Elem()
}

func (i GetNatServicesFilterArgs) ToGetNatServicesFilterOutput() GetNatServicesFilterOutput {
	return i.ToGetNatServicesFilterOutputWithContext(context.Background())
}

func (i GetNatServicesFilterArgs) ToGetNatServicesFilterOutputWithContext(ctx context.Context) GetNatServicesFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNatServicesFilterOutput)
}

// GetNatServicesFilterArrayInput is an input type that accepts GetNatServicesFilterArray and GetNatServicesFilterArrayOutput values.
// You can construct a concrete instance of `GetNatServicesFilterArrayInput` via:
//
//	GetNatServicesFilterArray{ GetNatServicesFilterArgs{...} }
type GetNatServicesFilterArrayInput interface {
	pulumi.Input

	ToGetNatServicesFilterArrayOutput() GetNatServicesFilterArrayOutput
	ToGetNatServicesFilterArrayOutputWithContext(context.Context) GetNatServicesFilterArrayOutput
}

type GetNatServicesFilterArray []GetNatServicesFilterInput

func (GetNatServicesFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNatServicesFilter)(nil)).Elem()
}

func (i GetNatServicesFilterArray) ToGetNatServicesFilterArrayOutput() GetNatServicesFilterArrayOutput {
	return i.ToGetNatServicesFilterArrayOutputWithContext(context.Background())
}

func (i GetNatServicesFilterArray) ToGetNatServicesFilterArrayOutputWithContext(ctx context.Context) GetNatServicesFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNatServicesFilterArrayOutput)
}

type GetNatServicesFilterOutput struct{ *pulumi.OutputState }

func (GetNatServicesFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNatServicesFilter)(nil)).Elem()
}

func (o GetNatServicesFilterOutput) ToGetNatServicesFilterOutput() GetNatServicesFilterOutput {
	return o
}

func (o GetNatServicesFilterOutput) ToGetNatServicesFilterOutputWithContext(ctx context.Context) GetNatServicesFilterOutput {
	return o
}

func (o GetNatServicesFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetNatServicesFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetNatServicesFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNatServicesFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetNatServicesFilterArrayOutput struct{ *pulumi.OutputState }

func (GetNatServicesFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNatServicesFilter)(nil)).Elem()
}

func (o GetNatServicesFilterArrayOutput) ToGetNatServicesFilterArrayOutput() GetNatServicesFilterArrayOutput {
	return o
}

func (o GetNatServicesFilterArrayOutput) ToGetNatServicesFilterArrayOutputWithContext(ctx context.Context) GetNatServicesFilterArrayOutput {
	return o
}

func (o GetNatServicesFilterArrayOutput) Index(i pulumi.IntInput) GetNatServicesFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNatServicesFilter {
		return vs[0].([]GetNatServicesFilter)[vs[1].(int)]
	}).(GetNatServicesFilterOutput)
}

type GetNatServicesNatService struct {
	// The ID of the NAT service.
	NatServiceId string `pulumi:"natServiceId"`
	// The ID of the Net in which the NAT service is.
	NetId string `pulumi:"netId"`
	// Information about the public IP or IPs associated with the NAT service.
	PublicIps []GetNatServicesNatServicePublicIp `pulumi:"publicIps"`
	// The state of the NAT service (`pending` \| `available` \| `deleting` \| `deleted`).
	State string `pulumi:"state"`
	// The ID of the Subnet in which the NAT service is.
	SubnetId string `pulumi:"subnetId"`
	// One or more tags associated with the NAT service.
	Tags []GetNatServicesNatServiceTag `pulumi:"tags"`
}

// GetNatServicesNatServiceInput is an input type that accepts GetNatServicesNatServiceArgs and GetNatServicesNatServiceOutput values.
// You can construct a concrete instance of `GetNatServicesNatServiceInput` via:
//
//	GetNatServicesNatServiceArgs{...}
type GetNatServicesNatServiceInput interface {
	pulumi.Input

	ToGetNatServicesNatServiceOutput() GetNatServicesNatServiceOutput
	ToGetNatServicesNatServiceOutputWithContext(context.Context) GetNatServicesNatServiceOutput
}

type GetNatServicesNatServiceArgs struct {
	// The ID of the NAT service.
	NatServiceId pulumi.StringInput `pulumi:"natServiceId"`
	// The ID of the Net in which the NAT service is.
	NetId pulumi.StringInput `pulumi:"netId"`
	// Information about the public IP or IPs associated with the NAT service.
	PublicIps GetNatServicesNatServicePublicIpArrayInput `pulumi:"publicIps"`
	// The state of the NAT service (`pending` \| `available` \| `deleting` \| `deleted`).
	State pulumi.StringInput `pulumi:"state"`
	// The ID of the Subnet in which the NAT service is.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
	// One or more tags associated with the NAT service.
	Tags GetNatServicesNatServiceTagArrayInput `pulumi:"tags"`
}

func (GetNatServicesNatServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNatServicesNatService)(nil)).Elem()
}

func (i GetNatServicesNatServiceArgs) ToGetNatServicesNatServiceOutput() GetNatServicesNatServiceOutput {
	return i.ToGetNatServicesNatServiceOutputWithContext(context.Background())
}

func (i GetNatServicesNatServiceArgs) ToGetNatServicesNatServiceOutputWithContext(ctx context.Context) GetNatServicesNatServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNatServicesNatServiceOutput)
}

// GetNatServicesNatServiceArrayInput is an input type that accepts GetNatServicesNatServiceArray and GetNatServicesNatServiceArrayOutput values.
// You can construct a concrete instance of `GetNatServicesNatServiceArrayInput` via:
//
//	GetNatServicesNatServiceArray{ GetNatServicesNatServiceArgs{...} }
type GetNatServicesNatServiceArrayInput interface {
	pulumi.Input

	ToGetNatServicesNatServiceArrayOutput() GetNatServicesNatServiceArrayOutput
	ToGetNatServicesNatServiceArrayOutputWithContext(context.Context) GetNatServicesNatServiceArrayOutput
}

type GetNatServicesNatServiceArray []GetNatServicesNatServiceInput

func (GetNatServicesNatServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNatServicesNatService)(nil)).Elem()
}

func (i GetNatServicesNatServiceArray) ToGetNatServicesNatServiceArrayOutput() GetNatServicesNatServiceArrayOutput {
	return i.ToGetNatServicesNatServiceArrayOutputWithContext(context.Background())
}

func (i GetNatServicesNatServiceArray) ToGetNatServicesNatServiceArrayOutputWithContext(ctx context.Context) GetNatServicesNatServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNatServicesNatServiceArrayOutput)
}

type GetNatServicesNatServiceOutput struct{ *pulumi.OutputState }

func (GetNatServicesNatServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNatServicesNatService)(nil)).Elem()
}

func (o GetNatServicesNatServiceOutput) ToGetNatServicesNatServiceOutput() GetNatServicesNatServiceOutput {
	return o
}

func (o GetNatServicesNatServiceOutput) ToGetNatServicesNatServiceOutputWithContext(ctx context.Context) GetNatServicesNatServiceOutput {
	return o
}

// The ID of the NAT service.
func (o GetNatServicesNatServiceOutput) NatServiceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNatServicesNatService) string { return v.NatServiceId }).(pulumi.StringOutput)
}

// The ID of the Net in which the NAT service is.
func (o GetNatServicesNatServiceOutput) NetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNatServicesNatService) string { return v.NetId }).(pulumi.StringOutput)
}

// Information about the public IP or IPs associated with the NAT service.
func (o GetNatServicesNatServiceOutput) PublicIps() GetNatServicesNatServicePublicIpArrayOutput {
	return o.ApplyT(func(v GetNatServicesNatService) []GetNatServicesNatServicePublicIp { return v.PublicIps }).(GetNatServicesNatServicePublicIpArrayOutput)
}

// The state of the NAT service (`pending` \| `available` \| `deleting` \| `deleted`).
func (o GetNatServicesNatServiceOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetNatServicesNatService) string { return v.State }).(pulumi.StringOutput)
}

// The ID of the Subnet in which the NAT service is.
func (o GetNatServicesNatServiceOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNatServicesNatService) string { return v.SubnetId }).(pulumi.StringOutput)
}

// One or more tags associated with the NAT service.
func (o GetNatServicesNatServiceOutput) Tags() GetNatServicesNatServiceTagArrayOutput {
	return o.ApplyT(func(v GetNatServicesNatService) []GetNatServicesNatServiceTag { return v.Tags }).(GetNatServicesNatServiceTagArrayOutput)
}

type GetNatServicesNatServiceArrayOutput struct{ *pulumi.OutputState }

func (GetNatServicesNatServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNatServicesNatService)(nil)).Elem()
}

func (o GetNatServicesNatServiceArrayOutput) ToGetNatServicesNatServiceArrayOutput() GetNatServicesNatServiceArrayOutput {
	return o
}

func (o GetNatServicesNatServiceArrayOutput) ToGetNatServicesNatServiceArrayOutputWithContext(ctx context.Context) GetNatServicesNatServiceArrayOutput {
	return o
}

func (o GetNatServicesNatServiceArrayOutput) Index(i pulumi.IntInput) GetNatServicesNatServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNatServicesNatService {
		return vs[0].([]GetNatServicesNatService)[vs[1].(int)]
	}).(GetNatServicesNatServiceOutput)
}

type GetNatServicesNatServicePublicIp struct {
	// The public IP associated with the NAT service.
	PublicIp string `pulumi:"publicIp"`
	// The allocation ID of the public IP associated with the NAT service.
	PublicIpId string `pulumi:"publicIpId"`
}

// GetNatServicesNatServicePublicIpInput is an input type that accepts GetNatServicesNatServicePublicIpArgs and GetNatServicesNatServicePublicIpOutput values.
// You can construct a concrete instance of `GetNatServicesNatServicePublicIpInput` via:
//
//	GetNatServicesNatServicePublicIpArgs{...}
type GetNatServicesNatServicePublicIpInput interface {
	pulumi.Input

	ToGetNatServicesNatServicePublicIpOutput() GetNatServicesNatServicePublicIpOutput
	ToGetNatServicesNatServicePublicIpOutputWithContext(context.Context) GetNatServicesNatServicePublicIpOutput
}

type GetNatServicesNatServicePublicIpArgs struct {
	// The public IP associated with the NAT service.
	PublicIp pulumi.StringInput `pulumi:"publicIp"`
	// The allocation ID of the public IP associated with the NAT service.
	PublicIpId pulumi.StringInput `pulumi:"publicIpId"`
}

func (GetNatServicesNatServicePublicIpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNatServicesNatServicePublicIp)(nil)).Elem()
}

func (i GetNatServicesNatServicePublicIpArgs) ToGetNatServicesNatServicePublicIpOutput() GetNatServicesNatServicePublicIpOutput {
	return i.ToGetNatServicesNatServicePublicIpOutputWithContext(context.Background())
}

func (i GetNatServicesNatServicePublicIpArgs) ToGetNatServicesNatServicePublicIpOutputWithContext(ctx context.Context) GetNatServicesNatServicePublicIpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNatServicesNatServicePublicIpOutput)
}

// GetNatServicesNatServicePublicIpArrayInput is an input type that accepts GetNatServicesNatServicePublicIpArray and GetNatServicesNatServicePublicIpArrayOutput values.
// You can construct a concrete instance of `GetNatServicesNatServicePublicIpArrayInput` via:
//
//	GetNatServicesNatServicePublicIpArray{ GetNatServicesNatServicePublicIpArgs{...} }
type GetNatServicesNatServicePublicIpArrayInput interface {
	pulumi.Input

	ToGetNatServicesNatServicePublicIpArrayOutput() GetNatServicesNatServicePublicIpArrayOutput
	ToGetNatServicesNatServicePublicIpArrayOutputWithContext(context.Context) GetNatServicesNatServicePublicIpArrayOutput
}

type GetNatServicesNatServicePublicIpArray []GetNatServicesNatServicePublicIpInput

func (GetNatServicesNatServicePublicIpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNatServicesNatServicePublicIp)(nil)).Elem()
}

func (i GetNatServicesNatServicePublicIpArray) ToGetNatServicesNatServicePublicIpArrayOutput() GetNatServicesNatServicePublicIpArrayOutput {
	return i.ToGetNatServicesNatServicePublicIpArrayOutputWithContext(context.Background())
}

func (i GetNatServicesNatServicePublicIpArray) ToGetNatServicesNatServicePublicIpArrayOutputWithContext(ctx context.Context) GetNatServicesNatServicePublicIpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNatServicesNatServicePublicIpArrayOutput)
}

type GetNatServicesNatServicePublicIpOutput struct{ *pulumi.OutputState }

func (GetNatServicesNatServicePublicIpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNatServicesNatServicePublicIp)(nil)).Elem()
}

func (o GetNatServicesNatServicePublicIpOutput) ToGetNatServicesNatServicePublicIpOutput() GetNatServicesNatServicePublicIpOutput {
	return o
}

func (o GetNatServicesNatServicePublicIpOutput) ToGetNatServicesNatServicePublicIpOutputWithContext(ctx context.Context) GetNatServicesNatServicePublicIpOutput {
	return o
}

// The public IP associated with the NAT service.
func (o GetNatServicesNatServicePublicIpOutput) PublicIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetNatServicesNatServicePublicIp) string { return v.PublicIp }).(pulumi.StringOutput)
}

// The allocation ID of the public IP associated with the NAT service.
func (o GetNatServicesNatServicePublicIpOutput) PublicIpId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNatServicesNatServicePublicIp) string { return v.PublicIpId }).(pulumi.StringOutput)
}

type GetNatServicesNatServicePublicIpArrayOutput struct{ *pulumi.OutputState }

func (GetNatServicesNatServicePublicIpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNatServicesNatServicePublicIp)(nil)).Elem()
}

func (o GetNatServicesNatServicePublicIpArrayOutput) ToGetNatServicesNatServicePublicIpArrayOutput() GetNatServicesNatServicePublicIpArrayOutput {
	return o
}

func (o GetNatServicesNatServicePublicIpArrayOutput) ToGetNatServicesNatServicePublicIpArrayOutputWithContext(ctx context.Context) GetNatServicesNatServicePublicIpArrayOutput {
	return o
}

func (o GetNatServicesNatServicePublicIpArrayOutput) Index(i pulumi.IntInput) GetNatServicesNatServicePublicIpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNatServicesNatServicePublicIp {
		return vs[0].([]GetNatServicesNatServicePublicIp)[vs[1].(int)]
	}).(GetNatServicesNatServicePublicIpOutput)
}

type GetNatServicesNatServiceTag struct {
	// The key of the tag, with a minimum of 1 character.
	Key string `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value string `pulumi:"value"`
}

// GetNatServicesNatServiceTagInput is an input type that accepts GetNatServicesNatServiceTagArgs and GetNatServicesNatServiceTagOutput values.
// You can construct a concrete instance of `GetNatServicesNatServiceTagInput` via:
//
//	GetNatServicesNatServiceTagArgs{...}
type GetNatServicesNatServiceTagInput interface {
	pulumi.Input

	ToGetNatServicesNatServiceTagOutput() GetNatServicesNatServiceTagOutput
	ToGetNatServicesNatServiceTagOutputWithContext(context.Context) GetNatServicesNatServiceTagOutput
}

type GetNatServicesNatServiceTagArgs struct {
	// The key of the tag, with a minimum of 1 character.
	Key pulumi.StringInput `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetNatServicesNatServiceTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNatServicesNatServiceTag)(nil)).Elem()
}

func (i GetNatServicesNatServiceTagArgs) ToGetNatServicesNatServiceTagOutput() GetNatServicesNatServiceTagOutput {
	return i.ToGetNatServicesNatServiceTagOutputWithContext(context.Background())
}

func (i GetNatServicesNatServiceTagArgs) ToGetNatServicesNatServiceTagOutputWithContext(ctx context.Context) GetNatServicesNatServiceTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNatServicesNatServiceTagOutput)
}

// GetNatServicesNatServiceTagArrayInput is an input type that accepts GetNatServicesNatServiceTagArray and GetNatServicesNatServiceTagArrayOutput values.
// You can construct a concrete instance of `GetNatServicesNatServiceTagArrayInput` via:
//
//	GetNatServicesNatServiceTagArray{ GetNatServicesNatServiceTagArgs{...} }
type GetNatServicesNatServiceTagArrayInput interface {
	pulumi.Input

	ToGetNatServicesNatServiceTagArrayOutput() GetNatServicesNatServiceTagArrayOutput
	ToGetNatServicesNatServiceTagArrayOutputWithContext(context.Context) GetNatServicesNatServiceTagArrayOutput
}

type GetNatServicesNatServiceTagArray []GetNatServicesNatServiceTagInput

func (GetNatServicesNatServiceTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNatServicesNatServiceTag)(nil)).Elem()
}

func (i GetNatServicesNatServiceTagArray) ToGetNatServicesNatServiceTagArrayOutput() GetNatServicesNatServiceTagArrayOutput {
	return i.ToGetNatServicesNatServiceTagArrayOutputWithContext(context.Background())
}

func (i GetNatServicesNatServiceTagArray) ToGetNatServicesNatServiceTagArrayOutputWithContext(ctx context.Context) GetNatServicesNatServiceTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNatServicesNatServiceTagArrayOutput)
}

type GetNatServicesNatServiceTagOutput struct{ *pulumi.OutputState }

func (GetNatServicesNatServiceTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNatServicesNatServiceTag)(nil)).Elem()
}

func (o GetNatServicesNatServiceTagOutput) ToGetNatServicesNatServiceTagOutput() GetNatServicesNatServiceTagOutput {
	return o
}

func (o GetNatServicesNatServiceTagOutput) ToGetNatServicesNatServiceTagOutputWithContext(ctx context.Context) GetNatServicesNatServiceTagOutput {
	return o
}

// The key of the tag, with a minimum of 1 character.
func (o GetNatServicesNatServiceTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetNatServicesNatServiceTag) string { return v.Key }).(pulumi.StringOutput)
}

// The value of the tag, between 0 and 255 characters.
func (o GetNatServicesNatServiceTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetNatServicesNatServiceTag) string { return v.Value }).(pulumi.StringOutput)
}

type GetNatServicesNatServiceTagArrayOutput struct{ *pulumi.OutputState }

func (GetNatServicesNatServiceTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNatServicesNatServiceTag)(nil)).Elem()
}

func (o GetNatServicesNatServiceTagArrayOutput) ToGetNatServicesNatServiceTagArrayOutput() GetNatServicesNatServiceTagArrayOutput {
	return o
}

func (o GetNatServicesNatServiceTagArrayOutput) ToGetNatServicesNatServiceTagArrayOutputWithContext(ctx context.Context) GetNatServicesNatServiceTagArrayOutput {
	return o
}

func (o GetNatServicesNatServiceTagArrayOutput) Index(i pulumi.IntInput) GetNatServicesNatServiceTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNatServicesNatServiceTag {
		return vs[0].([]GetNatServicesNatServiceTag)[vs[1].(int)]
	}).(GetNatServicesNatServiceTagOutput)
}

type GetNetAccessPointFilter struct {
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// GetNetAccessPointFilterInput is an input type that accepts GetNetAccessPointFilterArgs and GetNetAccessPointFilterOutput values.
// You can construct a concrete instance of `GetNetAccessPointFilterInput` via:
//
//	GetNetAccessPointFilterArgs{...}
type GetNetAccessPointFilterInput interface {
	pulumi.Input

	ToGetNetAccessPointFilterOutput() GetNetAccessPointFilterOutput
	ToGetNetAccessPointFilterOutputWithContext(context.Context) GetNetAccessPointFilterOutput
}

type GetNetAccessPointFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetNetAccessPointFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetAccessPointFilter)(nil)).Elem()
}

func (i GetNetAccessPointFilterArgs) ToGetNetAccessPointFilterOutput() GetNetAccessPointFilterOutput {
	return i.ToGetNetAccessPointFilterOutputWithContext(context.Background())
}

func (i GetNetAccessPointFilterArgs) ToGetNetAccessPointFilterOutputWithContext(ctx context.Context) GetNetAccessPointFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetAccessPointFilterOutput)
}

// GetNetAccessPointFilterArrayInput is an input type that accepts GetNetAccessPointFilterArray and GetNetAccessPointFilterArrayOutput values.
// You can construct a concrete instance of `GetNetAccessPointFilterArrayInput` via:
//
//	GetNetAccessPointFilterArray{ GetNetAccessPointFilterArgs{...} }
type GetNetAccessPointFilterArrayInput interface {
	pulumi.Input

	ToGetNetAccessPointFilterArrayOutput() GetNetAccessPointFilterArrayOutput
	ToGetNetAccessPointFilterArrayOutputWithContext(context.Context) GetNetAccessPointFilterArrayOutput
}

type GetNetAccessPointFilterArray []GetNetAccessPointFilterInput

func (GetNetAccessPointFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetAccessPointFilter)(nil)).Elem()
}

func (i GetNetAccessPointFilterArray) ToGetNetAccessPointFilterArrayOutput() GetNetAccessPointFilterArrayOutput {
	return i.ToGetNetAccessPointFilterArrayOutputWithContext(context.Background())
}

func (i GetNetAccessPointFilterArray) ToGetNetAccessPointFilterArrayOutputWithContext(ctx context.Context) GetNetAccessPointFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetAccessPointFilterArrayOutput)
}

type GetNetAccessPointFilterOutput struct{ *pulumi.OutputState }

func (GetNetAccessPointFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetAccessPointFilter)(nil)).Elem()
}

func (o GetNetAccessPointFilterOutput) ToGetNetAccessPointFilterOutput() GetNetAccessPointFilterOutput {
	return o
}

func (o GetNetAccessPointFilterOutput) ToGetNetAccessPointFilterOutputWithContext(ctx context.Context) GetNetAccessPointFilterOutput {
	return o
}

func (o GetNetAccessPointFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetAccessPointFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetNetAccessPointFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNetAccessPointFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetNetAccessPointFilterArrayOutput struct{ *pulumi.OutputState }

func (GetNetAccessPointFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetAccessPointFilter)(nil)).Elem()
}

func (o GetNetAccessPointFilterArrayOutput) ToGetNetAccessPointFilterArrayOutput() GetNetAccessPointFilterArrayOutput {
	return o
}

func (o GetNetAccessPointFilterArrayOutput) ToGetNetAccessPointFilterArrayOutputWithContext(ctx context.Context) GetNetAccessPointFilterArrayOutput {
	return o
}

func (o GetNetAccessPointFilterArrayOutput) Index(i pulumi.IntInput) GetNetAccessPointFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetAccessPointFilter {
		return vs[0].([]GetNetAccessPointFilter)[vs[1].(int)]
	}).(GetNetAccessPointFilterOutput)
}

type GetNetAccessPointServicesFilter struct {
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// GetNetAccessPointServicesFilterInput is an input type that accepts GetNetAccessPointServicesFilterArgs and GetNetAccessPointServicesFilterOutput values.
// You can construct a concrete instance of `GetNetAccessPointServicesFilterInput` via:
//
//	GetNetAccessPointServicesFilterArgs{...}
type GetNetAccessPointServicesFilterInput interface {
	pulumi.Input

	ToGetNetAccessPointServicesFilterOutput() GetNetAccessPointServicesFilterOutput
	ToGetNetAccessPointServicesFilterOutputWithContext(context.Context) GetNetAccessPointServicesFilterOutput
}

type GetNetAccessPointServicesFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetNetAccessPointServicesFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetAccessPointServicesFilter)(nil)).Elem()
}

func (i GetNetAccessPointServicesFilterArgs) ToGetNetAccessPointServicesFilterOutput() GetNetAccessPointServicesFilterOutput {
	return i.ToGetNetAccessPointServicesFilterOutputWithContext(context.Background())
}

func (i GetNetAccessPointServicesFilterArgs) ToGetNetAccessPointServicesFilterOutputWithContext(ctx context.Context) GetNetAccessPointServicesFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetAccessPointServicesFilterOutput)
}

// GetNetAccessPointServicesFilterArrayInput is an input type that accepts GetNetAccessPointServicesFilterArray and GetNetAccessPointServicesFilterArrayOutput values.
// You can construct a concrete instance of `GetNetAccessPointServicesFilterArrayInput` via:
//
//	GetNetAccessPointServicesFilterArray{ GetNetAccessPointServicesFilterArgs{...} }
type GetNetAccessPointServicesFilterArrayInput interface {
	pulumi.Input

	ToGetNetAccessPointServicesFilterArrayOutput() GetNetAccessPointServicesFilterArrayOutput
	ToGetNetAccessPointServicesFilterArrayOutputWithContext(context.Context) GetNetAccessPointServicesFilterArrayOutput
}

type GetNetAccessPointServicesFilterArray []GetNetAccessPointServicesFilterInput

func (GetNetAccessPointServicesFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetAccessPointServicesFilter)(nil)).Elem()
}

func (i GetNetAccessPointServicesFilterArray) ToGetNetAccessPointServicesFilterArrayOutput() GetNetAccessPointServicesFilterArrayOutput {
	return i.ToGetNetAccessPointServicesFilterArrayOutputWithContext(context.Background())
}

func (i GetNetAccessPointServicesFilterArray) ToGetNetAccessPointServicesFilterArrayOutputWithContext(ctx context.Context) GetNetAccessPointServicesFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetAccessPointServicesFilterArrayOutput)
}

type GetNetAccessPointServicesFilterOutput struct{ *pulumi.OutputState }

func (GetNetAccessPointServicesFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetAccessPointServicesFilter)(nil)).Elem()
}

func (o GetNetAccessPointServicesFilterOutput) ToGetNetAccessPointServicesFilterOutput() GetNetAccessPointServicesFilterOutput {
	return o
}

func (o GetNetAccessPointServicesFilterOutput) ToGetNetAccessPointServicesFilterOutputWithContext(ctx context.Context) GetNetAccessPointServicesFilterOutput {
	return o
}

func (o GetNetAccessPointServicesFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetAccessPointServicesFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetNetAccessPointServicesFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNetAccessPointServicesFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetNetAccessPointServicesFilterArrayOutput struct{ *pulumi.OutputState }

func (GetNetAccessPointServicesFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetAccessPointServicesFilter)(nil)).Elem()
}

func (o GetNetAccessPointServicesFilterArrayOutput) ToGetNetAccessPointServicesFilterArrayOutput() GetNetAccessPointServicesFilterArrayOutput {
	return o
}

func (o GetNetAccessPointServicesFilterArrayOutput) ToGetNetAccessPointServicesFilterArrayOutputWithContext(ctx context.Context) GetNetAccessPointServicesFilterArrayOutput {
	return o
}

func (o GetNetAccessPointServicesFilterArrayOutput) Index(i pulumi.IntInput) GetNetAccessPointServicesFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetAccessPointServicesFilter {
		return vs[0].([]GetNetAccessPointServicesFilter)[vs[1].(int)]
	}).(GetNetAccessPointServicesFilterOutput)
}

type GetNetAccessPointServicesService struct {
	// The list of network prefixes used by the service, in CIDR notation.
	IpRanges []string `pulumi:"ipRanges"`
	// The ID of the service.
	ServiceId string `pulumi:"serviceId"`
	// The name of the service.
	ServiceName string `pulumi:"serviceName"`
}

// GetNetAccessPointServicesServiceInput is an input type that accepts GetNetAccessPointServicesServiceArgs and GetNetAccessPointServicesServiceOutput values.
// You can construct a concrete instance of `GetNetAccessPointServicesServiceInput` via:
//
//	GetNetAccessPointServicesServiceArgs{...}
type GetNetAccessPointServicesServiceInput interface {
	pulumi.Input

	ToGetNetAccessPointServicesServiceOutput() GetNetAccessPointServicesServiceOutput
	ToGetNetAccessPointServicesServiceOutputWithContext(context.Context) GetNetAccessPointServicesServiceOutput
}

type GetNetAccessPointServicesServiceArgs struct {
	// The list of network prefixes used by the service, in CIDR notation.
	IpRanges pulumi.StringArrayInput `pulumi:"ipRanges"`
	// The ID of the service.
	ServiceId pulumi.StringInput `pulumi:"serviceId"`
	// The name of the service.
	ServiceName pulumi.StringInput `pulumi:"serviceName"`
}

func (GetNetAccessPointServicesServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetAccessPointServicesService)(nil)).Elem()
}

func (i GetNetAccessPointServicesServiceArgs) ToGetNetAccessPointServicesServiceOutput() GetNetAccessPointServicesServiceOutput {
	return i.ToGetNetAccessPointServicesServiceOutputWithContext(context.Background())
}

func (i GetNetAccessPointServicesServiceArgs) ToGetNetAccessPointServicesServiceOutputWithContext(ctx context.Context) GetNetAccessPointServicesServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetAccessPointServicesServiceOutput)
}

// GetNetAccessPointServicesServiceArrayInput is an input type that accepts GetNetAccessPointServicesServiceArray and GetNetAccessPointServicesServiceArrayOutput values.
// You can construct a concrete instance of `GetNetAccessPointServicesServiceArrayInput` via:
//
//	GetNetAccessPointServicesServiceArray{ GetNetAccessPointServicesServiceArgs{...} }
type GetNetAccessPointServicesServiceArrayInput interface {
	pulumi.Input

	ToGetNetAccessPointServicesServiceArrayOutput() GetNetAccessPointServicesServiceArrayOutput
	ToGetNetAccessPointServicesServiceArrayOutputWithContext(context.Context) GetNetAccessPointServicesServiceArrayOutput
}

type GetNetAccessPointServicesServiceArray []GetNetAccessPointServicesServiceInput

func (GetNetAccessPointServicesServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetAccessPointServicesService)(nil)).Elem()
}

func (i GetNetAccessPointServicesServiceArray) ToGetNetAccessPointServicesServiceArrayOutput() GetNetAccessPointServicesServiceArrayOutput {
	return i.ToGetNetAccessPointServicesServiceArrayOutputWithContext(context.Background())
}

func (i GetNetAccessPointServicesServiceArray) ToGetNetAccessPointServicesServiceArrayOutputWithContext(ctx context.Context) GetNetAccessPointServicesServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetAccessPointServicesServiceArrayOutput)
}

type GetNetAccessPointServicesServiceOutput struct{ *pulumi.OutputState }

func (GetNetAccessPointServicesServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetAccessPointServicesService)(nil)).Elem()
}

func (o GetNetAccessPointServicesServiceOutput) ToGetNetAccessPointServicesServiceOutput() GetNetAccessPointServicesServiceOutput {
	return o
}

func (o GetNetAccessPointServicesServiceOutput) ToGetNetAccessPointServicesServiceOutputWithContext(ctx context.Context) GetNetAccessPointServicesServiceOutput {
	return o
}

// The list of network prefixes used by the service, in CIDR notation.
func (o GetNetAccessPointServicesServiceOutput) IpRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNetAccessPointServicesService) []string { return v.IpRanges }).(pulumi.StringArrayOutput)
}

// The ID of the service.
func (o GetNetAccessPointServicesServiceOutput) ServiceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetAccessPointServicesService) string { return v.ServiceId }).(pulumi.StringOutput)
}

// The name of the service.
func (o GetNetAccessPointServicesServiceOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetAccessPointServicesService) string { return v.ServiceName }).(pulumi.StringOutput)
}

type GetNetAccessPointServicesServiceArrayOutput struct{ *pulumi.OutputState }

func (GetNetAccessPointServicesServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetAccessPointServicesService)(nil)).Elem()
}

func (o GetNetAccessPointServicesServiceArrayOutput) ToGetNetAccessPointServicesServiceArrayOutput() GetNetAccessPointServicesServiceArrayOutput {
	return o
}

func (o GetNetAccessPointServicesServiceArrayOutput) ToGetNetAccessPointServicesServiceArrayOutputWithContext(ctx context.Context) GetNetAccessPointServicesServiceArrayOutput {
	return o
}

func (o GetNetAccessPointServicesServiceArrayOutput) Index(i pulumi.IntInput) GetNetAccessPointServicesServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetAccessPointServicesService {
		return vs[0].([]GetNetAccessPointServicesService)[vs[1].(int)]
	}).(GetNetAccessPointServicesServiceOutput)
}

type GetNetAccessPointTag struct {
	// The key of the tag, with a minimum of 1 character.
	Key string `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value string `pulumi:"value"`
}

// GetNetAccessPointTagInput is an input type that accepts GetNetAccessPointTagArgs and GetNetAccessPointTagOutput values.
// You can construct a concrete instance of `GetNetAccessPointTagInput` via:
//
//	GetNetAccessPointTagArgs{...}
type GetNetAccessPointTagInput interface {
	pulumi.Input

	ToGetNetAccessPointTagOutput() GetNetAccessPointTagOutput
	ToGetNetAccessPointTagOutputWithContext(context.Context) GetNetAccessPointTagOutput
}

type GetNetAccessPointTagArgs struct {
	// The key of the tag, with a minimum of 1 character.
	Key pulumi.StringInput `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetNetAccessPointTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetAccessPointTag)(nil)).Elem()
}

func (i GetNetAccessPointTagArgs) ToGetNetAccessPointTagOutput() GetNetAccessPointTagOutput {
	return i.ToGetNetAccessPointTagOutputWithContext(context.Background())
}

func (i GetNetAccessPointTagArgs) ToGetNetAccessPointTagOutputWithContext(ctx context.Context) GetNetAccessPointTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetAccessPointTagOutput)
}

// GetNetAccessPointTagArrayInput is an input type that accepts GetNetAccessPointTagArray and GetNetAccessPointTagArrayOutput values.
// You can construct a concrete instance of `GetNetAccessPointTagArrayInput` via:
//
//	GetNetAccessPointTagArray{ GetNetAccessPointTagArgs{...} }
type GetNetAccessPointTagArrayInput interface {
	pulumi.Input

	ToGetNetAccessPointTagArrayOutput() GetNetAccessPointTagArrayOutput
	ToGetNetAccessPointTagArrayOutputWithContext(context.Context) GetNetAccessPointTagArrayOutput
}

type GetNetAccessPointTagArray []GetNetAccessPointTagInput

func (GetNetAccessPointTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetAccessPointTag)(nil)).Elem()
}

func (i GetNetAccessPointTagArray) ToGetNetAccessPointTagArrayOutput() GetNetAccessPointTagArrayOutput {
	return i.ToGetNetAccessPointTagArrayOutputWithContext(context.Background())
}

func (i GetNetAccessPointTagArray) ToGetNetAccessPointTagArrayOutputWithContext(ctx context.Context) GetNetAccessPointTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetAccessPointTagArrayOutput)
}

type GetNetAccessPointTagOutput struct{ *pulumi.OutputState }

func (GetNetAccessPointTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetAccessPointTag)(nil)).Elem()
}

func (o GetNetAccessPointTagOutput) ToGetNetAccessPointTagOutput() GetNetAccessPointTagOutput {
	return o
}

func (o GetNetAccessPointTagOutput) ToGetNetAccessPointTagOutputWithContext(ctx context.Context) GetNetAccessPointTagOutput {
	return o
}

// The key of the tag, with a minimum of 1 character.
func (o GetNetAccessPointTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetAccessPointTag) string { return v.Key }).(pulumi.StringOutput)
}

// The value of the tag, between 0 and 255 characters.
func (o GetNetAccessPointTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetAccessPointTag) string { return v.Value }).(pulumi.StringOutput)
}

type GetNetAccessPointTagArrayOutput struct{ *pulumi.OutputState }

func (GetNetAccessPointTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetAccessPointTag)(nil)).Elem()
}

func (o GetNetAccessPointTagArrayOutput) ToGetNetAccessPointTagArrayOutput() GetNetAccessPointTagArrayOutput {
	return o
}

func (o GetNetAccessPointTagArrayOutput) ToGetNetAccessPointTagArrayOutputWithContext(ctx context.Context) GetNetAccessPointTagArrayOutput {
	return o
}

func (o GetNetAccessPointTagArrayOutput) Index(i pulumi.IntInput) GetNetAccessPointTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetAccessPointTag {
		return vs[0].([]GetNetAccessPointTag)[vs[1].(int)]
	}).(GetNetAccessPointTagOutput)
}

type GetNetAccessPointsFilter struct {
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// GetNetAccessPointsFilterInput is an input type that accepts GetNetAccessPointsFilterArgs and GetNetAccessPointsFilterOutput values.
// You can construct a concrete instance of `GetNetAccessPointsFilterInput` via:
//
//	GetNetAccessPointsFilterArgs{...}
type GetNetAccessPointsFilterInput interface {
	pulumi.Input

	ToGetNetAccessPointsFilterOutput() GetNetAccessPointsFilterOutput
	ToGetNetAccessPointsFilterOutputWithContext(context.Context) GetNetAccessPointsFilterOutput
}

type GetNetAccessPointsFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetNetAccessPointsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetAccessPointsFilter)(nil)).Elem()
}

func (i GetNetAccessPointsFilterArgs) ToGetNetAccessPointsFilterOutput() GetNetAccessPointsFilterOutput {
	return i.ToGetNetAccessPointsFilterOutputWithContext(context.Background())
}

func (i GetNetAccessPointsFilterArgs) ToGetNetAccessPointsFilterOutputWithContext(ctx context.Context) GetNetAccessPointsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetAccessPointsFilterOutput)
}

// GetNetAccessPointsFilterArrayInput is an input type that accepts GetNetAccessPointsFilterArray and GetNetAccessPointsFilterArrayOutput values.
// You can construct a concrete instance of `GetNetAccessPointsFilterArrayInput` via:
//
//	GetNetAccessPointsFilterArray{ GetNetAccessPointsFilterArgs{...} }
type GetNetAccessPointsFilterArrayInput interface {
	pulumi.Input

	ToGetNetAccessPointsFilterArrayOutput() GetNetAccessPointsFilterArrayOutput
	ToGetNetAccessPointsFilterArrayOutputWithContext(context.Context) GetNetAccessPointsFilterArrayOutput
}

type GetNetAccessPointsFilterArray []GetNetAccessPointsFilterInput

func (GetNetAccessPointsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetAccessPointsFilter)(nil)).Elem()
}

func (i GetNetAccessPointsFilterArray) ToGetNetAccessPointsFilterArrayOutput() GetNetAccessPointsFilterArrayOutput {
	return i.ToGetNetAccessPointsFilterArrayOutputWithContext(context.Background())
}

func (i GetNetAccessPointsFilterArray) ToGetNetAccessPointsFilterArrayOutputWithContext(ctx context.Context) GetNetAccessPointsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetAccessPointsFilterArrayOutput)
}

type GetNetAccessPointsFilterOutput struct{ *pulumi.OutputState }

func (GetNetAccessPointsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetAccessPointsFilter)(nil)).Elem()
}

func (o GetNetAccessPointsFilterOutput) ToGetNetAccessPointsFilterOutput() GetNetAccessPointsFilterOutput {
	return o
}

func (o GetNetAccessPointsFilterOutput) ToGetNetAccessPointsFilterOutputWithContext(ctx context.Context) GetNetAccessPointsFilterOutput {
	return o
}

func (o GetNetAccessPointsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetAccessPointsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetNetAccessPointsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNetAccessPointsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetNetAccessPointsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetNetAccessPointsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetAccessPointsFilter)(nil)).Elem()
}

func (o GetNetAccessPointsFilterArrayOutput) ToGetNetAccessPointsFilterArrayOutput() GetNetAccessPointsFilterArrayOutput {
	return o
}

func (o GetNetAccessPointsFilterArrayOutput) ToGetNetAccessPointsFilterArrayOutputWithContext(ctx context.Context) GetNetAccessPointsFilterArrayOutput {
	return o
}

func (o GetNetAccessPointsFilterArrayOutput) Index(i pulumi.IntInput) GetNetAccessPointsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetAccessPointsFilter {
		return vs[0].([]GetNetAccessPointsFilter)[vs[1].(int)]
	}).(GetNetAccessPointsFilterOutput)
}

type GetNetAccessPointsNetAccessPoint struct {
	// The ID of the Net access point.
	NetAccessPointId string `pulumi:"netAccessPointId"`
	// The ID of the Net with which the Net access point is associated.
	NetId string `pulumi:"netId"`
	// The ID of the route tables associated with the Net access point.
	RouteTableIds []string `pulumi:"routeTableIds"`
	// The name of the service with which the Net access point is associated.
	ServiceName string `pulumi:"serviceName"`
	// The state of the Net access point (`pending` \| `available` \| `deleting` \| `deleted`).
	State string `pulumi:"state"`
	// One or more tags associated with the Net access point.
	Tags []GetNetAccessPointsNetAccessPointTag `pulumi:"tags"`
}

// GetNetAccessPointsNetAccessPointInput is an input type that accepts GetNetAccessPointsNetAccessPointArgs and GetNetAccessPointsNetAccessPointOutput values.
// You can construct a concrete instance of `GetNetAccessPointsNetAccessPointInput` via:
//
//	GetNetAccessPointsNetAccessPointArgs{...}
type GetNetAccessPointsNetAccessPointInput interface {
	pulumi.Input

	ToGetNetAccessPointsNetAccessPointOutput() GetNetAccessPointsNetAccessPointOutput
	ToGetNetAccessPointsNetAccessPointOutputWithContext(context.Context) GetNetAccessPointsNetAccessPointOutput
}

type GetNetAccessPointsNetAccessPointArgs struct {
	// The ID of the Net access point.
	NetAccessPointId pulumi.StringInput `pulumi:"netAccessPointId"`
	// The ID of the Net with which the Net access point is associated.
	NetId pulumi.StringInput `pulumi:"netId"`
	// The ID of the route tables associated with the Net access point.
	RouteTableIds pulumi.StringArrayInput `pulumi:"routeTableIds"`
	// The name of the service with which the Net access point is associated.
	ServiceName pulumi.StringInput `pulumi:"serviceName"`
	// The state of the Net access point (`pending` \| `available` \| `deleting` \| `deleted`).
	State pulumi.StringInput `pulumi:"state"`
	// One or more tags associated with the Net access point.
	Tags GetNetAccessPointsNetAccessPointTagArrayInput `pulumi:"tags"`
}

func (GetNetAccessPointsNetAccessPointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetAccessPointsNetAccessPoint)(nil)).Elem()
}

func (i GetNetAccessPointsNetAccessPointArgs) ToGetNetAccessPointsNetAccessPointOutput() GetNetAccessPointsNetAccessPointOutput {
	return i.ToGetNetAccessPointsNetAccessPointOutputWithContext(context.Background())
}

func (i GetNetAccessPointsNetAccessPointArgs) ToGetNetAccessPointsNetAccessPointOutputWithContext(ctx context.Context) GetNetAccessPointsNetAccessPointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetAccessPointsNetAccessPointOutput)
}

// GetNetAccessPointsNetAccessPointArrayInput is an input type that accepts GetNetAccessPointsNetAccessPointArray and GetNetAccessPointsNetAccessPointArrayOutput values.
// You can construct a concrete instance of `GetNetAccessPointsNetAccessPointArrayInput` via:
//
//	GetNetAccessPointsNetAccessPointArray{ GetNetAccessPointsNetAccessPointArgs{...} }
type GetNetAccessPointsNetAccessPointArrayInput interface {
	pulumi.Input

	ToGetNetAccessPointsNetAccessPointArrayOutput() GetNetAccessPointsNetAccessPointArrayOutput
	ToGetNetAccessPointsNetAccessPointArrayOutputWithContext(context.Context) GetNetAccessPointsNetAccessPointArrayOutput
}

type GetNetAccessPointsNetAccessPointArray []GetNetAccessPointsNetAccessPointInput

func (GetNetAccessPointsNetAccessPointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetAccessPointsNetAccessPoint)(nil)).Elem()
}

func (i GetNetAccessPointsNetAccessPointArray) ToGetNetAccessPointsNetAccessPointArrayOutput() GetNetAccessPointsNetAccessPointArrayOutput {
	return i.ToGetNetAccessPointsNetAccessPointArrayOutputWithContext(context.Background())
}

func (i GetNetAccessPointsNetAccessPointArray) ToGetNetAccessPointsNetAccessPointArrayOutputWithContext(ctx context.Context) GetNetAccessPointsNetAccessPointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetAccessPointsNetAccessPointArrayOutput)
}

type GetNetAccessPointsNetAccessPointOutput struct{ *pulumi.OutputState }

func (GetNetAccessPointsNetAccessPointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetAccessPointsNetAccessPoint)(nil)).Elem()
}

func (o GetNetAccessPointsNetAccessPointOutput) ToGetNetAccessPointsNetAccessPointOutput() GetNetAccessPointsNetAccessPointOutput {
	return o
}

func (o GetNetAccessPointsNetAccessPointOutput) ToGetNetAccessPointsNetAccessPointOutputWithContext(ctx context.Context) GetNetAccessPointsNetAccessPointOutput {
	return o
}

// The ID of the Net access point.
func (o GetNetAccessPointsNetAccessPointOutput) NetAccessPointId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetAccessPointsNetAccessPoint) string { return v.NetAccessPointId }).(pulumi.StringOutput)
}

// The ID of the Net with which the Net access point is associated.
func (o GetNetAccessPointsNetAccessPointOutput) NetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetAccessPointsNetAccessPoint) string { return v.NetId }).(pulumi.StringOutput)
}

// The ID of the route tables associated with the Net access point.
func (o GetNetAccessPointsNetAccessPointOutput) RouteTableIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNetAccessPointsNetAccessPoint) []string { return v.RouteTableIds }).(pulumi.StringArrayOutput)
}

// The name of the service with which the Net access point is associated.
func (o GetNetAccessPointsNetAccessPointOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetAccessPointsNetAccessPoint) string { return v.ServiceName }).(pulumi.StringOutput)
}

// The state of the Net access point (`pending` \| `available` \| `deleting` \| `deleted`).
func (o GetNetAccessPointsNetAccessPointOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetAccessPointsNetAccessPoint) string { return v.State }).(pulumi.StringOutput)
}

// One or more tags associated with the Net access point.
func (o GetNetAccessPointsNetAccessPointOutput) Tags() GetNetAccessPointsNetAccessPointTagArrayOutput {
	return o.ApplyT(func(v GetNetAccessPointsNetAccessPoint) []GetNetAccessPointsNetAccessPointTag { return v.Tags }).(GetNetAccessPointsNetAccessPointTagArrayOutput)
}

type GetNetAccessPointsNetAccessPointArrayOutput struct{ *pulumi.OutputState }

func (GetNetAccessPointsNetAccessPointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetAccessPointsNetAccessPoint)(nil)).Elem()
}

func (o GetNetAccessPointsNetAccessPointArrayOutput) ToGetNetAccessPointsNetAccessPointArrayOutput() GetNetAccessPointsNetAccessPointArrayOutput {
	return o
}

func (o GetNetAccessPointsNetAccessPointArrayOutput) ToGetNetAccessPointsNetAccessPointArrayOutputWithContext(ctx context.Context) GetNetAccessPointsNetAccessPointArrayOutput {
	return o
}

func (o GetNetAccessPointsNetAccessPointArrayOutput) Index(i pulumi.IntInput) GetNetAccessPointsNetAccessPointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetAccessPointsNetAccessPoint {
		return vs[0].([]GetNetAccessPointsNetAccessPoint)[vs[1].(int)]
	}).(GetNetAccessPointsNetAccessPointOutput)
}

type GetNetAccessPointsNetAccessPointTag struct {
	// The key of the tag, with a minimum of 1 character.
	Key string `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value string `pulumi:"value"`
}

// GetNetAccessPointsNetAccessPointTagInput is an input type that accepts GetNetAccessPointsNetAccessPointTagArgs and GetNetAccessPointsNetAccessPointTagOutput values.
// You can construct a concrete instance of `GetNetAccessPointsNetAccessPointTagInput` via:
//
//	GetNetAccessPointsNetAccessPointTagArgs{...}
type GetNetAccessPointsNetAccessPointTagInput interface {
	pulumi.Input

	ToGetNetAccessPointsNetAccessPointTagOutput() GetNetAccessPointsNetAccessPointTagOutput
	ToGetNetAccessPointsNetAccessPointTagOutputWithContext(context.Context) GetNetAccessPointsNetAccessPointTagOutput
}

type GetNetAccessPointsNetAccessPointTagArgs struct {
	// The key of the tag, with a minimum of 1 character.
	Key pulumi.StringInput `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetNetAccessPointsNetAccessPointTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetAccessPointsNetAccessPointTag)(nil)).Elem()
}

func (i GetNetAccessPointsNetAccessPointTagArgs) ToGetNetAccessPointsNetAccessPointTagOutput() GetNetAccessPointsNetAccessPointTagOutput {
	return i.ToGetNetAccessPointsNetAccessPointTagOutputWithContext(context.Background())
}

func (i GetNetAccessPointsNetAccessPointTagArgs) ToGetNetAccessPointsNetAccessPointTagOutputWithContext(ctx context.Context) GetNetAccessPointsNetAccessPointTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetAccessPointsNetAccessPointTagOutput)
}

// GetNetAccessPointsNetAccessPointTagArrayInput is an input type that accepts GetNetAccessPointsNetAccessPointTagArray and GetNetAccessPointsNetAccessPointTagArrayOutput values.
// You can construct a concrete instance of `GetNetAccessPointsNetAccessPointTagArrayInput` via:
//
//	GetNetAccessPointsNetAccessPointTagArray{ GetNetAccessPointsNetAccessPointTagArgs{...} }
type GetNetAccessPointsNetAccessPointTagArrayInput interface {
	pulumi.Input

	ToGetNetAccessPointsNetAccessPointTagArrayOutput() GetNetAccessPointsNetAccessPointTagArrayOutput
	ToGetNetAccessPointsNetAccessPointTagArrayOutputWithContext(context.Context) GetNetAccessPointsNetAccessPointTagArrayOutput
}

type GetNetAccessPointsNetAccessPointTagArray []GetNetAccessPointsNetAccessPointTagInput

func (GetNetAccessPointsNetAccessPointTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetAccessPointsNetAccessPointTag)(nil)).Elem()
}

func (i GetNetAccessPointsNetAccessPointTagArray) ToGetNetAccessPointsNetAccessPointTagArrayOutput() GetNetAccessPointsNetAccessPointTagArrayOutput {
	return i.ToGetNetAccessPointsNetAccessPointTagArrayOutputWithContext(context.Background())
}

func (i GetNetAccessPointsNetAccessPointTagArray) ToGetNetAccessPointsNetAccessPointTagArrayOutputWithContext(ctx context.Context) GetNetAccessPointsNetAccessPointTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetAccessPointsNetAccessPointTagArrayOutput)
}

type GetNetAccessPointsNetAccessPointTagOutput struct{ *pulumi.OutputState }

func (GetNetAccessPointsNetAccessPointTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetAccessPointsNetAccessPointTag)(nil)).Elem()
}

func (o GetNetAccessPointsNetAccessPointTagOutput) ToGetNetAccessPointsNetAccessPointTagOutput() GetNetAccessPointsNetAccessPointTagOutput {
	return o
}

func (o GetNetAccessPointsNetAccessPointTagOutput) ToGetNetAccessPointsNetAccessPointTagOutputWithContext(ctx context.Context) GetNetAccessPointsNetAccessPointTagOutput {
	return o
}

// The key of the tag, with a minimum of 1 character.
func (o GetNetAccessPointsNetAccessPointTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetAccessPointsNetAccessPointTag) string { return v.Key }).(pulumi.StringOutput)
}

// The value of the tag, between 0 and 255 characters.
func (o GetNetAccessPointsNetAccessPointTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetAccessPointsNetAccessPointTag) string { return v.Value }).(pulumi.StringOutput)
}

type GetNetAccessPointsNetAccessPointTagArrayOutput struct{ *pulumi.OutputState }

func (GetNetAccessPointsNetAccessPointTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetAccessPointsNetAccessPointTag)(nil)).Elem()
}

func (o GetNetAccessPointsNetAccessPointTagArrayOutput) ToGetNetAccessPointsNetAccessPointTagArrayOutput() GetNetAccessPointsNetAccessPointTagArrayOutput {
	return o
}

func (o GetNetAccessPointsNetAccessPointTagArrayOutput) ToGetNetAccessPointsNetAccessPointTagArrayOutputWithContext(ctx context.Context) GetNetAccessPointsNetAccessPointTagArrayOutput {
	return o
}

func (o GetNetAccessPointsNetAccessPointTagArrayOutput) Index(i pulumi.IntInput) GetNetAccessPointsNetAccessPointTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetAccessPointsNetAccessPointTag {
		return vs[0].([]GetNetAccessPointsNetAccessPointTag)[vs[1].(int)]
	}).(GetNetAccessPointsNetAccessPointTagOutput)
}

type GetNetAttributesTag struct {
	// The key of the tag, with a minimum of 1 character.
	Key string `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value string `pulumi:"value"`
}

// GetNetAttributesTagInput is an input type that accepts GetNetAttributesTagArgs and GetNetAttributesTagOutput values.
// You can construct a concrete instance of `GetNetAttributesTagInput` via:
//
//	GetNetAttributesTagArgs{...}
type GetNetAttributesTagInput interface {
	pulumi.Input

	ToGetNetAttributesTagOutput() GetNetAttributesTagOutput
	ToGetNetAttributesTagOutputWithContext(context.Context) GetNetAttributesTagOutput
}

type GetNetAttributesTagArgs struct {
	// The key of the tag, with a minimum of 1 character.
	Key pulumi.StringInput `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetNetAttributesTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetAttributesTag)(nil)).Elem()
}

func (i GetNetAttributesTagArgs) ToGetNetAttributesTagOutput() GetNetAttributesTagOutput {
	return i.ToGetNetAttributesTagOutputWithContext(context.Background())
}

func (i GetNetAttributesTagArgs) ToGetNetAttributesTagOutputWithContext(ctx context.Context) GetNetAttributesTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetAttributesTagOutput)
}

// GetNetAttributesTagArrayInput is an input type that accepts GetNetAttributesTagArray and GetNetAttributesTagArrayOutput values.
// You can construct a concrete instance of `GetNetAttributesTagArrayInput` via:
//
//	GetNetAttributesTagArray{ GetNetAttributesTagArgs{...} }
type GetNetAttributesTagArrayInput interface {
	pulumi.Input

	ToGetNetAttributesTagArrayOutput() GetNetAttributesTagArrayOutput
	ToGetNetAttributesTagArrayOutputWithContext(context.Context) GetNetAttributesTagArrayOutput
}

type GetNetAttributesTagArray []GetNetAttributesTagInput

func (GetNetAttributesTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetAttributesTag)(nil)).Elem()
}

func (i GetNetAttributesTagArray) ToGetNetAttributesTagArrayOutput() GetNetAttributesTagArrayOutput {
	return i.ToGetNetAttributesTagArrayOutputWithContext(context.Background())
}

func (i GetNetAttributesTagArray) ToGetNetAttributesTagArrayOutputWithContext(ctx context.Context) GetNetAttributesTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetAttributesTagArrayOutput)
}

type GetNetAttributesTagOutput struct{ *pulumi.OutputState }

func (GetNetAttributesTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetAttributesTag)(nil)).Elem()
}

func (o GetNetAttributesTagOutput) ToGetNetAttributesTagOutput() GetNetAttributesTagOutput {
	return o
}

func (o GetNetAttributesTagOutput) ToGetNetAttributesTagOutputWithContext(ctx context.Context) GetNetAttributesTagOutput {
	return o
}

// The key of the tag, with a minimum of 1 character.
func (o GetNetAttributesTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetAttributesTag) string { return v.Key }).(pulumi.StringOutput)
}

// The value of the tag, between 0 and 255 characters.
func (o GetNetAttributesTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetAttributesTag) string { return v.Value }).(pulumi.StringOutput)
}

type GetNetAttributesTagArrayOutput struct{ *pulumi.OutputState }

func (GetNetAttributesTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetAttributesTag)(nil)).Elem()
}

func (o GetNetAttributesTagArrayOutput) ToGetNetAttributesTagArrayOutput() GetNetAttributesTagArrayOutput {
	return o
}

func (o GetNetAttributesTagArrayOutput) ToGetNetAttributesTagArrayOutputWithContext(ctx context.Context) GetNetAttributesTagArrayOutput {
	return o
}

func (o GetNetAttributesTagArrayOutput) Index(i pulumi.IntInput) GetNetAttributesTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetAttributesTag {
		return vs[0].([]GetNetAttributesTag)[vs[1].(int)]
	}).(GetNetAttributesTagOutput)
}

type GetNetFilter struct {
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// GetNetFilterInput is an input type that accepts GetNetFilterArgs and GetNetFilterOutput values.
// You can construct a concrete instance of `GetNetFilterInput` via:
//
//	GetNetFilterArgs{...}
type GetNetFilterInput interface {
	pulumi.Input

	ToGetNetFilterOutput() GetNetFilterOutput
	ToGetNetFilterOutputWithContext(context.Context) GetNetFilterOutput
}

type GetNetFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetNetFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetFilter)(nil)).Elem()
}

func (i GetNetFilterArgs) ToGetNetFilterOutput() GetNetFilterOutput {
	return i.ToGetNetFilterOutputWithContext(context.Background())
}

func (i GetNetFilterArgs) ToGetNetFilterOutputWithContext(ctx context.Context) GetNetFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetFilterOutput)
}

// GetNetFilterArrayInput is an input type that accepts GetNetFilterArray and GetNetFilterArrayOutput values.
// You can construct a concrete instance of `GetNetFilterArrayInput` via:
//
//	GetNetFilterArray{ GetNetFilterArgs{...} }
type GetNetFilterArrayInput interface {
	pulumi.Input

	ToGetNetFilterArrayOutput() GetNetFilterArrayOutput
	ToGetNetFilterArrayOutputWithContext(context.Context) GetNetFilterArrayOutput
}

type GetNetFilterArray []GetNetFilterInput

func (GetNetFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetFilter)(nil)).Elem()
}

func (i GetNetFilterArray) ToGetNetFilterArrayOutput() GetNetFilterArrayOutput {
	return i.ToGetNetFilterArrayOutputWithContext(context.Background())
}

func (i GetNetFilterArray) ToGetNetFilterArrayOutputWithContext(ctx context.Context) GetNetFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetFilterArrayOutput)
}

type GetNetFilterOutput struct{ *pulumi.OutputState }

func (GetNetFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetFilter)(nil)).Elem()
}

func (o GetNetFilterOutput) ToGetNetFilterOutput() GetNetFilterOutput {
	return o
}

func (o GetNetFilterOutput) ToGetNetFilterOutputWithContext(ctx context.Context) GetNetFilterOutput {
	return o
}

func (o GetNetFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetNetFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNetFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetNetFilterArrayOutput struct{ *pulumi.OutputState }

func (GetNetFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetFilter)(nil)).Elem()
}

func (o GetNetFilterArrayOutput) ToGetNetFilterArrayOutput() GetNetFilterArrayOutput {
	return o
}

func (o GetNetFilterArrayOutput) ToGetNetFilterArrayOutputWithContext(ctx context.Context) GetNetFilterArrayOutput {
	return o
}

func (o GetNetFilterArrayOutput) Index(i pulumi.IntInput) GetNetFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetFilter {
		return vs[0].([]GetNetFilter)[vs[1].(int)]
	}).(GetNetFilterOutput)
}

type GetNetPeeringAccepterNet struct {
	// The account ID of the owner of the source Net.
	AccountId string `pulumi:"accountId"`
	// The IP range for the source Net, in CIDR notation (for example, `10.0.0.0/16`).
	IpRange string `pulumi:"ipRange"`
	// The ID of the source Net.
	NetId string `pulumi:"netId"`
}

// GetNetPeeringAccepterNetInput is an input type that accepts GetNetPeeringAccepterNetArgs and GetNetPeeringAccepterNetOutput values.
// You can construct a concrete instance of `GetNetPeeringAccepterNetInput` via:
//
//	GetNetPeeringAccepterNetArgs{...}
type GetNetPeeringAccepterNetInput interface {
	pulumi.Input

	ToGetNetPeeringAccepterNetOutput() GetNetPeeringAccepterNetOutput
	ToGetNetPeeringAccepterNetOutputWithContext(context.Context) GetNetPeeringAccepterNetOutput
}

type GetNetPeeringAccepterNetArgs struct {
	// The account ID of the owner of the source Net.
	AccountId pulumi.StringInput `pulumi:"accountId"`
	// The IP range for the source Net, in CIDR notation (for example, `10.0.0.0/16`).
	IpRange pulumi.StringInput `pulumi:"ipRange"`
	// The ID of the source Net.
	NetId pulumi.StringInput `pulumi:"netId"`
}

func (GetNetPeeringAccepterNetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetPeeringAccepterNet)(nil)).Elem()
}

func (i GetNetPeeringAccepterNetArgs) ToGetNetPeeringAccepterNetOutput() GetNetPeeringAccepterNetOutput {
	return i.ToGetNetPeeringAccepterNetOutputWithContext(context.Background())
}

func (i GetNetPeeringAccepterNetArgs) ToGetNetPeeringAccepterNetOutputWithContext(ctx context.Context) GetNetPeeringAccepterNetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetPeeringAccepterNetOutput)
}

// GetNetPeeringAccepterNetArrayInput is an input type that accepts GetNetPeeringAccepterNetArray and GetNetPeeringAccepterNetArrayOutput values.
// You can construct a concrete instance of `GetNetPeeringAccepterNetArrayInput` via:
//
//	GetNetPeeringAccepterNetArray{ GetNetPeeringAccepterNetArgs{...} }
type GetNetPeeringAccepterNetArrayInput interface {
	pulumi.Input

	ToGetNetPeeringAccepterNetArrayOutput() GetNetPeeringAccepterNetArrayOutput
	ToGetNetPeeringAccepterNetArrayOutputWithContext(context.Context) GetNetPeeringAccepterNetArrayOutput
}

type GetNetPeeringAccepterNetArray []GetNetPeeringAccepterNetInput

func (GetNetPeeringAccepterNetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetPeeringAccepterNet)(nil)).Elem()
}

func (i GetNetPeeringAccepterNetArray) ToGetNetPeeringAccepterNetArrayOutput() GetNetPeeringAccepterNetArrayOutput {
	return i.ToGetNetPeeringAccepterNetArrayOutputWithContext(context.Background())
}

func (i GetNetPeeringAccepterNetArray) ToGetNetPeeringAccepterNetArrayOutputWithContext(ctx context.Context) GetNetPeeringAccepterNetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetPeeringAccepterNetArrayOutput)
}

type GetNetPeeringAccepterNetOutput struct{ *pulumi.OutputState }

func (GetNetPeeringAccepterNetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetPeeringAccepterNet)(nil)).Elem()
}

func (o GetNetPeeringAccepterNetOutput) ToGetNetPeeringAccepterNetOutput() GetNetPeeringAccepterNetOutput {
	return o
}

func (o GetNetPeeringAccepterNetOutput) ToGetNetPeeringAccepterNetOutputWithContext(ctx context.Context) GetNetPeeringAccepterNetOutput {
	return o
}

// The account ID of the owner of the source Net.
func (o GetNetPeeringAccepterNetOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetPeeringAccepterNet) string { return v.AccountId }).(pulumi.StringOutput)
}

// The IP range for the source Net, in CIDR notation (for example, `10.0.0.0/16`).
func (o GetNetPeeringAccepterNetOutput) IpRange() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetPeeringAccepterNet) string { return v.IpRange }).(pulumi.StringOutput)
}

// The ID of the source Net.
func (o GetNetPeeringAccepterNetOutput) NetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetPeeringAccepterNet) string { return v.NetId }).(pulumi.StringOutput)
}

type GetNetPeeringAccepterNetArrayOutput struct{ *pulumi.OutputState }

func (GetNetPeeringAccepterNetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetPeeringAccepterNet)(nil)).Elem()
}

func (o GetNetPeeringAccepterNetArrayOutput) ToGetNetPeeringAccepterNetArrayOutput() GetNetPeeringAccepterNetArrayOutput {
	return o
}

func (o GetNetPeeringAccepterNetArrayOutput) ToGetNetPeeringAccepterNetArrayOutputWithContext(ctx context.Context) GetNetPeeringAccepterNetArrayOutput {
	return o
}

func (o GetNetPeeringAccepterNetArrayOutput) Index(i pulumi.IntInput) GetNetPeeringAccepterNetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetPeeringAccepterNet {
		return vs[0].([]GetNetPeeringAccepterNet)[vs[1].(int)]
	}).(GetNetPeeringAccepterNetOutput)
}

type GetNetPeeringFilter struct {
	// The state of the Net peering (`pending-acceptance` \| `active` \| `rejected` \| `failed` \| `expired` \| `deleted`).
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// GetNetPeeringFilterInput is an input type that accepts GetNetPeeringFilterArgs and GetNetPeeringFilterOutput values.
// You can construct a concrete instance of `GetNetPeeringFilterInput` via:
//
//	GetNetPeeringFilterArgs{...}
type GetNetPeeringFilterInput interface {
	pulumi.Input

	ToGetNetPeeringFilterOutput() GetNetPeeringFilterOutput
	ToGetNetPeeringFilterOutputWithContext(context.Context) GetNetPeeringFilterOutput
}

type GetNetPeeringFilterArgs struct {
	// The state of the Net peering (`pending-acceptance` \| `active` \| `rejected` \| `failed` \| `expired` \| `deleted`).
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetNetPeeringFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetPeeringFilter)(nil)).Elem()
}

func (i GetNetPeeringFilterArgs) ToGetNetPeeringFilterOutput() GetNetPeeringFilterOutput {
	return i.ToGetNetPeeringFilterOutputWithContext(context.Background())
}

func (i GetNetPeeringFilterArgs) ToGetNetPeeringFilterOutputWithContext(ctx context.Context) GetNetPeeringFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetPeeringFilterOutput)
}

// GetNetPeeringFilterArrayInput is an input type that accepts GetNetPeeringFilterArray and GetNetPeeringFilterArrayOutput values.
// You can construct a concrete instance of `GetNetPeeringFilterArrayInput` via:
//
//	GetNetPeeringFilterArray{ GetNetPeeringFilterArgs{...} }
type GetNetPeeringFilterArrayInput interface {
	pulumi.Input

	ToGetNetPeeringFilterArrayOutput() GetNetPeeringFilterArrayOutput
	ToGetNetPeeringFilterArrayOutputWithContext(context.Context) GetNetPeeringFilterArrayOutput
}

type GetNetPeeringFilterArray []GetNetPeeringFilterInput

func (GetNetPeeringFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetPeeringFilter)(nil)).Elem()
}

func (i GetNetPeeringFilterArray) ToGetNetPeeringFilterArrayOutput() GetNetPeeringFilterArrayOutput {
	return i.ToGetNetPeeringFilterArrayOutputWithContext(context.Background())
}

func (i GetNetPeeringFilterArray) ToGetNetPeeringFilterArrayOutputWithContext(ctx context.Context) GetNetPeeringFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetPeeringFilterArrayOutput)
}

type GetNetPeeringFilterOutput struct{ *pulumi.OutputState }

func (GetNetPeeringFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetPeeringFilter)(nil)).Elem()
}

func (o GetNetPeeringFilterOutput) ToGetNetPeeringFilterOutput() GetNetPeeringFilterOutput {
	return o
}

func (o GetNetPeeringFilterOutput) ToGetNetPeeringFilterOutputWithContext(ctx context.Context) GetNetPeeringFilterOutput {
	return o
}

// The state of the Net peering (`pending-acceptance` \| `active` \| `rejected` \| `failed` \| `expired` \| `deleted`).
func (o GetNetPeeringFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetPeeringFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetNetPeeringFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNetPeeringFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetNetPeeringFilterArrayOutput struct{ *pulumi.OutputState }

func (GetNetPeeringFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetPeeringFilter)(nil)).Elem()
}

func (o GetNetPeeringFilterArrayOutput) ToGetNetPeeringFilterArrayOutput() GetNetPeeringFilterArrayOutput {
	return o
}

func (o GetNetPeeringFilterArrayOutput) ToGetNetPeeringFilterArrayOutputWithContext(ctx context.Context) GetNetPeeringFilterArrayOutput {
	return o
}

func (o GetNetPeeringFilterArrayOutput) Index(i pulumi.IntInput) GetNetPeeringFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetPeeringFilter {
		return vs[0].([]GetNetPeeringFilter)[vs[1].(int)]
	}).(GetNetPeeringFilterOutput)
}

type GetNetPeeringSourceNet struct {
	// The account ID of the owner of the source Net.
	AccountId string `pulumi:"accountId"`
	// The IP range for the source Net, in CIDR notation (for example, `10.0.0.0/16`).
	IpRange string `pulumi:"ipRange"`
	// The ID of the source Net.
	NetId string `pulumi:"netId"`
}

// GetNetPeeringSourceNetInput is an input type that accepts GetNetPeeringSourceNetArgs and GetNetPeeringSourceNetOutput values.
// You can construct a concrete instance of `GetNetPeeringSourceNetInput` via:
//
//	GetNetPeeringSourceNetArgs{...}
type GetNetPeeringSourceNetInput interface {
	pulumi.Input

	ToGetNetPeeringSourceNetOutput() GetNetPeeringSourceNetOutput
	ToGetNetPeeringSourceNetOutputWithContext(context.Context) GetNetPeeringSourceNetOutput
}

type GetNetPeeringSourceNetArgs struct {
	// The account ID of the owner of the source Net.
	AccountId pulumi.StringInput `pulumi:"accountId"`
	// The IP range for the source Net, in CIDR notation (for example, `10.0.0.0/16`).
	IpRange pulumi.StringInput `pulumi:"ipRange"`
	// The ID of the source Net.
	NetId pulumi.StringInput `pulumi:"netId"`
}

func (GetNetPeeringSourceNetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetPeeringSourceNet)(nil)).Elem()
}

func (i GetNetPeeringSourceNetArgs) ToGetNetPeeringSourceNetOutput() GetNetPeeringSourceNetOutput {
	return i.ToGetNetPeeringSourceNetOutputWithContext(context.Background())
}

func (i GetNetPeeringSourceNetArgs) ToGetNetPeeringSourceNetOutputWithContext(ctx context.Context) GetNetPeeringSourceNetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetPeeringSourceNetOutput)
}

// GetNetPeeringSourceNetArrayInput is an input type that accepts GetNetPeeringSourceNetArray and GetNetPeeringSourceNetArrayOutput values.
// You can construct a concrete instance of `GetNetPeeringSourceNetArrayInput` via:
//
//	GetNetPeeringSourceNetArray{ GetNetPeeringSourceNetArgs{...} }
type GetNetPeeringSourceNetArrayInput interface {
	pulumi.Input

	ToGetNetPeeringSourceNetArrayOutput() GetNetPeeringSourceNetArrayOutput
	ToGetNetPeeringSourceNetArrayOutputWithContext(context.Context) GetNetPeeringSourceNetArrayOutput
}

type GetNetPeeringSourceNetArray []GetNetPeeringSourceNetInput

func (GetNetPeeringSourceNetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetPeeringSourceNet)(nil)).Elem()
}

func (i GetNetPeeringSourceNetArray) ToGetNetPeeringSourceNetArrayOutput() GetNetPeeringSourceNetArrayOutput {
	return i.ToGetNetPeeringSourceNetArrayOutputWithContext(context.Background())
}

func (i GetNetPeeringSourceNetArray) ToGetNetPeeringSourceNetArrayOutputWithContext(ctx context.Context) GetNetPeeringSourceNetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetPeeringSourceNetArrayOutput)
}

type GetNetPeeringSourceNetOutput struct{ *pulumi.OutputState }

func (GetNetPeeringSourceNetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetPeeringSourceNet)(nil)).Elem()
}

func (o GetNetPeeringSourceNetOutput) ToGetNetPeeringSourceNetOutput() GetNetPeeringSourceNetOutput {
	return o
}

func (o GetNetPeeringSourceNetOutput) ToGetNetPeeringSourceNetOutputWithContext(ctx context.Context) GetNetPeeringSourceNetOutput {
	return o
}

// The account ID of the owner of the source Net.
func (o GetNetPeeringSourceNetOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetPeeringSourceNet) string { return v.AccountId }).(pulumi.StringOutput)
}

// The IP range for the source Net, in CIDR notation (for example, `10.0.0.0/16`).
func (o GetNetPeeringSourceNetOutput) IpRange() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetPeeringSourceNet) string { return v.IpRange }).(pulumi.StringOutput)
}

// The ID of the source Net.
func (o GetNetPeeringSourceNetOutput) NetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetPeeringSourceNet) string { return v.NetId }).(pulumi.StringOutput)
}

type GetNetPeeringSourceNetArrayOutput struct{ *pulumi.OutputState }

func (GetNetPeeringSourceNetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetPeeringSourceNet)(nil)).Elem()
}

func (o GetNetPeeringSourceNetArrayOutput) ToGetNetPeeringSourceNetArrayOutput() GetNetPeeringSourceNetArrayOutput {
	return o
}

func (o GetNetPeeringSourceNetArrayOutput) ToGetNetPeeringSourceNetArrayOutputWithContext(ctx context.Context) GetNetPeeringSourceNetArrayOutput {
	return o
}

func (o GetNetPeeringSourceNetArrayOutput) Index(i pulumi.IntInput) GetNetPeeringSourceNetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetPeeringSourceNet {
		return vs[0].([]GetNetPeeringSourceNet)[vs[1].(int)]
	}).(GetNetPeeringSourceNetOutput)
}

type GetNetPeeringState struct {
	// Additional information about the state of the Net peering.
	Message string `pulumi:"message"`
	// The state of the Net peering (`pending-acceptance` \| `active` \| `rejected` \| `failed` \| `expired` \| `deleted`).
	Name string `pulumi:"name"`
}

// GetNetPeeringStateInput is an input type that accepts GetNetPeeringStateArgs and GetNetPeeringStateOutput values.
// You can construct a concrete instance of `GetNetPeeringStateInput` via:
//
//	GetNetPeeringStateArgs{...}
type GetNetPeeringStateInput interface {
	pulumi.Input

	ToGetNetPeeringStateOutput() GetNetPeeringStateOutput
	ToGetNetPeeringStateOutputWithContext(context.Context) GetNetPeeringStateOutput
}

type GetNetPeeringStateArgs struct {
	// Additional information about the state of the Net peering.
	Message pulumi.StringInput `pulumi:"message"`
	// The state of the Net peering (`pending-acceptance` \| `active` \| `rejected` \| `failed` \| `expired` \| `deleted`).
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetNetPeeringStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetPeeringState)(nil)).Elem()
}

func (i GetNetPeeringStateArgs) ToGetNetPeeringStateOutput() GetNetPeeringStateOutput {
	return i.ToGetNetPeeringStateOutputWithContext(context.Background())
}

func (i GetNetPeeringStateArgs) ToGetNetPeeringStateOutputWithContext(ctx context.Context) GetNetPeeringStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetPeeringStateOutput)
}

// GetNetPeeringStateArrayInput is an input type that accepts GetNetPeeringStateArray and GetNetPeeringStateArrayOutput values.
// You can construct a concrete instance of `GetNetPeeringStateArrayInput` via:
//
//	GetNetPeeringStateArray{ GetNetPeeringStateArgs{...} }
type GetNetPeeringStateArrayInput interface {
	pulumi.Input

	ToGetNetPeeringStateArrayOutput() GetNetPeeringStateArrayOutput
	ToGetNetPeeringStateArrayOutputWithContext(context.Context) GetNetPeeringStateArrayOutput
}

type GetNetPeeringStateArray []GetNetPeeringStateInput

func (GetNetPeeringStateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetPeeringState)(nil)).Elem()
}

func (i GetNetPeeringStateArray) ToGetNetPeeringStateArrayOutput() GetNetPeeringStateArrayOutput {
	return i.ToGetNetPeeringStateArrayOutputWithContext(context.Background())
}

func (i GetNetPeeringStateArray) ToGetNetPeeringStateArrayOutputWithContext(ctx context.Context) GetNetPeeringStateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetPeeringStateArrayOutput)
}

type GetNetPeeringStateOutput struct{ *pulumi.OutputState }

func (GetNetPeeringStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetPeeringState)(nil)).Elem()
}

func (o GetNetPeeringStateOutput) ToGetNetPeeringStateOutput() GetNetPeeringStateOutput {
	return o
}

func (o GetNetPeeringStateOutput) ToGetNetPeeringStateOutputWithContext(ctx context.Context) GetNetPeeringStateOutput {
	return o
}

// Additional information about the state of the Net peering.
func (o GetNetPeeringStateOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetPeeringState) string { return v.Message }).(pulumi.StringOutput)
}

// The state of the Net peering (`pending-acceptance` \| `active` \| `rejected` \| `failed` \| `expired` \| `deleted`).
func (o GetNetPeeringStateOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetPeeringState) string { return v.Name }).(pulumi.StringOutput)
}

type GetNetPeeringStateArrayOutput struct{ *pulumi.OutputState }

func (GetNetPeeringStateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetPeeringState)(nil)).Elem()
}

func (o GetNetPeeringStateArrayOutput) ToGetNetPeeringStateArrayOutput() GetNetPeeringStateArrayOutput {
	return o
}

func (o GetNetPeeringStateArrayOutput) ToGetNetPeeringStateArrayOutputWithContext(ctx context.Context) GetNetPeeringStateArrayOutput {
	return o
}

func (o GetNetPeeringStateArrayOutput) Index(i pulumi.IntInput) GetNetPeeringStateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetPeeringState {
		return vs[0].([]GetNetPeeringState)[vs[1].(int)]
	}).(GetNetPeeringStateOutput)
}

type GetNetPeeringTag struct {
	// The key of the tag, with a minimum of 1 character.
	Key string `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value string `pulumi:"value"`
}

// GetNetPeeringTagInput is an input type that accepts GetNetPeeringTagArgs and GetNetPeeringTagOutput values.
// You can construct a concrete instance of `GetNetPeeringTagInput` via:
//
//	GetNetPeeringTagArgs{...}
type GetNetPeeringTagInput interface {
	pulumi.Input

	ToGetNetPeeringTagOutput() GetNetPeeringTagOutput
	ToGetNetPeeringTagOutputWithContext(context.Context) GetNetPeeringTagOutput
}

type GetNetPeeringTagArgs struct {
	// The key of the tag, with a minimum of 1 character.
	Key pulumi.StringInput `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetNetPeeringTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetPeeringTag)(nil)).Elem()
}

func (i GetNetPeeringTagArgs) ToGetNetPeeringTagOutput() GetNetPeeringTagOutput {
	return i.ToGetNetPeeringTagOutputWithContext(context.Background())
}

func (i GetNetPeeringTagArgs) ToGetNetPeeringTagOutputWithContext(ctx context.Context) GetNetPeeringTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetPeeringTagOutput)
}

// GetNetPeeringTagArrayInput is an input type that accepts GetNetPeeringTagArray and GetNetPeeringTagArrayOutput values.
// You can construct a concrete instance of `GetNetPeeringTagArrayInput` via:
//
//	GetNetPeeringTagArray{ GetNetPeeringTagArgs{...} }
type GetNetPeeringTagArrayInput interface {
	pulumi.Input

	ToGetNetPeeringTagArrayOutput() GetNetPeeringTagArrayOutput
	ToGetNetPeeringTagArrayOutputWithContext(context.Context) GetNetPeeringTagArrayOutput
}

type GetNetPeeringTagArray []GetNetPeeringTagInput

func (GetNetPeeringTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetPeeringTag)(nil)).Elem()
}

func (i GetNetPeeringTagArray) ToGetNetPeeringTagArrayOutput() GetNetPeeringTagArrayOutput {
	return i.ToGetNetPeeringTagArrayOutputWithContext(context.Background())
}

func (i GetNetPeeringTagArray) ToGetNetPeeringTagArrayOutputWithContext(ctx context.Context) GetNetPeeringTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetPeeringTagArrayOutput)
}

type GetNetPeeringTagOutput struct{ *pulumi.OutputState }

func (GetNetPeeringTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetPeeringTag)(nil)).Elem()
}

func (o GetNetPeeringTagOutput) ToGetNetPeeringTagOutput() GetNetPeeringTagOutput {
	return o
}

func (o GetNetPeeringTagOutput) ToGetNetPeeringTagOutputWithContext(ctx context.Context) GetNetPeeringTagOutput {
	return o
}

// The key of the tag, with a minimum of 1 character.
func (o GetNetPeeringTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetPeeringTag) string { return v.Key }).(pulumi.StringOutput)
}

// The value of the tag, between 0 and 255 characters.
func (o GetNetPeeringTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetPeeringTag) string { return v.Value }).(pulumi.StringOutput)
}

type GetNetPeeringTagArrayOutput struct{ *pulumi.OutputState }

func (GetNetPeeringTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetPeeringTag)(nil)).Elem()
}

func (o GetNetPeeringTagArrayOutput) ToGetNetPeeringTagArrayOutput() GetNetPeeringTagArrayOutput {
	return o
}

func (o GetNetPeeringTagArrayOutput) ToGetNetPeeringTagArrayOutputWithContext(ctx context.Context) GetNetPeeringTagArrayOutput {
	return o
}

func (o GetNetPeeringTagArrayOutput) Index(i pulumi.IntInput) GetNetPeeringTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetPeeringTag {
		return vs[0].([]GetNetPeeringTag)[vs[1].(int)]
	}).(GetNetPeeringTagOutput)
}

type GetNetPeeringsFilter struct {
	// The state of the Net peering (`pending-acceptance` \| `active` \| `rejected` \| `failed` \| `expired` \| `deleted`).
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// GetNetPeeringsFilterInput is an input type that accepts GetNetPeeringsFilterArgs and GetNetPeeringsFilterOutput values.
// You can construct a concrete instance of `GetNetPeeringsFilterInput` via:
//
//	GetNetPeeringsFilterArgs{...}
type GetNetPeeringsFilterInput interface {
	pulumi.Input

	ToGetNetPeeringsFilterOutput() GetNetPeeringsFilterOutput
	ToGetNetPeeringsFilterOutputWithContext(context.Context) GetNetPeeringsFilterOutput
}

type GetNetPeeringsFilterArgs struct {
	// The state of the Net peering (`pending-acceptance` \| `active` \| `rejected` \| `failed` \| `expired` \| `deleted`).
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetNetPeeringsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetPeeringsFilter)(nil)).Elem()
}

func (i GetNetPeeringsFilterArgs) ToGetNetPeeringsFilterOutput() GetNetPeeringsFilterOutput {
	return i.ToGetNetPeeringsFilterOutputWithContext(context.Background())
}

func (i GetNetPeeringsFilterArgs) ToGetNetPeeringsFilterOutputWithContext(ctx context.Context) GetNetPeeringsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetPeeringsFilterOutput)
}

// GetNetPeeringsFilterArrayInput is an input type that accepts GetNetPeeringsFilterArray and GetNetPeeringsFilterArrayOutput values.
// You can construct a concrete instance of `GetNetPeeringsFilterArrayInput` via:
//
//	GetNetPeeringsFilterArray{ GetNetPeeringsFilterArgs{...} }
type GetNetPeeringsFilterArrayInput interface {
	pulumi.Input

	ToGetNetPeeringsFilterArrayOutput() GetNetPeeringsFilterArrayOutput
	ToGetNetPeeringsFilterArrayOutputWithContext(context.Context) GetNetPeeringsFilterArrayOutput
}

type GetNetPeeringsFilterArray []GetNetPeeringsFilterInput

func (GetNetPeeringsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetPeeringsFilter)(nil)).Elem()
}

func (i GetNetPeeringsFilterArray) ToGetNetPeeringsFilterArrayOutput() GetNetPeeringsFilterArrayOutput {
	return i.ToGetNetPeeringsFilterArrayOutputWithContext(context.Background())
}

func (i GetNetPeeringsFilterArray) ToGetNetPeeringsFilterArrayOutputWithContext(ctx context.Context) GetNetPeeringsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetPeeringsFilterArrayOutput)
}

type GetNetPeeringsFilterOutput struct{ *pulumi.OutputState }

func (GetNetPeeringsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetPeeringsFilter)(nil)).Elem()
}

func (o GetNetPeeringsFilterOutput) ToGetNetPeeringsFilterOutput() GetNetPeeringsFilterOutput {
	return o
}

func (o GetNetPeeringsFilterOutput) ToGetNetPeeringsFilterOutputWithContext(ctx context.Context) GetNetPeeringsFilterOutput {
	return o
}

// The state of the Net peering (`pending-acceptance` \| `active` \| `rejected` \| `failed` \| `expired` \| `deleted`).
func (o GetNetPeeringsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetPeeringsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetNetPeeringsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNetPeeringsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetNetPeeringsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetNetPeeringsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetPeeringsFilter)(nil)).Elem()
}

func (o GetNetPeeringsFilterArrayOutput) ToGetNetPeeringsFilterArrayOutput() GetNetPeeringsFilterArrayOutput {
	return o
}

func (o GetNetPeeringsFilterArrayOutput) ToGetNetPeeringsFilterArrayOutputWithContext(ctx context.Context) GetNetPeeringsFilterArrayOutput {
	return o
}

func (o GetNetPeeringsFilterArrayOutput) Index(i pulumi.IntInput) GetNetPeeringsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetPeeringsFilter {
		return vs[0].([]GetNetPeeringsFilter)[vs[1].(int)]
	}).(GetNetPeeringsFilterOutput)
}

type GetNetPeeringsNetPeering struct {
	// Information about the accepter Net.
	AccepterNets []GetNetPeeringsNetPeeringAccepterNet `pulumi:"accepterNets"`
	// The ID of the Net peering.
	NetPeeringId string `pulumi:"netPeeringId"`
	// Information about the source Net.
	SourceNets []GetNetPeeringsNetPeeringSourceNet `pulumi:"sourceNets"`
	// Information about the state of the Net peering.
	States []GetNetPeeringsNetPeeringState `pulumi:"states"`
	// One or more tags associated with the Net peering.
	Tags []GetNetPeeringsNetPeeringTag `pulumi:"tags"`
}

// GetNetPeeringsNetPeeringInput is an input type that accepts GetNetPeeringsNetPeeringArgs and GetNetPeeringsNetPeeringOutput values.
// You can construct a concrete instance of `GetNetPeeringsNetPeeringInput` via:
//
//	GetNetPeeringsNetPeeringArgs{...}
type GetNetPeeringsNetPeeringInput interface {
	pulumi.Input

	ToGetNetPeeringsNetPeeringOutput() GetNetPeeringsNetPeeringOutput
	ToGetNetPeeringsNetPeeringOutputWithContext(context.Context) GetNetPeeringsNetPeeringOutput
}

type GetNetPeeringsNetPeeringArgs struct {
	// Information about the accepter Net.
	AccepterNets GetNetPeeringsNetPeeringAccepterNetArrayInput `pulumi:"accepterNets"`
	// The ID of the Net peering.
	NetPeeringId pulumi.StringInput `pulumi:"netPeeringId"`
	// Information about the source Net.
	SourceNets GetNetPeeringsNetPeeringSourceNetArrayInput `pulumi:"sourceNets"`
	// Information about the state of the Net peering.
	States GetNetPeeringsNetPeeringStateArrayInput `pulumi:"states"`
	// One or more tags associated with the Net peering.
	Tags GetNetPeeringsNetPeeringTagArrayInput `pulumi:"tags"`
}

func (GetNetPeeringsNetPeeringArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetPeeringsNetPeering)(nil)).Elem()
}

func (i GetNetPeeringsNetPeeringArgs) ToGetNetPeeringsNetPeeringOutput() GetNetPeeringsNetPeeringOutput {
	return i.ToGetNetPeeringsNetPeeringOutputWithContext(context.Background())
}

func (i GetNetPeeringsNetPeeringArgs) ToGetNetPeeringsNetPeeringOutputWithContext(ctx context.Context) GetNetPeeringsNetPeeringOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetPeeringsNetPeeringOutput)
}

// GetNetPeeringsNetPeeringArrayInput is an input type that accepts GetNetPeeringsNetPeeringArray and GetNetPeeringsNetPeeringArrayOutput values.
// You can construct a concrete instance of `GetNetPeeringsNetPeeringArrayInput` via:
//
//	GetNetPeeringsNetPeeringArray{ GetNetPeeringsNetPeeringArgs{...} }
type GetNetPeeringsNetPeeringArrayInput interface {
	pulumi.Input

	ToGetNetPeeringsNetPeeringArrayOutput() GetNetPeeringsNetPeeringArrayOutput
	ToGetNetPeeringsNetPeeringArrayOutputWithContext(context.Context) GetNetPeeringsNetPeeringArrayOutput
}

type GetNetPeeringsNetPeeringArray []GetNetPeeringsNetPeeringInput

func (GetNetPeeringsNetPeeringArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetPeeringsNetPeering)(nil)).Elem()
}

func (i GetNetPeeringsNetPeeringArray) ToGetNetPeeringsNetPeeringArrayOutput() GetNetPeeringsNetPeeringArrayOutput {
	return i.ToGetNetPeeringsNetPeeringArrayOutputWithContext(context.Background())
}

func (i GetNetPeeringsNetPeeringArray) ToGetNetPeeringsNetPeeringArrayOutputWithContext(ctx context.Context) GetNetPeeringsNetPeeringArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetPeeringsNetPeeringArrayOutput)
}

type GetNetPeeringsNetPeeringOutput struct{ *pulumi.OutputState }

func (GetNetPeeringsNetPeeringOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetPeeringsNetPeering)(nil)).Elem()
}

func (o GetNetPeeringsNetPeeringOutput) ToGetNetPeeringsNetPeeringOutput() GetNetPeeringsNetPeeringOutput {
	return o
}

func (o GetNetPeeringsNetPeeringOutput) ToGetNetPeeringsNetPeeringOutputWithContext(ctx context.Context) GetNetPeeringsNetPeeringOutput {
	return o
}

// Information about the accepter Net.
func (o GetNetPeeringsNetPeeringOutput) AccepterNets() GetNetPeeringsNetPeeringAccepterNetArrayOutput {
	return o.ApplyT(func(v GetNetPeeringsNetPeering) []GetNetPeeringsNetPeeringAccepterNet { return v.AccepterNets }).(GetNetPeeringsNetPeeringAccepterNetArrayOutput)
}

// The ID of the Net peering.
func (o GetNetPeeringsNetPeeringOutput) NetPeeringId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetPeeringsNetPeering) string { return v.NetPeeringId }).(pulumi.StringOutput)
}

// Information about the source Net.
func (o GetNetPeeringsNetPeeringOutput) SourceNets() GetNetPeeringsNetPeeringSourceNetArrayOutput {
	return o.ApplyT(func(v GetNetPeeringsNetPeering) []GetNetPeeringsNetPeeringSourceNet { return v.SourceNets }).(GetNetPeeringsNetPeeringSourceNetArrayOutput)
}

// Information about the state of the Net peering.
func (o GetNetPeeringsNetPeeringOutput) States() GetNetPeeringsNetPeeringStateArrayOutput {
	return o.ApplyT(func(v GetNetPeeringsNetPeering) []GetNetPeeringsNetPeeringState { return v.States }).(GetNetPeeringsNetPeeringStateArrayOutput)
}

// One or more tags associated with the Net peering.
func (o GetNetPeeringsNetPeeringOutput) Tags() GetNetPeeringsNetPeeringTagArrayOutput {
	return o.ApplyT(func(v GetNetPeeringsNetPeering) []GetNetPeeringsNetPeeringTag { return v.Tags }).(GetNetPeeringsNetPeeringTagArrayOutput)
}

type GetNetPeeringsNetPeeringArrayOutput struct{ *pulumi.OutputState }

func (GetNetPeeringsNetPeeringArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetPeeringsNetPeering)(nil)).Elem()
}

func (o GetNetPeeringsNetPeeringArrayOutput) ToGetNetPeeringsNetPeeringArrayOutput() GetNetPeeringsNetPeeringArrayOutput {
	return o
}

func (o GetNetPeeringsNetPeeringArrayOutput) ToGetNetPeeringsNetPeeringArrayOutputWithContext(ctx context.Context) GetNetPeeringsNetPeeringArrayOutput {
	return o
}

func (o GetNetPeeringsNetPeeringArrayOutput) Index(i pulumi.IntInput) GetNetPeeringsNetPeeringOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetPeeringsNetPeering {
		return vs[0].([]GetNetPeeringsNetPeering)[vs[1].(int)]
	}).(GetNetPeeringsNetPeeringOutput)
}

type GetNetPeeringsNetPeeringAccepterNet struct {
	// The account ID of the owner of the source Net.
	AccountId string `pulumi:"accountId"`
	// The IP range for the source Net, in CIDR notation (for example, `10.0.0.0/16`).
	IpRange string `pulumi:"ipRange"`
	// The ID of the source Net.
	NetId string `pulumi:"netId"`
}

// GetNetPeeringsNetPeeringAccepterNetInput is an input type that accepts GetNetPeeringsNetPeeringAccepterNetArgs and GetNetPeeringsNetPeeringAccepterNetOutput values.
// You can construct a concrete instance of `GetNetPeeringsNetPeeringAccepterNetInput` via:
//
//	GetNetPeeringsNetPeeringAccepterNetArgs{...}
type GetNetPeeringsNetPeeringAccepterNetInput interface {
	pulumi.Input

	ToGetNetPeeringsNetPeeringAccepterNetOutput() GetNetPeeringsNetPeeringAccepterNetOutput
	ToGetNetPeeringsNetPeeringAccepterNetOutputWithContext(context.Context) GetNetPeeringsNetPeeringAccepterNetOutput
}

type GetNetPeeringsNetPeeringAccepterNetArgs struct {
	// The account ID of the owner of the source Net.
	AccountId pulumi.StringInput `pulumi:"accountId"`
	// The IP range for the source Net, in CIDR notation (for example, `10.0.0.0/16`).
	IpRange pulumi.StringInput `pulumi:"ipRange"`
	// The ID of the source Net.
	NetId pulumi.StringInput `pulumi:"netId"`
}

func (GetNetPeeringsNetPeeringAccepterNetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetPeeringsNetPeeringAccepterNet)(nil)).Elem()
}

func (i GetNetPeeringsNetPeeringAccepterNetArgs) ToGetNetPeeringsNetPeeringAccepterNetOutput() GetNetPeeringsNetPeeringAccepterNetOutput {
	return i.ToGetNetPeeringsNetPeeringAccepterNetOutputWithContext(context.Background())
}

func (i GetNetPeeringsNetPeeringAccepterNetArgs) ToGetNetPeeringsNetPeeringAccepterNetOutputWithContext(ctx context.Context) GetNetPeeringsNetPeeringAccepterNetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetPeeringsNetPeeringAccepterNetOutput)
}

// GetNetPeeringsNetPeeringAccepterNetArrayInput is an input type that accepts GetNetPeeringsNetPeeringAccepterNetArray and GetNetPeeringsNetPeeringAccepterNetArrayOutput values.
// You can construct a concrete instance of `GetNetPeeringsNetPeeringAccepterNetArrayInput` via:
//
//	GetNetPeeringsNetPeeringAccepterNetArray{ GetNetPeeringsNetPeeringAccepterNetArgs{...} }
type GetNetPeeringsNetPeeringAccepterNetArrayInput interface {
	pulumi.Input

	ToGetNetPeeringsNetPeeringAccepterNetArrayOutput() GetNetPeeringsNetPeeringAccepterNetArrayOutput
	ToGetNetPeeringsNetPeeringAccepterNetArrayOutputWithContext(context.Context) GetNetPeeringsNetPeeringAccepterNetArrayOutput
}

type GetNetPeeringsNetPeeringAccepterNetArray []GetNetPeeringsNetPeeringAccepterNetInput

func (GetNetPeeringsNetPeeringAccepterNetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetPeeringsNetPeeringAccepterNet)(nil)).Elem()
}

func (i GetNetPeeringsNetPeeringAccepterNetArray) ToGetNetPeeringsNetPeeringAccepterNetArrayOutput() GetNetPeeringsNetPeeringAccepterNetArrayOutput {
	return i.ToGetNetPeeringsNetPeeringAccepterNetArrayOutputWithContext(context.Background())
}

func (i GetNetPeeringsNetPeeringAccepterNetArray) ToGetNetPeeringsNetPeeringAccepterNetArrayOutputWithContext(ctx context.Context) GetNetPeeringsNetPeeringAccepterNetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetPeeringsNetPeeringAccepterNetArrayOutput)
}

type GetNetPeeringsNetPeeringAccepterNetOutput struct{ *pulumi.OutputState }

func (GetNetPeeringsNetPeeringAccepterNetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetPeeringsNetPeeringAccepterNet)(nil)).Elem()
}

func (o GetNetPeeringsNetPeeringAccepterNetOutput) ToGetNetPeeringsNetPeeringAccepterNetOutput() GetNetPeeringsNetPeeringAccepterNetOutput {
	return o
}

func (o GetNetPeeringsNetPeeringAccepterNetOutput) ToGetNetPeeringsNetPeeringAccepterNetOutputWithContext(ctx context.Context) GetNetPeeringsNetPeeringAccepterNetOutput {
	return o
}

// The account ID of the owner of the source Net.
func (o GetNetPeeringsNetPeeringAccepterNetOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetPeeringsNetPeeringAccepterNet) string { return v.AccountId }).(pulumi.StringOutput)
}

// The IP range for the source Net, in CIDR notation (for example, `10.0.0.0/16`).
func (o GetNetPeeringsNetPeeringAccepterNetOutput) IpRange() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetPeeringsNetPeeringAccepterNet) string { return v.IpRange }).(pulumi.StringOutput)
}

// The ID of the source Net.
func (o GetNetPeeringsNetPeeringAccepterNetOutput) NetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetPeeringsNetPeeringAccepterNet) string { return v.NetId }).(pulumi.StringOutput)
}

type GetNetPeeringsNetPeeringAccepterNetArrayOutput struct{ *pulumi.OutputState }

func (GetNetPeeringsNetPeeringAccepterNetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetPeeringsNetPeeringAccepterNet)(nil)).Elem()
}

func (o GetNetPeeringsNetPeeringAccepterNetArrayOutput) ToGetNetPeeringsNetPeeringAccepterNetArrayOutput() GetNetPeeringsNetPeeringAccepterNetArrayOutput {
	return o
}

func (o GetNetPeeringsNetPeeringAccepterNetArrayOutput) ToGetNetPeeringsNetPeeringAccepterNetArrayOutputWithContext(ctx context.Context) GetNetPeeringsNetPeeringAccepterNetArrayOutput {
	return o
}

func (o GetNetPeeringsNetPeeringAccepterNetArrayOutput) Index(i pulumi.IntInput) GetNetPeeringsNetPeeringAccepterNetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetPeeringsNetPeeringAccepterNet {
		return vs[0].([]GetNetPeeringsNetPeeringAccepterNet)[vs[1].(int)]
	}).(GetNetPeeringsNetPeeringAccepterNetOutput)
}

type GetNetPeeringsNetPeeringSourceNet struct {
	// The account ID of the owner of the source Net.
	AccountId string `pulumi:"accountId"`
	// The IP range for the source Net, in CIDR notation (for example, `10.0.0.0/16`).
	IpRange string `pulumi:"ipRange"`
	// The ID of the source Net.
	NetId string `pulumi:"netId"`
}

// GetNetPeeringsNetPeeringSourceNetInput is an input type that accepts GetNetPeeringsNetPeeringSourceNetArgs and GetNetPeeringsNetPeeringSourceNetOutput values.
// You can construct a concrete instance of `GetNetPeeringsNetPeeringSourceNetInput` via:
//
//	GetNetPeeringsNetPeeringSourceNetArgs{...}
type GetNetPeeringsNetPeeringSourceNetInput interface {
	pulumi.Input

	ToGetNetPeeringsNetPeeringSourceNetOutput() GetNetPeeringsNetPeeringSourceNetOutput
	ToGetNetPeeringsNetPeeringSourceNetOutputWithContext(context.Context) GetNetPeeringsNetPeeringSourceNetOutput
}

type GetNetPeeringsNetPeeringSourceNetArgs struct {
	// The account ID of the owner of the source Net.
	AccountId pulumi.StringInput `pulumi:"accountId"`
	// The IP range for the source Net, in CIDR notation (for example, `10.0.0.0/16`).
	IpRange pulumi.StringInput `pulumi:"ipRange"`
	// The ID of the source Net.
	NetId pulumi.StringInput `pulumi:"netId"`
}

func (GetNetPeeringsNetPeeringSourceNetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetPeeringsNetPeeringSourceNet)(nil)).Elem()
}

func (i GetNetPeeringsNetPeeringSourceNetArgs) ToGetNetPeeringsNetPeeringSourceNetOutput() GetNetPeeringsNetPeeringSourceNetOutput {
	return i.ToGetNetPeeringsNetPeeringSourceNetOutputWithContext(context.Background())
}

func (i GetNetPeeringsNetPeeringSourceNetArgs) ToGetNetPeeringsNetPeeringSourceNetOutputWithContext(ctx context.Context) GetNetPeeringsNetPeeringSourceNetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetPeeringsNetPeeringSourceNetOutput)
}

// GetNetPeeringsNetPeeringSourceNetArrayInput is an input type that accepts GetNetPeeringsNetPeeringSourceNetArray and GetNetPeeringsNetPeeringSourceNetArrayOutput values.
// You can construct a concrete instance of `GetNetPeeringsNetPeeringSourceNetArrayInput` via:
//
//	GetNetPeeringsNetPeeringSourceNetArray{ GetNetPeeringsNetPeeringSourceNetArgs{...} }
type GetNetPeeringsNetPeeringSourceNetArrayInput interface {
	pulumi.Input

	ToGetNetPeeringsNetPeeringSourceNetArrayOutput() GetNetPeeringsNetPeeringSourceNetArrayOutput
	ToGetNetPeeringsNetPeeringSourceNetArrayOutputWithContext(context.Context) GetNetPeeringsNetPeeringSourceNetArrayOutput
}

type GetNetPeeringsNetPeeringSourceNetArray []GetNetPeeringsNetPeeringSourceNetInput

func (GetNetPeeringsNetPeeringSourceNetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetPeeringsNetPeeringSourceNet)(nil)).Elem()
}

func (i GetNetPeeringsNetPeeringSourceNetArray) ToGetNetPeeringsNetPeeringSourceNetArrayOutput() GetNetPeeringsNetPeeringSourceNetArrayOutput {
	return i.ToGetNetPeeringsNetPeeringSourceNetArrayOutputWithContext(context.Background())
}

func (i GetNetPeeringsNetPeeringSourceNetArray) ToGetNetPeeringsNetPeeringSourceNetArrayOutputWithContext(ctx context.Context) GetNetPeeringsNetPeeringSourceNetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetPeeringsNetPeeringSourceNetArrayOutput)
}

type GetNetPeeringsNetPeeringSourceNetOutput struct{ *pulumi.OutputState }

func (GetNetPeeringsNetPeeringSourceNetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetPeeringsNetPeeringSourceNet)(nil)).Elem()
}

func (o GetNetPeeringsNetPeeringSourceNetOutput) ToGetNetPeeringsNetPeeringSourceNetOutput() GetNetPeeringsNetPeeringSourceNetOutput {
	return o
}

func (o GetNetPeeringsNetPeeringSourceNetOutput) ToGetNetPeeringsNetPeeringSourceNetOutputWithContext(ctx context.Context) GetNetPeeringsNetPeeringSourceNetOutput {
	return o
}

// The account ID of the owner of the source Net.
func (o GetNetPeeringsNetPeeringSourceNetOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetPeeringsNetPeeringSourceNet) string { return v.AccountId }).(pulumi.StringOutput)
}

// The IP range for the source Net, in CIDR notation (for example, `10.0.0.0/16`).
func (o GetNetPeeringsNetPeeringSourceNetOutput) IpRange() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetPeeringsNetPeeringSourceNet) string { return v.IpRange }).(pulumi.StringOutput)
}

// The ID of the source Net.
func (o GetNetPeeringsNetPeeringSourceNetOutput) NetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetPeeringsNetPeeringSourceNet) string { return v.NetId }).(pulumi.StringOutput)
}

type GetNetPeeringsNetPeeringSourceNetArrayOutput struct{ *pulumi.OutputState }

func (GetNetPeeringsNetPeeringSourceNetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetPeeringsNetPeeringSourceNet)(nil)).Elem()
}

func (o GetNetPeeringsNetPeeringSourceNetArrayOutput) ToGetNetPeeringsNetPeeringSourceNetArrayOutput() GetNetPeeringsNetPeeringSourceNetArrayOutput {
	return o
}

func (o GetNetPeeringsNetPeeringSourceNetArrayOutput) ToGetNetPeeringsNetPeeringSourceNetArrayOutputWithContext(ctx context.Context) GetNetPeeringsNetPeeringSourceNetArrayOutput {
	return o
}

func (o GetNetPeeringsNetPeeringSourceNetArrayOutput) Index(i pulumi.IntInput) GetNetPeeringsNetPeeringSourceNetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetPeeringsNetPeeringSourceNet {
		return vs[0].([]GetNetPeeringsNetPeeringSourceNet)[vs[1].(int)]
	}).(GetNetPeeringsNetPeeringSourceNetOutput)
}

type GetNetPeeringsNetPeeringState struct {
	// Additional information about the state of the Net peering.
	Message string `pulumi:"message"`
	// The state of the Net peering (`pending-acceptance` \| `active` \| `rejected` \| `failed` \| `expired` \| `deleted`).
	Name string `pulumi:"name"`
}

// GetNetPeeringsNetPeeringStateInput is an input type that accepts GetNetPeeringsNetPeeringStateArgs and GetNetPeeringsNetPeeringStateOutput values.
// You can construct a concrete instance of `GetNetPeeringsNetPeeringStateInput` via:
//
//	GetNetPeeringsNetPeeringStateArgs{...}
type GetNetPeeringsNetPeeringStateInput interface {
	pulumi.Input

	ToGetNetPeeringsNetPeeringStateOutput() GetNetPeeringsNetPeeringStateOutput
	ToGetNetPeeringsNetPeeringStateOutputWithContext(context.Context) GetNetPeeringsNetPeeringStateOutput
}

type GetNetPeeringsNetPeeringStateArgs struct {
	// Additional information about the state of the Net peering.
	Message pulumi.StringInput `pulumi:"message"`
	// The state of the Net peering (`pending-acceptance` \| `active` \| `rejected` \| `failed` \| `expired` \| `deleted`).
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetNetPeeringsNetPeeringStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetPeeringsNetPeeringState)(nil)).Elem()
}

func (i GetNetPeeringsNetPeeringStateArgs) ToGetNetPeeringsNetPeeringStateOutput() GetNetPeeringsNetPeeringStateOutput {
	return i.ToGetNetPeeringsNetPeeringStateOutputWithContext(context.Background())
}

func (i GetNetPeeringsNetPeeringStateArgs) ToGetNetPeeringsNetPeeringStateOutputWithContext(ctx context.Context) GetNetPeeringsNetPeeringStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetPeeringsNetPeeringStateOutput)
}

// GetNetPeeringsNetPeeringStateArrayInput is an input type that accepts GetNetPeeringsNetPeeringStateArray and GetNetPeeringsNetPeeringStateArrayOutput values.
// You can construct a concrete instance of `GetNetPeeringsNetPeeringStateArrayInput` via:
//
//	GetNetPeeringsNetPeeringStateArray{ GetNetPeeringsNetPeeringStateArgs{...} }
type GetNetPeeringsNetPeeringStateArrayInput interface {
	pulumi.Input

	ToGetNetPeeringsNetPeeringStateArrayOutput() GetNetPeeringsNetPeeringStateArrayOutput
	ToGetNetPeeringsNetPeeringStateArrayOutputWithContext(context.Context) GetNetPeeringsNetPeeringStateArrayOutput
}

type GetNetPeeringsNetPeeringStateArray []GetNetPeeringsNetPeeringStateInput

func (GetNetPeeringsNetPeeringStateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetPeeringsNetPeeringState)(nil)).Elem()
}

func (i GetNetPeeringsNetPeeringStateArray) ToGetNetPeeringsNetPeeringStateArrayOutput() GetNetPeeringsNetPeeringStateArrayOutput {
	return i.ToGetNetPeeringsNetPeeringStateArrayOutputWithContext(context.Background())
}

func (i GetNetPeeringsNetPeeringStateArray) ToGetNetPeeringsNetPeeringStateArrayOutputWithContext(ctx context.Context) GetNetPeeringsNetPeeringStateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetPeeringsNetPeeringStateArrayOutput)
}

type GetNetPeeringsNetPeeringStateOutput struct{ *pulumi.OutputState }

func (GetNetPeeringsNetPeeringStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetPeeringsNetPeeringState)(nil)).Elem()
}

func (o GetNetPeeringsNetPeeringStateOutput) ToGetNetPeeringsNetPeeringStateOutput() GetNetPeeringsNetPeeringStateOutput {
	return o
}

func (o GetNetPeeringsNetPeeringStateOutput) ToGetNetPeeringsNetPeeringStateOutputWithContext(ctx context.Context) GetNetPeeringsNetPeeringStateOutput {
	return o
}

// Additional information about the state of the Net peering.
func (o GetNetPeeringsNetPeeringStateOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetPeeringsNetPeeringState) string { return v.Message }).(pulumi.StringOutput)
}

// The state of the Net peering (`pending-acceptance` \| `active` \| `rejected` \| `failed` \| `expired` \| `deleted`).
func (o GetNetPeeringsNetPeeringStateOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetPeeringsNetPeeringState) string { return v.Name }).(pulumi.StringOutput)
}

type GetNetPeeringsNetPeeringStateArrayOutput struct{ *pulumi.OutputState }

func (GetNetPeeringsNetPeeringStateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetPeeringsNetPeeringState)(nil)).Elem()
}

func (o GetNetPeeringsNetPeeringStateArrayOutput) ToGetNetPeeringsNetPeeringStateArrayOutput() GetNetPeeringsNetPeeringStateArrayOutput {
	return o
}

func (o GetNetPeeringsNetPeeringStateArrayOutput) ToGetNetPeeringsNetPeeringStateArrayOutputWithContext(ctx context.Context) GetNetPeeringsNetPeeringStateArrayOutput {
	return o
}

func (o GetNetPeeringsNetPeeringStateArrayOutput) Index(i pulumi.IntInput) GetNetPeeringsNetPeeringStateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetPeeringsNetPeeringState {
		return vs[0].([]GetNetPeeringsNetPeeringState)[vs[1].(int)]
	}).(GetNetPeeringsNetPeeringStateOutput)
}

type GetNetPeeringsNetPeeringTag struct {
	// The key of the tag, with a minimum of 1 character.
	Key string `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value string `pulumi:"value"`
}

// GetNetPeeringsNetPeeringTagInput is an input type that accepts GetNetPeeringsNetPeeringTagArgs and GetNetPeeringsNetPeeringTagOutput values.
// You can construct a concrete instance of `GetNetPeeringsNetPeeringTagInput` via:
//
//	GetNetPeeringsNetPeeringTagArgs{...}
type GetNetPeeringsNetPeeringTagInput interface {
	pulumi.Input

	ToGetNetPeeringsNetPeeringTagOutput() GetNetPeeringsNetPeeringTagOutput
	ToGetNetPeeringsNetPeeringTagOutputWithContext(context.Context) GetNetPeeringsNetPeeringTagOutput
}

type GetNetPeeringsNetPeeringTagArgs struct {
	// The key of the tag, with a minimum of 1 character.
	Key pulumi.StringInput `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetNetPeeringsNetPeeringTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetPeeringsNetPeeringTag)(nil)).Elem()
}

func (i GetNetPeeringsNetPeeringTagArgs) ToGetNetPeeringsNetPeeringTagOutput() GetNetPeeringsNetPeeringTagOutput {
	return i.ToGetNetPeeringsNetPeeringTagOutputWithContext(context.Background())
}

func (i GetNetPeeringsNetPeeringTagArgs) ToGetNetPeeringsNetPeeringTagOutputWithContext(ctx context.Context) GetNetPeeringsNetPeeringTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetPeeringsNetPeeringTagOutput)
}

// GetNetPeeringsNetPeeringTagArrayInput is an input type that accepts GetNetPeeringsNetPeeringTagArray and GetNetPeeringsNetPeeringTagArrayOutput values.
// You can construct a concrete instance of `GetNetPeeringsNetPeeringTagArrayInput` via:
//
//	GetNetPeeringsNetPeeringTagArray{ GetNetPeeringsNetPeeringTagArgs{...} }
type GetNetPeeringsNetPeeringTagArrayInput interface {
	pulumi.Input

	ToGetNetPeeringsNetPeeringTagArrayOutput() GetNetPeeringsNetPeeringTagArrayOutput
	ToGetNetPeeringsNetPeeringTagArrayOutputWithContext(context.Context) GetNetPeeringsNetPeeringTagArrayOutput
}

type GetNetPeeringsNetPeeringTagArray []GetNetPeeringsNetPeeringTagInput

func (GetNetPeeringsNetPeeringTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetPeeringsNetPeeringTag)(nil)).Elem()
}

func (i GetNetPeeringsNetPeeringTagArray) ToGetNetPeeringsNetPeeringTagArrayOutput() GetNetPeeringsNetPeeringTagArrayOutput {
	return i.ToGetNetPeeringsNetPeeringTagArrayOutputWithContext(context.Background())
}

func (i GetNetPeeringsNetPeeringTagArray) ToGetNetPeeringsNetPeeringTagArrayOutputWithContext(ctx context.Context) GetNetPeeringsNetPeeringTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetPeeringsNetPeeringTagArrayOutput)
}

type GetNetPeeringsNetPeeringTagOutput struct{ *pulumi.OutputState }

func (GetNetPeeringsNetPeeringTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetPeeringsNetPeeringTag)(nil)).Elem()
}

func (o GetNetPeeringsNetPeeringTagOutput) ToGetNetPeeringsNetPeeringTagOutput() GetNetPeeringsNetPeeringTagOutput {
	return o
}

func (o GetNetPeeringsNetPeeringTagOutput) ToGetNetPeeringsNetPeeringTagOutputWithContext(ctx context.Context) GetNetPeeringsNetPeeringTagOutput {
	return o
}

// The key of the tag, with a minimum of 1 character.
func (o GetNetPeeringsNetPeeringTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetPeeringsNetPeeringTag) string { return v.Key }).(pulumi.StringOutput)
}

// The value of the tag, between 0 and 255 characters.
func (o GetNetPeeringsNetPeeringTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetPeeringsNetPeeringTag) string { return v.Value }).(pulumi.StringOutput)
}

type GetNetPeeringsNetPeeringTagArrayOutput struct{ *pulumi.OutputState }

func (GetNetPeeringsNetPeeringTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetPeeringsNetPeeringTag)(nil)).Elem()
}

func (o GetNetPeeringsNetPeeringTagArrayOutput) ToGetNetPeeringsNetPeeringTagArrayOutput() GetNetPeeringsNetPeeringTagArrayOutput {
	return o
}

func (o GetNetPeeringsNetPeeringTagArrayOutput) ToGetNetPeeringsNetPeeringTagArrayOutputWithContext(ctx context.Context) GetNetPeeringsNetPeeringTagArrayOutput {
	return o
}

func (o GetNetPeeringsNetPeeringTagArrayOutput) Index(i pulumi.IntInput) GetNetPeeringsNetPeeringTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetPeeringsNetPeeringTag {
		return vs[0].([]GetNetPeeringsNetPeeringTag)[vs[1].(int)]
	}).(GetNetPeeringsNetPeeringTagOutput)
}

type GetNetTag struct {
	// The key of the tag, with a minimum of 1 character.
	Key string `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value string `pulumi:"value"`
}

// GetNetTagInput is an input type that accepts GetNetTagArgs and GetNetTagOutput values.
// You can construct a concrete instance of `GetNetTagInput` via:
//
//	GetNetTagArgs{...}
type GetNetTagInput interface {
	pulumi.Input

	ToGetNetTagOutput() GetNetTagOutput
	ToGetNetTagOutputWithContext(context.Context) GetNetTagOutput
}

type GetNetTagArgs struct {
	// The key of the tag, with a minimum of 1 character.
	Key pulumi.StringInput `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetNetTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetTag)(nil)).Elem()
}

func (i GetNetTagArgs) ToGetNetTagOutput() GetNetTagOutput {
	return i.ToGetNetTagOutputWithContext(context.Background())
}

func (i GetNetTagArgs) ToGetNetTagOutputWithContext(ctx context.Context) GetNetTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetTagOutput)
}

// GetNetTagArrayInput is an input type that accepts GetNetTagArray and GetNetTagArrayOutput values.
// You can construct a concrete instance of `GetNetTagArrayInput` via:
//
//	GetNetTagArray{ GetNetTagArgs{...} }
type GetNetTagArrayInput interface {
	pulumi.Input

	ToGetNetTagArrayOutput() GetNetTagArrayOutput
	ToGetNetTagArrayOutputWithContext(context.Context) GetNetTagArrayOutput
}

type GetNetTagArray []GetNetTagInput

func (GetNetTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetTag)(nil)).Elem()
}

func (i GetNetTagArray) ToGetNetTagArrayOutput() GetNetTagArrayOutput {
	return i.ToGetNetTagArrayOutputWithContext(context.Background())
}

func (i GetNetTagArray) ToGetNetTagArrayOutputWithContext(ctx context.Context) GetNetTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetTagArrayOutput)
}

type GetNetTagOutput struct{ *pulumi.OutputState }

func (GetNetTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetTag)(nil)).Elem()
}

func (o GetNetTagOutput) ToGetNetTagOutput() GetNetTagOutput {
	return o
}

func (o GetNetTagOutput) ToGetNetTagOutputWithContext(ctx context.Context) GetNetTagOutput {
	return o
}

// The key of the tag, with a minimum of 1 character.
func (o GetNetTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetTag) string { return v.Key }).(pulumi.StringOutput)
}

// The value of the tag, between 0 and 255 characters.
func (o GetNetTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetTag) string { return v.Value }).(pulumi.StringOutput)
}

type GetNetTagArrayOutput struct{ *pulumi.OutputState }

func (GetNetTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetTag)(nil)).Elem()
}

func (o GetNetTagArrayOutput) ToGetNetTagArrayOutput() GetNetTagArrayOutput {
	return o
}

func (o GetNetTagArrayOutput) ToGetNetTagArrayOutputWithContext(ctx context.Context) GetNetTagArrayOutput {
	return o
}

func (o GetNetTagArrayOutput) Index(i pulumi.IntInput) GetNetTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetTag {
		return vs[0].([]GetNetTag)[vs[1].(int)]
	}).(GetNetTagOutput)
}

type GetNetsFilter struct {
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// GetNetsFilterInput is an input type that accepts GetNetsFilterArgs and GetNetsFilterOutput values.
// You can construct a concrete instance of `GetNetsFilterInput` via:
//
//	GetNetsFilterArgs{...}
type GetNetsFilterInput interface {
	pulumi.Input

	ToGetNetsFilterOutput() GetNetsFilterOutput
	ToGetNetsFilterOutputWithContext(context.Context) GetNetsFilterOutput
}

type GetNetsFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetNetsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetsFilter)(nil)).Elem()
}

func (i GetNetsFilterArgs) ToGetNetsFilterOutput() GetNetsFilterOutput {
	return i.ToGetNetsFilterOutputWithContext(context.Background())
}

func (i GetNetsFilterArgs) ToGetNetsFilterOutputWithContext(ctx context.Context) GetNetsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetsFilterOutput)
}

// GetNetsFilterArrayInput is an input type that accepts GetNetsFilterArray and GetNetsFilterArrayOutput values.
// You can construct a concrete instance of `GetNetsFilterArrayInput` via:
//
//	GetNetsFilterArray{ GetNetsFilterArgs{...} }
type GetNetsFilterArrayInput interface {
	pulumi.Input

	ToGetNetsFilterArrayOutput() GetNetsFilterArrayOutput
	ToGetNetsFilterArrayOutputWithContext(context.Context) GetNetsFilterArrayOutput
}

type GetNetsFilterArray []GetNetsFilterInput

func (GetNetsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetsFilter)(nil)).Elem()
}

func (i GetNetsFilterArray) ToGetNetsFilterArrayOutput() GetNetsFilterArrayOutput {
	return i.ToGetNetsFilterArrayOutputWithContext(context.Background())
}

func (i GetNetsFilterArray) ToGetNetsFilterArrayOutputWithContext(ctx context.Context) GetNetsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetsFilterArrayOutput)
}

type GetNetsFilterOutput struct{ *pulumi.OutputState }

func (GetNetsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetsFilter)(nil)).Elem()
}

func (o GetNetsFilterOutput) ToGetNetsFilterOutput() GetNetsFilterOutput {
	return o
}

func (o GetNetsFilterOutput) ToGetNetsFilterOutputWithContext(ctx context.Context) GetNetsFilterOutput {
	return o
}

func (o GetNetsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetNetsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNetsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetNetsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetNetsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetsFilter)(nil)).Elem()
}

func (o GetNetsFilterArrayOutput) ToGetNetsFilterArrayOutput() GetNetsFilterArrayOutput {
	return o
}

func (o GetNetsFilterArrayOutput) ToGetNetsFilterArrayOutputWithContext(ctx context.Context) GetNetsFilterArrayOutput {
	return o
}

func (o GetNetsFilterArrayOutput) Index(i pulumi.IntInput) GetNetsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetsFilter {
		return vs[0].([]GetNetsFilter)[vs[1].(int)]
	}).(GetNetsFilterOutput)
}

type GetNetsNet struct {
	// The ID of the DHCP options set (or `default` if you want to associate the default one).
	DhcpOptionsSetId string `pulumi:"dhcpOptionsSetId"`
	// The IP range for the Net, in CIDR notation (for example, `10.0.0.0/16`).
	IpRange string `pulumi:"ipRange"`
	// The ID of the Net.
	NetId string `pulumi:"netId"`
	// The state of the Net (`pending` \| `available` \| `deleting`).
	State string `pulumi:"state"`
	// One or more tags associated with the Net.
	Tags []GetNetsNetTag `pulumi:"tags"`
	// The VM tenancy in a Net.
	Tenancy string `pulumi:"tenancy"`
}

// GetNetsNetInput is an input type that accepts GetNetsNetArgs and GetNetsNetOutput values.
// You can construct a concrete instance of `GetNetsNetInput` via:
//
//	GetNetsNetArgs{...}
type GetNetsNetInput interface {
	pulumi.Input

	ToGetNetsNetOutput() GetNetsNetOutput
	ToGetNetsNetOutputWithContext(context.Context) GetNetsNetOutput
}

type GetNetsNetArgs struct {
	// The ID of the DHCP options set (or `default` if you want to associate the default one).
	DhcpOptionsSetId pulumi.StringInput `pulumi:"dhcpOptionsSetId"`
	// The IP range for the Net, in CIDR notation (for example, `10.0.0.0/16`).
	IpRange pulumi.StringInput `pulumi:"ipRange"`
	// The ID of the Net.
	NetId pulumi.StringInput `pulumi:"netId"`
	// The state of the Net (`pending` \| `available` \| `deleting`).
	State pulumi.StringInput `pulumi:"state"`
	// One or more tags associated with the Net.
	Tags GetNetsNetTagArrayInput `pulumi:"tags"`
	// The VM tenancy in a Net.
	Tenancy pulumi.StringInput `pulumi:"tenancy"`
}

func (GetNetsNetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetsNet)(nil)).Elem()
}

func (i GetNetsNetArgs) ToGetNetsNetOutput() GetNetsNetOutput {
	return i.ToGetNetsNetOutputWithContext(context.Background())
}

func (i GetNetsNetArgs) ToGetNetsNetOutputWithContext(ctx context.Context) GetNetsNetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetsNetOutput)
}

// GetNetsNetArrayInput is an input type that accepts GetNetsNetArray and GetNetsNetArrayOutput values.
// You can construct a concrete instance of `GetNetsNetArrayInput` via:
//
//	GetNetsNetArray{ GetNetsNetArgs{...} }
type GetNetsNetArrayInput interface {
	pulumi.Input

	ToGetNetsNetArrayOutput() GetNetsNetArrayOutput
	ToGetNetsNetArrayOutputWithContext(context.Context) GetNetsNetArrayOutput
}

type GetNetsNetArray []GetNetsNetInput

func (GetNetsNetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetsNet)(nil)).Elem()
}

func (i GetNetsNetArray) ToGetNetsNetArrayOutput() GetNetsNetArrayOutput {
	return i.ToGetNetsNetArrayOutputWithContext(context.Background())
}

func (i GetNetsNetArray) ToGetNetsNetArrayOutputWithContext(ctx context.Context) GetNetsNetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetsNetArrayOutput)
}

type GetNetsNetOutput struct{ *pulumi.OutputState }

func (GetNetsNetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetsNet)(nil)).Elem()
}

func (o GetNetsNetOutput) ToGetNetsNetOutput() GetNetsNetOutput {
	return o
}

func (o GetNetsNetOutput) ToGetNetsNetOutputWithContext(ctx context.Context) GetNetsNetOutput {
	return o
}

// The ID of the DHCP options set (or `default` if you want to associate the default one).
func (o GetNetsNetOutput) DhcpOptionsSetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetsNet) string { return v.DhcpOptionsSetId }).(pulumi.StringOutput)
}

// The IP range for the Net, in CIDR notation (for example, `10.0.0.0/16`).
func (o GetNetsNetOutput) IpRange() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetsNet) string { return v.IpRange }).(pulumi.StringOutput)
}

// The ID of the Net.
func (o GetNetsNetOutput) NetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetsNet) string { return v.NetId }).(pulumi.StringOutput)
}

// The state of the Net (`pending` \| `available` \| `deleting`).
func (o GetNetsNetOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetsNet) string { return v.State }).(pulumi.StringOutput)
}

// One or more tags associated with the Net.
func (o GetNetsNetOutput) Tags() GetNetsNetTagArrayOutput {
	return o.ApplyT(func(v GetNetsNet) []GetNetsNetTag { return v.Tags }).(GetNetsNetTagArrayOutput)
}

// The VM tenancy in a Net.
func (o GetNetsNetOutput) Tenancy() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetsNet) string { return v.Tenancy }).(pulumi.StringOutput)
}

type GetNetsNetArrayOutput struct{ *pulumi.OutputState }

func (GetNetsNetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetsNet)(nil)).Elem()
}

func (o GetNetsNetArrayOutput) ToGetNetsNetArrayOutput() GetNetsNetArrayOutput {
	return o
}

func (o GetNetsNetArrayOutput) ToGetNetsNetArrayOutputWithContext(ctx context.Context) GetNetsNetArrayOutput {
	return o
}

func (o GetNetsNetArrayOutput) Index(i pulumi.IntInput) GetNetsNetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetsNet {
		return vs[0].([]GetNetsNet)[vs[1].(int)]
	}).(GetNetsNetOutput)
}

type GetNetsNetTag struct {
	// The key of the tag, with a minimum of 1 character.
	Key string `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value string `pulumi:"value"`
}

// GetNetsNetTagInput is an input type that accepts GetNetsNetTagArgs and GetNetsNetTagOutput values.
// You can construct a concrete instance of `GetNetsNetTagInput` via:
//
//	GetNetsNetTagArgs{...}
type GetNetsNetTagInput interface {
	pulumi.Input

	ToGetNetsNetTagOutput() GetNetsNetTagOutput
	ToGetNetsNetTagOutputWithContext(context.Context) GetNetsNetTagOutput
}

type GetNetsNetTagArgs struct {
	// The key of the tag, with a minimum of 1 character.
	Key pulumi.StringInput `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetNetsNetTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetsNetTag)(nil)).Elem()
}

func (i GetNetsNetTagArgs) ToGetNetsNetTagOutput() GetNetsNetTagOutput {
	return i.ToGetNetsNetTagOutputWithContext(context.Background())
}

func (i GetNetsNetTagArgs) ToGetNetsNetTagOutputWithContext(ctx context.Context) GetNetsNetTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetsNetTagOutput)
}

// GetNetsNetTagArrayInput is an input type that accepts GetNetsNetTagArray and GetNetsNetTagArrayOutput values.
// You can construct a concrete instance of `GetNetsNetTagArrayInput` via:
//
//	GetNetsNetTagArray{ GetNetsNetTagArgs{...} }
type GetNetsNetTagArrayInput interface {
	pulumi.Input

	ToGetNetsNetTagArrayOutput() GetNetsNetTagArrayOutput
	ToGetNetsNetTagArrayOutputWithContext(context.Context) GetNetsNetTagArrayOutput
}

type GetNetsNetTagArray []GetNetsNetTagInput

func (GetNetsNetTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetsNetTag)(nil)).Elem()
}

func (i GetNetsNetTagArray) ToGetNetsNetTagArrayOutput() GetNetsNetTagArrayOutput {
	return i.ToGetNetsNetTagArrayOutputWithContext(context.Background())
}

func (i GetNetsNetTagArray) ToGetNetsNetTagArrayOutputWithContext(ctx context.Context) GetNetsNetTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetsNetTagArrayOutput)
}

type GetNetsNetTagOutput struct{ *pulumi.OutputState }

func (GetNetsNetTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetsNetTag)(nil)).Elem()
}

func (o GetNetsNetTagOutput) ToGetNetsNetTagOutput() GetNetsNetTagOutput {
	return o
}

func (o GetNetsNetTagOutput) ToGetNetsNetTagOutputWithContext(ctx context.Context) GetNetsNetTagOutput {
	return o
}

// The key of the tag, with a minimum of 1 character.
func (o GetNetsNetTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetsNetTag) string { return v.Key }).(pulumi.StringOutput)
}

// The value of the tag, between 0 and 255 characters.
func (o GetNetsNetTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetsNetTag) string { return v.Value }).(pulumi.StringOutput)
}

type GetNetsNetTagArrayOutput struct{ *pulumi.OutputState }

func (GetNetsNetTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetsNetTag)(nil)).Elem()
}

func (o GetNetsNetTagArrayOutput) ToGetNetsNetTagArrayOutput() GetNetsNetTagArrayOutput {
	return o
}

func (o GetNetsNetTagArrayOutput) ToGetNetsNetTagArrayOutputWithContext(ctx context.Context) GetNetsNetTagArrayOutput {
	return o
}

func (o GetNetsNetTagArrayOutput) Index(i pulumi.IntInput) GetNetsNetTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetsNetTag {
		return vs[0].([]GetNetsNetTag)[vs[1].(int)]
	}).(GetNetsNetTagOutput)
}

type GetNicFilter struct {
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// GetNicFilterInput is an input type that accepts GetNicFilterArgs and GetNicFilterOutput values.
// You can construct a concrete instance of `GetNicFilterInput` via:
//
//	GetNicFilterArgs{...}
type GetNicFilterInput interface {
	pulumi.Input

	ToGetNicFilterOutput() GetNicFilterOutput
	ToGetNicFilterOutputWithContext(context.Context) GetNicFilterOutput
}

type GetNicFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetNicFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNicFilter)(nil)).Elem()
}

func (i GetNicFilterArgs) ToGetNicFilterOutput() GetNicFilterOutput {
	return i.ToGetNicFilterOutputWithContext(context.Background())
}

func (i GetNicFilterArgs) ToGetNicFilterOutputWithContext(ctx context.Context) GetNicFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNicFilterOutput)
}

// GetNicFilterArrayInput is an input type that accepts GetNicFilterArray and GetNicFilterArrayOutput values.
// You can construct a concrete instance of `GetNicFilterArrayInput` via:
//
//	GetNicFilterArray{ GetNicFilterArgs{...} }
type GetNicFilterArrayInput interface {
	pulumi.Input

	ToGetNicFilterArrayOutput() GetNicFilterArrayOutput
	ToGetNicFilterArrayOutputWithContext(context.Context) GetNicFilterArrayOutput
}

type GetNicFilterArray []GetNicFilterInput

func (GetNicFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNicFilter)(nil)).Elem()
}

func (i GetNicFilterArray) ToGetNicFilterArrayOutput() GetNicFilterArrayOutput {
	return i.ToGetNicFilterArrayOutputWithContext(context.Background())
}

func (i GetNicFilterArray) ToGetNicFilterArrayOutputWithContext(ctx context.Context) GetNicFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNicFilterArrayOutput)
}

type GetNicFilterOutput struct{ *pulumi.OutputState }

func (GetNicFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNicFilter)(nil)).Elem()
}

func (o GetNicFilterOutput) ToGetNicFilterOutput() GetNicFilterOutput {
	return o
}

func (o GetNicFilterOutput) ToGetNicFilterOutputWithContext(ctx context.Context) GetNicFilterOutput {
	return o
}

func (o GetNicFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetNicFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetNicFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNicFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetNicFilterArrayOutput struct{ *pulumi.OutputState }

func (GetNicFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNicFilter)(nil)).Elem()
}

func (o GetNicFilterArrayOutput) ToGetNicFilterArrayOutput() GetNicFilterArrayOutput {
	return o
}

func (o GetNicFilterArrayOutput) ToGetNicFilterArrayOutputWithContext(ctx context.Context) GetNicFilterArrayOutput {
	return o
}

func (o GetNicFilterArrayOutput) Index(i pulumi.IntInput) GetNicFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNicFilter {
		return vs[0].([]GetNicFilter)[vs[1].(int)]
	}).(GetNicFilterOutput)
}

type GetNicLinkNic struct {
	// If true, the NIC is deleted when the VM is terminated.
	DeleteOnVmDeletion string `pulumi:"deleteOnVmDeletion"`
	// The device index for the NIC attachment (between `1` and `7`, both included).
	DeviceNumber int `pulumi:"deviceNumber"`
	// The ID of the NIC to attach.
	LinkNicId string `pulumi:"linkNicId"`
	// The state of the NIC (`available` \| `attaching` \| `in-use` \| `detaching`).
	State string `pulumi:"state"`
	// The account ID of the owner of the VM.
	VmAccountId string `pulumi:"vmAccountId"`
	// The ID of the VM.
	VmId string `pulumi:"vmId"`
}

// GetNicLinkNicInput is an input type that accepts GetNicLinkNicArgs and GetNicLinkNicOutput values.
// You can construct a concrete instance of `GetNicLinkNicInput` via:
//
//	GetNicLinkNicArgs{...}
type GetNicLinkNicInput interface {
	pulumi.Input

	ToGetNicLinkNicOutput() GetNicLinkNicOutput
	ToGetNicLinkNicOutputWithContext(context.Context) GetNicLinkNicOutput
}

type GetNicLinkNicArgs struct {
	// If true, the NIC is deleted when the VM is terminated.
	DeleteOnVmDeletion pulumi.StringInput `pulumi:"deleteOnVmDeletion"`
	// The device index for the NIC attachment (between `1` and `7`, both included).
	DeviceNumber pulumi.IntInput `pulumi:"deviceNumber"`
	// The ID of the NIC to attach.
	LinkNicId pulumi.StringInput `pulumi:"linkNicId"`
	// The state of the NIC (`available` \| `attaching` \| `in-use` \| `detaching`).
	State pulumi.StringInput `pulumi:"state"`
	// The account ID of the owner of the VM.
	VmAccountId pulumi.StringInput `pulumi:"vmAccountId"`
	// The ID of the VM.
	VmId pulumi.StringInput `pulumi:"vmId"`
}

func (GetNicLinkNicArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNicLinkNic)(nil)).Elem()
}

func (i GetNicLinkNicArgs) ToGetNicLinkNicOutput() GetNicLinkNicOutput {
	return i.ToGetNicLinkNicOutputWithContext(context.Background())
}

func (i GetNicLinkNicArgs) ToGetNicLinkNicOutputWithContext(ctx context.Context) GetNicLinkNicOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNicLinkNicOutput)
}

// GetNicLinkNicArrayInput is an input type that accepts GetNicLinkNicArray and GetNicLinkNicArrayOutput values.
// You can construct a concrete instance of `GetNicLinkNicArrayInput` via:
//
//	GetNicLinkNicArray{ GetNicLinkNicArgs{...} }
type GetNicLinkNicArrayInput interface {
	pulumi.Input

	ToGetNicLinkNicArrayOutput() GetNicLinkNicArrayOutput
	ToGetNicLinkNicArrayOutputWithContext(context.Context) GetNicLinkNicArrayOutput
}

type GetNicLinkNicArray []GetNicLinkNicInput

func (GetNicLinkNicArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNicLinkNic)(nil)).Elem()
}

func (i GetNicLinkNicArray) ToGetNicLinkNicArrayOutput() GetNicLinkNicArrayOutput {
	return i.ToGetNicLinkNicArrayOutputWithContext(context.Background())
}

func (i GetNicLinkNicArray) ToGetNicLinkNicArrayOutputWithContext(ctx context.Context) GetNicLinkNicArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNicLinkNicArrayOutput)
}

type GetNicLinkNicOutput struct{ *pulumi.OutputState }

func (GetNicLinkNicOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNicLinkNic)(nil)).Elem()
}

func (o GetNicLinkNicOutput) ToGetNicLinkNicOutput() GetNicLinkNicOutput {
	return o
}

func (o GetNicLinkNicOutput) ToGetNicLinkNicOutputWithContext(ctx context.Context) GetNicLinkNicOutput {
	return o
}

// If true, the NIC is deleted when the VM is terminated.
func (o GetNicLinkNicOutput) DeleteOnVmDeletion() pulumi.StringOutput {
	return o.ApplyT(func(v GetNicLinkNic) string { return v.DeleteOnVmDeletion }).(pulumi.StringOutput)
}

// The device index for the NIC attachment (between `1` and `7`, both included).
func (o GetNicLinkNicOutput) DeviceNumber() pulumi.IntOutput {
	return o.ApplyT(func(v GetNicLinkNic) int { return v.DeviceNumber }).(pulumi.IntOutput)
}

// The ID of the NIC to attach.
func (o GetNicLinkNicOutput) LinkNicId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNicLinkNic) string { return v.LinkNicId }).(pulumi.StringOutput)
}

// The state of the NIC (`available` \| `attaching` \| `in-use` \| `detaching`).
func (o GetNicLinkNicOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetNicLinkNic) string { return v.State }).(pulumi.StringOutput)
}

// The account ID of the owner of the VM.
func (o GetNicLinkNicOutput) VmAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNicLinkNic) string { return v.VmAccountId }).(pulumi.StringOutput)
}

// The ID of the VM.
func (o GetNicLinkNicOutput) VmId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNicLinkNic) string { return v.VmId }).(pulumi.StringOutput)
}

type GetNicLinkNicArrayOutput struct{ *pulumi.OutputState }

func (GetNicLinkNicArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNicLinkNic)(nil)).Elem()
}

func (o GetNicLinkNicArrayOutput) ToGetNicLinkNicArrayOutput() GetNicLinkNicArrayOutput {
	return o
}

func (o GetNicLinkNicArrayOutput) ToGetNicLinkNicArrayOutputWithContext(ctx context.Context) GetNicLinkNicArrayOutput {
	return o
}

func (o GetNicLinkNicArrayOutput) Index(i pulumi.IntInput) GetNicLinkNicOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNicLinkNic {
		return vs[0].([]GetNicLinkNic)[vs[1].(int)]
	}).(GetNicLinkNicOutput)
}

type GetNicLinkPublicIp struct {
	// (Required in a Net) The ID representing the association of the public IP with the VM or the NIC.
	LinkPublicIpId string `pulumi:"linkPublicIpId"`
	// The name of the public DNS.
	PublicDnsName string `pulumi:"publicDnsName"`
	// The public IP associated with the NIC.
	PublicIp string `pulumi:"publicIp"`
	// The account ID of the owner of the public IP.
	PublicIpAccountId string `pulumi:"publicIpAccountId"`
	// The allocation ID of the public IP.
	PublicIpId string `pulumi:"publicIpId"`
}

// GetNicLinkPublicIpInput is an input type that accepts GetNicLinkPublicIpArgs and GetNicLinkPublicIpOutput values.
// You can construct a concrete instance of `GetNicLinkPublicIpInput` via:
//
//	GetNicLinkPublicIpArgs{...}
type GetNicLinkPublicIpInput interface {
	pulumi.Input

	ToGetNicLinkPublicIpOutput() GetNicLinkPublicIpOutput
	ToGetNicLinkPublicIpOutputWithContext(context.Context) GetNicLinkPublicIpOutput
}

type GetNicLinkPublicIpArgs struct {
	// (Required in a Net) The ID representing the association of the public IP with the VM or the NIC.
	LinkPublicIpId pulumi.StringInput `pulumi:"linkPublicIpId"`
	// The name of the public DNS.
	PublicDnsName pulumi.StringInput `pulumi:"publicDnsName"`
	// The public IP associated with the NIC.
	PublicIp pulumi.StringInput `pulumi:"publicIp"`
	// The account ID of the owner of the public IP.
	PublicIpAccountId pulumi.StringInput `pulumi:"publicIpAccountId"`
	// The allocation ID of the public IP.
	PublicIpId pulumi.StringInput `pulumi:"publicIpId"`
}

func (GetNicLinkPublicIpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNicLinkPublicIp)(nil)).Elem()
}

func (i GetNicLinkPublicIpArgs) ToGetNicLinkPublicIpOutput() GetNicLinkPublicIpOutput {
	return i.ToGetNicLinkPublicIpOutputWithContext(context.Background())
}

func (i GetNicLinkPublicIpArgs) ToGetNicLinkPublicIpOutputWithContext(ctx context.Context) GetNicLinkPublicIpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNicLinkPublicIpOutput)
}

// GetNicLinkPublicIpArrayInput is an input type that accepts GetNicLinkPublicIpArray and GetNicLinkPublicIpArrayOutput values.
// You can construct a concrete instance of `GetNicLinkPublicIpArrayInput` via:
//
//	GetNicLinkPublicIpArray{ GetNicLinkPublicIpArgs{...} }
type GetNicLinkPublicIpArrayInput interface {
	pulumi.Input

	ToGetNicLinkPublicIpArrayOutput() GetNicLinkPublicIpArrayOutput
	ToGetNicLinkPublicIpArrayOutputWithContext(context.Context) GetNicLinkPublicIpArrayOutput
}

type GetNicLinkPublicIpArray []GetNicLinkPublicIpInput

func (GetNicLinkPublicIpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNicLinkPublicIp)(nil)).Elem()
}

func (i GetNicLinkPublicIpArray) ToGetNicLinkPublicIpArrayOutput() GetNicLinkPublicIpArrayOutput {
	return i.ToGetNicLinkPublicIpArrayOutputWithContext(context.Background())
}

func (i GetNicLinkPublicIpArray) ToGetNicLinkPublicIpArrayOutputWithContext(ctx context.Context) GetNicLinkPublicIpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNicLinkPublicIpArrayOutput)
}

type GetNicLinkPublicIpOutput struct{ *pulumi.OutputState }

func (GetNicLinkPublicIpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNicLinkPublicIp)(nil)).Elem()
}

func (o GetNicLinkPublicIpOutput) ToGetNicLinkPublicIpOutput() GetNicLinkPublicIpOutput {
	return o
}

func (o GetNicLinkPublicIpOutput) ToGetNicLinkPublicIpOutputWithContext(ctx context.Context) GetNicLinkPublicIpOutput {
	return o
}

// (Required in a Net) The ID representing the association of the public IP with the VM or the NIC.
func (o GetNicLinkPublicIpOutput) LinkPublicIpId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNicLinkPublicIp) string { return v.LinkPublicIpId }).(pulumi.StringOutput)
}

// The name of the public DNS.
func (o GetNicLinkPublicIpOutput) PublicDnsName() pulumi.StringOutput {
	return o.ApplyT(func(v GetNicLinkPublicIp) string { return v.PublicDnsName }).(pulumi.StringOutput)
}

// The public IP associated with the NIC.
func (o GetNicLinkPublicIpOutput) PublicIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetNicLinkPublicIp) string { return v.PublicIp }).(pulumi.StringOutput)
}

// The account ID of the owner of the public IP.
func (o GetNicLinkPublicIpOutput) PublicIpAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNicLinkPublicIp) string { return v.PublicIpAccountId }).(pulumi.StringOutput)
}

// The allocation ID of the public IP.
func (o GetNicLinkPublicIpOutput) PublicIpId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNicLinkPublicIp) string { return v.PublicIpId }).(pulumi.StringOutput)
}

type GetNicLinkPublicIpArrayOutput struct{ *pulumi.OutputState }

func (GetNicLinkPublicIpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNicLinkPublicIp)(nil)).Elem()
}

func (o GetNicLinkPublicIpArrayOutput) ToGetNicLinkPublicIpArrayOutput() GetNicLinkPublicIpArrayOutput {
	return o
}

func (o GetNicLinkPublicIpArrayOutput) ToGetNicLinkPublicIpArrayOutputWithContext(ctx context.Context) GetNicLinkPublicIpArrayOutput {
	return o
}

func (o GetNicLinkPublicIpArrayOutput) Index(i pulumi.IntInput) GetNicLinkPublicIpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNicLinkPublicIp {
		return vs[0].([]GetNicLinkPublicIp)[vs[1].(int)]
	}).(GetNicLinkPublicIpOutput)
}

type GetNicPrivateIpType struct {
	// If true, the IP is the primary private IP of the NIC.
	IsPrimary bool `pulumi:"isPrimary"`
	// Information about the public IP association.
	LinkPublicIps []GetNicPrivateIpLinkPublicIp `pulumi:"linkPublicIps"`
	// The name of the private DNS.
	PrivateDnsName string `pulumi:"privateDnsName"`
	// The private IP of the NIC.
	PrivateIp string `pulumi:"privateIp"`
}

// GetNicPrivateIpTypeInput is an input type that accepts GetNicPrivateIpTypeArgs and GetNicPrivateIpTypeOutput values.
// You can construct a concrete instance of `GetNicPrivateIpTypeInput` via:
//
//	GetNicPrivateIpTypeArgs{...}
type GetNicPrivateIpTypeInput interface {
	pulumi.Input

	ToGetNicPrivateIpTypeOutput() GetNicPrivateIpTypeOutput
	ToGetNicPrivateIpTypeOutputWithContext(context.Context) GetNicPrivateIpTypeOutput
}

type GetNicPrivateIpTypeArgs struct {
	// If true, the IP is the primary private IP of the NIC.
	IsPrimary pulumi.BoolInput `pulumi:"isPrimary"`
	// Information about the public IP association.
	LinkPublicIps GetNicPrivateIpLinkPublicIpArrayInput `pulumi:"linkPublicIps"`
	// The name of the private DNS.
	PrivateDnsName pulumi.StringInput `pulumi:"privateDnsName"`
	// The private IP of the NIC.
	PrivateIp pulumi.StringInput `pulumi:"privateIp"`
}

func (GetNicPrivateIpTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNicPrivateIpType)(nil)).Elem()
}

func (i GetNicPrivateIpTypeArgs) ToGetNicPrivateIpTypeOutput() GetNicPrivateIpTypeOutput {
	return i.ToGetNicPrivateIpTypeOutputWithContext(context.Background())
}

func (i GetNicPrivateIpTypeArgs) ToGetNicPrivateIpTypeOutputWithContext(ctx context.Context) GetNicPrivateIpTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNicPrivateIpTypeOutput)
}

// GetNicPrivateIpTypeArrayInput is an input type that accepts GetNicPrivateIpTypeArray and GetNicPrivateIpTypeArrayOutput values.
// You can construct a concrete instance of `GetNicPrivateIpTypeArrayInput` via:
//
//	GetNicPrivateIpTypeArray{ GetNicPrivateIpTypeArgs{...} }
type GetNicPrivateIpTypeArrayInput interface {
	pulumi.Input

	ToGetNicPrivateIpTypeArrayOutput() GetNicPrivateIpTypeArrayOutput
	ToGetNicPrivateIpTypeArrayOutputWithContext(context.Context) GetNicPrivateIpTypeArrayOutput
}

type GetNicPrivateIpTypeArray []GetNicPrivateIpTypeInput

func (GetNicPrivateIpTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNicPrivateIpType)(nil)).Elem()
}

func (i GetNicPrivateIpTypeArray) ToGetNicPrivateIpTypeArrayOutput() GetNicPrivateIpTypeArrayOutput {
	return i.ToGetNicPrivateIpTypeArrayOutputWithContext(context.Background())
}

func (i GetNicPrivateIpTypeArray) ToGetNicPrivateIpTypeArrayOutputWithContext(ctx context.Context) GetNicPrivateIpTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNicPrivateIpTypeArrayOutput)
}

type GetNicPrivateIpTypeOutput struct{ *pulumi.OutputState }

func (GetNicPrivateIpTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNicPrivateIpType)(nil)).Elem()
}

func (o GetNicPrivateIpTypeOutput) ToGetNicPrivateIpTypeOutput() GetNicPrivateIpTypeOutput {
	return o
}

func (o GetNicPrivateIpTypeOutput) ToGetNicPrivateIpTypeOutputWithContext(ctx context.Context) GetNicPrivateIpTypeOutput {
	return o
}

// If true, the IP is the primary private IP of the NIC.
func (o GetNicPrivateIpTypeOutput) IsPrimary() pulumi.BoolOutput {
	return o.ApplyT(func(v GetNicPrivateIpType) bool { return v.IsPrimary }).(pulumi.BoolOutput)
}

// Information about the public IP association.
func (o GetNicPrivateIpTypeOutput) LinkPublicIps() GetNicPrivateIpLinkPublicIpArrayOutput {
	return o.ApplyT(func(v GetNicPrivateIpType) []GetNicPrivateIpLinkPublicIp { return v.LinkPublicIps }).(GetNicPrivateIpLinkPublicIpArrayOutput)
}

// The name of the private DNS.
func (o GetNicPrivateIpTypeOutput) PrivateDnsName() pulumi.StringOutput {
	return o.ApplyT(func(v GetNicPrivateIpType) string { return v.PrivateDnsName }).(pulumi.StringOutput)
}

// The private IP of the NIC.
func (o GetNicPrivateIpTypeOutput) PrivateIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetNicPrivateIpType) string { return v.PrivateIp }).(pulumi.StringOutput)
}

type GetNicPrivateIpTypeArrayOutput struct{ *pulumi.OutputState }

func (GetNicPrivateIpTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNicPrivateIpType)(nil)).Elem()
}

func (o GetNicPrivateIpTypeArrayOutput) ToGetNicPrivateIpTypeArrayOutput() GetNicPrivateIpTypeArrayOutput {
	return o
}

func (o GetNicPrivateIpTypeArrayOutput) ToGetNicPrivateIpTypeArrayOutputWithContext(ctx context.Context) GetNicPrivateIpTypeArrayOutput {
	return o
}

func (o GetNicPrivateIpTypeArrayOutput) Index(i pulumi.IntInput) GetNicPrivateIpTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNicPrivateIpType {
		return vs[0].([]GetNicPrivateIpType)[vs[1].(int)]
	}).(GetNicPrivateIpTypeOutput)
}

type GetNicPrivateIpLinkPublicIp struct {
	// (Required in a Net) The ID representing the association of the public IP with the VM or the NIC.
	LinkPublicIpId string `pulumi:"linkPublicIpId"`
	// The name of the public DNS.
	PublicDnsName string `pulumi:"publicDnsName"`
	// The public IP associated with the NIC.
	PublicIp string `pulumi:"publicIp"`
	// The account ID of the owner of the public IP.
	PublicIpAccountId string `pulumi:"publicIpAccountId"`
	// The allocation ID of the public IP.
	PublicIpId string `pulumi:"publicIpId"`
}

// GetNicPrivateIpLinkPublicIpInput is an input type that accepts GetNicPrivateIpLinkPublicIpArgs and GetNicPrivateIpLinkPublicIpOutput values.
// You can construct a concrete instance of `GetNicPrivateIpLinkPublicIpInput` via:
//
//	GetNicPrivateIpLinkPublicIpArgs{...}
type GetNicPrivateIpLinkPublicIpInput interface {
	pulumi.Input

	ToGetNicPrivateIpLinkPublicIpOutput() GetNicPrivateIpLinkPublicIpOutput
	ToGetNicPrivateIpLinkPublicIpOutputWithContext(context.Context) GetNicPrivateIpLinkPublicIpOutput
}

type GetNicPrivateIpLinkPublicIpArgs struct {
	// (Required in a Net) The ID representing the association of the public IP with the VM or the NIC.
	LinkPublicIpId pulumi.StringInput `pulumi:"linkPublicIpId"`
	// The name of the public DNS.
	PublicDnsName pulumi.StringInput `pulumi:"publicDnsName"`
	// The public IP associated with the NIC.
	PublicIp pulumi.StringInput `pulumi:"publicIp"`
	// The account ID of the owner of the public IP.
	PublicIpAccountId pulumi.StringInput `pulumi:"publicIpAccountId"`
	// The allocation ID of the public IP.
	PublicIpId pulumi.StringInput `pulumi:"publicIpId"`
}

func (GetNicPrivateIpLinkPublicIpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNicPrivateIpLinkPublicIp)(nil)).Elem()
}

func (i GetNicPrivateIpLinkPublicIpArgs) ToGetNicPrivateIpLinkPublicIpOutput() GetNicPrivateIpLinkPublicIpOutput {
	return i.ToGetNicPrivateIpLinkPublicIpOutputWithContext(context.Background())
}

func (i GetNicPrivateIpLinkPublicIpArgs) ToGetNicPrivateIpLinkPublicIpOutputWithContext(ctx context.Context) GetNicPrivateIpLinkPublicIpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNicPrivateIpLinkPublicIpOutput)
}

// GetNicPrivateIpLinkPublicIpArrayInput is an input type that accepts GetNicPrivateIpLinkPublicIpArray and GetNicPrivateIpLinkPublicIpArrayOutput values.
// You can construct a concrete instance of `GetNicPrivateIpLinkPublicIpArrayInput` via:
//
//	GetNicPrivateIpLinkPublicIpArray{ GetNicPrivateIpLinkPublicIpArgs{...} }
type GetNicPrivateIpLinkPublicIpArrayInput interface {
	pulumi.Input

	ToGetNicPrivateIpLinkPublicIpArrayOutput() GetNicPrivateIpLinkPublicIpArrayOutput
	ToGetNicPrivateIpLinkPublicIpArrayOutputWithContext(context.Context) GetNicPrivateIpLinkPublicIpArrayOutput
}

type GetNicPrivateIpLinkPublicIpArray []GetNicPrivateIpLinkPublicIpInput

func (GetNicPrivateIpLinkPublicIpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNicPrivateIpLinkPublicIp)(nil)).Elem()
}

func (i GetNicPrivateIpLinkPublicIpArray) ToGetNicPrivateIpLinkPublicIpArrayOutput() GetNicPrivateIpLinkPublicIpArrayOutput {
	return i.ToGetNicPrivateIpLinkPublicIpArrayOutputWithContext(context.Background())
}

func (i GetNicPrivateIpLinkPublicIpArray) ToGetNicPrivateIpLinkPublicIpArrayOutputWithContext(ctx context.Context) GetNicPrivateIpLinkPublicIpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNicPrivateIpLinkPublicIpArrayOutput)
}

type GetNicPrivateIpLinkPublicIpOutput struct{ *pulumi.OutputState }

func (GetNicPrivateIpLinkPublicIpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNicPrivateIpLinkPublicIp)(nil)).Elem()
}

func (o GetNicPrivateIpLinkPublicIpOutput) ToGetNicPrivateIpLinkPublicIpOutput() GetNicPrivateIpLinkPublicIpOutput {
	return o
}

func (o GetNicPrivateIpLinkPublicIpOutput) ToGetNicPrivateIpLinkPublicIpOutputWithContext(ctx context.Context) GetNicPrivateIpLinkPublicIpOutput {
	return o
}

// (Required in a Net) The ID representing the association of the public IP with the VM or the NIC.
func (o GetNicPrivateIpLinkPublicIpOutput) LinkPublicIpId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNicPrivateIpLinkPublicIp) string { return v.LinkPublicIpId }).(pulumi.StringOutput)
}

// The name of the public DNS.
func (o GetNicPrivateIpLinkPublicIpOutput) PublicDnsName() pulumi.StringOutput {
	return o.ApplyT(func(v GetNicPrivateIpLinkPublicIp) string { return v.PublicDnsName }).(pulumi.StringOutput)
}

// The public IP associated with the NIC.
func (o GetNicPrivateIpLinkPublicIpOutput) PublicIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetNicPrivateIpLinkPublicIp) string { return v.PublicIp }).(pulumi.StringOutput)
}

// The account ID of the owner of the public IP.
func (o GetNicPrivateIpLinkPublicIpOutput) PublicIpAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNicPrivateIpLinkPublicIp) string { return v.PublicIpAccountId }).(pulumi.StringOutput)
}

// The allocation ID of the public IP.
func (o GetNicPrivateIpLinkPublicIpOutput) PublicIpId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNicPrivateIpLinkPublicIp) string { return v.PublicIpId }).(pulumi.StringOutput)
}

type GetNicPrivateIpLinkPublicIpArrayOutput struct{ *pulumi.OutputState }

func (GetNicPrivateIpLinkPublicIpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNicPrivateIpLinkPublicIp)(nil)).Elem()
}

func (o GetNicPrivateIpLinkPublicIpArrayOutput) ToGetNicPrivateIpLinkPublicIpArrayOutput() GetNicPrivateIpLinkPublicIpArrayOutput {
	return o
}

func (o GetNicPrivateIpLinkPublicIpArrayOutput) ToGetNicPrivateIpLinkPublicIpArrayOutputWithContext(ctx context.Context) GetNicPrivateIpLinkPublicIpArrayOutput {
	return o
}

func (o GetNicPrivateIpLinkPublicIpArrayOutput) Index(i pulumi.IntInput) GetNicPrivateIpLinkPublicIpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNicPrivateIpLinkPublicIp {
		return vs[0].([]GetNicPrivateIpLinkPublicIp)[vs[1].(int)]
	}).(GetNicPrivateIpLinkPublicIpOutput)
}

type GetNicSecurityGroup struct {
	// The ID of the security group.
	SecurityGroupId string `pulumi:"securityGroupId"`
	// The name of the security group.
	SecurityGroupName string `pulumi:"securityGroupName"`
}

// GetNicSecurityGroupInput is an input type that accepts GetNicSecurityGroupArgs and GetNicSecurityGroupOutput values.
// You can construct a concrete instance of `GetNicSecurityGroupInput` via:
//
//	GetNicSecurityGroupArgs{...}
type GetNicSecurityGroupInput interface {
	pulumi.Input

	ToGetNicSecurityGroupOutput() GetNicSecurityGroupOutput
	ToGetNicSecurityGroupOutputWithContext(context.Context) GetNicSecurityGroupOutput
}

type GetNicSecurityGroupArgs struct {
	// The ID of the security group.
	SecurityGroupId pulumi.StringInput `pulumi:"securityGroupId"`
	// The name of the security group.
	SecurityGroupName pulumi.StringInput `pulumi:"securityGroupName"`
}

func (GetNicSecurityGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNicSecurityGroup)(nil)).Elem()
}

func (i GetNicSecurityGroupArgs) ToGetNicSecurityGroupOutput() GetNicSecurityGroupOutput {
	return i.ToGetNicSecurityGroupOutputWithContext(context.Background())
}

func (i GetNicSecurityGroupArgs) ToGetNicSecurityGroupOutputWithContext(ctx context.Context) GetNicSecurityGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNicSecurityGroupOutput)
}

// GetNicSecurityGroupArrayInput is an input type that accepts GetNicSecurityGroupArray and GetNicSecurityGroupArrayOutput values.
// You can construct a concrete instance of `GetNicSecurityGroupArrayInput` via:
//
//	GetNicSecurityGroupArray{ GetNicSecurityGroupArgs{...} }
type GetNicSecurityGroupArrayInput interface {
	pulumi.Input

	ToGetNicSecurityGroupArrayOutput() GetNicSecurityGroupArrayOutput
	ToGetNicSecurityGroupArrayOutputWithContext(context.Context) GetNicSecurityGroupArrayOutput
}

type GetNicSecurityGroupArray []GetNicSecurityGroupInput

func (GetNicSecurityGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNicSecurityGroup)(nil)).Elem()
}

func (i GetNicSecurityGroupArray) ToGetNicSecurityGroupArrayOutput() GetNicSecurityGroupArrayOutput {
	return i.ToGetNicSecurityGroupArrayOutputWithContext(context.Background())
}

func (i GetNicSecurityGroupArray) ToGetNicSecurityGroupArrayOutputWithContext(ctx context.Context) GetNicSecurityGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNicSecurityGroupArrayOutput)
}

type GetNicSecurityGroupOutput struct{ *pulumi.OutputState }

func (GetNicSecurityGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNicSecurityGroup)(nil)).Elem()
}

func (o GetNicSecurityGroupOutput) ToGetNicSecurityGroupOutput() GetNicSecurityGroupOutput {
	return o
}

func (o GetNicSecurityGroupOutput) ToGetNicSecurityGroupOutputWithContext(ctx context.Context) GetNicSecurityGroupOutput {
	return o
}

// The ID of the security group.
func (o GetNicSecurityGroupOutput) SecurityGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNicSecurityGroup) string { return v.SecurityGroupId }).(pulumi.StringOutput)
}

// The name of the security group.
func (o GetNicSecurityGroupOutput) SecurityGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v GetNicSecurityGroup) string { return v.SecurityGroupName }).(pulumi.StringOutput)
}

type GetNicSecurityGroupArrayOutput struct{ *pulumi.OutputState }

func (GetNicSecurityGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNicSecurityGroup)(nil)).Elem()
}

func (o GetNicSecurityGroupArrayOutput) ToGetNicSecurityGroupArrayOutput() GetNicSecurityGroupArrayOutput {
	return o
}

func (o GetNicSecurityGroupArrayOutput) ToGetNicSecurityGroupArrayOutputWithContext(ctx context.Context) GetNicSecurityGroupArrayOutput {
	return o
}

func (o GetNicSecurityGroupArrayOutput) Index(i pulumi.IntInput) GetNicSecurityGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNicSecurityGroup {
		return vs[0].([]GetNicSecurityGroup)[vs[1].(int)]
	}).(GetNicSecurityGroupOutput)
}

type GetNicTag struct {
	// The key of the tag, with a minimum of 1 character.
	Key string `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value string `pulumi:"value"`
}

// GetNicTagInput is an input type that accepts GetNicTagArgs and GetNicTagOutput values.
// You can construct a concrete instance of `GetNicTagInput` via:
//
//	GetNicTagArgs{...}
type GetNicTagInput interface {
	pulumi.Input

	ToGetNicTagOutput() GetNicTagOutput
	ToGetNicTagOutputWithContext(context.Context) GetNicTagOutput
}

type GetNicTagArgs struct {
	// The key of the tag, with a minimum of 1 character.
	Key pulumi.StringInput `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetNicTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNicTag)(nil)).Elem()
}

func (i GetNicTagArgs) ToGetNicTagOutput() GetNicTagOutput {
	return i.ToGetNicTagOutputWithContext(context.Background())
}

func (i GetNicTagArgs) ToGetNicTagOutputWithContext(ctx context.Context) GetNicTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNicTagOutput)
}

// GetNicTagArrayInput is an input type that accepts GetNicTagArray and GetNicTagArrayOutput values.
// You can construct a concrete instance of `GetNicTagArrayInput` via:
//
//	GetNicTagArray{ GetNicTagArgs{...} }
type GetNicTagArrayInput interface {
	pulumi.Input

	ToGetNicTagArrayOutput() GetNicTagArrayOutput
	ToGetNicTagArrayOutputWithContext(context.Context) GetNicTagArrayOutput
}

type GetNicTagArray []GetNicTagInput

func (GetNicTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNicTag)(nil)).Elem()
}

func (i GetNicTagArray) ToGetNicTagArrayOutput() GetNicTagArrayOutput {
	return i.ToGetNicTagArrayOutputWithContext(context.Background())
}

func (i GetNicTagArray) ToGetNicTagArrayOutputWithContext(ctx context.Context) GetNicTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNicTagArrayOutput)
}

type GetNicTagOutput struct{ *pulumi.OutputState }

func (GetNicTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNicTag)(nil)).Elem()
}

func (o GetNicTagOutput) ToGetNicTagOutput() GetNicTagOutput {
	return o
}

func (o GetNicTagOutput) ToGetNicTagOutputWithContext(ctx context.Context) GetNicTagOutput {
	return o
}

// The key of the tag, with a minimum of 1 character.
func (o GetNicTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetNicTag) string { return v.Key }).(pulumi.StringOutput)
}

// The value of the tag, between 0 and 255 characters.
func (o GetNicTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetNicTag) string { return v.Value }).(pulumi.StringOutput)
}

type GetNicTagArrayOutput struct{ *pulumi.OutputState }

func (GetNicTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNicTag)(nil)).Elem()
}

func (o GetNicTagArrayOutput) ToGetNicTagArrayOutput() GetNicTagArrayOutput {
	return o
}

func (o GetNicTagArrayOutput) ToGetNicTagArrayOutputWithContext(ctx context.Context) GetNicTagArrayOutput {
	return o
}

func (o GetNicTagArrayOutput) Index(i pulumi.IntInput) GetNicTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNicTag {
		return vs[0].([]GetNicTag)[vs[1].(int)]
	}).(GetNicTagOutput)
}

type GetNicsFilter struct {
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// GetNicsFilterInput is an input type that accepts GetNicsFilterArgs and GetNicsFilterOutput values.
// You can construct a concrete instance of `GetNicsFilterInput` via:
//
//	GetNicsFilterArgs{...}
type GetNicsFilterInput interface {
	pulumi.Input

	ToGetNicsFilterOutput() GetNicsFilterOutput
	ToGetNicsFilterOutputWithContext(context.Context) GetNicsFilterOutput
}

type GetNicsFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetNicsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNicsFilter)(nil)).Elem()
}

func (i GetNicsFilterArgs) ToGetNicsFilterOutput() GetNicsFilterOutput {
	return i.ToGetNicsFilterOutputWithContext(context.Background())
}

func (i GetNicsFilterArgs) ToGetNicsFilterOutputWithContext(ctx context.Context) GetNicsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNicsFilterOutput)
}

// GetNicsFilterArrayInput is an input type that accepts GetNicsFilterArray and GetNicsFilterArrayOutput values.
// You can construct a concrete instance of `GetNicsFilterArrayInput` via:
//
//	GetNicsFilterArray{ GetNicsFilterArgs{...} }
type GetNicsFilterArrayInput interface {
	pulumi.Input

	ToGetNicsFilterArrayOutput() GetNicsFilterArrayOutput
	ToGetNicsFilterArrayOutputWithContext(context.Context) GetNicsFilterArrayOutput
}

type GetNicsFilterArray []GetNicsFilterInput

func (GetNicsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNicsFilter)(nil)).Elem()
}

func (i GetNicsFilterArray) ToGetNicsFilterArrayOutput() GetNicsFilterArrayOutput {
	return i.ToGetNicsFilterArrayOutputWithContext(context.Background())
}

func (i GetNicsFilterArray) ToGetNicsFilterArrayOutputWithContext(ctx context.Context) GetNicsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNicsFilterArrayOutput)
}

type GetNicsFilterOutput struct{ *pulumi.OutputState }

func (GetNicsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNicsFilter)(nil)).Elem()
}

func (o GetNicsFilterOutput) ToGetNicsFilterOutput() GetNicsFilterOutput {
	return o
}

func (o GetNicsFilterOutput) ToGetNicsFilterOutputWithContext(ctx context.Context) GetNicsFilterOutput {
	return o
}

func (o GetNicsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetNicsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetNicsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNicsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetNicsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetNicsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNicsFilter)(nil)).Elem()
}

func (o GetNicsFilterArrayOutput) ToGetNicsFilterArrayOutput() GetNicsFilterArrayOutput {
	return o
}

func (o GetNicsFilterArrayOutput) ToGetNicsFilterArrayOutputWithContext(ctx context.Context) GetNicsFilterArrayOutput {
	return o
}

func (o GetNicsFilterArrayOutput) Index(i pulumi.IntInput) GetNicsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNicsFilter {
		return vs[0].([]GetNicsFilter)[vs[1].(int)]
	}).(GetNicsFilterOutput)
}

type GetNicsNic struct {
	// The account ID of the owner of the NIC.
	AccountId string `pulumi:"accountId"`
	// The description of the NIC.
	Description string `pulumi:"description"`
	// (Net only) If true, the source/destination check is enabled. If false, it is disabled.
	IsSourceDestChecked bool `pulumi:"isSourceDestChecked"`
	// Information about the NIC attachment.
	LinkNics []GetNicsNicLinkNic `pulumi:"linkNics"`
	// Information about the public IP association.
	LinkPublicIps []GetNicsNicLinkPublicIp `pulumi:"linkPublicIps"`
	// The Media Access Control (MAC) address of the NIC.
	MacAddress string `pulumi:"macAddress"`
	// The ID of the Net for the NIC.
	NetId string `pulumi:"netId"`
	// The ID of the NIC.
	NicId string `pulumi:"nicId"`
	// The name of the private DNS.
	PrivateDnsName string `pulumi:"privateDnsName"`
	// The private IPs of the NIC.
	PrivateIps []GetNicsNicPrivateIp `pulumi:"privateIps"`
	// One or more IDs of security groups for the NIC.
	SecurityGroups []GetNicsNicSecurityGroup `pulumi:"securityGroups"`
	// The state of the NIC (`available` \| `attaching` \| `in-use` \| `detaching`).
	State string `pulumi:"state"`
	// The ID of the Subnet.
	SubnetId string `pulumi:"subnetId"`
	// The Subregion in which the NIC is located.
	SubregionName string `pulumi:"subregionName"`
	// One or more tags associated with the NIC.
	Tags []GetNicsNicTag `pulumi:"tags"`
}

// GetNicsNicInput is an input type that accepts GetNicsNicArgs and GetNicsNicOutput values.
// You can construct a concrete instance of `GetNicsNicInput` via:
//
//	GetNicsNicArgs{...}
type GetNicsNicInput interface {
	pulumi.Input

	ToGetNicsNicOutput() GetNicsNicOutput
	ToGetNicsNicOutputWithContext(context.Context) GetNicsNicOutput
}

type GetNicsNicArgs struct {
	// The account ID of the owner of the NIC.
	AccountId pulumi.StringInput `pulumi:"accountId"`
	// The description of the NIC.
	Description pulumi.StringInput `pulumi:"description"`
	// (Net only) If true, the source/destination check is enabled. If false, it is disabled.
	IsSourceDestChecked pulumi.BoolInput `pulumi:"isSourceDestChecked"`
	// Information about the NIC attachment.
	LinkNics GetNicsNicLinkNicArrayInput `pulumi:"linkNics"`
	// Information about the public IP association.
	LinkPublicIps GetNicsNicLinkPublicIpArrayInput `pulumi:"linkPublicIps"`
	// The Media Access Control (MAC) address of the NIC.
	MacAddress pulumi.StringInput `pulumi:"macAddress"`
	// The ID of the Net for the NIC.
	NetId pulumi.StringInput `pulumi:"netId"`
	// The ID of the NIC.
	NicId pulumi.StringInput `pulumi:"nicId"`
	// The name of the private DNS.
	PrivateDnsName pulumi.StringInput `pulumi:"privateDnsName"`
	// The private IPs of the NIC.
	PrivateIps GetNicsNicPrivateIpArrayInput `pulumi:"privateIps"`
	// One or more IDs of security groups for the NIC.
	SecurityGroups GetNicsNicSecurityGroupArrayInput `pulumi:"securityGroups"`
	// The state of the NIC (`available` \| `attaching` \| `in-use` \| `detaching`).
	State pulumi.StringInput `pulumi:"state"`
	// The ID of the Subnet.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
	// The Subregion in which the NIC is located.
	SubregionName pulumi.StringInput `pulumi:"subregionName"`
	// One or more tags associated with the NIC.
	Tags GetNicsNicTagArrayInput `pulumi:"tags"`
}

func (GetNicsNicArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNicsNic)(nil)).Elem()
}

func (i GetNicsNicArgs) ToGetNicsNicOutput() GetNicsNicOutput {
	return i.ToGetNicsNicOutputWithContext(context.Background())
}

func (i GetNicsNicArgs) ToGetNicsNicOutputWithContext(ctx context.Context) GetNicsNicOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNicsNicOutput)
}

// GetNicsNicArrayInput is an input type that accepts GetNicsNicArray and GetNicsNicArrayOutput values.
// You can construct a concrete instance of `GetNicsNicArrayInput` via:
//
//	GetNicsNicArray{ GetNicsNicArgs{...} }
type GetNicsNicArrayInput interface {
	pulumi.Input

	ToGetNicsNicArrayOutput() GetNicsNicArrayOutput
	ToGetNicsNicArrayOutputWithContext(context.Context) GetNicsNicArrayOutput
}

type GetNicsNicArray []GetNicsNicInput

func (GetNicsNicArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNicsNic)(nil)).Elem()
}

func (i GetNicsNicArray) ToGetNicsNicArrayOutput() GetNicsNicArrayOutput {
	return i.ToGetNicsNicArrayOutputWithContext(context.Background())
}

func (i GetNicsNicArray) ToGetNicsNicArrayOutputWithContext(ctx context.Context) GetNicsNicArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNicsNicArrayOutput)
}

type GetNicsNicOutput struct{ *pulumi.OutputState }

func (GetNicsNicOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNicsNic)(nil)).Elem()
}

func (o GetNicsNicOutput) ToGetNicsNicOutput() GetNicsNicOutput {
	return o
}

func (o GetNicsNicOutput) ToGetNicsNicOutputWithContext(ctx context.Context) GetNicsNicOutput {
	return o
}

// The account ID of the owner of the NIC.
func (o GetNicsNicOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNicsNic) string { return v.AccountId }).(pulumi.StringOutput)
}

// The description of the NIC.
func (o GetNicsNicOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetNicsNic) string { return v.Description }).(pulumi.StringOutput)
}

// (Net only) If true, the source/destination check is enabled. If false, it is disabled.
func (o GetNicsNicOutput) IsSourceDestChecked() pulumi.BoolOutput {
	return o.ApplyT(func(v GetNicsNic) bool { return v.IsSourceDestChecked }).(pulumi.BoolOutput)
}

// Information about the NIC attachment.
func (o GetNicsNicOutput) LinkNics() GetNicsNicLinkNicArrayOutput {
	return o.ApplyT(func(v GetNicsNic) []GetNicsNicLinkNic { return v.LinkNics }).(GetNicsNicLinkNicArrayOutput)
}

// Information about the public IP association.
func (o GetNicsNicOutput) LinkPublicIps() GetNicsNicLinkPublicIpArrayOutput {
	return o.ApplyT(func(v GetNicsNic) []GetNicsNicLinkPublicIp { return v.LinkPublicIps }).(GetNicsNicLinkPublicIpArrayOutput)
}

// The Media Access Control (MAC) address of the NIC.
func (o GetNicsNicOutput) MacAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetNicsNic) string { return v.MacAddress }).(pulumi.StringOutput)
}

// The ID of the Net for the NIC.
func (o GetNicsNicOutput) NetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNicsNic) string { return v.NetId }).(pulumi.StringOutput)
}

// The ID of the NIC.
func (o GetNicsNicOutput) NicId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNicsNic) string { return v.NicId }).(pulumi.StringOutput)
}

// The name of the private DNS.
func (o GetNicsNicOutput) PrivateDnsName() pulumi.StringOutput {
	return o.ApplyT(func(v GetNicsNic) string { return v.PrivateDnsName }).(pulumi.StringOutput)
}

// The private IPs of the NIC.
func (o GetNicsNicOutput) PrivateIps() GetNicsNicPrivateIpArrayOutput {
	return o.ApplyT(func(v GetNicsNic) []GetNicsNicPrivateIp { return v.PrivateIps }).(GetNicsNicPrivateIpArrayOutput)
}

// One or more IDs of security groups for the NIC.
func (o GetNicsNicOutput) SecurityGroups() GetNicsNicSecurityGroupArrayOutput {
	return o.ApplyT(func(v GetNicsNic) []GetNicsNicSecurityGroup { return v.SecurityGroups }).(GetNicsNicSecurityGroupArrayOutput)
}

// The state of the NIC (`available` \| `attaching` \| `in-use` \| `detaching`).
func (o GetNicsNicOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetNicsNic) string { return v.State }).(pulumi.StringOutput)
}

// The ID of the Subnet.
func (o GetNicsNicOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNicsNic) string { return v.SubnetId }).(pulumi.StringOutput)
}

// The Subregion in which the NIC is located.
func (o GetNicsNicOutput) SubregionName() pulumi.StringOutput {
	return o.ApplyT(func(v GetNicsNic) string { return v.SubregionName }).(pulumi.StringOutput)
}

// One or more tags associated with the NIC.
func (o GetNicsNicOutput) Tags() GetNicsNicTagArrayOutput {
	return o.ApplyT(func(v GetNicsNic) []GetNicsNicTag { return v.Tags }).(GetNicsNicTagArrayOutput)
}

type GetNicsNicArrayOutput struct{ *pulumi.OutputState }

func (GetNicsNicArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNicsNic)(nil)).Elem()
}

func (o GetNicsNicArrayOutput) ToGetNicsNicArrayOutput() GetNicsNicArrayOutput {
	return o
}

func (o GetNicsNicArrayOutput) ToGetNicsNicArrayOutputWithContext(ctx context.Context) GetNicsNicArrayOutput {
	return o
}

func (o GetNicsNicArrayOutput) Index(i pulumi.IntInput) GetNicsNicOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNicsNic {
		return vs[0].([]GetNicsNic)[vs[1].(int)]
	}).(GetNicsNicOutput)
}

type GetNicsNicLinkNic struct {
	// If true, the NIC is deleted when the VM is terminated.
	DeleteOnVmDeletion bool `pulumi:"deleteOnVmDeletion"`
	// The device index for the NIC attachment (between `1` and `7`, both included).
	DeviceNumber int `pulumi:"deviceNumber"`
	// The ID of the NIC to attach.
	LinkNicId string `pulumi:"linkNicId"`
	// The state of the NIC (`available` \| `attaching` \| `in-use` \| `detaching`).
	State string `pulumi:"state"`
	// The account ID of the owner of the VM.
	VmAccountId string `pulumi:"vmAccountId"`
	// The ID of the VM.
	VmId string `pulumi:"vmId"`
}

// GetNicsNicLinkNicInput is an input type that accepts GetNicsNicLinkNicArgs and GetNicsNicLinkNicOutput values.
// You can construct a concrete instance of `GetNicsNicLinkNicInput` via:
//
//	GetNicsNicLinkNicArgs{...}
type GetNicsNicLinkNicInput interface {
	pulumi.Input

	ToGetNicsNicLinkNicOutput() GetNicsNicLinkNicOutput
	ToGetNicsNicLinkNicOutputWithContext(context.Context) GetNicsNicLinkNicOutput
}

type GetNicsNicLinkNicArgs struct {
	// If true, the NIC is deleted when the VM is terminated.
	DeleteOnVmDeletion pulumi.BoolInput `pulumi:"deleteOnVmDeletion"`
	// The device index for the NIC attachment (between `1` and `7`, both included).
	DeviceNumber pulumi.IntInput `pulumi:"deviceNumber"`
	// The ID of the NIC to attach.
	LinkNicId pulumi.StringInput `pulumi:"linkNicId"`
	// The state of the NIC (`available` \| `attaching` \| `in-use` \| `detaching`).
	State pulumi.StringInput `pulumi:"state"`
	// The account ID of the owner of the VM.
	VmAccountId pulumi.StringInput `pulumi:"vmAccountId"`
	// The ID of the VM.
	VmId pulumi.StringInput `pulumi:"vmId"`
}

func (GetNicsNicLinkNicArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNicsNicLinkNic)(nil)).Elem()
}

func (i GetNicsNicLinkNicArgs) ToGetNicsNicLinkNicOutput() GetNicsNicLinkNicOutput {
	return i.ToGetNicsNicLinkNicOutputWithContext(context.Background())
}

func (i GetNicsNicLinkNicArgs) ToGetNicsNicLinkNicOutputWithContext(ctx context.Context) GetNicsNicLinkNicOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNicsNicLinkNicOutput)
}

// GetNicsNicLinkNicArrayInput is an input type that accepts GetNicsNicLinkNicArray and GetNicsNicLinkNicArrayOutput values.
// You can construct a concrete instance of `GetNicsNicLinkNicArrayInput` via:
//
//	GetNicsNicLinkNicArray{ GetNicsNicLinkNicArgs{...} }
type GetNicsNicLinkNicArrayInput interface {
	pulumi.Input

	ToGetNicsNicLinkNicArrayOutput() GetNicsNicLinkNicArrayOutput
	ToGetNicsNicLinkNicArrayOutputWithContext(context.Context) GetNicsNicLinkNicArrayOutput
}

type GetNicsNicLinkNicArray []GetNicsNicLinkNicInput

func (GetNicsNicLinkNicArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNicsNicLinkNic)(nil)).Elem()
}

func (i GetNicsNicLinkNicArray) ToGetNicsNicLinkNicArrayOutput() GetNicsNicLinkNicArrayOutput {
	return i.ToGetNicsNicLinkNicArrayOutputWithContext(context.Background())
}

func (i GetNicsNicLinkNicArray) ToGetNicsNicLinkNicArrayOutputWithContext(ctx context.Context) GetNicsNicLinkNicArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNicsNicLinkNicArrayOutput)
}

type GetNicsNicLinkNicOutput struct{ *pulumi.OutputState }

func (GetNicsNicLinkNicOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNicsNicLinkNic)(nil)).Elem()
}

func (o GetNicsNicLinkNicOutput) ToGetNicsNicLinkNicOutput() GetNicsNicLinkNicOutput {
	return o
}

func (o GetNicsNicLinkNicOutput) ToGetNicsNicLinkNicOutputWithContext(ctx context.Context) GetNicsNicLinkNicOutput {
	return o
}

// If true, the NIC is deleted when the VM is terminated.
func (o GetNicsNicLinkNicOutput) DeleteOnVmDeletion() pulumi.BoolOutput {
	return o.ApplyT(func(v GetNicsNicLinkNic) bool { return v.DeleteOnVmDeletion }).(pulumi.BoolOutput)
}

// The device index for the NIC attachment (between `1` and `7`, both included).
func (o GetNicsNicLinkNicOutput) DeviceNumber() pulumi.IntOutput {
	return o.ApplyT(func(v GetNicsNicLinkNic) int { return v.DeviceNumber }).(pulumi.IntOutput)
}

// The ID of the NIC to attach.
func (o GetNicsNicLinkNicOutput) LinkNicId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNicsNicLinkNic) string { return v.LinkNicId }).(pulumi.StringOutput)
}

// The state of the NIC (`available` \| `attaching` \| `in-use` \| `detaching`).
func (o GetNicsNicLinkNicOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetNicsNicLinkNic) string { return v.State }).(pulumi.StringOutput)
}

// The account ID of the owner of the VM.
func (o GetNicsNicLinkNicOutput) VmAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNicsNicLinkNic) string { return v.VmAccountId }).(pulumi.StringOutput)
}

// The ID of the VM.
func (o GetNicsNicLinkNicOutput) VmId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNicsNicLinkNic) string { return v.VmId }).(pulumi.StringOutput)
}

type GetNicsNicLinkNicArrayOutput struct{ *pulumi.OutputState }

func (GetNicsNicLinkNicArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNicsNicLinkNic)(nil)).Elem()
}

func (o GetNicsNicLinkNicArrayOutput) ToGetNicsNicLinkNicArrayOutput() GetNicsNicLinkNicArrayOutput {
	return o
}

func (o GetNicsNicLinkNicArrayOutput) ToGetNicsNicLinkNicArrayOutputWithContext(ctx context.Context) GetNicsNicLinkNicArrayOutput {
	return o
}

func (o GetNicsNicLinkNicArrayOutput) Index(i pulumi.IntInput) GetNicsNicLinkNicOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNicsNicLinkNic {
		return vs[0].([]GetNicsNicLinkNic)[vs[1].(int)]
	}).(GetNicsNicLinkNicOutput)
}

type GetNicsNicLinkPublicIp struct {
	// (Required in a Net) The ID representing the association of the public IP with the VM or the NIC.
	LinkPublicIpId string `pulumi:"linkPublicIpId"`
	// The name of the public DNS.
	PublicDnsName string `pulumi:"publicDnsName"`
	// The public IP associated with the NIC.
	PublicIp string `pulumi:"publicIp"`
	// The account ID of the owner of the public IP.
	PublicIpAccountId string `pulumi:"publicIpAccountId"`
	// The allocation ID of the public IP.
	PublicIpId string `pulumi:"publicIpId"`
}

// GetNicsNicLinkPublicIpInput is an input type that accepts GetNicsNicLinkPublicIpArgs and GetNicsNicLinkPublicIpOutput values.
// You can construct a concrete instance of `GetNicsNicLinkPublicIpInput` via:
//
//	GetNicsNicLinkPublicIpArgs{...}
type GetNicsNicLinkPublicIpInput interface {
	pulumi.Input

	ToGetNicsNicLinkPublicIpOutput() GetNicsNicLinkPublicIpOutput
	ToGetNicsNicLinkPublicIpOutputWithContext(context.Context) GetNicsNicLinkPublicIpOutput
}

type GetNicsNicLinkPublicIpArgs struct {
	// (Required in a Net) The ID representing the association of the public IP with the VM or the NIC.
	LinkPublicIpId pulumi.StringInput `pulumi:"linkPublicIpId"`
	// The name of the public DNS.
	PublicDnsName pulumi.StringInput `pulumi:"publicDnsName"`
	// The public IP associated with the NIC.
	PublicIp pulumi.StringInput `pulumi:"publicIp"`
	// The account ID of the owner of the public IP.
	PublicIpAccountId pulumi.StringInput `pulumi:"publicIpAccountId"`
	// The allocation ID of the public IP.
	PublicIpId pulumi.StringInput `pulumi:"publicIpId"`
}

func (GetNicsNicLinkPublicIpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNicsNicLinkPublicIp)(nil)).Elem()
}

func (i GetNicsNicLinkPublicIpArgs) ToGetNicsNicLinkPublicIpOutput() GetNicsNicLinkPublicIpOutput {
	return i.ToGetNicsNicLinkPublicIpOutputWithContext(context.Background())
}

func (i GetNicsNicLinkPublicIpArgs) ToGetNicsNicLinkPublicIpOutputWithContext(ctx context.Context) GetNicsNicLinkPublicIpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNicsNicLinkPublicIpOutput)
}

// GetNicsNicLinkPublicIpArrayInput is an input type that accepts GetNicsNicLinkPublicIpArray and GetNicsNicLinkPublicIpArrayOutput values.
// You can construct a concrete instance of `GetNicsNicLinkPublicIpArrayInput` via:
//
//	GetNicsNicLinkPublicIpArray{ GetNicsNicLinkPublicIpArgs{...} }
type GetNicsNicLinkPublicIpArrayInput interface {
	pulumi.Input

	ToGetNicsNicLinkPublicIpArrayOutput() GetNicsNicLinkPublicIpArrayOutput
	ToGetNicsNicLinkPublicIpArrayOutputWithContext(context.Context) GetNicsNicLinkPublicIpArrayOutput
}

type GetNicsNicLinkPublicIpArray []GetNicsNicLinkPublicIpInput

func (GetNicsNicLinkPublicIpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNicsNicLinkPublicIp)(nil)).Elem()
}

func (i GetNicsNicLinkPublicIpArray) ToGetNicsNicLinkPublicIpArrayOutput() GetNicsNicLinkPublicIpArrayOutput {
	return i.ToGetNicsNicLinkPublicIpArrayOutputWithContext(context.Background())
}

func (i GetNicsNicLinkPublicIpArray) ToGetNicsNicLinkPublicIpArrayOutputWithContext(ctx context.Context) GetNicsNicLinkPublicIpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNicsNicLinkPublicIpArrayOutput)
}

type GetNicsNicLinkPublicIpOutput struct{ *pulumi.OutputState }

func (GetNicsNicLinkPublicIpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNicsNicLinkPublicIp)(nil)).Elem()
}

func (o GetNicsNicLinkPublicIpOutput) ToGetNicsNicLinkPublicIpOutput() GetNicsNicLinkPublicIpOutput {
	return o
}

func (o GetNicsNicLinkPublicIpOutput) ToGetNicsNicLinkPublicIpOutputWithContext(ctx context.Context) GetNicsNicLinkPublicIpOutput {
	return o
}

// (Required in a Net) The ID representing the association of the public IP with the VM or the NIC.
func (o GetNicsNicLinkPublicIpOutput) LinkPublicIpId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNicsNicLinkPublicIp) string { return v.LinkPublicIpId }).(pulumi.StringOutput)
}

// The name of the public DNS.
func (o GetNicsNicLinkPublicIpOutput) PublicDnsName() pulumi.StringOutput {
	return o.ApplyT(func(v GetNicsNicLinkPublicIp) string { return v.PublicDnsName }).(pulumi.StringOutput)
}

// The public IP associated with the NIC.
func (o GetNicsNicLinkPublicIpOutput) PublicIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetNicsNicLinkPublicIp) string { return v.PublicIp }).(pulumi.StringOutput)
}

// The account ID of the owner of the public IP.
func (o GetNicsNicLinkPublicIpOutput) PublicIpAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNicsNicLinkPublicIp) string { return v.PublicIpAccountId }).(pulumi.StringOutput)
}

// The allocation ID of the public IP.
func (o GetNicsNicLinkPublicIpOutput) PublicIpId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNicsNicLinkPublicIp) string { return v.PublicIpId }).(pulumi.StringOutput)
}

type GetNicsNicLinkPublicIpArrayOutput struct{ *pulumi.OutputState }

func (GetNicsNicLinkPublicIpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNicsNicLinkPublicIp)(nil)).Elem()
}

func (o GetNicsNicLinkPublicIpArrayOutput) ToGetNicsNicLinkPublicIpArrayOutput() GetNicsNicLinkPublicIpArrayOutput {
	return o
}

func (o GetNicsNicLinkPublicIpArrayOutput) ToGetNicsNicLinkPublicIpArrayOutputWithContext(ctx context.Context) GetNicsNicLinkPublicIpArrayOutput {
	return o
}

func (o GetNicsNicLinkPublicIpArrayOutput) Index(i pulumi.IntInput) GetNicsNicLinkPublicIpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNicsNicLinkPublicIp {
		return vs[0].([]GetNicsNicLinkPublicIp)[vs[1].(int)]
	}).(GetNicsNicLinkPublicIpOutput)
}

type GetNicsNicPrivateIp struct {
	// If true, the IP is the primary private IP of the NIC.
	IsPrimary bool `pulumi:"isPrimary"`
	// Information about the public IP association.
	LinkPublicIps []GetNicsNicPrivateIpLinkPublicIp `pulumi:"linkPublicIps"`
	// The name of the private DNS.
	PrivateDnsName string `pulumi:"privateDnsName"`
	// The private IP of the NIC.
	PrivateIp string `pulumi:"privateIp"`
}

// GetNicsNicPrivateIpInput is an input type that accepts GetNicsNicPrivateIpArgs and GetNicsNicPrivateIpOutput values.
// You can construct a concrete instance of `GetNicsNicPrivateIpInput` via:
//
//	GetNicsNicPrivateIpArgs{...}
type GetNicsNicPrivateIpInput interface {
	pulumi.Input

	ToGetNicsNicPrivateIpOutput() GetNicsNicPrivateIpOutput
	ToGetNicsNicPrivateIpOutputWithContext(context.Context) GetNicsNicPrivateIpOutput
}

type GetNicsNicPrivateIpArgs struct {
	// If true, the IP is the primary private IP of the NIC.
	IsPrimary pulumi.BoolInput `pulumi:"isPrimary"`
	// Information about the public IP association.
	LinkPublicIps GetNicsNicPrivateIpLinkPublicIpArrayInput `pulumi:"linkPublicIps"`
	// The name of the private DNS.
	PrivateDnsName pulumi.StringInput `pulumi:"privateDnsName"`
	// The private IP of the NIC.
	PrivateIp pulumi.StringInput `pulumi:"privateIp"`
}

func (GetNicsNicPrivateIpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNicsNicPrivateIp)(nil)).Elem()
}

func (i GetNicsNicPrivateIpArgs) ToGetNicsNicPrivateIpOutput() GetNicsNicPrivateIpOutput {
	return i.ToGetNicsNicPrivateIpOutputWithContext(context.Background())
}

func (i GetNicsNicPrivateIpArgs) ToGetNicsNicPrivateIpOutputWithContext(ctx context.Context) GetNicsNicPrivateIpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNicsNicPrivateIpOutput)
}

// GetNicsNicPrivateIpArrayInput is an input type that accepts GetNicsNicPrivateIpArray and GetNicsNicPrivateIpArrayOutput values.
// You can construct a concrete instance of `GetNicsNicPrivateIpArrayInput` via:
//
//	GetNicsNicPrivateIpArray{ GetNicsNicPrivateIpArgs{...} }
type GetNicsNicPrivateIpArrayInput interface {
	pulumi.Input

	ToGetNicsNicPrivateIpArrayOutput() GetNicsNicPrivateIpArrayOutput
	ToGetNicsNicPrivateIpArrayOutputWithContext(context.Context) GetNicsNicPrivateIpArrayOutput
}

type GetNicsNicPrivateIpArray []GetNicsNicPrivateIpInput

func (GetNicsNicPrivateIpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNicsNicPrivateIp)(nil)).Elem()
}

func (i GetNicsNicPrivateIpArray) ToGetNicsNicPrivateIpArrayOutput() GetNicsNicPrivateIpArrayOutput {
	return i.ToGetNicsNicPrivateIpArrayOutputWithContext(context.Background())
}

func (i GetNicsNicPrivateIpArray) ToGetNicsNicPrivateIpArrayOutputWithContext(ctx context.Context) GetNicsNicPrivateIpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNicsNicPrivateIpArrayOutput)
}

type GetNicsNicPrivateIpOutput struct{ *pulumi.OutputState }

func (GetNicsNicPrivateIpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNicsNicPrivateIp)(nil)).Elem()
}

func (o GetNicsNicPrivateIpOutput) ToGetNicsNicPrivateIpOutput() GetNicsNicPrivateIpOutput {
	return o
}

func (o GetNicsNicPrivateIpOutput) ToGetNicsNicPrivateIpOutputWithContext(ctx context.Context) GetNicsNicPrivateIpOutput {
	return o
}

// If true, the IP is the primary private IP of the NIC.
func (o GetNicsNicPrivateIpOutput) IsPrimary() pulumi.BoolOutput {
	return o.ApplyT(func(v GetNicsNicPrivateIp) bool { return v.IsPrimary }).(pulumi.BoolOutput)
}

// Information about the public IP association.
func (o GetNicsNicPrivateIpOutput) LinkPublicIps() GetNicsNicPrivateIpLinkPublicIpArrayOutput {
	return o.ApplyT(func(v GetNicsNicPrivateIp) []GetNicsNicPrivateIpLinkPublicIp { return v.LinkPublicIps }).(GetNicsNicPrivateIpLinkPublicIpArrayOutput)
}

// The name of the private DNS.
func (o GetNicsNicPrivateIpOutput) PrivateDnsName() pulumi.StringOutput {
	return o.ApplyT(func(v GetNicsNicPrivateIp) string { return v.PrivateDnsName }).(pulumi.StringOutput)
}

// The private IP of the NIC.
func (o GetNicsNicPrivateIpOutput) PrivateIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetNicsNicPrivateIp) string { return v.PrivateIp }).(pulumi.StringOutput)
}

type GetNicsNicPrivateIpArrayOutput struct{ *pulumi.OutputState }

func (GetNicsNicPrivateIpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNicsNicPrivateIp)(nil)).Elem()
}

func (o GetNicsNicPrivateIpArrayOutput) ToGetNicsNicPrivateIpArrayOutput() GetNicsNicPrivateIpArrayOutput {
	return o
}

func (o GetNicsNicPrivateIpArrayOutput) ToGetNicsNicPrivateIpArrayOutputWithContext(ctx context.Context) GetNicsNicPrivateIpArrayOutput {
	return o
}

func (o GetNicsNicPrivateIpArrayOutput) Index(i pulumi.IntInput) GetNicsNicPrivateIpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNicsNicPrivateIp {
		return vs[0].([]GetNicsNicPrivateIp)[vs[1].(int)]
	}).(GetNicsNicPrivateIpOutput)
}

type GetNicsNicPrivateIpLinkPublicIp struct {
	// (Required in a Net) The ID representing the association of the public IP with the VM or the NIC.
	LinkPublicIpId string `pulumi:"linkPublicIpId"`
	// The name of the public DNS.
	PublicDnsName string `pulumi:"publicDnsName"`
	// The public IP associated with the NIC.
	PublicIp string `pulumi:"publicIp"`
	// The account ID of the owner of the public IP.
	PublicIpAccountId string `pulumi:"publicIpAccountId"`
	// The allocation ID of the public IP.
	PublicIpId string `pulumi:"publicIpId"`
}

// GetNicsNicPrivateIpLinkPublicIpInput is an input type that accepts GetNicsNicPrivateIpLinkPublicIpArgs and GetNicsNicPrivateIpLinkPublicIpOutput values.
// You can construct a concrete instance of `GetNicsNicPrivateIpLinkPublicIpInput` via:
//
//	GetNicsNicPrivateIpLinkPublicIpArgs{...}
type GetNicsNicPrivateIpLinkPublicIpInput interface {
	pulumi.Input

	ToGetNicsNicPrivateIpLinkPublicIpOutput() GetNicsNicPrivateIpLinkPublicIpOutput
	ToGetNicsNicPrivateIpLinkPublicIpOutputWithContext(context.Context) GetNicsNicPrivateIpLinkPublicIpOutput
}

type GetNicsNicPrivateIpLinkPublicIpArgs struct {
	// (Required in a Net) The ID representing the association of the public IP with the VM or the NIC.
	LinkPublicIpId pulumi.StringInput `pulumi:"linkPublicIpId"`
	// The name of the public DNS.
	PublicDnsName pulumi.StringInput `pulumi:"publicDnsName"`
	// The public IP associated with the NIC.
	PublicIp pulumi.StringInput `pulumi:"publicIp"`
	// The account ID of the owner of the public IP.
	PublicIpAccountId pulumi.StringInput `pulumi:"publicIpAccountId"`
	// The allocation ID of the public IP.
	PublicIpId pulumi.StringInput `pulumi:"publicIpId"`
}

func (GetNicsNicPrivateIpLinkPublicIpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNicsNicPrivateIpLinkPublicIp)(nil)).Elem()
}

func (i GetNicsNicPrivateIpLinkPublicIpArgs) ToGetNicsNicPrivateIpLinkPublicIpOutput() GetNicsNicPrivateIpLinkPublicIpOutput {
	return i.ToGetNicsNicPrivateIpLinkPublicIpOutputWithContext(context.Background())
}

func (i GetNicsNicPrivateIpLinkPublicIpArgs) ToGetNicsNicPrivateIpLinkPublicIpOutputWithContext(ctx context.Context) GetNicsNicPrivateIpLinkPublicIpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNicsNicPrivateIpLinkPublicIpOutput)
}

// GetNicsNicPrivateIpLinkPublicIpArrayInput is an input type that accepts GetNicsNicPrivateIpLinkPublicIpArray and GetNicsNicPrivateIpLinkPublicIpArrayOutput values.
// You can construct a concrete instance of `GetNicsNicPrivateIpLinkPublicIpArrayInput` via:
//
//	GetNicsNicPrivateIpLinkPublicIpArray{ GetNicsNicPrivateIpLinkPublicIpArgs{...} }
type GetNicsNicPrivateIpLinkPublicIpArrayInput interface {
	pulumi.Input

	ToGetNicsNicPrivateIpLinkPublicIpArrayOutput() GetNicsNicPrivateIpLinkPublicIpArrayOutput
	ToGetNicsNicPrivateIpLinkPublicIpArrayOutputWithContext(context.Context) GetNicsNicPrivateIpLinkPublicIpArrayOutput
}

type GetNicsNicPrivateIpLinkPublicIpArray []GetNicsNicPrivateIpLinkPublicIpInput

func (GetNicsNicPrivateIpLinkPublicIpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNicsNicPrivateIpLinkPublicIp)(nil)).Elem()
}

func (i GetNicsNicPrivateIpLinkPublicIpArray) ToGetNicsNicPrivateIpLinkPublicIpArrayOutput() GetNicsNicPrivateIpLinkPublicIpArrayOutput {
	return i.ToGetNicsNicPrivateIpLinkPublicIpArrayOutputWithContext(context.Background())
}

func (i GetNicsNicPrivateIpLinkPublicIpArray) ToGetNicsNicPrivateIpLinkPublicIpArrayOutputWithContext(ctx context.Context) GetNicsNicPrivateIpLinkPublicIpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNicsNicPrivateIpLinkPublicIpArrayOutput)
}

type GetNicsNicPrivateIpLinkPublicIpOutput struct{ *pulumi.OutputState }

func (GetNicsNicPrivateIpLinkPublicIpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNicsNicPrivateIpLinkPublicIp)(nil)).Elem()
}

func (o GetNicsNicPrivateIpLinkPublicIpOutput) ToGetNicsNicPrivateIpLinkPublicIpOutput() GetNicsNicPrivateIpLinkPublicIpOutput {
	return o
}

func (o GetNicsNicPrivateIpLinkPublicIpOutput) ToGetNicsNicPrivateIpLinkPublicIpOutputWithContext(ctx context.Context) GetNicsNicPrivateIpLinkPublicIpOutput {
	return o
}

// (Required in a Net) The ID representing the association of the public IP with the VM or the NIC.
func (o GetNicsNicPrivateIpLinkPublicIpOutput) LinkPublicIpId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNicsNicPrivateIpLinkPublicIp) string { return v.LinkPublicIpId }).(pulumi.StringOutput)
}

// The name of the public DNS.
func (o GetNicsNicPrivateIpLinkPublicIpOutput) PublicDnsName() pulumi.StringOutput {
	return o.ApplyT(func(v GetNicsNicPrivateIpLinkPublicIp) string { return v.PublicDnsName }).(pulumi.StringOutput)
}

// The public IP associated with the NIC.
func (o GetNicsNicPrivateIpLinkPublicIpOutput) PublicIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetNicsNicPrivateIpLinkPublicIp) string { return v.PublicIp }).(pulumi.StringOutput)
}

// The account ID of the owner of the public IP.
func (o GetNicsNicPrivateIpLinkPublicIpOutput) PublicIpAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNicsNicPrivateIpLinkPublicIp) string { return v.PublicIpAccountId }).(pulumi.StringOutput)
}

// The allocation ID of the public IP.
func (o GetNicsNicPrivateIpLinkPublicIpOutput) PublicIpId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNicsNicPrivateIpLinkPublicIp) string { return v.PublicIpId }).(pulumi.StringOutput)
}

type GetNicsNicPrivateIpLinkPublicIpArrayOutput struct{ *pulumi.OutputState }

func (GetNicsNicPrivateIpLinkPublicIpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNicsNicPrivateIpLinkPublicIp)(nil)).Elem()
}

func (o GetNicsNicPrivateIpLinkPublicIpArrayOutput) ToGetNicsNicPrivateIpLinkPublicIpArrayOutput() GetNicsNicPrivateIpLinkPublicIpArrayOutput {
	return o
}

func (o GetNicsNicPrivateIpLinkPublicIpArrayOutput) ToGetNicsNicPrivateIpLinkPublicIpArrayOutputWithContext(ctx context.Context) GetNicsNicPrivateIpLinkPublicIpArrayOutput {
	return o
}

func (o GetNicsNicPrivateIpLinkPublicIpArrayOutput) Index(i pulumi.IntInput) GetNicsNicPrivateIpLinkPublicIpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNicsNicPrivateIpLinkPublicIp {
		return vs[0].([]GetNicsNicPrivateIpLinkPublicIp)[vs[1].(int)]
	}).(GetNicsNicPrivateIpLinkPublicIpOutput)
}

type GetNicsNicSecurityGroup struct {
	// The ID of the security group.
	SecurityGroupId string `pulumi:"securityGroupId"`
	// The name of the security group.
	SecurityGroupName string `pulumi:"securityGroupName"`
}

// GetNicsNicSecurityGroupInput is an input type that accepts GetNicsNicSecurityGroupArgs and GetNicsNicSecurityGroupOutput values.
// You can construct a concrete instance of `GetNicsNicSecurityGroupInput` via:
//
//	GetNicsNicSecurityGroupArgs{...}
type GetNicsNicSecurityGroupInput interface {
	pulumi.Input

	ToGetNicsNicSecurityGroupOutput() GetNicsNicSecurityGroupOutput
	ToGetNicsNicSecurityGroupOutputWithContext(context.Context) GetNicsNicSecurityGroupOutput
}

type GetNicsNicSecurityGroupArgs struct {
	// The ID of the security group.
	SecurityGroupId pulumi.StringInput `pulumi:"securityGroupId"`
	// The name of the security group.
	SecurityGroupName pulumi.StringInput `pulumi:"securityGroupName"`
}

func (GetNicsNicSecurityGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNicsNicSecurityGroup)(nil)).Elem()
}

func (i GetNicsNicSecurityGroupArgs) ToGetNicsNicSecurityGroupOutput() GetNicsNicSecurityGroupOutput {
	return i.ToGetNicsNicSecurityGroupOutputWithContext(context.Background())
}

func (i GetNicsNicSecurityGroupArgs) ToGetNicsNicSecurityGroupOutputWithContext(ctx context.Context) GetNicsNicSecurityGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNicsNicSecurityGroupOutput)
}

// GetNicsNicSecurityGroupArrayInput is an input type that accepts GetNicsNicSecurityGroupArray and GetNicsNicSecurityGroupArrayOutput values.
// You can construct a concrete instance of `GetNicsNicSecurityGroupArrayInput` via:
//
//	GetNicsNicSecurityGroupArray{ GetNicsNicSecurityGroupArgs{...} }
type GetNicsNicSecurityGroupArrayInput interface {
	pulumi.Input

	ToGetNicsNicSecurityGroupArrayOutput() GetNicsNicSecurityGroupArrayOutput
	ToGetNicsNicSecurityGroupArrayOutputWithContext(context.Context) GetNicsNicSecurityGroupArrayOutput
}

type GetNicsNicSecurityGroupArray []GetNicsNicSecurityGroupInput

func (GetNicsNicSecurityGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNicsNicSecurityGroup)(nil)).Elem()
}

func (i GetNicsNicSecurityGroupArray) ToGetNicsNicSecurityGroupArrayOutput() GetNicsNicSecurityGroupArrayOutput {
	return i.ToGetNicsNicSecurityGroupArrayOutputWithContext(context.Background())
}

func (i GetNicsNicSecurityGroupArray) ToGetNicsNicSecurityGroupArrayOutputWithContext(ctx context.Context) GetNicsNicSecurityGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNicsNicSecurityGroupArrayOutput)
}

type GetNicsNicSecurityGroupOutput struct{ *pulumi.OutputState }

func (GetNicsNicSecurityGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNicsNicSecurityGroup)(nil)).Elem()
}

func (o GetNicsNicSecurityGroupOutput) ToGetNicsNicSecurityGroupOutput() GetNicsNicSecurityGroupOutput {
	return o
}

func (o GetNicsNicSecurityGroupOutput) ToGetNicsNicSecurityGroupOutputWithContext(ctx context.Context) GetNicsNicSecurityGroupOutput {
	return o
}

// The ID of the security group.
func (o GetNicsNicSecurityGroupOutput) SecurityGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNicsNicSecurityGroup) string { return v.SecurityGroupId }).(pulumi.StringOutput)
}

// The name of the security group.
func (o GetNicsNicSecurityGroupOutput) SecurityGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v GetNicsNicSecurityGroup) string { return v.SecurityGroupName }).(pulumi.StringOutput)
}

type GetNicsNicSecurityGroupArrayOutput struct{ *pulumi.OutputState }

func (GetNicsNicSecurityGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNicsNicSecurityGroup)(nil)).Elem()
}

func (o GetNicsNicSecurityGroupArrayOutput) ToGetNicsNicSecurityGroupArrayOutput() GetNicsNicSecurityGroupArrayOutput {
	return o
}

func (o GetNicsNicSecurityGroupArrayOutput) ToGetNicsNicSecurityGroupArrayOutputWithContext(ctx context.Context) GetNicsNicSecurityGroupArrayOutput {
	return o
}

func (o GetNicsNicSecurityGroupArrayOutput) Index(i pulumi.IntInput) GetNicsNicSecurityGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNicsNicSecurityGroup {
		return vs[0].([]GetNicsNicSecurityGroup)[vs[1].(int)]
	}).(GetNicsNicSecurityGroupOutput)
}

type GetNicsNicTag struct {
	// The key of the tag, with a minimum of 1 character.
	Key string `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value string `pulumi:"value"`
}

// GetNicsNicTagInput is an input type that accepts GetNicsNicTagArgs and GetNicsNicTagOutput values.
// You can construct a concrete instance of `GetNicsNicTagInput` via:
//
//	GetNicsNicTagArgs{...}
type GetNicsNicTagInput interface {
	pulumi.Input

	ToGetNicsNicTagOutput() GetNicsNicTagOutput
	ToGetNicsNicTagOutputWithContext(context.Context) GetNicsNicTagOutput
}

type GetNicsNicTagArgs struct {
	// The key of the tag, with a minimum of 1 character.
	Key pulumi.StringInput `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetNicsNicTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNicsNicTag)(nil)).Elem()
}

func (i GetNicsNicTagArgs) ToGetNicsNicTagOutput() GetNicsNicTagOutput {
	return i.ToGetNicsNicTagOutputWithContext(context.Background())
}

func (i GetNicsNicTagArgs) ToGetNicsNicTagOutputWithContext(ctx context.Context) GetNicsNicTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNicsNicTagOutput)
}

// GetNicsNicTagArrayInput is an input type that accepts GetNicsNicTagArray and GetNicsNicTagArrayOutput values.
// You can construct a concrete instance of `GetNicsNicTagArrayInput` via:
//
//	GetNicsNicTagArray{ GetNicsNicTagArgs{...} }
type GetNicsNicTagArrayInput interface {
	pulumi.Input

	ToGetNicsNicTagArrayOutput() GetNicsNicTagArrayOutput
	ToGetNicsNicTagArrayOutputWithContext(context.Context) GetNicsNicTagArrayOutput
}

type GetNicsNicTagArray []GetNicsNicTagInput

func (GetNicsNicTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNicsNicTag)(nil)).Elem()
}

func (i GetNicsNicTagArray) ToGetNicsNicTagArrayOutput() GetNicsNicTagArrayOutput {
	return i.ToGetNicsNicTagArrayOutputWithContext(context.Background())
}

func (i GetNicsNicTagArray) ToGetNicsNicTagArrayOutputWithContext(ctx context.Context) GetNicsNicTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNicsNicTagArrayOutput)
}

type GetNicsNicTagOutput struct{ *pulumi.OutputState }

func (GetNicsNicTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNicsNicTag)(nil)).Elem()
}

func (o GetNicsNicTagOutput) ToGetNicsNicTagOutput() GetNicsNicTagOutput {
	return o
}

func (o GetNicsNicTagOutput) ToGetNicsNicTagOutputWithContext(ctx context.Context) GetNicsNicTagOutput {
	return o
}

// The key of the tag, with a minimum of 1 character.
func (o GetNicsNicTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetNicsNicTag) string { return v.Key }).(pulumi.StringOutput)
}

// The value of the tag, between 0 and 255 characters.
func (o GetNicsNicTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetNicsNicTag) string { return v.Value }).(pulumi.StringOutput)
}

type GetNicsNicTagArrayOutput struct{ *pulumi.OutputState }

func (GetNicsNicTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNicsNicTag)(nil)).Elem()
}

func (o GetNicsNicTagArrayOutput) ToGetNicsNicTagArrayOutput() GetNicsNicTagArrayOutput {
	return o
}

func (o GetNicsNicTagArrayOutput) ToGetNicsNicTagArrayOutputWithContext(ctx context.Context) GetNicsNicTagArrayOutput {
	return o
}

func (o GetNicsNicTagArrayOutput) Index(i pulumi.IntInput) GetNicsNicTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNicsNicTag {
		return vs[0].([]GetNicsNicTag)[vs[1].(int)]
	}).(GetNicsNicTagOutput)
}

type GetPoliciesFilter struct {
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// GetPoliciesFilterInput is an input type that accepts GetPoliciesFilterArgs and GetPoliciesFilterOutput values.
// You can construct a concrete instance of `GetPoliciesFilterInput` via:
//
//	GetPoliciesFilterArgs{...}
type GetPoliciesFilterInput interface {
	pulumi.Input

	ToGetPoliciesFilterOutput() GetPoliciesFilterOutput
	ToGetPoliciesFilterOutputWithContext(context.Context) GetPoliciesFilterOutput
}

type GetPoliciesFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetPoliciesFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPoliciesFilter)(nil)).Elem()
}

func (i GetPoliciesFilterArgs) ToGetPoliciesFilterOutput() GetPoliciesFilterOutput {
	return i.ToGetPoliciesFilterOutputWithContext(context.Background())
}

func (i GetPoliciesFilterArgs) ToGetPoliciesFilterOutputWithContext(ctx context.Context) GetPoliciesFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPoliciesFilterOutput)
}

// GetPoliciesFilterArrayInput is an input type that accepts GetPoliciesFilterArray and GetPoliciesFilterArrayOutput values.
// You can construct a concrete instance of `GetPoliciesFilterArrayInput` via:
//
//	GetPoliciesFilterArray{ GetPoliciesFilterArgs{...} }
type GetPoliciesFilterArrayInput interface {
	pulumi.Input

	ToGetPoliciesFilterArrayOutput() GetPoliciesFilterArrayOutput
	ToGetPoliciesFilterArrayOutputWithContext(context.Context) GetPoliciesFilterArrayOutput
}

type GetPoliciesFilterArray []GetPoliciesFilterInput

func (GetPoliciesFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPoliciesFilter)(nil)).Elem()
}

func (i GetPoliciesFilterArray) ToGetPoliciesFilterArrayOutput() GetPoliciesFilterArrayOutput {
	return i.ToGetPoliciesFilterArrayOutputWithContext(context.Background())
}

func (i GetPoliciesFilterArray) ToGetPoliciesFilterArrayOutputWithContext(ctx context.Context) GetPoliciesFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPoliciesFilterArrayOutput)
}

type GetPoliciesFilterOutput struct{ *pulumi.OutputState }

func (GetPoliciesFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPoliciesFilter)(nil)).Elem()
}

func (o GetPoliciesFilterOutput) ToGetPoliciesFilterOutput() GetPoliciesFilterOutput {
	return o
}

func (o GetPoliciesFilterOutput) ToGetPoliciesFilterOutputWithContext(ctx context.Context) GetPoliciesFilterOutput {
	return o
}

func (o GetPoliciesFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoliciesFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetPoliciesFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetPoliciesFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetPoliciesFilterArrayOutput struct{ *pulumi.OutputState }

func (GetPoliciesFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPoliciesFilter)(nil)).Elem()
}

func (o GetPoliciesFilterArrayOutput) ToGetPoliciesFilterArrayOutput() GetPoliciesFilterArrayOutput {
	return o
}

func (o GetPoliciesFilterArrayOutput) ToGetPoliciesFilterArrayOutputWithContext(ctx context.Context) GetPoliciesFilterArrayOutput {
	return o
}

func (o GetPoliciesFilterArrayOutput) Index(i pulumi.IntInput) GetPoliciesFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPoliciesFilter {
		return vs[0].([]GetPoliciesFilter)[vs[1].(int)]
	}).(GetPoliciesFilterOutput)
}

type GetPoliciesLinkedToUserGroupFilter struct {
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// GetPoliciesLinkedToUserGroupFilterInput is an input type that accepts GetPoliciesLinkedToUserGroupFilterArgs and GetPoliciesLinkedToUserGroupFilterOutput values.
// You can construct a concrete instance of `GetPoliciesLinkedToUserGroupFilterInput` via:
//
//	GetPoliciesLinkedToUserGroupFilterArgs{...}
type GetPoliciesLinkedToUserGroupFilterInput interface {
	pulumi.Input

	ToGetPoliciesLinkedToUserGroupFilterOutput() GetPoliciesLinkedToUserGroupFilterOutput
	ToGetPoliciesLinkedToUserGroupFilterOutputWithContext(context.Context) GetPoliciesLinkedToUserGroupFilterOutput
}

type GetPoliciesLinkedToUserGroupFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetPoliciesLinkedToUserGroupFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPoliciesLinkedToUserGroupFilter)(nil)).Elem()
}

func (i GetPoliciesLinkedToUserGroupFilterArgs) ToGetPoliciesLinkedToUserGroupFilterOutput() GetPoliciesLinkedToUserGroupFilterOutput {
	return i.ToGetPoliciesLinkedToUserGroupFilterOutputWithContext(context.Background())
}

func (i GetPoliciesLinkedToUserGroupFilterArgs) ToGetPoliciesLinkedToUserGroupFilterOutputWithContext(ctx context.Context) GetPoliciesLinkedToUserGroupFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPoliciesLinkedToUserGroupFilterOutput)
}

// GetPoliciesLinkedToUserGroupFilterArrayInput is an input type that accepts GetPoliciesLinkedToUserGroupFilterArray and GetPoliciesLinkedToUserGroupFilterArrayOutput values.
// You can construct a concrete instance of `GetPoliciesLinkedToUserGroupFilterArrayInput` via:
//
//	GetPoliciesLinkedToUserGroupFilterArray{ GetPoliciesLinkedToUserGroupFilterArgs{...} }
type GetPoliciesLinkedToUserGroupFilterArrayInput interface {
	pulumi.Input

	ToGetPoliciesLinkedToUserGroupFilterArrayOutput() GetPoliciesLinkedToUserGroupFilterArrayOutput
	ToGetPoliciesLinkedToUserGroupFilterArrayOutputWithContext(context.Context) GetPoliciesLinkedToUserGroupFilterArrayOutput
}

type GetPoliciesLinkedToUserGroupFilterArray []GetPoliciesLinkedToUserGroupFilterInput

func (GetPoliciesLinkedToUserGroupFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPoliciesLinkedToUserGroupFilter)(nil)).Elem()
}

func (i GetPoliciesLinkedToUserGroupFilterArray) ToGetPoliciesLinkedToUserGroupFilterArrayOutput() GetPoliciesLinkedToUserGroupFilterArrayOutput {
	return i.ToGetPoliciesLinkedToUserGroupFilterArrayOutputWithContext(context.Background())
}

func (i GetPoliciesLinkedToUserGroupFilterArray) ToGetPoliciesLinkedToUserGroupFilterArrayOutputWithContext(ctx context.Context) GetPoliciesLinkedToUserGroupFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPoliciesLinkedToUserGroupFilterArrayOutput)
}

type GetPoliciesLinkedToUserGroupFilterOutput struct{ *pulumi.OutputState }

func (GetPoliciesLinkedToUserGroupFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPoliciesLinkedToUserGroupFilter)(nil)).Elem()
}

func (o GetPoliciesLinkedToUserGroupFilterOutput) ToGetPoliciesLinkedToUserGroupFilterOutput() GetPoliciesLinkedToUserGroupFilterOutput {
	return o
}

func (o GetPoliciesLinkedToUserGroupFilterOutput) ToGetPoliciesLinkedToUserGroupFilterOutputWithContext(ctx context.Context) GetPoliciesLinkedToUserGroupFilterOutput {
	return o
}

func (o GetPoliciesLinkedToUserGroupFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoliciesLinkedToUserGroupFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetPoliciesLinkedToUserGroupFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetPoliciesLinkedToUserGroupFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetPoliciesLinkedToUserGroupFilterArrayOutput struct{ *pulumi.OutputState }

func (GetPoliciesLinkedToUserGroupFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPoliciesLinkedToUserGroupFilter)(nil)).Elem()
}

func (o GetPoliciesLinkedToUserGroupFilterArrayOutput) ToGetPoliciesLinkedToUserGroupFilterArrayOutput() GetPoliciesLinkedToUserGroupFilterArrayOutput {
	return o
}

func (o GetPoliciesLinkedToUserGroupFilterArrayOutput) ToGetPoliciesLinkedToUserGroupFilterArrayOutputWithContext(ctx context.Context) GetPoliciesLinkedToUserGroupFilterArrayOutput {
	return o
}

func (o GetPoliciesLinkedToUserGroupFilterArrayOutput) Index(i pulumi.IntInput) GetPoliciesLinkedToUserGroupFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPoliciesLinkedToUserGroupFilter {
		return vs[0].([]GetPoliciesLinkedToUserGroupFilter)[vs[1].(int)]
	}).(GetPoliciesLinkedToUserGroupFilterOutput)
}

type GetPoliciesLinkedToUserGroupPolicy struct {
	// The date and time (UTC) at which the linked policy was created.
	CreationDate string `pulumi:"creationDate"`
	// The date and time (UTC) at which the linked policy was last modified.
	LastModificationDate string `pulumi:"lastModificationDate"`
	// The OUTSCALE Resource Name (ORN) of the policy. For more information, see [Resource Identifiers](https://docs.outscale.com/en/userguide/Resource-Identifiers.html).
	Orn string `pulumi:"orn"`
	// The ID of the policy.
	PolicyId string `pulumi:"policyId"`
	// The name of the policy.
	PolicyName string `pulumi:"policyName"`
}

// GetPoliciesLinkedToUserGroupPolicyInput is an input type that accepts GetPoliciesLinkedToUserGroupPolicyArgs and GetPoliciesLinkedToUserGroupPolicyOutput values.
// You can construct a concrete instance of `GetPoliciesLinkedToUserGroupPolicyInput` via:
//
//	GetPoliciesLinkedToUserGroupPolicyArgs{...}
type GetPoliciesLinkedToUserGroupPolicyInput interface {
	pulumi.Input

	ToGetPoliciesLinkedToUserGroupPolicyOutput() GetPoliciesLinkedToUserGroupPolicyOutput
	ToGetPoliciesLinkedToUserGroupPolicyOutputWithContext(context.Context) GetPoliciesLinkedToUserGroupPolicyOutput
}

type GetPoliciesLinkedToUserGroupPolicyArgs struct {
	// The date and time (UTC) at which the linked policy was created.
	CreationDate pulumi.StringInput `pulumi:"creationDate"`
	// The date and time (UTC) at which the linked policy was last modified.
	LastModificationDate pulumi.StringInput `pulumi:"lastModificationDate"`
	// The OUTSCALE Resource Name (ORN) of the policy. For more information, see [Resource Identifiers](https://docs.outscale.com/en/userguide/Resource-Identifiers.html).
	Orn pulumi.StringInput `pulumi:"orn"`
	// The ID of the policy.
	PolicyId pulumi.StringInput `pulumi:"policyId"`
	// The name of the policy.
	PolicyName pulumi.StringInput `pulumi:"policyName"`
}

func (GetPoliciesLinkedToUserGroupPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPoliciesLinkedToUserGroupPolicy)(nil)).Elem()
}

func (i GetPoliciesLinkedToUserGroupPolicyArgs) ToGetPoliciesLinkedToUserGroupPolicyOutput() GetPoliciesLinkedToUserGroupPolicyOutput {
	return i.ToGetPoliciesLinkedToUserGroupPolicyOutputWithContext(context.Background())
}

func (i GetPoliciesLinkedToUserGroupPolicyArgs) ToGetPoliciesLinkedToUserGroupPolicyOutputWithContext(ctx context.Context) GetPoliciesLinkedToUserGroupPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPoliciesLinkedToUserGroupPolicyOutput)
}

// GetPoliciesLinkedToUserGroupPolicyArrayInput is an input type that accepts GetPoliciesLinkedToUserGroupPolicyArray and GetPoliciesLinkedToUserGroupPolicyArrayOutput values.
// You can construct a concrete instance of `GetPoliciesLinkedToUserGroupPolicyArrayInput` via:
//
//	GetPoliciesLinkedToUserGroupPolicyArray{ GetPoliciesLinkedToUserGroupPolicyArgs{...} }
type GetPoliciesLinkedToUserGroupPolicyArrayInput interface {
	pulumi.Input

	ToGetPoliciesLinkedToUserGroupPolicyArrayOutput() GetPoliciesLinkedToUserGroupPolicyArrayOutput
	ToGetPoliciesLinkedToUserGroupPolicyArrayOutputWithContext(context.Context) GetPoliciesLinkedToUserGroupPolicyArrayOutput
}

type GetPoliciesLinkedToUserGroupPolicyArray []GetPoliciesLinkedToUserGroupPolicyInput

func (GetPoliciesLinkedToUserGroupPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPoliciesLinkedToUserGroupPolicy)(nil)).Elem()
}

func (i GetPoliciesLinkedToUserGroupPolicyArray) ToGetPoliciesLinkedToUserGroupPolicyArrayOutput() GetPoliciesLinkedToUserGroupPolicyArrayOutput {
	return i.ToGetPoliciesLinkedToUserGroupPolicyArrayOutputWithContext(context.Background())
}

func (i GetPoliciesLinkedToUserGroupPolicyArray) ToGetPoliciesLinkedToUserGroupPolicyArrayOutputWithContext(ctx context.Context) GetPoliciesLinkedToUserGroupPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPoliciesLinkedToUserGroupPolicyArrayOutput)
}

type GetPoliciesLinkedToUserGroupPolicyOutput struct{ *pulumi.OutputState }

func (GetPoliciesLinkedToUserGroupPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPoliciesLinkedToUserGroupPolicy)(nil)).Elem()
}

func (o GetPoliciesLinkedToUserGroupPolicyOutput) ToGetPoliciesLinkedToUserGroupPolicyOutput() GetPoliciesLinkedToUserGroupPolicyOutput {
	return o
}

func (o GetPoliciesLinkedToUserGroupPolicyOutput) ToGetPoliciesLinkedToUserGroupPolicyOutputWithContext(ctx context.Context) GetPoliciesLinkedToUserGroupPolicyOutput {
	return o
}

// The date and time (UTC) at which the linked policy was created.
func (o GetPoliciesLinkedToUserGroupPolicyOutput) CreationDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoliciesLinkedToUserGroupPolicy) string { return v.CreationDate }).(pulumi.StringOutput)
}

// The date and time (UTC) at which the linked policy was last modified.
func (o GetPoliciesLinkedToUserGroupPolicyOutput) LastModificationDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoliciesLinkedToUserGroupPolicy) string { return v.LastModificationDate }).(pulumi.StringOutput)
}

// The OUTSCALE Resource Name (ORN) of the policy. For more information, see [Resource Identifiers](https://docs.outscale.com/en/userguide/Resource-Identifiers.html).
func (o GetPoliciesLinkedToUserGroupPolicyOutput) Orn() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoliciesLinkedToUserGroupPolicy) string { return v.Orn }).(pulumi.StringOutput)
}

// The ID of the policy.
func (o GetPoliciesLinkedToUserGroupPolicyOutput) PolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoliciesLinkedToUserGroupPolicy) string { return v.PolicyId }).(pulumi.StringOutput)
}

// The name of the policy.
func (o GetPoliciesLinkedToUserGroupPolicyOutput) PolicyName() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoliciesLinkedToUserGroupPolicy) string { return v.PolicyName }).(pulumi.StringOutput)
}

type GetPoliciesLinkedToUserGroupPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetPoliciesLinkedToUserGroupPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPoliciesLinkedToUserGroupPolicy)(nil)).Elem()
}

func (o GetPoliciesLinkedToUserGroupPolicyArrayOutput) ToGetPoliciesLinkedToUserGroupPolicyArrayOutput() GetPoliciesLinkedToUserGroupPolicyArrayOutput {
	return o
}

func (o GetPoliciesLinkedToUserGroupPolicyArrayOutput) ToGetPoliciesLinkedToUserGroupPolicyArrayOutputWithContext(ctx context.Context) GetPoliciesLinkedToUserGroupPolicyArrayOutput {
	return o
}

func (o GetPoliciesLinkedToUserGroupPolicyArrayOutput) Index(i pulumi.IntInput) GetPoliciesLinkedToUserGroupPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPoliciesLinkedToUserGroupPolicy {
		return vs[0].([]GetPoliciesLinkedToUserGroupPolicy)[vs[1].(int)]
	}).(GetPoliciesLinkedToUserGroupPolicyOutput)
}

type GetPoliciesLinkedToUserPolicy struct {
	// The date and time (UTC) at which the linked policy was created.
	CreationDate string `pulumi:"creationDate"`
	// The date and time (UTC) at which the linked policy was last modified.
	LastModificationDate string `pulumi:"lastModificationDate"`
	// The OUTSCALE Resource Name (ORN) of the policy. For more information, see [Resource Identifiers](https://docs.outscale.com/en/userguide/Resource-Identifiers.html).
	Orn string `pulumi:"orn"`
	// The ID of the policy.
	PolicyId string `pulumi:"policyId"`
	// The name of the policy.
	PolicyName string `pulumi:"policyName"`
}

// GetPoliciesLinkedToUserPolicyInput is an input type that accepts GetPoliciesLinkedToUserPolicyArgs and GetPoliciesLinkedToUserPolicyOutput values.
// You can construct a concrete instance of `GetPoliciesLinkedToUserPolicyInput` via:
//
//	GetPoliciesLinkedToUserPolicyArgs{...}
type GetPoliciesLinkedToUserPolicyInput interface {
	pulumi.Input

	ToGetPoliciesLinkedToUserPolicyOutput() GetPoliciesLinkedToUserPolicyOutput
	ToGetPoliciesLinkedToUserPolicyOutputWithContext(context.Context) GetPoliciesLinkedToUserPolicyOutput
}

type GetPoliciesLinkedToUserPolicyArgs struct {
	// The date and time (UTC) at which the linked policy was created.
	CreationDate pulumi.StringInput `pulumi:"creationDate"`
	// The date and time (UTC) at which the linked policy was last modified.
	LastModificationDate pulumi.StringInput `pulumi:"lastModificationDate"`
	// The OUTSCALE Resource Name (ORN) of the policy. For more information, see [Resource Identifiers](https://docs.outscale.com/en/userguide/Resource-Identifiers.html).
	Orn pulumi.StringInput `pulumi:"orn"`
	// The ID of the policy.
	PolicyId pulumi.StringInput `pulumi:"policyId"`
	// The name of the policy.
	PolicyName pulumi.StringInput `pulumi:"policyName"`
}

func (GetPoliciesLinkedToUserPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPoliciesLinkedToUserPolicy)(nil)).Elem()
}

func (i GetPoliciesLinkedToUserPolicyArgs) ToGetPoliciesLinkedToUserPolicyOutput() GetPoliciesLinkedToUserPolicyOutput {
	return i.ToGetPoliciesLinkedToUserPolicyOutputWithContext(context.Background())
}

func (i GetPoliciesLinkedToUserPolicyArgs) ToGetPoliciesLinkedToUserPolicyOutputWithContext(ctx context.Context) GetPoliciesLinkedToUserPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPoliciesLinkedToUserPolicyOutput)
}

// GetPoliciesLinkedToUserPolicyArrayInput is an input type that accepts GetPoliciesLinkedToUserPolicyArray and GetPoliciesLinkedToUserPolicyArrayOutput values.
// You can construct a concrete instance of `GetPoliciesLinkedToUserPolicyArrayInput` via:
//
//	GetPoliciesLinkedToUserPolicyArray{ GetPoliciesLinkedToUserPolicyArgs{...} }
type GetPoliciesLinkedToUserPolicyArrayInput interface {
	pulumi.Input

	ToGetPoliciesLinkedToUserPolicyArrayOutput() GetPoliciesLinkedToUserPolicyArrayOutput
	ToGetPoliciesLinkedToUserPolicyArrayOutputWithContext(context.Context) GetPoliciesLinkedToUserPolicyArrayOutput
}

type GetPoliciesLinkedToUserPolicyArray []GetPoliciesLinkedToUserPolicyInput

func (GetPoliciesLinkedToUserPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPoliciesLinkedToUserPolicy)(nil)).Elem()
}

func (i GetPoliciesLinkedToUserPolicyArray) ToGetPoliciesLinkedToUserPolicyArrayOutput() GetPoliciesLinkedToUserPolicyArrayOutput {
	return i.ToGetPoliciesLinkedToUserPolicyArrayOutputWithContext(context.Background())
}

func (i GetPoliciesLinkedToUserPolicyArray) ToGetPoliciesLinkedToUserPolicyArrayOutputWithContext(ctx context.Context) GetPoliciesLinkedToUserPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPoliciesLinkedToUserPolicyArrayOutput)
}

type GetPoliciesLinkedToUserPolicyOutput struct{ *pulumi.OutputState }

func (GetPoliciesLinkedToUserPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPoliciesLinkedToUserPolicy)(nil)).Elem()
}

func (o GetPoliciesLinkedToUserPolicyOutput) ToGetPoliciesLinkedToUserPolicyOutput() GetPoliciesLinkedToUserPolicyOutput {
	return o
}

func (o GetPoliciesLinkedToUserPolicyOutput) ToGetPoliciesLinkedToUserPolicyOutputWithContext(ctx context.Context) GetPoliciesLinkedToUserPolicyOutput {
	return o
}

// The date and time (UTC) at which the linked policy was created.
func (o GetPoliciesLinkedToUserPolicyOutput) CreationDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoliciesLinkedToUserPolicy) string { return v.CreationDate }).(pulumi.StringOutput)
}

// The date and time (UTC) at which the linked policy was last modified.
func (o GetPoliciesLinkedToUserPolicyOutput) LastModificationDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoliciesLinkedToUserPolicy) string { return v.LastModificationDate }).(pulumi.StringOutput)
}

// The OUTSCALE Resource Name (ORN) of the policy. For more information, see [Resource Identifiers](https://docs.outscale.com/en/userguide/Resource-Identifiers.html).
func (o GetPoliciesLinkedToUserPolicyOutput) Orn() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoliciesLinkedToUserPolicy) string { return v.Orn }).(pulumi.StringOutput)
}

// The ID of the policy.
func (o GetPoliciesLinkedToUserPolicyOutput) PolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoliciesLinkedToUserPolicy) string { return v.PolicyId }).(pulumi.StringOutput)
}

// The name of the policy.
func (o GetPoliciesLinkedToUserPolicyOutput) PolicyName() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoliciesLinkedToUserPolicy) string { return v.PolicyName }).(pulumi.StringOutput)
}

type GetPoliciesLinkedToUserPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetPoliciesLinkedToUserPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPoliciesLinkedToUserPolicy)(nil)).Elem()
}

func (o GetPoliciesLinkedToUserPolicyArrayOutput) ToGetPoliciesLinkedToUserPolicyArrayOutput() GetPoliciesLinkedToUserPolicyArrayOutput {
	return o
}

func (o GetPoliciesLinkedToUserPolicyArrayOutput) ToGetPoliciesLinkedToUserPolicyArrayOutputWithContext(ctx context.Context) GetPoliciesLinkedToUserPolicyArrayOutput {
	return o
}

func (o GetPoliciesLinkedToUserPolicyArrayOutput) Index(i pulumi.IntInput) GetPoliciesLinkedToUserPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPoliciesLinkedToUserPolicy {
		return vs[0].([]GetPoliciesLinkedToUserPolicy)[vs[1].(int)]
	}).(GetPoliciesLinkedToUserPolicyOutput)
}

type GetPoliciesPolicy struct {
	// The date and time (UTC) at which the policy was created.
	CreationDate string `pulumi:"creationDate"`
	// A friendly name for the policy (between 0 and 1000 characters).
	Description string `pulumi:"description"`
	// Indicates whether the policy can be linked to a group or an EIM user.
	IsLinkable bool `pulumi:"isLinkable"`
	// The date and time (UTC) at which the policy was last modified.
	LastModificationDate string `pulumi:"lastModificationDate"`
	// The OUTSCALE Resource Name (ORN) of the policy. For more information, see [Resource Identifiers](https://docs.outscale.com/en/userguide/Resource-Identifiers.html).
	Orn string `pulumi:"orn"`
	// The path to the policy.
	Path string `pulumi:"path"`
	// The ID of the policy default version.
	PolicyDefaultVersionId string `pulumi:"policyDefaultVersionId"`
	// The ID of the policy.
	PolicyId string `pulumi:"policyId"`
	// The name of the policy.
	PolicyName string `pulumi:"policyName"`
	// The number of resources attached to the policy.
	ResourcesCount int `pulumi:"resourcesCount"`
}

// GetPoliciesPolicyInput is an input type that accepts GetPoliciesPolicyArgs and GetPoliciesPolicyOutput values.
// You can construct a concrete instance of `GetPoliciesPolicyInput` via:
//
//	GetPoliciesPolicyArgs{...}
type GetPoliciesPolicyInput interface {
	pulumi.Input

	ToGetPoliciesPolicyOutput() GetPoliciesPolicyOutput
	ToGetPoliciesPolicyOutputWithContext(context.Context) GetPoliciesPolicyOutput
}

type GetPoliciesPolicyArgs struct {
	// The date and time (UTC) at which the policy was created.
	CreationDate pulumi.StringInput `pulumi:"creationDate"`
	// A friendly name for the policy (between 0 and 1000 characters).
	Description pulumi.StringInput `pulumi:"description"`
	// Indicates whether the policy can be linked to a group or an EIM user.
	IsLinkable pulumi.BoolInput `pulumi:"isLinkable"`
	// The date and time (UTC) at which the policy was last modified.
	LastModificationDate pulumi.StringInput `pulumi:"lastModificationDate"`
	// The OUTSCALE Resource Name (ORN) of the policy. For more information, see [Resource Identifiers](https://docs.outscale.com/en/userguide/Resource-Identifiers.html).
	Orn pulumi.StringInput `pulumi:"orn"`
	// The path to the policy.
	Path pulumi.StringInput `pulumi:"path"`
	// The ID of the policy default version.
	PolicyDefaultVersionId pulumi.StringInput `pulumi:"policyDefaultVersionId"`
	// The ID of the policy.
	PolicyId pulumi.StringInput `pulumi:"policyId"`
	// The name of the policy.
	PolicyName pulumi.StringInput `pulumi:"policyName"`
	// The number of resources attached to the policy.
	ResourcesCount pulumi.IntInput `pulumi:"resourcesCount"`
}

func (GetPoliciesPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPoliciesPolicy)(nil)).Elem()
}

func (i GetPoliciesPolicyArgs) ToGetPoliciesPolicyOutput() GetPoliciesPolicyOutput {
	return i.ToGetPoliciesPolicyOutputWithContext(context.Background())
}

func (i GetPoliciesPolicyArgs) ToGetPoliciesPolicyOutputWithContext(ctx context.Context) GetPoliciesPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPoliciesPolicyOutput)
}

// GetPoliciesPolicyArrayInput is an input type that accepts GetPoliciesPolicyArray and GetPoliciesPolicyArrayOutput values.
// You can construct a concrete instance of `GetPoliciesPolicyArrayInput` via:
//
//	GetPoliciesPolicyArray{ GetPoliciesPolicyArgs{...} }
type GetPoliciesPolicyArrayInput interface {
	pulumi.Input

	ToGetPoliciesPolicyArrayOutput() GetPoliciesPolicyArrayOutput
	ToGetPoliciesPolicyArrayOutputWithContext(context.Context) GetPoliciesPolicyArrayOutput
}

type GetPoliciesPolicyArray []GetPoliciesPolicyInput

func (GetPoliciesPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPoliciesPolicy)(nil)).Elem()
}

func (i GetPoliciesPolicyArray) ToGetPoliciesPolicyArrayOutput() GetPoliciesPolicyArrayOutput {
	return i.ToGetPoliciesPolicyArrayOutputWithContext(context.Background())
}

func (i GetPoliciesPolicyArray) ToGetPoliciesPolicyArrayOutputWithContext(ctx context.Context) GetPoliciesPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPoliciesPolicyArrayOutput)
}

type GetPoliciesPolicyOutput struct{ *pulumi.OutputState }

func (GetPoliciesPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPoliciesPolicy)(nil)).Elem()
}

func (o GetPoliciesPolicyOutput) ToGetPoliciesPolicyOutput() GetPoliciesPolicyOutput {
	return o
}

func (o GetPoliciesPolicyOutput) ToGetPoliciesPolicyOutputWithContext(ctx context.Context) GetPoliciesPolicyOutput {
	return o
}

// The date and time (UTC) at which the policy was created.
func (o GetPoliciesPolicyOutput) CreationDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoliciesPolicy) string { return v.CreationDate }).(pulumi.StringOutput)
}

// A friendly name for the policy (between 0 and 1000 characters).
func (o GetPoliciesPolicyOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoliciesPolicy) string { return v.Description }).(pulumi.StringOutput)
}

// Indicates whether the policy can be linked to a group or an EIM user.
func (o GetPoliciesPolicyOutput) IsLinkable() pulumi.BoolOutput {
	return o.ApplyT(func(v GetPoliciesPolicy) bool { return v.IsLinkable }).(pulumi.BoolOutput)
}

// The date and time (UTC) at which the policy was last modified.
func (o GetPoliciesPolicyOutput) LastModificationDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoliciesPolicy) string { return v.LastModificationDate }).(pulumi.StringOutput)
}

// The OUTSCALE Resource Name (ORN) of the policy. For more information, see [Resource Identifiers](https://docs.outscale.com/en/userguide/Resource-Identifiers.html).
func (o GetPoliciesPolicyOutput) Orn() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoliciesPolicy) string { return v.Orn }).(pulumi.StringOutput)
}

// The path to the policy.
func (o GetPoliciesPolicyOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoliciesPolicy) string { return v.Path }).(pulumi.StringOutput)
}

// The ID of the policy default version.
func (o GetPoliciesPolicyOutput) PolicyDefaultVersionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoliciesPolicy) string { return v.PolicyDefaultVersionId }).(pulumi.StringOutput)
}

// The ID of the policy.
func (o GetPoliciesPolicyOutput) PolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoliciesPolicy) string { return v.PolicyId }).(pulumi.StringOutput)
}

// The name of the policy.
func (o GetPoliciesPolicyOutput) PolicyName() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoliciesPolicy) string { return v.PolicyName }).(pulumi.StringOutput)
}

// The number of resources attached to the policy.
func (o GetPoliciesPolicyOutput) ResourcesCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetPoliciesPolicy) int { return v.ResourcesCount }).(pulumi.IntOutput)
}

type GetPoliciesPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetPoliciesPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPoliciesPolicy)(nil)).Elem()
}

func (o GetPoliciesPolicyArrayOutput) ToGetPoliciesPolicyArrayOutput() GetPoliciesPolicyArrayOutput {
	return o
}

func (o GetPoliciesPolicyArrayOutput) ToGetPoliciesPolicyArrayOutputWithContext(ctx context.Context) GetPoliciesPolicyArrayOutput {
	return o
}

func (o GetPoliciesPolicyArrayOutput) Index(i pulumi.IntInput) GetPoliciesPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPoliciesPolicy {
		return vs[0].([]GetPoliciesPolicy)[vs[1].(int)]
	}).(GetPoliciesPolicyOutput)
}

type GetProductTypeFilter struct {
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// GetProductTypeFilterInput is an input type that accepts GetProductTypeFilterArgs and GetProductTypeFilterOutput values.
// You can construct a concrete instance of `GetProductTypeFilterInput` via:
//
//	GetProductTypeFilterArgs{...}
type GetProductTypeFilterInput interface {
	pulumi.Input

	ToGetProductTypeFilterOutput() GetProductTypeFilterOutput
	ToGetProductTypeFilterOutputWithContext(context.Context) GetProductTypeFilterOutput
}

type GetProductTypeFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetProductTypeFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProductTypeFilter)(nil)).Elem()
}

func (i GetProductTypeFilterArgs) ToGetProductTypeFilterOutput() GetProductTypeFilterOutput {
	return i.ToGetProductTypeFilterOutputWithContext(context.Background())
}

func (i GetProductTypeFilterArgs) ToGetProductTypeFilterOutputWithContext(ctx context.Context) GetProductTypeFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProductTypeFilterOutput)
}

// GetProductTypeFilterArrayInput is an input type that accepts GetProductTypeFilterArray and GetProductTypeFilterArrayOutput values.
// You can construct a concrete instance of `GetProductTypeFilterArrayInput` via:
//
//	GetProductTypeFilterArray{ GetProductTypeFilterArgs{...} }
type GetProductTypeFilterArrayInput interface {
	pulumi.Input

	ToGetProductTypeFilterArrayOutput() GetProductTypeFilterArrayOutput
	ToGetProductTypeFilterArrayOutputWithContext(context.Context) GetProductTypeFilterArrayOutput
}

type GetProductTypeFilterArray []GetProductTypeFilterInput

func (GetProductTypeFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProductTypeFilter)(nil)).Elem()
}

func (i GetProductTypeFilterArray) ToGetProductTypeFilterArrayOutput() GetProductTypeFilterArrayOutput {
	return i.ToGetProductTypeFilterArrayOutputWithContext(context.Background())
}

func (i GetProductTypeFilterArray) ToGetProductTypeFilterArrayOutputWithContext(ctx context.Context) GetProductTypeFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProductTypeFilterArrayOutput)
}

type GetProductTypeFilterOutput struct{ *pulumi.OutputState }

func (GetProductTypeFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProductTypeFilter)(nil)).Elem()
}

func (o GetProductTypeFilterOutput) ToGetProductTypeFilterOutput() GetProductTypeFilterOutput {
	return o
}

func (o GetProductTypeFilterOutput) ToGetProductTypeFilterOutputWithContext(ctx context.Context) GetProductTypeFilterOutput {
	return o
}

func (o GetProductTypeFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetProductTypeFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetProductTypeFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetProductTypeFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetProductTypeFilterArrayOutput struct{ *pulumi.OutputState }

func (GetProductTypeFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProductTypeFilter)(nil)).Elem()
}

func (o GetProductTypeFilterArrayOutput) ToGetProductTypeFilterArrayOutput() GetProductTypeFilterArrayOutput {
	return o
}

func (o GetProductTypeFilterArrayOutput) ToGetProductTypeFilterArrayOutputWithContext(ctx context.Context) GetProductTypeFilterArrayOutput {
	return o
}

func (o GetProductTypeFilterArrayOutput) Index(i pulumi.IntInput) GetProductTypeFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProductTypeFilter {
		return vs[0].([]GetProductTypeFilter)[vs[1].(int)]
	}).(GetProductTypeFilterOutput)
}

type GetProductTypesFilter struct {
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// GetProductTypesFilterInput is an input type that accepts GetProductTypesFilterArgs and GetProductTypesFilterOutput values.
// You can construct a concrete instance of `GetProductTypesFilterInput` via:
//
//	GetProductTypesFilterArgs{...}
type GetProductTypesFilterInput interface {
	pulumi.Input

	ToGetProductTypesFilterOutput() GetProductTypesFilterOutput
	ToGetProductTypesFilterOutputWithContext(context.Context) GetProductTypesFilterOutput
}

type GetProductTypesFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetProductTypesFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProductTypesFilter)(nil)).Elem()
}

func (i GetProductTypesFilterArgs) ToGetProductTypesFilterOutput() GetProductTypesFilterOutput {
	return i.ToGetProductTypesFilterOutputWithContext(context.Background())
}

func (i GetProductTypesFilterArgs) ToGetProductTypesFilterOutputWithContext(ctx context.Context) GetProductTypesFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProductTypesFilterOutput)
}

// GetProductTypesFilterArrayInput is an input type that accepts GetProductTypesFilterArray and GetProductTypesFilterArrayOutput values.
// You can construct a concrete instance of `GetProductTypesFilterArrayInput` via:
//
//	GetProductTypesFilterArray{ GetProductTypesFilterArgs{...} }
type GetProductTypesFilterArrayInput interface {
	pulumi.Input

	ToGetProductTypesFilterArrayOutput() GetProductTypesFilterArrayOutput
	ToGetProductTypesFilterArrayOutputWithContext(context.Context) GetProductTypesFilterArrayOutput
}

type GetProductTypesFilterArray []GetProductTypesFilterInput

func (GetProductTypesFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProductTypesFilter)(nil)).Elem()
}

func (i GetProductTypesFilterArray) ToGetProductTypesFilterArrayOutput() GetProductTypesFilterArrayOutput {
	return i.ToGetProductTypesFilterArrayOutputWithContext(context.Background())
}

func (i GetProductTypesFilterArray) ToGetProductTypesFilterArrayOutputWithContext(ctx context.Context) GetProductTypesFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProductTypesFilterArrayOutput)
}

type GetProductTypesFilterOutput struct{ *pulumi.OutputState }

func (GetProductTypesFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProductTypesFilter)(nil)).Elem()
}

func (o GetProductTypesFilterOutput) ToGetProductTypesFilterOutput() GetProductTypesFilterOutput {
	return o
}

func (o GetProductTypesFilterOutput) ToGetProductTypesFilterOutputWithContext(ctx context.Context) GetProductTypesFilterOutput {
	return o
}

func (o GetProductTypesFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetProductTypesFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetProductTypesFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetProductTypesFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetProductTypesFilterArrayOutput struct{ *pulumi.OutputState }

func (GetProductTypesFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProductTypesFilter)(nil)).Elem()
}

func (o GetProductTypesFilterArrayOutput) ToGetProductTypesFilterArrayOutput() GetProductTypesFilterArrayOutput {
	return o
}

func (o GetProductTypesFilterArrayOutput) ToGetProductTypesFilterArrayOutputWithContext(ctx context.Context) GetProductTypesFilterArrayOutput {
	return o
}

func (o GetProductTypesFilterArrayOutput) Index(i pulumi.IntInput) GetProductTypesFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProductTypesFilter {
		return vs[0].([]GetProductTypesFilter)[vs[1].(int)]
	}).(GetProductTypesFilterOutput)
}

type GetProductTypesProductType struct {
	// The description of the product type.
	Description string `pulumi:"description"`
	// The ID of the product type.
	ProductTypeId string `pulumi:"productTypeId"`
	// The vendor of the product type.
	Vendor string `pulumi:"vendor"`
}

// GetProductTypesProductTypeInput is an input type that accepts GetProductTypesProductTypeArgs and GetProductTypesProductTypeOutput values.
// You can construct a concrete instance of `GetProductTypesProductTypeInput` via:
//
//	GetProductTypesProductTypeArgs{...}
type GetProductTypesProductTypeInput interface {
	pulumi.Input

	ToGetProductTypesProductTypeOutput() GetProductTypesProductTypeOutput
	ToGetProductTypesProductTypeOutputWithContext(context.Context) GetProductTypesProductTypeOutput
}

type GetProductTypesProductTypeArgs struct {
	// The description of the product type.
	Description pulumi.StringInput `pulumi:"description"`
	// The ID of the product type.
	ProductTypeId pulumi.StringInput `pulumi:"productTypeId"`
	// The vendor of the product type.
	Vendor pulumi.StringInput `pulumi:"vendor"`
}

func (GetProductTypesProductTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProductTypesProductType)(nil)).Elem()
}

func (i GetProductTypesProductTypeArgs) ToGetProductTypesProductTypeOutput() GetProductTypesProductTypeOutput {
	return i.ToGetProductTypesProductTypeOutputWithContext(context.Background())
}

func (i GetProductTypesProductTypeArgs) ToGetProductTypesProductTypeOutputWithContext(ctx context.Context) GetProductTypesProductTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProductTypesProductTypeOutput)
}

// GetProductTypesProductTypeArrayInput is an input type that accepts GetProductTypesProductTypeArray and GetProductTypesProductTypeArrayOutput values.
// You can construct a concrete instance of `GetProductTypesProductTypeArrayInput` via:
//
//	GetProductTypesProductTypeArray{ GetProductTypesProductTypeArgs{...} }
type GetProductTypesProductTypeArrayInput interface {
	pulumi.Input

	ToGetProductTypesProductTypeArrayOutput() GetProductTypesProductTypeArrayOutput
	ToGetProductTypesProductTypeArrayOutputWithContext(context.Context) GetProductTypesProductTypeArrayOutput
}

type GetProductTypesProductTypeArray []GetProductTypesProductTypeInput

func (GetProductTypesProductTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProductTypesProductType)(nil)).Elem()
}

func (i GetProductTypesProductTypeArray) ToGetProductTypesProductTypeArrayOutput() GetProductTypesProductTypeArrayOutput {
	return i.ToGetProductTypesProductTypeArrayOutputWithContext(context.Background())
}

func (i GetProductTypesProductTypeArray) ToGetProductTypesProductTypeArrayOutputWithContext(ctx context.Context) GetProductTypesProductTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProductTypesProductTypeArrayOutput)
}

type GetProductTypesProductTypeOutput struct{ *pulumi.OutputState }

func (GetProductTypesProductTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProductTypesProductType)(nil)).Elem()
}

func (o GetProductTypesProductTypeOutput) ToGetProductTypesProductTypeOutput() GetProductTypesProductTypeOutput {
	return o
}

func (o GetProductTypesProductTypeOutput) ToGetProductTypesProductTypeOutputWithContext(ctx context.Context) GetProductTypesProductTypeOutput {
	return o
}

// The description of the product type.
func (o GetProductTypesProductTypeOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetProductTypesProductType) string { return v.Description }).(pulumi.StringOutput)
}

// The ID of the product type.
func (o GetProductTypesProductTypeOutput) ProductTypeId() pulumi.StringOutput {
	return o.ApplyT(func(v GetProductTypesProductType) string { return v.ProductTypeId }).(pulumi.StringOutput)
}

// The vendor of the product type.
func (o GetProductTypesProductTypeOutput) Vendor() pulumi.StringOutput {
	return o.ApplyT(func(v GetProductTypesProductType) string { return v.Vendor }).(pulumi.StringOutput)
}

type GetProductTypesProductTypeArrayOutput struct{ *pulumi.OutputState }

func (GetProductTypesProductTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProductTypesProductType)(nil)).Elem()
}

func (o GetProductTypesProductTypeArrayOutput) ToGetProductTypesProductTypeArrayOutput() GetProductTypesProductTypeArrayOutput {
	return o
}

func (o GetProductTypesProductTypeArrayOutput) ToGetProductTypesProductTypeArrayOutputWithContext(ctx context.Context) GetProductTypesProductTypeArrayOutput {
	return o
}

func (o GetProductTypesProductTypeArrayOutput) Index(i pulumi.IntInput) GetProductTypesProductTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProductTypesProductType {
		return vs[0].([]GetProductTypesProductType)[vs[1].(int)]
	}).(GetProductTypesProductTypeOutput)
}

type GetPublicCatalogCatalog struct {
	Entries []GetPublicCatalogCatalogEntry `pulumi:"entries"`
}

// GetPublicCatalogCatalogInput is an input type that accepts GetPublicCatalogCatalogArgs and GetPublicCatalogCatalogOutput values.
// You can construct a concrete instance of `GetPublicCatalogCatalogInput` via:
//
//	GetPublicCatalogCatalogArgs{...}
type GetPublicCatalogCatalogInput interface {
	pulumi.Input

	ToGetPublicCatalogCatalogOutput() GetPublicCatalogCatalogOutput
	ToGetPublicCatalogCatalogOutputWithContext(context.Context) GetPublicCatalogCatalogOutput
}

type GetPublicCatalogCatalogArgs struct {
	Entries GetPublicCatalogCatalogEntryArrayInput `pulumi:"entries"`
}

func (GetPublicCatalogCatalogArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPublicCatalogCatalog)(nil)).Elem()
}

func (i GetPublicCatalogCatalogArgs) ToGetPublicCatalogCatalogOutput() GetPublicCatalogCatalogOutput {
	return i.ToGetPublicCatalogCatalogOutputWithContext(context.Background())
}

func (i GetPublicCatalogCatalogArgs) ToGetPublicCatalogCatalogOutputWithContext(ctx context.Context) GetPublicCatalogCatalogOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPublicCatalogCatalogOutput)
}

// GetPublicCatalogCatalogArrayInput is an input type that accepts GetPublicCatalogCatalogArray and GetPublicCatalogCatalogArrayOutput values.
// You can construct a concrete instance of `GetPublicCatalogCatalogArrayInput` via:
//
//	GetPublicCatalogCatalogArray{ GetPublicCatalogCatalogArgs{...} }
type GetPublicCatalogCatalogArrayInput interface {
	pulumi.Input

	ToGetPublicCatalogCatalogArrayOutput() GetPublicCatalogCatalogArrayOutput
	ToGetPublicCatalogCatalogArrayOutputWithContext(context.Context) GetPublicCatalogCatalogArrayOutput
}

type GetPublicCatalogCatalogArray []GetPublicCatalogCatalogInput

func (GetPublicCatalogCatalogArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPublicCatalogCatalog)(nil)).Elem()
}

func (i GetPublicCatalogCatalogArray) ToGetPublicCatalogCatalogArrayOutput() GetPublicCatalogCatalogArrayOutput {
	return i.ToGetPublicCatalogCatalogArrayOutputWithContext(context.Background())
}

func (i GetPublicCatalogCatalogArray) ToGetPublicCatalogCatalogArrayOutputWithContext(ctx context.Context) GetPublicCatalogCatalogArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPublicCatalogCatalogArrayOutput)
}

type GetPublicCatalogCatalogOutput struct{ *pulumi.OutputState }

func (GetPublicCatalogCatalogOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPublicCatalogCatalog)(nil)).Elem()
}

func (o GetPublicCatalogCatalogOutput) ToGetPublicCatalogCatalogOutput() GetPublicCatalogCatalogOutput {
	return o
}

func (o GetPublicCatalogCatalogOutput) ToGetPublicCatalogCatalogOutputWithContext(ctx context.Context) GetPublicCatalogCatalogOutput {
	return o
}

func (o GetPublicCatalogCatalogOutput) Entries() GetPublicCatalogCatalogEntryArrayOutput {
	return o.ApplyT(func(v GetPublicCatalogCatalog) []GetPublicCatalogCatalogEntry { return v.Entries }).(GetPublicCatalogCatalogEntryArrayOutput)
}

type GetPublicCatalogCatalogArrayOutput struct{ *pulumi.OutputState }

func (GetPublicCatalogCatalogArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPublicCatalogCatalog)(nil)).Elem()
}

func (o GetPublicCatalogCatalogArrayOutput) ToGetPublicCatalogCatalogArrayOutput() GetPublicCatalogCatalogArrayOutput {
	return o
}

func (o GetPublicCatalogCatalogArrayOutput) ToGetPublicCatalogCatalogArrayOutputWithContext(ctx context.Context) GetPublicCatalogCatalogArrayOutput {
	return o
}

func (o GetPublicCatalogCatalogArrayOutput) Index(i pulumi.IntInput) GetPublicCatalogCatalogOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPublicCatalogCatalog {
		return vs[0].([]GetPublicCatalogCatalog)[vs[1].(int)]
	}).(GetPublicCatalogCatalogOutput)
}

type GetPublicCatalogCatalogEntry struct {
	Category      string  `pulumi:"category"`
	Flags         string  `pulumi:"flags"`
	Operation     string  `pulumi:"operation"`
	Service       string  `pulumi:"service"`
	SubregionName string  `pulumi:"subregionName"`
	Title         string  `pulumi:"title"`
	Type          string  `pulumi:"type"`
	UnitPrice     float64 `pulumi:"unitPrice"`
}

// GetPublicCatalogCatalogEntryInput is an input type that accepts GetPublicCatalogCatalogEntryArgs and GetPublicCatalogCatalogEntryOutput values.
// You can construct a concrete instance of `GetPublicCatalogCatalogEntryInput` via:
//
//	GetPublicCatalogCatalogEntryArgs{...}
type GetPublicCatalogCatalogEntryInput interface {
	pulumi.Input

	ToGetPublicCatalogCatalogEntryOutput() GetPublicCatalogCatalogEntryOutput
	ToGetPublicCatalogCatalogEntryOutputWithContext(context.Context) GetPublicCatalogCatalogEntryOutput
}

type GetPublicCatalogCatalogEntryArgs struct {
	Category      pulumi.StringInput  `pulumi:"category"`
	Flags         pulumi.StringInput  `pulumi:"flags"`
	Operation     pulumi.StringInput  `pulumi:"operation"`
	Service       pulumi.StringInput  `pulumi:"service"`
	SubregionName pulumi.StringInput  `pulumi:"subregionName"`
	Title         pulumi.StringInput  `pulumi:"title"`
	Type          pulumi.StringInput  `pulumi:"type"`
	UnitPrice     pulumi.Float64Input `pulumi:"unitPrice"`
}

func (GetPublicCatalogCatalogEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPublicCatalogCatalogEntry)(nil)).Elem()
}

func (i GetPublicCatalogCatalogEntryArgs) ToGetPublicCatalogCatalogEntryOutput() GetPublicCatalogCatalogEntryOutput {
	return i.ToGetPublicCatalogCatalogEntryOutputWithContext(context.Background())
}

func (i GetPublicCatalogCatalogEntryArgs) ToGetPublicCatalogCatalogEntryOutputWithContext(ctx context.Context) GetPublicCatalogCatalogEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPublicCatalogCatalogEntryOutput)
}

// GetPublicCatalogCatalogEntryArrayInput is an input type that accepts GetPublicCatalogCatalogEntryArray and GetPublicCatalogCatalogEntryArrayOutput values.
// You can construct a concrete instance of `GetPublicCatalogCatalogEntryArrayInput` via:
//
//	GetPublicCatalogCatalogEntryArray{ GetPublicCatalogCatalogEntryArgs{...} }
type GetPublicCatalogCatalogEntryArrayInput interface {
	pulumi.Input

	ToGetPublicCatalogCatalogEntryArrayOutput() GetPublicCatalogCatalogEntryArrayOutput
	ToGetPublicCatalogCatalogEntryArrayOutputWithContext(context.Context) GetPublicCatalogCatalogEntryArrayOutput
}

type GetPublicCatalogCatalogEntryArray []GetPublicCatalogCatalogEntryInput

func (GetPublicCatalogCatalogEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPublicCatalogCatalogEntry)(nil)).Elem()
}

func (i GetPublicCatalogCatalogEntryArray) ToGetPublicCatalogCatalogEntryArrayOutput() GetPublicCatalogCatalogEntryArrayOutput {
	return i.ToGetPublicCatalogCatalogEntryArrayOutputWithContext(context.Background())
}

func (i GetPublicCatalogCatalogEntryArray) ToGetPublicCatalogCatalogEntryArrayOutputWithContext(ctx context.Context) GetPublicCatalogCatalogEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPublicCatalogCatalogEntryArrayOutput)
}

type GetPublicCatalogCatalogEntryOutput struct{ *pulumi.OutputState }

func (GetPublicCatalogCatalogEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPublicCatalogCatalogEntry)(nil)).Elem()
}

func (o GetPublicCatalogCatalogEntryOutput) ToGetPublicCatalogCatalogEntryOutput() GetPublicCatalogCatalogEntryOutput {
	return o
}

func (o GetPublicCatalogCatalogEntryOutput) ToGetPublicCatalogCatalogEntryOutputWithContext(ctx context.Context) GetPublicCatalogCatalogEntryOutput {
	return o
}

func (o GetPublicCatalogCatalogEntryOutput) Category() pulumi.StringOutput {
	return o.ApplyT(func(v GetPublicCatalogCatalogEntry) string { return v.Category }).(pulumi.StringOutput)
}

func (o GetPublicCatalogCatalogEntryOutput) Flags() pulumi.StringOutput {
	return o.ApplyT(func(v GetPublicCatalogCatalogEntry) string { return v.Flags }).(pulumi.StringOutput)
}

func (o GetPublicCatalogCatalogEntryOutput) Operation() pulumi.StringOutput {
	return o.ApplyT(func(v GetPublicCatalogCatalogEntry) string { return v.Operation }).(pulumi.StringOutput)
}

func (o GetPublicCatalogCatalogEntryOutput) Service() pulumi.StringOutput {
	return o.ApplyT(func(v GetPublicCatalogCatalogEntry) string { return v.Service }).(pulumi.StringOutput)
}

func (o GetPublicCatalogCatalogEntryOutput) SubregionName() pulumi.StringOutput {
	return o.ApplyT(func(v GetPublicCatalogCatalogEntry) string { return v.SubregionName }).(pulumi.StringOutput)
}

func (o GetPublicCatalogCatalogEntryOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v GetPublicCatalogCatalogEntry) string { return v.Title }).(pulumi.StringOutput)
}

func (o GetPublicCatalogCatalogEntryOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetPublicCatalogCatalogEntry) string { return v.Type }).(pulumi.StringOutput)
}

func (o GetPublicCatalogCatalogEntryOutput) UnitPrice() pulumi.Float64Output {
	return o.ApplyT(func(v GetPublicCatalogCatalogEntry) float64 { return v.UnitPrice }).(pulumi.Float64Output)
}

type GetPublicCatalogCatalogEntryArrayOutput struct{ *pulumi.OutputState }

func (GetPublicCatalogCatalogEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPublicCatalogCatalogEntry)(nil)).Elem()
}

func (o GetPublicCatalogCatalogEntryArrayOutput) ToGetPublicCatalogCatalogEntryArrayOutput() GetPublicCatalogCatalogEntryArrayOutput {
	return o
}

func (o GetPublicCatalogCatalogEntryArrayOutput) ToGetPublicCatalogCatalogEntryArrayOutputWithContext(ctx context.Context) GetPublicCatalogCatalogEntryArrayOutput {
	return o
}

func (o GetPublicCatalogCatalogEntryArrayOutput) Index(i pulumi.IntInput) GetPublicCatalogCatalogEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPublicCatalogCatalogEntry {
		return vs[0].([]GetPublicCatalogCatalogEntry)[vs[1].(int)]
	}).(GetPublicCatalogCatalogEntryOutput)
}

type GetPublicIpFilter struct {
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// GetPublicIpFilterInput is an input type that accepts GetPublicIpFilterArgs and GetPublicIpFilterOutput values.
// You can construct a concrete instance of `GetPublicIpFilterInput` via:
//
//	GetPublicIpFilterArgs{...}
type GetPublicIpFilterInput interface {
	pulumi.Input

	ToGetPublicIpFilterOutput() GetPublicIpFilterOutput
	ToGetPublicIpFilterOutputWithContext(context.Context) GetPublicIpFilterOutput
}

type GetPublicIpFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetPublicIpFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPublicIpFilter)(nil)).Elem()
}

func (i GetPublicIpFilterArgs) ToGetPublicIpFilterOutput() GetPublicIpFilterOutput {
	return i.ToGetPublicIpFilterOutputWithContext(context.Background())
}

func (i GetPublicIpFilterArgs) ToGetPublicIpFilterOutputWithContext(ctx context.Context) GetPublicIpFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPublicIpFilterOutput)
}

// GetPublicIpFilterArrayInput is an input type that accepts GetPublicIpFilterArray and GetPublicIpFilterArrayOutput values.
// You can construct a concrete instance of `GetPublicIpFilterArrayInput` via:
//
//	GetPublicIpFilterArray{ GetPublicIpFilterArgs{...} }
type GetPublicIpFilterArrayInput interface {
	pulumi.Input

	ToGetPublicIpFilterArrayOutput() GetPublicIpFilterArrayOutput
	ToGetPublicIpFilterArrayOutputWithContext(context.Context) GetPublicIpFilterArrayOutput
}

type GetPublicIpFilterArray []GetPublicIpFilterInput

func (GetPublicIpFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPublicIpFilter)(nil)).Elem()
}

func (i GetPublicIpFilterArray) ToGetPublicIpFilterArrayOutput() GetPublicIpFilterArrayOutput {
	return i.ToGetPublicIpFilterArrayOutputWithContext(context.Background())
}

func (i GetPublicIpFilterArray) ToGetPublicIpFilterArrayOutputWithContext(ctx context.Context) GetPublicIpFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPublicIpFilterArrayOutput)
}

type GetPublicIpFilterOutput struct{ *pulumi.OutputState }

func (GetPublicIpFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPublicIpFilter)(nil)).Elem()
}

func (o GetPublicIpFilterOutput) ToGetPublicIpFilterOutput() GetPublicIpFilterOutput {
	return o
}

func (o GetPublicIpFilterOutput) ToGetPublicIpFilterOutputWithContext(ctx context.Context) GetPublicIpFilterOutput {
	return o
}

func (o GetPublicIpFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPublicIpFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetPublicIpFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetPublicIpFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetPublicIpFilterArrayOutput struct{ *pulumi.OutputState }

func (GetPublicIpFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPublicIpFilter)(nil)).Elem()
}

func (o GetPublicIpFilterArrayOutput) ToGetPublicIpFilterArrayOutput() GetPublicIpFilterArrayOutput {
	return o
}

func (o GetPublicIpFilterArrayOutput) ToGetPublicIpFilterArrayOutputWithContext(ctx context.Context) GetPublicIpFilterArrayOutput {
	return o
}

func (o GetPublicIpFilterArrayOutput) Index(i pulumi.IntInput) GetPublicIpFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPublicIpFilter {
		return vs[0].([]GetPublicIpFilter)[vs[1].(int)]
	}).(GetPublicIpFilterOutput)
}

type GetPublicIpTag struct {
	// The key of the tag, with a minimum of 1 character.
	Key string `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value string `pulumi:"value"`
}

// GetPublicIpTagInput is an input type that accepts GetPublicIpTagArgs and GetPublicIpTagOutput values.
// You can construct a concrete instance of `GetPublicIpTagInput` via:
//
//	GetPublicIpTagArgs{...}
type GetPublicIpTagInput interface {
	pulumi.Input

	ToGetPublicIpTagOutput() GetPublicIpTagOutput
	ToGetPublicIpTagOutputWithContext(context.Context) GetPublicIpTagOutput
}

type GetPublicIpTagArgs struct {
	// The key of the tag, with a minimum of 1 character.
	Key pulumi.StringInput `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetPublicIpTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPublicIpTag)(nil)).Elem()
}

func (i GetPublicIpTagArgs) ToGetPublicIpTagOutput() GetPublicIpTagOutput {
	return i.ToGetPublicIpTagOutputWithContext(context.Background())
}

func (i GetPublicIpTagArgs) ToGetPublicIpTagOutputWithContext(ctx context.Context) GetPublicIpTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPublicIpTagOutput)
}

// GetPublicIpTagArrayInput is an input type that accepts GetPublicIpTagArray and GetPublicIpTagArrayOutput values.
// You can construct a concrete instance of `GetPublicIpTagArrayInput` via:
//
//	GetPublicIpTagArray{ GetPublicIpTagArgs{...} }
type GetPublicIpTagArrayInput interface {
	pulumi.Input

	ToGetPublicIpTagArrayOutput() GetPublicIpTagArrayOutput
	ToGetPublicIpTagArrayOutputWithContext(context.Context) GetPublicIpTagArrayOutput
}

type GetPublicIpTagArray []GetPublicIpTagInput

func (GetPublicIpTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPublicIpTag)(nil)).Elem()
}

func (i GetPublicIpTagArray) ToGetPublicIpTagArrayOutput() GetPublicIpTagArrayOutput {
	return i.ToGetPublicIpTagArrayOutputWithContext(context.Background())
}

func (i GetPublicIpTagArray) ToGetPublicIpTagArrayOutputWithContext(ctx context.Context) GetPublicIpTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPublicIpTagArrayOutput)
}

type GetPublicIpTagOutput struct{ *pulumi.OutputState }

func (GetPublicIpTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPublicIpTag)(nil)).Elem()
}

func (o GetPublicIpTagOutput) ToGetPublicIpTagOutput() GetPublicIpTagOutput {
	return o
}

func (o GetPublicIpTagOutput) ToGetPublicIpTagOutputWithContext(ctx context.Context) GetPublicIpTagOutput {
	return o
}

// The key of the tag, with a minimum of 1 character.
func (o GetPublicIpTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetPublicIpTag) string { return v.Key }).(pulumi.StringOutput)
}

// The value of the tag, between 0 and 255 characters.
func (o GetPublicIpTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetPublicIpTag) string { return v.Value }).(pulumi.StringOutput)
}

type GetPublicIpTagArrayOutput struct{ *pulumi.OutputState }

func (GetPublicIpTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPublicIpTag)(nil)).Elem()
}

func (o GetPublicIpTagArrayOutput) ToGetPublicIpTagArrayOutput() GetPublicIpTagArrayOutput {
	return o
}

func (o GetPublicIpTagArrayOutput) ToGetPublicIpTagArrayOutputWithContext(ctx context.Context) GetPublicIpTagArrayOutput {
	return o
}

func (o GetPublicIpTagArrayOutput) Index(i pulumi.IntInput) GetPublicIpTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPublicIpTag {
		return vs[0].([]GetPublicIpTag)[vs[1].(int)]
	}).(GetPublicIpTagOutput)
}

type GetPublicIpsFilter struct {
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// GetPublicIpsFilterInput is an input type that accepts GetPublicIpsFilterArgs and GetPublicIpsFilterOutput values.
// You can construct a concrete instance of `GetPublicIpsFilterInput` via:
//
//	GetPublicIpsFilterArgs{...}
type GetPublicIpsFilterInput interface {
	pulumi.Input

	ToGetPublicIpsFilterOutput() GetPublicIpsFilterOutput
	ToGetPublicIpsFilterOutputWithContext(context.Context) GetPublicIpsFilterOutput
}

type GetPublicIpsFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetPublicIpsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPublicIpsFilter)(nil)).Elem()
}

func (i GetPublicIpsFilterArgs) ToGetPublicIpsFilterOutput() GetPublicIpsFilterOutput {
	return i.ToGetPublicIpsFilterOutputWithContext(context.Background())
}

func (i GetPublicIpsFilterArgs) ToGetPublicIpsFilterOutputWithContext(ctx context.Context) GetPublicIpsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPublicIpsFilterOutput)
}

// GetPublicIpsFilterArrayInput is an input type that accepts GetPublicIpsFilterArray and GetPublicIpsFilterArrayOutput values.
// You can construct a concrete instance of `GetPublicIpsFilterArrayInput` via:
//
//	GetPublicIpsFilterArray{ GetPublicIpsFilterArgs{...} }
type GetPublicIpsFilterArrayInput interface {
	pulumi.Input

	ToGetPublicIpsFilterArrayOutput() GetPublicIpsFilterArrayOutput
	ToGetPublicIpsFilterArrayOutputWithContext(context.Context) GetPublicIpsFilterArrayOutput
}

type GetPublicIpsFilterArray []GetPublicIpsFilterInput

func (GetPublicIpsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPublicIpsFilter)(nil)).Elem()
}

func (i GetPublicIpsFilterArray) ToGetPublicIpsFilterArrayOutput() GetPublicIpsFilterArrayOutput {
	return i.ToGetPublicIpsFilterArrayOutputWithContext(context.Background())
}

func (i GetPublicIpsFilterArray) ToGetPublicIpsFilterArrayOutputWithContext(ctx context.Context) GetPublicIpsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPublicIpsFilterArrayOutput)
}

type GetPublicIpsFilterOutput struct{ *pulumi.OutputState }

func (GetPublicIpsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPublicIpsFilter)(nil)).Elem()
}

func (o GetPublicIpsFilterOutput) ToGetPublicIpsFilterOutput() GetPublicIpsFilterOutput {
	return o
}

func (o GetPublicIpsFilterOutput) ToGetPublicIpsFilterOutputWithContext(ctx context.Context) GetPublicIpsFilterOutput {
	return o
}

func (o GetPublicIpsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPublicIpsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetPublicIpsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetPublicIpsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetPublicIpsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetPublicIpsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPublicIpsFilter)(nil)).Elem()
}

func (o GetPublicIpsFilterArrayOutput) ToGetPublicIpsFilterArrayOutput() GetPublicIpsFilterArrayOutput {
	return o
}

func (o GetPublicIpsFilterArrayOutput) ToGetPublicIpsFilterArrayOutputWithContext(ctx context.Context) GetPublicIpsFilterArrayOutput {
	return o
}

func (o GetPublicIpsFilterArrayOutput) Index(i pulumi.IntInput) GetPublicIpsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPublicIpsFilter {
		return vs[0].([]GetPublicIpsFilter)[vs[1].(int)]
	}).(GetPublicIpsFilterOutput)
}

type GetPublicIpsPublicIp struct {
	// (Required in a Net) The ID representing the association of the public IP with the VM or the NIC.
	LinkPublicIpId string `pulumi:"linkPublicIpId"`
	// The account ID of the owner of the NIC.
	NicAccountId string `pulumi:"nicAccountId"`
	// The ID of the NIC the public IP is associated with (if any).
	NicId string `pulumi:"nicId"`
	// The private IP associated with the public IP.
	PrivateIp string `pulumi:"privateIp"`
	// The public IP.
	PublicIp string `pulumi:"publicIp"`
	// The allocation ID of the public IP.
	PublicIpId string `pulumi:"publicIpId"`
	// One or more tags associated with the public IP.
	Tags []GetPublicIpsPublicIpTag `pulumi:"tags"`
	// The ID of the VM the public IP is associated with (if any).
	VmId string `pulumi:"vmId"`
}

// GetPublicIpsPublicIpInput is an input type that accepts GetPublicIpsPublicIpArgs and GetPublicIpsPublicIpOutput values.
// You can construct a concrete instance of `GetPublicIpsPublicIpInput` via:
//
//	GetPublicIpsPublicIpArgs{...}
type GetPublicIpsPublicIpInput interface {
	pulumi.Input

	ToGetPublicIpsPublicIpOutput() GetPublicIpsPublicIpOutput
	ToGetPublicIpsPublicIpOutputWithContext(context.Context) GetPublicIpsPublicIpOutput
}

type GetPublicIpsPublicIpArgs struct {
	// (Required in a Net) The ID representing the association of the public IP with the VM or the NIC.
	LinkPublicIpId pulumi.StringInput `pulumi:"linkPublicIpId"`
	// The account ID of the owner of the NIC.
	NicAccountId pulumi.StringInput `pulumi:"nicAccountId"`
	// The ID of the NIC the public IP is associated with (if any).
	NicId pulumi.StringInput `pulumi:"nicId"`
	// The private IP associated with the public IP.
	PrivateIp pulumi.StringInput `pulumi:"privateIp"`
	// The public IP.
	PublicIp pulumi.StringInput `pulumi:"publicIp"`
	// The allocation ID of the public IP.
	PublicIpId pulumi.StringInput `pulumi:"publicIpId"`
	// One or more tags associated with the public IP.
	Tags GetPublicIpsPublicIpTagArrayInput `pulumi:"tags"`
	// The ID of the VM the public IP is associated with (if any).
	VmId pulumi.StringInput `pulumi:"vmId"`
}

func (GetPublicIpsPublicIpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPublicIpsPublicIp)(nil)).Elem()
}

func (i GetPublicIpsPublicIpArgs) ToGetPublicIpsPublicIpOutput() GetPublicIpsPublicIpOutput {
	return i.ToGetPublicIpsPublicIpOutputWithContext(context.Background())
}

func (i GetPublicIpsPublicIpArgs) ToGetPublicIpsPublicIpOutputWithContext(ctx context.Context) GetPublicIpsPublicIpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPublicIpsPublicIpOutput)
}

// GetPublicIpsPublicIpArrayInput is an input type that accepts GetPublicIpsPublicIpArray and GetPublicIpsPublicIpArrayOutput values.
// You can construct a concrete instance of `GetPublicIpsPublicIpArrayInput` via:
//
//	GetPublicIpsPublicIpArray{ GetPublicIpsPublicIpArgs{...} }
type GetPublicIpsPublicIpArrayInput interface {
	pulumi.Input

	ToGetPublicIpsPublicIpArrayOutput() GetPublicIpsPublicIpArrayOutput
	ToGetPublicIpsPublicIpArrayOutputWithContext(context.Context) GetPublicIpsPublicIpArrayOutput
}

type GetPublicIpsPublicIpArray []GetPublicIpsPublicIpInput

func (GetPublicIpsPublicIpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPublicIpsPublicIp)(nil)).Elem()
}

func (i GetPublicIpsPublicIpArray) ToGetPublicIpsPublicIpArrayOutput() GetPublicIpsPublicIpArrayOutput {
	return i.ToGetPublicIpsPublicIpArrayOutputWithContext(context.Background())
}

func (i GetPublicIpsPublicIpArray) ToGetPublicIpsPublicIpArrayOutputWithContext(ctx context.Context) GetPublicIpsPublicIpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPublicIpsPublicIpArrayOutput)
}

type GetPublicIpsPublicIpOutput struct{ *pulumi.OutputState }

func (GetPublicIpsPublicIpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPublicIpsPublicIp)(nil)).Elem()
}

func (o GetPublicIpsPublicIpOutput) ToGetPublicIpsPublicIpOutput() GetPublicIpsPublicIpOutput {
	return o
}

func (o GetPublicIpsPublicIpOutput) ToGetPublicIpsPublicIpOutputWithContext(ctx context.Context) GetPublicIpsPublicIpOutput {
	return o
}

// (Required in a Net) The ID representing the association of the public IP with the VM or the NIC.
func (o GetPublicIpsPublicIpOutput) LinkPublicIpId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPublicIpsPublicIp) string { return v.LinkPublicIpId }).(pulumi.StringOutput)
}

// The account ID of the owner of the NIC.
func (o GetPublicIpsPublicIpOutput) NicAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPublicIpsPublicIp) string { return v.NicAccountId }).(pulumi.StringOutput)
}

// The ID of the NIC the public IP is associated with (if any).
func (o GetPublicIpsPublicIpOutput) NicId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPublicIpsPublicIp) string { return v.NicId }).(pulumi.StringOutput)
}

// The private IP associated with the public IP.
func (o GetPublicIpsPublicIpOutput) PrivateIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetPublicIpsPublicIp) string { return v.PrivateIp }).(pulumi.StringOutput)
}

// The public IP.
func (o GetPublicIpsPublicIpOutput) PublicIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetPublicIpsPublicIp) string { return v.PublicIp }).(pulumi.StringOutput)
}

// The allocation ID of the public IP.
func (o GetPublicIpsPublicIpOutput) PublicIpId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPublicIpsPublicIp) string { return v.PublicIpId }).(pulumi.StringOutput)
}

// One or more tags associated with the public IP.
func (o GetPublicIpsPublicIpOutput) Tags() GetPublicIpsPublicIpTagArrayOutput {
	return o.ApplyT(func(v GetPublicIpsPublicIp) []GetPublicIpsPublicIpTag { return v.Tags }).(GetPublicIpsPublicIpTagArrayOutput)
}

// The ID of the VM the public IP is associated with (if any).
func (o GetPublicIpsPublicIpOutput) VmId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPublicIpsPublicIp) string { return v.VmId }).(pulumi.StringOutput)
}

type GetPublicIpsPublicIpArrayOutput struct{ *pulumi.OutputState }

func (GetPublicIpsPublicIpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPublicIpsPublicIp)(nil)).Elem()
}

func (o GetPublicIpsPublicIpArrayOutput) ToGetPublicIpsPublicIpArrayOutput() GetPublicIpsPublicIpArrayOutput {
	return o
}

func (o GetPublicIpsPublicIpArrayOutput) ToGetPublicIpsPublicIpArrayOutputWithContext(ctx context.Context) GetPublicIpsPublicIpArrayOutput {
	return o
}

func (o GetPublicIpsPublicIpArrayOutput) Index(i pulumi.IntInput) GetPublicIpsPublicIpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPublicIpsPublicIp {
		return vs[0].([]GetPublicIpsPublicIp)[vs[1].(int)]
	}).(GetPublicIpsPublicIpOutput)
}

type GetPublicIpsPublicIpTag struct {
	// The key of the tag, with a minimum of 1 character.
	Key string `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value string `pulumi:"value"`
}

// GetPublicIpsPublicIpTagInput is an input type that accepts GetPublicIpsPublicIpTagArgs and GetPublicIpsPublicIpTagOutput values.
// You can construct a concrete instance of `GetPublicIpsPublicIpTagInput` via:
//
//	GetPublicIpsPublicIpTagArgs{...}
type GetPublicIpsPublicIpTagInput interface {
	pulumi.Input

	ToGetPublicIpsPublicIpTagOutput() GetPublicIpsPublicIpTagOutput
	ToGetPublicIpsPublicIpTagOutputWithContext(context.Context) GetPublicIpsPublicIpTagOutput
}

type GetPublicIpsPublicIpTagArgs struct {
	// The key of the tag, with a minimum of 1 character.
	Key pulumi.StringInput `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetPublicIpsPublicIpTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPublicIpsPublicIpTag)(nil)).Elem()
}

func (i GetPublicIpsPublicIpTagArgs) ToGetPublicIpsPublicIpTagOutput() GetPublicIpsPublicIpTagOutput {
	return i.ToGetPublicIpsPublicIpTagOutputWithContext(context.Background())
}

func (i GetPublicIpsPublicIpTagArgs) ToGetPublicIpsPublicIpTagOutputWithContext(ctx context.Context) GetPublicIpsPublicIpTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPublicIpsPublicIpTagOutput)
}

// GetPublicIpsPublicIpTagArrayInput is an input type that accepts GetPublicIpsPublicIpTagArray and GetPublicIpsPublicIpTagArrayOutput values.
// You can construct a concrete instance of `GetPublicIpsPublicIpTagArrayInput` via:
//
//	GetPublicIpsPublicIpTagArray{ GetPublicIpsPublicIpTagArgs{...} }
type GetPublicIpsPublicIpTagArrayInput interface {
	pulumi.Input

	ToGetPublicIpsPublicIpTagArrayOutput() GetPublicIpsPublicIpTagArrayOutput
	ToGetPublicIpsPublicIpTagArrayOutputWithContext(context.Context) GetPublicIpsPublicIpTagArrayOutput
}

type GetPublicIpsPublicIpTagArray []GetPublicIpsPublicIpTagInput

func (GetPublicIpsPublicIpTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPublicIpsPublicIpTag)(nil)).Elem()
}

func (i GetPublicIpsPublicIpTagArray) ToGetPublicIpsPublicIpTagArrayOutput() GetPublicIpsPublicIpTagArrayOutput {
	return i.ToGetPublicIpsPublicIpTagArrayOutputWithContext(context.Background())
}

func (i GetPublicIpsPublicIpTagArray) ToGetPublicIpsPublicIpTagArrayOutputWithContext(ctx context.Context) GetPublicIpsPublicIpTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPublicIpsPublicIpTagArrayOutput)
}

type GetPublicIpsPublicIpTagOutput struct{ *pulumi.OutputState }

func (GetPublicIpsPublicIpTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPublicIpsPublicIpTag)(nil)).Elem()
}

func (o GetPublicIpsPublicIpTagOutput) ToGetPublicIpsPublicIpTagOutput() GetPublicIpsPublicIpTagOutput {
	return o
}

func (o GetPublicIpsPublicIpTagOutput) ToGetPublicIpsPublicIpTagOutputWithContext(ctx context.Context) GetPublicIpsPublicIpTagOutput {
	return o
}

// The key of the tag, with a minimum of 1 character.
func (o GetPublicIpsPublicIpTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetPublicIpsPublicIpTag) string { return v.Key }).(pulumi.StringOutput)
}

// The value of the tag, between 0 and 255 characters.
func (o GetPublicIpsPublicIpTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetPublicIpsPublicIpTag) string { return v.Value }).(pulumi.StringOutput)
}

type GetPublicIpsPublicIpTagArrayOutput struct{ *pulumi.OutputState }

func (GetPublicIpsPublicIpTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPublicIpsPublicIpTag)(nil)).Elem()
}

func (o GetPublicIpsPublicIpTagArrayOutput) ToGetPublicIpsPublicIpTagArrayOutput() GetPublicIpsPublicIpTagArrayOutput {
	return o
}

func (o GetPublicIpsPublicIpTagArrayOutput) ToGetPublicIpsPublicIpTagArrayOutputWithContext(ctx context.Context) GetPublicIpsPublicIpTagArrayOutput {
	return o
}

func (o GetPublicIpsPublicIpTagArrayOutput) Index(i pulumi.IntInput) GetPublicIpsPublicIpTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPublicIpsPublicIpTag {
		return vs[0].([]GetPublicIpsPublicIpTag)[vs[1].(int)]
	}).(GetPublicIpsPublicIpTagOutput)
}

type GetQuotaFilter struct {
	// The unique name of the quota.
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// GetQuotaFilterInput is an input type that accepts GetQuotaFilterArgs and GetQuotaFilterOutput values.
// You can construct a concrete instance of `GetQuotaFilterInput` via:
//
//	GetQuotaFilterArgs{...}
type GetQuotaFilterInput interface {
	pulumi.Input

	ToGetQuotaFilterOutput() GetQuotaFilterOutput
	ToGetQuotaFilterOutputWithContext(context.Context) GetQuotaFilterOutput
}

type GetQuotaFilterArgs struct {
	// The unique name of the quota.
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetQuotaFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetQuotaFilter)(nil)).Elem()
}

func (i GetQuotaFilterArgs) ToGetQuotaFilterOutput() GetQuotaFilterOutput {
	return i.ToGetQuotaFilterOutputWithContext(context.Background())
}

func (i GetQuotaFilterArgs) ToGetQuotaFilterOutputWithContext(ctx context.Context) GetQuotaFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetQuotaFilterOutput)
}

// GetQuotaFilterArrayInput is an input type that accepts GetQuotaFilterArray and GetQuotaFilterArrayOutput values.
// You can construct a concrete instance of `GetQuotaFilterArrayInput` via:
//
//	GetQuotaFilterArray{ GetQuotaFilterArgs{...} }
type GetQuotaFilterArrayInput interface {
	pulumi.Input

	ToGetQuotaFilterArrayOutput() GetQuotaFilterArrayOutput
	ToGetQuotaFilterArrayOutputWithContext(context.Context) GetQuotaFilterArrayOutput
}

type GetQuotaFilterArray []GetQuotaFilterInput

func (GetQuotaFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetQuotaFilter)(nil)).Elem()
}

func (i GetQuotaFilterArray) ToGetQuotaFilterArrayOutput() GetQuotaFilterArrayOutput {
	return i.ToGetQuotaFilterArrayOutputWithContext(context.Background())
}

func (i GetQuotaFilterArray) ToGetQuotaFilterArrayOutputWithContext(ctx context.Context) GetQuotaFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetQuotaFilterArrayOutput)
}

type GetQuotaFilterOutput struct{ *pulumi.OutputState }

func (GetQuotaFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetQuotaFilter)(nil)).Elem()
}

func (o GetQuotaFilterOutput) ToGetQuotaFilterOutput() GetQuotaFilterOutput {
	return o
}

func (o GetQuotaFilterOutput) ToGetQuotaFilterOutputWithContext(ctx context.Context) GetQuotaFilterOutput {
	return o
}

// The unique name of the quota.
func (o GetQuotaFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetQuotaFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetQuotaFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetQuotaFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetQuotaFilterArrayOutput struct{ *pulumi.OutputState }

func (GetQuotaFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetQuotaFilter)(nil)).Elem()
}

func (o GetQuotaFilterArrayOutput) ToGetQuotaFilterArrayOutput() GetQuotaFilterArrayOutput {
	return o
}

func (o GetQuotaFilterArrayOutput) ToGetQuotaFilterArrayOutputWithContext(ctx context.Context) GetQuotaFilterArrayOutput {
	return o
}

func (o GetQuotaFilterArrayOutput) Index(i pulumi.IntInput) GetQuotaFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetQuotaFilter {
		return vs[0].([]GetQuotaFilter)[vs[1].(int)]
	}).(GetQuotaFilterOutput)
}

type GetQuotasFilter struct {
	// The unique name of the quota.
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// GetQuotasFilterInput is an input type that accepts GetQuotasFilterArgs and GetQuotasFilterOutput values.
// You can construct a concrete instance of `GetQuotasFilterInput` via:
//
//	GetQuotasFilterArgs{...}
type GetQuotasFilterInput interface {
	pulumi.Input

	ToGetQuotasFilterOutput() GetQuotasFilterOutput
	ToGetQuotasFilterOutputWithContext(context.Context) GetQuotasFilterOutput
}

type GetQuotasFilterArgs struct {
	// The unique name of the quota.
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetQuotasFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetQuotasFilter)(nil)).Elem()
}

func (i GetQuotasFilterArgs) ToGetQuotasFilterOutput() GetQuotasFilterOutput {
	return i.ToGetQuotasFilterOutputWithContext(context.Background())
}

func (i GetQuotasFilterArgs) ToGetQuotasFilterOutputWithContext(ctx context.Context) GetQuotasFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetQuotasFilterOutput)
}

// GetQuotasFilterArrayInput is an input type that accepts GetQuotasFilterArray and GetQuotasFilterArrayOutput values.
// You can construct a concrete instance of `GetQuotasFilterArrayInput` via:
//
//	GetQuotasFilterArray{ GetQuotasFilterArgs{...} }
type GetQuotasFilterArrayInput interface {
	pulumi.Input

	ToGetQuotasFilterArrayOutput() GetQuotasFilterArrayOutput
	ToGetQuotasFilterArrayOutputWithContext(context.Context) GetQuotasFilterArrayOutput
}

type GetQuotasFilterArray []GetQuotasFilterInput

func (GetQuotasFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetQuotasFilter)(nil)).Elem()
}

func (i GetQuotasFilterArray) ToGetQuotasFilterArrayOutput() GetQuotasFilterArrayOutput {
	return i.ToGetQuotasFilterArrayOutputWithContext(context.Background())
}

func (i GetQuotasFilterArray) ToGetQuotasFilterArrayOutputWithContext(ctx context.Context) GetQuotasFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetQuotasFilterArrayOutput)
}

type GetQuotasFilterOutput struct{ *pulumi.OutputState }

func (GetQuotasFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetQuotasFilter)(nil)).Elem()
}

func (o GetQuotasFilterOutput) ToGetQuotasFilterOutput() GetQuotasFilterOutput {
	return o
}

func (o GetQuotasFilterOutput) ToGetQuotasFilterOutputWithContext(ctx context.Context) GetQuotasFilterOutput {
	return o
}

// The unique name of the quota.
func (o GetQuotasFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetQuotasFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetQuotasFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetQuotasFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetQuotasFilterArrayOutput struct{ *pulumi.OutputState }

func (GetQuotasFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetQuotasFilter)(nil)).Elem()
}

func (o GetQuotasFilterArrayOutput) ToGetQuotasFilterArrayOutput() GetQuotasFilterArrayOutput {
	return o
}

func (o GetQuotasFilterArrayOutput) ToGetQuotasFilterArrayOutputWithContext(ctx context.Context) GetQuotasFilterArrayOutput {
	return o
}

func (o GetQuotasFilterArrayOutput) Index(i pulumi.IntInput) GetQuotasFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetQuotasFilter {
		return vs[0].([]GetQuotasFilter)[vs[1].(int)]
	}).(GetQuotasFilterOutput)
}

type GetQuotasQuota struct {
	// The account ID of the owner of the quotas.
	AccountId string `pulumi:"accountId"`
	// The description of the quota.
	Description string `pulumi:"description"`
	// The maximum value of the quota for the account (if there is no limit, `0`).
	MaxValue int `pulumi:"maxValue"`
	// The unique name of the quota.
	Name string `pulumi:"name"`
	// The group name of the quota.
	QuotaCollection string `pulumi:"quotaCollection"`
	// The ressource ID if it is a resource-specific quota, `global` if it is not.
	QuotaType string `pulumi:"quotaType"`
	// The description of the quota.
	ShortDescription string `pulumi:"shortDescription"`
	// The limit value currently used by the account.
	UsedValue int `pulumi:"usedValue"`
}

// GetQuotasQuotaInput is an input type that accepts GetQuotasQuotaArgs and GetQuotasQuotaOutput values.
// You can construct a concrete instance of `GetQuotasQuotaInput` via:
//
//	GetQuotasQuotaArgs{...}
type GetQuotasQuotaInput interface {
	pulumi.Input

	ToGetQuotasQuotaOutput() GetQuotasQuotaOutput
	ToGetQuotasQuotaOutputWithContext(context.Context) GetQuotasQuotaOutput
}

type GetQuotasQuotaArgs struct {
	// The account ID of the owner of the quotas.
	AccountId pulumi.StringInput `pulumi:"accountId"`
	// The description of the quota.
	Description pulumi.StringInput `pulumi:"description"`
	// The maximum value of the quota for the account (if there is no limit, `0`).
	MaxValue pulumi.IntInput `pulumi:"maxValue"`
	// The unique name of the quota.
	Name pulumi.StringInput `pulumi:"name"`
	// The group name of the quota.
	QuotaCollection pulumi.StringInput `pulumi:"quotaCollection"`
	// The ressource ID if it is a resource-specific quota, `global` if it is not.
	QuotaType pulumi.StringInput `pulumi:"quotaType"`
	// The description of the quota.
	ShortDescription pulumi.StringInput `pulumi:"shortDescription"`
	// The limit value currently used by the account.
	UsedValue pulumi.IntInput `pulumi:"usedValue"`
}

func (GetQuotasQuotaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetQuotasQuota)(nil)).Elem()
}

func (i GetQuotasQuotaArgs) ToGetQuotasQuotaOutput() GetQuotasQuotaOutput {
	return i.ToGetQuotasQuotaOutputWithContext(context.Background())
}

func (i GetQuotasQuotaArgs) ToGetQuotasQuotaOutputWithContext(ctx context.Context) GetQuotasQuotaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetQuotasQuotaOutput)
}

// GetQuotasQuotaArrayInput is an input type that accepts GetQuotasQuotaArray and GetQuotasQuotaArrayOutput values.
// You can construct a concrete instance of `GetQuotasQuotaArrayInput` via:
//
//	GetQuotasQuotaArray{ GetQuotasQuotaArgs{...} }
type GetQuotasQuotaArrayInput interface {
	pulumi.Input

	ToGetQuotasQuotaArrayOutput() GetQuotasQuotaArrayOutput
	ToGetQuotasQuotaArrayOutputWithContext(context.Context) GetQuotasQuotaArrayOutput
}

type GetQuotasQuotaArray []GetQuotasQuotaInput

func (GetQuotasQuotaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetQuotasQuota)(nil)).Elem()
}

func (i GetQuotasQuotaArray) ToGetQuotasQuotaArrayOutput() GetQuotasQuotaArrayOutput {
	return i.ToGetQuotasQuotaArrayOutputWithContext(context.Background())
}

func (i GetQuotasQuotaArray) ToGetQuotasQuotaArrayOutputWithContext(ctx context.Context) GetQuotasQuotaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetQuotasQuotaArrayOutput)
}

type GetQuotasQuotaOutput struct{ *pulumi.OutputState }

func (GetQuotasQuotaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetQuotasQuota)(nil)).Elem()
}

func (o GetQuotasQuotaOutput) ToGetQuotasQuotaOutput() GetQuotasQuotaOutput {
	return o
}

func (o GetQuotasQuotaOutput) ToGetQuotasQuotaOutputWithContext(ctx context.Context) GetQuotasQuotaOutput {
	return o
}

// The account ID of the owner of the quotas.
func (o GetQuotasQuotaOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v GetQuotasQuota) string { return v.AccountId }).(pulumi.StringOutput)
}

// The description of the quota.
func (o GetQuotasQuotaOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetQuotasQuota) string { return v.Description }).(pulumi.StringOutput)
}

// The maximum value of the quota for the account (if there is no limit, `0`).
func (o GetQuotasQuotaOutput) MaxValue() pulumi.IntOutput {
	return o.ApplyT(func(v GetQuotasQuota) int { return v.MaxValue }).(pulumi.IntOutput)
}

// The unique name of the quota.
func (o GetQuotasQuotaOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetQuotasQuota) string { return v.Name }).(pulumi.StringOutput)
}

// The group name of the quota.
func (o GetQuotasQuotaOutput) QuotaCollection() pulumi.StringOutput {
	return o.ApplyT(func(v GetQuotasQuota) string { return v.QuotaCollection }).(pulumi.StringOutput)
}

// The ressource ID if it is a resource-specific quota, `global` if it is not.
func (o GetQuotasQuotaOutput) QuotaType() pulumi.StringOutput {
	return o.ApplyT(func(v GetQuotasQuota) string { return v.QuotaType }).(pulumi.StringOutput)
}

// The description of the quota.
func (o GetQuotasQuotaOutput) ShortDescription() pulumi.StringOutput {
	return o.ApplyT(func(v GetQuotasQuota) string { return v.ShortDescription }).(pulumi.StringOutput)
}

// The limit value currently used by the account.
func (o GetQuotasQuotaOutput) UsedValue() pulumi.IntOutput {
	return o.ApplyT(func(v GetQuotasQuota) int { return v.UsedValue }).(pulumi.IntOutput)
}

type GetQuotasQuotaArrayOutput struct{ *pulumi.OutputState }

func (GetQuotasQuotaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetQuotasQuota)(nil)).Elem()
}

func (o GetQuotasQuotaArrayOutput) ToGetQuotasQuotaArrayOutput() GetQuotasQuotaArrayOutput {
	return o
}

func (o GetQuotasQuotaArrayOutput) ToGetQuotasQuotaArrayOutputWithContext(ctx context.Context) GetQuotasQuotaArrayOutput {
	return o
}

func (o GetQuotasQuotaArrayOutput) Index(i pulumi.IntInput) GetQuotasQuotaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetQuotasQuota {
		return vs[0].([]GetQuotasQuota)[vs[1].(int)]
	}).(GetQuotasQuotaOutput)
}

type GetRegionsRegion struct {
	// The hostname of the gateway to access the Region.
	Endpoint string `pulumi:"endpoint"`
	// The administrative name of the Region.
	RegionName string `pulumi:"regionName"`
}

// GetRegionsRegionInput is an input type that accepts GetRegionsRegionArgs and GetRegionsRegionOutput values.
// You can construct a concrete instance of `GetRegionsRegionInput` via:
//
//	GetRegionsRegionArgs{...}
type GetRegionsRegionInput interface {
	pulumi.Input

	ToGetRegionsRegionOutput() GetRegionsRegionOutput
	ToGetRegionsRegionOutputWithContext(context.Context) GetRegionsRegionOutput
}

type GetRegionsRegionArgs struct {
	// The hostname of the gateway to access the Region.
	Endpoint pulumi.StringInput `pulumi:"endpoint"`
	// The administrative name of the Region.
	RegionName pulumi.StringInput `pulumi:"regionName"`
}

func (GetRegionsRegionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRegionsRegion)(nil)).Elem()
}

func (i GetRegionsRegionArgs) ToGetRegionsRegionOutput() GetRegionsRegionOutput {
	return i.ToGetRegionsRegionOutputWithContext(context.Background())
}

func (i GetRegionsRegionArgs) ToGetRegionsRegionOutputWithContext(ctx context.Context) GetRegionsRegionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRegionsRegionOutput)
}

// GetRegionsRegionArrayInput is an input type that accepts GetRegionsRegionArray and GetRegionsRegionArrayOutput values.
// You can construct a concrete instance of `GetRegionsRegionArrayInput` via:
//
//	GetRegionsRegionArray{ GetRegionsRegionArgs{...} }
type GetRegionsRegionArrayInput interface {
	pulumi.Input

	ToGetRegionsRegionArrayOutput() GetRegionsRegionArrayOutput
	ToGetRegionsRegionArrayOutputWithContext(context.Context) GetRegionsRegionArrayOutput
}

type GetRegionsRegionArray []GetRegionsRegionInput

func (GetRegionsRegionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRegionsRegion)(nil)).Elem()
}

func (i GetRegionsRegionArray) ToGetRegionsRegionArrayOutput() GetRegionsRegionArrayOutput {
	return i.ToGetRegionsRegionArrayOutputWithContext(context.Background())
}

func (i GetRegionsRegionArray) ToGetRegionsRegionArrayOutputWithContext(ctx context.Context) GetRegionsRegionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRegionsRegionArrayOutput)
}

type GetRegionsRegionOutput struct{ *pulumi.OutputState }

func (GetRegionsRegionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRegionsRegion)(nil)).Elem()
}

func (o GetRegionsRegionOutput) ToGetRegionsRegionOutput() GetRegionsRegionOutput {
	return o
}

func (o GetRegionsRegionOutput) ToGetRegionsRegionOutputWithContext(ctx context.Context) GetRegionsRegionOutput {
	return o
}

// The hostname of the gateway to access the Region.
func (o GetRegionsRegionOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetRegionsRegion) string { return v.Endpoint }).(pulumi.StringOutput)
}

// The administrative name of the Region.
func (o GetRegionsRegionOutput) RegionName() pulumi.StringOutput {
	return o.ApplyT(func(v GetRegionsRegion) string { return v.RegionName }).(pulumi.StringOutput)
}

type GetRegionsRegionArrayOutput struct{ *pulumi.OutputState }

func (GetRegionsRegionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRegionsRegion)(nil)).Elem()
}

func (o GetRegionsRegionArrayOutput) ToGetRegionsRegionArrayOutput() GetRegionsRegionArrayOutput {
	return o
}

func (o GetRegionsRegionArrayOutput) ToGetRegionsRegionArrayOutputWithContext(ctx context.Context) GetRegionsRegionArrayOutput {
	return o
}

func (o GetRegionsRegionArrayOutput) Index(i pulumi.IntInput) GetRegionsRegionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRegionsRegion {
		return vs[0].([]GetRegionsRegion)[vs[1].(int)]
	}).(GetRegionsRegionOutput)
}

type GetRouteTableFilter struct {
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// GetRouteTableFilterInput is an input type that accepts GetRouteTableFilterArgs and GetRouteTableFilterOutput values.
// You can construct a concrete instance of `GetRouteTableFilterInput` via:
//
//	GetRouteTableFilterArgs{...}
type GetRouteTableFilterInput interface {
	pulumi.Input

	ToGetRouteTableFilterOutput() GetRouteTableFilterOutput
	ToGetRouteTableFilterOutputWithContext(context.Context) GetRouteTableFilterOutput
}

type GetRouteTableFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetRouteTableFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteTableFilter)(nil)).Elem()
}

func (i GetRouteTableFilterArgs) ToGetRouteTableFilterOutput() GetRouteTableFilterOutput {
	return i.ToGetRouteTableFilterOutputWithContext(context.Background())
}

func (i GetRouteTableFilterArgs) ToGetRouteTableFilterOutputWithContext(ctx context.Context) GetRouteTableFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteTableFilterOutput)
}

// GetRouteTableFilterArrayInput is an input type that accepts GetRouteTableFilterArray and GetRouteTableFilterArrayOutput values.
// You can construct a concrete instance of `GetRouteTableFilterArrayInput` via:
//
//	GetRouteTableFilterArray{ GetRouteTableFilterArgs{...} }
type GetRouteTableFilterArrayInput interface {
	pulumi.Input

	ToGetRouteTableFilterArrayOutput() GetRouteTableFilterArrayOutput
	ToGetRouteTableFilterArrayOutputWithContext(context.Context) GetRouteTableFilterArrayOutput
}

type GetRouteTableFilterArray []GetRouteTableFilterInput

func (GetRouteTableFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteTableFilter)(nil)).Elem()
}

func (i GetRouteTableFilterArray) ToGetRouteTableFilterArrayOutput() GetRouteTableFilterArrayOutput {
	return i.ToGetRouteTableFilterArrayOutputWithContext(context.Background())
}

func (i GetRouteTableFilterArray) ToGetRouteTableFilterArrayOutputWithContext(ctx context.Context) GetRouteTableFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteTableFilterArrayOutput)
}

type GetRouteTableFilterOutput struct{ *pulumi.OutputState }

func (GetRouteTableFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteTableFilter)(nil)).Elem()
}

func (o GetRouteTableFilterOutput) ToGetRouteTableFilterOutput() GetRouteTableFilterOutput {
	return o
}

func (o GetRouteTableFilterOutput) ToGetRouteTableFilterOutputWithContext(ctx context.Context) GetRouteTableFilterOutput {
	return o
}

func (o GetRouteTableFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTableFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetRouteTableFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetRouteTableFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetRouteTableFilterArrayOutput struct{ *pulumi.OutputState }

func (GetRouteTableFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteTableFilter)(nil)).Elem()
}

func (o GetRouteTableFilterArrayOutput) ToGetRouteTableFilterArrayOutput() GetRouteTableFilterArrayOutput {
	return o
}

func (o GetRouteTableFilterArrayOutput) ToGetRouteTableFilterArrayOutputWithContext(ctx context.Context) GetRouteTableFilterArrayOutput {
	return o
}

func (o GetRouteTableFilterArrayOutput) Index(i pulumi.IntInput) GetRouteTableFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouteTableFilter {
		return vs[0].([]GetRouteTableFilter)[vs[1].(int)]
	}).(GetRouteTableFilterOutput)
}

type GetRouteTableLinkRouteTable struct {
	// The ID of the association between the route table and the Net or Subnet.
	LinkRouteTableId string `pulumi:"linkRouteTableId"`
	// If true, the route table is the main one.
	Main bool `pulumi:"main"`
	// The ID of the route table.
	RouteTableId             string `pulumi:"routeTableId"`
	RouteTableToSubnetLinkId string `pulumi:"routeTableToSubnetLinkId"`
	// The ID of the Subnet, if the route table is explicitly linked to a Subnet.
	SubnetId string `pulumi:"subnetId"`
}

// GetRouteTableLinkRouteTableInput is an input type that accepts GetRouteTableLinkRouteTableArgs and GetRouteTableLinkRouteTableOutput values.
// You can construct a concrete instance of `GetRouteTableLinkRouteTableInput` via:
//
//	GetRouteTableLinkRouteTableArgs{...}
type GetRouteTableLinkRouteTableInput interface {
	pulumi.Input

	ToGetRouteTableLinkRouteTableOutput() GetRouteTableLinkRouteTableOutput
	ToGetRouteTableLinkRouteTableOutputWithContext(context.Context) GetRouteTableLinkRouteTableOutput
}

type GetRouteTableLinkRouteTableArgs struct {
	// The ID of the association between the route table and the Net or Subnet.
	LinkRouteTableId pulumi.StringInput `pulumi:"linkRouteTableId"`
	// If true, the route table is the main one.
	Main pulumi.BoolInput `pulumi:"main"`
	// The ID of the route table.
	RouteTableId             pulumi.StringInput `pulumi:"routeTableId"`
	RouteTableToSubnetLinkId pulumi.StringInput `pulumi:"routeTableToSubnetLinkId"`
	// The ID of the Subnet, if the route table is explicitly linked to a Subnet.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
}

func (GetRouteTableLinkRouteTableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteTableLinkRouteTable)(nil)).Elem()
}

func (i GetRouteTableLinkRouteTableArgs) ToGetRouteTableLinkRouteTableOutput() GetRouteTableLinkRouteTableOutput {
	return i.ToGetRouteTableLinkRouteTableOutputWithContext(context.Background())
}

func (i GetRouteTableLinkRouteTableArgs) ToGetRouteTableLinkRouteTableOutputWithContext(ctx context.Context) GetRouteTableLinkRouteTableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteTableLinkRouteTableOutput)
}

// GetRouteTableLinkRouteTableArrayInput is an input type that accepts GetRouteTableLinkRouteTableArray and GetRouteTableLinkRouteTableArrayOutput values.
// You can construct a concrete instance of `GetRouteTableLinkRouteTableArrayInput` via:
//
//	GetRouteTableLinkRouteTableArray{ GetRouteTableLinkRouteTableArgs{...} }
type GetRouteTableLinkRouteTableArrayInput interface {
	pulumi.Input

	ToGetRouteTableLinkRouteTableArrayOutput() GetRouteTableLinkRouteTableArrayOutput
	ToGetRouteTableLinkRouteTableArrayOutputWithContext(context.Context) GetRouteTableLinkRouteTableArrayOutput
}

type GetRouteTableLinkRouteTableArray []GetRouteTableLinkRouteTableInput

func (GetRouteTableLinkRouteTableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteTableLinkRouteTable)(nil)).Elem()
}

func (i GetRouteTableLinkRouteTableArray) ToGetRouteTableLinkRouteTableArrayOutput() GetRouteTableLinkRouteTableArrayOutput {
	return i.ToGetRouteTableLinkRouteTableArrayOutputWithContext(context.Background())
}

func (i GetRouteTableLinkRouteTableArray) ToGetRouteTableLinkRouteTableArrayOutputWithContext(ctx context.Context) GetRouteTableLinkRouteTableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteTableLinkRouteTableArrayOutput)
}

type GetRouteTableLinkRouteTableOutput struct{ *pulumi.OutputState }

func (GetRouteTableLinkRouteTableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteTableLinkRouteTable)(nil)).Elem()
}

func (o GetRouteTableLinkRouteTableOutput) ToGetRouteTableLinkRouteTableOutput() GetRouteTableLinkRouteTableOutput {
	return o
}

func (o GetRouteTableLinkRouteTableOutput) ToGetRouteTableLinkRouteTableOutputWithContext(ctx context.Context) GetRouteTableLinkRouteTableOutput {
	return o
}

// The ID of the association between the route table and the Net or Subnet.
func (o GetRouteTableLinkRouteTableOutput) LinkRouteTableId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTableLinkRouteTable) string { return v.LinkRouteTableId }).(pulumi.StringOutput)
}

// If true, the route table is the main one.
func (o GetRouteTableLinkRouteTableOutput) Main() pulumi.BoolOutput {
	return o.ApplyT(func(v GetRouteTableLinkRouteTable) bool { return v.Main }).(pulumi.BoolOutput)
}

// The ID of the route table.
func (o GetRouteTableLinkRouteTableOutput) RouteTableId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTableLinkRouteTable) string { return v.RouteTableId }).(pulumi.StringOutput)
}

func (o GetRouteTableLinkRouteTableOutput) RouteTableToSubnetLinkId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTableLinkRouteTable) string { return v.RouteTableToSubnetLinkId }).(pulumi.StringOutput)
}

// The ID of the Subnet, if the route table is explicitly linked to a Subnet.
func (o GetRouteTableLinkRouteTableOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTableLinkRouteTable) string { return v.SubnetId }).(pulumi.StringOutput)
}

type GetRouteTableLinkRouteTableArrayOutput struct{ *pulumi.OutputState }

func (GetRouteTableLinkRouteTableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteTableLinkRouteTable)(nil)).Elem()
}

func (o GetRouteTableLinkRouteTableArrayOutput) ToGetRouteTableLinkRouteTableArrayOutput() GetRouteTableLinkRouteTableArrayOutput {
	return o
}

func (o GetRouteTableLinkRouteTableArrayOutput) ToGetRouteTableLinkRouteTableArrayOutputWithContext(ctx context.Context) GetRouteTableLinkRouteTableArrayOutput {
	return o
}

func (o GetRouteTableLinkRouteTableArrayOutput) Index(i pulumi.IntInput) GetRouteTableLinkRouteTableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouteTableLinkRouteTable {
		return vs[0].([]GetRouteTableLinkRouteTable)[vs[1].(int)]
	}).(GetRouteTableLinkRouteTableOutput)
}

type GetRouteTableRoute struct {
	// The method used to create the route.
	CreationMethod string `pulumi:"creationMethod"`
	// The IP range used for the destination match, in CIDR notation (for example, `10.0.0.0/24`).
	DestinationIpRange string `pulumi:"destinationIpRange"`
	// The ID of the OUTSCALE service.
	DestinationServiceId string `pulumi:"destinationServiceId"`
	// The ID of the internet service or virtual gateway attached to the Net.
	GatewayId string `pulumi:"gatewayId"`
	// The ID of a NAT service attached to the Net.
	NatServiceId string `pulumi:"natServiceId"`
	// The ID of the Net access point.
	NetAccessPointId string `pulumi:"netAccessPointId"`
	// The ID of the Net peering.
	NetPeeringId string `pulumi:"netPeeringId"`
	// The ID of the NIC.
	NicId string `pulumi:"nicId"`
	// The state of a route in the route table (always `active`).
	State string `pulumi:"state"`
	// The account ID of the owner of the VM.
	VmAccountId string `pulumi:"vmAccountId"`
	// The ID of a VM specified in a route in the table.
	VmId string `pulumi:"vmId"`
}

// GetRouteTableRouteInput is an input type that accepts GetRouteTableRouteArgs and GetRouteTableRouteOutput values.
// You can construct a concrete instance of `GetRouteTableRouteInput` via:
//
//	GetRouteTableRouteArgs{...}
type GetRouteTableRouteInput interface {
	pulumi.Input

	ToGetRouteTableRouteOutput() GetRouteTableRouteOutput
	ToGetRouteTableRouteOutputWithContext(context.Context) GetRouteTableRouteOutput
}

type GetRouteTableRouteArgs struct {
	// The method used to create the route.
	CreationMethod pulumi.StringInput `pulumi:"creationMethod"`
	// The IP range used for the destination match, in CIDR notation (for example, `10.0.0.0/24`).
	DestinationIpRange pulumi.StringInput `pulumi:"destinationIpRange"`
	// The ID of the OUTSCALE service.
	DestinationServiceId pulumi.StringInput `pulumi:"destinationServiceId"`
	// The ID of the internet service or virtual gateway attached to the Net.
	GatewayId pulumi.StringInput `pulumi:"gatewayId"`
	// The ID of a NAT service attached to the Net.
	NatServiceId pulumi.StringInput `pulumi:"natServiceId"`
	// The ID of the Net access point.
	NetAccessPointId pulumi.StringInput `pulumi:"netAccessPointId"`
	// The ID of the Net peering.
	NetPeeringId pulumi.StringInput `pulumi:"netPeeringId"`
	// The ID of the NIC.
	NicId pulumi.StringInput `pulumi:"nicId"`
	// The state of a route in the route table (always `active`).
	State pulumi.StringInput `pulumi:"state"`
	// The account ID of the owner of the VM.
	VmAccountId pulumi.StringInput `pulumi:"vmAccountId"`
	// The ID of a VM specified in a route in the table.
	VmId pulumi.StringInput `pulumi:"vmId"`
}

func (GetRouteTableRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteTableRoute)(nil)).Elem()
}

func (i GetRouteTableRouteArgs) ToGetRouteTableRouteOutput() GetRouteTableRouteOutput {
	return i.ToGetRouteTableRouteOutputWithContext(context.Background())
}

func (i GetRouteTableRouteArgs) ToGetRouteTableRouteOutputWithContext(ctx context.Context) GetRouteTableRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteTableRouteOutput)
}

// GetRouteTableRouteArrayInput is an input type that accepts GetRouteTableRouteArray and GetRouteTableRouteArrayOutput values.
// You can construct a concrete instance of `GetRouteTableRouteArrayInput` via:
//
//	GetRouteTableRouteArray{ GetRouteTableRouteArgs{...} }
type GetRouteTableRouteArrayInput interface {
	pulumi.Input

	ToGetRouteTableRouteArrayOutput() GetRouteTableRouteArrayOutput
	ToGetRouteTableRouteArrayOutputWithContext(context.Context) GetRouteTableRouteArrayOutput
}

type GetRouteTableRouteArray []GetRouteTableRouteInput

func (GetRouteTableRouteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteTableRoute)(nil)).Elem()
}

func (i GetRouteTableRouteArray) ToGetRouteTableRouteArrayOutput() GetRouteTableRouteArrayOutput {
	return i.ToGetRouteTableRouteArrayOutputWithContext(context.Background())
}

func (i GetRouteTableRouteArray) ToGetRouteTableRouteArrayOutputWithContext(ctx context.Context) GetRouteTableRouteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteTableRouteArrayOutput)
}

type GetRouteTableRouteOutput struct{ *pulumi.OutputState }

func (GetRouteTableRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteTableRoute)(nil)).Elem()
}

func (o GetRouteTableRouteOutput) ToGetRouteTableRouteOutput() GetRouteTableRouteOutput {
	return o
}

func (o GetRouteTableRouteOutput) ToGetRouteTableRouteOutputWithContext(ctx context.Context) GetRouteTableRouteOutput {
	return o
}

// The method used to create the route.
func (o GetRouteTableRouteOutput) CreationMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTableRoute) string { return v.CreationMethod }).(pulumi.StringOutput)
}

// The IP range used for the destination match, in CIDR notation (for example, `10.0.0.0/24`).
func (o GetRouteTableRouteOutput) DestinationIpRange() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTableRoute) string { return v.DestinationIpRange }).(pulumi.StringOutput)
}

// The ID of the OUTSCALE service.
func (o GetRouteTableRouteOutput) DestinationServiceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTableRoute) string { return v.DestinationServiceId }).(pulumi.StringOutput)
}

// The ID of the internet service or virtual gateway attached to the Net.
func (o GetRouteTableRouteOutput) GatewayId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTableRoute) string { return v.GatewayId }).(pulumi.StringOutput)
}

// The ID of a NAT service attached to the Net.
func (o GetRouteTableRouteOutput) NatServiceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTableRoute) string { return v.NatServiceId }).(pulumi.StringOutput)
}

// The ID of the Net access point.
func (o GetRouteTableRouteOutput) NetAccessPointId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTableRoute) string { return v.NetAccessPointId }).(pulumi.StringOutput)
}

// The ID of the Net peering.
func (o GetRouteTableRouteOutput) NetPeeringId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTableRoute) string { return v.NetPeeringId }).(pulumi.StringOutput)
}

// The ID of the NIC.
func (o GetRouteTableRouteOutput) NicId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTableRoute) string { return v.NicId }).(pulumi.StringOutput)
}

// The state of a route in the route table (always `active`).
func (o GetRouteTableRouteOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTableRoute) string { return v.State }).(pulumi.StringOutput)
}

// The account ID of the owner of the VM.
func (o GetRouteTableRouteOutput) VmAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTableRoute) string { return v.VmAccountId }).(pulumi.StringOutput)
}

// The ID of a VM specified in a route in the table.
func (o GetRouteTableRouteOutput) VmId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTableRoute) string { return v.VmId }).(pulumi.StringOutput)
}

type GetRouteTableRouteArrayOutput struct{ *pulumi.OutputState }

func (GetRouteTableRouteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteTableRoute)(nil)).Elem()
}

func (o GetRouteTableRouteArrayOutput) ToGetRouteTableRouteArrayOutput() GetRouteTableRouteArrayOutput {
	return o
}

func (o GetRouteTableRouteArrayOutput) ToGetRouteTableRouteArrayOutputWithContext(ctx context.Context) GetRouteTableRouteArrayOutput {
	return o
}

func (o GetRouteTableRouteArrayOutput) Index(i pulumi.IntInput) GetRouteTableRouteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouteTableRoute {
		return vs[0].([]GetRouteTableRoute)[vs[1].(int)]
	}).(GetRouteTableRouteOutput)
}

type GetRouteTableRoutePropagatingVirtualGateway struct {
	// The ID of the virtual gateway.
	VirtualGatewayId string `pulumi:"virtualGatewayId"`
}

// GetRouteTableRoutePropagatingVirtualGatewayInput is an input type that accepts GetRouteTableRoutePropagatingVirtualGatewayArgs and GetRouteTableRoutePropagatingVirtualGatewayOutput values.
// You can construct a concrete instance of `GetRouteTableRoutePropagatingVirtualGatewayInput` via:
//
//	GetRouteTableRoutePropagatingVirtualGatewayArgs{...}
type GetRouteTableRoutePropagatingVirtualGatewayInput interface {
	pulumi.Input

	ToGetRouteTableRoutePropagatingVirtualGatewayOutput() GetRouteTableRoutePropagatingVirtualGatewayOutput
	ToGetRouteTableRoutePropagatingVirtualGatewayOutputWithContext(context.Context) GetRouteTableRoutePropagatingVirtualGatewayOutput
}

type GetRouteTableRoutePropagatingVirtualGatewayArgs struct {
	// The ID of the virtual gateway.
	VirtualGatewayId pulumi.StringInput `pulumi:"virtualGatewayId"`
}

func (GetRouteTableRoutePropagatingVirtualGatewayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteTableRoutePropagatingVirtualGateway)(nil)).Elem()
}

func (i GetRouteTableRoutePropagatingVirtualGatewayArgs) ToGetRouteTableRoutePropagatingVirtualGatewayOutput() GetRouteTableRoutePropagatingVirtualGatewayOutput {
	return i.ToGetRouteTableRoutePropagatingVirtualGatewayOutputWithContext(context.Background())
}

func (i GetRouteTableRoutePropagatingVirtualGatewayArgs) ToGetRouteTableRoutePropagatingVirtualGatewayOutputWithContext(ctx context.Context) GetRouteTableRoutePropagatingVirtualGatewayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteTableRoutePropagatingVirtualGatewayOutput)
}

// GetRouteTableRoutePropagatingVirtualGatewayArrayInput is an input type that accepts GetRouteTableRoutePropagatingVirtualGatewayArray and GetRouteTableRoutePropagatingVirtualGatewayArrayOutput values.
// You can construct a concrete instance of `GetRouteTableRoutePropagatingVirtualGatewayArrayInput` via:
//
//	GetRouteTableRoutePropagatingVirtualGatewayArray{ GetRouteTableRoutePropagatingVirtualGatewayArgs{...} }
type GetRouteTableRoutePropagatingVirtualGatewayArrayInput interface {
	pulumi.Input

	ToGetRouteTableRoutePropagatingVirtualGatewayArrayOutput() GetRouteTableRoutePropagatingVirtualGatewayArrayOutput
	ToGetRouteTableRoutePropagatingVirtualGatewayArrayOutputWithContext(context.Context) GetRouteTableRoutePropagatingVirtualGatewayArrayOutput
}

type GetRouteTableRoutePropagatingVirtualGatewayArray []GetRouteTableRoutePropagatingVirtualGatewayInput

func (GetRouteTableRoutePropagatingVirtualGatewayArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteTableRoutePropagatingVirtualGateway)(nil)).Elem()
}

func (i GetRouteTableRoutePropagatingVirtualGatewayArray) ToGetRouteTableRoutePropagatingVirtualGatewayArrayOutput() GetRouteTableRoutePropagatingVirtualGatewayArrayOutput {
	return i.ToGetRouteTableRoutePropagatingVirtualGatewayArrayOutputWithContext(context.Background())
}

func (i GetRouteTableRoutePropagatingVirtualGatewayArray) ToGetRouteTableRoutePropagatingVirtualGatewayArrayOutputWithContext(ctx context.Context) GetRouteTableRoutePropagatingVirtualGatewayArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteTableRoutePropagatingVirtualGatewayArrayOutput)
}

type GetRouteTableRoutePropagatingVirtualGatewayOutput struct{ *pulumi.OutputState }

func (GetRouteTableRoutePropagatingVirtualGatewayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteTableRoutePropagatingVirtualGateway)(nil)).Elem()
}

func (o GetRouteTableRoutePropagatingVirtualGatewayOutput) ToGetRouteTableRoutePropagatingVirtualGatewayOutput() GetRouteTableRoutePropagatingVirtualGatewayOutput {
	return o
}

func (o GetRouteTableRoutePropagatingVirtualGatewayOutput) ToGetRouteTableRoutePropagatingVirtualGatewayOutputWithContext(ctx context.Context) GetRouteTableRoutePropagatingVirtualGatewayOutput {
	return o
}

// The ID of the virtual gateway.
func (o GetRouteTableRoutePropagatingVirtualGatewayOutput) VirtualGatewayId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTableRoutePropagatingVirtualGateway) string { return v.VirtualGatewayId }).(pulumi.StringOutput)
}

type GetRouteTableRoutePropagatingVirtualGatewayArrayOutput struct{ *pulumi.OutputState }

func (GetRouteTableRoutePropagatingVirtualGatewayArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteTableRoutePropagatingVirtualGateway)(nil)).Elem()
}

func (o GetRouteTableRoutePropagatingVirtualGatewayArrayOutput) ToGetRouteTableRoutePropagatingVirtualGatewayArrayOutput() GetRouteTableRoutePropagatingVirtualGatewayArrayOutput {
	return o
}

func (o GetRouteTableRoutePropagatingVirtualGatewayArrayOutput) ToGetRouteTableRoutePropagatingVirtualGatewayArrayOutputWithContext(ctx context.Context) GetRouteTableRoutePropagatingVirtualGatewayArrayOutput {
	return o
}

func (o GetRouteTableRoutePropagatingVirtualGatewayArrayOutput) Index(i pulumi.IntInput) GetRouteTableRoutePropagatingVirtualGatewayOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouteTableRoutePropagatingVirtualGateway {
		return vs[0].([]GetRouteTableRoutePropagatingVirtualGateway)[vs[1].(int)]
	}).(GetRouteTableRoutePropagatingVirtualGatewayOutput)
}

type GetRouteTableTag struct {
	// The key of the tag, with a minimum of 1 character.
	Key string `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value string `pulumi:"value"`
}

// GetRouteTableTagInput is an input type that accepts GetRouteTableTagArgs and GetRouteTableTagOutput values.
// You can construct a concrete instance of `GetRouteTableTagInput` via:
//
//	GetRouteTableTagArgs{...}
type GetRouteTableTagInput interface {
	pulumi.Input

	ToGetRouteTableTagOutput() GetRouteTableTagOutput
	ToGetRouteTableTagOutputWithContext(context.Context) GetRouteTableTagOutput
}

type GetRouteTableTagArgs struct {
	// The key of the tag, with a minimum of 1 character.
	Key pulumi.StringInput `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetRouteTableTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteTableTag)(nil)).Elem()
}

func (i GetRouteTableTagArgs) ToGetRouteTableTagOutput() GetRouteTableTagOutput {
	return i.ToGetRouteTableTagOutputWithContext(context.Background())
}

func (i GetRouteTableTagArgs) ToGetRouteTableTagOutputWithContext(ctx context.Context) GetRouteTableTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteTableTagOutput)
}

// GetRouteTableTagArrayInput is an input type that accepts GetRouteTableTagArray and GetRouteTableTagArrayOutput values.
// You can construct a concrete instance of `GetRouteTableTagArrayInput` via:
//
//	GetRouteTableTagArray{ GetRouteTableTagArgs{...} }
type GetRouteTableTagArrayInput interface {
	pulumi.Input

	ToGetRouteTableTagArrayOutput() GetRouteTableTagArrayOutput
	ToGetRouteTableTagArrayOutputWithContext(context.Context) GetRouteTableTagArrayOutput
}

type GetRouteTableTagArray []GetRouteTableTagInput

func (GetRouteTableTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteTableTag)(nil)).Elem()
}

func (i GetRouteTableTagArray) ToGetRouteTableTagArrayOutput() GetRouteTableTagArrayOutput {
	return i.ToGetRouteTableTagArrayOutputWithContext(context.Background())
}

func (i GetRouteTableTagArray) ToGetRouteTableTagArrayOutputWithContext(ctx context.Context) GetRouteTableTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteTableTagArrayOutput)
}

type GetRouteTableTagOutput struct{ *pulumi.OutputState }

func (GetRouteTableTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteTableTag)(nil)).Elem()
}

func (o GetRouteTableTagOutput) ToGetRouteTableTagOutput() GetRouteTableTagOutput {
	return o
}

func (o GetRouteTableTagOutput) ToGetRouteTableTagOutputWithContext(ctx context.Context) GetRouteTableTagOutput {
	return o
}

// The key of the tag, with a minimum of 1 character.
func (o GetRouteTableTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTableTag) string { return v.Key }).(pulumi.StringOutput)
}

// The value of the tag, between 0 and 255 characters.
func (o GetRouteTableTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTableTag) string { return v.Value }).(pulumi.StringOutput)
}

type GetRouteTableTagArrayOutput struct{ *pulumi.OutputState }

func (GetRouteTableTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteTableTag)(nil)).Elem()
}

func (o GetRouteTableTagArrayOutput) ToGetRouteTableTagArrayOutput() GetRouteTableTagArrayOutput {
	return o
}

func (o GetRouteTableTagArrayOutput) ToGetRouteTableTagArrayOutputWithContext(ctx context.Context) GetRouteTableTagArrayOutput {
	return o
}

func (o GetRouteTableTagArrayOutput) Index(i pulumi.IntInput) GetRouteTableTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouteTableTag {
		return vs[0].([]GetRouteTableTag)[vs[1].(int)]
	}).(GetRouteTableTagOutput)
}

type GetRouteTablesFilter struct {
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// GetRouteTablesFilterInput is an input type that accepts GetRouteTablesFilterArgs and GetRouteTablesFilterOutput values.
// You can construct a concrete instance of `GetRouteTablesFilterInput` via:
//
//	GetRouteTablesFilterArgs{...}
type GetRouteTablesFilterInput interface {
	pulumi.Input

	ToGetRouteTablesFilterOutput() GetRouteTablesFilterOutput
	ToGetRouteTablesFilterOutputWithContext(context.Context) GetRouteTablesFilterOutput
}

type GetRouteTablesFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetRouteTablesFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteTablesFilter)(nil)).Elem()
}

func (i GetRouteTablesFilterArgs) ToGetRouteTablesFilterOutput() GetRouteTablesFilterOutput {
	return i.ToGetRouteTablesFilterOutputWithContext(context.Background())
}

func (i GetRouteTablesFilterArgs) ToGetRouteTablesFilterOutputWithContext(ctx context.Context) GetRouteTablesFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteTablesFilterOutput)
}

// GetRouteTablesFilterArrayInput is an input type that accepts GetRouteTablesFilterArray and GetRouteTablesFilterArrayOutput values.
// You can construct a concrete instance of `GetRouteTablesFilterArrayInput` via:
//
//	GetRouteTablesFilterArray{ GetRouteTablesFilterArgs{...} }
type GetRouteTablesFilterArrayInput interface {
	pulumi.Input

	ToGetRouteTablesFilterArrayOutput() GetRouteTablesFilterArrayOutput
	ToGetRouteTablesFilterArrayOutputWithContext(context.Context) GetRouteTablesFilterArrayOutput
}

type GetRouteTablesFilterArray []GetRouteTablesFilterInput

func (GetRouteTablesFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteTablesFilter)(nil)).Elem()
}

func (i GetRouteTablesFilterArray) ToGetRouteTablesFilterArrayOutput() GetRouteTablesFilterArrayOutput {
	return i.ToGetRouteTablesFilterArrayOutputWithContext(context.Background())
}

func (i GetRouteTablesFilterArray) ToGetRouteTablesFilterArrayOutputWithContext(ctx context.Context) GetRouteTablesFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteTablesFilterArrayOutput)
}

type GetRouteTablesFilterOutput struct{ *pulumi.OutputState }

func (GetRouteTablesFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteTablesFilter)(nil)).Elem()
}

func (o GetRouteTablesFilterOutput) ToGetRouteTablesFilterOutput() GetRouteTablesFilterOutput {
	return o
}

func (o GetRouteTablesFilterOutput) ToGetRouteTablesFilterOutputWithContext(ctx context.Context) GetRouteTablesFilterOutput {
	return o
}

func (o GetRouteTablesFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTablesFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetRouteTablesFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetRouteTablesFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetRouteTablesFilterArrayOutput struct{ *pulumi.OutputState }

func (GetRouteTablesFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteTablesFilter)(nil)).Elem()
}

func (o GetRouteTablesFilterArrayOutput) ToGetRouteTablesFilterArrayOutput() GetRouteTablesFilterArrayOutput {
	return o
}

func (o GetRouteTablesFilterArrayOutput) ToGetRouteTablesFilterArrayOutputWithContext(ctx context.Context) GetRouteTablesFilterArrayOutput {
	return o
}

func (o GetRouteTablesFilterArrayOutput) Index(i pulumi.IntInput) GetRouteTablesFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouteTablesFilter {
		return vs[0].([]GetRouteTablesFilter)[vs[1].(int)]
	}).(GetRouteTablesFilterOutput)
}

type GetRouteTablesRouteTable struct {
	// One or more associations between the route table and Subnets.
	LinkRouteTables []GetRouteTablesRouteTableLinkRouteTable `pulumi:"linkRouteTables"`
	// The ID of the Net for the route table.
	NetId string `pulumi:"netId"`
	// Information about virtual gateways propagating routes.
	RoutePropagatingVirtualGateways []GetRouteTablesRouteTableRoutePropagatingVirtualGateway `pulumi:"routePropagatingVirtualGateways"`
	// The ID of the route table.
	RouteTableId string `pulumi:"routeTableId"`
	// One or more routes in the route table.
	Routes []GetRouteTablesRouteTableRoute `pulumi:"routes"`
	// One or more tags associated with the route table.
	Tags []GetRouteTablesRouteTableTag `pulumi:"tags"`
}

// GetRouteTablesRouteTableInput is an input type that accepts GetRouteTablesRouteTableArgs and GetRouteTablesRouteTableOutput values.
// You can construct a concrete instance of `GetRouteTablesRouteTableInput` via:
//
//	GetRouteTablesRouteTableArgs{...}
type GetRouteTablesRouteTableInput interface {
	pulumi.Input

	ToGetRouteTablesRouteTableOutput() GetRouteTablesRouteTableOutput
	ToGetRouteTablesRouteTableOutputWithContext(context.Context) GetRouteTablesRouteTableOutput
}

type GetRouteTablesRouteTableArgs struct {
	// One or more associations between the route table and Subnets.
	LinkRouteTables GetRouteTablesRouteTableLinkRouteTableArrayInput `pulumi:"linkRouteTables"`
	// The ID of the Net for the route table.
	NetId pulumi.StringInput `pulumi:"netId"`
	// Information about virtual gateways propagating routes.
	RoutePropagatingVirtualGateways GetRouteTablesRouteTableRoutePropagatingVirtualGatewayArrayInput `pulumi:"routePropagatingVirtualGateways"`
	// The ID of the route table.
	RouteTableId pulumi.StringInput `pulumi:"routeTableId"`
	// One or more routes in the route table.
	Routes GetRouteTablesRouteTableRouteArrayInput `pulumi:"routes"`
	// One or more tags associated with the route table.
	Tags GetRouteTablesRouteTableTagArrayInput `pulumi:"tags"`
}

func (GetRouteTablesRouteTableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteTablesRouteTable)(nil)).Elem()
}

func (i GetRouteTablesRouteTableArgs) ToGetRouteTablesRouteTableOutput() GetRouteTablesRouteTableOutput {
	return i.ToGetRouteTablesRouteTableOutputWithContext(context.Background())
}

func (i GetRouteTablesRouteTableArgs) ToGetRouteTablesRouteTableOutputWithContext(ctx context.Context) GetRouteTablesRouteTableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteTablesRouteTableOutput)
}

// GetRouteTablesRouteTableArrayInput is an input type that accepts GetRouteTablesRouteTableArray and GetRouteTablesRouteTableArrayOutput values.
// You can construct a concrete instance of `GetRouteTablesRouteTableArrayInput` via:
//
//	GetRouteTablesRouteTableArray{ GetRouteTablesRouteTableArgs{...} }
type GetRouteTablesRouteTableArrayInput interface {
	pulumi.Input

	ToGetRouteTablesRouteTableArrayOutput() GetRouteTablesRouteTableArrayOutput
	ToGetRouteTablesRouteTableArrayOutputWithContext(context.Context) GetRouteTablesRouteTableArrayOutput
}

type GetRouteTablesRouteTableArray []GetRouteTablesRouteTableInput

func (GetRouteTablesRouteTableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteTablesRouteTable)(nil)).Elem()
}

func (i GetRouteTablesRouteTableArray) ToGetRouteTablesRouteTableArrayOutput() GetRouteTablesRouteTableArrayOutput {
	return i.ToGetRouteTablesRouteTableArrayOutputWithContext(context.Background())
}

func (i GetRouteTablesRouteTableArray) ToGetRouteTablesRouteTableArrayOutputWithContext(ctx context.Context) GetRouteTablesRouteTableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteTablesRouteTableArrayOutput)
}

type GetRouteTablesRouteTableOutput struct{ *pulumi.OutputState }

func (GetRouteTablesRouteTableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteTablesRouteTable)(nil)).Elem()
}

func (o GetRouteTablesRouteTableOutput) ToGetRouteTablesRouteTableOutput() GetRouteTablesRouteTableOutput {
	return o
}

func (o GetRouteTablesRouteTableOutput) ToGetRouteTablesRouteTableOutputWithContext(ctx context.Context) GetRouteTablesRouteTableOutput {
	return o
}

// One or more associations between the route table and Subnets.
func (o GetRouteTablesRouteTableOutput) LinkRouteTables() GetRouteTablesRouteTableLinkRouteTableArrayOutput {
	return o.ApplyT(func(v GetRouteTablesRouteTable) []GetRouteTablesRouteTableLinkRouteTable { return v.LinkRouteTables }).(GetRouteTablesRouteTableLinkRouteTableArrayOutput)
}

// The ID of the Net for the route table.
func (o GetRouteTablesRouteTableOutput) NetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTablesRouteTable) string { return v.NetId }).(pulumi.StringOutput)
}

// Information about virtual gateways propagating routes.
func (o GetRouteTablesRouteTableOutput) RoutePropagatingVirtualGateways() GetRouteTablesRouteTableRoutePropagatingVirtualGatewayArrayOutput {
	return o.ApplyT(func(v GetRouteTablesRouteTable) []GetRouteTablesRouteTableRoutePropagatingVirtualGateway {
		return v.RoutePropagatingVirtualGateways
	}).(GetRouteTablesRouteTableRoutePropagatingVirtualGatewayArrayOutput)
}

// The ID of the route table.
func (o GetRouteTablesRouteTableOutput) RouteTableId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTablesRouteTable) string { return v.RouteTableId }).(pulumi.StringOutput)
}

// One or more routes in the route table.
func (o GetRouteTablesRouteTableOutput) Routes() GetRouteTablesRouteTableRouteArrayOutput {
	return o.ApplyT(func(v GetRouteTablesRouteTable) []GetRouteTablesRouteTableRoute { return v.Routes }).(GetRouteTablesRouteTableRouteArrayOutput)
}

// One or more tags associated with the route table.
func (o GetRouteTablesRouteTableOutput) Tags() GetRouteTablesRouteTableTagArrayOutput {
	return o.ApplyT(func(v GetRouteTablesRouteTable) []GetRouteTablesRouteTableTag { return v.Tags }).(GetRouteTablesRouteTableTagArrayOutput)
}

type GetRouteTablesRouteTableArrayOutput struct{ *pulumi.OutputState }

func (GetRouteTablesRouteTableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteTablesRouteTable)(nil)).Elem()
}

func (o GetRouteTablesRouteTableArrayOutput) ToGetRouteTablesRouteTableArrayOutput() GetRouteTablesRouteTableArrayOutput {
	return o
}

func (o GetRouteTablesRouteTableArrayOutput) ToGetRouteTablesRouteTableArrayOutputWithContext(ctx context.Context) GetRouteTablesRouteTableArrayOutput {
	return o
}

func (o GetRouteTablesRouteTableArrayOutput) Index(i pulumi.IntInput) GetRouteTablesRouteTableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouteTablesRouteTable {
		return vs[0].([]GetRouteTablesRouteTable)[vs[1].(int)]
	}).(GetRouteTablesRouteTableOutput)
}

type GetRouteTablesRouteTableLinkRouteTable struct {
	// The ID of the association between the route table and the Net or Subnet.
	LinkRouteTableId string `pulumi:"linkRouteTableId"`
	// If true, the route table is the main one.
	Main bool `pulumi:"main"`
	// The ID of the route table.
	RouteTableId             string `pulumi:"routeTableId"`
	RouteTableToSubnetLinkId string `pulumi:"routeTableToSubnetLinkId"`
	// The ID of the Subnet, if the route table is explicitly linked to a Subnet.
	SubnetId string `pulumi:"subnetId"`
}

// GetRouteTablesRouteTableLinkRouteTableInput is an input type that accepts GetRouteTablesRouteTableLinkRouteTableArgs and GetRouteTablesRouteTableLinkRouteTableOutput values.
// You can construct a concrete instance of `GetRouteTablesRouteTableLinkRouteTableInput` via:
//
//	GetRouteTablesRouteTableLinkRouteTableArgs{...}
type GetRouteTablesRouteTableLinkRouteTableInput interface {
	pulumi.Input

	ToGetRouteTablesRouteTableLinkRouteTableOutput() GetRouteTablesRouteTableLinkRouteTableOutput
	ToGetRouteTablesRouteTableLinkRouteTableOutputWithContext(context.Context) GetRouteTablesRouteTableLinkRouteTableOutput
}

type GetRouteTablesRouteTableLinkRouteTableArgs struct {
	// The ID of the association between the route table and the Net or Subnet.
	LinkRouteTableId pulumi.StringInput `pulumi:"linkRouteTableId"`
	// If true, the route table is the main one.
	Main pulumi.BoolInput `pulumi:"main"`
	// The ID of the route table.
	RouteTableId             pulumi.StringInput `pulumi:"routeTableId"`
	RouteTableToSubnetLinkId pulumi.StringInput `pulumi:"routeTableToSubnetLinkId"`
	// The ID of the Subnet, if the route table is explicitly linked to a Subnet.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
}

func (GetRouteTablesRouteTableLinkRouteTableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteTablesRouteTableLinkRouteTable)(nil)).Elem()
}

func (i GetRouteTablesRouteTableLinkRouteTableArgs) ToGetRouteTablesRouteTableLinkRouteTableOutput() GetRouteTablesRouteTableLinkRouteTableOutput {
	return i.ToGetRouteTablesRouteTableLinkRouteTableOutputWithContext(context.Background())
}

func (i GetRouteTablesRouteTableLinkRouteTableArgs) ToGetRouteTablesRouteTableLinkRouteTableOutputWithContext(ctx context.Context) GetRouteTablesRouteTableLinkRouteTableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteTablesRouteTableLinkRouteTableOutput)
}

// GetRouteTablesRouteTableLinkRouteTableArrayInput is an input type that accepts GetRouteTablesRouteTableLinkRouteTableArray and GetRouteTablesRouteTableLinkRouteTableArrayOutput values.
// You can construct a concrete instance of `GetRouteTablesRouteTableLinkRouteTableArrayInput` via:
//
//	GetRouteTablesRouteTableLinkRouteTableArray{ GetRouteTablesRouteTableLinkRouteTableArgs{...} }
type GetRouteTablesRouteTableLinkRouteTableArrayInput interface {
	pulumi.Input

	ToGetRouteTablesRouteTableLinkRouteTableArrayOutput() GetRouteTablesRouteTableLinkRouteTableArrayOutput
	ToGetRouteTablesRouteTableLinkRouteTableArrayOutputWithContext(context.Context) GetRouteTablesRouteTableLinkRouteTableArrayOutput
}

type GetRouteTablesRouteTableLinkRouteTableArray []GetRouteTablesRouteTableLinkRouteTableInput

func (GetRouteTablesRouteTableLinkRouteTableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteTablesRouteTableLinkRouteTable)(nil)).Elem()
}

func (i GetRouteTablesRouteTableLinkRouteTableArray) ToGetRouteTablesRouteTableLinkRouteTableArrayOutput() GetRouteTablesRouteTableLinkRouteTableArrayOutput {
	return i.ToGetRouteTablesRouteTableLinkRouteTableArrayOutputWithContext(context.Background())
}

func (i GetRouteTablesRouteTableLinkRouteTableArray) ToGetRouteTablesRouteTableLinkRouteTableArrayOutputWithContext(ctx context.Context) GetRouteTablesRouteTableLinkRouteTableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteTablesRouteTableLinkRouteTableArrayOutput)
}

type GetRouteTablesRouteTableLinkRouteTableOutput struct{ *pulumi.OutputState }

func (GetRouteTablesRouteTableLinkRouteTableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteTablesRouteTableLinkRouteTable)(nil)).Elem()
}

func (o GetRouteTablesRouteTableLinkRouteTableOutput) ToGetRouteTablesRouteTableLinkRouteTableOutput() GetRouteTablesRouteTableLinkRouteTableOutput {
	return o
}

func (o GetRouteTablesRouteTableLinkRouteTableOutput) ToGetRouteTablesRouteTableLinkRouteTableOutputWithContext(ctx context.Context) GetRouteTablesRouteTableLinkRouteTableOutput {
	return o
}

// The ID of the association between the route table and the Net or Subnet.
func (o GetRouteTablesRouteTableLinkRouteTableOutput) LinkRouteTableId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTablesRouteTableLinkRouteTable) string { return v.LinkRouteTableId }).(pulumi.StringOutput)
}

// If true, the route table is the main one.
func (o GetRouteTablesRouteTableLinkRouteTableOutput) Main() pulumi.BoolOutput {
	return o.ApplyT(func(v GetRouteTablesRouteTableLinkRouteTable) bool { return v.Main }).(pulumi.BoolOutput)
}

// The ID of the route table.
func (o GetRouteTablesRouteTableLinkRouteTableOutput) RouteTableId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTablesRouteTableLinkRouteTable) string { return v.RouteTableId }).(pulumi.StringOutput)
}

func (o GetRouteTablesRouteTableLinkRouteTableOutput) RouteTableToSubnetLinkId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTablesRouteTableLinkRouteTable) string { return v.RouteTableToSubnetLinkId }).(pulumi.StringOutput)
}

// The ID of the Subnet, if the route table is explicitly linked to a Subnet.
func (o GetRouteTablesRouteTableLinkRouteTableOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTablesRouteTableLinkRouteTable) string { return v.SubnetId }).(pulumi.StringOutput)
}

type GetRouteTablesRouteTableLinkRouteTableArrayOutput struct{ *pulumi.OutputState }

func (GetRouteTablesRouteTableLinkRouteTableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteTablesRouteTableLinkRouteTable)(nil)).Elem()
}

func (o GetRouteTablesRouteTableLinkRouteTableArrayOutput) ToGetRouteTablesRouteTableLinkRouteTableArrayOutput() GetRouteTablesRouteTableLinkRouteTableArrayOutput {
	return o
}

func (o GetRouteTablesRouteTableLinkRouteTableArrayOutput) ToGetRouteTablesRouteTableLinkRouteTableArrayOutputWithContext(ctx context.Context) GetRouteTablesRouteTableLinkRouteTableArrayOutput {
	return o
}

func (o GetRouteTablesRouteTableLinkRouteTableArrayOutput) Index(i pulumi.IntInput) GetRouteTablesRouteTableLinkRouteTableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouteTablesRouteTableLinkRouteTable {
		return vs[0].([]GetRouteTablesRouteTableLinkRouteTable)[vs[1].(int)]
	}).(GetRouteTablesRouteTableLinkRouteTableOutput)
}

type GetRouteTablesRouteTableRoute struct {
	// The method used to create the route.
	CreationMethod string `pulumi:"creationMethod"`
	// The IP range used for the destination match, in CIDR notation (for example, `10.0.0.0/24`).
	DestinationIpRange string `pulumi:"destinationIpRange"`
	// The ID of the OUTSCALE service.
	DestinationServiceId string `pulumi:"destinationServiceId"`
	// The ID of the internet service or virtual gateway attached to the Net.
	GatewayId string `pulumi:"gatewayId"`
	// The ID of a NAT service attached to the Net.
	NatServiceId string `pulumi:"natServiceId"`
	// The ID of the Net access point.
	NetAccessPointId string `pulumi:"netAccessPointId"`
	// The ID of the Net peering.
	NetPeeringId string `pulumi:"netPeeringId"`
	// The ID of the NIC.
	NicId string `pulumi:"nicId"`
	// The state of a route in the route table (always `active`).
	State string `pulumi:"state"`
	// The account ID of the owner of the VM.
	VmAccountId string `pulumi:"vmAccountId"`
	// The ID of a VM specified in a route in the table.
	VmId string `pulumi:"vmId"`
}

// GetRouteTablesRouteTableRouteInput is an input type that accepts GetRouteTablesRouteTableRouteArgs and GetRouteTablesRouteTableRouteOutput values.
// You can construct a concrete instance of `GetRouteTablesRouteTableRouteInput` via:
//
//	GetRouteTablesRouteTableRouteArgs{...}
type GetRouteTablesRouteTableRouteInput interface {
	pulumi.Input

	ToGetRouteTablesRouteTableRouteOutput() GetRouteTablesRouteTableRouteOutput
	ToGetRouteTablesRouteTableRouteOutputWithContext(context.Context) GetRouteTablesRouteTableRouteOutput
}

type GetRouteTablesRouteTableRouteArgs struct {
	// The method used to create the route.
	CreationMethod pulumi.StringInput `pulumi:"creationMethod"`
	// The IP range used for the destination match, in CIDR notation (for example, `10.0.0.0/24`).
	DestinationIpRange pulumi.StringInput `pulumi:"destinationIpRange"`
	// The ID of the OUTSCALE service.
	DestinationServiceId pulumi.StringInput `pulumi:"destinationServiceId"`
	// The ID of the internet service or virtual gateway attached to the Net.
	GatewayId pulumi.StringInput `pulumi:"gatewayId"`
	// The ID of a NAT service attached to the Net.
	NatServiceId pulumi.StringInput `pulumi:"natServiceId"`
	// The ID of the Net access point.
	NetAccessPointId pulumi.StringInput `pulumi:"netAccessPointId"`
	// The ID of the Net peering.
	NetPeeringId pulumi.StringInput `pulumi:"netPeeringId"`
	// The ID of the NIC.
	NicId pulumi.StringInput `pulumi:"nicId"`
	// The state of a route in the route table (always `active`).
	State pulumi.StringInput `pulumi:"state"`
	// The account ID of the owner of the VM.
	VmAccountId pulumi.StringInput `pulumi:"vmAccountId"`
	// The ID of a VM specified in a route in the table.
	VmId pulumi.StringInput `pulumi:"vmId"`
}

func (GetRouteTablesRouteTableRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteTablesRouteTableRoute)(nil)).Elem()
}

func (i GetRouteTablesRouteTableRouteArgs) ToGetRouteTablesRouteTableRouteOutput() GetRouteTablesRouteTableRouteOutput {
	return i.ToGetRouteTablesRouteTableRouteOutputWithContext(context.Background())
}

func (i GetRouteTablesRouteTableRouteArgs) ToGetRouteTablesRouteTableRouteOutputWithContext(ctx context.Context) GetRouteTablesRouteTableRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteTablesRouteTableRouteOutput)
}

// GetRouteTablesRouteTableRouteArrayInput is an input type that accepts GetRouteTablesRouteTableRouteArray and GetRouteTablesRouteTableRouteArrayOutput values.
// You can construct a concrete instance of `GetRouteTablesRouteTableRouteArrayInput` via:
//
//	GetRouteTablesRouteTableRouteArray{ GetRouteTablesRouteTableRouteArgs{...} }
type GetRouteTablesRouteTableRouteArrayInput interface {
	pulumi.Input

	ToGetRouteTablesRouteTableRouteArrayOutput() GetRouteTablesRouteTableRouteArrayOutput
	ToGetRouteTablesRouteTableRouteArrayOutputWithContext(context.Context) GetRouteTablesRouteTableRouteArrayOutput
}

type GetRouteTablesRouteTableRouteArray []GetRouteTablesRouteTableRouteInput

func (GetRouteTablesRouteTableRouteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteTablesRouteTableRoute)(nil)).Elem()
}

func (i GetRouteTablesRouteTableRouteArray) ToGetRouteTablesRouteTableRouteArrayOutput() GetRouteTablesRouteTableRouteArrayOutput {
	return i.ToGetRouteTablesRouteTableRouteArrayOutputWithContext(context.Background())
}

func (i GetRouteTablesRouteTableRouteArray) ToGetRouteTablesRouteTableRouteArrayOutputWithContext(ctx context.Context) GetRouteTablesRouteTableRouteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteTablesRouteTableRouteArrayOutput)
}

type GetRouteTablesRouteTableRouteOutput struct{ *pulumi.OutputState }

func (GetRouteTablesRouteTableRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteTablesRouteTableRoute)(nil)).Elem()
}

func (o GetRouteTablesRouteTableRouteOutput) ToGetRouteTablesRouteTableRouteOutput() GetRouteTablesRouteTableRouteOutput {
	return o
}

func (o GetRouteTablesRouteTableRouteOutput) ToGetRouteTablesRouteTableRouteOutputWithContext(ctx context.Context) GetRouteTablesRouteTableRouteOutput {
	return o
}

// The method used to create the route.
func (o GetRouteTablesRouteTableRouteOutput) CreationMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTablesRouteTableRoute) string { return v.CreationMethod }).(pulumi.StringOutput)
}

// The IP range used for the destination match, in CIDR notation (for example, `10.0.0.0/24`).
func (o GetRouteTablesRouteTableRouteOutput) DestinationIpRange() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTablesRouteTableRoute) string { return v.DestinationIpRange }).(pulumi.StringOutput)
}

// The ID of the OUTSCALE service.
func (o GetRouteTablesRouteTableRouteOutput) DestinationServiceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTablesRouteTableRoute) string { return v.DestinationServiceId }).(pulumi.StringOutput)
}

// The ID of the internet service or virtual gateway attached to the Net.
func (o GetRouteTablesRouteTableRouteOutput) GatewayId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTablesRouteTableRoute) string { return v.GatewayId }).(pulumi.StringOutput)
}

// The ID of a NAT service attached to the Net.
func (o GetRouteTablesRouteTableRouteOutput) NatServiceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTablesRouteTableRoute) string { return v.NatServiceId }).(pulumi.StringOutput)
}

// The ID of the Net access point.
func (o GetRouteTablesRouteTableRouteOutput) NetAccessPointId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTablesRouteTableRoute) string { return v.NetAccessPointId }).(pulumi.StringOutput)
}

// The ID of the Net peering.
func (o GetRouteTablesRouteTableRouteOutput) NetPeeringId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTablesRouteTableRoute) string { return v.NetPeeringId }).(pulumi.StringOutput)
}

// The ID of the NIC.
func (o GetRouteTablesRouteTableRouteOutput) NicId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTablesRouteTableRoute) string { return v.NicId }).(pulumi.StringOutput)
}

// The state of a route in the route table (always `active`).
func (o GetRouteTablesRouteTableRouteOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTablesRouteTableRoute) string { return v.State }).(pulumi.StringOutput)
}

// The account ID of the owner of the VM.
func (o GetRouteTablesRouteTableRouteOutput) VmAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTablesRouteTableRoute) string { return v.VmAccountId }).(pulumi.StringOutput)
}

// The ID of a VM specified in a route in the table.
func (o GetRouteTablesRouteTableRouteOutput) VmId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTablesRouteTableRoute) string { return v.VmId }).(pulumi.StringOutput)
}

type GetRouteTablesRouteTableRouteArrayOutput struct{ *pulumi.OutputState }

func (GetRouteTablesRouteTableRouteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteTablesRouteTableRoute)(nil)).Elem()
}

func (o GetRouteTablesRouteTableRouteArrayOutput) ToGetRouteTablesRouteTableRouteArrayOutput() GetRouteTablesRouteTableRouteArrayOutput {
	return o
}

func (o GetRouteTablesRouteTableRouteArrayOutput) ToGetRouteTablesRouteTableRouteArrayOutputWithContext(ctx context.Context) GetRouteTablesRouteTableRouteArrayOutput {
	return o
}

func (o GetRouteTablesRouteTableRouteArrayOutput) Index(i pulumi.IntInput) GetRouteTablesRouteTableRouteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouteTablesRouteTableRoute {
		return vs[0].([]GetRouteTablesRouteTableRoute)[vs[1].(int)]
	}).(GetRouteTablesRouteTableRouteOutput)
}

type GetRouteTablesRouteTableRoutePropagatingVirtualGateway struct {
	// The ID of the virtual gateway.
	VirtualGatewayId string `pulumi:"virtualGatewayId"`
}

// GetRouteTablesRouteTableRoutePropagatingVirtualGatewayInput is an input type that accepts GetRouteTablesRouteTableRoutePropagatingVirtualGatewayArgs and GetRouteTablesRouteTableRoutePropagatingVirtualGatewayOutput values.
// You can construct a concrete instance of `GetRouteTablesRouteTableRoutePropagatingVirtualGatewayInput` via:
//
//	GetRouteTablesRouteTableRoutePropagatingVirtualGatewayArgs{...}
type GetRouteTablesRouteTableRoutePropagatingVirtualGatewayInput interface {
	pulumi.Input

	ToGetRouteTablesRouteTableRoutePropagatingVirtualGatewayOutput() GetRouteTablesRouteTableRoutePropagatingVirtualGatewayOutput
	ToGetRouteTablesRouteTableRoutePropagatingVirtualGatewayOutputWithContext(context.Context) GetRouteTablesRouteTableRoutePropagatingVirtualGatewayOutput
}

type GetRouteTablesRouteTableRoutePropagatingVirtualGatewayArgs struct {
	// The ID of the virtual gateway.
	VirtualGatewayId pulumi.StringInput `pulumi:"virtualGatewayId"`
}

func (GetRouteTablesRouteTableRoutePropagatingVirtualGatewayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteTablesRouteTableRoutePropagatingVirtualGateway)(nil)).Elem()
}

func (i GetRouteTablesRouteTableRoutePropagatingVirtualGatewayArgs) ToGetRouteTablesRouteTableRoutePropagatingVirtualGatewayOutput() GetRouteTablesRouteTableRoutePropagatingVirtualGatewayOutput {
	return i.ToGetRouteTablesRouteTableRoutePropagatingVirtualGatewayOutputWithContext(context.Background())
}

func (i GetRouteTablesRouteTableRoutePropagatingVirtualGatewayArgs) ToGetRouteTablesRouteTableRoutePropagatingVirtualGatewayOutputWithContext(ctx context.Context) GetRouteTablesRouteTableRoutePropagatingVirtualGatewayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteTablesRouteTableRoutePropagatingVirtualGatewayOutput)
}

// GetRouteTablesRouteTableRoutePropagatingVirtualGatewayArrayInput is an input type that accepts GetRouteTablesRouteTableRoutePropagatingVirtualGatewayArray and GetRouteTablesRouteTableRoutePropagatingVirtualGatewayArrayOutput values.
// You can construct a concrete instance of `GetRouteTablesRouteTableRoutePropagatingVirtualGatewayArrayInput` via:
//
//	GetRouteTablesRouteTableRoutePropagatingVirtualGatewayArray{ GetRouteTablesRouteTableRoutePropagatingVirtualGatewayArgs{...} }
type GetRouteTablesRouteTableRoutePropagatingVirtualGatewayArrayInput interface {
	pulumi.Input

	ToGetRouteTablesRouteTableRoutePropagatingVirtualGatewayArrayOutput() GetRouteTablesRouteTableRoutePropagatingVirtualGatewayArrayOutput
	ToGetRouteTablesRouteTableRoutePropagatingVirtualGatewayArrayOutputWithContext(context.Context) GetRouteTablesRouteTableRoutePropagatingVirtualGatewayArrayOutput
}

type GetRouteTablesRouteTableRoutePropagatingVirtualGatewayArray []GetRouteTablesRouteTableRoutePropagatingVirtualGatewayInput

func (GetRouteTablesRouteTableRoutePropagatingVirtualGatewayArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteTablesRouteTableRoutePropagatingVirtualGateway)(nil)).Elem()
}

func (i GetRouteTablesRouteTableRoutePropagatingVirtualGatewayArray) ToGetRouteTablesRouteTableRoutePropagatingVirtualGatewayArrayOutput() GetRouteTablesRouteTableRoutePropagatingVirtualGatewayArrayOutput {
	return i.ToGetRouteTablesRouteTableRoutePropagatingVirtualGatewayArrayOutputWithContext(context.Background())
}

func (i GetRouteTablesRouteTableRoutePropagatingVirtualGatewayArray) ToGetRouteTablesRouteTableRoutePropagatingVirtualGatewayArrayOutputWithContext(ctx context.Context) GetRouteTablesRouteTableRoutePropagatingVirtualGatewayArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteTablesRouteTableRoutePropagatingVirtualGatewayArrayOutput)
}

type GetRouteTablesRouteTableRoutePropagatingVirtualGatewayOutput struct{ *pulumi.OutputState }

func (GetRouteTablesRouteTableRoutePropagatingVirtualGatewayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteTablesRouteTableRoutePropagatingVirtualGateway)(nil)).Elem()
}

func (o GetRouteTablesRouteTableRoutePropagatingVirtualGatewayOutput) ToGetRouteTablesRouteTableRoutePropagatingVirtualGatewayOutput() GetRouteTablesRouteTableRoutePropagatingVirtualGatewayOutput {
	return o
}

func (o GetRouteTablesRouteTableRoutePropagatingVirtualGatewayOutput) ToGetRouteTablesRouteTableRoutePropagatingVirtualGatewayOutputWithContext(ctx context.Context) GetRouteTablesRouteTableRoutePropagatingVirtualGatewayOutput {
	return o
}

// The ID of the virtual gateway.
func (o GetRouteTablesRouteTableRoutePropagatingVirtualGatewayOutput) VirtualGatewayId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTablesRouteTableRoutePropagatingVirtualGateway) string { return v.VirtualGatewayId }).(pulumi.StringOutput)
}

type GetRouteTablesRouteTableRoutePropagatingVirtualGatewayArrayOutput struct{ *pulumi.OutputState }

func (GetRouteTablesRouteTableRoutePropagatingVirtualGatewayArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteTablesRouteTableRoutePropagatingVirtualGateway)(nil)).Elem()
}

func (o GetRouteTablesRouteTableRoutePropagatingVirtualGatewayArrayOutput) ToGetRouteTablesRouteTableRoutePropagatingVirtualGatewayArrayOutput() GetRouteTablesRouteTableRoutePropagatingVirtualGatewayArrayOutput {
	return o
}

func (o GetRouteTablesRouteTableRoutePropagatingVirtualGatewayArrayOutput) ToGetRouteTablesRouteTableRoutePropagatingVirtualGatewayArrayOutputWithContext(ctx context.Context) GetRouteTablesRouteTableRoutePropagatingVirtualGatewayArrayOutput {
	return o
}

func (o GetRouteTablesRouteTableRoutePropagatingVirtualGatewayArrayOutput) Index(i pulumi.IntInput) GetRouteTablesRouteTableRoutePropagatingVirtualGatewayOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouteTablesRouteTableRoutePropagatingVirtualGateway {
		return vs[0].([]GetRouteTablesRouteTableRoutePropagatingVirtualGateway)[vs[1].(int)]
	}).(GetRouteTablesRouteTableRoutePropagatingVirtualGatewayOutput)
}

type GetRouteTablesRouteTableTag struct {
	// The key of the tag, with a minimum of 1 character.
	Key string `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value string `pulumi:"value"`
}

// GetRouteTablesRouteTableTagInput is an input type that accepts GetRouteTablesRouteTableTagArgs and GetRouteTablesRouteTableTagOutput values.
// You can construct a concrete instance of `GetRouteTablesRouteTableTagInput` via:
//
//	GetRouteTablesRouteTableTagArgs{...}
type GetRouteTablesRouteTableTagInput interface {
	pulumi.Input

	ToGetRouteTablesRouteTableTagOutput() GetRouteTablesRouteTableTagOutput
	ToGetRouteTablesRouteTableTagOutputWithContext(context.Context) GetRouteTablesRouteTableTagOutput
}

type GetRouteTablesRouteTableTagArgs struct {
	// The key of the tag, with a minimum of 1 character.
	Key pulumi.StringInput `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetRouteTablesRouteTableTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteTablesRouteTableTag)(nil)).Elem()
}

func (i GetRouteTablesRouteTableTagArgs) ToGetRouteTablesRouteTableTagOutput() GetRouteTablesRouteTableTagOutput {
	return i.ToGetRouteTablesRouteTableTagOutputWithContext(context.Background())
}

func (i GetRouteTablesRouteTableTagArgs) ToGetRouteTablesRouteTableTagOutputWithContext(ctx context.Context) GetRouteTablesRouteTableTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteTablesRouteTableTagOutput)
}

// GetRouteTablesRouteTableTagArrayInput is an input type that accepts GetRouteTablesRouteTableTagArray and GetRouteTablesRouteTableTagArrayOutput values.
// You can construct a concrete instance of `GetRouteTablesRouteTableTagArrayInput` via:
//
//	GetRouteTablesRouteTableTagArray{ GetRouteTablesRouteTableTagArgs{...} }
type GetRouteTablesRouteTableTagArrayInput interface {
	pulumi.Input

	ToGetRouteTablesRouteTableTagArrayOutput() GetRouteTablesRouteTableTagArrayOutput
	ToGetRouteTablesRouteTableTagArrayOutputWithContext(context.Context) GetRouteTablesRouteTableTagArrayOutput
}

type GetRouteTablesRouteTableTagArray []GetRouteTablesRouteTableTagInput

func (GetRouteTablesRouteTableTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteTablesRouteTableTag)(nil)).Elem()
}

func (i GetRouteTablesRouteTableTagArray) ToGetRouteTablesRouteTableTagArrayOutput() GetRouteTablesRouteTableTagArrayOutput {
	return i.ToGetRouteTablesRouteTableTagArrayOutputWithContext(context.Background())
}

func (i GetRouteTablesRouteTableTagArray) ToGetRouteTablesRouteTableTagArrayOutputWithContext(ctx context.Context) GetRouteTablesRouteTableTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteTablesRouteTableTagArrayOutput)
}

type GetRouteTablesRouteTableTagOutput struct{ *pulumi.OutputState }

func (GetRouteTablesRouteTableTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteTablesRouteTableTag)(nil)).Elem()
}

func (o GetRouteTablesRouteTableTagOutput) ToGetRouteTablesRouteTableTagOutput() GetRouteTablesRouteTableTagOutput {
	return o
}

func (o GetRouteTablesRouteTableTagOutput) ToGetRouteTablesRouteTableTagOutputWithContext(ctx context.Context) GetRouteTablesRouteTableTagOutput {
	return o
}

// The key of the tag, with a minimum of 1 character.
func (o GetRouteTablesRouteTableTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTablesRouteTableTag) string { return v.Key }).(pulumi.StringOutput)
}

// The value of the tag, between 0 and 255 characters.
func (o GetRouteTablesRouteTableTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTablesRouteTableTag) string { return v.Value }).(pulumi.StringOutput)
}

type GetRouteTablesRouteTableTagArrayOutput struct{ *pulumi.OutputState }

func (GetRouteTablesRouteTableTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteTablesRouteTableTag)(nil)).Elem()
}

func (o GetRouteTablesRouteTableTagArrayOutput) ToGetRouteTablesRouteTableTagArrayOutput() GetRouteTablesRouteTableTagArrayOutput {
	return o
}

func (o GetRouteTablesRouteTableTagArrayOutput) ToGetRouteTablesRouteTableTagArrayOutputWithContext(ctx context.Context) GetRouteTablesRouteTableTagArrayOutput {
	return o
}

func (o GetRouteTablesRouteTableTagArrayOutput) Index(i pulumi.IntInput) GetRouteTablesRouteTableTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouteTablesRouteTableTag {
		return vs[0].([]GetRouteTablesRouteTableTag)[vs[1].(int)]
	}).(GetRouteTablesRouteTableTagOutput)
}

type GetSecurityGroupFilter struct {
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// GetSecurityGroupFilterInput is an input type that accepts GetSecurityGroupFilterArgs and GetSecurityGroupFilterOutput values.
// You can construct a concrete instance of `GetSecurityGroupFilterInput` via:
//
//	GetSecurityGroupFilterArgs{...}
type GetSecurityGroupFilterInput interface {
	pulumi.Input

	ToGetSecurityGroupFilterOutput() GetSecurityGroupFilterOutput
	ToGetSecurityGroupFilterOutputWithContext(context.Context) GetSecurityGroupFilterOutput
}

type GetSecurityGroupFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetSecurityGroupFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityGroupFilter)(nil)).Elem()
}

func (i GetSecurityGroupFilterArgs) ToGetSecurityGroupFilterOutput() GetSecurityGroupFilterOutput {
	return i.ToGetSecurityGroupFilterOutputWithContext(context.Background())
}

func (i GetSecurityGroupFilterArgs) ToGetSecurityGroupFilterOutputWithContext(ctx context.Context) GetSecurityGroupFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityGroupFilterOutput)
}

// GetSecurityGroupFilterArrayInput is an input type that accepts GetSecurityGroupFilterArray and GetSecurityGroupFilterArrayOutput values.
// You can construct a concrete instance of `GetSecurityGroupFilterArrayInput` via:
//
//	GetSecurityGroupFilterArray{ GetSecurityGroupFilterArgs{...} }
type GetSecurityGroupFilterArrayInput interface {
	pulumi.Input

	ToGetSecurityGroupFilterArrayOutput() GetSecurityGroupFilterArrayOutput
	ToGetSecurityGroupFilterArrayOutputWithContext(context.Context) GetSecurityGroupFilterArrayOutput
}

type GetSecurityGroupFilterArray []GetSecurityGroupFilterInput

func (GetSecurityGroupFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityGroupFilter)(nil)).Elem()
}

func (i GetSecurityGroupFilterArray) ToGetSecurityGroupFilterArrayOutput() GetSecurityGroupFilterArrayOutput {
	return i.ToGetSecurityGroupFilterArrayOutputWithContext(context.Background())
}

func (i GetSecurityGroupFilterArray) ToGetSecurityGroupFilterArrayOutputWithContext(ctx context.Context) GetSecurityGroupFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityGroupFilterArrayOutput)
}

type GetSecurityGroupFilterOutput struct{ *pulumi.OutputState }

func (GetSecurityGroupFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityGroupFilter)(nil)).Elem()
}

func (o GetSecurityGroupFilterOutput) ToGetSecurityGroupFilterOutput() GetSecurityGroupFilterOutput {
	return o
}

func (o GetSecurityGroupFilterOutput) ToGetSecurityGroupFilterOutputWithContext(ctx context.Context) GetSecurityGroupFilterOutput {
	return o
}

func (o GetSecurityGroupFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityGroupFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetSecurityGroupFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSecurityGroupFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetSecurityGroupFilterArrayOutput struct{ *pulumi.OutputState }

func (GetSecurityGroupFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityGroupFilter)(nil)).Elem()
}

func (o GetSecurityGroupFilterArrayOutput) ToGetSecurityGroupFilterArrayOutput() GetSecurityGroupFilterArrayOutput {
	return o
}

func (o GetSecurityGroupFilterArrayOutput) ToGetSecurityGroupFilterArrayOutputWithContext(ctx context.Context) GetSecurityGroupFilterArrayOutput {
	return o
}

func (o GetSecurityGroupFilterArrayOutput) Index(i pulumi.IntInput) GetSecurityGroupFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSecurityGroupFilter {
		return vs[0].([]GetSecurityGroupFilter)[vs[1].(int)]
	}).(GetSecurityGroupFilterOutput)
}

type GetSecurityGroupInboundRule struct {
	// The beginning of the port range for the TCP and UDP protocols, or an ICMP type number.
	FromPortRange int `pulumi:"fromPortRange"`
	// The IP protocol name (`tcp`, `udp`, `icmp`, or `-1` for all protocols). By default, `-1`. In a Net, this can also be an IP protocol number. For more information, see the [IANA.org website](https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml).
	IpProtocol string `pulumi:"ipProtocol"`
	// One or more IP ranges for the security group rules, in CIDR notation (for example, `10.0.0.0/16`).
	IpRanges      []string `pulumi:"ipRanges"`
	PrefixListIds []string `pulumi:"prefixListIds"`
	// Information about one or more source or destination security groups.
	SecurityGroupsMembers []GetSecurityGroupInboundRuleSecurityGroupsMember `pulumi:"securityGroupsMembers"`
	// The end of the port range for the TCP and UDP protocols, or an ICMP code number.
	ToPortRange int `pulumi:"toPortRange"`
}

// GetSecurityGroupInboundRuleInput is an input type that accepts GetSecurityGroupInboundRuleArgs and GetSecurityGroupInboundRuleOutput values.
// You can construct a concrete instance of `GetSecurityGroupInboundRuleInput` via:
//
//	GetSecurityGroupInboundRuleArgs{...}
type GetSecurityGroupInboundRuleInput interface {
	pulumi.Input

	ToGetSecurityGroupInboundRuleOutput() GetSecurityGroupInboundRuleOutput
	ToGetSecurityGroupInboundRuleOutputWithContext(context.Context) GetSecurityGroupInboundRuleOutput
}

type GetSecurityGroupInboundRuleArgs struct {
	// The beginning of the port range for the TCP and UDP protocols, or an ICMP type number.
	FromPortRange pulumi.IntInput `pulumi:"fromPortRange"`
	// The IP protocol name (`tcp`, `udp`, `icmp`, or `-1` for all protocols). By default, `-1`. In a Net, this can also be an IP protocol number. For more information, see the [IANA.org website](https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml).
	IpProtocol pulumi.StringInput `pulumi:"ipProtocol"`
	// One or more IP ranges for the security group rules, in CIDR notation (for example, `10.0.0.0/16`).
	IpRanges      pulumi.StringArrayInput `pulumi:"ipRanges"`
	PrefixListIds pulumi.StringArrayInput `pulumi:"prefixListIds"`
	// Information about one or more source or destination security groups.
	SecurityGroupsMembers GetSecurityGroupInboundRuleSecurityGroupsMemberArrayInput `pulumi:"securityGroupsMembers"`
	// The end of the port range for the TCP and UDP protocols, or an ICMP code number.
	ToPortRange pulumi.IntInput `pulumi:"toPortRange"`
}

func (GetSecurityGroupInboundRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityGroupInboundRule)(nil)).Elem()
}

func (i GetSecurityGroupInboundRuleArgs) ToGetSecurityGroupInboundRuleOutput() GetSecurityGroupInboundRuleOutput {
	return i.ToGetSecurityGroupInboundRuleOutputWithContext(context.Background())
}

func (i GetSecurityGroupInboundRuleArgs) ToGetSecurityGroupInboundRuleOutputWithContext(ctx context.Context) GetSecurityGroupInboundRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityGroupInboundRuleOutput)
}

// GetSecurityGroupInboundRuleArrayInput is an input type that accepts GetSecurityGroupInboundRuleArray and GetSecurityGroupInboundRuleArrayOutput values.
// You can construct a concrete instance of `GetSecurityGroupInboundRuleArrayInput` via:
//
//	GetSecurityGroupInboundRuleArray{ GetSecurityGroupInboundRuleArgs{...} }
type GetSecurityGroupInboundRuleArrayInput interface {
	pulumi.Input

	ToGetSecurityGroupInboundRuleArrayOutput() GetSecurityGroupInboundRuleArrayOutput
	ToGetSecurityGroupInboundRuleArrayOutputWithContext(context.Context) GetSecurityGroupInboundRuleArrayOutput
}

type GetSecurityGroupInboundRuleArray []GetSecurityGroupInboundRuleInput

func (GetSecurityGroupInboundRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityGroupInboundRule)(nil)).Elem()
}

func (i GetSecurityGroupInboundRuleArray) ToGetSecurityGroupInboundRuleArrayOutput() GetSecurityGroupInboundRuleArrayOutput {
	return i.ToGetSecurityGroupInboundRuleArrayOutputWithContext(context.Background())
}

func (i GetSecurityGroupInboundRuleArray) ToGetSecurityGroupInboundRuleArrayOutputWithContext(ctx context.Context) GetSecurityGroupInboundRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityGroupInboundRuleArrayOutput)
}

type GetSecurityGroupInboundRuleOutput struct{ *pulumi.OutputState }

func (GetSecurityGroupInboundRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityGroupInboundRule)(nil)).Elem()
}

func (o GetSecurityGroupInboundRuleOutput) ToGetSecurityGroupInboundRuleOutput() GetSecurityGroupInboundRuleOutput {
	return o
}

func (o GetSecurityGroupInboundRuleOutput) ToGetSecurityGroupInboundRuleOutputWithContext(ctx context.Context) GetSecurityGroupInboundRuleOutput {
	return o
}

// The beginning of the port range for the TCP and UDP protocols, or an ICMP type number.
func (o GetSecurityGroupInboundRuleOutput) FromPortRange() pulumi.IntOutput {
	return o.ApplyT(func(v GetSecurityGroupInboundRule) int { return v.FromPortRange }).(pulumi.IntOutput)
}

// The IP protocol name (`tcp`, `udp`, `icmp`, or `-1` for all protocols). By default, `-1`. In a Net, this can also be an IP protocol number. For more information, see the [IANA.org website](https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml).
func (o GetSecurityGroupInboundRuleOutput) IpProtocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityGroupInboundRule) string { return v.IpProtocol }).(pulumi.StringOutput)
}

// One or more IP ranges for the security group rules, in CIDR notation (for example, `10.0.0.0/16`).
func (o GetSecurityGroupInboundRuleOutput) IpRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSecurityGroupInboundRule) []string { return v.IpRanges }).(pulumi.StringArrayOutput)
}

func (o GetSecurityGroupInboundRuleOutput) PrefixListIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSecurityGroupInboundRule) []string { return v.PrefixListIds }).(pulumi.StringArrayOutput)
}

// Information about one or more source or destination security groups.
func (o GetSecurityGroupInboundRuleOutput) SecurityGroupsMembers() GetSecurityGroupInboundRuleSecurityGroupsMemberArrayOutput {
	return o.ApplyT(func(v GetSecurityGroupInboundRule) []GetSecurityGroupInboundRuleSecurityGroupsMember {
		return v.SecurityGroupsMembers
	}).(GetSecurityGroupInboundRuleSecurityGroupsMemberArrayOutput)
}

// The end of the port range for the TCP and UDP protocols, or an ICMP code number.
func (o GetSecurityGroupInboundRuleOutput) ToPortRange() pulumi.IntOutput {
	return o.ApplyT(func(v GetSecurityGroupInboundRule) int { return v.ToPortRange }).(pulumi.IntOutput)
}

type GetSecurityGroupInboundRuleArrayOutput struct{ *pulumi.OutputState }

func (GetSecurityGroupInboundRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityGroupInboundRule)(nil)).Elem()
}

func (o GetSecurityGroupInboundRuleArrayOutput) ToGetSecurityGroupInboundRuleArrayOutput() GetSecurityGroupInboundRuleArrayOutput {
	return o
}

func (o GetSecurityGroupInboundRuleArrayOutput) ToGetSecurityGroupInboundRuleArrayOutputWithContext(ctx context.Context) GetSecurityGroupInboundRuleArrayOutput {
	return o
}

func (o GetSecurityGroupInboundRuleArrayOutput) Index(i pulumi.IntInput) GetSecurityGroupInboundRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSecurityGroupInboundRule {
		return vs[0].([]GetSecurityGroupInboundRule)[vs[1].(int)]
	}).(GetSecurityGroupInboundRuleOutput)
}

type GetSecurityGroupInboundRuleSecurityGroupsMember struct {
	// The account ID that owns the source or destination security group.
	AccountId string `pulumi:"accountId"`
	// The ID of the security group.
	SecurityGroupId string `pulumi:"securityGroupId"`
	// The name of the security group.
	SecurityGroupName string `pulumi:"securityGroupName"`
}

// GetSecurityGroupInboundRuleSecurityGroupsMemberInput is an input type that accepts GetSecurityGroupInboundRuleSecurityGroupsMemberArgs and GetSecurityGroupInboundRuleSecurityGroupsMemberOutput values.
// You can construct a concrete instance of `GetSecurityGroupInboundRuleSecurityGroupsMemberInput` via:
//
//	GetSecurityGroupInboundRuleSecurityGroupsMemberArgs{...}
type GetSecurityGroupInboundRuleSecurityGroupsMemberInput interface {
	pulumi.Input

	ToGetSecurityGroupInboundRuleSecurityGroupsMemberOutput() GetSecurityGroupInboundRuleSecurityGroupsMemberOutput
	ToGetSecurityGroupInboundRuleSecurityGroupsMemberOutputWithContext(context.Context) GetSecurityGroupInboundRuleSecurityGroupsMemberOutput
}

type GetSecurityGroupInboundRuleSecurityGroupsMemberArgs struct {
	// The account ID that owns the source or destination security group.
	AccountId pulumi.StringInput `pulumi:"accountId"`
	// The ID of the security group.
	SecurityGroupId pulumi.StringInput `pulumi:"securityGroupId"`
	// The name of the security group.
	SecurityGroupName pulumi.StringInput `pulumi:"securityGroupName"`
}

func (GetSecurityGroupInboundRuleSecurityGroupsMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityGroupInboundRuleSecurityGroupsMember)(nil)).Elem()
}

func (i GetSecurityGroupInboundRuleSecurityGroupsMemberArgs) ToGetSecurityGroupInboundRuleSecurityGroupsMemberOutput() GetSecurityGroupInboundRuleSecurityGroupsMemberOutput {
	return i.ToGetSecurityGroupInboundRuleSecurityGroupsMemberOutputWithContext(context.Background())
}

func (i GetSecurityGroupInboundRuleSecurityGroupsMemberArgs) ToGetSecurityGroupInboundRuleSecurityGroupsMemberOutputWithContext(ctx context.Context) GetSecurityGroupInboundRuleSecurityGroupsMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityGroupInboundRuleSecurityGroupsMemberOutput)
}

// GetSecurityGroupInboundRuleSecurityGroupsMemberArrayInput is an input type that accepts GetSecurityGroupInboundRuleSecurityGroupsMemberArray and GetSecurityGroupInboundRuleSecurityGroupsMemberArrayOutput values.
// You can construct a concrete instance of `GetSecurityGroupInboundRuleSecurityGroupsMemberArrayInput` via:
//
//	GetSecurityGroupInboundRuleSecurityGroupsMemberArray{ GetSecurityGroupInboundRuleSecurityGroupsMemberArgs{...} }
type GetSecurityGroupInboundRuleSecurityGroupsMemberArrayInput interface {
	pulumi.Input

	ToGetSecurityGroupInboundRuleSecurityGroupsMemberArrayOutput() GetSecurityGroupInboundRuleSecurityGroupsMemberArrayOutput
	ToGetSecurityGroupInboundRuleSecurityGroupsMemberArrayOutputWithContext(context.Context) GetSecurityGroupInboundRuleSecurityGroupsMemberArrayOutput
}

type GetSecurityGroupInboundRuleSecurityGroupsMemberArray []GetSecurityGroupInboundRuleSecurityGroupsMemberInput

func (GetSecurityGroupInboundRuleSecurityGroupsMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityGroupInboundRuleSecurityGroupsMember)(nil)).Elem()
}

func (i GetSecurityGroupInboundRuleSecurityGroupsMemberArray) ToGetSecurityGroupInboundRuleSecurityGroupsMemberArrayOutput() GetSecurityGroupInboundRuleSecurityGroupsMemberArrayOutput {
	return i.ToGetSecurityGroupInboundRuleSecurityGroupsMemberArrayOutputWithContext(context.Background())
}

func (i GetSecurityGroupInboundRuleSecurityGroupsMemberArray) ToGetSecurityGroupInboundRuleSecurityGroupsMemberArrayOutputWithContext(ctx context.Context) GetSecurityGroupInboundRuleSecurityGroupsMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityGroupInboundRuleSecurityGroupsMemberArrayOutput)
}

type GetSecurityGroupInboundRuleSecurityGroupsMemberOutput struct{ *pulumi.OutputState }

func (GetSecurityGroupInboundRuleSecurityGroupsMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityGroupInboundRuleSecurityGroupsMember)(nil)).Elem()
}

func (o GetSecurityGroupInboundRuleSecurityGroupsMemberOutput) ToGetSecurityGroupInboundRuleSecurityGroupsMemberOutput() GetSecurityGroupInboundRuleSecurityGroupsMemberOutput {
	return o
}

func (o GetSecurityGroupInboundRuleSecurityGroupsMemberOutput) ToGetSecurityGroupInboundRuleSecurityGroupsMemberOutputWithContext(ctx context.Context) GetSecurityGroupInboundRuleSecurityGroupsMemberOutput {
	return o
}

// The account ID that owns the source or destination security group.
func (o GetSecurityGroupInboundRuleSecurityGroupsMemberOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityGroupInboundRuleSecurityGroupsMember) string { return v.AccountId }).(pulumi.StringOutput)
}

// The ID of the security group.
func (o GetSecurityGroupInboundRuleSecurityGroupsMemberOutput) SecurityGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityGroupInboundRuleSecurityGroupsMember) string { return v.SecurityGroupId }).(pulumi.StringOutput)
}

// The name of the security group.
func (o GetSecurityGroupInboundRuleSecurityGroupsMemberOutput) SecurityGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityGroupInboundRuleSecurityGroupsMember) string { return v.SecurityGroupName }).(pulumi.StringOutput)
}

type GetSecurityGroupInboundRuleSecurityGroupsMemberArrayOutput struct{ *pulumi.OutputState }

func (GetSecurityGroupInboundRuleSecurityGroupsMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityGroupInboundRuleSecurityGroupsMember)(nil)).Elem()
}

func (o GetSecurityGroupInboundRuleSecurityGroupsMemberArrayOutput) ToGetSecurityGroupInboundRuleSecurityGroupsMemberArrayOutput() GetSecurityGroupInboundRuleSecurityGroupsMemberArrayOutput {
	return o
}

func (o GetSecurityGroupInboundRuleSecurityGroupsMemberArrayOutput) ToGetSecurityGroupInboundRuleSecurityGroupsMemberArrayOutputWithContext(ctx context.Context) GetSecurityGroupInboundRuleSecurityGroupsMemberArrayOutput {
	return o
}

func (o GetSecurityGroupInboundRuleSecurityGroupsMemberArrayOutput) Index(i pulumi.IntInput) GetSecurityGroupInboundRuleSecurityGroupsMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSecurityGroupInboundRuleSecurityGroupsMember {
		return vs[0].([]GetSecurityGroupInboundRuleSecurityGroupsMember)[vs[1].(int)]
	}).(GetSecurityGroupInboundRuleSecurityGroupsMemberOutput)
}

type GetSecurityGroupOutboundRule struct {
	// The beginning of the port range for the TCP and UDP protocols, or an ICMP type number.
	FromPortRange int `pulumi:"fromPortRange"`
	// The IP protocol name (`tcp`, `udp`, `icmp`, or `-1` for all protocols). By default, `-1`. In a Net, this can also be an IP protocol number. For more information, see the [IANA.org website](https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml).
	IpProtocol string `pulumi:"ipProtocol"`
	// One or more IP ranges for the security group rules, in CIDR notation (for example, `10.0.0.0/16`).
	IpRanges      []string `pulumi:"ipRanges"`
	PrefixListIds []string `pulumi:"prefixListIds"`
	// Information about one or more source or destination security groups.
	SecurityGroupsMembers []GetSecurityGroupOutboundRuleSecurityGroupsMember `pulumi:"securityGroupsMembers"`
	// The end of the port range for the TCP and UDP protocols, or an ICMP code number.
	ToPortRange int `pulumi:"toPortRange"`
}

// GetSecurityGroupOutboundRuleInput is an input type that accepts GetSecurityGroupOutboundRuleArgs and GetSecurityGroupOutboundRuleOutput values.
// You can construct a concrete instance of `GetSecurityGroupOutboundRuleInput` via:
//
//	GetSecurityGroupOutboundRuleArgs{...}
type GetSecurityGroupOutboundRuleInput interface {
	pulumi.Input

	ToGetSecurityGroupOutboundRuleOutput() GetSecurityGroupOutboundRuleOutput
	ToGetSecurityGroupOutboundRuleOutputWithContext(context.Context) GetSecurityGroupOutboundRuleOutput
}

type GetSecurityGroupOutboundRuleArgs struct {
	// The beginning of the port range for the TCP and UDP protocols, or an ICMP type number.
	FromPortRange pulumi.IntInput `pulumi:"fromPortRange"`
	// The IP protocol name (`tcp`, `udp`, `icmp`, or `-1` for all protocols). By default, `-1`. In a Net, this can also be an IP protocol number. For more information, see the [IANA.org website](https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml).
	IpProtocol pulumi.StringInput `pulumi:"ipProtocol"`
	// One or more IP ranges for the security group rules, in CIDR notation (for example, `10.0.0.0/16`).
	IpRanges      pulumi.StringArrayInput `pulumi:"ipRanges"`
	PrefixListIds pulumi.StringArrayInput `pulumi:"prefixListIds"`
	// Information about one or more source or destination security groups.
	SecurityGroupsMembers GetSecurityGroupOutboundRuleSecurityGroupsMemberArrayInput `pulumi:"securityGroupsMembers"`
	// The end of the port range for the TCP and UDP protocols, or an ICMP code number.
	ToPortRange pulumi.IntInput `pulumi:"toPortRange"`
}

func (GetSecurityGroupOutboundRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityGroupOutboundRule)(nil)).Elem()
}

func (i GetSecurityGroupOutboundRuleArgs) ToGetSecurityGroupOutboundRuleOutput() GetSecurityGroupOutboundRuleOutput {
	return i.ToGetSecurityGroupOutboundRuleOutputWithContext(context.Background())
}

func (i GetSecurityGroupOutboundRuleArgs) ToGetSecurityGroupOutboundRuleOutputWithContext(ctx context.Context) GetSecurityGroupOutboundRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityGroupOutboundRuleOutput)
}

// GetSecurityGroupOutboundRuleArrayInput is an input type that accepts GetSecurityGroupOutboundRuleArray and GetSecurityGroupOutboundRuleArrayOutput values.
// You can construct a concrete instance of `GetSecurityGroupOutboundRuleArrayInput` via:
//
//	GetSecurityGroupOutboundRuleArray{ GetSecurityGroupOutboundRuleArgs{...} }
type GetSecurityGroupOutboundRuleArrayInput interface {
	pulumi.Input

	ToGetSecurityGroupOutboundRuleArrayOutput() GetSecurityGroupOutboundRuleArrayOutput
	ToGetSecurityGroupOutboundRuleArrayOutputWithContext(context.Context) GetSecurityGroupOutboundRuleArrayOutput
}

type GetSecurityGroupOutboundRuleArray []GetSecurityGroupOutboundRuleInput

func (GetSecurityGroupOutboundRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityGroupOutboundRule)(nil)).Elem()
}

func (i GetSecurityGroupOutboundRuleArray) ToGetSecurityGroupOutboundRuleArrayOutput() GetSecurityGroupOutboundRuleArrayOutput {
	return i.ToGetSecurityGroupOutboundRuleArrayOutputWithContext(context.Background())
}

func (i GetSecurityGroupOutboundRuleArray) ToGetSecurityGroupOutboundRuleArrayOutputWithContext(ctx context.Context) GetSecurityGroupOutboundRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityGroupOutboundRuleArrayOutput)
}

type GetSecurityGroupOutboundRuleOutput struct{ *pulumi.OutputState }

func (GetSecurityGroupOutboundRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityGroupOutboundRule)(nil)).Elem()
}

func (o GetSecurityGroupOutboundRuleOutput) ToGetSecurityGroupOutboundRuleOutput() GetSecurityGroupOutboundRuleOutput {
	return o
}

func (o GetSecurityGroupOutboundRuleOutput) ToGetSecurityGroupOutboundRuleOutputWithContext(ctx context.Context) GetSecurityGroupOutboundRuleOutput {
	return o
}

// The beginning of the port range for the TCP and UDP protocols, or an ICMP type number.
func (o GetSecurityGroupOutboundRuleOutput) FromPortRange() pulumi.IntOutput {
	return o.ApplyT(func(v GetSecurityGroupOutboundRule) int { return v.FromPortRange }).(pulumi.IntOutput)
}

// The IP protocol name (`tcp`, `udp`, `icmp`, or `-1` for all protocols). By default, `-1`. In a Net, this can also be an IP protocol number. For more information, see the [IANA.org website](https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml).
func (o GetSecurityGroupOutboundRuleOutput) IpProtocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityGroupOutboundRule) string { return v.IpProtocol }).(pulumi.StringOutput)
}

// One or more IP ranges for the security group rules, in CIDR notation (for example, `10.0.0.0/16`).
func (o GetSecurityGroupOutboundRuleOutput) IpRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSecurityGroupOutboundRule) []string { return v.IpRanges }).(pulumi.StringArrayOutput)
}

func (o GetSecurityGroupOutboundRuleOutput) PrefixListIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSecurityGroupOutboundRule) []string { return v.PrefixListIds }).(pulumi.StringArrayOutput)
}

// Information about one or more source or destination security groups.
func (o GetSecurityGroupOutboundRuleOutput) SecurityGroupsMembers() GetSecurityGroupOutboundRuleSecurityGroupsMemberArrayOutput {
	return o.ApplyT(func(v GetSecurityGroupOutboundRule) []GetSecurityGroupOutboundRuleSecurityGroupsMember {
		return v.SecurityGroupsMembers
	}).(GetSecurityGroupOutboundRuleSecurityGroupsMemberArrayOutput)
}

// The end of the port range for the TCP and UDP protocols, or an ICMP code number.
func (o GetSecurityGroupOutboundRuleOutput) ToPortRange() pulumi.IntOutput {
	return o.ApplyT(func(v GetSecurityGroupOutboundRule) int { return v.ToPortRange }).(pulumi.IntOutput)
}

type GetSecurityGroupOutboundRuleArrayOutput struct{ *pulumi.OutputState }

func (GetSecurityGroupOutboundRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityGroupOutboundRule)(nil)).Elem()
}

func (o GetSecurityGroupOutboundRuleArrayOutput) ToGetSecurityGroupOutboundRuleArrayOutput() GetSecurityGroupOutboundRuleArrayOutput {
	return o
}

func (o GetSecurityGroupOutboundRuleArrayOutput) ToGetSecurityGroupOutboundRuleArrayOutputWithContext(ctx context.Context) GetSecurityGroupOutboundRuleArrayOutput {
	return o
}

func (o GetSecurityGroupOutboundRuleArrayOutput) Index(i pulumi.IntInput) GetSecurityGroupOutboundRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSecurityGroupOutboundRule {
		return vs[0].([]GetSecurityGroupOutboundRule)[vs[1].(int)]
	}).(GetSecurityGroupOutboundRuleOutput)
}

type GetSecurityGroupOutboundRuleSecurityGroupsMember struct {
	// The account ID that owns the source or destination security group.
	AccountId string `pulumi:"accountId"`
	// The ID of the security group.
	SecurityGroupId string `pulumi:"securityGroupId"`
	// The name of the security group.
	SecurityGroupName string `pulumi:"securityGroupName"`
}

// GetSecurityGroupOutboundRuleSecurityGroupsMemberInput is an input type that accepts GetSecurityGroupOutboundRuleSecurityGroupsMemberArgs and GetSecurityGroupOutboundRuleSecurityGroupsMemberOutput values.
// You can construct a concrete instance of `GetSecurityGroupOutboundRuleSecurityGroupsMemberInput` via:
//
//	GetSecurityGroupOutboundRuleSecurityGroupsMemberArgs{...}
type GetSecurityGroupOutboundRuleSecurityGroupsMemberInput interface {
	pulumi.Input

	ToGetSecurityGroupOutboundRuleSecurityGroupsMemberOutput() GetSecurityGroupOutboundRuleSecurityGroupsMemberOutput
	ToGetSecurityGroupOutboundRuleSecurityGroupsMemberOutputWithContext(context.Context) GetSecurityGroupOutboundRuleSecurityGroupsMemberOutput
}

type GetSecurityGroupOutboundRuleSecurityGroupsMemberArgs struct {
	// The account ID that owns the source or destination security group.
	AccountId pulumi.StringInput `pulumi:"accountId"`
	// The ID of the security group.
	SecurityGroupId pulumi.StringInput `pulumi:"securityGroupId"`
	// The name of the security group.
	SecurityGroupName pulumi.StringInput `pulumi:"securityGroupName"`
}

func (GetSecurityGroupOutboundRuleSecurityGroupsMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityGroupOutboundRuleSecurityGroupsMember)(nil)).Elem()
}

func (i GetSecurityGroupOutboundRuleSecurityGroupsMemberArgs) ToGetSecurityGroupOutboundRuleSecurityGroupsMemberOutput() GetSecurityGroupOutboundRuleSecurityGroupsMemberOutput {
	return i.ToGetSecurityGroupOutboundRuleSecurityGroupsMemberOutputWithContext(context.Background())
}

func (i GetSecurityGroupOutboundRuleSecurityGroupsMemberArgs) ToGetSecurityGroupOutboundRuleSecurityGroupsMemberOutputWithContext(ctx context.Context) GetSecurityGroupOutboundRuleSecurityGroupsMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityGroupOutboundRuleSecurityGroupsMemberOutput)
}

// GetSecurityGroupOutboundRuleSecurityGroupsMemberArrayInput is an input type that accepts GetSecurityGroupOutboundRuleSecurityGroupsMemberArray and GetSecurityGroupOutboundRuleSecurityGroupsMemberArrayOutput values.
// You can construct a concrete instance of `GetSecurityGroupOutboundRuleSecurityGroupsMemberArrayInput` via:
//
//	GetSecurityGroupOutboundRuleSecurityGroupsMemberArray{ GetSecurityGroupOutboundRuleSecurityGroupsMemberArgs{...} }
type GetSecurityGroupOutboundRuleSecurityGroupsMemberArrayInput interface {
	pulumi.Input

	ToGetSecurityGroupOutboundRuleSecurityGroupsMemberArrayOutput() GetSecurityGroupOutboundRuleSecurityGroupsMemberArrayOutput
	ToGetSecurityGroupOutboundRuleSecurityGroupsMemberArrayOutputWithContext(context.Context) GetSecurityGroupOutboundRuleSecurityGroupsMemberArrayOutput
}

type GetSecurityGroupOutboundRuleSecurityGroupsMemberArray []GetSecurityGroupOutboundRuleSecurityGroupsMemberInput

func (GetSecurityGroupOutboundRuleSecurityGroupsMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityGroupOutboundRuleSecurityGroupsMember)(nil)).Elem()
}

func (i GetSecurityGroupOutboundRuleSecurityGroupsMemberArray) ToGetSecurityGroupOutboundRuleSecurityGroupsMemberArrayOutput() GetSecurityGroupOutboundRuleSecurityGroupsMemberArrayOutput {
	return i.ToGetSecurityGroupOutboundRuleSecurityGroupsMemberArrayOutputWithContext(context.Background())
}

func (i GetSecurityGroupOutboundRuleSecurityGroupsMemberArray) ToGetSecurityGroupOutboundRuleSecurityGroupsMemberArrayOutputWithContext(ctx context.Context) GetSecurityGroupOutboundRuleSecurityGroupsMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityGroupOutboundRuleSecurityGroupsMemberArrayOutput)
}

type GetSecurityGroupOutboundRuleSecurityGroupsMemberOutput struct{ *pulumi.OutputState }

func (GetSecurityGroupOutboundRuleSecurityGroupsMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityGroupOutboundRuleSecurityGroupsMember)(nil)).Elem()
}

func (o GetSecurityGroupOutboundRuleSecurityGroupsMemberOutput) ToGetSecurityGroupOutboundRuleSecurityGroupsMemberOutput() GetSecurityGroupOutboundRuleSecurityGroupsMemberOutput {
	return o
}

func (o GetSecurityGroupOutboundRuleSecurityGroupsMemberOutput) ToGetSecurityGroupOutboundRuleSecurityGroupsMemberOutputWithContext(ctx context.Context) GetSecurityGroupOutboundRuleSecurityGroupsMemberOutput {
	return o
}

// The account ID that owns the source or destination security group.
func (o GetSecurityGroupOutboundRuleSecurityGroupsMemberOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityGroupOutboundRuleSecurityGroupsMember) string { return v.AccountId }).(pulumi.StringOutput)
}

// The ID of the security group.
func (o GetSecurityGroupOutboundRuleSecurityGroupsMemberOutput) SecurityGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityGroupOutboundRuleSecurityGroupsMember) string { return v.SecurityGroupId }).(pulumi.StringOutput)
}

// The name of the security group.
func (o GetSecurityGroupOutboundRuleSecurityGroupsMemberOutput) SecurityGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityGroupOutboundRuleSecurityGroupsMember) string { return v.SecurityGroupName }).(pulumi.StringOutput)
}

type GetSecurityGroupOutboundRuleSecurityGroupsMemberArrayOutput struct{ *pulumi.OutputState }

func (GetSecurityGroupOutboundRuleSecurityGroupsMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityGroupOutboundRuleSecurityGroupsMember)(nil)).Elem()
}

func (o GetSecurityGroupOutboundRuleSecurityGroupsMemberArrayOutput) ToGetSecurityGroupOutboundRuleSecurityGroupsMemberArrayOutput() GetSecurityGroupOutboundRuleSecurityGroupsMemberArrayOutput {
	return o
}

func (o GetSecurityGroupOutboundRuleSecurityGroupsMemberArrayOutput) ToGetSecurityGroupOutboundRuleSecurityGroupsMemberArrayOutputWithContext(ctx context.Context) GetSecurityGroupOutboundRuleSecurityGroupsMemberArrayOutput {
	return o
}

func (o GetSecurityGroupOutboundRuleSecurityGroupsMemberArrayOutput) Index(i pulumi.IntInput) GetSecurityGroupOutboundRuleSecurityGroupsMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSecurityGroupOutboundRuleSecurityGroupsMember {
		return vs[0].([]GetSecurityGroupOutboundRuleSecurityGroupsMember)[vs[1].(int)]
	}).(GetSecurityGroupOutboundRuleSecurityGroupsMemberOutput)
}

type GetSecurityGroupTag struct {
	// The key of the tag, with a minimum of 1 character.
	Key string `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value string `pulumi:"value"`
}

// GetSecurityGroupTagInput is an input type that accepts GetSecurityGroupTagArgs and GetSecurityGroupTagOutput values.
// You can construct a concrete instance of `GetSecurityGroupTagInput` via:
//
//	GetSecurityGroupTagArgs{...}
type GetSecurityGroupTagInput interface {
	pulumi.Input

	ToGetSecurityGroupTagOutput() GetSecurityGroupTagOutput
	ToGetSecurityGroupTagOutputWithContext(context.Context) GetSecurityGroupTagOutput
}

type GetSecurityGroupTagArgs struct {
	// The key of the tag, with a minimum of 1 character.
	Key pulumi.StringInput `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetSecurityGroupTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityGroupTag)(nil)).Elem()
}

func (i GetSecurityGroupTagArgs) ToGetSecurityGroupTagOutput() GetSecurityGroupTagOutput {
	return i.ToGetSecurityGroupTagOutputWithContext(context.Background())
}

func (i GetSecurityGroupTagArgs) ToGetSecurityGroupTagOutputWithContext(ctx context.Context) GetSecurityGroupTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityGroupTagOutput)
}

// GetSecurityGroupTagArrayInput is an input type that accepts GetSecurityGroupTagArray and GetSecurityGroupTagArrayOutput values.
// You can construct a concrete instance of `GetSecurityGroupTagArrayInput` via:
//
//	GetSecurityGroupTagArray{ GetSecurityGroupTagArgs{...} }
type GetSecurityGroupTagArrayInput interface {
	pulumi.Input

	ToGetSecurityGroupTagArrayOutput() GetSecurityGroupTagArrayOutput
	ToGetSecurityGroupTagArrayOutputWithContext(context.Context) GetSecurityGroupTagArrayOutput
}

type GetSecurityGroupTagArray []GetSecurityGroupTagInput

func (GetSecurityGroupTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityGroupTag)(nil)).Elem()
}

func (i GetSecurityGroupTagArray) ToGetSecurityGroupTagArrayOutput() GetSecurityGroupTagArrayOutput {
	return i.ToGetSecurityGroupTagArrayOutputWithContext(context.Background())
}

func (i GetSecurityGroupTagArray) ToGetSecurityGroupTagArrayOutputWithContext(ctx context.Context) GetSecurityGroupTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityGroupTagArrayOutput)
}

type GetSecurityGroupTagOutput struct{ *pulumi.OutputState }

func (GetSecurityGroupTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityGroupTag)(nil)).Elem()
}

func (o GetSecurityGroupTagOutput) ToGetSecurityGroupTagOutput() GetSecurityGroupTagOutput {
	return o
}

func (o GetSecurityGroupTagOutput) ToGetSecurityGroupTagOutputWithContext(ctx context.Context) GetSecurityGroupTagOutput {
	return o
}

// The key of the tag, with a minimum of 1 character.
func (o GetSecurityGroupTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityGroupTag) string { return v.Key }).(pulumi.StringOutput)
}

// The value of the tag, between 0 and 255 characters.
func (o GetSecurityGroupTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityGroupTag) string { return v.Value }).(pulumi.StringOutput)
}

type GetSecurityGroupTagArrayOutput struct{ *pulumi.OutputState }

func (GetSecurityGroupTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityGroupTag)(nil)).Elem()
}

func (o GetSecurityGroupTagArrayOutput) ToGetSecurityGroupTagArrayOutput() GetSecurityGroupTagArrayOutput {
	return o
}

func (o GetSecurityGroupTagArrayOutput) ToGetSecurityGroupTagArrayOutputWithContext(ctx context.Context) GetSecurityGroupTagArrayOutput {
	return o
}

func (o GetSecurityGroupTagArrayOutput) Index(i pulumi.IntInput) GetSecurityGroupTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSecurityGroupTag {
		return vs[0].([]GetSecurityGroupTag)[vs[1].(int)]
	}).(GetSecurityGroupTagOutput)
}

type GetSecurityGroupsFilter struct {
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// GetSecurityGroupsFilterInput is an input type that accepts GetSecurityGroupsFilterArgs and GetSecurityGroupsFilterOutput values.
// You can construct a concrete instance of `GetSecurityGroupsFilterInput` via:
//
//	GetSecurityGroupsFilterArgs{...}
type GetSecurityGroupsFilterInput interface {
	pulumi.Input

	ToGetSecurityGroupsFilterOutput() GetSecurityGroupsFilterOutput
	ToGetSecurityGroupsFilterOutputWithContext(context.Context) GetSecurityGroupsFilterOutput
}

type GetSecurityGroupsFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetSecurityGroupsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityGroupsFilter)(nil)).Elem()
}

func (i GetSecurityGroupsFilterArgs) ToGetSecurityGroupsFilterOutput() GetSecurityGroupsFilterOutput {
	return i.ToGetSecurityGroupsFilterOutputWithContext(context.Background())
}

func (i GetSecurityGroupsFilterArgs) ToGetSecurityGroupsFilterOutputWithContext(ctx context.Context) GetSecurityGroupsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityGroupsFilterOutput)
}

// GetSecurityGroupsFilterArrayInput is an input type that accepts GetSecurityGroupsFilterArray and GetSecurityGroupsFilterArrayOutput values.
// You can construct a concrete instance of `GetSecurityGroupsFilterArrayInput` via:
//
//	GetSecurityGroupsFilterArray{ GetSecurityGroupsFilterArgs{...} }
type GetSecurityGroupsFilterArrayInput interface {
	pulumi.Input

	ToGetSecurityGroupsFilterArrayOutput() GetSecurityGroupsFilterArrayOutput
	ToGetSecurityGroupsFilterArrayOutputWithContext(context.Context) GetSecurityGroupsFilterArrayOutput
}

type GetSecurityGroupsFilterArray []GetSecurityGroupsFilterInput

func (GetSecurityGroupsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityGroupsFilter)(nil)).Elem()
}

func (i GetSecurityGroupsFilterArray) ToGetSecurityGroupsFilterArrayOutput() GetSecurityGroupsFilterArrayOutput {
	return i.ToGetSecurityGroupsFilterArrayOutputWithContext(context.Background())
}

func (i GetSecurityGroupsFilterArray) ToGetSecurityGroupsFilterArrayOutputWithContext(ctx context.Context) GetSecurityGroupsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityGroupsFilterArrayOutput)
}

type GetSecurityGroupsFilterOutput struct{ *pulumi.OutputState }

func (GetSecurityGroupsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityGroupsFilter)(nil)).Elem()
}

func (o GetSecurityGroupsFilterOutput) ToGetSecurityGroupsFilterOutput() GetSecurityGroupsFilterOutput {
	return o
}

func (o GetSecurityGroupsFilterOutput) ToGetSecurityGroupsFilterOutputWithContext(ctx context.Context) GetSecurityGroupsFilterOutput {
	return o
}

func (o GetSecurityGroupsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityGroupsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetSecurityGroupsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSecurityGroupsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetSecurityGroupsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetSecurityGroupsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityGroupsFilter)(nil)).Elem()
}

func (o GetSecurityGroupsFilterArrayOutput) ToGetSecurityGroupsFilterArrayOutput() GetSecurityGroupsFilterArrayOutput {
	return o
}

func (o GetSecurityGroupsFilterArrayOutput) ToGetSecurityGroupsFilterArrayOutputWithContext(ctx context.Context) GetSecurityGroupsFilterArrayOutput {
	return o
}

func (o GetSecurityGroupsFilterArrayOutput) Index(i pulumi.IntInput) GetSecurityGroupsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSecurityGroupsFilter {
		return vs[0].([]GetSecurityGroupsFilter)[vs[1].(int)]
	}).(GetSecurityGroupsFilterOutput)
}

type GetSecurityGroupsSecurityGroup struct {
	// The account ID that owns the source or destination security group.
	AccountId string `pulumi:"accountId"`
	// The description of the security group.
	Description string `pulumi:"description"`
	// The inbound rules associated with the security group.
	InboundRules []GetSecurityGroupsSecurityGroupInboundRule `pulumi:"inboundRules"`
	// The ID of the Net for the security group.
	NetId string `pulumi:"netId"`
	// The outbound rules associated with the security group.
	OutboundRules []GetSecurityGroupsSecurityGroupOutboundRule `pulumi:"outboundRules"`
	// The ID of the security group.
	SecurityGroupId string `pulumi:"securityGroupId"`
	// The name of the security group.
	SecurityGroupName string `pulumi:"securityGroupName"`
	// One or more tags associated with the security group.
	Tags []GetSecurityGroupsSecurityGroupTag `pulumi:"tags"`
}

// GetSecurityGroupsSecurityGroupInput is an input type that accepts GetSecurityGroupsSecurityGroupArgs and GetSecurityGroupsSecurityGroupOutput values.
// You can construct a concrete instance of `GetSecurityGroupsSecurityGroupInput` via:
//
//	GetSecurityGroupsSecurityGroupArgs{...}
type GetSecurityGroupsSecurityGroupInput interface {
	pulumi.Input

	ToGetSecurityGroupsSecurityGroupOutput() GetSecurityGroupsSecurityGroupOutput
	ToGetSecurityGroupsSecurityGroupOutputWithContext(context.Context) GetSecurityGroupsSecurityGroupOutput
}

type GetSecurityGroupsSecurityGroupArgs struct {
	// The account ID that owns the source or destination security group.
	AccountId pulumi.StringInput `pulumi:"accountId"`
	// The description of the security group.
	Description pulumi.StringInput `pulumi:"description"`
	// The inbound rules associated with the security group.
	InboundRules GetSecurityGroupsSecurityGroupInboundRuleArrayInput `pulumi:"inboundRules"`
	// The ID of the Net for the security group.
	NetId pulumi.StringInput `pulumi:"netId"`
	// The outbound rules associated with the security group.
	OutboundRules GetSecurityGroupsSecurityGroupOutboundRuleArrayInput `pulumi:"outboundRules"`
	// The ID of the security group.
	SecurityGroupId pulumi.StringInput `pulumi:"securityGroupId"`
	// The name of the security group.
	SecurityGroupName pulumi.StringInput `pulumi:"securityGroupName"`
	// One or more tags associated with the security group.
	Tags GetSecurityGroupsSecurityGroupTagArrayInput `pulumi:"tags"`
}

func (GetSecurityGroupsSecurityGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityGroupsSecurityGroup)(nil)).Elem()
}

func (i GetSecurityGroupsSecurityGroupArgs) ToGetSecurityGroupsSecurityGroupOutput() GetSecurityGroupsSecurityGroupOutput {
	return i.ToGetSecurityGroupsSecurityGroupOutputWithContext(context.Background())
}

func (i GetSecurityGroupsSecurityGroupArgs) ToGetSecurityGroupsSecurityGroupOutputWithContext(ctx context.Context) GetSecurityGroupsSecurityGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityGroupsSecurityGroupOutput)
}

// GetSecurityGroupsSecurityGroupArrayInput is an input type that accepts GetSecurityGroupsSecurityGroupArray and GetSecurityGroupsSecurityGroupArrayOutput values.
// You can construct a concrete instance of `GetSecurityGroupsSecurityGroupArrayInput` via:
//
//	GetSecurityGroupsSecurityGroupArray{ GetSecurityGroupsSecurityGroupArgs{...} }
type GetSecurityGroupsSecurityGroupArrayInput interface {
	pulumi.Input

	ToGetSecurityGroupsSecurityGroupArrayOutput() GetSecurityGroupsSecurityGroupArrayOutput
	ToGetSecurityGroupsSecurityGroupArrayOutputWithContext(context.Context) GetSecurityGroupsSecurityGroupArrayOutput
}

type GetSecurityGroupsSecurityGroupArray []GetSecurityGroupsSecurityGroupInput

func (GetSecurityGroupsSecurityGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityGroupsSecurityGroup)(nil)).Elem()
}

func (i GetSecurityGroupsSecurityGroupArray) ToGetSecurityGroupsSecurityGroupArrayOutput() GetSecurityGroupsSecurityGroupArrayOutput {
	return i.ToGetSecurityGroupsSecurityGroupArrayOutputWithContext(context.Background())
}

func (i GetSecurityGroupsSecurityGroupArray) ToGetSecurityGroupsSecurityGroupArrayOutputWithContext(ctx context.Context) GetSecurityGroupsSecurityGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityGroupsSecurityGroupArrayOutput)
}

type GetSecurityGroupsSecurityGroupOutput struct{ *pulumi.OutputState }

func (GetSecurityGroupsSecurityGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityGroupsSecurityGroup)(nil)).Elem()
}

func (o GetSecurityGroupsSecurityGroupOutput) ToGetSecurityGroupsSecurityGroupOutput() GetSecurityGroupsSecurityGroupOutput {
	return o
}

func (o GetSecurityGroupsSecurityGroupOutput) ToGetSecurityGroupsSecurityGroupOutputWithContext(ctx context.Context) GetSecurityGroupsSecurityGroupOutput {
	return o
}

// The account ID that owns the source or destination security group.
func (o GetSecurityGroupsSecurityGroupOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityGroupsSecurityGroup) string { return v.AccountId }).(pulumi.StringOutput)
}

// The description of the security group.
func (o GetSecurityGroupsSecurityGroupOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityGroupsSecurityGroup) string { return v.Description }).(pulumi.StringOutput)
}

// The inbound rules associated with the security group.
func (o GetSecurityGroupsSecurityGroupOutput) InboundRules() GetSecurityGroupsSecurityGroupInboundRuleArrayOutput {
	return o.ApplyT(func(v GetSecurityGroupsSecurityGroup) []GetSecurityGroupsSecurityGroupInboundRule {
		return v.InboundRules
	}).(GetSecurityGroupsSecurityGroupInboundRuleArrayOutput)
}

// The ID of the Net for the security group.
func (o GetSecurityGroupsSecurityGroupOutput) NetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityGroupsSecurityGroup) string { return v.NetId }).(pulumi.StringOutput)
}

// The outbound rules associated with the security group.
func (o GetSecurityGroupsSecurityGroupOutput) OutboundRules() GetSecurityGroupsSecurityGroupOutboundRuleArrayOutput {
	return o.ApplyT(func(v GetSecurityGroupsSecurityGroup) []GetSecurityGroupsSecurityGroupOutboundRule {
		return v.OutboundRules
	}).(GetSecurityGroupsSecurityGroupOutboundRuleArrayOutput)
}

// The ID of the security group.
func (o GetSecurityGroupsSecurityGroupOutput) SecurityGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityGroupsSecurityGroup) string { return v.SecurityGroupId }).(pulumi.StringOutput)
}

// The name of the security group.
func (o GetSecurityGroupsSecurityGroupOutput) SecurityGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityGroupsSecurityGroup) string { return v.SecurityGroupName }).(pulumi.StringOutput)
}

// One or more tags associated with the security group.
func (o GetSecurityGroupsSecurityGroupOutput) Tags() GetSecurityGroupsSecurityGroupTagArrayOutput {
	return o.ApplyT(func(v GetSecurityGroupsSecurityGroup) []GetSecurityGroupsSecurityGroupTag { return v.Tags }).(GetSecurityGroupsSecurityGroupTagArrayOutput)
}

type GetSecurityGroupsSecurityGroupArrayOutput struct{ *pulumi.OutputState }

func (GetSecurityGroupsSecurityGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityGroupsSecurityGroup)(nil)).Elem()
}

func (o GetSecurityGroupsSecurityGroupArrayOutput) ToGetSecurityGroupsSecurityGroupArrayOutput() GetSecurityGroupsSecurityGroupArrayOutput {
	return o
}

func (o GetSecurityGroupsSecurityGroupArrayOutput) ToGetSecurityGroupsSecurityGroupArrayOutputWithContext(ctx context.Context) GetSecurityGroupsSecurityGroupArrayOutput {
	return o
}

func (o GetSecurityGroupsSecurityGroupArrayOutput) Index(i pulumi.IntInput) GetSecurityGroupsSecurityGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSecurityGroupsSecurityGroup {
		return vs[0].([]GetSecurityGroupsSecurityGroup)[vs[1].(int)]
	}).(GetSecurityGroupsSecurityGroupOutput)
}

type GetSecurityGroupsSecurityGroupInboundRule struct {
	// The beginning of the port range for the TCP and UDP protocols, or an ICMP type number.
	FromPortRange int `pulumi:"fromPortRange"`
	// The IP protocol name (`tcp`, `udp`, `icmp`, or `-1` for all protocols). By default, `-1`. In a Net, this can also be an IP protocol number. For more information, see the [IANA.org website](https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml).
	IpProtocol string `pulumi:"ipProtocol"`
	// One or more IP ranges for the security group rules, in CIDR notation (for example, `10.0.0.0/16`).
	IpRanges      []string `pulumi:"ipRanges"`
	PrefixListIds []string `pulumi:"prefixListIds"`
	// Information about one or more source or destination security groups.
	SecurityGroupsMembers []GetSecurityGroupsSecurityGroupInboundRuleSecurityGroupsMember `pulumi:"securityGroupsMembers"`
	// The end of the port range for the TCP and UDP protocols, or an ICMP code number.
	ToPortRange int `pulumi:"toPortRange"`
}

// GetSecurityGroupsSecurityGroupInboundRuleInput is an input type that accepts GetSecurityGroupsSecurityGroupInboundRuleArgs and GetSecurityGroupsSecurityGroupInboundRuleOutput values.
// You can construct a concrete instance of `GetSecurityGroupsSecurityGroupInboundRuleInput` via:
//
//	GetSecurityGroupsSecurityGroupInboundRuleArgs{...}
type GetSecurityGroupsSecurityGroupInboundRuleInput interface {
	pulumi.Input

	ToGetSecurityGroupsSecurityGroupInboundRuleOutput() GetSecurityGroupsSecurityGroupInboundRuleOutput
	ToGetSecurityGroupsSecurityGroupInboundRuleOutputWithContext(context.Context) GetSecurityGroupsSecurityGroupInboundRuleOutput
}

type GetSecurityGroupsSecurityGroupInboundRuleArgs struct {
	// The beginning of the port range for the TCP and UDP protocols, or an ICMP type number.
	FromPortRange pulumi.IntInput `pulumi:"fromPortRange"`
	// The IP protocol name (`tcp`, `udp`, `icmp`, or `-1` for all protocols). By default, `-1`. In a Net, this can also be an IP protocol number. For more information, see the [IANA.org website](https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml).
	IpProtocol pulumi.StringInput `pulumi:"ipProtocol"`
	// One or more IP ranges for the security group rules, in CIDR notation (for example, `10.0.0.0/16`).
	IpRanges      pulumi.StringArrayInput `pulumi:"ipRanges"`
	PrefixListIds pulumi.StringArrayInput `pulumi:"prefixListIds"`
	// Information about one or more source or destination security groups.
	SecurityGroupsMembers GetSecurityGroupsSecurityGroupInboundRuleSecurityGroupsMemberArrayInput `pulumi:"securityGroupsMembers"`
	// The end of the port range for the TCP and UDP protocols, or an ICMP code number.
	ToPortRange pulumi.IntInput `pulumi:"toPortRange"`
}

func (GetSecurityGroupsSecurityGroupInboundRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityGroupsSecurityGroupInboundRule)(nil)).Elem()
}

func (i GetSecurityGroupsSecurityGroupInboundRuleArgs) ToGetSecurityGroupsSecurityGroupInboundRuleOutput() GetSecurityGroupsSecurityGroupInboundRuleOutput {
	return i.ToGetSecurityGroupsSecurityGroupInboundRuleOutputWithContext(context.Background())
}

func (i GetSecurityGroupsSecurityGroupInboundRuleArgs) ToGetSecurityGroupsSecurityGroupInboundRuleOutputWithContext(ctx context.Context) GetSecurityGroupsSecurityGroupInboundRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityGroupsSecurityGroupInboundRuleOutput)
}

// GetSecurityGroupsSecurityGroupInboundRuleArrayInput is an input type that accepts GetSecurityGroupsSecurityGroupInboundRuleArray and GetSecurityGroupsSecurityGroupInboundRuleArrayOutput values.
// You can construct a concrete instance of `GetSecurityGroupsSecurityGroupInboundRuleArrayInput` via:
//
//	GetSecurityGroupsSecurityGroupInboundRuleArray{ GetSecurityGroupsSecurityGroupInboundRuleArgs{...} }
type GetSecurityGroupsSecurityGroupInboundRuleArrayInput interface {
	pulumi.Input

	ToGetSecurityGroupsSecurityGroupInboundRuleArrayOutput() GetSecurityGroupsSecurityGroupInboundRuleArrayOutput
	ToGetSecurityGroupsSecurityGroupInboundRuleArrayOutputWithContext(context.Context) GetSecurityGroupsSecurityGroupInboundRuleArrayOutput
}

type GetSecurityGroupsSecurityGroupInboundRuleArray []GetSecurityGroupsSecurityGroupInboundRuleInput

func (GetSecurityGroupsSecurityGroupInboundRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityGroupsSecurityGroupInboundRule)(nil)).Elem()
}

func (i GetSecurityGroupsSecurityGroupInboundRuleArray) ToGetSecurityGroupsSecurityGroupInboundRuleArrayOutput() GetSecurityGroupsSecurityGroupInboundRuleArrayOutput {
	return i.ToGetSecurityGroupsSecurityGroupInboundRuleArrayOutputWithContext(context.Background())
}

func (i GetSecurityGroupsSecurityGroupInboundRuleArray) ToGetSecurityGroupsSecurityGroupInboundRuleArrayOutputWithContext(ctx context.Context) GetSecurityGroupsSecurityGroupInboundRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityGroupsSecurityGroupInboundRuleArrayOutput)
}

type GetSecurityGroupsSecurityGroupInboundRuleOutput struct{ *pulumi.OutputState }

func (GetSecurityGroupsSecurityGroupInboundRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityGroupsSecurityGroupInboundRule)(nil)).Elem()
}

func (o GetSecurityGroupsSecurityGroupInboundRuleOutput) ToGetSecurityGroupsSecurityGroupInboundRuleOutput() GetSecurityGroupsSecurityGroupInboundRuleOutput {
	return o
}

func (o GetSecurityGroupsSecurityGroupInboundRuleOutput) ToGetSecurityGroupsSecurityGroupInboundRuleOutputWithContext(ctx context.Context) GetSecurityGroupsSecurityGroupInboundRuleOutput {
	return o
}

// The beginning of the port range for the TCP and UDP protocols, or an ICMP type number.
func (o GetSecurityGroupsSecurityGroupInboundRuleOutput) FromPortRange() pulumi.IntOutput {
	return o.ApplyT(func(v GetSecurityGroupsSecurityGroupInboundRule) int { return v.FromPortRange }).(pulumi.IntOutput)
}

// The IP protocol name (`tcp`, `udp`, `icmp`, or `-1` for all protocols). By default, `-1`. In a Net, this can also be an IP protocol number. For more information, see the [IANA.org website](https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml).
func (o GetSecurityGroupsSecurityGroupInboundRuleOutput) IpProtocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityGroupsSecurityGroupInboundRule) string { return v.IpProtocol }).(pulumi.StringOutput)
}

// One or more IP ranges for the security group rules, in CIDR notation (for example, `10.0.0.0/16`).
func (o GetSecurityGroupsSecurityGroupInboundRuleOutput) IpRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSecurityGroupsSecurityGroupInboundRule) []string { return v.IpRanges }).(pulumi.StringArrayOutput)
}

func (o GetSecurityGroupsSecurityGroupInboundRuleOutput) PrefixListIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSecurityGroupsSecurityGroupInboundRule) []string { return v.PrefixListIds }).(pulumi.StringArrayOutput)
}

// Information about one or more source or destination security groups.
func (o GetSecurityGroupsSecurityGroupInboundRuleOutput) SecurityGroupsMembers() GetSecurityGroupsSecurityGroupInboundRuleSecurityGroupsMemberArrayOutput {
	return o.ApplyT(func(v GetSecurityGroupsSecurityGroupInboundRule) []GetSecurityGroupsSecurityGroupInboundRuleSecurityGroupsMember {
		return v.SecurityGroupsMembers
	}).(GetSecurityGroupsSecurityGroupInboundRuleSecurityGroupsMemberArrayOutput)
}

// The end of the port range for the TCP and UDP protocols, or an ICMP code number.
func (o GetSecurityGroupsSecurityGroupInboundRuleOutput) ToPortRange() pulumi.IntOutput {
	return o.ApplyT(func(v GetSecurityGroupsSecurityGroupInboundRule) int { return v.ToPortRange }).(pulumi.IntOutput)
}

type GetSecurityGroupsSecurityGroupInboundRuleArrayOutput struct{ *pulumi.OutputState }

func (GetSecurityGroupsSecurityGroupInboundRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityGroupsSecurityGroupInboundRule)(nil)).Elem()
}

func (o GetSecurityGroupsSecurityGroupInboundRuleArrayOutput) ToGetSecurityGroupsSecurityGroupInboundRuleArrayOutput() GetSecurityGroupsSecurityGroupInboundRuleArrayOutput {
	return o
}

func (o GetSecurityGroupsSecurityGroupInboundRuleArrayOutput) ToGetSecurityGroupsSecurityGroupInboundRuleArrayOutputWithContext(ctx context.Context) GetSecurityGroupsSecurityGroupInboundRuleArrayOutput {
	return o
}

func (o GetSecurityGroupsSecurityGroupInboundRuleArrayOutput) Index(i pulumi.IntInput) GetSecurityGroupsSecurityGroupInboundRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSecurityGroupsSecurityGroupInboundRule {
		return vs[0].([]GetSecurityGroupsSecurityGroupInboundRule)[vs[1].(int)]
	}).(GetSecurityGroupsSecurityGroupInboundRuleOutput)
}

type GetSecurityGroupsSecurityGroupInboundRuleSecurityGroupsMember struct {
	// The account ID that owns the source or destination security group.
	AccountId string `pulumi:"accountId"`
	// The ID of the security group.
	SecurityGroupId string `pulumi:"securityGroupId"`
	// The name of the security group.
	SecurityGroupName string `pulumi:"securityGroupName"`
}

// GetSecurityGroupsSecurityGroupInboundRuleSecurityGroupsMemberInput is an input type that accepts GetSecurityGroupsSecurityGroupInboundRuleSecurityGroupsMemberArgs and GetSecurityGroupsSecurityGroupInboundRuleSecurityGroupsMemberOutput values.
// You can construct a concrete instance of `GetSecurityGroupsSecurityGroupInboundRuleSecurityGroupsMemberInput` via:
//
//	GetSecurityGroupsSecurityGroupInboundRuleSecurityGroupsMemberArgs{...}
type GetSecurityGroupsSecurityGroupInboundRuleSecurityGroupsMemberInput interface {
	pulumi.Input

	ToGetSecurityGroupsSecurityGroupInboundRuleSecurityGroupsMemberOutput() GetSecurityGroupsSecurityGroupInboundRuleSecurityGroupsMemberOutput
	ToGetSecurityGroupsSecurityGroupInboundRuleSecurityGroupsMemberOutputWithContext(context.Context) GetSecurityGroupsSecurityGroupInboundRuleSecurityGroupsMemberOutput
}

type GetSecurityGroupsSecurityGroupInboundRuleSecurityGroupsMemberArgs struct {
	// The account ID that owns the source or destination security group.
	AccountId pulumi.StringInput `pulumi:"accountId"`
	// The ID of the security group.
	SecurityGroupId pulumi.StringInput `pulumi:"securityGroupId"`
	// The name of the security group.
	SecurityGroupName pulumi.StringInput `pulumi:"securityGroupName"`
}

func (GetSecurityGroupsSecurityGroupInboundRuleSecurityGroupsMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityGroupsSecurityGroupInboundRuleSecurityGroupsMember)(nil)).Elem()
}

func (i GetSecurityGroupsSecurityGroupInboundRuleSecurityGroupsMemberArgs) ToGetSecurityGroupsSecurityGroupInboundRuleSecurityGroupsMemberOutput() GetSecurityGroupsSecurityGroupInboundRuleSecurityGroupsMemberOutput {
	return i.ToGetSecurityGroupsSecurityGroupInboundRuleSecurityGroupsMemberOutputWithContext(context.Background())
}

func (i GetSecurityGroupsSecurityGroupInboundRuleSecurityGroupsMemberArgs) ToGetSecurityGroupsSecurityGroupInboundRuleSecurityGroupsMemberOutputWithContext(ctx context.Context) GetSecurityGroupsSecurityGroupInboundRuleSecurityGroupsMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityGroupsSecurityGroupInboundRuleSecurityGroupsMemberOutput)
}

// GetSecurityGroupsSecurityGroupInboundRuleSecurityGroupsMemberArrayInput is an input type that accepts GetSecurityGroupsSecurityGroupInboundRuleSecurityGroupsMemberArray and GetSecurityGroupsSecurityGroupInboundRuleSecurityGroupsMemberArrayOutput values.
// You can construct a concrete instance of `GetSecurityGroupsSecurityGroupInboundRuleSecurityGroupsMemberArrayInput` via:
//
//	GetSecurityGroupsSecurityGroupInboundRuleSecurityGroupsMemberArray{ GetSecurityGroupsSecurityGroupInboundRuleSecurityGroupsMemberArgs{...} }
type GetSecurityGroupsSecurityGroupInboundRuleSecurityGroupsMemberArrayInput interface {
	pulumi.Input

	ToGetSecurityGroupsSecurityGroupInboundRuleSecurityGroupsMemberArrayOutput() GetSecurityGroupsSecurityGroupInboundRuleSecurityGroupsMemberArrayOutput
	ToGetSecurityGroupsSecurityGroupInboundRuleSecurityGroupsMemberArrayOutputWithContext(context.Context) GetSecurityGroupsSecurityGroupInboundRuleSecurityGroupsMemberArrayOutput
}

type GetSecurityGroupsSecurityGroupInboundRuleSecurityGroupsMemberArray []GetSecurityGroupsSecurityGroupInboundRuleSecurityGroupsMemberInput

func (GetSecurityGroupsSecurityGroupInboundRuleSecurityGroupsMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityGroupsSecurityGroupInboundRuleSecurityGroupsMember)(nil)).Elem()
}

func (i GetSecurityGroupsSecurityGroupInboundRuleSecurityGroupsMemberArray) ToGetSecurityGroupsSecurityGroupInboundRuleSecurityGroupsMemberArrayOutput() GetSecurityGroupsSecurityGroupInboundRuleSecurityGroupsMemberArrayOutput {
	return i.ToGetSecurityGroupsSecurityGroupInboundRuleSecurityGroupsMemberArrayOutputWithContext(context.Background())
}

func (i GetSecurityGroupsSecurityGroupInboundRuleSecurityGroupsMemberArray) ToGetSecurityGroupsSecurityGroupInboundRuleSecurityGroupsMemberArrayOutputWithContext(ctx context.Context) GetSecurityGroupsSecurityGroupInboundRuleSecurityGroupsMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityGroupsSecurityGroupInboundRuleSecurityGroupsMemberArrayOutput)
}

type GetSecurityGroupsSecurityGroupInboundRuleSecurityGroupsMemberOutput struct{ *pulumi.OutputState }

func (GetSecurityGroupsSecurityGroupInboundRuleSecurityGroupsMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityGroupsSecurityGroupInboundRuleSecurityGroupsMember)(nil)).Elem()
}

func (o GetSecurityGroupsSecurityGroupInboundRuleSecurityGroupsMemberOutput) ToGetSecurityGroupsSecurityGroupInboundRuleSecurityGroupsMemberOutput() GetSecurityGroupsSecurityGroupInboundRuleSecurityGroupsMemberOutput {
	return o
}

func (o GetSecurityGroupsSecurityGroupInboundRuleSecurityGroupsMemberOutput) ToGetSecurityGroupsSecurityGroupInboundRuleSecurityGroupsMemberOutputWithContext(ctx context.Context) GetSecurityGroupsSecurityGroupInboundRuleSecurityGroupsMemberOutput {
	return o
}

// The account ID that owns the source or destination security group.
func (o GetSecurityGroupsSecurityGroupInboundRuleSecurityGroupsMemberOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityGroupsSecurityGroupInboundRuleSecurityGroupsMember) string { return v.AccountId }).(pulumi.StringOutput)
}

// The ID of the security group.
func (o GetSecurityGroupsSecurityGroupInboundRuleSecurityGroupsMemberOutput) SecurityGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityGroupsSecurityGroupInboundRuleSecurityGroupsMember) string { return v.SecurityGroupId }).(pulumi.StringOutput)
}

// The name of the security group.
func (o GetSecurityGroupsSecurityGroupInboundRuleSecurityGroupsMemberOutput) SecurityGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityGroupsSecurityGroupInboundRuleSecurityGroupsMember) string {
		return v.SecurityGroupName
	}).(pulumi.StringOutput)
}

type GetSecurityGroupsSecurityGroupInboundRuleSecurityGroupsMemberArrayOutput struct{ *pulumi.OutputState }

func (GetSecurityGroupsSecurityGroupInboundRuleSecurityGroupsMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityGroupsSecurityGroupInboundRuleSecurityGroupsMember)(nil)).Elem()
}

func (o GetSecurityGroupsSecurityGroupInboundRuleSecurityGroupsMemberArrayOutput) ToGetSecurityGroupsSecurityGroupInboundRuleSecurityGroupsMemberArrayOutput() GetSecurityGroupsSecurityGroupInboundRuleSecurityGroupsMemberArrayOutput {
	return o
}

func (o GetSecurityGroupsSecurityGroupInboundRuleSecurityGroupsMemberArrayOutput) ToGetSecurityGroupsSecurityGroupInboundRuleSecurityGroupsMemberArrayOutputWithContext(ctx context.Context) GetSecurityGroupsSecurityGroupInboundRuleSecurityGroupsMemberArrayOutput {
	return o
}

func (o GetSecurityGroupsSecurityGroupInboundRuleSecurityGroupsMemberArrayOutput) Index(i pulumi.IntInput) GetSecurityGroupsSecurityGroupInboundRuleSecurityGroupsMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSecurityGroupsSecurityGroupInboundRuleSecurityGroupsMember {
		return vs[0].([]GetSecurityGroupsSecurityGroupInboundRuleSecurityGroupsMember)[vs[1].(int)]
	}).(GetSecurityGroupsSecurityGroupInboundRuleSecurityGroupsMemberOutput)
}

type GetSecurityGroupsSecurityGroupOutboundRule struct {
	// The beginning of the port range for the TCP and UDP protocols, or an ICMP type number.
	FromPortRange int `pulumi:"fromPortRange"`
	// The IP protocol name (`tcp`, `udp`, `icmp`, or `-1` for all protocols). By default, `-1`. In a Net, this can also be an IP protocol number. For more information, see the [IANA.org website](https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml).
	IpProtocol string `pulumi:"ipProtocol"`
	// One or more IP ranges for the security group rules, in CIDR notation (for example, `10.0.0.0/16`).
	IpRanges      []string `pulumi:"ipRanges"`
	PrefixListIds []string `pulumi:"prefixListIds"`
	// Information about one or more source or destination security groups.
	SecurityGroupsMembers []GetSecurityGroupsSecurityGroupOutboundRuleSecurityGroupsMember `pulumi:"securityGroupsMembers"`
	// The end of the port range for the TCP and UDP protocols, or an ICMP code number.
	ToPortRange int `pulumi:"toPortRange"`
}

// GetSecurityGroupsSecurityGroupOutboundRuleInput is an input type that accepts GetSecurityGroupsSecurityGroupOutboundRuleArgs and GetSecurityGroupsSecurityGroupOutboundRuleOutput values.
// You can construct a concrete instance of `GetSecurityGroupsSecurityGroupOutboundRuleInput` via:
//
//	GetSecurityGroupsSecurityGroupOutboundRuleArgs{...}
type GetSecurityGroupsSecurityGroupOutboundRuleInput interface {
	pulumi.Input

	ToGetSecurityGroupsSecurityGroupOutboundRuleOutput() GetSecurityGroupsSecurityGroupOutboundRuleOutput
	ToGetSecurityGroupsSecurityGroupOutboundRuleOutputWithContext(context.Context) GetSecurityGroupsSecurityGroupOutboundRuleOutput
}

type GetSecurityGroupsSecurityGroupOutboundRuleArgs struct {
	// The beginning of the port range for the TCP and UDP protocols, or an ICMP type number.
	FromPortRange pulumi.IntInput `pulumi:"fromPortRange"`
	// The IP protocol name (`tcp`, `udp`, `icmp`, or `-1` for all protocols). By default, `-1`. In a Net, this can also be an IP protocol number. For more information, see the [IANA.org website](https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml).
	IpProtocol pulumi.StringInput `pulumi:"ipProtocol"`
	// One or more IP ranges for the security group rules, in CIDR notation (for example, `10.0.0.0/16`).
	IpRanges      pulumi.StringArrayInput `pulumi:"ipRanges"`
	PrefixListIds pulumi.StringArrayInput `pulumi:"prefixListIds"`
	// Information about one or more source or destination security groups.
	SecurityGroupsMembers GetSecurityGroupsSecurityGroupOutboundRuleSecurityGroupsMemberArrayInput `pulumi:"securityGroupsMembers"`
	// The end of the port range for the TCP and UDP protocols, or an ICMP code number.
	ToPortRange pulumi.IntInput `pulumi:"toPortRange"`
}

func (GetSecurityGroupsSecurityGroupOutboundRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityGroupsSecurityGroupOutboundRule)(nil)).Elem()
}

func (i GetSecurityGroupsSecurityGroupOutboundRuleArgs) ToGetSecurityGroupsSecurityGroupOutboundRuleOutput() GetSecurityGroupsSecurityGroupOutboundRuleOutput {
	return i.ToGetSecurityGroupsSecurityGroupOutboundRuleOutputWithContext(context.Background())
}

func (i GetSecurityGroupsSecurityGroupOutboundRuleArgs) ToGetSecurityGroupsSecurityGroupOutboundRuleOutputWithContext(ctx context.Context) GetSecurityGroupsSecurityGroupOutboundRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityGroupsSecurityGroupOutboundRuleOutput)
}

// GetSecurityGroupsSecurityGroupOutboundRuleArrayInput is an input type that accepts GetSecurityGroupsSecurityGroupOutboundRuleArray and GetSecurityGroupsSecurityGroupOutboundRuleArrayOutput values.
// You can construct a concrete instance of `GetSecurityGroupsSecurityGroupOutboundRuleArrayInput` via:
//
//	GetSecurityGroupsSecurityGroupOutboundRuleArray{ GetSecurityGroupsSecurityGroupOutboundRuleArgs{...} }
type GetSecurityGroupsSecurityGroupOutboundRuleArrayInput interface {
	pulumi.Input

	ToGetSecurityGroupsSecurityGroupOutboundRuleArrayOutput() GetSecurityGroupsSecurityGroupOutboundRuleArrayOutput
	ToGetSecurityGroupsSecurityGroupOutboundRuleArrayOutputWithContext(context.Context) GetSecurityGroupsSecurityGroupOutboundRuleArrayOutput
}

type GetSecurityGroupsSecurityGroupOutboundRuleArray []GetSecurityGroupsSecurityGroupOutboundRuleInput

func (GetSecurityGroupsSecurityGroupOutboundRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityGroupsSecurityGroupOutboundRule)(nil)).Elem()
}

func (i GetSecurityGroupsSecurityGroupOutboundRuleArray) ToGetSecurityGroupsSecurityGroupOutboundRuleArrayOutput() GetSecurityGroupsSecurityGroupOutboundRuleArrayOutput {
	return i.ToGetSecurityGroupsSecurityGroupOutboundRuleArrayOutputWithContext(context.Background())
}

func (i GetSecurityGroupsSecurityGroupOutboundRuleArray) ToGetSecurityGroupsSecurityGroupOutboundRuleArrayOutputWithContext(ctx context.Context) GetSecurityGroupsSecurityGroupOutboundRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityGroupsSecurityGroupOutboundRuleArrayOutput)
}

type GetSecurityGroupsSecurityGroupOutboundRuleOutput struct{ *pulumi.OutputState }

func (GetSecurityGroupsSecurityGroupOutboundRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityGroupsSecurityGroupOutboundRule)(nil)).Elem()
}

func (o GetSecurityGroupsSecurityGroupOutboundRuleOutput) ToGetSecurityGroupsSecurityGroupOutboundRuleOutput() GetSecurityGroupsSecurityGroupOutboundRuleOutput {
	return o
}

func (o GetSecurityGroupsSecurityGroupOutboundRuleOutput) ToGetSecurityGroupsSecurityGroupOutboundRuleOutputWithContext(ctx context.Context) GetSecurityGroupsSecurityGroupOutboundRuleOutput {
	return o
}

// The beginning of the port range for the TCP and UDP protocols, or an ICMP type number.
func (o GetSecurityGroupsSecurityGroupOutboundRuleOutput) FromPortRange() pulumi.IntOutput {
	return o.ApplyT(func(v GetSecurityGroupsSecurityGroupOutboundRule) int { return v.FromPortRange }).(pulumi.IntOutput)
}

// The IP protocol name (`tcp`, `udp`, `icmp`, or `-1` for all protocols). By default, `-1`. In a Net, this can also be an IP protocol number. For more information, see the [IANA.org website](https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml).
func (o GetSecurityGroupsSecurityGroupOutboundRuleOutput) IpProtocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityGroupsSecurityGroupOutboundRule) string { return v.IpProtocol }).(pulumi.StringOutput)
}

// One or more IP ranges for the security group rules, in CIDR notation (for example, `10.0.0.0/16`).
func (o GetSecurityGroupsSecurityGroupOutboundRuleOutput) IpRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSecurityGroupsSecurityGroupOutboundRule) []string { return v.IpRanges }).(pulumi.StringArrayOutput)
}

func (o GetSecurityGroupsSecurityGroupOutboundRuleOutput) PrefixListIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSecurityGroupsSecurityGroupOutboundRule) []string { return v.PrefixListIds }).(pulumi.StringArrayOutput)
}

// Information about one or more source or destination security groups.
func (o GetSecurityGroupsSecurityGroupOutboundRuleOutput) SecurityGroupsMembers() GetSecurityGroupsSecurityGroupOutboundRuleSecurityGroupsMemberArrayOutput {
	return o.ApplyT(func(v GetSecurityGroupsSecurityGroupOutboundRule) []GetSecurityGroupsSecurityGroupOutboundRuleSecurityGroupsMember {
		return v.SecurityGroupsMembers
	}).(GetSecurityGroupsSecurityGroupOutboundRuleSecurityGroupsMemberArrayOutput)
}

// The end of the port range for the TCP and UDP protocols, or an ICMP code number.
func (o GetSecurityGroupsSecurityGroupOutboundRuleOutput) ToPortRange() pulumi.IntOutput {
	return o.ApplyT(func(v GetSecurityGroupsSecurityGroupOutboundRule) int { return v.ToPortRange }).(pulumi.IntOutput)
}

type GetSecurityGroupsSecurityGroupOutboundRuleArrayOutput struct{ *pulumi.OutputState }

func (GetSecurityGroupsSecurityGroupOutboundRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityGroupsSecurityGroupOutboundRule)(nil)).Elem()
}

func (o GetSecurityGroupsSecurityGroupOutboundRuleArrayOutput) ToGetSecurityGroupsSecurityGroupOutboundRuleArrayOutput() GetSecurityGroupsSecurityGroupOutboundRuleArrayOutput {
	return o
}

func (o GetSecurityGroupsSecurityGroupOutboundRuleArrayOutput) ToGetSecurityGroupsSecurityGroupOutboundRuleArrayOutputWithContext(ctx context.Context) GetSecurityGroupsSecurityGroupOutboundRuleArrayOutput {
	return o
}

func (o GetSecurityGroupsSecurityGroupOutboundRuleArrayOutput) Index(i pulumi.IntInput) GetSecurityGroupsSecurityGroupOutboundRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSecurityGroupsSecurityGroupOutboundRule {
		return vs[0].([]GetSecurityGroupsSecurityGroupOutboundRule)[vs[1].(int)]
	}).(GetSecurityGroupsSecurityGroupOutboundRuleOutput)
}

type GetSecurityGroupsSecurityGroupOutboundRuleSecurityGroupsMember struct {
	// The account ID that owns the source or destination security group.
	AccountId string `pulumi:"accountId"`
	// The ID of the security group.
	SecurityGroupId string `pulumi:"securityGroupId"`
	// The name of the security group.
	SecurityGroupName string `pulumi:"securityGroupName"`
}

// GetSecurityGroupsSecurityGroupOutboundRuleSecurityGroupsMemberInput is an input type that accepts GetSecurityGroupsSecurityGroupOutboundRuleSecurityGroupsMemberArgs and GetSecurityGroupsSecurityGroupOutboundRuleSecurityGroupsMemberOutput values.
// You can construct a concrete instance of `GetSecurityGroupsSecurityGroupOutboundRuleSecurityGroupsMemberInput` via:
//
//	GetSecurityGroupsSecurityGroupOutboundRuleSecurityGroupsMemberArgs{...}
type GetSecurityGroupsSecurityGroupOutboundRuleSecurityGroupsMemberInput interface {
	pulumi.Input

	ToGetSecurityGroupsSecurityGroupOutboundRuleSecurityGroupsMemberOutput() GetSecurityGroupsSecurityGroupOutboundRuleSecurityGroupsMemberOutput
	ToGetSecurityGroupsSecurityGroupOutboundRuleSecurityGroupsMemberOutputWithContext(context.Context) GetSecurityGroupsSecurityGroupOutboundRuleSecurityGroupsMemberOutput
}

type GetSecurityGroupsSecurityGroupOutboundRuleSecurityGroupsMemberArgs struct {
	// The account ID that owns the source or destination security group.
	AccountId pulumi.StringInput `pulumi:"accountId"`
	// The ID of the security group.
	SecurityGroupId pulumi.StringInput `pulumi:"securityGroupId"`
	// The name of the security group.
	SecurityGroupName pulumi.StringInput `pulumi:"securityGroupName"`
}

func (GetSecurityGroupsSecurityGroupOutboundRuleSecurityGroupsMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityGroupsSecurityGroupOutboundRuleSecurityGroupsMember)(nil)).Elem()
}

func (i GetSecurityGroupsSecurityGroupOutboundRuleSecurityGroupsMemberArgs) ToGetSecurityGroupsSecurityGroupOutboundRuleSecurityGroupsMemberOutput() GetSecurityGroupsSecurityGroupOutboundRuleSecurityGroupsMemberOutput {
	return i.ToGetSecurityGroupsSecurityGroupOutboundRuleSecurityGroupsMemberOutputWithContext(context.Background())
}

func (i GetSecurityGroupsSecurityGroupOutboundRuleSecurityGroupsMemberArgs) ToGetSecurityGroupsSecurityGroupOutboundRuleSecurityGroupsMemberOutputWithContext(ctx context.Context) GetSecurityGroupsSecurityGroupOutboundRuleSecurityGroupsMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityGroupsSecurityGroupOutboundRuleSecurityGroupsMemberOutput)
}

// GetSecurityGroupsSecurityGroupOutboundRuleSecurityGroupsMemberArrayInput is an input type that accepts GetSecurityGroupsSecurityGroupOutboundRuleSecurityGroupsMemberArray and GetSecurityGroupsSecurityGroupOutboundRuleSecurityGroupsMemberArrayOutput values.
// You can construct a concrete instance of `GetSecurityGroupsSecurityGroupOutboundRuleSecurityGroupsMemberArrayInput` via:
//
//	GetSecurityGroupsSecurityGroupOutboundRuleSecurityGroupsMemberArray{ GetSecurityGroupsSecurityGroupOutboundRuleSecurityGroupsMemberArgs{...} }
type GetSecurityGroupsSecurityGroupOutboundRuleSecurityGroupsMemberArrayInput interface {
	pulumi.Input

	ToGetSecurityGroupsSecurityGroupOutboundRuleSecurityGroupsMemberArrayOutput() GetSecurityGroupsSecurityGroupOutboundRuleSecurityGroupsMemberArrayOutput
	ToGetSecurityGroupsSecurityGroupOutboundRuleSecurityGroupsMemberArrayOutputWithContext(context.Context) GetSecurityGroupsSecurityGroupOutboundRuleSecurityGroupsMemberArrayOutput
}

type GetSecurityGroupsSecurityGroupOutboundRuleSecurityGroupsMemberArray []GetSecurityGroupsSecurityGroupOutboundRuleSecurityGroupsMemberInput

func (GetSecurityGroupsSecurityGroupOutboundRuleSecurityGroupsMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityGroupsSecurityGroupOutboundRuleSecurityGroupsMember)(nil)).Elem()
}

func (i GetSecurityGroupsSecurityGroupOutboundRuleSecurityGroupsMemberArray) ToGetSecurityGroupsSecurityGroupOutboundRuleSecurityGroupsMemberArrayOutput() GetSecurityGroupsSecurityGroupOutboundRuleSecurityGroupsMemberArrayOutput {
	return i.ToGetSecurityGroupsSecurityGroupOutboundRuleSecurityGroupsMemberArrayOutputWithContext(context.Background())
}

func (i GetSecurityGroupsSecurityGroupOutboundRuleSecurityGroupsMemberArray) ToGetSecurityGroupsSecurityGroupOutboundRuleSecurityGroupsMemberArrayOutputWithContext(ctx context.Context) GetSecurityGroupsSecurityGroupOutboundRuleSecurityGroupsMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityGroupsSecurityGroupOutboundRuleSecurityGroupsMemberArrayOutput)
}

type GetSecurityGroupsSecurityGroupOutboundRuleSecurityGroupsMemberOutput struct{ *pulumi.OutputState }

func (GetSecurityGroupsSecurityGroupOutboundRuleSecurityGroupsMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityGroupsSecurityGroupOutboundRuleSecurityGroupsMember)(nil)).Elem()
}

func (o GetSecurityGroupsSecurityGroupOutboundRuleSecurityGroupsMemberOutput) ToGetSecurityGroupsSecurityGroupOutboundRuleSecurityGroupsMemberOutput() GetSecurityGroupsSecurityGroupOutboundRuleSecurityGroupsMemberOutput {
	return o
}

func (o GetSecurityGroupsSecurityGroupOutboundRuleSecurityGroupsMemberOutput) ToGetSecurityGroupsSecurityGroupOutboundRuleSecurityGroupsMemberOutputWithContext(ctx context.Context) GetSecurityGroupsSecurityGroupOutboundRuleSecurityGroupsMemberOutput {
	return o
}

// The account ID that owns the source or destination security group.
func (o GetSecurityGroupsSecurityGroupOutboundRuleSecurityGroupsMemberOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityGroupsSecurityGroupOutboundRuleSecurityGroupsMember) string { return v.AccountId }).(pulumi.StringOutput)
}

// The ID of the security group.
func (o GetSecurityGroupsSecurityGroupOutboundRuleSecurityGroupsMemberOutput) SecurityGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityGroupsSecurityGroupOutboundRuleSecurityGroupsMember) string {
		return v.SecurityGroupId
	}).(pulumi.StringOutput)
}

// The name of the security group.
func (o GetSecurityGroupsSecurityGroupOutboundRuleSecurityGroupsMemberOutput) SecurityGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityGroupsSecurityGroupOutboundRuleSecurityGroupsMember) string {
		return v.SecurityGroupName
	}).(pulumi.StringOutput)
}

type GetSecurityGroupsSecurityGroupOutboundRuleSecurityGroupsMemberArrayOutput struct{ *pulumi.OutputState }

func (GetSecurityGroupsSecurityGroupOutboundRuleSecurityGroupsMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityGroupsSecurityGroupOutboundRuleSecurityGroupsMember)(nil)).Elem()
}

func (o GetSecurityGroupsSecurityGroupOutboundRuleSecurityGroupsMemberArrayOutput) ToGetSecurityGroupsSecurityGroupOutboundRuleSecurityGroupsMemberArrayOutput() GetSecurityGroupsSecurityGroupOutboundRuleSecurityGroupsMemberArrayOutput {
	return o
}

func (o GetSecurityGroupsSecurityGroupOutboundRuleSecurityGroupsMemberArrayOutput) ToGetSecurityGroupsSecurityGroupOutboundRuleSecurityGroupsMemberArrayOutputWithContext(ctx context.Context) GetSecurityGroupsSecurityGroupOutboundRuleSecurityGroupsMemberArrayOutput {
	return o
}

func (o GetSecurityGroupsSecurityGroupOutboundRuleSecurityGroupsMemberArrayOutput) Index(i pulumi.IntInput) GetSecurityGroupsSecurityGroupOutboundRuleSecurityGroupsMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSecurityGroupsSecurityGroupOutboundRuleSecurityGroupsMember {
		return vs[0].([]GetSecurityGroupsSecurityGroupOutboundRuleSecurityGroupsMember)[vs[1].(int)]
	}).(GetSecurityGroupsSecurityGroupOutboundRuleSecurityGroupsMemberOutput)
}

type GetSecurityGroupsSecurityGroupTag struct {
	// The key of the tag, with a minimum of 1 character.
	Key string `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value string `pulumi:"value"`
}

// GetSecurityGroupsSecurityGroupTagInput is an input type that accepts GetSecurityGroupsSecurityGroupTagArgs and GetSecurityGroupsSecurityGroupTagOutput values.
// You can construct a concrete instance of `GetSecurityGroupsSecurityGroupTagInput` via:
//
//	GetSecurityGroupsSecurityGroupTagArgs{...}
type GetSecurityGroupsSecurityGroupTagInput interface {
	pulumi.Input

	ToGetSecurityGroupsSecurityGroupTagOutput() GetSecurityGroupsSecurityGroupTagOutput
	ToGetSecurityGroupsSecurityGroupTagOutputWithContext(context.Context) GetSecurityGroupsSecurityGroupTagOutput
}

type GetSecurityGroupsSecurityGroupTagArgs struct {
	// The key of the tag, with a minimum of 1 character.
	Key pulumi.StringInput `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetSecurityGroupsSecurityGroupTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityGroupsSecurityGroupTag)(nil)).Elem()
}

func (i GetSecurityGroupsSecurityGroupTagArgs) ToGetSecurityGroupsSecurityGroupTagOutput() GetSecurityGroupsSecurityGroupTagOutput {
	return i.ToGetSecurityGroupsSecurityGroupTagOutputWithContext(context.Background())
}

func (i GetSecurityGroupsSecurityGroupTagArgs) ToGetSecurityGroupsSecurityGroupTagOutputWithContext(ctx context.Context) GetSecurityGroupsSecurityGroupTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityGroupsSecurityGroupTagOutput)
}

// GetSecurityGroupsSecurityGroupTagArrayInput is an input type that accepts GetSecurityGroupsSecurityGroupTagArray and GetSecurityGroupsSecurityGroupTagArrayOutput values.
// You can construct a concrete instance of `GetSecurityGroupsSecurityGroupTagArrayInput` via:
//
//	GetSecurityGroupsSecurityGroupTagArray{ GetSecurityGroupsSecurityGroupTagArgs{...} }
type GetSecurityGroupsSecurityGroupTagArrayInput interface {
	pulumi.Input

	ToGetSecurityGroupsSecurityGroupTagArrayOutput() GetSecurityGroupsSecurityGroupTagArrayOutput
	ToGetSecurityGroupsSecurityGroupTagArrayOutputWithContext(context.Context) GetSecurityGroupsSecurityGroupTagArrayOutput
}

type GetSecurityGroupsSecurityGroupTagArray []GetSecurityGroupsSecurityGroupTagInput

func (GetSecurityGroupsSecurityGroupTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityGroupsSecurityGroupTag)(nil)).Elem()
}

func (i GetSecurityGroupsSecurityGroupTagArray) ToGetSecurityGroupsSecurityGroupTagArrayOutput() GetSecurityGroupsSecurityGroupTagArrayOutput {
	return i.ToGetSecurityGroupsSecurityGroupTagArrayOutputWithContext(context.Background())
}

func (i GetSecurityGroupsSecurityGroupTagArray) ToGetSecurityGroupsSecurityGroupTagArrayOutputWithContext(ctx context.Context) GetSecurityGroupsSecurityGroupTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityGroupsSecurityGroupTagArrayOutput)
}

type GetSecurityGroupsSecurityGroupTagOutput struct{ *pulumi.OutputState }

func (GetSecurityGroupsSecurityGroupTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityGroupsSecurityGroupTag)(nil)).Elem()
}

func (o GetSecurityGroupsSecurityGroupTagOutput) ToGetSecurityGroupsSecurityGroupTagOutput() GetSecurityGroupsSecurityGroupTagOutput {
	return o
}

func (o GetSecurityGroupsSecurityGroupTagOutput) ToGetSecurityGroupsSecurityGroupTagOutputWithContext(ctx context.Context) GetSecurityGroupsSecurityGroupTagOutput {
	return o
}

// The key of the tag, with a minimum of 1 character.
func (o GetSecurityGroupsSecurityGroupTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityGroupsSecurityGroupTag) string { return v.Key }).(pulumi.StringOutput)
}

// The value of the tag, between 0 and 255 characters.
func (o GetSecurityGroupsSecurityGroupTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityGroupsSecurityGroupTag) string { return v.Value }).(pulumi.StringOutput)
}

type GetSecurityGroupsSecurityGroupTagArrayOutput struct{ *pulumi.OutputState }

func (GetSecurityGroupsSecurityGroupTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityGroupsSecurityGroupTag)(nil)).Elem()
}

func (o GetSecurityGroupsSecurityGroupTagArrayOutput) ToGetSecurityGroupsSecurityGroupTagArrayOutput() GetSecurityGroupsSecurityGroupTagArrayOutput {
	return o
}

func (o GetSecurityGroupsSecurityGroupTagArrayOutput) ToGetSecurityGroupsSecurityGroupTagArrayOutputWithContext(ctx context.Context) GetSecurityGroupsSecurityGroupTagArrayOutput {
	return o
}

func (o GetSecurityGroupsSecurityGroupTagArrayOutput) Index(i pulumi.IntInput) GetSecurityGroupsSecurityGroupTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSecurityGroupsSecurityGroupTag {
		return vs[0].([]GetSecurityGroupsSecurityGroupTag)[vs[1].(int)]
	}).(GetSecurityGroupsSecurityGroupTagOutput)
}

type GetServerCertificateFilter struct {
	// The name of the server certificate.
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// GetServerCertificateFilterInput is an input type that accepts GetServerCertificateFilterArgs and GetServerCertificateFilterOutput values.
// You can construct a concrete instance of `GetServerCertificateFilterInput` via:
//
//	GetServerCertificateFilterArgs{...}
type GetServerCertificateFilterInput interface {
	pulumi.Input

	ToGetServerCertificateFilterOutput() GetServerCertificateFilterOutput
	ToGetServerCertificateFilterOutputWithContext(context.Context) GetServerCertificateFilterOutput
}

type GetServerCertificateFilterArgs struct {
	// The name of the server certificate.
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetServerCertificateFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerCertificateFilter)(nil)).Elem()
}

func (i GetServerCertificateFilterArgs) ToGetServerCertificateFilterOutput() GetServerCertificateFilterOutput {
	return i.ToGetServerCertificateFilterOutputWithContext(context.Background())
}

func (i GetServerCertificateFilterArgs) ToGetServerCertificateFilterOutputWithContext(ctx context.Context) GetServerCertificateFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServerCertificateFilterOutput)
}

// GetServerCertificateFilterArrayInput is an input type that accepts GetServerCertificateFilterArray and GetServerCertificateFilterArrayOutput values.
// You can construct a concrete instance of `GetServerCertificateFilterArrayInput` via:
//
//	GetServerCertificateFilterArray{ GetServerCertificateFilterArgs{...} }
type GetServerCertificateFilterArrayInput interface {
	pulumi.Input

	ToGetServerCertificateFilterArrayOutput() GetServerCertificateFilterArrayOutput
	ToGetServerCertificateFilterArrayOutputWithContext(context.Context) GetServerCertificateFilterArrayOutput
}

type GetServerCertificateFilterArray []GetServerCertificateFilterInput

func (GetServerCertificateFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServerCertificateFilter)(nil)).Elem()
}

func (i GetServerCertificateFilterArray) ToGetServerCertificateFilterArrayOutput() GetServerCertificateFilterArrayOutput {
	return i.ToGetServerCertificateFilterArrayOutputWithContext(context.Background())
}

func (i GetServerCertificateFilterArray) ToGetServerCertificateFilterArrayOutputWithContext(ctx context.Context) GetServerCertificateFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServerCertificateFilterArrayOutput)
}

type GetServerCertificateFilterOutput struct{ *pulumi.OutputState }

func (GetServerCertificateFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerCertificateFilter)(nil)).Elem()
}

func (o GetServerCertificateFilterOutput) ToGetServerCertificateFilterOutput() GetServerCertificateFilterOutput {
	return o
}

func (o GetServerCertificateFilterOutput) ToGetServerCertificateFilterOutputWithContext(ctx context.Context) GetServerCertificateFilterOutput {
	return o
}

// The name of the server certificate.
func (o GetServerCertificateFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerCertificateFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetServerCertificateFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetServerCertificateFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetServerCertificateFilterArrayOutput struct{ *pulumi.OutputState }

func (GetServerCertificateFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServerCertificateFilter)(nil)).Elem()
}

func (o GetServerCertificateFilterArrayOutput) ToGetServerCertificateFilterArrayOutput() GetServerCertificateFilterArrayOutput {
	return o
}

func (o GetServerCertificateFilterArrayOutput) ToGetServerCertificateFilterArrayOutputWithContext(ctx context.Context) GetServerCertificateFilterArrayOutput {
	return o
}

func (o GetServerCertificateFilterArrayOutput) Index(i pulumi.IntInput) GetServerCertificateFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServerCertificateFilter {
		return vs[0].([]GetServerCertificateFilter)[vs[1].(int)]
	}).(GetServerCertificateFilterOutput)
}

type GetServerCertificatesFilter struct {
	// The name of the server certificate.
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// GetServerCertificatesFilterInput is an input type that accepts GetServerCertificatesFilterArgs and GetServerCertificatesFilterOutput values.
// You can construct a concrete instance of `GetServerCertificatesFilterInput` via:
//
//	GetServerCertificatesFilterArgs{...}
type GetServerCertificatesFilterInput interface {
	pulumi.Input

	ToGetServerCertificatesFilterOutput() GetServerCertificatesFilterOutput
	ToGetServerCertificatesFilterOutputWithContext(context.Context) GetServerCertificatesFilterOutput
}

type GetServerCertificatesFilterArgs struct {
	// The name of the server certificate.
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetServerCertificatesFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerCertificatesFilter)(nil)).Elem()
}

func (i GetServerCertificatesFilterArgs) ToGetServerCertificatesFilterOutput() GetServerCertificatesFilterOutput {
	return i.ToGetServerCertificatesFilterOutputWithContext(context.Background())
}

func (i GetServerCertificatesFilterArgs) ToGetServerCertificatesFilterOutputWithContext(ctx context.Context) GetServerCertificatesFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServerCertificatesFilterOutput)
}

// GetServerCertificatesFilterArrayInput is an input type that accepts GetServerCertificatesFilterArray and GetServerCertificatesFilterArrayOutput values.
// You can construct a concrete instance of `GetServerCertificatesFilterArrayInput` via:
//
//	GetServerCertificatesFilterArray{ GetServerCertificatesFilterArgs{...} }
type GetServerCertificatesFilterArrayInput interface {
	pulumi.Input

	ToGetServerCertificatesFilterArrayOutput() GetServerCertificatesFilterArrayOutput
	ToGetServerCertificatesFilterArrayOutputWithContext(context.Context) GetServerCertificatesFilterArrayOutput
}

type GetServerCertificatesFilterArray []GetServerCertificatesFilterInput

func (GetServerCertificatesFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServerCertificatesFilter)(nil)).Elem()
}

func (i GetServerCertificatesFilterArray) ToGetServerCertificatesFilterArrayOutput() GetServerCertificatesFilterArrayOutput {
	return i.ToGetServerCertificatesFilterArrayOutputWithContext(context.Background())
}

func (i GetServerCertificatesFilterArray) ToGetServerCertificatesFilterArrayOutputWithContext(ctx context.Context) GetServerCertificatesFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServerCertificatesFilterArrayOutput)
}

type GetServerCertificatesFilterOutput struct{ *pulumi.OutputState }

func (GetServerCertificatesFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerCertificatesFilter)(nil)).Elem()
}

func (o GetServerCertificatesFilterOutput) ToGetServerCertificatesFilterOutput() GetServerCertificatesFilterOutput {
	return o
}

func (o GetServerCertificatesFilterOutput) ToGetServerCertificatesFilterOutputWithContext(ctx context.Context) GetServerCertificatesFilterOutput {
	return o
}

// The name of the server certificate.
func (o GetServerCertificatesFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerCertificatesFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetServerCertificatesFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetServerCertificatesFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetServerCertificatesFilterArrayOutput struct{ *pulumi.OutputState }

func (GetServerCertificatesFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServerCertificatesFilter)(nil)).Elem()
}

func (o GetServerCertificatesFilterArrayOutput) ToGetServerCertificatesFilterArrayOutput() GetServerCertificatesFilterArrayOutput {
	return o
}

func (o GetServerCertificatesFilterArrayOutput) ToGetServerCertificatesFilterArrayOutputWithContext(ctx context.Context) GetServerCertificatesFilterArrayOutput {
	return o
}

func (o GetServerCertificatesFilterArrayOutput) Index(i pulumi.IntInput) GetServerCertificatesFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServerCertificatesFilter {
		return vs[0].([]GetServerCertificatesFilter)[vs[1].(int)]
	}).(GetServerCertificatesFilterOutput)
}

type GetServerCertificatesServerCertificate struct {
	// The date on which the server certificate expires.
	ExpirationDate string `pulumi:"expirationDate"`
	// The ID of the server certificate.
	Id string `pulumi:"id"`
	// The name of the server certificate.
	Name string `pulumi:"name"`
	// The OUTSCALE Resource Name (ORN) of the server certificate. For more information, see [Resource Identifiers > OUTSCALE Resource Names (ORNs)](https://docs.outscale.com/en/userguide/Resource-Identifiers.html#_outscale_resource_names_orns).
	Orn string `pulumi:"orn"`
	// The path to the server certificate.
	Path string `pulumi:"path"`
	// The date on which the server certificate has been uploaded.
	UploadDate string `pulumi:"uploadDate"`
}

// GetServerCertificatesServerCertificateInput is an input type that accepts GetServerCertificatesServerCertificateArgs and GetServerCertificatesServerCertificateOutput values.
// You can construct a concrete instance of `GetServerCertificatesServerCertificateInput` via:
//
//	GetServerCertificatesServerCertificateArgs{...}
type GetServerCertificatesServerCertificateInput interface {
	pulumi.Input

	ToGetServerCertificatesServerCertificateOutput() GetServerCertificatesServerCertificateOutput
	ToGetServerCertificatesServerCertificateOutputWithContext(context.Context) GetServerCertificatesServerCertificateOutput
}

type GetServerCertificatesServerCertificateArgs struct {
	// The date on which the server certificate expires.
	ExpirationDate pulumi.StringInput `pulumi:"expirationDate"`
	// The ID of the server certificate.
	Id pulumi.StringInput `pulumi:"id"`
	// The name of the server certificate.
	Name pulumi.StringInput `pulumi:"name"`
	// The OUTSCALE Resource Name (ORN) of the server certificate. For more information, see [Resource Identifiers > OUTSCALE Resource Names (ORNs)](https://docs.outscale.com/en/userguide/Resource-Identifiers.html#_outscale_resource_names_orns).
	Orn pulumi.StringInput `pulumi:"orn"`
	// The path to the server certificate.
	Path pulumi.StringInput `pulumi:"path"`
	// The date on which the server certificate has been uploaded.
	UploadDate pulumi.StringInput `pulumi:"uploadDate"`
}

func (GetServerCertificatesServerCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerCertificatesServerCertificate)(nil)).Elem()
}

func (i GetServerCertificatesServerCertificateArgs) ToGetServerCertificatesServerCertificateOutput() GetServerCertificatesServerCertificateOutput {
	return i.ToGetServerCertificatesServerCertificateOutputWithContext(context.Background())
}

func (i GetServerCertificatesServerCertificateArgs) ToGetServerCertificatesServerCertificateOutputWithContext(ctx context.Context) GetServerCertificatesServerCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServerCertificatesServerCertificateOutput)
}

// GetServerCertificatesServerCertificateArrayInput is an input type that accepts GetServerCertificatesServerCertificateArray and GetServerCertificatesServerCertificateArrayOutput values.
// You can construct a concrete instance of `GetServerCertificatesServerCertificateArrayInput` via:
//
//	GetServerCertificatesServerCertificateArray{ GetServerCertificatesServerCertificateArgs{...} }
type GetServerCertificatesServerCertificateArrayInput interface {
	pulumi.Input

	ToGetServerCertificatesServerCertificateArrayOutput() GetServerCertificatesServerCertificateArrayOutput
	ToGetServerCertificatesServerCertificateArrayOutputWithContext(context.Context) GetServerCertificatesServerCertificateArrayOutput
}

type GetServerCertificatesServerCertificateArray []GetServerCertificatesServerCertificateInput

func (GetServerCertificatesServerCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServerCertificatesServerCertificate)(nil)).Elem()
}

func (i GetServerCertificatesServerCertificateArray) ToGetServerCertificatesServerCertificateArrayOutput() GetServerCertificatesServerCertificateArrayOutput {
	return i.ToGetServerCertificatesServerCertificateArrayOutputWithContext(context.Background())
}

func (i GetServerCertificatesServerCertificateArray) ToGetServerCertificatesServerCertificateArrayOutputWithContext(ctx context.Context) GetServerCertificatesServerCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServerCertificatesServerCertificateArrayOutput)
}

type GetServerCertificatesServerCertificateOutput struct{ *pulumi.OutputState }

func (GetServerCertificatesServerCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerCertificatesServerCertificate)(nil)).Elem()
}

func (o GetServerCertificatesServerCertificateOutput) ToGetServerCertificatesServerCertificateOutput() GetServerCertificatesServerCertificateOutput {
	return o
}

func (o GetServerCertificatesServerCertificateOutput) ToGetServerCertificatesServerCertificateOutputWithContext(ctx context.Context) GetServerCertificatesServerCertificateOutput {
	return o
}

// The date on which the server certificate expires.
func (o GetServerCertificatesServerCertificateOutput) ExpirationDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerCertificatesServerCertificate) string { return v.ExpirationDate }).(pulumi.StringOutput)
}

// The ID of the server certificate.
func (o GetServerCertificatesServerCertificateOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerCertificatesServerCertificate) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the server certificate.
func (o GetServerCertificatesServerCertificateOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerCertificatesServerCertificate) string { return v.Name }).(pulumi.StringOutput)
}

// The OUTSCALE Resource Name (ORN) of the server certificate. For more information, see [Resource Identifiers > OUTSCALE Resource Names (ORNs)](https://docs.outscale.com/en/userguide/Resource-Identifiers.html#_outscale_resource_names_orns).
func (o GetServerCertificatesServerCertificateOutput) Orn() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerCertificatesServerCertificate) string { return v.Orn }).(pulumi.StringOutput)
}

// The path to the server certificate.
func (o GetServerCertificatesServerCertificateOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerCertificatesServerCertificate) string { return v.Path }).(pulumi.StringOutput)
}

// The date on which the server certificate has been uploaded.
func (o GetServerCertificatesServerCertificateOutput) UploadDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerCertificatesServerCertificate) string { return v.UploadDate }).(pulumi.StringOutput)
}

type GetServerCertificatesServerCertificateArrayOutput struct{ *pulumi.OutputState }

func (GetServerCertificatesServerCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServerCertificatesServerCertificate)(nil)).Elem()
}

func (o GetServerCertificatesServerCertificateArrayOutput) ToGetServerCertificatesServerCertificateArrayOutput() GetServerCertificatesServerCertificateArrayOutput {
	return o
}

func (o GetServerCertificatesServerCertificateArrayOutput) ToGetServerCertificatesServerCertificateArrayOutputWithContext(ctx context.Context) GetServerCertificatesServerCertificateArrayOutput {
	return o
}

func (o GetServerCertificatesServerCertificateArrayOutput) Index(i pulumi.IntInput) GetServerCertificatesServerCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServerCertificatesServerCertificate {
		return vs[0].([]GetServerCertificatesServerCertificate)[vs[1].(int)]
	}).(GetServerCertificatesServerCertificateOutput)
}

type GetSnapshotExportTaskFilter struct {
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// GetSnapshotExportTaskFilterInput is an input type that accepts GetSnapshotExportTaskFilterArgs and GetSnapshotExportTaskFilterOutput values.
// You can construct a concrete instance of `GetSnapshotExportTaskFilterInput` via:
//
//	GetSnapshotExportTaskFilterArgs{...}
type GetSnapshotExportTaskFilterInput interface {
	pulumi.Input

	ToGetSnapshotExportTaskFilterOutput() GetSnapshotExportTaskFilterOutput
	ToGetSnapshotExportTaskFilterOutputWithContext(context.Context) GetSnapshotExportTaskFilterOutput
}

type GetSnapshotExportTaskFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetSnapshotExportTaskFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSnapshotExportTaskFilter)(nil)).Elem()
}

func (i GetSnapshotExportTaskFilterArgs) ToGetSnapshotExportTaskFilterOutput() GetSnapshotExportTaskFilterOutput {
	return i.ToGetSnapshotExportTaskFilterOutputWithContext(context.Background())
}

func (i GetSnapshotExportTaskFilterArgs) ToGetSnapshotExportTaskFilterOutputWithContext(ctx context.Context) GetSnapshotExportTaskFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSnapshotExportTaskFilterOutput)
}

// GetSnapshotExportTaskFilterArrayInput is an input type that accepts GetSnapshotExportTaskFilterArray and GetSnapshotExportTaskFilterArrayOutput values.
// You can construct a concrete instance of `GetSnapshotExportTaskFilterArrayInput` via:
//
//	GetSnapshotExportTaskFilterArray{ GetSnapshotExportTaskFilterArgs{...} }
type GetSnapshotExportTaskFilterArrayInput interface {
	pulumi.Input

	ToGetSnapshotExportTaskFilterArrayOutput() GetSnapshotExportTaskFilterArrayOutput
	ToGetSnapshotExportTaskFilterArrayOutputWithContext(context.Context) GetSnapshotExportTaskFilterArrayOutput
}

type GetSnapshotExportTaskFilterArray []GetSnapshotExportTaskFilterInput

func (GetSnapshotExportTaskFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSnapshotExportTaskFilter)(nil)).Elem()
}

func (i GetSnapshotExportTaskFilterArray) ToGetSnapshotExportTaskFilterArrayOutput() GetSnapshotExportTaskFilterArrayOutput {
	return i.ToGetSnapshotExportTaskFilterArrayOutputWithContext(context.Background())
}

func (i GetSnapshotExportTaskFilterArray) ToGetSnapshotExportTaskFilterArrayOutputWithContext(ctx context.Context) GetSnapshotExportTaskFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSnapshotExportTaskFilterArrayOutput)
}

type GetSnapshotExportTaskFilterOutput struct{ *pulumi.OutputState }

func (GetSnapshotExportTaskFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSnapshotExportTaskFilter)(nil)).Elem()
}

func (o GetSnapshotExportTaskFilterOutput) ToGetSnapshotExportTaskFilterOutput() GetSnapshotExportTaskFilterOutput {
	return o
}

func (o GetSnapshotExportTaskFilterOutput) ToGetSnapshotExportTaskFilterOutputWithContext(ctx context.Context) GetSnapshotExportTaskFilterOutput {
	return o
}

func (o GetSnapshotExportTaskFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSnapshotExportTaskFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetSnapshotExportTaskFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSnapshotExportTaskFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetSnapshotExportTaskFilterArrayOutput struct{ *pulumi.OutputState }

func (GetSnapshotExportTaskFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSnapshotExportTaskFilter)(nil)).Elem()
}

func (o GetSnapshotExportTaskFilterArrayOutput) ToGetSnapshotExportTaskFilterArrayOutput() GetSnapshotExportTaskFilterArrayOutput {
	return o
}

func (o GetSnapshotExportTaskFilterArrayOutput) ToGetSnapshotExportTaskFilterArrayOutputWithContext(ctx context.Context) GetSnapshotExportTaskFilterArrayOutput {
	return o
}

func (o GetSnapshotExportTaskFilterArrayOutput) Index(i pulumi.IntInput) GetSnapshotExportTaskFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSnapshotExportTaskFilter {
		return vs[0].([]GetSnapshotExportTaskFilter)[vs[1].(int)]
	}).(GetSnapshotExportTaskFilterOutput)
}

type GetSnapshotExportTaskOsuExport struct {
	// The format of the export disk (`qcow2` \| `raw`).
	DiskImageFormat string `pulumi:"diskImageFormat"`
	// The name of the OOS bucket the snapshot is exported to.
	OsuBucket string `pulumi:"osuBucket"`
	// The prefix for the key of the OOS object corresponding to the snapshot.
	OsuPrefix string `pulumi:"osuPrefix"`
}

// GetSnapshotExportTaskOsuExportInput is an input type that accepts GetSnapshotExportTaskOsuExportArgs and GetSnapshotExportTaskOsuExportOutput values.
// You can construct a concrete instance of `GetSnapshotExportTaskOsuExportInput` via:
//
//	GetSnapshotExportTaskOsuExportArgs{...}
type GetSnapshotExportTaskOsuExportInput interface {
	pulumi.Input

	ToGetSnapshotExportTaskOsuExportOutput() GetSnapshotExportTaskOsuExportOutput
	ToGetSnapshotExportTaskOsuExportOutputWithContext(context.Context) GetSnapshotExportTaskOsuExportOutput
}

type GetSnapshotExportTaskOsuExportArgs struct {
	// The format of the export disk (`qcow2` \| `raw`).
	DiskImageFormat pulumi.StringInput `pulumi:"diskImageFormat"`
	// The name of the OOS bucket the snapshot is exported to.
	OsuBucket pulumi.StringInput `pulumi:"osuBucket"`
	// The prefix for the key of the OOS object corresponding to the snapshot.
	OsuPrefix pulumi.StringInput `pulumi:"osuPrefix"`
}

func (GetSnapshotExportTaskOsuExportArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSnapshotExportTaskOsuExport)(nil)).Elem()
}

func (i GetSnapshotExportTaskOsuExportArgs) ToGetSnapshotExportTaskOsuExportOutput() GetSnapshotExportTaskOsuExportOutput {
	return i.ToGetSnapshotExportTaskOsuExportOutputWithContext(context.Background())
}

func (i GetSnapshotExportTaskOsuExportArgs) ToGetSnapshotExportTaskOsuExportOutputWithContext(ctx context.Context) GetSnapshotExportTaskOsuExportOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSnapshotExportTaskOsuExportOutput)
}

// GetSnapshotExportTaskOsuExportArrayInput is an input type that accepts GetSnapshotExportTaskOsuExportArray and GetSnapshotExportTaskOsuExportArrayOutput values.
// You can construct a concrete instance of `GetSnapshotExportTaskOsuExportArrayInput` via:
//
//	GetSnapshotExportTaskOsuExportArray{ GetSnapshotExportTaskOsuExportArgs{...} }
type GetSnapshotExportTaskOsuExportArrayInput interface {
	pulumi.Input

	ToGetSnapshotExportTaskOsuExportArrayOutput() GetSnapshotExportTaskOsuExportArrayOutput
	ToGetSnapshotExportTaskOsuExportArrayOutputWithContext(context.Context) GetSnapshotExportTaskOsuExportArrayOutput
}

type GetSnapshotExportTaskOsuExportArray []GetSnapshotExportTaskOsuExportInput

func (GetSnapshotExportTaskOsuExportArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSnapshotExportTaskOsuExport)(nil)).Elem()
}

func (i GetSnapshotExportTaskOsuExportArray) ToGetSnapshotExportTaskOsuExportArrayOutput() GetSnapshotExportTaskOsuExportArrayOutput {
	return i.ToGetSnapshotExportTaskOsuExportArrayOutputWithContext(context.Background())
}

func (i GetSnapshotExportTaskOsuExportArray) ToGetSnapshotExportTaskOsuExportArrayOutputWithContext(ctx context.Context) GetSnapshotExportTaskOsuExportArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSnapshotExportTaskOsuExportArrayOutput)
}

type GetSnapshotExportTaskOsuExportOutput struct{ *pulumi.OutputState }

func (GetSnapshotExportTaskOsuExportOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSnapshotExportTaskOsuExport)(nil)).Elem()
}

func (o GetSnapshotExportTaskOsuExportOutput) ToGetSnapshotExportTaskOsuExportOutput() GetSnapshotExportTaskOsuExportOutput {
	return o
}

func (o GetSnapshotExportTaskOsuExportOutput) ToGetSnapshotExportTaskOsuExportOutputWithContext(ctx context.Context) GetSnapshotExportTaskOsuExportOutput {
	return o
}

// The format of the export disk (`qcow2` \| `raw`).
func (o GetSnapshotExportTaskOsuExportOutput) DiskImageFormat() pulumi.StringOutput {
	return o.ApplyT(func(v GetSnapshotExportTaskOsuExport) string { return v.DiskImageFormat }).(pulumi.StringOutput)
}

// The name of the OOS bucket the snapshot is exported to.
func (o GetSnapshotExportTaskOsuExportOutput) OsuBucket() pulumi.StringOutput {
	return o.ApplyT(func(v GetSnapshotExportTaskOsuExport) string { return v.OsuBucket }).(pulumi.StringOutput)
}

// The prefix for the key of the OOS object corresponding to the snapshot.
func (o GetSnapshotExportTaskOsuExportOutput) OsuPrefix() pulumi.StringOutput {
	return o.ApplyT(func(v GetSnapshotExportTaskOsuExport) string { return v.OsuPrefix }).(pulumi.StringOutput)
}

type GetSnapshotExportTaskOsuExportArrayOutput struct{ *pulumi.OutputState }

func (GetSnapshotExportTaskOsuExportArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSnapshotExportTaskOsuExport)(nil)).Elem()
}

func (o GetSnapshotExportTaskOsuExportArrayOutput) ToGetSnapshotExportTaskOsuExportArrayOutput() GetSnapshotExportTaskOsuExportArrayOutput {
	return o
}

func (o GetSnapshotExportTaskOsuExportArrayOutput) ToGetSnapshotExportTaskOsuExportArrayOutputWithContext(ctx context.Context) GetSnapshotExportTaskOsuExportArrayOutput {
	return o
}

func (o GetSnapshotExportTaskOsuExportArrayOutput) Index(i pulumi.IntInput) GetSnapshotExportTaskOsuExportOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSnapshotExportTaskOsuExport {
		return vs[0].([]GetSnapshotExportTaskOsuExport)[vs[1].(int)]
	}).(GetSnapshotExportTaskOsuExportOutput)
}

type GetSnapshotExportTaskTag struct {
	// The key of the tag, with a minimum of 1 character.
	Key string `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value string `pulumi:"value"`
}

// GetSnapshotExportTaskTagInput is an input type that accepts GetSnapshotExportTaskTagArgs and GetSnapshotExportTaskTagOutput values.
// You can construct a concrete instance of `GetSnapshotExportTaskTagInput` via:
//
//	GetSnapshotExportTaskTagArgs{...}
type GetSnapshotExportTaskTagInput interface {
	pulumi.Input

	ToGetSnapshotExportTaskTagOutput() GetSnapshotExportTaskTagOutput
	ToGetSnapshotExportTaskTagOutputWithContext(context.Context) GetSnapshotExportTaskTagOutput
}

type GetSnapshotExportTaskTagArgs struct {
	// The key of the tag, with a minimum of 1 character.
	Key pulumi.StringInput `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetSnapshotExportTaskTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSnapshotExportTaskTag)(nil)).Elem()
}

func (i GetSnapshotExportTaskTagArgs) ToGetSnapshotExportTaskTagOutput() GetSnapshotExportTaskTagOutput {
	return i.ToGetSnapshotExportTaskTagOutputWithContext(context.Background())
}

func (i GetSnapshotExportTaskTagArgs) ToGetSnapshotExportTaskTagOutputWithContext(ctx context.Context) GetSnapshotExportTaskTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSnapshotExportTaskTagOutput)
}

// GetSnapshotExportTaskTagArrayInput is an input type that accepts GetSnapshotExportTaskTagArray and GetSnapshotExportTaskTagArrayOutput values.
// You can construct a concrete instance of `GetSnapshotExportTaskTagArrayInput` via:
//
//	GetSnapshotExportTaskTagArray{ GetSnapshotExportTaskTagArgs{...} }
type GetSnapshotExportTaskTagArrayInput interface {
	pulumi.Input

	ToGetSnapshotExportTaskTagArrayOutput() GetSnapshotExportTaskTagArrayOutput
	ToGetSnapshotExportTaskTagArrayOutputWithContext(context.Context) GetSnapshotExportTaskTagArrayOutput
}

type GetSnapshotExportTaskTagArray []GetSnapshotExportTaskTagInput

func (GetSnapshotExportTaskTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSnapshotExportTaskTag)(nil)).Elem()
}

func (i GetSnapshotExportTaskTagArray) ToGetSnapshotExportTaskTagArrayOutput() GetSnapshotExportTaskTagArrayOutput {
	return i.ToGetSnapshotExportTaskTagArrayOutputWithContext(context.Background())
}

func (i GetSnapshotExportTaskTagArray) ToGetSnapshotExportTaskTagArrayOutputWithContext(ctx context.Context) GetSnapshotExportTaskTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSnapshotExportTaskTagArrayOutput)
}

type GetSnapshotExportTaskTagOutput struct{ *pulumi.OutputState }

func (GetSnapshotExportTaskTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSnapshotExportTaskTag)(nil)).Elem()
}

func (o GetSnapshotExportTaskTagOutput) ToGetSnapshotExportTaskTagOutput() GetSnapshotExportTaskTagOutput {
	return o
}

func (o GetSnapshotExportTaskTagOutput) ToGetSnapshotExportTaskTagOutputWithContext(ctx context.Context) GetSnapshotExportTaskTagOutput {
	return o
}

// The key of the tag, with a minimum of 1 character.
func (o GetSnapshotExportTaskTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetSnapshotExportTaskTag) string { return v.Key }).(pulumi.StringOutput)
}

// The value of the tag, between 0 and 255 characters.
func (o GetSnapshotExportTaskTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetSnapshotExportTaskTag) string { return v.Value }).(pulumi.StringOutput)
}

type GetSnapshotExportTaskTagArrayOutput struct{ *pulumi.OutputState }

func (GetSnapshotExportTaskTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSnapshotExportTaskTag)(nil)).Elem()
}

func (o GetSnapshotExportTaskTagArrayOutput) ToGetSnapshotExportTaskTagArrayOutput() GetSnapshotExportTaskTagArrayOutput {
	return o
}

func (o GetSnapshotExportTaskTagArrayOutput) ToGetSnapshotExportTaskTagArrayOutputWithContext(ctx context.Context) GetSnapshotExportTaskTagArrayOutput {
	return o
}

func (o GetSnapshotExportTaskTagArrayOutput) Index(i pulumi.IntInput) GetSnapshotExportTaskTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSnapshotExportTaskTag {
		return vs[0].([]GetSnapshotExportTaskTag)[vs[1].(int)]
	}).(GetSnapshotExportTaskTagOutput)
}

type GetSnapshotExportTasksFilter struct {
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// GetSnapshotExportTasksFilterInput is an input type that accepts GetSnapshotExportTasksFilterArgs and GetSnapshotExportTasksFilterOutput values.
// You can construct a concrete instance of `GetSnapshotExportTasksFilterInput` via:
//
//	GetSnapshotExportTasksFilterArgs{...}
type GetSnapshotExportTasksFilterInput interface {
	pulumi.Input

	ToGetSnapshotExportTasksFilterOutput() GetSnapshotExportTasksFilterOutput
	ToGetSnapshotExportTasksFilterOutputWithContext(context.Context) GetSnapshotExportTasksFilterOutput
}

type GetSnapshotExportTasksFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetSnapshotExportTasksFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSnapshotExportTasksFilter)(nil)).Elem()
}

func (i GetSnapshotExportTasksFilterArgs) ToGetSnapshotExportTasksFilterOutput() GetSnapshotExportTasksFilterOutput {
	return i.ToGetSnapshotExportTasksFilterOutputWithContext(context.Background())
}

func (i GetSnapshotExportTasksFilterArgs) ToGetSnapshotExportTasksFilterOutputWithContext(ctx context.Context) GetSnapshotExportTasksFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSnapshotExportTasksFilterOutput)
}

// GetSnapshotExportTasksFilterArrayInput is an input type that accepts GetSnapshotExportTasksFilterArray and GetSnapshotExportTasksFilterArrayOutput values.
// You can construct a concrete instance of `GetSnapshotExportTasksFilterArrayInput` via:
//
//	GetSnapshotExportTasksFilterArray{ GetSnapshotExportTasksFilterArgs{...} }
type GetSnapshotExportTasksFilterArrayInput interface {
	pulumi.Input

	ToGetSnapshotExportTasksFilterArrayOutput() GetSnapshotExportTasksFilterArrayOutput
	ToGetSnapshotExportTasksFilterArrayOutputWithContext(context.Context) GetSnapshotExportTasksFilterArrayOutput
}

type GetSnapshotExportTasksFilterArray []GetSnapshotExportTasksFilterInput

func (GetSnapshotExportTasksFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSnapshotExportTasksFilter)(nil)).Elem()
}

func (i GetSnapshotExportTasksFilterArray) ToGetSnapshotExportTasksFilterArrayOutput() GetSnapshotExportTasksFilterArrayOutput {
	return i.ToGetSnapshotExportTasksFilterArrayOutputWithContext(context.Background())
}

func (i GetSnapshotExportTasksFilterArray) ToGetSnapshotExportTasksFilterArrayOutputWithContext(ctx context.Context) GetSnapshotExportTasksFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSnapshotExportTasksFilterArrayOutput)
}

type GetSnapshotExportTasksFilterOutput struct{ *pulumi.OutputState }

func (GetSnapshotExportTasksFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSnapshotExportTasksFilter)(nil)).Elem()
}

func (o GetSnapshotExportTasksFilterOutput) ToGetSnapshotExportTasksFilterOutput() GetSnapshotExportTasksFilterOutput {
	return o
}

func (o GetSnapshotExportTasksFilterOutput) ToGetSnapshotExportTasksFilterOutputWithContext(ctx context.Context) GetSnapshotExportTasksFilterOutput {
	return o
}

func (o GetSnapshotExportTasksFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSnapshotExportTasksFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetSnapshotExportTasksFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSnapshotExportTasksFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetSnapshotExportTasksFilterArrayOutput struct{ *pulumi.OutputState }

func (GetSnapshotExportTasksFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSnapshotExportTasksFilter)(nil)).Elem()
}

func (o GetSnapshotExportTasksFilterArrayOutput) ToGetSnapshotExportTasksFilterArrayOutput() GetSnapshotExportTasksFilterArrayOutput {
	return o
}

func (o GetSnapshotExportTasksFilterArrayOutput) ToGetSnapshotExportTasksFilterArrayOutputWithContext(ctx context.Context) GetSnapshotExportTasksFilterArrayOutput {
	return o
}

func (o GetSnapshotExportTasksFilterArrayOutput) Index(i pulumi.IntInput) GetSnapshotExportTasksFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSnapshotExportTasksFilter {
		return vs[0].([]GetSnapshotExportTasksFilter)[vs[1].(int)]
	}).(GetSnapshotExportTasksFilterOutput)
}

type GetSnapshotExportTasksSnapshotExportTask struct {
	// If the snapshot export task fails, an error message appears.
	Comment string `pulumi:"comment"`
	// Information about the snapshot export task.
	OsuExports []GetSnapshotExportTasksSnapshotExportTaskOsuExport `pulumi:"osuExports"`
	// The progress of the snapshot export task, as a percentage.
	Progress int `pulumi:"progress"`
	// The ID of the snapshot to be exported.
	SnapshotId string `pulumi:"snapshotId"`
	// The state of the snapshot export task (`pending` \| `active` \| `completed` \| `failed`).
	State string `pulumi:"state"`
	// One or more tags associated with the snapshot export task.
	Tags []GetSnapshotExportTasksSnapshotExportTaskTag `pulumi:"tags"`
	// The ID of the snapshot export task.
	TaskId string `pulumi:"taskId"`
}

// GetSnapshotExportTasksSnapshotExportTaskInput is an input type that accepts GetSnapshotExportTasksSnapshotExportTaskArgs and GetSnapshotExportTasksSnapshotExportTaskOutput values.
// You can construct a concrete instance of `GetSnapshotExportTasksSnapshotExportTaskInput` via:
//
//	GetSnapshotExportTasksSnapshotExportTaskArgs{...}
type GetSnapshotExportTasksSnapshotExportTaskInput interface {
	pulumi.Input

	ToGetSnapshotExportTasksSnapshotExportTaskOutput() GetSnapshotExportTasksSnapshotExportTaskOutput
	ToGetSnapshotExportTasksSnapshotExportTaskOutputWithContext(context.Context) GetSnapshotExportTasksSnapshotExportTaskOutput
}

type GetSnapshotExportTasksSnapshotExportTaskArgs struct {
	// If the snapshot export task fails, an error message appears.
	Comment pulumi.StringInput `pulumi:"comment"`
	// Information about the snapshot export task.
	OsuExports GetSnapshotExportTasksSnapshotExportTaskOsuExportArrayInput `pulumi:"osuExports"`
	// The progress of the snapshot export task, as a percentage.
	Progress pulumi.IntInput `pulumi:"progress"`
	// The ID of the snapshot to be exported.
	SnapshotId pulumi.StringInput `pulumi:"snapshotId"`
	// The state of the snapshot export task (`pending` \| `active` \| `completed` \| `failed`).
	State pulumi.StringInput `pulumi:"state"`
	// One or more tags associated with the snapshot export task.
	Tags GetSnapshotExportTasksSnapshotExportTaskTagArrayInput `pulumi:"tags"`
	// The ID of the snapshot export task.
	TaskId pulumi.StringInput `pulumi:"taskId"`
}

func (GetSnapshotExportTasksSnapshotExportTaskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSnapshotExportTasksSnapshotExportTask)(nil)).Elem()
}

func (i GetSnapshotExportTasksSnapshotExportTaskArgs) ToGetSnapshotExportTasksSnapshotExportTaskOutput() GetSnapshotExportTasksSnapshotExportTaskOutput {
	return i.ToGetSnapshotExportTasksSnapshotExportTaskOutputWithContext(context.Background())
}

func (i GetSnapshotExportTasksSnapshotExportTaskArgs) ToGetSnapshotExportTasksSnapshotExportTaskOutputWithContext(ctx context.Context) GetSnapshotExportTasksSnapshotExportTaskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSnapshotExportTasksSnapshotExportTaskOutput)
}

// GetSnapshotExportTasksSnapshotExportTaskArrayInput is an input type that accepts GetSnapshotExportTasksSnapshotExportTaskArray and GetSnapshotExportTasksSnapshotExportTaskArrayOutput values.
// You can construct a concrete instance of `GetSnapshotExportTasksSnapshotExportTaskArrayInput` via:
//
//	GetSnapshotExportTasksSnapshotExportTaskArray{ GetSnapshotExportTasksSnapshotExportTaskArgs{...} }
type GetSnapshotExportTasksSnapshotExportTaskArrayInput interface {
	pulumi.Input

	ToGetSnapshotExportTasksSnapshotExportTaskArrayOutput() GetSnapshotExportTasksSnapshotExportTaskArrayOutput
	ToGetSnapshotExportTasksSnapshotExportTaskArrayOutputWithContext(context.Context) GetSnapshotExportTasksSnapshotExportTaskArrayOutput
}

type GetSnapshotExportTasksSnapshotExportTaskArray []GetSnapshotExportTasksSnapshotExportTaskInput

func (GetSnapshotExportTasksSnapshotExportTaskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSnapshotExportTasksSnapshotExportTask)(nil)).Elem()
}

func (i GetSnapshotExportTasksSnapshotExportTaskArray) ToGetSnapshotExportTasksSnapshotExportTaskArrayOutput() GetSnapshotExportTasksSnapshotExportTaskArrayOutput {
	return i.ToGetSnapshotExportTasksSnapshotExportTaskArrayOutputWithContext(context.Background())
}

func (i GetSnapshotExportTasksSnapshotExportTaskArray) ToGetSnapshotExportTasksSnapshotExportTaskArrayOutputWithContext(ctx context.Context) GetSnapshotExportTasksSnapshotExportTaskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSnapshotExportTasksSnapshotExportTaskArrayOutput)
}

type GetSnapshotExportTasksSnapshotExportTaskOutput struct{ *pulumi.OutputState }

func (GetSnapshotExportTasksSnapshotExportTaskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSnapshotExportTasksSnapshotExportTask)(nil)).Elem()
}

func (o GetSnapshotExportTasksSnapshotExportTaskOutput) ToGetSnapshotExportTasksSnapshotExportTaskOutput() GetSnapshotExportTasksSnapshotExportTaskOutput {
	return o
}

func (o GetSnapshotExportTasksSnapshotExportTaskOutput) ToGetSnapshotExportTasksSnapshotExportTaskOutputWithContext(ctx context.Context) GetSnapshotExportTasksSnapshotExportTaskOutput {
	return o
}

// If the snapshot export task fails, an error message appears.
func (o GetSnapshotExportTasksSnapshotExportTaskOutput) Comment() pulumi.StringOutput {
	return o.ApplyT(func(v GetSnapshotExportTasksSnapshotExportTask) string { return v.Comment }).(pulumi.StringOutput)
}

// Information about the snapshot export task.
func (o GetSnapshotExportTasksSnapshotExportTaskOutput) OsuExports() GetSnapshotExportTasksSnapshotExportTaskOsuExportArrayOutput {
	return o.ApplyT(func(v GetSnapshotExportTasksSnapshotExportTask) []GetSnapshotExportTasksSnapshotExportTaskOsuExport {
		return v.OsuExports
	}).(GetSnapshotExportTasksSnapshotExportTaskOsuExportArrayOutput)
}

// The progress of the snapshot export task, as a percentage.
func (o GetSnapshotExportTasksSnapshotExportTaskOutput) Progress() pulumi.IntOutput {
	return o.ApplyT(func(v GetSnapshotExportTasksSnapshotExportTask) int { return v.Progress }).(pulumi.IntOutput)
}

// The ID of the snapshot to be exported.
func (o GetSnapshotExportTasksSnapshotExportTaskOutput) SnapshotId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSnapshotExportTasksSnapshotExportTask) string { return v.SnapshotId }).(pulumi.StringOutput)
}

// The state of the snapshot export task (`pending` \| `active` \| `completed` \| `failed`).
func (o GetSnapshotExportTasksSnapshotExportTaskOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetSnapshotExportTasksSnapshotExportTask) string { return v.State }).(pulumi.StringOutput)
}

// One or more tags associated with the snapshot export task.
func (o GetSnapshotExportTasksSnapshotExportTaskOutput) Tags() GetSnapshotExportTasksSnapshotExportTaskTagArrayOutput {
	return o.ApplyT(func(v GetSnapshotExportTasksSnapshotExportTask) []GetSnapshotExportTasksSnapshotExportTaskTag {
		return v.Tags
	}).(GetSnapshotExportTasksSnapshotExportTaskTagArrayOutput)
}

// The ID of the snapshot export task.
func (o GetSnapshotExportTasksSnapshotExportTaskOutput) TaskId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSnapshotExportTasksSnapshotExportTask) string { return v.TaskId }).(pulumi.StringOutput)
}

type GetSnapshotExportTasksSnapshotExportTaskArrayOutput struct{ *pulumi.OutputState }

func (GetSnapshotExportTasksSnapshotExportTaskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSnapshotExportTasksSnapshotExportTask)(nil)).Elem()
}

func (o GetSnapshotExportTasksSnapshotExportTaskArrayOutput) ToGetSnapshotExportTasksSnapshotExportTaskArrayOutput() GetSnapshotExportTasksSnapshotExportTaskArrayOutput {
	return o
}

func (o GetSnapshotExportTasksSnapshotExportTaskArrayOutput) ToGetSnapshotExportTasksSnapshotExportTaskArrayOutputWithContext(ctx context.Context) GetSnapshotExportTasksSnapshotExportTaskArrayOutput {
	return o
}

func (o GetSnapshotExportTasksSnapshotExportTaskArrayOutput) Index(i pulumi.IntInput) GetSnapshotExportTasksSnapshotExportTaskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSnapshotExportTasksSnapshotExportTask {
		return vs[0].([]GetSnapshotExportTasksSnapshotExportTask)[vs[1].(int)]
	}).(GetSnapshotExportTasksSnapshotExportTaskOutput)
}

type GetSnapshotExportTasksSnapshotExportTaskOsuExport struct {
	// The format of the export disk (`qcow2` \| `raw`).
	DiskImageFormat string `pulumi:"diskImageFormat"`
	// The name of the OOS bucket the snapshot is exported to.
	OsuBucket string `pulumi:"osuBucket"`
	// The prefix for the key of the OOS object corresponding to the snapshot.
	OsuPrefix string `pulumi:"osuPrefix"`
}

// GetSnapshotExportTasksSnapshotExportTaskOsuExportInput is an input type that accepts GetSnapshotExportTasksSnapshotExportTaskOsuExportArgs and GetSnapshotExportTasksSnapshotExportTaskOsuExportOutput values.
// You can construct a concrete instance of `GetSnapshotExportTasksSnapshotExportTaskOsuExportInput` via:
//
//	GetSnapshotExportTasksSnapshotExportTaskOsuExportArgs{...}
type GetSnapshotExportTasksSnapshotExportTaskOsuExportInput interface {
	pulumi.Input

	ToGetSnapshotExportTasksSnapshotExportTaskOsuExportOutput() GetSnapshotExportTasksSnapshotExportTaskOsuExportOutput
	ToGetSnapshotExportTasksSnapshotExportTaskOsuExportOutputWithContext(context.Context) GetSnapshotExportTasksSnapshotExportTaskOsuExportOutput
}

type GetSnapshotExportTasksSnapshotExportTaskOsuExportArgs struct {
	// The format of the export disk (`qcow2` \| `raw`).
	DiskImageFormat pulumi.StringInput `pulumi:"diskImageFormat"`
	// The name of the OOS bucket the snapshot is exported to.
	OsuBucket pulumi.StringInput `pulumi:"osuBucket"`
	// The prefix for the key of the OOS object corresponding to the snapshot.
	OsuPrefix pulumi.StringInput `pulumi:"osuPrefix"`
}

func (GetSnapshotExportTasksSnapshotExportTaskOsuExportArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSnapshotExportTasksSnapshotExportTaskOsuExport)(nil)).Elem()
}

func (i GetSnapshotExportTasksSnapshotExportTaskOsuExportArgs) ToGetSnapshotExportTasksSnapshotExportTaskOsuExportOutput() GetSnapshotExportTasksSnapshotExportTaskOsuExportOutput {
	return i.ToGetSnapshotExportTasksSnapshotExportTaskOsuExportOutputWithContext(context.Background())
}

func (i GetSnapshotExportTasksSnapshotExportTaskOsuExportArgs) ToGetSnapshotExportTasksSnapshotExportTaskOsuExportOutputWithContext(ctx context.Context) GetSnapshotExportTasksSnapshotExportTaskOsuExportOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSnapshotExportTasksSnapshotExportTaskOsuExportOutput)
}

// GetSnapshotExportTasksSnapshotExportTaskOsuExportArrayInput is an input type that accepts GetSnapshotExportTasksSnapshotExportTaskOsuExportArray and GetSnapshotExportTasksSnapshotExportTaskOsuExportArrayOutput values.
// You can construct a concrete instance of `GetSnapshotExportTasksSnapshotExportTaskOsuExportArrayInput` via:
//
//	GetSnapshotExportTasksSnapshotExportTaskOsuExportArray{ GetSnapshotExportTasksSnapshotExportTaskOsuExportArgs{...} }
type GetSnapshotExportTasksSnapshotExportTaskOsuExportArrayInput interface {
	pulumi.Input

	ToGetSnapshotExportTasksSnapshotExportTaskOsuExportArrayOutput() GetSnapshotExportTasksSnapshotExportTaskOsuExportArrayOutput
	ToGetSnapshotExportTasksSnapshotExportTaskOsuExportArrayOutputWithContext(context.Context) GetSnapshotExportTasksSnapshotExportTaskOsuExportArrayOutput
}

type GetSnapshotExportTasksSnapshotExportTaskOsuExportArray []GetSnapshotExportTasksSnapshotExportTaskOsuExportInput

func (GetSnapshotExportTasksSnapshotExportTaskOsuExportArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSnapshotExportTasksSnapshotExportTaskOsuExport)(nil)).Elem()
}

func (i GetSnapshotExportTasksSnapshotExportTaskOsuExportArray) ToGetSnapshotExportTasksSnapshotExportTaskOsuExportArrayOutput() GetSnapshotExportTasksSnapshotExportTaskOsuExportArrayOutput {
	return i.ToGetSnapshotExportTasksSnapshotExportTaskOsuExportArrayOutputWithContext(context.Background())
}

func (i GetSnapshotExportTasksSnapshotExportTaskOsuExportArray) ToGetSnapshotExportTasksSnapshotExportTaskOsuExportArrayOutputWithContext(ctx context.Context) GetSnapshotExportTasksSnapshotExportTaskOsuExportArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSnapshotExportTasksSnapshotExportTaskOsuExportArrayOutput)
}

type GetSnapshotExportTasksSnapshotExportTaskOsuExportOutput struct{ *pulumi.OutputState }

func (GetSnapshotExportTasksSnapshotExportTaskOsuExportOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSnapshotExportTasksSnapshotExportTaskOsuExport)(nil)).Elem()
}

func (o GetSnapshotExportTasksSnapshotExportTaskOsuExportOutput) ToGetSnapshotExportTasksSnapshotExportTaskOsuExportOutput() GetSnapshotExportTasksSnapshotExportTaskOsuExportOutput {
	return o
}

func (o GetSnapshotExportTasksSnapshotExportTaskOsuExportOutput) ToGetSnapshotExportTasksSnapshotExportTaskOsuExportOutputWithContext(ctx context.Context) GetSnapshotExportTasksSnapshotExportTaskOsuExportOutput {
	return o
}

// The format of the export disk (`qcow2` \| `raw`).
func (o GetSnapshotExportTasksSnapshotExportTaskOsuExportOutput) DiskImageFormat() pulumi.StringOutput {
	return o.ApplyT(func(v GetSnapshotExportTasksSnapshotExportTaskOsuExport) string { return v.DiskImageFormat }).(pulumi.StringOutput)
}

// The name of the OOS bucket the snapshot is exported to.
func (o GetSnapshotExportTasksSnapshotExportTaskOsuExportOutput) OsuBucket() pulumi.StringOutput {
	return o.ApplyT(func(v GetSnapshotExportTasksSnapshotExportTaskOsuExport) string { return v.OsuBucket }).(pulumi.StringOutput)
}

// The prefix for the key of the OOS object corresponding to the snapshot.
func (o GetSnapshotExportTasksSnapshotExportTaskOsuExportOutput) OsuPrefix() pulumi.StringOutput {
	return o.ApplyT(func(v GetSnapshotExportTasksSnapshotExportTaskOsuExport) string { return v.OsuPrefix }).(pulumi.StringOutput)
}

type GetSnapshotExportTasksSnapshotExportTaskOsuExportArrayOutput struct{ *pulumi.OutputState }

func (GetSnapshotExportTasksSnapshotExportTaskOsuExportArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSnapshotExportTasksSnapshotExportTaskOsuExport)(nil)).Elem()
}

func (o GetSnapshotExportTasksSnapshotExportTaskOsuExportArrayOutput) ToGetSnapshotExportTasksSnapshotExportTaskOsuExportArrayOutput() GetSnapshotExportTasksSnapshotExportTaskOsuExportArrayOutput {
	return o
}

func (o GetSnapshotExportTasksSnapshotExportTaskOsuExportArrayOutput) ToGetSnapshotExportTasksSnapshotExportTaskOsuExportArrayOutputWithContext(ctx context.Context) GetSnapshotExportTasksSnapshotExportTaskOsuExportArrayOutput {
	return o
}

func (o GetSnapshotExportTasksSnapshotExportTaskOsuExportArrayOutput) Index(i pulumi.IntInput) GetSnapshotExportTasksSnapshotExportTaskOsuExportOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSnapshotExportTasksSnapshotExportTaskOsuExport {
		return vs[0].([]GetSnapshotExportTasksSnapshotExportTaskOsuExport)[vs[1].(int)]
	}).(GetSnapshotExportTasksSnapshotExportTaskOsuExportOutput)
}

type GetSnapshotExportTasksSnapshotExportTaskTag struct {
	// The key of the tag, with a minimum of 1 character.
	Key string `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value string `pulumi:"value"`
}

// GetSnapshotExportTasksSnapshotExportTaskTagInput is an input type that accepts GetSnapshotExportTasksSnapshotExportTaskTagArgs and GetSnapshotExportTasksSnapshotExportTaskTagOutput values.
// You can construct a concrete instance of `GetSnapshotExportTasksSnapshotExportTaskTagInput` via:
//
//	GetSnapshotExportTasksSnapshotExportTaskTagArgs{...}
type GetSnapshotExportTasksSnapshotExportTaskTagInput interface {
	pulumi.Input

	ToGetSnapshotExportTasksSnapshotExportTaskTagOutput() GetSnapshotExportTasksSnapshotExportTaskTagOutput
	ToGetSnapshotExportTasksSnapshotExportTaskTagOutputWithContext(context.Context) GetSnapshotExportTasksSnapshotExportTaskTagOutput
}

type GetSnapshotExportTasksSnapshotExportTaskTagArgs struct {
	// The key of the tag, with a minimum of 1 character.
	Key pulumi.StringInput `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetSnapshotExportTasksSnapshotExportTaskTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSnapshotExportTasksSnapshotExportTaskTag)(nil)).Elem()
}

func (i GetSnapshotExportTasksSnapshotExportTaskTagArgs) ToGetSnapshotExportTasksSnapshotExportTaskTagOutput() GetSnapshotExportTasksSnapshotExportTaskTagOutput {
	return i.ToGetSnapshotExportTasksSnapshotExportTaskTagOutputWithContext(context.Background())
}

func (i GetSnapshotExportTasksSnapshotExportTaskTagArgs) ToGetSnapshotExportTasksSnapshotExportTaskTagOutputWithContext(ctx context.Context) GetSnapshotExportTasksSnapshotExportTaskTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSnapshotExportTasksSnapshotExportTaskTagOutput)
}

// GetSnapshotExportTasksSnapshotExportTaskTagArrayInput is an input type that accepts GetSnapshotExportTasksSnapshotExportTaskTagArray and GetSnapshotExportTasksSnapshotExportTaskTagArrayOutput values.
// You can construct a concrete instance of `GetSnapshotExportTasksSnapshotExportTaskTagArrayInput` via:
//
//	GetSnapshotExportTasksSnapshotExportTaskTagArray{ GetSnapshotExportTasksSnapshotExportTaskTagArgs{...} }
type GetSnapshotExportTasksSnapshotExportTaskTagArrayInput interface {
	pulumi.Input

	ToGetSnapshotExportTasksSnapshotExportTaskTagArrayOutput() GetSnapshotExportTasksSnapshotExportTaskTagArrayOutput
	ToGetSnapshotExportTasksSnapshotExportTaskTagArrayOutputWithContext(context.Context) GetSnapshotExportTasksSnapshotExportTaskTagArrayOutput
}

type GetSnapshotExportTasksSnapshotExportTaskTagArray []GetSnapshotExportTasksSnapshotExportTaskTagInput

func (GetSnapshotExportTasksSnapshotExportTaskTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSnapshotExportTasksSnapshotExportTaskTag)(nil)).Elem()
}

func (i GetSnapshotExportTasksSnapshotExportTaskTagArray) ToGetSnapshotExportTasksSnapshotExportTaskTagArrayOutput() GetSnapshotExportTasksSnapshotExportTaskTagArrayOutput {
	return i.ToGetSnapshotExportTasksSnapshotExportTaskTagArrayOutputWithContext(context.Background())
}

func (i GetSnapshotExportTasksSnapshotExportTaskTagArray) ToGetSnapshotExportTasksSnapshotExportTaskTagArrayOutputWithContext(ctx context.Context) GetSnapshotExportTasksSnapshotExportTaskTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSnapshotExportTasksSnapshotExportTaskTagArrayOutput)
}

type GetSnapshotExportTasksSnapshotExportTaskTagOutput struct{ *pulumi.OutputState }

func (GetSnapshotExportTasksSnapshotExportTaskTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSnapshotExportTasksSnapshotExportTaskTag)(nil)).Elem()
}

func (o GetSnapshotExportTasksSnapshotExportTaskTagOutput) ToGetSnapshotExportTasksSnapshotExportTaskTagOutput() GetSnapshotExportTasksSnapshotExportTaskTagOutput {
	return o
}

func (o GetSnapshotExportTasksSnapshotExportTaskTagOutput) ToGetSnapshotExportTasksSnapshotExportTaskTagOutputWithContext(ctx context.Context) GetSnapshotExportTasksSnapshotExportTaskTagOutput {
	return o
}

// The key of the tag, with a minimum of 1 character.
func (o GetSnapshotExportTasksSnapshotExportTaskTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetSnapshotExportTasksSnapshotExportTaskTag) string { return v.Key }).(pulumi.StringOutput)
}

// The value of the tag, between 0 and 255 characters.
func (o GetSnapshotExportTasksSnapshotExportTaskTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetSnapshotExportTasksSnapshotExportTaskTag) string { return v.Value }).(pulumi.StringOutput)
}

type GetSnapshotExportTasksSnapshotExportTaskTagArrayOutput struct{ *pulumi.OutputState }

func (GetSnapshotExportTasksSnapshotExportTaskTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSnapshotExportTasksSnapshotExportTaskTag)(nil)).Elem()
}

func (o GetSnapshotExportTasksSnapshotExportTaskTagArrayOutput) ToGetSnapshotExportTasksSnapshotExportTaskTagArrayOutput() GetSnapshotExportTasksSnapshotExportTaskTagArrayOutput {
	return o
}

func (o GetSnapshotExportTasksSnapshotExportTaskTagArrayOutput) ToGetSnapshotExportTasksSnapshotExportTaskTagArrayOutputWithContext(ctx context.Context) GetSnapshotExportTasksSnapshotExportTaskTagArrayOutput {
	return o
}

func (o GetSnapshotExportTasksSnapshotExportTaskTagArrayOutput) Index(i pulumi.IntInput) GetSnapshotExportTasksSnapshotExportTaskTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSnapshotExportTasksSnapshotExportTaskTag {
		return vs[0].([]GetSnapshotExportTasksSnapshotExportTaskTag)[vs[1].(int)]
	}).(GetSnapshotExportTasksSnapshotExportTaskTagOutput)
}

type GetSnapshotFilter struct {
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// GetSnapshotFilterInput is an input type that accepts GetSnapshotFilterArgs and GetSnapshotFilterOutput values.
// You can construct a concrete instance of `GetSnapshotFilterInput` via:
//
//	GetSnapshotFilterArgs{...}
type GetSnapshotFilterInput interface {
	pulumi.Input

	ToGetSnapshotFilterOutput() GetSnapshotFilterOutput
	ToGetSnapshotFilterOutputWithContext(context.Context) GetSnapshotFilterOutput
}

type GetSnapshotFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetSnapshotFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSnapshotFilter)(nil)).Elem()
}

func (i GetSnapshotFilterArgs) ToGetSnapshotFilterOutput() GetSnapshotFilterOutput {
	return i.ToGetSnapshotFilterOutputWithContext(context.Background())
}

func (i GetSnapshotFilterArgs) ToGetSnapshotFilterOutputWithContext(ctx context.Context) GetSnapshotFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSnapshotFilterOutput)
}

// GetSnapshotFilterArrayInput is an input type that accepts GetSnapshotFilterArray and GetSnapshotFilterArrayOutput values.
// You can construct a concrete instance of `GetSnapshotFilterArrayInput` via:
//
//	GetSnapshotFilterArray{ GetSnapshotFilterArgs{...} }
type GetSnapshotFilterArrayInput interface {
	pulumi.Input

	ToGetSnapshotFilterArrayOutput() GetSnapshotFilterArrayOutput
	ToGetSnapshotFilterArrayOutputWithContext(context.Context) GetSnapshotFilterArrayOutput
}

type GetSnapshotFilterArray []GetSnapshotFilterInput

func (GetSnapshotFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSnapshotFilter)(nil)).Elem()
}

func (i GetSnapshotFilterArray) ToGetSnapshotFilterArrayOutput() GetSnapshotFilterArrayOutput {
	return i.ToGetSnapshotFilterArrayOutputWithContext(context.Background())
}

func (i GetSnapshotFilterArray) ToGetSnapshotFilterArrayOutputWithContext(ctx context.Context) GetSnapshotFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSnapshotFilterArrayOutput)
}

type GetSnapshotFilterOutput struct{ *pulumi.OutputState }

func (GetSnapshotFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSnapshotFilter)(nil)).Elem()
}

func (o GetSnapshotFilterOutput) ToGetSnapshotFilterOutput() GetSnapshotFilterOutput {
	return o
}

func (o GetSnapshotFilterOutput) ToGetSnapshotFilterOutputWithContext(ctx context.Context) GetSnapshotFilterOutput {
	return o
}

func (o GetSnapshotFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSnapshotFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetSnapshotFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSnapshotFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetSnapshotFilterArrayOutput struct{ *pulumi.OutputState }

func (GetSnapshotFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSnapshotFilter)(nil)).Elem()
}

func (o GetSnapshotFilterArrayOutput) ToGetSnapshotFilterArrayOutput() GetSnapshotFilterArrayOutput {
	return o
}

func (o GetSnapshotFilterArrayOutput) ToGetSnapshotFilterArrayOutputWithContext(ctx context.Context) GetSnapshotFilterArrayOutput {
	return o
}

func (o GetSnapshotFilterArrayOutput) Index(i pulumi.IntInput) GetSnapshotFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSnapshotFilter {
		return vs[0].([]GetSnapshotFilter)[vs[1].(int)]
	}).(GetSnapshotFilterOutput)
}

type GetSnapshotPermissionsToCreateVolume struct {
	// One or more account IDs that the permission is associated with.
	AccountIds []string `pulumi:"accountIds"`
	// A global permission for all accounts.<br />
	// (Request) Set this parameter to true to make the resource public (if the parent parameter is `Additions`) or to make the resource private (if the parent parameter is `Removals`).<br />
	// (Response) If true, the resource is public. If false, the resource is private.
	GlobalPermission bool `pulumi:"globalPermission"`
}

// GetSnapshotPermissionsToCreateVolumeInput is an input type that accepts GetSnapshotPermissionsToCreateVolumeArgs and GetSnapshotPermissionsToCreateVolumeOutput values.
// You can construct a concrete instance of `GetSnapshotPermissionsToCreateVolumeInput` via:
//
//	GetSnapshotPermissionsToCreateVolumeArgs{...}
type GetSnapshotPermissionsToCreateVolumeInput interface {
	pulumi.Input

	ToGetSnapshotPermissionsToCreateVolumeOutput() GetSnapshotPermissionsToCreateVolumeOutput
	ToGetSnapshotPermissionsToCreateVolumeOutputWithContext(context.Context) GetSnapshotPermissionsToCreateVolumeOutput
}

type GetSnapshotPermissionsToCreateVolumeArgs struct {
	// One or more account IDs that the permission is associated with.
	AccountIds pulumi.StringArrayInput `pulumi:"accountIds"`
	// A global permission for all accounts.<br />
	// (Request) Set this parameter to true to make the resource public (if the parent parameter is `Additions`) or to make the resource private (if the parent parameter is `Removals`).<br />
	// (Response) If true, the resource is public. If false, the resource is private.
	GlobalPermission pulumi.BoolInput `pulumi:"globalPermission"`
}

func (GetSnapshotPermissionsToCreateVolumeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSnapshotPermissionsToCreateVolume)(nil)).Elem()
}

func (i GetSnapshotPermissionsToCreateVolumeArgs) ToGetSnapshotPermissionsToCreateVolumeOutput() GetSnapshotPermissionsToCreateVolumeOutput {
	return i.ToGetSnapshotPermissionsToCreateVolumeOutputWithContext(context.Background())
}

func (i GetSnapshotPermissionsToCreateVolumeArgs) ToGetSnapshotPermissionsToCreateVolumeOutputWithContext(ctx context.Context) GetSnapshotPermissionsToCreateVolumeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSnapshotPermissionsToCreateVolumeOutput)
}

// GetSnapshotPermissionsToCreateVolumeArrayInput is an input type that accepts GetSnapshotPermissionsToCreateVolumeArray and GetSnapshotPermissionsToCreateVolumeArrayOutput values.
// You can construct a concrete instance of `GetSnapshotPermissionsToCreateVolumeArrayInput` via:
//
//	GetSnapshotPermissionsToCreateVolumeArray{ GetSnapshotPermissionsToCreateVolumeArgs{...} }
type GetSnapshotPermissionsToCreateVolumeArrayInput interface {
	pulumi.Input

	ToGetSnapshotPermissionsToCreateVolumeArrayOutput() GetSnapshotPermissionsToCreateVolumeArrayOutput
	ToGetSnapshotPermissionsToCreateVolumeArrayOutputWithContext(context.Context) GetSnapshotPermissionsToCreateVolumeArrayOutput
}

type GetSnapshotPermissionsToCreateVolumeArray []GetSnapshotPermissionsToCreateVolumeInput

func (GetSnapshotPermissionsToCreateVolumeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSnapshotPermissionsToCreateVolume)(nil)).Elem()
}

func (i GetSnapshotPermissionsToCreateVolumeArray) ToGetSnapshotPermissionsToCreateVolumeArrayOutput() GetSnapshotPermissionsToCreateVolumeArrayOutput {
	return i.ToGetSnapshotPermissionsToCreateVolumeArrayOutputWithContext(context.Background())
}

func (i GetSnapshotPermissionsToCreateVolumeArray) ToGetSnapshotPermissionsToCreateVolumeArrayOutputWithContext(ctx context.Context) GetSnapshotPermissionsToCreateVolumeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSnapshotPermissionsToCreateVolumeArrayOutput)
}

type GetSnapshotPermissionsToCreateVolumeOutput struct{ *pulumi.OutputState }

func (GetSnapshotPermissionsToCreateVolumeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSnapshotPermissionsToCreateVolume)(nil)).Elem()
}

func (o GetSnapshotPermissionsToCreateVolumeOutput) ToGetSnapshotPermissionsToCreateVolumeOutput() GetSnapshotPermissionsToCreateVolumeOutput {
	return o
}

func (o GetSnapshotPermissionsToCreateVolumeOutput) ToGetSnapshotPermissionsToCreateVolumeOutputWithContext(ctx context.Context) GetSnapshotPermissionsToCreateVolumeOutput {
	return o
}

// One or more account IDs that the permission is associated with.
func (o GetSnapshotPermissionsToCreateVolumeOutput) AccountIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSnapshotPermissionsToCreateVolume) []string { return v.AccountIds }).(pulumi.StringArrayOutput)
}

// A global permission for all accounts.<br />
// (Request) Set this parameter to true to make the resource public (if the parent parameter is `Additions`) or to make the resource private (if the parent parameter is `Removals`).<br />
// (Response) If true, the resource is public. If false, the resource is private.
func (o GetSnapshotPermissionsToCreateVolumeOutput) GlobalPermission() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSnapshotPermissionsToCreateVolume) bool { return v.GlobalPermission }).(pulumi.BoolOutput)
}

type GetSnapshotPermissionsToCreateVolumeArrayOutput struct{ *pulumi.OutputState }

func (GetSnapshotPermissionsToCreateVolumeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSnapshotPermissionsToCreateVolume)(nil)).Elem()
}

func (o GetSnapshotPermissionsToCreateVolumeArrayOutput) ToGetSnapshotPermissionsToCreateVolumeArrayOutput() GetSnapshotPermissionsToCreateVolumeArrayOutput {
	return o
}

func (o GetSnapshotPermissionsToCreateVolumeArrayOutput) ToGetSnapshotPermissionsToCreateVolumeArrayOutputWithContext(ctx context.Context) GetSnapshotPermissionsToCreateVolumeArrayOutput {
	return o
}

func (o GetSnapshotPermissionsToCreateVolumeArrayOutput) Index(i pulumi.IntInput) GetSnapshotPermissionsToCreateVolumeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSnapshotPermissionsToCreateVolume {
		return vs[0].([]GetSnapshotPermissionsToCreateVolume)[vs[1].(int)]
	}).(GetSnapshotPermissionsToCreateVolumeOutput)
}

type GetSnapshotTag struct {
	// The key of the tag, with a minimum of 1 character.
	Key string `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value string `pulumi:"value"`
}

// GetSnapshotTagInput is an input type that accepts GetSnapshotTagArgs and GetSnapshotTagOutput values.
// You can construct a concrete instance of `GetSnapshotTagInput` via:
//
//	GetSnapshotTagArgs{...}
type GetSnapshotTagInput interface {
	pulumi.Input

	ToGetSnapshotTagOutput() GetSnapshotTagOutput
	ToGetSnapshotTagOutputWithContext(context.Context) GetSnapshotTagOutput
}

type GetSnapshotTagArgs struct {
	// The key of the tag, with a minimum of 1 character.
	Key pulumi.StringInput `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetSnapshotTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSnapshotTag)(nil)).Elem()
}

func (i GetSnapshotTagArgs) ToGetSnapshotTagOutput() GetSnapshotTagOutput {
	return i.ToGetSnapshotTagOutputWithContext(context.Background())
}

func (i GetSnapshotTagArgs) ToGetSnapshotTagOutputWithContext(ctx context.Context) GetSnapshotTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSnapshotTagOutput)
}

// GetSnapshotTagArrayInput is an input type that accepts GetSnapshotTagArray and GetSnapshotTagArrayOutput values.
// You can construct a concrete instance of `GetSnapshotTagArrayInput` via:
//
//	GetSnapshotTagArray{ GetSnapshotTagArgs{...} }
type GetSnapshotTagArrayInput interface {
	pulumi.Input

	ToGetSnapshotTagArrayOutput() GetSnapshotTagArrayOutput
	ToGetSnapshotTagArrayOutputWithContext(context.Context) GetSnapshotTagArrayOutput
}

type GetSnapshotTagArray []GetSnapshotTagInput

func (GetSnapshotTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSnapshotTag)(nil)).Elem()
}

func (i GetSnapshotTagArray) ToGetSnapshotTagArrayOutput() GetSnapshotTagArrayOutput {
	return i.ToGetSnapshotTagArrayOutputWithContext(context.Background())
}

func (i GetSnapshotTagArray) ToGetSnapshotTagArrayOutputWithContext(ctx context.Context) GetSnapshotTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSnapshotTagArrayOutput)
}

type GetSnapshotTagOutput struct{ *pulumi.OutputState }

func (GetSnapshotTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSnapshotTag)(nil)).Elem()
}

func (o GetSnapshotTagOutput) ToGetSnapshotTagOutput() GetSnapshotTagOutput {
	return o
}

func (o GetSnapshotTagOutput) ToGetSnapshotTagOutputWithContext(ctx context.Context) GetSnapshotTagOutput {
	return o
}

// The key of the tag, with a minimum of 1 character.
func (o GetSnapshotTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetSnapshotTag) string { return v.Key }).(pulumi.StringOutput)
}

// The value of the tag, between 0 and 255 characters.
func (o GetSnapshotTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetSnapshotTag) string { return v.Value }).(pulumi.StringOutput)
}

type GetSnapshotTagArrayOutput struct{ *pulumi.OutputState }

func (GetSnapshotTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSnapshotTag)(nil)).Elem()
}

func (o GetSnapshotTagArrayOutput) ToGetSnapshotTagArrayOutput() GetSnapshotTagArrayOutput {
	return o
}

func (o GetSnapshotTagArrayOutput) ToGetSnapshotTagArrayOutputWithContext(ctx context.Context) GetSnapshotTagArrayOutput {
	return o
}

func (o GetSnapshotTagArrayOutput) Index(i pulumi.IntInput) GetSnapshotTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSnapshotTag {
		return vs[0].([]GetSnapshotTag)[vs[1].(int)]
	}).(GetSnapshotTagOutput)
}

type GetSnapshotsFilter struct {
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// GetSnapshotsFilterInput is an input type that accepts GetSnapshotsFilterArgs and GetSnapshotsFilterOutput values.
// You can construct a concrete instance of `GetSnapshotsFilterInput` via:
//
//	GetSnapshotsFilterArgs{...}
type GetSnapshotsFilterInput interface {
	pulumi.Input

	ToGetSnapshotsFilterOutput() GetSnapshotsFilterOutput
	ToGetSnapshotsFilterOutputWithContext(context.Context) GetSnapshotsFilterOutput
}

type GetSnapshotsFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetSnapshotsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSnapshotsFilter)(nil)).Elem()
}

func (i GetSnapshotsFilterArgs) ToGetSnapshotsFilterOutput() GetSnapshotsFilterOutput {
	return i.ToGetSnapshotsFilterOutputWithContext(context.Background())
}

func (i GetSnapshotsFilterArgs) ToGetSnapshotsFilterOutputWithContext(ctx context.Context) GetSnapshotsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSnapshotsFilterOutput)
}

// GetSnapshotsFilterArrayInput is an input type that accepts GetSnapshotsFilterArray and GetSnapshotsFilterArrayOutput values.
// You can construct a concrete instance of `GetSnapshotsFilterArrayInput` via:
//
//	GetSnapshotsFilterArray{ GetSnapshotsFilterArgs{...} }
type GetSnapshotsFilterArrayInput interface {
	pulumi.Input

	ToGetSnapshotsFilterArrayOutput() GetSnapshotsFilterArrayOutput
	ToGetSnapshotsFilterArrayOutputWithContext(context.Context) GetSnapshotsFilterArrayOutput
}

type GetSnapshotsFilterArray []GetSnapshotsFilterInput

func (GetSnapshotsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSnapshotsFilter)(nil)).Elem()
}

func (i GetSnapshotsFilterArray) ToGetSnapshotsFilterArrayOutput() GetSnapshotsFilterArrayOutput {
	return i.ToGetSnapshotsFilterArrayOutputWithContext(context.Background())
}

func (i GetSnapshotsFilterArray) ToGetSnapshotsFilterArrayOutputWithContext(ctx context.Context) GetSnapshotsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSnapshotsFilterArrayOutput)
}

type GetSnapshotsFilterOutput struct{ *pulumi.OutputState }

func (GetSnapshotsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSnapshotsFilter)(nil)).Elem()
}

func (o GetSnapshotsFilterOutput) ToGetSnapshotsFilterOutput() GetSnapshotsFilterOutput {
	return o
}

func (o GetSnapshotsFilterOutput) ToGetSnapshotsFilterOutputWithContext(ctx context.Context) GetSnapshotsFilterOutput {
	return o
}

func (o GetSnapshotsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSnapshotsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetSnapshotsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSnapshotsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetSnapshotsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetSnapshotsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSnapshotsFilter)(nil)).Elem()
}

func (o GetSnapshotsFilterArrayOutput) ToGetSnapshotsFilterArrayOutput() GetSnapshotsFilterArrayOutput {
	return o
}

func (o GetSnapshotsFilterArrayOutput) ToGetSnapshotsFilterArrayOutputWithContext(ctx context.Context) GetSnapshotsFilterArrayOutput {
	return o
}

func (o GetSnapshotsFilterArrayOutput) Index(i pulumi.IntInput) GetSnapshotsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSnapshotsFilter {
		return vs[0].([]GetSnapshotsFilter)[vs[1].(int)]
	}).(GetSnapshotsFilterOutput)
}

type GetSnapshotsSnapshot struct {
	// The account alias of the owner of the snapshot.
	AccountAlias string `pulumi:"accountAlias"`
	// The account ID of the owner of the snapshot.
	AccountId string `pulumi:"accountId"`
	// The date and time (UTC) at which the snapshot was created.
	CreationDate string `pulumi:"creationDate"`
	// The description of the snapshot.
	Description string `pulumi:"description"`
	// Permissions for the resource.
	PermissionsToCreateVolumes []GetSnapshotsSnapshotPermissionsToCreateVolume `pulumi:"permissionsToCreateVolumes"`
	// The progress of the snapshot, as a percentage.
	Progress int `pulumi:"progress"`
	// The ID of the snapshot.
	SnapshotId string `pulumi:"snapshotId"`
	// The state of the snapshot (`in-queue` \| `pending` \| `completed` \| `error` \| `deleting`)).
	State string `pulumi:"state"`
	// One or more tags associated with the snapshot.
	Tags []GetSnapshotsSnapshotTag `pulumi:"tags"`
	// The ID of the volume used to create the snapshot.
	VolumeId string `pulumi:"volumeId"`
	// The size of the volume used to create the snapshot, in gibibytes (GiB).
	VolumeSize int `pulumi:"volumeSize"`
}

// GetSnapshotsSnapshotInput is an input type that accepts GetSnapshotsSnapshotArgs and GetSnapshotsSnapshotOutput values.
// You can construct a concrete instance of `GetSnapshotsSnapshotInput` via:
//
//	GetSnapshotsSnapshotArgs{...}
type GetSnapshotsSnapshotInput interface {
	pulumi.Input

	ToGetSnapshotsSnapshotOutput() GetSnapshotsSnapshotOutput
	ToGetSnapshotsSnapshotOutputWithContext(context.Context) GetSnapshotsSnapshotOutput
}

type GetSnapshotsSnapshotArgs struct {
	// The account alias of the owner of the snapshot.
	AccountAlias pulumi.StringInput `pulumi:"accountAlias"`
	// The account ID of the owner of the snapshot.
	AccountId pulumi.StringInput `pulumi:"accountId"`
	// The date and time (UTC) at which the snapshot was created.
	CreationDate pulumi.StringInput `pulumi:"creationDate"`
	// The description of the snapshot.
	Description pulumi.StringInput `pulumi:"description"`
	// Permissions for the resource.
	PermissionsToCreateVolumes GetSnapshotsSnapshotPermissionsToCreateVolumeArrayInput `pulumi:"permissionsToCreateVolumes"`
	// The progress of the snapshot, as a percentage.
	Progress pulumi.IntInput `pulumi:"progress"`
	// The ID of the snapshot.
	SnapshotId pulumi.StringInput `pulumi:"snapshotId"`
	// The state of the snapshot (`in-queue` \| `pending` \| `completed` \| `error` \| `deleting`)).
	State pulumi.StringInput `pulumi:"state"`
	// One or more tags associated with the snapshot.
	Tags GetSnapshotsSnapshotTagArrayInput `pulumi:"tags"`
	// The ID of the volume used to create the snapshot.
	VolumeId pulumi.StringInput `pulumi:"volumeId"`
	// The size of the volume used to create the snapshot, in gibibytes (GiB).
	VolumeSize pulumi.IntInput `pulumi:"volumeSize"`
}

func (GetSnapshotsSnapshotArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSnapshotsSnapshot)(nil)).Elem()
}

func (i GetSnapshotsSnapshotArgs) ToGetSnapshotsSnapshotOutput() GetSnapshotsSnapshotOutput {
	return i.ToGetSnapshotsSnapshotOutputWithContext(context.Background())
}

func (i GetSnapshotsSnapshotArgs) ToGetSnapshotsSnapshotOutputWithContext(ctx context.Context) GetSnapshotsSnapshotOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSnapshotsSnapshotOutput)
}

// GetSnapshotsSnapshotArrayInput is an input type that accepts GetSnapshotsSnapshotArray and GetSnapshotsSnapshotArrayOutput values.
// You can construct a concrete instance of `GetSnapshotsSnapshotArrayInput` via:
//
//	GetSnapshotsSnapshotArray{ GetSnapshotsSnapshotArgs{...} }
type GetSnapshotsSnapshotArrayInput interface {
	pulumi.Input

	ToGetSnapshotsSnapshotArrayOutput() GetSnapshotsSnapshotArrayOutput
	ToGetSnapshotsSnapshotArrayOutputWithContext(context.Context) GetSnapshotsSnapshotArrayOutput
}

type GetSnapshotsSnapshotArray []GetSnapshotsSnapshotInput

func (GetSnapshotsSnapshotArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSnapshotsSnapshot)(nil)).Elem()
}

func (i GetSnapshotsSnapshotArray) ToGetSnapshotsSnapshotArrayOutput() GetSnapshotsSnapshotArrayOutput {
	return i.ToGetSnapshotsSnapshotArrayOutputWithContext(context.Background())
}

func (i GetSnapshotsSnapshotArray) ToGetSnapshotsSnapshotArrayOutputWithContext(ctx context.Context) GetSnapshotsSnapshotArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSnapshotsSnapshotArrayOutput)
}

type GetSnapshotsSnapshotOutput struct{ *pulumi.OutputState }

func (GetSnapshotsSnapshotOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSnapshotsSnapshot)(nil)).Elem()
}

func (o GetSnapshotsSnapshotOutput) ToGetSnapshotsSnapshotOutput() GetSnapshotsSnapshotOutput {
	return o
}

func (o GetSnapshotsSnapshotOutput) ToGetSnapshotsSnapshotOutputWithContext(ctx context.Context) GetSnapshotsSnapshotOutput {
	return o
}

// The account alias of the owner of the snapshot.
func (o GetSnapshotsSnapshotOutput) AccountAlias() pulumi.StringOutput {
	return o.ApplyT(func(v GetSnapshotsSnapshot) string { return v.AccountAlias }).(pulumi.StringOutput)
}

// The account ID of the owner of the snapshot.
func (o GetSnapshotsSnapshotOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSnapshotsSnapshot) string { return v.AccountId }).(pulumi.StringOutput)
}

// The date and time (UTC) at which the snapshot was created.
func (o GetSnapshotsSnapshotOutput) CreationDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSnapshotsSnapshot) string { return v.CreationDate }).(pulumi.StringOutput)
}

// The description of the snapshot.
func (o GetSnapshotsSnapshotOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetSnapshotsSnapshot) string { return v.Description }).(pulumi.StringOutput)
}

// Permissions for the resource.
func (o GetSnapshotsSnapshotOutput) PermissionsToCreateVolumes() GetSnapshotsSnapshotPermissionsToCreateVolumeArrayOutput {
	return o.ApplyT(func(v GetSnapshotsSnapshot) []GetSnapshotsSnapshotPermissionsToCreateVolume {
		return v.PermissionsToCreateVolumes
	}).(GetSnapshotsSnapshotPermissionsToCreateVolumeArrayOutput)
}

// The progress of the snapshot, as a percentage.
func (o GetSnapshotsSnapshotOutput) Progress() pulumi.IntOutput {
	return o.ApplyT(func(v GetSnapshotsSnapshot) int { return v.Progress }).(pulumi.IntOutput)
}

// The ID of the snapshot.
func (o GetSnapshotsSnapshotOutput) SnapshotId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSnapshotsSnapshot) string { return v.SnapshotId }).(pulumi.StringOutput)
}

// The state of the snapshot (`in-queue` \| `pending` \| `completed` \| `error` \| `deleting`)).
func (o GetSnapshotsSnapshotOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetSnapshotsSnapshot) string { return v.State }).(pulumi.StringOutput)
}

// One or more tags associated with the snapshot.
func (o GetSnapshotsSnapshotOutput) Tags() GetSnapshotsSnapshotTagArrayOutput {
	return o.ApplyT(func(v GetSnapshotsSnapshot) []GetSnapshotsSnapshotTag { return v.Tags }).(GetSnapshotsSnapshotTagArrayOutput)
}

// The ID of the volume used to create the snapshot.
func (o GetSnapshotsSnapshotOutput) VolumeId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSnapshotsSnapshot) string { return v.VolumeId }).(pulumi.StringOutput)
}

// The size of the volume used to create the snapshot, in gibibytes (GiB).
func (o GetSnapshotsSnapshotOutput) VolumeSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetSnapshotsSnapshot) int { return v.VolumeSize }).(pulumi.IntOutput)
}

type GetSnapshotsSnapshotArrayOutput struct{ *pulumi.OutputState }

func (GetSnapshotsSnapshotArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSnapshotsSnapshot)(nil)).Elem()
}

func (o GetSnapshotsSnapshotArrayOutput) ToGetSnapshotsSnapshotArrayOutput() GetSnapshotsSnapshotArrayOutput {
	return o
}

func (o GetSnapshotsSnapshotArrayOutput) ToGetSnapshotsSnapshotArrayOutputWithContext(ctx context.Context) GetSnapshotsSnapshotArrayOutput {
	return o
}

func (o GetSnapshotsSnapshotArrayOutput) Index(i pulumi.IntInput) GetSnapshotsSnapshotOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSnapshotsSnapshot {
		return vs[0].([]GetSnapshotsSnapshot)[vs[1].(int)]
	}).(GetSnapshotsSnapshotOutput)
}

type GetSnapshotsSnapshotPermissionsToCreateVolume struct {
	// One or more account IDs that the permission is associated with.
	AccountIds []string `pulumi:"accountIds"`
	// A global permission for all accounts.<br />
	// (Request) Set this parameter to true to make the resource public (if the parent parameter is `Additions`) or to make the resource private (if the parent parameter is `Removals`).<br />
	// (Response) If true, the resource is public. If false, the resource is private.
	GlobalPermission bool `pulumi:"globalPermission"`
}

// GetSnapshotsSnapshotPermissionsToCreateVolumeInput is an input type that accepts GetSnapshotsSnapshotPermissionsToCreateVolumeArgs and GetSnapshotsSnapshotPermissionsToCreateVolumeOutput values.
// You can construct a concrete instance of `GetSnapshotsSnapshotPermissionsToCreateVolumeInput` via:
//
//	GetSnapshotsSnapshotPermissionsToCreateVolumeArgs{...}
type GetSnapshotsSnapshotPermissionsToCreateVolumeInput interface {
	pulumi.Input

	ToGetSnapshotsSnapshotPermissionsToCreateVolumeOutput() GetSnapshotsSnapshotPermissionsToCreateVolumeOutput
	ToGetSnapshotsSnapshotPermissionsToCreateVolumeOutputWithContext(context.Context) GetSnapshotsSnapshotPermissionsToCreateVolumeOutput
}

type GetSnapshotsSnapshotPermissionsToCreateVolumeArgs struct {
	// One or more account IDs that the permission is associated with.
	AccountIds pulumi.StringArrayInput `pulumi:"accountIds"`
	// A global permission for all accounts.<br />
	// (Request) Set this parameter to true to make the resource public (if the parent parameter is `Additions`) or to make the resource private (if the parent parameter is `Removals`).<br />
	// (Response) If true, the resource is public. If false, the resource is private.
	GlobalPermission pulumi.BoolInput `pulumi:"globalPermission"`
}

func (GetSnapshotsSnapshotPermissionsToCreateVolumeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSnapshotsSnapshotPermissionsToCreateVolume)(nil)).Elem()
}

func (i GetSnapshotsSnapshotPermissionsToCreateVolumeArgs) ToGetSnapshotsSnapshotPermissionsToCreateVolumeOutput() GetSnapshotsSnapshotPermissionsToCreateVolumeOutput {
	return i.ToGetSnapshotsSnapshotPermissionsToCreateVolumeOutputWithContext(context.Background())
}

func (i GetSnapshotsSnapshotPermissionsToCreateVolumeArgs) ToGetSnapshotsSnapshotPermissionsToCreateVolumeOutputWithContext(ctx context.Context) GetSnapshotsSnapshotPermissionsToCreateVolumeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSnapshotsSnapshotPermissionsToCreateVolumeOutput)
}

// GetSnapshotsSnapshotPermissionsToCreateVolumeArrayInput is an input type that accepts GetSnapshotsSnapshotPermissionsToCreateVolumeArray and GetSnapshotsSnapshotPermissionsToCreateVolumeArrayOutput values.
// You can construct a concrete instance of `GetSnapshotsSnapshotPermissionsToCreateVolumeArrayInput` via:
//
//	GetSnapshotsSnapshotPermissionsToCreateVolumeArray{ GetSnapshotsSnapshotPermissionsToCreateVolumeArgs{...} }
type GetSnapshotsSnapshotPermissionsToCreateVolumeArrayInput interface {
	pulumi.Input

	ToGetSnapshotsSnapshotPermissionsToCreateVolumeArrayOutput() GetSnapshotsSnapshotPermissionsToCreateVolumeArrayOutput
	ToGetSnapshotsSnapshotPermissionsToCreateVolumeArrayOutputWithContext(context.Context) GetSnapshotsSnapshotPermissionsToCreateVolumeArrayOutput
}

type GetSnapshotsSnapshotPermissionsToCreateVolumeArray []GetSnapshotsSnapshotPermissionsToCreateVolumeInput

func (GetSnapshotsSnapshotPermissionsToCreateVolumeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSnapshotsSnapshotPermissionsToCreateVolume)(nil)).Elem()
}

func (i GetSnapshotsSnapshotPermissionsToCreateVolumeArray) ToGetSnapshotsSnapshotPermissionsToCreateVolumeArrayOutput() GetSnapshotsSnapshotPermissionsToCreateVolumeArrayOutput {
	return i.ToGetSnapshotsSnapshotPermissionsToCreateVolumeArrayOutputWithContext(context.Background())
}

func (i GetSnapshotsSnapshotPermissionsToCreateVolumeArray) ToGetSnapshotsSnapshotPermissionsToCreateVolumeArrayOutputWithContext(ctx context.Context) GetSnapshotsSnapshotPermissionsToCreateVolumeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSnapshotsSnapshotPermissionsToCreateVolumeArrayOutput)
}

type GetSnapshotsSnapshotPermissionsToCreateVolumeOutput struct{ *pulumi.OutputState }

func (GetSnapshotsSnapshotPermissionsToCreateVolumeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSnapshotsSnapshotPermissionsToCreateVolume)(nil)).Elem()
}

func (o GetSnapshotsSnapshotPermissionsToCreateVolumeOutput) ToGetSnapshotsSnapshotPermissionsToCreateVolumeOutput() GetSnapshotsSnapshotPermissionsToCreateVolumeOutput {
	return o
}

func (o GetSnapshotsSnapshotPermissionsToCreateVolumeOutput) ToGetSnapshotsSnapshotPermissionsToCreateVolumeOutputWithContext(ctx context.Context) GetSnapshotsSnapshotPermissionsToCreateVolumeOutput {
	return o
}

// One or more account IDs that the permission is associated with.
func (o GetSnapshotsSnapshotPermissionsToCreateVolumeOutput) AccountIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSnapshotsSnapshotPermissionsToCreateVolume) []string { return v.AccountIds }).(pulumi.StringArrayOutput)
}

// A global permission for all accounts.<br />
// (Request) Set this parameter to true to make the resource public (if the parent parameter is `Additions`) or to make the resource private (if the parent parameter is `Removals`).<br />
// (Response) If true, the resource is public. If false, the resource is private.
func (o GetSnapshotsSnapshotPermissionsToCreateVolumeOutput) GlobalPermission() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSnapshotsSnapshotPermissionsToCreateVolume) bool { return v.GlobalPermission }).(pulumi.BoolOutput)
}

type GetSnapshotsSnapshotPermissionsToCreateVolumeArrayOutput struct{ *pulumi.OutputState }

func (GetSnapshotsSnapshotPermissionsToCreateVolumeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSnapshotsSnapshotPermissionsToCreateVolume)(nil)).Elem()
}

func (o GetSnapshotsSnapshotPermissionsToCreateVolumeArrayOutput) ToGetSnapshotsSnapshotPermissionsToCreateVolumeArrayOutput() GetSnapshotsSnapshotPermissionsToCreateVolumeArrayOutput {
	return o
}

func (o GetSnapshotsSnapshotPermissionsToCreateVolumeArrayOutput) ToGetSnapshotsSnapshotPermissionsToCreateVolumeArrayOutputWithContext(ctx context.Context) GetSnapshotsSnapshotPermissionsToCreateVolumeArrayOutput {
	return o
}

func (o GetSnapshotsSnapshotPermissionsToCreateVolumeArrayOutput) Index(i pulumi.IntInput) GetSnapshotsSnapshotPermissionsToCreateVolumeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSnapshotsSnapshotPermissionsToCreateVolume {
		return vs[0].([]GetSnapshotsSnapshotPermissionsToCreateVolume)[vs[1].(int)]
	}).(GetSnapshotsSnapshotPermissionsToCreateVolumeOutput)
}

type GetSnapshotsSnapshotTag struct {
	// The key of the tag, with a minimum of 1 character.
	Key string `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value string `pulumi:"value"`
}

// GetSnapshotsSnapshotTagInput is an input type that accepts GetSnapshotsSnapshotTagArgs and GetSnapshotsSnapshotTagOutput values.
// You can construct a concrete instance of `GetSnapshotsSnapshotTagInput` via:
//
//	GetSnapshotsSnapshotTagArgs{...}
type GetSnapshotsSnapshotTagInput interface {
	pulumi.Input

	ToGetSnapshotsSnapshotTagOutput() GetSnapshotsSnapshotTagOutput
	ToGetSnapshotsSnapshotTagOutputWithContext(context.Context) GetSnapshotsSnapshotTagOutput
}

type GetSnapshotsSnapshotTagArgs struct {
	// The key of the tag, with a minimum of 1 character.
	Key pulumi.StringInput `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetSnapshotsSnapshotTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSnapshotsSnapshotTag)(nil)).Elem()
}

func (i GetSnapshotsSnapshotTagArgs) ToGetSnapshotsSnapshotTagOutput() GetSnapshotsSnapshotTagOutput {
	return i.ToGetSnapshotsSnapshotTagOutputWithContext(context.Background())
}

func (i GetSnapshotsSnapshotTagArgs) ToGetSnapshotsSnapshotTagOutputWithContext(ctx context.Context) GetSnapshotsSnapshotTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSnapshotsSnapshotTagOutput)
}

// GetSnapshotsSnapshotTagArrayInput is an input type that accepts GetSnapshotsSnapshotTagArray and GetSnapshotsSnapshotTagArrayOutput values.
// You can construct a concrete instance of `GetSnapshotsSnapshotTagArrayInput` via:
//
//	GetSnapshotsSnapshotTagArray{ GetSnapshotsSnapshotTagArgs{...} }
type GetSnapshotsSnapshotTagArrayInput interface {
	pulumi.Input

	ToGetSnapshotsSnapshotTagArrayOutput() GetSnapshotsSnapshotTagArrayOutput
	ToGetSnapshotsSnapshotTagArrayOutputWithContext(context.Context) GetSnapshotsSnapshotTagArrayOutput
}

type GetSnapshotsSnapshotTagArray []GetSnapshotsSnapshotTagInput

func (GetSnapshotsSnapshotTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSnapshotsSnapshotTag)(nil)).Elem()
}

func (i GetSnapshotsSnapshotTagArray) ToGetSnapshotsSnapshotTagArrayOutput() GetSnapshotsSnapshotTagArrayOutput {
	return i.ToGetSnapshotsSnapshotTagArrayOutputWithContext(context.Background())
}

func (i GetSnapshotsSnapshotTagArray) ToGetSnapshotsSnapshotTagArrayOutputWithContext(ctx context.Context) GetSnapshotsSnapshotTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSnapshotsSnapshotTagArrayOutput)
}

type GetSnapshotsSnapshotTagOutput struct{ *pulumi.OutputState }

func (GetSnapshotsSnapshotTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSnapshotsSnapshotTag)(nil)).Elem()
}

func (o GetSnapshotsSnapshotTagOutput) ToGetSnapshotsSnapshotTagOutput() GetSnapshotsSnapshotTagOutput {
	return o
}

func (o GetSnapshotsSnapshotTagOutput) ToGetSnapshotsSnapshotTagOutputWithContext(ctx context.Context) GetSnapshotsSnapshotTagOutput {
	return o
}

// The key of the tag, with a minimum of 1 character.
func (o GetSnapshotsSnapshotTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetSnapshotsSnapshotTag) string { return v.Key }).(pulumi.StringOutput)
}

// The value of the tag, between 0 and 255 characters.
func (o GetSnapshotsSnapshotTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetSnapshotsSnapshotTag) string { return v.Value }).(pulumi.StringOutput)
}

type GetSnapshotsSnapshotTagArrayOutput struct{ *pulumi.OutputState }

func (GetSnapshotsSnapshotTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSnapshotsSnapshotTag)(nil)).Elem()
}

func (o GetSnapshotsSnapshotTagArrayOutput) ToGetSnapshotsSnapshotTagArrayOutput() GetSnapshotsSnapshotTagArrayOutput {
	return o
}

func (o GetSnapshotsSnapshotTagArrayOutput) ToGetSnapshotsSnapshotTagArrayOutputWithContext(ctx context.Context) GetSnapshotsSnapshotTagArrayOutput {
	return o
}

func (o GetSnapshotsSnapshotTagArrayOutput) Index(i pulumi.IntInput) GetSnapshotsSnapshotTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSnapshotsSnapshotTag {
		return vs[0].([]GetSnapshotsSnapshotTag)[vs[1].(int)]
	}).(GetSnapshotsSnapshotTagOutput)
}

type GetSubnetFilter struct {
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// GetSubnetFilterInput is an input type that accepts GetSubnetFilterArgs and GetSubnetFilterOutput values.
// You can construct a concrete instance of `GetSubnetFilterInput` via:
//
//	GetSubnetFilterArgs{...}
type GetSubnetFilterInput interface {
	pulumi.Input

	ToGetSubnetFilterOutput() GetSubnetFilterOutput
	ToGetSubnetFilterOutputWithContext(context.Context) GetSubnetFilterOutput
}

type GetSubnetFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetSubnetFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubnetFilter)(nil)).Elem()
}

func (i GetSubnetFilterArgs) ToGetSubnetFilterOutput() GetSubnetFilterOutput {
	return i.ToGetSubnetFilterOutputWithContext(context.Background())
}

func (i GetSubnetFilterArgs) ToGetSubnetFilterOutputWithContext(ctx context.Context) GetSubnetFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubnetFilterOutput)
}

// GetSubnetFilterArrayInput is an input type that accepts GetSubnetFilterArray and GetSubnetFilterArrayOutput values.
// You can construct a concrete instance of `GetSubnetFilterArrayInput` via:
//
//	GetSubnetFilterArray{ GetSubnetFilterArgs{...} }
type GetSubnetFilterArrayInput interface {
	pulumi.Input

	ToGetSubnetFilterArrayOutput() GetSubnetFilterArrayOutput
	ToGetSubnetFilterArrayOutputWithContext(context.Context) GetSubnetFilterArrayOutput
}

type GetSubnetFilterArray []GetSubnetFilterInput

func (GetSubnetFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSubnetFilter)(nil)).Elem()
}

func (i GetSubnetFilterArray) ToGetSubnetFilterArrayOutput() GetSubnetFilterArrayOutput {
	return i.ToGetSubnetFilterArrayOutputWithContext(context.Background())
}

func (i GetSubnetFilterArray) ToGetSubnetFilterArrayOutputWithContext(ctx context.Context) GetSubnetFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubnetFilterArrayOutput)
}

type GetSubnetFilterOutput struct{ *pulumi.OutputState }

func (GetSubnetFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubnetFilter)(nil)).Elem()
}

func (o GetSubnetFilterOutput) ToGetSubnetFilterOutput() GetSubnetFilterOutput {
	return o
}

func (o GetSubnetFilterOutput) ToGetSubnetFilterOutputWithContext(ctx context.Context) GetSubnetFilterOutput {
	return o
}

func (o GetSubnetFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubnetFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetSubnetFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSubnetFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetSubnetFilterArrayOutput struct{ *pulumi.OutputState }

func (GetSubnetFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSubnetFilter)(nil)).Elem()
}

func (o GetSubnetFilterArrayOutput) ToGetSubnetFilterArrayOutput() GetSubnetFilterArrayOutput {
	return o
}

func (o GetSubnetFilterArrayOutput) ToGetSubnetFilterArrayOutputWithContext(ctx context.Context) GetSubnetFilterArrayOutput {
	return o
}

func (o GetSubnetFilterArrayOutput) Index(i pulumi.IntInput) GetSubnetFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSubnetFilter {
		return vs[0].([]GetSubnetFilter)[vs[1].(int)]
	}).(GetSubnetFilterOutput)
}

type GetSubnetTag struct {
	// The key of the tag, with a minimum of 1 character.
	Key string `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value string `pulumi:"value"`
}

// GetSubnetTagInput is an input type that accepts GetSubnetTagArgs and GetSubnetTagOutput values.
// You can construct a concrete instance of `GetSubnetTagInput` via:
//
//	GetSubnetTagArgs{...}
type GetSubnetTagInput interface {
	pulumi.Input

	ToGetSubnetTagOutput() GetSubnetTagOutput
	ToGetSubnetTagOutputWithContext(context.Context) GetSubnetTagOutput
}

type GetSubnetTagArgs struct {
	// The key of the tag, with a minimum of 1 character.
	Key pulumi.StringInput `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetSubnetTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubnetTag)(nil)).Elem()
}

func (i GetSubnetTagArgs) ToGetSubnetTagOutput() GetSubnetTagOutput {
	return i.ToGetSubnetTagOutputWithContext(context.Background())
}

func (i GetSubnetTagArgs) ToGetSubnetTagOutputWithContext(ctx context.Context) GetSubnetTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubnetTagOutput)
}

// GetSubnetTagArrayInput is an input type that accepts GetSubnetTagArray and GetSubnetTagArrayOutput values.
// You can construct a concrete instance of `GetSubnetTagArrayInput` via:
//
//	GetSubnetTagArray{ GetSubnetTagArgs{...} }
type GetSubnetTagArrayInput interface {
	pulumi.Input

	ToGetSubnetTagArrayOutput() GetSubnetTagArrayOutput
	ToGetSubnetTagArrayOutputWithContext(context.Context) GetSubnetTagArrayOutput
}

type GetSubnetTagArray []GetSubnetTagInput

func (GetSubnetTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSubnetTag)(nil)).Elem()
}

func (i GetSubnetTagArray) ToGetSubnetTagArrayOutput() GetSubnetTagArrayOutput {
	return i.ToGetSubnetTagArrayOutputWithContext(context.Background())
}

func (i GetSubnetTagArray) ToGetSubnetTagArrayOutputWithContext(ctx context.Context) GetSubnetTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubnetTagArrayOutput)
}

type GetSubnetTagOutput struct{ *pulumi.OutputState }

func (GetSubnetTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubnetTag)(nil)).Elem()
}

func (o GetSubnetTagOutput) ToGetSubnetTagOutput() GetSubnetTagOutput {
	return o
}

func (o GetSubnetTagOutput) ToGetSubnetTagOutputWithContext(ctx context.Context) GetSubnetTagOutput {
	return o
}

// The key of the tag, with a minimum of 1 character.
func (o GetSubnetTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubnetTag) string { return v.Key }).(pulumi.StringOutput)
}

// The value of the tag, between 0 and 255 characters.
func (o GetSubnetTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubnetTag) string { return v.Value }).(pulumi.StringOutput)
}

type GetSubnetTagArrayOutput struct{ *pulumi.OutputState }

func (GetSubnetTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSubnetTag)(nil)).Elem()
}

func (o GetSubnetTagArrayOutput) ToGetSubnetTagArrayOutput() GetSubnetTagArrayOutput {
	return o
}

func (o GetSubnetTagArrayOutput) ToGetSubnetTagArrayOutputWithContext(ctx context.Context) GetSubnetTagArrayOutput {
	return o
}

func (o GetSubnetTagArrayOutput) Index(i pulumi.IntInput) GetSubnetTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSubnetTag {
		return vs[0].([]GetSubnetTag)[vs[1].(int)]
	}).(GetSubnetTagOutput)
}

type GetSubnetsFilter struct {
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// GetSubnetsFilterInput is an input type that accepts GetSubnetsFilterArgs and GetSubnetsFilterOutput values.
// You can construct a concrete instance of `GetSubnetsFilterInput` via:
//
//	GetSubnetsFilterArgs{...}
type GetSubnetsFilterInput interface {
	pulumi.Input

	ToGetSubnetsFilterOutput() GetSubnetsFilterOutput
	ToGetSubnetsFilterOutputWithContext(context.Context) GetSubnetsFilterOutput
}

type GetSubnetsFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetSubnetsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubnetsFilter)(nil)).Elem()
}

func (i GetSubnetsFilterArgs) ToGetSubnetsFilterOutput() GetSubnetsFilterOutput {
	return i.ToGetSubnetsFilterOutputWithContext(context.Background())
}

func (i GetSubnetsFilterArgs) ToGetSubnetsFilterOutputWithContext(ctx context.Context) GetSubnetsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubnetsFilterOutput)
}

// GetSubnetsFilterArrayInput is an input type that accepts GetSubnetsFilterArray and GetSubnetsFilterArrayOutput values.
// You can construct a concrete instance of `GetSubnetsFilterArrayInput` via:
//
//	GetSubnetsFilterArray{ GetSubnetsFilterArgs{...} }
type GetSubnetsFilterArrayInput interface {
	pulumi.Input

	ToGetSubnetsFilterArrayOutput() GetSubnetsFilterArrayOutput
	ToGetSubnetsFilterArrayOutputWithContext(context.Context) GetSubnetsFilterArrayOutput
}

type GetSubnetsFilterArray []GetSubnetsFilterInput

func (GetSubnetsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSubnetsFilter)(nil)).Elem()
}

func (i GetSubnetsFilterArray) ToGetSubnetsFilterArrayOutput() GetSubnetsFilterArrayOutput {
	return i.ToGetSubnetsFilterArrayOutputWithContext(context.Background())
}

func (i GetSubnetsFilterArray) ToGetSubnetsFilterArrayOutputWithContext(ctx context.Context) GetSubnetsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubnetsFilterArrayOutput)
}

type GetSubnetsFilterOutput struct{ *pulumi.OutputState }

func (GetSubnetsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubnetsFilter)(nil)).Elem()
}

func (o GetSubnetsFilterOutput) ToGetSubnetsFilterOutput() GetSubnetsFilterOutput {
	return o
}

func (o GetSubnetsFilterOutput) ToGetSubnetsFilterOutputWithContext(ctx context.Context) GetSubnetsFilterOutput {
	return o
}

func (o GetSubnetsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubnetsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetSubnetsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSubnetsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetSubnetsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetSubnetsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSubnetsFilter)(nil)).Elem()
}

func (o GetSubnetsFilterArrayOutput) ToGetSubnetsFilterArrayOutput() GetSubnetsFilterArrayOutput {
	return o
}

func (o GetSubnetsFilterArrayOutput) ToGetSubnetsFilterArrayOutputWithContext(ctx context.Context) GetSubnetsFilterArrayOutput {
	return o
}

func (o GetSubnetsFilterArrayOutput) Index(i pulumi.IntInput) GetSubnetsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSubnetsFilter {
		return vs[0].([]GetSubnetsFilter)[vs[1].(int)]
	}).(GetSubnetsFilterOutput)
}

type GetSubnetsSubnet struct {
	// The number of available IPs in the Subnets.
	AvailableIpsCount int `pulumi:"availableIpsCount"`
	// The IP range in the Subnet, in CIDR notation (for example, `10.0.0.0/16`).
	IpRange string `pulumi:"ipRange"`
	// If true, a public IP is assigned to the network interface cards (NICs) created in the specified Subnet.
	MapPublicIpOnLaunch bool `pulumi:"mapPublicIpOnLaunch"`
	// The ID of the Net in which the Subnet is.
	NetId string `pulumi:"netId"`
	// The state of the Subnet (`pending` \| `available` \| `deleted`).
	State string `pulumi:"state"`
	// The ID of the Subnet.
	SubnetId string `pulumi:"subnetId"`
	// The name of the Subregion in which the Subnet is located.
	SubregionName string `pulumi:"subregionName"`
	// One or more tags associated with the Subnet.
	Tags []GetSubnetsSubnetTag `pulumi:"tags"`
}

// GetSubnetsSubnetInput is an input type that accepts GetSubnetsSubnetArgs and GetSubnetsSubnetOutput values.
// You can construct a concrete instance of `GetSubnetsSubnetInput` via:
//
//	GetSubnetsSubnetArgs{...}
type GetSubnetsSubnetInput interface {
	pulumi.Input

	ToGetSubnetsSubnetOutput() GetSubnetsSubnetOutput
	ToGetSubnetsSubnetOutputWithContext(context.Context) GetSubnetsSubnetOutput
}

type GetSubnetsSubnetArgs struct {
	// The number of available IPs in the Subnets.
	AvailableIpsCount pulumi.IntInput `pulumi:"availableIpsCount"`
	// The IP range in the Subnet, in CIDR notation (for example, `10.0.0.0/16`).
	IpRange pulumi.StringInput `pulumi:"ipRange"`
	// If true, a public IP is assigned to the network interface cards (NICs) created in the specified Subnet.
	MapPublicIpOnLaunch pulumi.BoolInput `pulumi:"mapPublicIpOnLaunch"`
	// The ID of the Net in which the Subnet is.
	NetId pulumi.StringInput `pulumi:"netId"`
	// The state of the Subnet (`pending` \| `available` \| `deleted`).
	State pulumi.StringInput `pulumi:"state"`
	// The ID of the Subnet.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
	// The name of the Subregion in which the Subnet is located.
	SubregionName pulumi.StringInput `pulumi:"subregionName"`
	// One or more tags associated with the Subnet.
	Tags GetSubnetsSubnetTagArrayInput `pulumi:"tags"`
}

func (GetSubnetsSubnetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubnetsSubnet)(nil)).Elem()
}

func (i GetSubnetsSubnetArgs) ToGetSubnetsSubnetOutput() GetSubnetsSubnetOutput {
	return i.ToGetSubnetsSubnetOutputWithContext(context.Background())
}

func (i GetSubnetsSubnetArgs) ToGetSubnetsSubnetOutputWithContext(ctx context.Context) GetSubnetsSubnetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubnetsSubnetOutput)
}

// GetSubnetsSubnetArrayInput is an input type that accepts GetSubnetsSubnetArray and GetSubnetsSubnetArrayOutput values.
// You can construct a concrete instance of `GetSubnetsSubnetArrayInput` via:
//
//	GetSubnetsSubnetArray{ GetSubnetsSubnetArgs{...} }
type GetSubnetsSubnetArrayInput interface {
	pulumi.Input

	ToGetSubnetsSubnetArrayOutput() GetSubnetsSubnetArrayOutput
	ToGetSubnetsSubnetArrayOutputWithContext(context.Context) GetSubnetsSubnetArrayOutput
}

type GetSubnetsSubnetArray []GetSubnetsSubnetInput

func (GetSubnetsSubnetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSubnetsSubnet)(nil)).Elem()
}

func (i GetSubnetsSubnetArray) ToGetSubnetsSubnetArrayOutput() GetSubnetsSubnetArrayOutput {
	return i.ToGetSubnetsSubnetArrayOutputWithContext(context.Background())
}

func (i GetSubnetsSubnetArray) ToGetSubnetsSubnetArrayOutputWithContext(ctx context.Context) GetSubnetsSubnetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubnetsSubnetArrayOutput)
}

type GetSubnetsSubnetOutput struct{ *pulumi.OutputState }

func (GetSubnetsSubnetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubnetsSubnet)(nil)).Elem()
}

func (o GetSubnetsSubnetOutput) ToGetSubnetsSubnetOutput() GetSubnetsSubnetOutput {
	return o
}

func (o GetSubnetsSubnetOutput) ToGetSubnetsSubnetOutputWithContext(ctx context.Context) GetSubnetsSubnetOutput {
	return o
}

// The number of available IPs in the Subnets.
func (o GetSubnetsSubnetOutput) AvailableIpsCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetSubnetsSubnet) int { return v.AvailableIpsCount }).(pulumi.IntOutput)
}

// The IP range in the Subnet, in CIDR notation (for example, `10.0.0.0/16`).
func (o GetSubnetsSubnetOutput) IpRange() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubnetsSubnet) string { return v.IpRange }).(pulumi.StringOutput)
}

// If true, a public IP is assigned to the network interface cards (NICs) created in the specified Subnet.
func (o GetSubnetsSubnetOutput) MapPublicIpOnLaunch() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSubnetsSubnet) bool { return v.MapPublicIpOnLaunch }).(pulumi.BoolOutput)
}

// The ID of the Net in which the Subnet is.
func (o GetSubnetsSubnetOutput) NetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubnetsSubnet) string { return v.NetId }).(pulumi.StringOutput)
}

// The state of the Subnet (`pending` \| `available` \| `deleted`).
func (o GetSubnetsSubnetOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubnetsSubnet) string { return v.State }).(pulumi.StringOutput)
}

// The ID of the Subnet.
func (o GetSubnetsSubnetOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubnetsSubnet) string { return v.SubnetId }).(pulumi.StringOutput)
}

// The name of the Subregion in which the Subnet is located.
func (o GetSubnetsSubnetOutput) SubregionName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubnetsSubnet) string { return v.SubregionName }).(pulumi.StringOutput)
}

// One or more tags associated with the Subnet.
func (o GetSubnetsSubnetOutput) Tags() GetSubnetsSubnetTagArrayOutput {
	return o.ApplyT(func(v GetSubnetsSubnet) []GetSubnetsSubnetTag { return v.Tags }).(GetSubnetsSubnetTagArrayOutput)
}

type GetSubnetsSubnetArrayOutput struct{ *pulumi.OutputState }

func (GetSubnetsSubnetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSubnetsSubnet)(nil)).Elem()
}

func (o GetSubnetsSubnetArrayOutput) ToGetSubnetsSubnetArrayOutput() GetSubnetsSubnetArrayOutput {
	return o
}

func (o GetSubnetsSubnetArrayOutput) ToGetSubnetsSubnetArrayOutputWithContext(ctx context.Context) GetSubnetsSubnetArrayOutput {
	return o
}

func (o GetSubnetsSubnetArrayOutput) Index(i pulumi.IntInput) GetSubnetsSubnetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSubnetsSubnet {
		return vs[0].([]GetSubnetsSubnet)[vs[1].(int)]
	}).(GetSubnetsSubnetOutput)
}

type GetSubnetsSubnetTag struct {
	// The key of the tag, with a minimum of 1 character.
	Key string `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value string `pulumi:"value"`
}

// GetSubnetsSubnetTagInput is an input type that accepts GetSubnetsSubnetTagArgs and GetSubnetsSubnetTagOutput values.
// You can construct a concrete instance of `GetSubnetsSubnetTagInput` via:
//
//	GetSubnetsSubnetTagArgs{...}
type GetSubnetsSubnetTagInput interface {
	pulumi.Input

	ToGetSubnetsSubnetTagOutput() GetSubnetsSubnetTagOutput
	ToGetSubnetsSubnetTagOutputWithContext(context.Context) GetSubnetsSubnetTagOutput
}

type GetSubnetsSubnetTagArgs struct {
	// The key of the tag, with a minimum of 1 character.
	Key pulumi.StringInput `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetSubnetsSubnetTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubnetsSubnetTag)(nil)).Elem()
}

func (i GetSubnetsSubnetTagArgs) ToGetSubnetsSubnetTagOutput() GetSubnetsSubnetTagOutput {
	return i.ToGetSubnetsSubnetTagOutputWithContext(context.Background())
}

func (i GetSubnetsSubnetTagArgs) ToGetSubnetsSubnetTagOutputWithContext(ctx context.Context) GetSubnetsSubnetTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubnetsSubnetTagOutput)
}

// GetSubnetsSubnetTagArrayInput is an input type that accepts GetSubnetsSubnetTagArray and GetSubnetsSubnetTagArrayOutput values.
// You can construct a concrete instance of `GetSubnetsSubnetTagArrayInput` via:
//
//	GetSubnetsSubnetTagArray{ GetSubnetsSubnetTagArgs{...} }
type GetSubnetsSubnetTagArrayInput interface {
	pulumi.Input

	ToGetSubnetsSubnetTagArrayOutput() GetSubnetsSubnetTagArrayOutput
	ToGetSubnetsSubnetTagArrayOutputWithContext(context.Context) GetSubnetsSubnetTagArrayOutput
}

type GetSubnetsSubnetTagArray []GetSubnetsSubnetTagInput

func (GetSubnetsSubnetTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSubnetsSubnetTag)(nil)).Elem()
}

func (i GetSubnetsSubnetTagArray) ToGetSubnetsSubnetTagArrayOutput() GetSubnetsSubnetTagArrayOutput {
	return i.ToGetSubnetsSubnetTagArrayOutputWithContext(context.Background())
}

func (i GetSubnetsSubnetTagArray) ToGetSubnetsSubnetTagArrayOutputWithContext(ctx context.Context) GetSubnetsSubnetTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubnetsSubnetTagArrayOutput)
}

type GetSubnetsSubnetTagOutput struct{ *pulumi.OutputState }

func (GetSubnetsSubnetTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubnetsSubnetTag)(nil)).Elem()
}

func (o GetSubnetsSubnetTagOutput) ToGetSubnetsSubnetTagOutput() GetSubnetsSubnetTagOutput {
	return o
}

func (o GetSubnetsSubnetTagOutput) ToGetSubnetsSubnetTagOutputWithContext(ctx context.Context) GetSubnetsSubnetTagOutput {
	return o
}

// The key of the tag, with a minimum of 1 character.
func (o GetSubnetsSubnetTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubnetsSubnetTag) string { return v.Key }).(pulumi.StringOutput)
}

// The value of the tag, between 0 and 255 characters.
func (o GetSubnetsSubnetTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubnetsSubnetTag) string { return v.Value }).(pulumi.StringOutput)
}

type GetSubnetsSubnetTagArrayOutput struct{ *pulumi.OutputState }

func (GetSubnetsSubnetTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSubnetsSubnetTag)(nil)).Elem()
}

func (o GetSubnetsSubnetTagArrayOutput) ToGetSubnetsSubnetTagArrayOutput() GetSubnetsSubnetTagArrayOutput {
	return o
}

func (o GetSubnetsSubnetTagArrayOutput) ToGetSubnetsSubnetTagArrayOutputWithContext(ctx context.Context) GetSubnetsSubnetTagArrayOutput {
	return o
}

func (o GetSubnetsSubnetTagArrayOutput) Index(i pulumi.IntInput) GetSubnetsSubnetTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSubnetsSubnetTag {
		return vs[0].([]GetSubnetsSubnetTag)[vs[1].(int)]
	}).(GetSubnetsSubnetTagOutput)
}

type GetSubregionsFilter struct {
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// GetSubregionsFilterInput is an input type that accepts GetSubregionsFilterArgs and GetSubregionsFilterOutput values.
// You can construct a concrete instance of `GetSubregionsFilterInput` via:
//
//	GetSubregionsFilterArgs{...}
type GetSubregionsFilterInput interface {
	pulumi.Input

	ToGetSubregionsFilterOutput() GetSubregionsFilterOutput
	ToGetSubregionsFilterOutputWithContext(context.Context) GetSubregionsFilterOutput
}

type GetSubregionsFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetSubregionsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubregionsFilter)(nil)).Elem()
}

func (i GetSubregionsFilterArgs) ToGetSubregionsFilterOutput() GetSubregionsFilterOutput {
	return i.ToGetSubregionsFilterOutputWithContext(context.Background())
}

func (i GetSubregionsFilterArgs) ToGetSubregionsFilterOutputWithContext(ctx context.Context) GetSubregionsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubregionsFilterOutput)
}

// GetSubregionsFilterArrayInput is an input type that accepts GetSubregionsFilterArray and GetSubregionsFilterArrayOutput values.
// You can construct a concrete instance of `GetSubregionsFilterArrayInput` via:
//
//	GetSubregionsFilterArray{ GetSubregionsFilterArgs{...} }
type GetSubregionsFilterArrayInput interface {
	pulumi.Input

	ToGetSubregionsFilterArrayOutput() GetSubregionsFilterArrayOutput
	ToGetSubregionsFilterArrayOutputWithContext(context.Context) GetSubregionsFilterArrayOutput
}

type GetSubregionsFilterArray []GetSubregionsFilterInput

func (GetSubregionsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSubregionsFilter)(nil)).Elem()
}

func (i GetSubregionsFilterArray) ToGetSubregionsFilterArrayOutput() GetSubregionsFilterArrayOutput {
	return i.ToGetSubregionsFilterArrayOutputWithContext(context.Background())
}

func (i GetSubregionsFilterArray) ToGetSubregionsFilterArrayOutputWithContext(ctx context.Context) GetSubregionsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubregionsFilterArrayOutput)
}

type GetSubregionsFilterOutput struct{ *pulumi.OutputState }

func (GetSubregionsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubregionsFilter)(nil)).Elem()
}

func (o GetSubregionsFilterOutput) ToGetSubregionsFilterOutput() GetSubregionsFilterOutput {
	return o
}

func (o GetSubregionsFilterOutput) ToGetSubregionsFilterOutputWithContext(ctx context.Context) GetSubregionsFilterOutput {
	return o
}

func (o GetSubregionsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubregionsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetSubregionsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSubregionsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetSubregionsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetSubregionsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSubregionsFilter)(nil)).Elem()
}

func (o GetSubregionsFilterArrayOutput) ToGetSubregionsFilterArrayOutput() GetSubregionsFilterArrayOutput {
	return o
}

func (o GetSubregionsFilterArrayOutput) ToGetSubregionsFilterArrayOutputWithContext(ctx context.Context) GetSubregionsFilterArrayOutput {
	return o
}

func (o GetSubregionsFilterArrayOutput) Index(i pulumi.IntInput) GetSubregionsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSubregionsFilter {
		return vs[0].([]GetSubregionsFilter)[vs[1].(int)]
	}).(GetSubregionsFilterOutput)
}

type GetSubregionsSubregion struct {
	// The location code (physical zone) of the Subregion. For more information, see [About Regions > Mapping Between Subregions and Physical Zones](https://docs.outscale.com/en/userguide/About-Regions-and-Subregions.html#_mapping_between_subregions_and_physical_zones).
	LocationCode string `pulumi:"locationCode"`
	// The name of the Region containing the Subregion.
	RegionName string `pulumi:"regionName"`
	// The state of the Subregion.
	State string `pulumi:"state"`
	// The name of the Subregion.
	SubregionName string `pulumi:"subregionName"`
}

// GetSubregionsSubregionInput is an input type that accepts GetSubregionsSubregionArgs and GetSubregionsSubregionOutput values.
// You can construct a concrete instance of `GetSubregionsSubregionInput` via:
//
//	GetSubregionsSubregionArgs{...}
type GetSubregionsSubregionInput interface {
	pulumi.Input

	ToGetSubregionsSubregionOutput() GetSubregionsSubregionOutput
	ToGetSubregionsSubregionOutputWithContext(context.Context) GetSubregionsSubregionOutput
}

type GetSubregionsSubregionArgs struct {
	// The location code (physical zone) of the Subregion. For more information, see [About Regions > Mapping Between Subregions and Physical Zones](https://docs.outscale.com/en/userguide/About-Regions-and-Subregions.html#_mapping_between_subregions_and_physical_zones).
	LocationCode pulumi.StringInput `pulumi:"locationCode"`
	// The name of the Region containing the Subregion.
	RegionName pulumi.StringInput `pulumi:"regionName"`
	// The state of the Subregion.
	State pulumi.StringInput `pulumi:"state"`
	// The name of the Subregion.
	SubregionName pulumi.StringInput `pulumi:"subregionName"`
}

func (GetSubregionsSubregionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubregionsSubregion)(nil)).Elem()
}

func (i GetSubregionsSubregionArgs) ToGetSubregionsSubregionOutput() GetSubregionsSubregionOutput {
	return i.ToGetSubregionsSubregionOutputWithContext(context.Background())
}

func (i GetSubregionsSubregionArgs) ToGetSubregionsSubregionOutputWithContext(ctx context.Context) GetSubregionsSubregionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubregionsSubregionOutput)
}

// GetSubregionsSubregionArrayInput is an input type that accepts GetSubregionsSubregionArray and GetSubregionsSubregionArrayOutput values.
// You can construct a concrete instance of `GetSubregionsSubregionArrayInput` via:
//
//	GetSubregionsSubregionArray{ GetSubregionsSubregionArgs{...} }
type GetSubregionsSubregionArrayInput interface {
	pulumi.Input

	ToGetSubregionsSubregionArrayOutput() GetSubregionsSubregionArrayOutput
	ToGetSubregionsSubregionArrayOutputWithContext(context.Context) GetSubregionsSubregionArrayOutput
}

type GetSubregionsSubregionArray []GetSubregionsSubregionInput

func (GetSubregionsSubregionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSubregionsSubregion)(nil)).Elem()
}

func (i GetSubregionsSubregionArray) ToGetSubregionsSubregionArrayOutput() GetSubregionsSubregionArrayOutput {
	return i.ToGetSubregionsSubregionArrayOutputWithContext(context.Background())
}

func (i GetSubregionsSubregionArray) ToGetSubregionsSubregionArrayOutputWithContext(ctx context.Context) GetSubregionsSubregionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubregionsSubregionArrayOutput)
}

type GetSubregionsSubregionOutput struct{ *pulumi.OutputState }

func (GetSubregionsSubregionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubregionsSubregion)(nil)).Elem()
}

func (o GetSubregionsSubregionOutput) ToGetSubregionsSubregionOutput() GetSubregionsSubregionOutput {
	return o
}

func (o GetSubregionsSubregionOutput) ToGetSubregionsSubregionOutputWithContext(ctx context.Context) GetSubregionsSubregionOutput {
	return o
}

// The location code (physical zone) of the Subregion. For more information, see [About Regions > Mapping Between Subregions and Physical Zones](https://docs.outscale.com/en/userguide/About-Regions-and-Subregions.html#_mapping_between_subregions_and_physical_zones).
func (o GetSubregionsSubregionOutput) LocationCode() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubregionsSubregion) string { return v.LocationCode }).(pulumi.StringOutput)
}

// The name of the Region containing the Subregion.
func (o GetSubregionsSubregionOutput) RegionName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubregionsSubregion) string { return v.RegionName }).(pulumi.StringOutput)
}

// The state of the Subregion.
func (o GetSubregionsSubregionOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubregionsSubregion) string { return v.State }).(pulumi.StringOutput)
}

// The name of the Subregion.
func (o GetSubregionsSubregionOutput) SubregionName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubregionsSubregion) string { return v.SubregionName }).(pulumi.StringOutput)
}

type GetSubregionsSubregionArrayOutput struct{ *pulumi.OutputState }

func (GetSubregionsSubregionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSubregionsSubregion)(nil)).Elem()
}

func (o GetSubregionsSubregionArrayOutput) ToGetSubregionsSubregionArrayOutput() GetSubregionsSubregionArrayOutput {
	return o
}

func (o GetSubregionsSubregionArrayOutput) ToGetSubregionsSubregionArrayOutputWithContext(ctx context.Context) GetSubregionsSubregionArrayOutput {
	return o
}

func (o GetSubregionsSubregionArrayOutput) Index(i pulumi.IntInput) GetSubregionsSubregionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSubregionsSubregion {
		return vs[0].([]GetSubregionsSubregion)[vs[1].(int)]
	}).(GetSubregionsSubregionOutput)
}

type GetTagFilter struct {
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// GetTagFilterInput is an input type that accepts GetTagFilterArgs and GetTagFilterOutput values.
// You can construct a concrete instance of `GetTagFilterInput` via:
//
//	GetTagFilterArgs{...}
type GetTagFilterInput interface {
	pulumi.Input

	ToGetTagFilterOutput() GetTagFilterOutput
	ToGetTagFilterOutputWithContext(context.Context) GetTagFilterOutput
}

type GetTagFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetTagFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTagFilter)(nil)).Elem()
}

func (i GetTagFilterArgs) ToGetTagFilterOutput() GetTagFilterOutput {
	return i.ToGetTagFilterOutputWithContext(context.Background())
}

func (i GetTagFilterArgs) ToGetTagFilterOutputWithContext(ctx context.Context) GetTagFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTagFilterOutput)
}

// GetTagFilterArrayInput is an input type that accepts GetTagFilterArray and GetTagFilterArrayOutput values.
// You can construct a concrete instance of `GetTagFilterArrayInput` via:
//
//	GetTagFilterArray{ GetTagFilterArgs{...} }
type GetTagFilterArrayInput interface {
	pulumi.Input

	ToGetTagFilterArrayOutput() GetTagFilterArrayOutput
	ToGetTagFilterArrayOutputWithContext(context.Context) GetTagFilterArrayOutput
}

type GetTagFilterArray []GetTagFilterInput

func (GetTagFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTagFilter)(nil)).Elem()
}

func (i GetTagFilterArray) ToGetTagFilterArrayOutput() GetTagFilterArrayOutput {
	return i.ToGetTagFilterArrayOutputWithContext(context.Background())
}

func (i GetTagFilterArray) ToGetTagFilterArrayOutputWithContext(ctx context.Context) GetTagFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTagFilterArrayOutput)
}

type GetTagFilterOutput struct{ *pulumi.OutputState }

func (GetTagFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTagFilter)(nil)).Elem()
}

func (o GetTagFilterOutput) ToGetTagFilterOutput() GetTagFilterOutput {
	return o
}

func (o GetTagFilterOutput) ToGetTagFilterOutputWithContext(ctx context.Context) GetTagFilterOutput {
	return o
}

func (o GetTagFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetTagFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetTagFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetTagFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetTagFilterArrayOutput struct{ *pulumi.OutputState }

func (GetTagFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTagFilter)(nil)).Elem()
}

func (o GetTagFilterArrayOutput) ToGetTagFilterArrayOutput() GetTagFilterArrayOutput {
	return o
}

func (o GetTagFilterArrayOutput) ToGetTagFilterArrayOutputWithContext(ctx context.Context) GetTagFilterArrayOutput {
	return o
}

func (o GetTagFilterArrayOutput) Index(i pulumi.IntInput) GetTagFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTagFilter {
		return vs[0].([]GetTagFilter)[vs[1].(int)]
	}).(GetTagFilterOutput)
}

type GetTagsFilter struct {
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// GetTagsFilterInput is an input type that accepts GetTagsFilterArgs and GetTagsFilterOutput values.
// You can construct a concrete instance of `GetTagsFilterInput` via:
//
//	GetTagsFilterArgs{...}
type GetTagsFilterInput interface {
	pulumi.Input

	ToGetTagsFilterOutput() GetTagsFilterOutput
	ToGetTagsFilterOutputWithContext(context.Context) GetTagsFilterOutput
}

type GetTagsFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetTagsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTagsFilter)(nil)).Elem()
}

func (i GetTagsFilterArgs) ToGetTagsFilterOutput() GetTagsFilterOutput {
	return i.ToGetTagsFilterOutputWithContext(context.Background())
}

func (i GetTagsFilterArgs) ToGetTagsFilterOutputWithContext(ctx context.Context) GetTagsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTagsFilterOutput)
}

// GetTagsFilterArrayInput is an input type that accepts GetTagsFilterArray and GetTagsFilterArrayOutput values.
// You can construct a concrete instance of `GetTagsFilterArrayInput` via:
//
//	GetTagsFilterArray{ GetTagsFilterArgs{...} }
type GetTagsFilterArrayInput interface {
	pulumi.Input

	ToGetTagsFilterArrayOutput() GetTagsFilterArrayOutput
	ToGetTagsFilterArrayOutputWithContext(context.Context) GetTagsFilterArrayOutput
}

type GetTagsFilterArray []GetTagsFilterInput

func (GetTagsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTagsFilter)(nil)).Elem()
}

func (i GetTagsFilterArray) ToGetTagsFilterArrayOutput() GetTagsFilterArrayOutput {
	return i.ToGetTagsFilterArrayOutputWithContext(context.Background())
}

func (i GetTagsFilterArray) ToGetTagsFilterArrayOutputWithContext(ctx context.Context) GetTagsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTagsFilterArrayOutput)
}

type GetTagsFilterOutput struct{ *pulumi.OutputState }

func (GetTagsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTagsFilter)(nil)).Elem()
}

func (o GetTagsFilterOutput) ToGetTagsFilterOutput() GetTagsFilterOutput {
	return o
}

func (o GetTagsFilterOutput) ToGetTagsFilterOutputWithContext(ctx context.Context) GetTagsFilterOutput {
	return o
}

func (o GetTagsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetTagsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetTagsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetTagsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetTagsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetTagsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTagsFilter)(nil)).Elem()
}

func (o GetTagsFilterArrayOutput) ToGetTagsFilterArrayOutput() GetTagsFilterArrayOutput {
	return o
}

func (o GetTagsFilterArrayOutput) ToGetTagsFilterArrayOutputWithContext(ctx context.Context) GetTagsFilterArrayOutput {
	return o
}

func (o GetTagsFilterArrayOutput) Index(i pulumi.IntInput) GetTagsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTagsFilter {
		return vs[0].([]GetTagsFilter)[vs[1].(int)]
	}).(GetTagsFilterOutput)
}

type GetTagsTag struct {
	Key          string `pulumi:"key"`
	ResourceId   string `pulumi:"resourceId"`
	ResourceType string `pulumi:"resourceType"`
	Value        string `pulumi:"value"`
}

// GetTagsTagInput is an input type that accepts GetTagsTagArgs and GetTagsTagOutput values.
// You can construct a concrete instance of `GetTagsTagInput` via:
//
//	GetTagsTagArgs{...}
type GetTagsTagInput interface {
	pulumi.Input

	ToGetTagsTagOutput() GetTagsTagOutput
	ToGetTagsTagOutputWithContext(context.Context) GetTagsTagOutput
}

type GetTagsTagArgs struct {
	Key          pulumi.StringInput `pulumi:"key"`
	ResourceId   pulumi.StringInput `pulumi:"resourceId"`
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
	Value        pulumi.StringInput `pulumi:"value"`
}

func (GetTagsTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTagsTag)(nil)).Elem()
}

func (i GetTagsTagArgs) ToGetTagsTagOutput() GetTagsTagOutput {
	return i.ToGetTagsTagOutputWithContext(context.Background())
}

func (i GetTagsTagArgs) ToGetTagsTagOutputWithContext(ctx context.Context) GetTagsTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTagsTagOutput)
}

// GetTagsTagArrayInput is an input type that accepts GetTagsTagArray and GetTagsTagArrayOutput values.
// You can construct a concrete instance of `GetTagsTagArrayInput` via:
//
//	GetTagsTagArray{ GetTagsTagArgs{...} }
type GetTagsTagArrayInput interface {
	pulumi.Input

	ToGetTagsTagArrayOutput() GetTagsTagArrayOutput
	ToGetTagsTagArrayOutputWithContext(context.Context) GetTagsTagArrayOutput
}

type GetTagsTagArray []GetTagsTagInput

func (GetTagsTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTagsTag)(nil)).Elem()
}

func (i GetTagsTagArray) ToGetTagsTagArrayOutput() GetTagsTagArrayOutput {
	return i.ToGetTagsTagArrayOutputWithContext(context.Background())
}

func (i GetTagsTagArray) ToGetTagsTagArrayOutputWithContext(ctx context.Context) GetTagsTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTagsTagArrayOutput)
}

type GetTagsTagOutput struct{ *pulumi.OutputState }

func (GetTagsTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTagsTag)(nil)).Elem()
}

func (o GetTagsTagOutput) ToGetTagsTagOutput() GetTagsTagOutput {
	return o
}

func (o GetTagsTagOutput) ToGetTagsTagOutputWithContext(ctx context.Context) GetTagsTagOutput {
	return o
}

func (o GetTagsTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetTagsTag) string { return v.Key }).(pulumi.StringOutput)
}

func (o GetTagsTagOutput) ResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTagsTag) string { return v.ResourceId }).(pulumi.StringOutput)
}

func (o GetTagsTagOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetTagsTag) string { return v.ResourceType }).(pulumi.StringOutput)
}

func (o GetTagsTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetTagsTag) string { return v.Value }).(pulumi.StringOutput)
}

type GetTagsTagArrayOutput struct{ *pulumi.OutputState }

func (GetTagsTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTagsTag)(nil)).Elem()
}

func (o GetTagsTagArrayOutput) ToGetTagsTagArrayOutput() GetTagsTagArrayOutput {
	return o
}

func (o GetTagsTagArrayOutput) ToGetTagsTagArrayOutputWithContext(ctx context.Context) GetTagsTagArrayOutput {
	return o
}

func (o GetTagsTagArrayOutput) Index(i pulumi.IntInput) GetTagsTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTagsTag {
		return vs[0].([]GetTagsTag)[vs[1].(int)]
	}).(GetTagsTagOutput)
}

type GetUserFilter struct {
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// GetUserFilterInput is an input type that accepts GetUserFilterArgs and GetUserFilterOutput values.
// You can construct a concrete instance of `GetUserFilterInput` via:
//
//	GetUserFilterArgs{...}
type GetUserFilterInput interface {
	pulumi.Input

	ToGetUserFilterOutput() GetUserFilterOutput
	ToGetUserFilterOutputWithContext(context.Context) GetUserFilterOutput
}

type GetUserFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetUserFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserFilter)(nil)).Elem()
}

func (i GetUserFilterArgs) ToGetUserFilterOutput() GetUserFilterOutput {
	return i.ToGetUserFilterOutputWithContext(context.Background())
}

func (i GetUserFilterArgs) ToGetUserFilterOutputWithContext(ctx context.Context) GetUserFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserFilterOutput)
}

// GetUserFilterArrayInput is an input type that accepts GetUserFilterArray and GetUserFilterArrayOutput values.
// You can construct a concrete instance of `GetUserFilterArrayInput` via:
//
//	GetUserFilterArray{ GetUserFilterArgs{...} }
type GetUserFilterArrayInput interface {
	pulumi.Input

	ToGetUserFilterArrayOutput() GetUserFilterArrayOutput
	ToGetUserFilterArrayOutputWithContext(context.Context) GetUserFilterArrayOutput
}

type GetUserFilterArray []GetUserFilterInput

func (GetUserFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserFilter)(nil)).Elem()
}

func (i GetUserFilterArray) ToGetUserFilterArrayOutput() GetUserFilterArrayOutput {
	return i.ToGetUserFilterArrayOutputWithContext(context.Background())
}

func (i GetUserFilterArray) ToGetUserFilterArrayOutputWithContext(ctx context.Context) GetUserFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserFilterArrayOutput)
}

type GetUserFilterOutput struct{ *pulumi.OutputState }

func (GetUserFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserFilter)(nil)).Elem()
}

func (o GetUserFilterOutput) ToGetUserFilterOutput() GetUserFilterOutput {
	return o
}

func (o GetUserFilterOutput) ToGetUserFilterOutputWithContext(ctx context.Context) GetUserFilterOutput {
	return o
}

func (o GetUserFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetUserFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetUserFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetUserFilterArrayOutput struct{ *pulumi.OutputState }

func (GetUserFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserFilter)(nil)).Elem()
}

func (o GetUserFilterArrayOutput) ToGetUserFilterArrayOutput() GetUserFilterArrayOutput {
	return o
}

func (o GetUserFilterArrayOutput) ToGetUserFilterArrayOutputWithContext(ctx context.Context) GetUserFilterArrayOutput {
	return o
}

func (o GetUserFilterArrayOutput) Index(i pulumi.IntInput) GetUserFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetUserFilter {
		return vs[0].([]GetUserFilter)[vs[1].(int)]
	}).(GetUserFilterOutput)
}

type GetUserGroupUser struct {
	// The date and time (UTC) of creation of the EIM user.
	CreationDate string `pulumi:"creationDate"`
	// The date and time (UTC) of the last modification of the EIM user.
	LastModificationDate string `pulumi:"lastModificationDate"`
	// The path to the group. If not specified, it is set to a slash (`/`).
	Path string `pulumi:"path"`
	// The email address of the EIM user.
	UserEmail string `pulumi:"userEmail"`
	// The ID of the EIM user.
	UserId string `pulumi:"userId"`
	// The name of the EIM user.
	UserName string `pulumi:"userName"`
}

// GetUserGroupUserInput is an input type that accepts GetUserGroupUserArgs and GetUserGroupUserOutput values.
// You can construct a concrete instance of `GetUserGroupUserInput` via:
//
//	GetUserGroupUserArgs{...}
type GetUserGroupUserInput interface {
	pulumi.Input

	ToGetUserGroupUserOutput() GetUserGroupUserOutput
	ToGetUserGroupUserOutputWithContext(context.Context) GetUserGroupUserOutput
}

type GetUserGroupUserArgs struct {
	// The date and time (UTC) of creation of the EIM user.
	CreationDate pulumi.StringInput `pulumi:"creationDate"`
	// The date and time (UTC) of the last modification of the EIM user.
	LastModificationDate pulumi.StringInput `pulumi:"lastModificationDate"`
	// The path to the group. If not specified, it is set to a slash (`/`).
	Path pulumi.StringInput `pulumi:"path"`
	// The email address of the EIM user.
	UserEmail pulumi.StringInput `pulumi:"userEmail"`
	// The ID of the EIM user.
	UserId pulumi.StringInput `pulumi:"userId"`
	// The name of the EIM user.
	UserName pulumi.StringInput `pulumi:"userName"`
}

func (GetUserGroupUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserGroupUser)(nil)).Elem()
}

func (i GetUserGroupUserArgs) ToGetUserGroupUserOutput() GetUserGroupUserOutput {
	return i.ToGetUserGroupUserOutputWithContext(context.Background())
}

func (i GetUserGroupUserArgs) ToGetUserGroupUserOutputWithContext(ctx context.Context) GetUserGroupUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserGroupUserOutput)
}

// GetUserGroupUserArrayInput is an input type that accepts GetUserGroupUserArray and GetUserGroupUserArrayOutput values.
// You can construct a concrete instance of `GetUserGroupUserArrayInput` via:
//
//	GetUserGroupUserArray{ GetUserGroupUserArgs{...} }
type GetUserGroupUserArrayInput interface {
	pulumi.Input

	ToGetUserGroupUserArrayOutput() GetUserGroupUserArrayOutput
	ToGetUserGroupUserArrayOutputWithContext(context.Context) GetUserGroupUserArrayOutput
}

type GetUserGroupUserArray []GetUserGroupUserInput

func (GetUserGroupUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserGroupUser)(nil)).Elem()
}

func (i GetUserGroupUserArray) ToGetUserGroupUserArrayOutput() GetUserGroupUserArrayOutput {
	return i.ToGetUserGroupUserArrayOutputWithContext(context.Background())
}

func (i GetUserGroupUserArray) ToGetUserGroupUserArrayOutputWithContext(ctx context.Context) GetUserGroupUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserGroupUserArrayOutput)
}

type GetUserGroupUserOutput struct{ *pulumi.OutputState }

func (GetUserGroupUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserGroupUser)(nil)).Elem()
}

func (o GetUserGroupUserOutput) ToGetUserGroupUserOutput() GetUserGroupUserOutput {
	return o
}

func (o GetUserGroupUserOutput) ToGetUserGroupUserOutputWithContext(ctx context.Context) GetUserGroupUserOutput {
	return o
}

// The date and time (UTC) of creation of the EIM user.
func (o GetUserGroupUserOutput) CreationDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserGroupUser) string { return v.CreationDate }).(pulumi.StringOutput)
}

// The date and time (UTC) of the last modification of the EIM user.
func (o GetUserGroupUserOutput) LastModificationDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserGroupUser) string { return v.LastModificationDate }).(pulumi.StringOutput)
}

// The path to the group. If not specified, it is set to a slash (`/`).
func (o GetUserGroupUserOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserGroupUser) string { return v.Path }).(pulumi.StringOutput)
}

// The email address of the EIM user.
func (o GetUserGroupUserOutput) UserEmail() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserGroupUser) string { return v.UserEmail }).(pulumi.StringOutput)
}

// The ID of the EIM user.
func (o GetUserGroupUserOutput) UserId() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserGroupUser) string { return v.UserId }).(pulumi.StringOutput)
}

// The name of the EIM user.
func (o GetUserGroupUserOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserGroupUser) string { return v.UserName }).(pulumi.StringOutput)
}

type GetUserGroupUserArrayOutput struct{ *pulumi.OutputState }

func (GetUserGroupUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserGroupUser)(nil)).Elem()
}

func (o GetUserGroupUserArrayOutput) ToGetUserGroupUserArrayOutput() GetUserGroupUserArrayOutput {
	return o
}

func (o GetUserGroupUserArrayOutput) ToGetUserGroupUserArrayOutputWithContext(ctx context.Context) GetUserGroupUserArrayOutput {
	return o
}

func (o GetUserGroupUserArrayOutput) Index(i pulumi.IntInput) GetUserGroupUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetUserGroupUser {
		return vs[0].([]GetUserGroupUser)[vs[1].(int)]
	}).(GetUserGroupUserOutput)
}

type GetUserGroupsFilter struct {
	// The name of the user group.
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// GetUserGroupsFilterInput is an input type that accepts GetUserGroupsFilterArgs and GetUserGroupsFilterOutput values.
// You can construct a concrete instance of `GetUserGroupsFilterInput` via:
//
//	GetUserGroupsFilterArgs{...}
type GetUserGroupsFilterInput interface {
	pulumi.Input

	ToGetUserGroupsFilterOutput() GetUserGroupsFilterOutput
	ToGetUserGroupsFilterOutputWithContext(context.Context) GetUserGroupsFilterOutput
}

type GetUserGroupsFilterArgs struct {
	// The name of the user group.
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetUserGroupsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserGroupsFilter)(nil)).Elem()
}

func (i GetUserGroupsFilterArgs) ToGetUserGroupsFilterOutput() GetUserGroupsFilterOutput {
	return i.ToGetUserGroupsFilterOutputWithContext(context.Background())
}

func (i GetUserGroupsFilterArgs) ToGetUserGroupsFilterOutputWithContext(ctx context.Context) GetUserGroupsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserGroupsFilterOutput)
}

// GetUserGroupsFilterArrayInput is an input type that accepts GetUserGroupsFilterArray and GetUserGroupsFilterArrayOutput values.
// You can construct a concrete instance of `GetUserGroupsFilterArrayInput` via:
//
//	GetUserGroupsFilterArray{ GetUserGroupsFilterArgs{...} }
type GetUserGroupsFilterArrayInput interface {
	pulumi.Input

	ToGetUserGroupsFilterArrayOutput() GetUserGroupsFilterArrayOutput
	ToGetUserGroupsFilterArrayOutputWithContext(context.Context) GetUserGroupsFilterArrayOutput
}

type GetUserGroupsFilterArray []GetUserGroupsFilterInput

func (GetUserGroupsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserGroupsFilter)(nil)).Elem()
}

func (i GetUserGroupsFilterArray) ToGetUserGroupsFilterArrayOutput() GetUserGroupsFilterArrayOutput {
	return i.ToGetUserGroupsFilterArrayOutputWithContext(context.Background())
}

func (i GetUserGroupsFilterArray) ToGetUserGroupsFilterArrayOutputWithContext(ctx context.Context) GetUserGroupsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserGroupsFilterArrayOutput)
}

type GetUserGroupsFilterOutput struct{ *pulumi.OutputState }

func (GetUserGroupsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserGroupsFilter)(nil)).Elem()
}

func (o GetUserGroupsFilterOutput) ToGetUserGroupsFilterOutput() GetUserGroupsFilterOutput {
	return o
}

func (o GetUserGroupsFilterOutput) ToGetUserGroupsFilterOutputWithContext(ctx context.Context) GetUserGroupsFilterOutput {
	return o
}

// The name of the user group.
func (o GetUserGroupsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserGroupsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetUserGroupsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetUserGroupsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetUserGroupsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetUserGroupsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserGroupsFilter)(nil)).Elem()
}

func (o GetUserGroupsFilterArrayOutput) ToGetUserGroupsFilterArrayOutput() GetUserGroupsFilterArrayOutput {
	return o
}

func (o GetUserGroupsFilterArrayOutput) ToGetUserGroupsFilterArrayOutputWithContext(ctx context.Context) GetUserGroupsFilterArrayOutput {
	return o
}

func (o GetUserGroupsFilterArrayOutput) Index(i pulumi.IntInput) GetUserGroupsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetUserGroupsFilter {
		return vs[0].([]GetUserGroupsFilter)[vs[1].(int)]
	}).(GetUserGroupsFilterOutput)
}

type GetUserGroupsPerUserUserGroup struct {
	// The date and time (UTC) of creation of the user group.
	CreationDate string `pulumi:"creationDate"`
	// The date and time (UTC) of the last modification of the user group.
	LastModificationDate string `pulumi:"lastModificationDate"`
	// The Outscale Resource Name (ORN) of the user group. For more information, see [Resource Identifiers](https://docs.outscale.com/en/userguide/Resource-Identifiers.html).
	Orn string `pulumi:"orn"`
	// The path to the user group.
	Path string `pulumi:"path"`
	// The ID of the user group.
	UserGroupId   string `pulumi:"userGroupId"`
	UserGroupName string `pulumi:"userGroupName"`
}

// GetUserGroupsPerUserUserGroupInput is an input type that accepts GetUserGroupsPerUserUserGroupArgs and GetUserGroupsPerUserUserGroupOutput values.
// You can construct a concrete instance of `GetUserGroupsPerUserUserGroupInput` via:
//
//	GetUserGroupsPerUserUserGroupArgs{...}
type GetUserGroupsPerUserUserGroupInput interface {
	pulumi.Input

	ToGetUserGroupsPerUserUserGroupOutput() GetUserGroupsPerUserUserGroupOutput
	ToGetUserGroupsPerUserUserGroupOutputWithContext(context.Context) GetUserGroupsPerUserUserGroupOutput
}

type GetUserGroupsPerUserUserGroupArgs struct {
	// The date and time (UTC) of creation of the user group.
	CreationDate pulumi.StringInput `pulumi:"creationDate"`
	// The date and time (UTC) of the last modification of the user group.
	LastModificationDate pulumi.StringInput `pulumi:"lastModificationDate"`
	// The Outscale Resource Name (ORN) of the user group. For more information, see [Resource Identifiers](https://docs.outscale.com/en/userguide/Resource-Identifiers.html).
	Orn pulumi.StringInput `pulumi:"orn"`
	// The path to the user group.
	Path pulumi.StringInput `pulumi:"path"`
	// The ID of the user group.
	UserGroupId   pulumi.StringInput `pulumi:"userGroupId"`
	UserGroupName pulumi.StringInput `pulumi:"userGroupName"`
}

func (GetUserGroupsPerUserUserGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserGroupsPerUserUserGroup)(nil)).Elem()
}

func (i GetUserGroupsPerUserUserGroupArgs) ToGetUserGroupsPerUserUserGroupOutput() GetUserGroupsPerUserUserGroupOutput {
	return i.ToGetUserGroupsPerUserUserGroupOutputWithContext(context.Background())
}

func (i GetUserGroupsPerUserUserGroupArgs) ToGetUserGroupsPerUserUserGroupOutputWithContext(ctx context.Context) GetUserGroupsPerUserUserGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserGroupsPerUserUserGroupOutput)
}

// GetUserGroupsPerUserUserGroupArrayInput is an input type that accepts GetUserGroupsPerUserUserGroupArray and GetUserGroupsPerUserUserGroupArrayOutput values.
// You can construct a concrete instance of `GetUserGroupsPerUserUserGroupArrayInput` via:
//
//	GetUserGroupsPerUserUserGroupArray{ GetUserGroupsPerUserUserGroupArgs{...} }
type GetUserGroupsPerUserUserGroupArrayInput interface {
	pulumi.Input

	ToGetUserGroupsPerUserUserGroupArrayOutput() GetUserGroupsPerUserUserGroupArrayOutput
	ToGetUserGroupsPerUserUserGroupArrayOutputWithContext(context.Context) GetUserGroupsPerUserUserGroupArrayOutput
}

type GetUserGroupsPerUserUserGroupArray []GetUserGroupsPerUserUserGroupInput

func (GetUserGroupsPerUserUserGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserGroupsPerUserUserGroup)(nil)).Elem()
}

func (i GetUserGroupsPerUserUserGroupArray) ToGetUserGroupsPerUserUserGroupArrayOutput() GetUserGroupsPerUserUserGroupArrayOutput {
	return i.ToGetUserGroupsPerUserUserGroupArrayOutputWithContext(context.Background())
}

func (i GetUserGroupsPerUserUserGroupArray) ToGetUserGroupsPerUserUserGroupArrayOutputWithContext(ctx context.Context) GetUserGroupsPerUserUserGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserGroupsPerUserUserGroupArrayOutput)
}

type GetUserGroupsPerUserUserGroupOutput struct{ *pulumi.OutputState }

func (GetUserGroupsPerUserUserGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserGroupsPerUserUserGroup)(nil)).Elem()
}

func (o GetUserGroupsPerUserUserGroupOutput) ToGetUserGroupsPerUserUserGroupOutput() GetUserGroupsPerUserUserGroupOutput {
	return o
}

func (o GetUserGroupsPerUserUserGroupOutput) ToGetUserGroupsPerUserUserGroupOutputWithContext(ctx context.Context) GetUserGroupsPerUserUserGroupOutput {
	return o
}

// The date and time (UTC) of creation of the user group.
func (o GetUserGroupsPerUserUserGroupOutput) CreationDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserGroupsPerUserUserGroup) string { return v.CreationDate }).(pulumi.StringOutput)
}

// The date and time (UTC) of the last modification of the user group.
func (o GetUserGroupsPerUserUserGroupOutput) LastModificationDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserGroupsPerUserUserGroup) string { return v.LastModificationDate }).(pulumi.StringOutput)
}

// The Outscale Resource Name (ORN) of the user group. For more information, see [Resource Identifiers](https://docs.outscale.com/en/userguide/Resource-Identifiers.html).
func (o GetUserGroupsPerUserUserGroupOutput) Orn() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserGroupsPerUserUserGroup) string { return v.Orn }).(pulumi.StringOutput)
}

// The path to the user group.
func (o GetUserGroupsPerUserUserGroupOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserGroupsPerUserUserGroup) string { return v.Path }).(pulumi.StringOutput)
}

// The ID of the user group.
func (o GetUserGroupsPerUserUserGroupOutput) UserGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserGroupsPerUserUserGroup) string { return v.UserGroupId }).(pulumi.StringOutput)
}

func (o GetUserGroupsPerUserUserGroupOutput) UserGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserGroupsPerUserUserGroup) string { return v.UserGroupName }).(pulumi.StringOutput)
}

type GetUserGroupsPerUserUserGroupArrayOutput struct{ *pulumi.OutputState }

func (GetUserGroupsPerUserUserGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserGroupsPerUserUserGroup)(nil)).Elem()
}

func (o GetUserGroupsPerUserUserGroupArrayOutput) ToGetUserGroupsPerUserUserGroupArrayOutput() GetUserGroupsPerUserUserGroupArrayOutput {
	return o
}

func (o GetUserGroupsPerUserUserGroupArrayOutput) ToGetUserGroupsPerUserUserGroupArrayOutputWithContext(ctx context.Context) GetUserGroupsPerUserUserGroupArrayOutput {
	return o
}

func (o GetUserGroupsPerUserUserGroupArrayOutput) Index(i pulumi.IntInput) GetUserGroupsPerUserUserGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetUserGroupsPerUserUserGroup {
		return vs[0].([]GetUserGroupsPerUserUserGroup)[vs[1].(int)]
	}).(GetUserGroupsPerUserUserGroupOutput)
}

type GetUserGroupsUserGroup struct {
	// The date and time (UTC) of creation of the user group.
	CreationDate string `pulumi:"creationDate"`
	// The date and time (UTC) of the last modification of the user group.
	LastModificationDate string `pulumi:"lastModificationDate"`
	// The Outscale Resource Name (ORN) of the user group. For more information, see [Resource Identifiers](https://docs.outscale.com/en/userguide/Resource-Identifiers.html).
	Orn string `pulumi:"orn"`
	// The path to the user group.
	Path string `pulumi:"path"`
	// The ID of the user group.
	UserGroupId   string `pulumi:"userGroupId"`
	UserGroupName string `pulumi:"userGroupName"`
}

// GetUserGroupsUserGroupInput is an input type that accepts GetUserGroupsUserGroupArgs and GetUserGroupsUserGroupOutput values.
// You can construct a concrete instance of `GetUserGroupsUserGroupInput` via:
//
//	GetUserGroupsUserGroupArgs{...}
type GetUserGroupsUserGroupInput interface {
	pulumi.Input

	ToGetUserGroupsUserGroupOutput() GetUserGroupsUserGroupOutput
	ToGetUserGroupsUserGroupOutputWithContext(context.Context) GetUserGroupsUserGroupOutput
}

type GetUserGroupsUserGroupArgs struct {
	// The date and time (UTC) of creation of the user group.
	CreationDate pulumi.StringInput `pulumi:"creationDate"`
	// The date and time (UTC) of the last modification of the user group.
	LastModificationDate pulumi.StringInput `pulumi:"lastModificationDate"`
	// The Outscale Resource Name (ORN) of the user group. For more information, see [Resource Identifiers](https://docs.outscale.com/en/userguide/Resource-Identifiers.html).
	Orn pulumi.StringInput `pulumi:"orn"`
	// The path to the user group.
	Path pulumi.StringInput `pulumi:"path"`
	// The ID of the user group.
	UserGroupId   pulumi.StringInput `pulumi:"userGroupId"`
	UserGroupName pulumi.StringInput `pulumi:"userGroupName"`
}

func (GetUserGroupsUserGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserGroupsUserGroup)(nil)).Elem()
}

func (i GetUserGroupsUserGroupArgs) ToGetUserGroupsUserGroupOutput() GetUserGroupsUserGroupOutput {
	return i.ToGetUserGroupsUserGroupOutputWithContext(context.Background())
}

func (i GetUserGroupsUserGroupArgs) ToGetUserGroupsUserGroupOutputWithContext(ctx context.Context) GetUserGroupsUserGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserGroupsUserGroupOutput)
}

// GetUserGroupsUserGroupArrayInput is an input type that accepts GetUserGroupsUserGroupArray and GetUserGroupsUserGroupArrayOutput values.
// You can construct a concrete instance of `GetUserGroupsUserGroupArrayInput` via:
//
//	GetUserGroupsUserGroupArray{ GetUserGroupsUserGroupArgs{...} }
type GetUserGroupsUserGroupArrayInput interface {
	pulumi.Input

	ToGetUserGroupsUserGroupArrayOutput() GetUserGroupsUserGroupArrayOutput
	ToGetUserGroupsUserGroupArrayOutputWithContext(context.Context) GetUserGroupsUserGroupArrayOutput
}

type GetUserGroupsUserGroupArray []GetUserGroupsUserGroupInput

func (GetUserGroupsUserGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserGroupsUserGroup)(nil)).Elem()
}

func (i GetUserGroupsUserGroupArray) ToGetUserGroupsUserGroupArrayOutput() GetUserGroupsUserGroupArrayOutput {
	return i.ToGetUserGroupsUserGroupArrayOutputWithContext(context.Background())
}

func (i GetUserGroupsUserGroupArray) ToGetUserGroupsUserGroupArrayOutputWithContext(ctx context.Context) GetUserGroupsUserGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserGroupsUserGroupArrayOutput)
}

type GetUserGroupsUserGroupOutput struct{ *pulumi.OutputState }

func (GetUserGroupsUserGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserGroupsUserGroup)(nil)).Elem()
}

func (o GetUserGroupsUserGroupOutput) ToGetUserGroupsUserGroupOutput() GetUserGroupsUserGroupOutput {
	return o
}

func (o GetUserGroupsUserGroupOutput) ToGetUserGroupsUserGroupOutputWithContext(ctx context.Context) GetUserGroupsUserGroupOutput {
	return o
}

// The date and time (UTC) of creation of the user group.
func (o GetUserGroupsUserGroupOutput) CreationDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserGroupsUserGroup) string { return v.CreationDate }).(pulumi.StringOutput)
}

// The date and time (UTC) of the last modification of the user group.
func (o GetUserGroupsUserGroupOutput) LastModificationDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserGroupsUserGroup) string { return v.LastModificationDate }).(pulumi.StringOutput)
}

// The Outscale Resource Name (ORN) of the user group. For more information, see [Resource Identifiers](https://docs.outscale.com/en/userguide/Resource-Identifiers.html).
func (o GetUserGroupsUserGroupOutput) Orn() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserGroupsUserGroup) string { return v.Orn }).(pulumi.StringOutput)
}

// The path to the user group.
func (o GetUserGroupsUserGroupOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserGroupsUserGroup) string { return v.Path }).(pulumi.StringOutput)
}

// The ID of the user group.
func (o GetUserGroupsUserGroupOutput) UserGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserGroupsUserGroup) string { return v.UserGroupId }).(pulumi.StringOutput)
}

func (o GetUserGroupsUserGroupOutput) UserGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserGroupsUserGroup) string { return v.UserGroupName }).(pulumi.StringOutput)
}

type GetUserGroupsUserGroupArrayOutput struct{ *pulumi.OutputState }

func (GetUserGroupsUserGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserGroupsUserGroup)(nil)).Elem()
}

func (o GetUserGroupsUserGroupArrayOutput) ToGetUserGroupsUserGroupArrayOutput() GetUserGroupsUserGroupArrayOutput {
	return o
}

func (o GetUserGroupsUserGroupArrayOutput) ToGetUserGroupsUserGroupArrayOutputWithContext(ctx context.Context) GetUserGroupsUserGroupArrayOutput {
	return o
}

func (o GetUserGroupsUserGroupArrayOutput) Index(i pulumi.IntInput) GetUserGroupsUserGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetUserGroupsUserGroup {
		return vs[0].([]GetUserGroupsUserGroup)[vs[1].(int)]
	}).(GetUserGroupsUserGroupOutput)
}

type GetUsersFilter struct {
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// GetUsersFilterInput is an input type that accepts GetUsersFilterArgs and GetUsersFilterOutput values.
// You can construct a concrete instance of `GetUsersFilterInput` via:
//
//	GetUsersFilterArgs{...}
type GetUsersFilterInput interface {
	pulumi.Input

	ToGetUsersFilterOutput() GetUsersFilterOutput
	ToGetUsersFilterOutputWithContext(context.Context) GetUsersFilterOutput
}

type GetUsersFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetUsersFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUsersFilter)(nil)).Elem()
}

func (i GetUsersFilterArgs) ToGetUsersFilterOutput() GetUsersFilterOutput {
	return i.ToGetUsersFilterOutputWithContext(context.Background())
}

func (i GetUsersFilterArgs) ToGetUsersFilterOutputWithContext(ctx context.Context) GetUsersFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUsersFilterOutput)
}

// GetUsersFilterArrayInput is an input type that accepts GetUsersFilterArray and GetUsersFilterArrayOutput values.
// You can construct a concrete instance of `GetUsersFilterArrayInput` via:
//
//	GetUsersFilterArray{ GetUsersFilterArgs{...} }
type GetUsersFilterArrayInput interface {
	pulumi.Input

	ToGetUsersFilterArrayOutput() GetUsersFilterArrayOutput
	ToGetUsersFilterArrayOutputWithContext(context.Context) GetUsersFilterArrayOutput
}

type GetUsersFilterArray []GetUsersFilterInput

func (GetUsersFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUsersFilter)(nil)).Elem()
}

func (i GetUsersFilterArray) ToGetUsersFilterArrayOutput() GetUsersFilterArrayOutput {
	return i.ToGetUsersFilterArrayOutputWithContext(context.Background())
}

func (i GetUsersFilterArray) ToGetUsersFilterArrayOutputWithContext(ctx context.Context) GetUsersFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUsersFilterArrayOutput)
}

type GetUsersFilterOutput struct{ *pulumi.OutputState }

func (GetUsersFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUsersFilter)(nil)).Elem()
}

func (o GetUsersFilterOutput) ToGetUsersFilterOutput() GetUsersFilterOutput {
	return o
}

func (o GetUsersFilterOutput) ToGetUsersFilterOutputWithContext(ctx context.Context) GetUsersFilterOutput {
	return o
}

func (o GetUsersFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetUsersFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetUsersFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetUsersFilterArrayOutput struct{ *pulumi.OutputState }

func (GetUsersFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUsersFilter)(nil)).Elem()
}

func (o GetUsersFilterArrayOutput) ToGetUsersFilterArrayOutput() GetUsersFilterArrayOutput {
	return o
}

func (o GetUsersFilterArrayOutput) ToGetUsersFilterArrayOutputWithContext(ctx context.Context) GetUsersFilterArrayOutput {
	return o
}

func (o GetUsersFilterArrayOutput) Index(i pulumi.IntInput) GetUsersFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetUsersFilter {
		return vs[0].([]GetUsersFilter)[vs[1].(int)]
	}).(GetUsersFilterOutput)
}

type GetUsersUser struct {
	// The date and time (UTC) of creation of the EIM user.
	CreationDate string `pulumi:"creationDate"`
	// The date and time (UTC) of the last modification of the EIM user.
	LastModificationDate string `pulumi:"lastModificationDate"`
	// The path to the EIM user.
	Path string `pulumi:"path"`
	// The email address of the EIM user.
	UserEmail string `pulumi:"userEmail"`
	// The ID of the EIM user.
	UserId string `pulumi:"userId"`
	// The name of the EIM user.
	UserName string `pulumi:"userName"`
}

// GetUsersUserInput is an input type that accepts GetUsersUserArgs and GetUsersUserOutput values.
// You can construct a concrete instance of `GetUsersUserInput` via:
//
//	GetUsersUserArgs{...}
type GetUsersUserInput interface {
	pulumi.Input

	ToGetUsersUserOutput() GetUsersUserOutput
	ToGetUsersUserOutputWithContext(context.Context) GetUsersUserOutput
}

type GetUsersUserArgs struct {
	// The date and time (UTC) of creation of the EIM user.
	CreationDate pulumi.StringInput `pulumi:"creationDate"`
	// The date and time (UTC) of the last modification of the EIM user.
	LastModificationDate pulumi.StringInput `pulumi:"lastModificationDate"`
	// The path to the EIM user.
	Path pulumi.StringInput `pulumi:"path"`
	// The email address of the EIM user.
	UserEmail pulumi.StringInput `pulumi:"userEmail"`
	// The ID of the EIM user.
	UserId pulumi.StringInput `pulumi:"userId"`
	// The name of the EIM user.
	UserName pulumi.StringInput `pulumi:"userName"`
}

func (GetUsersUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUsersUser)(nil)).Elem()
}

func (i GetUsersUserArgs) ToGetUsersUserOutput() GetUsersUserOutput {
	return i.ToGetUsersUserOutputWithContext(context.Background())
}

func (i GetUsersUserArgs) ToGetUsersUserOutputWithContext(ctx context.Context) GetUsersUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUsersUserOutput)
}

// GetUsersUserArrayInput is an input type that accepts GetUsersUserArray and GetUsersUserArrayOutput values.
// You can construct a concrete instance of `GetUsersUserArrayInput` via:
//
//	GetUsersUserArray{ GetUsersUserArgs{...} }
type GetUsersUserArrayInput interface {
	pulumi.Input

	ToGetUsersUserArrayOutput() GetUsersUserArrayOutput
	ToGetUsersUserArrayOutputWithContext(context.Context) GetUsersUserArrayOutput
}

type GetUsersUserArray []GetUsersUserInput

func (GetUsersUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUsersUser)(nil)).Elem()
}

func (i GetUsersUserArray) ToGetUsersUserArrayOutput() GetUsersUserArrayOutput {
	return i.ToGetUsersUserArrayOutputWithContext(context.Background())
}

func (i GetUsersUserArray) ToGetUsersUserArrayOutputWithContext(ctx context.Context) GetUsersUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUsersUserArrayOutput)
}

type GetUsersUserOutput struct{ *pulumi.OutputState }

func (GetUsersUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUsersUser)(nil)).Elem()
}

func (o GetUsersUserOutput) ToGetUsersUserOutput() GetUsersUserOutput {
	return o
}

func (o GetUsersUserOutput) ToGetUsersUserOutputWithContext(ctx context.Context) GetUsersUserOutput {
	return o
}

// The date and time (UTC) of creation of the EIM user.
func (o GetUsersUserOutput) CreationDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUser) string { return v.CreationDate }).(pulumi.StringOutput)
}

// The date and time (UTC) of the last modification of the EIM user.
func (o GetUsersUserOutput) LastModificationDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUser) string { return v.LastModificationDate }).(pulumi.StringOutput)
}

// The path to the EIM user.
func (o GetUsersUserOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUser) string { return v.Path }).(pulumi.StringOutput)
}

// The email address of the EIM user.
func (o GetUsersUserOutput) UserEmail() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUser) string { return v.UserEmail }).(pulumi.StringOutput)
}

// The ID of the EIM user.
func (o GetUsersUserOutput) UserId() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUser) string { return v.UserId }).(pulumi.StringOutput)
}

// The name of the EIM user.
func (o GetUsersUserOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUser) string { return v.UserName }).(pulumi.StringOutput)
}

type GetUsersUserArrayOutput struct{ *pulumi.OutputState }

func (GetUsersUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUsersUser)(nil)).Elem()
}

func (o GetUsersUserArrayOutput) ToGetUsersUserArrayOutput() GetUsersUserArrayOutput {
	return o
}

func (o GetUsersUserArrayOutput) ToGetUsersUserArrayOutputWithContext(ctx context.Context) GetUsersUserArrayOutput {
	return o
}

func (o GetUsersUserArrayOutput) Index(i pulumi.IntInput) GetUsersUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetUsersUser {
		return vs[0].([]GetUsersUser)[vs[1].(int)]
	}).(GetUsersUserOutput)
}

type GetVirtualGatewayFilter struct {
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// GetVirtualGatewayFilterInput is an input type that accepts GetVirtualGatewayFilterArgs and GetVirtualGatewayFilterOutput values.
// You can construct a concrete instance of `GetVirtualGatewayFilterInput` via:
//
//	GetVirtualGatewayFilterArgs{...}
type GetVirtualGatewayFilterInput interface {
	pulumi.Input

	ToGetVirtualGatewayFilterOutput() GetVirtualGatewayFilterOutput
	ToGetVirtualGatewayFilterOutputWithContext(context.Context) GetVirtualGatewayFilterOutput
}

type GetVirtualGatewayFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetVirtualGatewayFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualGatewayFilter)(nil)).Elem()
}

func (i GetVirtualGatewayFilterArgs) ToGetVirtualGatewayFilterOutput() GetVirtualGatewayFilterOutput {
	return i.ToGetVirtualGatewayFilterOutputWithContext(context.Background())
}

func (i GetVirtualGatewayFilterArgs) ToGetVirtualGatewayFilterOutputWithContext(ctx context.Context) GetVirtualGatewayFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualGatewayFilterOutput)
}

// GetVirtualGatewayFilterArrayInput is an input type that accepts GetVirtualGatewayFilterArray and GetVirtualGatewayFilterArrayOutput values.
// You can construct a concrete instance of `GetVirtualGatewayFilterArrayInput` via:
//
//	GetVirtualGatewayFilterArray{ GetVirtualGatewayFilterArgs{...} }
type GetVirtualGatewayFilterArrayInput interface {
	pulumi.Input

	ToGetVirtualGatewayFilterArrayOutput() GetVirtualGatewayFilterArrayOutput
	ToGetVirtualGatewayFilterArrayOutputWithContext(context.Context) GetVirtualGatewayFilterArrayOutput
}

type GetVirtualGatewayFilterArray []GetVirtualGatewayFilterInput

func (GetVirtualGatewayFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualGatewayFilter)(nil)).Elem()
}

func (i GetVirtualGatewayFilterArray) ToGetVirtualGatewayFilterArrayOutput() GetVirtualGatewayFilterArrayOutput {
	return i.ToGetVirtualGatewayFilterArrayOutputWithContext(context.Background())
}

func (i GetVirtualGatewayFilterArray) ToGetVirtualGatewayFilterArrayOutputWithContext(ctx context.Context) GetVirtualGatewayFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualGatewayFilterArrayOutput)
}

type GetVirtualGatewayFilterOutput struct{ *pulumi.OutputState }

func (GetVirtualGatewayFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualGatewayFilter)(nil)).Elem()
}

func (o GetVirtualGatewayFilterOutput) ToGetVirtualGatewayFilterOutput() GetVirtualGatewayFilterOutput {
	return o
}

func (o GetVirtualGatewayFilterOutput) ToGetVirtualGatewayFilterOutputWithContext(ctx context.Context) GetVirtualGatewayFilterOutput {
	return o
}

func (o GetVirtualGatewayFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualGatewayFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetVirtualGatewayFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetVirtualGatewayFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetVirtualGatewayFilterArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualGatewayFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualGatewayFilter)(nil)).Elem()
}

func (o GetVirtualGatewayFilterArrayOutput) ToGetVirtualGatewayFilterArrayOutput() GetVirtualGatewayFilterArrayOutput {
	return o
}

func (o GetVirtualGatewayFilterArrayOutput) ToGetVirtualGatewayFilterArrayOutputWithContext(ctx context.Context) GetVirtualGatewayFilterArrayOutput {
	return o
}

func (o GetVirtualGatewayFilterArrayOutput) Index(i pulumi.IntInput) GetVirtualGatewayFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualGatewayFilter {
		return vs[0].([]GetVirtualGatewayFilter)[vs[1].(int)]
	}).(GetVirtualGatewayFilterOutput)
}

type GetVirtualGatewayNetToVirtualGatewayLink struct {
	// The ID of the Net to which the virtual gateway is attached.
	NetId string `pulumi:"netId"`
	// The state of the virtual gateway (`pending` \| `available` \| `deleting` \| `deleted`).
	State string `pulumi:"state"`
}

// GetVirtualGatewayNetToVirtualGatewayLinkInput is an input type that accepts GetVirtualGatewayNetToVirtualGatewayLinkArgs and GetVirtualGatewayNetToVirtualGatewayLinkOutput values.
// You can construct a concrete instance of `GetVirtualGatewayNetToVirtualGatewayLinkInput` via:
//
//	GetVirtualGatewayNetToVirtualGatewayLinkArgs{...}
type GetVirtualGatewayNetToVirtualGatewayLinkInput interface {
	pulumi.Input

	ToGetVirtualGatewayNetToVirtualGatewayLinkOutput() GetVirtualGatewayNetToVirtualGatewayLinkOutput
	ToGetVirtualGatewayNetToVirtualGatewayLinkOutputWithContext(context.Context) GetVirtualGatewayNetToVirtualGatewayLinkOutput
}

type GetVirtualGatewayNetToVirtualGatewayLinkArgs struct {
	// The ID of the Net to which the virtual gateway is attached.
	NetId pulumi.StringInput `pulumi:"netId"`
	// The state of the virtual gateway (`pending` \| `available` \| `deleting` \| `deleted`).
	State pulumi.StringInput `pulumi:"state"`
}

func (GetVirtualGatewayNetToVirtualGatewayLinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualGatewayNetToVirtualGatewayLink)(nil)).Elem()
}

func (i GetVirtualGatewayNetToVirtualGatewayLinkArgs) ToGetVirtualGatewayNetToVirtualGatewayLinkOutput() GetVirtualGatewayNetToVirtualGatewayLinkOutput {
	return i.ToGetVirtualGatewayNetToVirtualGatewayLinkOutputWithContext(context.Background())
}

func (i GetVirtualGatewayNetToVirtualGatewayLinkArgs) ToGetVirtualGatewayNetToVirtualGatewayLinkOutputWithContext(ctx context.Context) GetVirtualGatewayNetToVirtualGatewayLinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualGatewayNetToVirtualGatewayLinkOutput)
}

// GetVirtualGatewayNetToVirtualGatewayLinkArrayInput is an input type that accepts GetVirtualGatewayNetToVirtualGatewayLinkArray and GetVirtualGatewayNetToVirtualGatewayLinkArrayOutput values.
// You can construct a concrete instance of `GetVirtualGatewayNetToVirtualGatewayLinkArrayInput` via:
//
//	GetVirtualGatewayNetToVirtualGatewayLinkArray{ GetVirtualGatewayNetToVirtualGatewayLinkArgs{...} }
type GetVirtualGatewayNetToVirtualGatewayLinkArrayInput interface {
	pulumi.Input

	ToGetVirtualGatewayNetToVirtualGatewayLinkArrayOutput() GetVirtualGatewayNetToVirtualGatewayLinkArrayOutput
	ToGetVirtualGatewayNetToVirtualGatewayLinkArrayOutputWithContext(context.Context) GetVirtualGatewayNetToVirtualGatewayLinkArrayOutput
}

type GetVirtualGatewayNetToVirtualGatewayLinkArray []GetVirtualGatewayNetToVirtualGatewayLinkInput

func (GetVirtualGatewayNetToVirtualGatewayLinkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualGatewayNetToVirtualGatewayLink)(nil)).Elem()
}

func (i GetVirtualGatewayNetToVirtualGatewayLinkArray) ToGetVirtualGatewayNetToVirtualGatewayLinkArrayOutput() GetVirtualGatewayNetToVirtualGatewayLinkArrayOutput {
	return i.ToGetVirtualGatewayNetToVirtualGatewayLinkArrayOutputWithContext(context.Background())
}

func (i GetVirtualGatewayNetToVirtualGatewayLinkArray) ToGetVirtualGatewayNetToVirtualGatewayLinkArrayOutputWithContext(ctx context.Context) GetVirtualGatewayNetToVirtualGatewayLinkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualGatewayNetToVirtualGatewayLinkArrayOutput)
}

type GetVirtualGatewayNetToVirtualGatewayLinkOutput struct{ *pulumi.OutputState }

func (GetVirtualGatewayNetToVirtualGatewayLinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualGatewayNetToVirtualGatewayLink)(nil)).Elem()
}

func (o GetVirtualGatewayNetToVirtualGatewayLinkOutput) ToGetVirtualGatewayNetToVirtualGatewayLinkOutput() GetVirtualGatewayNetToVirtualGatewayLinkOutput {
	return o
}

func (o GetVirtualGatewayNetToVirtualGatewayLinkOutput) ToGetVirtualGatewayNetToVirtualGatewayLinkOutputWithContext(ctx context.Context) GetVirtualGatewayNetToVirtualGatewayLinkOutput {
	return o
}

// The ID of the Net to which the virtual gateway is attached.
func (o GetVirtualGatewayNetToVirtualGatewayLinkOutput) NetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualGatewayNetToVirtualGatewayLink) string { return v.NetId }).(pulumi.StringOutput)
}

// The state of the virtual gateway (`pending` \| `available` \| `deleting` \| `deleted`).
func (o GetVirtualGatewayNetToVirtualGatewayLinkOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualGatewayNetToVirtualGatewayLink) string { return v.State }).(pulumi.StringOutput)
}

type GetVirtualGatewayNetToVirtualGatewayLinkArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualGatewayNetToVirtualGatewayLinkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualGatewayNetToVirtualGatewayLink)(nil)).Elem()
}

func (o GetVirtualGatewayNetToVirtualGatewayLinkArrayOutput) ToGetVirtualGatewayNetToVirtualGatewayLinkArrayOutput() GetVirtualGatewayNetToVirtualGatewayLinkArrayOutput {
	return o
}

func (o GetVirtualGatewayNetToVirtualGatewayLinkArrayOutput) ToGetVirtualGatewayNetToVirtualGatewayLinkArrayOutputWithContext(ctx context.Context) GetVirtualGatewayNetToVirtualGatewayLinkArrayOutput {
	return o
}

func (o GetVirtualGatewayNetToVirtualGatewayLinkArrayOutput) Index(i pulumi.IntInput) GetVirtualGatewayNetToVirtualGatewayLinkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualGatewayNetToVirtualGatewayLink {
		return vs[0].([]GetVirtualGatewayNetToVirtualGatewayLink)[vs[1].(int)]
	}).(GetVirtualGatewayNetToVirtualGatewayLinkOutput)
}

type GetVirtualGatewayTag struct {
	// The key of the tag, with a minimum of 1 character.
	Key string `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value string `pulumi:"value"`
}

// GetVirtualGatewayTagInput is an input type that accepts GetVirtualGatewayTagArgs and GetVirtualGatewayTagOutput values.
// You can construct a concrete instance of `GetVirtualGatewayTagInput` via:
//
//	GetVirtualGatewayTagArgs{...}
type GetVirtualGatewayTagInput interface {
	pulumi.Input

	ToGetVirtualGatewayTagOutput() GetVirtualGatewayTagOutput
	ToGetVirtualGatewayTagOutputWithContext(context.Context) GetVirtualGatewayTagOutput
}

type GetVirtualGatewayTagArgs struct {
	// The key of the tag, with a minimum of 1 character.
	Key pulumi.StringInput `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetVirtualGatewayTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualGatewayTag)(nil)).Elem()
}

func (i GetVirtualGatewayTagArgs) ToGetVirtualGatewayTagOutput() GetVirtualGatewayTagOutput {
	return i.ToGetVirtualGatewayTagOutputWithContext(context.Background())
}

func (i GetVirtualGatewayTagArgs) ToGetVirtualGatewayTagOutputWithContext(ctx context.Context) GetVirtualGatewayTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualGatewayTagOutput)
}

// GetVirtualGatewayTagArrayInput is an input type that accepts GetVirtualGatewayTagArray and GetVirtualGatewayTagArrayOutput values.
// You can construct a concrete instance of `GetVirtualGatewayTagArrayInput` via:
//
//	GetVirtualGatewayTagArray{ GetVirtualGatewayTagArgs{...} }
type GetVirtualGatewayTagArrayInput interface {
	pulumi.Input

	ToGetVirtualGatewayTagArrayOutput() GetVirtualGatewayTagArrayOutput
	ToGetVirtualGatewayTagArrayOutputWithContext(context.Context) GetVirtualGatewayTagArrayOutput
}

type GetVirtualGatewayTagArray []GetVirtualGatewayTagInput

func (GetVirtualGatewayTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualGatewayTag)(nil)).Elem()
}

func (i GetVirtualGatewayTagArray) ToGetVirtualGatewayTagArrayOutput() GetVirtualGatewayTagArrayOutput {
	return i.ToGetVirtualGatewayTagArrayOutputWithContext(context.Background())
}

func (i GetVirtualGatewayTagArray) ToGetVirtualGatewayTagArrayOutputWithContext(ctx context.Context) GetVirtualGatewayTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualGatewayTagArrayOutput)
}

type GetVirtualGatewayTagOutput struct{ *pulumi.OutputState }

func (GetVirtualGatewayTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualGatewayTag)(nil)).Elem()
}

func (o GetVirtualGatewayTagOutput) ToGetVirtualGatewayTagOutput() GetVirtualGatewayTagOutput {
	return o
}

func (o GetVirtualGatewayTagOutput) ToGetVirtualGatewayTagOutputWithContext(ctx context.Context) GetVirtualGatewayTagOutput {
	return o
}

// The key of the tag, with a minimum of 1 character.
func (o GetVirtualGatewayTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualGatewayTag) string { return v.Key }).(pulumi.StringOutput)
}

// The value of the tag, between 0 and 255 characters.
func (o GetVirtualGatewayTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualGatewayTag) string { return v.Value }).(pulumi.StringOutput)
}

type GetVirtualGatewayTagArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualGatewayTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualGatewayTag)(nil)).Elem()
}

func (o GetVirtualGatewayTagArrayOutput) ToGetVirtualGatewayTagArrayOutput() GetVirtualGatewayTagArrayOutput {
	return o
}

func (o GetVirtualGatewayTagArrayOutput) ToGetVirtualGatewayTagArrayOutputWithContext(ctx context.Context) GetVirtualGatewayTagArrayOutput {
	return o
}

func (o GetVirtualGatewayTagArrayOutput) Index(i pulumi.IntInput) GetVirtualGatewayTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualGatewayTag {
		return vs[0].([]GetVirtualGatewayTag)[vs[1].(int)]
	}).(GetVirtualGatewayTagOutput)
}

type GetVirtualGatewaysFilter struct {
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// GetVirtualGatewaysFilterInput is an input type that accepts GetVirtualGatewaysFilterArgs and GetVirtualGatewaysFilterOutput values.
// You can construct a concrete instance of `GetVirtualGatewaysFilterInput` via:
//
//	GetVirtualGatewaysFilterArgs{...}
type GetVirtualGatewaysFilterInput interface {
	pulumi.Input

	ToGetVirtualGatewaysFilterOutput() GetVirtualGatewaysFilterOutput
	ToGetVirtualGatewaysFilterOutputWithContext(context.Context) GetVirtualGatewaysFilterOutput
}

type GetVirtualGatewaysFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetVirtualGatewaysFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualGatewaysFilter)(nil)).Elem()
}

func (i GetVirtualGatewaysFilterArgs) ToGetVirtualGatewaysFilterOutput() GetVirtualGatewaysFilterOutput {
	return i.ToGetVirtualGatewaysFilterOutputWithContext(context.Background())
}

func (i GetVirtualGatewaysFilterArgs) ToGetVirtualGatewaysFilterOutputWithContext(ctx context.Context) GetVirtualGatewaysFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualGatewaysFilterOutput)
}

// GetVirtualGatewaysFilterArrayInput is an input type that accepts GetVirtualGatewaysFilterArray and GetVirtualGatewaysFilterArrayOutput values.
// You can construct a concrete instance of `GetVirtualGatewaysFilterArrayInput` via:
//
//	GetVirtualGatewaysFilterArray{ GetVirtualGatewaysFilterArgs{...} }
type GetVirtualGatewaysFilterArrayInput interface {
	pulumi.Input

	ToGetVirtualGatewaysFilterArrayOutput() GetVirtualGatewaysFilterArrayOutput
	ToGetVirtualGatewaysFilterArrayOutputWithContext(context.Context) GetVirtualGatewaysFilterArrayOutput
}

type GetVirtualGatewaysFilterArray []GetVirtualGatewaysFilterInput

func (GetVirtualGatewaysFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualGatewaysFilter)(nil)).Elem()
}

func (i GetVirtualGatewaysFilterArray) ToGetVirtualGatewaysFilterArrayOutput() GetVirtualGatewaysFilterArrayOutput {
	return i.ToGetVirtualGatewaysFilterArrayOutputWithContext(context.Background())
}

func (i GetVirtualGatewaysFilterArray) ToGetVirtualGatewaysFilterArrayOutputWithContext(ctx context.Context) GetVirtualGatewaysFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualGatewaysFilterArrayOutput)
}

type GetVirtualGatewaysFilterOutput struct{ *pulumi.OutputState }

func (GetVirtualGatewaysFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualGatewaysFilter)(nil)).Elem()
}

func (o GetVirtualGatewaysFilterOutput) ToGetVirtualGatewaysFilterOutput() GetVirtualGatewaysFilterOutput {
	return o
}

func (o GetVirtualGatewaysFilterOutput) ToGetVirtualGatewaysFilterOutputWithContext(ctx context.Context) GetVirtualGatewaysFilterOutput {
	return o
}

func (o GetVirtualGatewaysFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualGatewaysFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetVirtualGatewaysFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetVirtualGatewaysFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetVirtualGatewaysFilterArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualGatewaysFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualGatewaysFilter)(nil)).Elem()
}

func (o GetVirtualGatewaysFilterArrayOutput) ToGetVirtualGatewaysFilterArrayOutput() GetVirtualGatewaysFilterArrayOutput {
	return o
}

func (o GetVirtualGatewaysFilterArrayOutput) ToGetVirtualGatewaysFilterArrayOutputWithContext(ctx context.Context) GetVirtualGatewaysFilterArrayOutput {
	return o
}

func (o GetVirtualGatewaysFilterArrayOutput) Index(i pulumi.IntInput) GetVirtualGatewaysFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualGatewaysFilter {
		return vs[0].([]GetVirtualGatewaysFilter)[vs[1].(int)]
	}).(GetVirtualGatewaysFilterOutput)
}

type GetVirtualGatewaysVirtualGateway struct {
	// The type of VPN connection supported by the virtual gateway (always `ipsec.1`).
	ConnectionType string `pulumi:"connectionType"`
	// The Net to which the virtual gateway is attached.
	NetToVirtualGatewayLinks []GetVirtualGatewaysVirtualGatewayNetToVirtualGatewayLink `pulumi:"netToVirtualGatewayLinks"`
	// The state of the virtual gateway (`pending` \| `available` \| `deleting` \| `deleted`).
	State string `pulumi:"state"`
	// One or more tags associated with the virtual gateway.
	Tags []GetVirtualGatewaysVirtualGatewayTag `pulumi:"tags"`
	// The ID of the virtual gateway.
	VirtualGatewayId string `pulumi:"virtualGatewayId"`
}

// GetVirtualGatewaysVirtualGatewayInput is an input type that accepts GetVirtualGatewaysVirtualGatewayArgs and GetVirtualGatewaysVirtualGatewayOutput values.
// You can construct a concrete instance of `GetVirtualGatewaysVirtualGatewayInput` via:
//
//	GetVirtualGatewaysVirtualGatewayArgs{...}
type GetVirtualGatewaysVirtualGatewayInput interface {
	pulumi.Input

	ToGetVirtualGatewaysVirtualGatewayOutput() GetVirtualGatewaysVirtualGatewayOutput
	ToGetVirtualGatewaysVirtualGatewayOutputWithContext(context.Context) GetVirtualGatewaysVirtualGatewayOutput
}

type GetVirtualGatewaysVirtualGatewayArgs struct {
	// The type of VPN connection supported by the virtual gateway (always `ipsec.1`).
	ConnectionType pulumi.StringInput `pulumi:"connectionType"`
	// The Net to which the virtual gateway is attached.
	NetToVirtualGatewayLinks GetVirtualGatewaysVirtualGatewayNetToVirtualGatewayLinkArrayInput `pulumi:"netToVirtualGatewayLinks"`
	// The state of the virtual gateway (`pending` \| `available` \| `deleting` \| `deleted`).
	State pulumi.StringInput `pulumi:"state"`
	// One or more tags associated with the virtual gateway.
	Tags GetVirtualGatewaysVirtualGatewayTagArrayInput `pulumi:"tags"`
	// The ID of the virtual gateway.
	VirtualGatewayId pulumi.StringInput `pulumi:"virtualGatewayId"`
}

func (GetVirtualGatewaysVirtualGatewayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualGatewaysVirtualGateway)(nil)).Elem()
}

func (i GetVirtualGatewaysVirtualGatewayArgs) ToGetVirtualGatewaysVirtualGatewayOutput() GetVirtualGatewaysVirtualGatewayOutput {
	return i.ToGetVirtualGatewaysVirtualGatewayOutputWithContext(context.Background())
}

func (i GetVirtualGatewaysVirtualGatewayArgs) ToGetVirtualGatewaysVirtualGatewayOutputWithContext(ctx context.Context) GetVirtualGatewaysVirtualGatewayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualGatewaysVirtualGatewayOutput)
}

// GetVirtualGatewaysVirtualGatewayArrayInput is an input type that accepts GetVirtualGatewaysVirtualGatewayArray and GetVirtualGatewaysVirtualGatewayArrayOutput values.
// You can construct a concrete instance of `GetVirtualGatewaysVirtualGatewayArrayInput` via:
//
//	GetVirtualGatewaysVirtualGatewayArray{ GetVirtualGatewaysVirtualGatewayArgs{...} }
type GetVirtualGatewaysVirtualGatewayArrayInput interface {
	pulumi.Input

	ToGetVirtualGatewaysVirtualGatewayArrayOutput() GetVirtualGatewaysVirtualGatewayArrayOutput
	ToGetVirtualGatewaysVirtualGatewayArrayOutputWithContext(context.Context) GetVirtualGatewaysVirtualGatewayArrayOutput
}

type GetVirtualGatewaysVirtualGatewayArray []GetVirtualGatewaysVirtualGatewayInput

func (GetVirtualGatewaysVirtualGatewayArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualGatewaysVirtualGateway)(nil)).Elem()
}

func (i GetVirtualGatewaysVirtualGatewayArray) ToGetVirtualGatewaysVirtualGatewayArrayOutput() GetVirtualGatewaysVirtualGatewayArrayOutput {
	return i.ToGetVirtualGatewaysVirtualGatewayArrayOutputWithContext(context.Background())
}

func (i GetVirtualGatewaysVirtualGatewayArray) ToGetVirtualGatewaysVirtualGatewayArrayOutputWithContext(ctx context.Context) GetVirtualGatewaysVirtualGatewayArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualGatewaysVirtualGatewayArrayOutput)
}

type GetVirtualGatewaysVirtualGatewayOutput struct{ *pulumi.OutputState }

func (GetVirtualGatewaysVirtualGatewayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualGatewaysVirtualGateway)(nil)).Elem()
}

func (o GetVirtualGatewaysVirtualGatewayOutput) ToGetVirtualGatewaysVirtualGatewayOutput() GetVirtualGatewaysVirtualGatewayOutput {
	return o
}

func (o GetVirtualGatewaysVirtualGatewayOutput) ToGetVirtualGatewaysVirtualGatewayOutputWithContext(ctx context.Context) GetVirtualGatewaysVirtualGatewayOutput {
	return o
}

// The type of VPN connection supported by the virtual gateway (always `ipsec.1`).
func (o GetVirtualGatewaysVirtualGatewayOutput) ConnectionType() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualGatewaysVirtualGateway) string { return v.ConnectionType }).(pulumi.StringOutput)
}

// The Net to which the virtual gateway is attached.
func (o GetVirtualGatewaysVirtualGatewayOutput) NetToVirtualGatewayLinks() GetVirtualGatewaysVirtualGatewayNetToVirtualGatewayLinkArrayOutput {
	return o.ApplyT(func(v GetVirtualGatewaysVirtualGateway) []GetVirtualGatewaysVirtualGatewayNetToVirtualGatewayLink {
		return v.NetToVirtualGatewayLinks
	}).(GetVirtualGatewaysVirtualGatewayNetToVirtualGatewayLinkArrayOutput)
}

// The state of the virtual gateway (`pending` \| `available` \| `deleting` \| `deleted`).
func (o GetVirtualGatewaysVirtualGatewayOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualGatewaysVirtualGateway) string { return v.State }).(pulumi.StringOutput)
}

// One or more tags associated with the virtual gateway.
func (o GetVirtualGatewaysVirtualGatewayOutput) Tags() GetVirtualGatewaysVirtualGatewayTagArrayOutput {
	return o.ApplyT(func(v GetVirtualGatewaysVirtualGateway) []GetVirtualGatewaysVirtualGatewayTag { return v.Tags }).(GetVirtualGatewaysVirtualGatewayTagArrayOutput)
}

// The ID of the virtual gateway.
func (o GetVirtualGatewaysVirtualGatewayOutput) VirtualGatewayId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualGatewaysVirtualGateway) string { return v.VirtualGatewayId }).(pulumi.StringOutput)
}

type GetVirtualGatewaysVirtualGatewayArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualGatewaysVirtualGatewayArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualGatewaysVirtualGateway)(nil)).Elem()
}

func (o GetVirtualGatewaysVirtualGatewayArrayOutput) ToGetVirtualGatewaysVirtualGatewayArrayOutput() GetVirtualGatewaysVirtualGatewayArrayOutput {
	return o
}

func (o GetVirtualGatewaysVirtualGatewayArrayOutput) ToGetVirtualGatewaysVirtualGatewayArrayOutputWithContext(ctx context.Context) GetVirtualGatewaysVirtualGatewayArrayOutput {
	return o
}

func (o GetVirtualGatewaysVirtualGatewayArrayOutput) Index(i pulumi.IntInput) GetVirtualGatewaysVirtualGatewayOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualGatewaysVirtualGateway {
		return vs[0].([]GetVirtualGatewaysVirtualGateway)[vs[1].(int)]
	}).(GetVirtualGatewaysVirtualGatewayOutput)
}

type GetVirtualGatewaysVirtualGatewayNetToVirtualGatewayLink struct {
	// The ID of the Net to which the virtual gateway is attached.
	NetId string `pulumi:"netId"`
	// The state of the virtual gateway (`pending` \| `available` \| `deleting` \| `deleted`).
	State string `pulumi:"state"`
}

// GetVirtualGatewaysVirtualGatewayNetToVirtualGatewayLinkInput is an input type that accepts GetVirtualGatewaysVirtualGatewayNetToVirtualGatewayLinkArgs and GetVirtualGatewaysVirtualGatewayNetToVirtualGatewayLinkOutput values.
// You can construct a concrete instance of `GetVirtualGatewaysVirtualGatewayNetToVirtualGatewayLinkInput` via:
//
//	GetVirtualGatewaysVirtualGatewayNetToVirtualGatewayLinkArgs{...}
type GetVirtualGatewaysVirtualGatewayNetToVirtualGatewayLinkInput interface {
	pulumi.Input

	ToGetVirtualGatewaysVirtualGatewayNetToVirtualGatewayLinkOutput() GetVirtualGatewaysVirtualGatewayNetToVirtualGatewayLinkOutput
	ToGetVirtualGatewaysVirtualGatewayNetToVirtualGatewayLinkOutputWithContext(context.Context) GetVirtualGatewaysVirtualGatewayNetToVirtualGatewayLinkOutput
}

type GetVirtualGatewaysVirtualGatewayNetToVirtualGatewayLinkArgs struct {
	// The ID of the Net to which the virtual gateway is attached.
	NetId pulumi.StringInput `pulumi:"netId"`
	// The state of the virtual gateway (`pending` \| `available` \| `deleting` \| `deleted`).
	State pulumi.StringInput `pulumi:"state"`
}

func (GetVirtualGatewaysVirtualGatewayNetToVirtualGatewayLinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualGatewaysVirtualGatewayNetToVirtualGatewayLink)(nil)).Elem()
}

func (i GetVirtualGatewaysVirtualGatewayNetToVirtualGatewayLinkArgs) ToGetVirtualGatewaysVirtualGatewayNetToVirtualGatewayLinkOutput() GetVirtualGatewaysVirtualGatewayNetToVirtualGatewayLinkOutput {
	return i.ToGetVirtualGatewaysVirtualGatewayNetToVirtualGatewayLinkOutputWithContext(context.Background())
}

func (i GetVirtualGatewaysVirtualGatewayNetToVirtualGatewayLinkArgs) ToGetVirtualGatewaysVirtualGatewayNetToVirtualGatewayLinkOutputWithContext(ctx context.Context) GetVirtualGatewaysVirtualGatewayNetToVirtualGatewayLinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualGatewaysVirtualGatewayNetToVirtualGatewayLinkOutput)
}

// GetVirtualGatewaysVirtualGatewayNetToVirtualGatewayLinkArrayInput is an input type that accepts GetVirtualGatewaysVirtualGatewayNetToVirtualGatewayLinkArray and GetVirtualGatewaysVirtualGatewayNetToVirtualGatewayLinkArrayOutput values.
// You can construct a concrete instance of `GetVirtualGatewaysVirtualGatewayNetToVirtualGatewayLinkArrayInput` via:
//
//	GetVirtualGatewaysVirtualGatewayNetToVirtualGatewayLinkArray{ GetVirtualGatewaysVirtualGatewayNetToVirtualGatewayLinkArgs{...} }
type GetVirtualGatewaysVirtualGatewayNetToVirtualGatewayLinkArrayInput interface {
	pulumi.Input

	ToGetVirtualGatewaysVirtualGatewayNetToVirtualGatewayLinkArrayOutput() GetVirtualGatewaysVirtualGatewayNetToVirtualGatewayLinkArrayOutput
	ToGetVirtualGatewaysVirtualGatewayNetToVirtualGatewayLinkArrayOutputWithContext(context.Context) GetVirtualGatewaysVirtualGatewayNetToVirtualGatewayLinkArrayOutput
}

type GetVirtualGatewaysVirtualGatewayNetToVirtualGatewayLinkArray []GetVirtualGatewaysVirtualGatewayNetToVirtualGatewayLinkInput

func (GetVirtualGatewaysVirtualGatewayNetToVirtualGatewayLinkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualGatewaysVirtualGatewayNetToVirtualGatewayLink)(nil)).Elem()
}

func (i GetVirtualGatewaysVirtualGatewayNetToVirtualGatewayLinkArray) ToGetVirtualGatewaysVirtualGatewayNetToVirtualGatewayLinkArrayOutput() GetVirtualGatewaysVirtualGatewayNetToVirtualGatewayLinkArrayOutput {
	return i.ToGetVirtualGatewaysVirtualGatewayNetToVirtualGatewayLinkArrayOutputWithContext(context.Background())
}

func (i GetVirtualGatewaysVirtualGatewayNetToVirtualGatewayLinkArray) ToGetVirtualGatewaysVirtualGatewayNetToVirtualGatewayLinkArrayOutputWithContext(ctx context.Context) GetVirtualGatewaysVirtualGatewayNetToVirtualGatewayLinkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualGatewaysVirtualGatewayNetToVirtualGatewayLinkArrayOutput)
}

type GetVirtualGatewaysVirtualGatewayNetToVirtualGatewayLinkOutput struct{ *pulumi.OutputState }

func (GetVirtualGatewaysVirtualGatewayNetToVirtualGatewayLinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualGatewaysVirtualGatewayNetToVirtualGatewayLink)(nil)).Elem()
}

func (o GetVirtualGatewaysVirtualGatewayNetToVirtualGatewayLinkOutput) ToGetVirtualGatewaysVirtualGatewayNetToVirtualGatewayLinkOutput() GetVirtualGatewaysVirtualGatewayNetToVirtualGatewayLinkOutput {
	return o
}

func (o GetVirtualGatewaysVirtualGatewayNetToVirtualGatewayLinkOutput) ToGetVirtualGatewaysVirtualGatewayNetToVirtualGatewayLinkOutputWithContext(ctx context.Context) GetVirtualGatewaysVirtualGatewayNetToVirtualGatewayLinkOutput {
	return o
}

// The ID of the Net to which the virtual gateway is attached.
func (o GetVirtualGatewaysVirtualGatewayNetToVirtualGatewayLinkOutput) NetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualGatewaysVirtualGatewayNetToVirtualGatewayLink) string { return v.NetId }).(pulumi.StringOutput)
}

// The state of the virtual gateway (`pending` \| `available` \| `deleting` \| `deleted`).
func (o GetVirtualGatewaysVirtualGatewayNetToVirtualGatewayLinkOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualGatewaysVirtualGatewayNetToVirtualGatewayLink) string { return v.State }).(pulumi.StringOutput)
}

type GetVirtualGatewaysVirtualGatewayNetToVirtualGatewayLinkArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualGatewaysVirtualGatewayNetToVirtualGatewayLinkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualGatewaysVirtualGatewayNetToVirtualGatewayLink)(nil)).Elem()
}

func (o GetVirtualGatewaysVirtualGatewayNetToVirtualGatewayLinkArrayOutput) ToGetVirtualGatewaysVirtualGatewayNetToVirtualGatewayLinkArrayOutput() GetVirtualGatewaysVirtualGatewayNetToVirtualGatewayLinkArrayOutput {
	return o
}

func (o GetVirtualGatewaysVirtualGatewayNetToVirtualGatewayLinkArrayOutput) ToGetVirtualGatewaysVirtualGatewayNetToVirtualGatewayLinkArrayOutputWithContext(ctx context.Context) GetVirtualGatewaysVirtualGatewayNetToVirtualGatewayLinkArrayOutput {
	return o
}

func (o GetVirtualGatewaysVirtualGatewayNetToVirtualGatewayLinkArrayOutput) Index(i pulumi.IntInput) GetVirtualGatewaysVirtualGatewayNetToVirtualGatewayLinkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualGatewaysVirtualGatewayNetToVirtualGatewayLink {
		return vs[0].([]GetVirtualGatewaysVirtualGatewayNetToVirtualGatewayLink)[vs[1].(int)]
	}).(GetVirtualGatewaysVirtualGatewayNetToVirtualGatewayLinkOutput)
}

type GetVirtualGatewaysVirtualGatewayTag struct {
	// The key of the tag, with a minimum of 1 character.
	Key string `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value string `pulumi:"value"`
}

// GetVirtualGatewaysVirtualGatewayTagInput is an input type that accepts GetVirtualGatewaysVirtualGatewayTagArgs and GetVirtualGatewaysVirtualGatewayTagOutput values.
// You can construct a concrete instance of `GetVirtualGatewaysVirtualGatewayTagInput` via:
//
//	GetVirtualGatewaysVirtualGatewayTagArgs{...}
type GetVirtualGatewaysVirtualGatewayTagInput interface {
	pulumi.Input

	ToGetVirtualGatewaysVirtualGatewayTagOutput() GetVirtualGatewaysVirtualGatewayTagOutput
	ToGetVirtualGatewaysVirtualGatewayTagOutputWithContext(context.Context) GetVirtualGatewaysVirtualGatewayTagOutput
}

type GetVirtualGatewaysVirtualGatewayTagArgs struct {
	// The key of the tag, with a minimum of 1 character.
	Key pulumi.StringInput `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetVirtualGatewaysVirtualGatewayTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualGatewaysVirtualGatewayTag)(nil)).Elem()
}

func (i GetVirtualGatewaysVirtualGatewayTagArgs) ToGetVirtualGatewaysVirtualGatewayTagOutput() GetVirtualGatewaysVirtualGatewayTagOutput {
	return i.ToGetVirtualGatewaysVirtualGatewayTagOutputWithContext(context.Background())
}

func (i GetVirtualGatewaysVirtualGatewayTagArgs) ToGetVirtualGatewaysVirtualGatewayTagOutputWithContext(ctx context.Context) GetVirtualGatewaysVirtualGatewayTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualGatewaysVirtualGatewayTagOutput)
}

// GetVirtualGatewaysVirtualGatewayTagArrayInput is an input type that accepts GetVirtualGatewaysVirtualGatewayTagArray and GetVirtualGatewaysVirtualGatewayTagArrayOutput values.
// You can construct a concrete instance of `GetVirtualGatewaysVirtualGatewayTagArrayInput` via:
//
//	GetVirtualGatewaysVirtualGatewayTagArray{ GetVirtualGatewaysVirtualGatewayTagArgs{...} }
type GetVirtualGatewaysVirtualGatewayTagArrayInput interface {
	pulumi.Input

	ToGetVirtualGatewaysVirtualGatewayTagArrayOutput() GetVirtualGatewaysVirtualGatewayTagArrayOutput
	ToGetVirtualGatewaysVirtualGatewayTagArrayOutputWithContext(context.Context) GetVirtualGatewaysVirtualGatewayTagArrayOutput
}

type GetVirtualGatewaysVirtualGatewayTagArray []GetVirtualGatewaysVirtualGatewayTagInput

func (GetVirtualGatewaysVirtualGatewayTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualGatewaysVirtualGatewayTag)(nil)).Elem()
}

func (i GetVirtualGatewaysVirtualGatewayTagArray) ToGetVirtualGatewaysVirtualGatewayTagArrayOutput() GetVirtualGatewaysVirtualGatewayTagArrayOutput {
	return i.ToGetVirtualGatewaysVirtualGatewayTagArrayOutputWithContext(context.Background())
}

func (i GetVirtualGatewaysVirtualGatewayTagArray) ToGetVirtualGatewaysVirtualGatewayTagArrayOutputWithContext(ctx context.Context) GetVirtualGatewaysVirtualGatewayTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualGatewaysVirtualGatewayTagArrayOutput)
}

type GetVirtualGatewaysVirtualGatewayTagOutput struct{ *pulumi.OutputState }

func (GetVirtualGatewaysVirtualGatewayTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualGatewaysVirtualGatewayTag)(nil)).Elem()
}

func (o GetVirtualGatewaysVirtualGatewayTagOutput) ToGetVirtualGatewaysVirtualGatewayTagOutput() GetVirtualGatewaysVirtualGatewayTagOutput {
	return o
}

func (o GetVirtualGatewaysVirtualGatewayTagOutput) ToGetVirtualGatewaysVirtualGatewayTagOutputWithContext(ctx context.Context) GetVirtualGatewaysVirtualGatewayTagOutput {
	return o
}

// The key of the tag, with a minimum of 1 character.
func (o GetVirtualGatewaysVirtualGatewayTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualGatewaysVirtualGatewayTag) string { return v.Key }).(pulumi.StringOutput)
}

// The value of the tag, between 0 and 255 characters.
func (o GetVirtualGatewaysVirtualGatewayTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualGatewaysVirtualGatewayTag) string { return v.Value }).(pulumi.StringOutput)
}

type GetVirtualGatewaysVirtualGatewayTagArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualGatewaysVirtualGatewayTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualGatewaysVirtualGatewayTag)(nil)).Elem()
}

func (o GetVirtualGatewaysVirtualGatewayTagArrayOutput) ToGetVirtualGatewaysVirtualGatewayTagArrayOutput() GetVirtualGatewaysVirtualGatewayTagArrayOutput {
	return o
}

func (o GetVirtualGatewaysVirtualGatewayTagArrayOutput) ToGetVirtualGatewaysVirtualGatewayTagArrayOutputWithContext(ctx context.Context) GetVirtualGatewaysVirtualGatewayTagArrayOutput {
	return o
}

func (o GetVirtualGatewaysVirtualGatewayTagArrayOutput) Index(i pulumi.IntInput) GetVirtualGatewaysVirtualGatewayTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualGatewaysVirtualGatewayTag {
		return vs[0].([]GetVirtualGatewaysVirtualGatewayTag)[vs[1].(int)]
	}).(GetVirtualGatewaysVirtualGatewayTagOutput)
}

type GetVmActionsOnNextBoot struct {
	SecureBoot string `pulumi:"secureBoot"`
}

// GetVmActionsOnNextBootInput is an input type that accepts GetVmActionsOnNextBootArgs and GetVmActionsOnNextBootOutput values.
// You can construct a concrete instance of `GetVmActionsOnNextBootInput` via:
//
//	GetVmActionsOnNextBootArgs{...}
type GetVmActionsOnNextBootInput interface {
	pulumi.Input

	ToGetVmActionsOnNextBootOutput() GetVmActionsOnNextBootOutput
	ToGetVmActionsOnNextBootOutputWithContext(context.Context) GetVmActionsOnNextBootOutput
}

type GetVmActionsOnNextBootArgs struct {
	SecureBoot pulumi.StringInput `pulumi:"secureBoot"`
}

func (GetVmActionsOnNextBootArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVmActionsOnNextBoot)(nil)).Elem()
}

func (i GetVmActionsOnNextBootArgs) ToGetVmActionsOnNextBootOutput() GetVmActionsOnNextBootOutput {
	return i.ToGetVmActionsOnNextBootOutputWithContext(context.Background())
}

func (i GetVmActionsOnNextBootArgs) ToGetVmActionsOnNextBootOutputWithContext(ctx context.Context) GetVmActionsOnNextBootOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVmActionsOnNextBootOutput)
}

// GetVmActionsOnNextBootArrayInput is an input type that accepts GetVmActionsOnNextBootArray and GetVmActionsOnNextBootArrayOutput values.
// You can construct a concrete instance of `GetVmActionsOnNextBootArrayInput` via:
//
//	GetVmActionsOnNextBootArray{ GetVmActionsOnNextBootArgs{...} }
type GetVmActionsOnNextBootArrayInput interface {
	pulumi.Input

	ToGetVmActionsOnNextBootArrayOutput() GetVmActionsOnNextBootArrayOutput
	ToGetVmActionsOnNextBootArrayOutputWithContext(context.Context) GetVmActionsOnNextBootArrayOutput
}

type GetVmActionsOnNextBootArray []GetVmActionsOnNextBootInput

func (GetVmActionsOnNextBootArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVmActionsOnNextBoot)(nil)).Elem()
}

func (i GetVmActionsOnNextBootArray) ToGetVmActionsOnNextBootArrayOutput() GetVmActionsOnNextBootArrayOutput {
	return i.ToGetVmActionsOnNextBootArrayOutputWithContext(context.Background())
}

func (i GetVmActionsOnNextBootArray) ToGetVmActionsOnNextBootArrayOutputWithContext(ctx context.Context) GetVmActionsOnNextBootArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVmActionsOnNextBootArrayOutput)
}

type GetVmActionsOnNextBootOutput struct{ *pulumi.OutputState }

func (GetVmActionsOnNextBootOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVmActionsOnNextBoot)(nil)).Elem()
}

func (o GetVmActionsOnNextBootOutput) ToGetVmActionsOnNextBootOutput() GetVmActionsOnNextBootOutput {
	return o
}

func (o GetVmActionsOnNextBootOutput) ToGetVmActionsOnNextBootOutputWithContext(ctx context.Context) GetVmActionsOnNextBootOutput {
	return o
}

func (o GetVmActionsOnNextBootOutput) SecureBoot() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmActionsOnNextBoot) string { return v.SecureBoot }).(pulumi.StringOutput)
}

type GetVmActionsOnNextBootArrayOutput struct{ *pulumi.OutputState }

func (GetVmActionsOnNextBootArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVmActionsOnNextBoot)(nil)).Elem()
}

func (o GetVmActionsOnNextBootArrayOutput) ToGetVmActionsOnNextBootArrayOutput() GetVmActionsOnNextBootArrayOutput {
	return o
}

func (o GetVmActionsOnNextBootArrayOutput) ToGetVmActionsOnNextBootArrayOutputWithContext(ctx context.Context) GetVmActionsOnNextBootArrayOutput {
	return o
}

func (o GetVmActionsOnNextBootArrayOutput) Index(i pulumi.IntInput) GetVmActionsOnNextBootOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVmActionsOnNextBoot {
		return vs[0].([]GetVmActionsOnNextBoot)[vs[1].(int)]
	}).(GetVmActionsOnNextBootOutput)
}

type GetVmBlockDeviceMappingsCreated struct {
	// Information about the created BSU volume.
	Bsus []GetVmBlockDeviceMappingsCreatedBsus `pulumi:"bsus"`
	// The name of the device.
	DeviceName string `pulumi:"deviceName"`
}

// GetVmBlockDeviceMappingsCreatedInput is an input type that accepts GetVmBlockDeviceMappingsCreatedArgs and GetVmBlockDeviceMappingsCreatedOutput values.
// You can construct a concrete instance of `GetVmBlockDeviceMappingsCreatedInput` via:
//
//	GetVmBlockDeviceMappingsCreatedArgs{...}
type GetVmBlockDeviceMappingsCreatedInput interface {
	pulumi.Input

	ToGetVmBlockDeviceMappingsCreatedOutput() GetVmBlockDeviceMappingsCreatedOutput
	ToGetVmBlockDeviceMappingsCreatedOutputWithContext(context.Context) GetVmBlockDeviceMappingsCreatedOutput
}

type GetVmBlockDeviceMappingsCreatedArgs struct {
	// Information about the created BSU volume.
	Bsus GetVmBlockDeviceMappingsCreatedBsusArrayInput `pulumi:"bsus"`
	// The name of the device.
	DeviceName pulumi.StringInput `pulumi:"deviceName"`
}

func (GetVmBlockDeviceMappingsCreatedArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVmBlockDeviceMappingsCreated)(nil)).Elem()
}

func (i GetVmBlockDeviceMappingsCreatedArgs) ToGetVmBlockDeviceMappingsCreatedOutput() GetVmBlockDeviceMappingsCreatedOutput {
	return i.ToGetVmBlockDeviceMappingsCreatedOutputWithContext(context.Background())
}

func (i GetVmBlockDeviceMappingsCreatedArgs) ToGetVmBlockDeviceMappingsCreatedOutputWithContext(ctx context.Context) GetVmBlockDeviceMappingsCreatedOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVmBlockDeviceMappingsCreatedOutput)
}

// GetVmBlockDeviceMappingsCreatedArrayInput is an input type that accepts GetVmBlockDeviceMappingsCreatedArray and GetVmBlockDeviceMappingsCreatedArrayOutput values.
// You can construct a concrete instance of `GetVmBlockDeviceMappingsCreatedArrayInput` via:
//
//	GetVmBlockDeviceMappingsCreatedArray{ GetVmBlockDeviceMappingsCreatedArgs{...} }
type GetVmBlockDeviceMappingsCreatedArrayInput interface {
	pulumi.Input

	ToGetVmBlockDeviceMappingsCreatedArrayOutput() GetVmBlockDeviceMappingsCreatedArrayOutput
	ToGetVmBlockDeviceMappingsCreatedArrayOutputWithContext(context.Context) GetVmBlockDeviceMappingsCreatedArrayOutput
}

type GetVmBlockDeviceMappingsCreatedArray []GetVmBlockDeviceMappingsCreatedInput

func (GetVmBlockDeviceMappingsCreatedArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVmBlockDeviceMappingsCreated)(nil)).Elem()
}

func (i GetVmBlockDeviceMappingsCreatedArray) ToGetVmBlockDeviceMappingsCreatedArrayOutput() GetVmBlockDeviceMappingsCreatedArrayOutput {
	return i.ToGetVmBlockDeviceMappingsCreatedArrayOutputWithContext(context.Background())
}

func (i GetVmBlockDeviceMappingsCreatedArray) ToGetVmBlockDeviceMappingsCreatedArrayOutputWithContext(ctx context.Context) GetVmBlockDeviceMappingsCreatedArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVmBlockDeviceMappingsCreatedArrayOutput)
}

type GetVmBlockDeviceMappingsCreatedOutput struct{ *pulumi.OutputState }

func (GetVmBlockDeviceMappingsCreatedOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVmBlockDeviceMappingsCreated)(nil)).Elem()
}

func (o GetVmBlockDeviceMappingsCreatedOutput) ToGetVmBlockDeviceMappingsCreatedOutput() GetVmBlockDeviceMappingsCreatedOutput {
	return o
}

func (o GetVmBlockDeviceMappingsCreatedOutput) ToGetVmBlockDeviceMappingsCreatedOutputWithContext(ctx context.Context) GetVmBlockDeviceMappingsCreatedOutput {
	return o
}

// Information about the created BSU volume.
func (o GetVmBlockDeviceMappingsCreatedOutput) Bsus() GetVmBlockDeviceMappingsCreatedBsusArrayOutput {
	return o.ApplyT(func(v GetVmBlockDeviceMappingsCreated) []GetVmBlockDeviceMappingsCreatedBsus { return v.Bsus }).(GetVmBlockDeviceMappingsCreatedBsusArrayOutput)
}

// The name of the device.
func (o GetVmBlockDeviceMappingsCreatedOutput) DeviceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmBlockDeviceMappingsCreated) string { return v.DeviceName }).(pulumi.StringOutput)
}

type GetVmBlockDeviceMappingsCreatedArrayOutput struct{ *pulumi.OutputState }

func (GetVmBlockDeviceMappingsCreatedArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVmBlockDeviceMappingsCreated)(nil)).Elem()
}

func (o GetVmBlockDeviceMappingsCreatedArrayOutput) ToGetVmBlockDeviceMappingsCreatedArrayOutput() GetVmBlockDeviceMappingsCreatedArrayOutput {
	return o
}

func (o GetVmBlockDeviceMappingsCreatedArrayOutput) ToGetVmBlockDeviceMappingsCreatedArrayOutputWithContext(ctx context.Context) GetVmBlockDeviceMappingsCreatedArrayOutput {
	return o
}

func (o GetVmBlockDeviceMappingsCreatedArrayOutput) Index(i pulumi.IntInput) GetVmBlockDeviceMappingsCreatedOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVmBlockDeviceMappingsCreated {
		return vs[0].([]GetVmBlockDeviceMappingsCreated)[vs[1].(int)]
	}).(GetVmBlockDeviceMappingsCreatedOutput)
}

type GetVmBlockDeviceMappingsCreatedBsus struct {
	// If true, the NIC is deleted when the VM is terminated.
	DeleteOnVmDeletion bool `pulumi:"deleteOnVmDeletion"`
	// The date and time (UTC) at which the volume was attached to the VM, in ISO 8601 date-time format.
	LinkDate string `pulumi:"linkDate"`
	// The state of the VM (`pending` \| `running` \| `stopping` \| `stopped` \| `shutting-down` \| `terminated` \| `quarantine`).
	State string `pulumi:"state"`
	// One or more tags associated with the VM.
	Tags []GetVmBlockDeviceMappingsCreatedBsusTag `pulumi:"tags"`
	// The ID of the volume.
	VolumeId string `pulumi:"volumeId"`
}

// GetVmBlockDeviceMappingsCreatedBsusInput is an input type that accepts GetVmBlockDeviceMappingsCreatedBsusArgs and GetVmBlockDeviceMappingsCreatedBsusOutput values.
// You can construct a concrete instance of `GetVmBlockDeviceMappingsCreatedBsusInput` via:
//
//	GetVmBlockDeviceMappingsCreatedBsusArgs{...}
type GetVmBlockDeviceMappingsCreatedBsusInput interface {
	pulumi.Input

	ToGetVmBlockDeviceMappingsCreatedBsusOutput() GetVmBlockDeviceMappingsCreatedBsusOutput
	ToGetVmBlockDeviceMappingsCreatedBsusOutputWithContext(context.Context) GetVmBlockDeviceMappingsCreatedBsusOutput
}

type GetVmBlockDeviceMappingsCreatedBsusArgs struct {
	// If true, the NIC is deleted when the VM is terminated.
	DeleteOnVmDeletion pulumi.BoolInput `pulumi:"deleteOnVmDeletion"`
	// The date and time (UTC) at which the volume was attached to the VM, in ISO 8601 date-time format.
	LinkDate pulumi.StringInput `pulumi:"linkDate"`
	// The state of the VM (`pending` \| `running` \| `stopping` \| `stopped` \| `shutting-down` \| `terminated` \| `quarantine`).
	State pulumi.StringInput `pulumi:"state"`
	// One or more tags associated with the VM.
	Tags GetVmBlockDeviceMappingsCreatedBsusTagArrayInput `pulumi:"tags"`
	// The ID of the volume.
	VolumeId pulumi.StringInput `pulumi:"volumeId"`
}

func (GetVmBlockDeviceMappingsCreatedBsusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVmBlockDeviceMappingsCreatedBsus)(nil)).Elem()
}

func (i GetVmBlockDeviceMappingsCreatedBsusArgs) ToGetVmBlockDeviceMappingsCreatedBsusOutput() GetVmBlockDeviceMappingsCreatedBsusOutput {
	return i.ToGetVmBlockDeviceMappingsCreatedBsusOutputWithContext(context.Background())
}

func (i GetVmBlockDeviceMappingsCreatedBsusArgs) ToGetVmBlockDeviceMappingsCreatedBsusOutputWithContext(ctx context.Context) GetVmBlockDeviceMappingsCreatedBsusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVmBlockDeviceMappingsCreatedBsusOutput)
}

// GetVmBlockDeviceMappingsCreatedBsusArrayInput is an input type that accepts GetVmBlockDeviceMappingsCreatedBsusArray and GetVmBlockDeviceMappingsCreatedBsusArrayOutput values.
// You can construct a concrete instance of `GetVmBlockDeviceMappingsCreatedBsusArrayInput` via:
//
//	GetVmBlockDeviceMappingsCreatedBsusArray{ GetVmBlockDeviceMappingsCreatedBsusArgs{...} }
type GetVmBlockDeviceMappingsCreatedBsusArrayInput interface {
	pulumi.Input

	ToGetVmBlockDeviceMappingsCreatedBsusArrayOutput() GetVmBlockDeviceMappingsCreatedBsusArrayOutput
	ToGetVmBlockDeviceMappingsCreatedBsusArrayOutputWithContext(context.Context) GetVmBlockDeviceMappingsCreatedBsusArrayOutput
}

type GetVmBlockDeviceMappingsCreatedBsusArray []GetVmBlockDeviceMappingsCreatedBsusInput

func (GetVmBlockDeviceMappingsCreatedBsusArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVmBlockDeviceMappingsCreatedBsus)(nil)).Elem()
}

func (i GetVmBlockDeviceMappingsCreatedBsusArray) ToGetVmBlockDeviceMappingsCreatedBsusArrayOutput() GetVmBlockDeviceMappingsCreatedBsusArrayOutput {
	return i.ToGetVmBlockDeviceMappingsCreatedBsusArrayOutputWithContext(context.Background())
}

func (i GetVmBlockDeviceMappingsCreatedBsusArray) ToGetVmBlockDeviceMappingsCreatedBsusArrayOutputWithContext(ctx context.Context) GetVmBlockDeviceMappingsCreatedBsusArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVmBlockDeviceMappingsCreatedBsusArrayOutput)
}

type GetVmBlockDeviceMappingsCreatedBsusOutput struct{ *pulumi.OutputState }

func (GetVmBlockDeviceMappingsCreatedBsusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVmBlockDeviceMappingsCreatedBsus)(nil)).Elem()
}

func (o GetVmBlockDeviceMappingsCreatedBsusOutput) ToGetVmBlockDeviceMappingsCreatedBsusOutput() GetVmBlockDeviceMappingsCreatedBsusOutput {
	return o
}

func (o GetVmBlockDeviceMappingsCreatedBsusOutput) ToGetVmBlockDeviceMappingsCreatedBsusOutputWithContext(ctx context.Context) GetVmBlockDeviceMappingsCreatedBsusOutput {
	return o
}

// If true, the NIC is deleted when the VM is terminated.
func (o GetVmBlockDeviceMappingsCreatedBsusOutput) DeleteOnVmDeletion() pulumi.BoolOutput {
	return o.ApplyT(func(v GetVmBlockDeviceMappingsCreatedBsus) bool { return v.DeleteOnVmDeletion }).(pulumi.BoolOutput)
}

// The date and time (UTC) at which the volume was attached to the VM, in ISO 8601 date-time format.
func (o GetVmBlockDeviceMappingsCreatedBsusOutput) LinkDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmBlockDeviceMappingsCreatedBsus) string { return v.LinkDate }).(pulumi.StringOutput)
}

// The state of the VM (`pending` \| `running` \| `stopping` \| `stopped` \| `shutting-down` \| `terminated` \| `quarantine`).
func (o GetVmBlockDeviceMappingsCreatedBsusOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmBlockDeviceMappingsCreatedBsus) string { return v.State }).(pulumi.StringOutput)
}

// One or more tags associated with the VM.
func (o GetVmBlockDeviceMappingsCreatedBsusOutput) Tags() GetVmBlockDeviceMappingsCreatedBsusTagArrayOutput {
	return o.ApplyT(func(v GetVmBlockDeviceMappingsCreatedBsus) []GetVmBlockDeviceMappingsCreatedBsusTag { return v.Tags }).(GetVmBlockDeviceMappingsCreatedBsusTagArrayOutput)
}

// The ID of the volume.
func (o GetVmBlockDeviceMappingsCreatedBsusOutput) VolumeId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmBlockDeviceMappingsCreatedBsus) string { return v.VolumeId }).(pulumi.StringOutput)
}

type GetVmBlockDeviceMappingsCreatedBsusArrayOutput struct{ *pulumi.OutputState }

func (GetVmBlockDeviceMappingsCreatedBsusArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVmBlockDeviceMappingsCreatedBsus)(nil)).Elem()
}

func (o GetVmBlockDeviceMappingsCreatedBsusArrayOutput) ToGetVmBlockDeviceMappingsCreatedBsusArrayOutput() GetVmBlockDeviceMappingsCreatedBsusArrayOutput {
	return o
}

func (o GetVmBlockDeviceMappingsCreatedBsusArrayOutput) ToGetVmBlockDeviceMappingsCreatedBsusArrayOutputWithContext(ctx context.Context) GetVmBlockDeviceMappingsCreatedBsusArrayOutput {
	return o
}

func (o GetVmBlockDeviceMappingsCreatedBsusArrayOutput) Index(i pulumi.IntInput) GetVmBlockDeviceMappingsCreatedBsusOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVmBlockDeviceMappingsCreatedBsus {
		return vs[0].([]GetVmBlockDeviceMappingsCreatedBsus)[vs[1].(int)]
	}).(GetVmBlockDeviceMappingsCreatedBsusOutput)
}

type GetVmBlockDeviceMappingsCreatedBsusTag struct {
	// The key of the tag, with a minimum of 1 character.
	Key string `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value string `pulumi:"value"`
}

// GetVmBlockDeviceMappingsCreatedBsusTagInput is an input type that accepts GetVmBlockDeviceMappingsCreatedBsusTagArgs and GetVmBlockDeviceMappingsCreatedBsusTagOutput values.
// You can construct a concrete instance of `GetVmBlockDeviceMappingsCreatedBsusTagInput` via:
//
//	GetVmBlockDeviceMappingsCreatedBsusTagArgs{...}
type GetVmBlockDeviceMappingsCreatedBsusTagInput interface {
	pulumi.Input

	ToGetVmBlockDeviceMappingsCreatedBsusTagOutput() GetVmBlockDeviceMappingsCreatedBsusTagOutput
	ToGetVmBlockDeviceMappingsCreatedBsusTagOutputWithContext(context.Context) GetVmBlockDeviceMappingsCreatedBsusTagOutput
}

type GetVmBlockDeviceMappingsCreatedBsusTagArgs struct {
	// The key of the tag, with a minimum of 1 character.
	Key pulumi.StringInput `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetVmBlockDeviceMappingsCreatedBsusTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVmBlockDeviceMappingsCreatedBsusTag)(nil)).Elem()
}

func (i GetVmBlockDeviceMappingsCreatedBsusTagArgs) ToGetVmBlockDeviceMappingsCreatedBsusTagOutput() GetVmBlockDeviceMappingsCreatedBsusTagOutput {
	return i.ToGetVmBlockDeviceMappingsCreatedBsusTagOutputWithContext(context.Background())
}

func (i GetVmBlockDeviceMappingsCreatedBsusTagArgs) ToGetVmBlockDeviceMappingsCreatedBsusTagOutputWithContext(ctx context.Context) GetVmBlockDeviceMappingsCreatedBsusTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVmBlockDeviceMappingsCreatedBsusTagOutput)
}

// GetVmBlockDeviceMappingsCreatedBsusTagArrayInput is an input type that accepts GetVmBlockDeviceMappingsCreatedBsusTagArray and GetVmBlockDeviceMappingsCreatedBsusTagArrayOutput values.
// You can construct a concrete instance of `GetVmBlockDeviceMappingsCreatedBsusTagArrayInput` via:
//
//	GetVmBlockDeviceMappingsCreatedBsusTagArray{ GetVmBlockDeviceMappingsCreatedBsusTagArgs{...} }
type GetVmBlockDeviceMappingsCreatedBsusTagArrayInput interface {
	pulumi.Input

	ToGetVmBlockDeviceMappingsCreatedBsusTagArrayOutput() GetVmBlockDeviceMappingsCreatedBsusTagArrayOutput
	ToGetVmBlockDeviceMappingsCreatedBsusTagArrayOutputWithContext(context.Context) GetVmBlockDeviceMappingsCreatedBsusTagArrayOutput
}

type GetVmBlockDeviceMappingsCreatedBsusTagArray []GetVmBlockDeviceMappingsCreatedBsusTagInput

func (GetVmBlockDeviceMappingsCreatedBsusTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVmBlockDeviceMappingsCreatedBsusTag)(nil)).Elem()
}

func (i GetVmBlockDeviceMappingsCreatedBsusTagArray) ToGetVmBlockDeviceMappingsCreatedBsusTagArrayOutput() GetVmBlockDeviceMappingsCreatedBsusTagArrayOutput {
	return i.ToGetVmBlockDeviceMappingsCreatedBsusTagArrayOutputWithContext(context.Background())
}

func (i GetVmBlockDeviceMappingsCreatedBsusTagArray) ToGetVmBlockDeviceMappingsCreatedBsusTagArrayOutputWithContext(ctx context.Context) GetVmBlockDeviceMappingsCreatedBsusTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVmBlockDeviceMappingsCreatedBsusTagArrayOutput)
}

type GetVmBlockDeviceMappingsCreatedBsusTagOutput struct{ *pulumi.OutputState }

func (GetVmBlockDeviceMappingsCreatedBsusTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVmBlockDeviceMappingsCreatedBsusTag)(nil)).Elem()
}

func (o GetVmBlockDeviceMappingsCreatedBsusTagOutput) ToGetVmBlockDeviceMappingsCreatedBsusTagOutput() GetVmBlockDeviceMappingsCreatedBsusTagOutput {
	return o
}

func (o GetVmBlockDeviceMappingsCreatedBsusTagOutput) ToGetVmBlockDeviceMappingsCreatedBsusTagOutputWithContext(ctx context.Context) GetVmBlockDeviceMappingsCreatedBsusTagOutput {
	return o
}

// The key of the tag, with a minimum of 1 character.
func (o GetVmBlockDeviceMappingsCreatedBsusTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmBlockDeviceMappingsCreatedBsusTag) string { return v.Key }).(pulumi.StringOutput)
}

// The value of the tag, between 0 and 255 characters.
func (o GetVmBlockDeviceMappingsCreatedBsusTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmBlockDeviceMappingsCreatedBsusTag) string { return v.Value }).(pulumi.StringOutput)
}

type GetVmBlockDeviceMappingsCreatedBsusTagArrayOutput struct{ *pulumi.OutputState }

func (GetVmBlockDeviceMappingsCreatedBsusTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVmBlockDeviceMappingsCreatedBsusTag)(nil)).Elem()
}

func (o GetVmBlockDeviceMappingsCreatedBsusTagArrayOutput) ToGetVmBlockDeviceMappingsCreatedBsusTagArrayOutput() GetVmBlockDeviceMappingsCreatedBsusTagArrayOutput {
	return o
}

func (o GetVmBlockDeviceMappingsCreatedBsusTagArrayOutput) ToGetVmBlockDeviceMappingsCreatedBsusTagArrayOutputWithContext(ctx context.Context) GetVmBlockDeviceMappingsCreatedBsusTagArrayOutput {
	return o
}

func (o GetVmBlockDeviceMappingsCreatedBsusTagArrayOutput) Index(i pulumi.IntInput) GetVmBlockDeviceMappingsCreatedBsusTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVmBlockDeviceMappingsCreatedBsusTag {
		return vs[0].([]GetVmBlockDeviceMappingsCreatedBsusTag)[vs[1].(int)]
	}).(GetVmBlockDeviceMappingsCreatedBsusTagOutput)
}

type GetVmFilter struct {
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// GetVmFilterInput is an input type that accepts GetVmFilterArgs and GetVmFilterOutput values.
// You can construct a concrete instance of `GetVmFilterInput` via:
//
//	GetVmFilterArgs{...}
type GetVmFilterInput interface {
	pulumi.Input

	ToGetVmFilterOutput() GetVmFilterOutput
	ToGetVmFilterOutputWithContext(context.Context) GetVmFilterOutput
}

type GetVmFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetVmFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVmFilter)(nil)).Elem()
}

func (i GetVmFilterArgs) ToGetVmFilterOutput() GetVmFilterOutput {
	return i.ToGetVmFilterOutputWithContext(context.Background())
}

func (i GetVmFilterArgs) ToGetVmFilterOutputWithContext(ctx context.Context) GetVmFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVmFilterOutput)
}

// GetVmFilterArrayInput is an input type that accepts GetVmFilterArray and GetVmFilterArrayOutput values.
// You can construct a concrete instance of `GetVmFilterArrayInput` via:
//
//	GetVmFilterArray{ GetVmFilterArgs{...} }
type GetVmFilterArrayInput interface {
	pulumi.Input

	ToGetVmFilterArrayOutput() GetVmFilterArrayOutput
	ToGetVmFilterArrayOutputWithContext(context.Context) GetVmFilterArrayOutput
}

type GetVmFilterArray []GetVmFilterInput

func (GetVmFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVmFilter)(nil)).Elem()
}

func (i GetVmFilterArray) ToGetVmFilterArrayOutput() GetVmFilterArrayOutput {
	return i.ToGetVmFilterArrayOutputWithContext(context.Background())
}

func (i GetVmFilterArray) ToGetVmFilterArrayOutputWithContext(ctx context.Context) GetVmFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVmFilterArrayOutput)
}

type GetVmFilterOutput struct{ *pulumi.OutputState }

func (GetVmFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVmFilter)(nil)).Elem()
}

func (o GetVmFilterOutput) ToGetVmFilterOutput() GetVmFilterOutput {
	return o
}

func (o GetVmFilterOutput) ToGetVmFilterOutputWithContext(ctx context.Context) GetVmFilterOutput {
	return o
}

func (o GetVmFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetVmFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetVmFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetVmFilterArrayOutput struct{ *pulumi.OutputState }

func (GetVmFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVmFilter)(nil)).Elem()
}

func (o GetVmFilterArrayOutput) ToGetVmFilterArrayOutput() GetVmFilterArrayOutput {
	return o
}

func (o GetVmFilterArrayOutput) ToGetVmFilterArrayOutputWithContext(ctx context.Context) GetVmFilterArrayOutput {
	return o
}

func (o GetVmFilterArrayOutput) Index(i pulumi.IntInput) GetVmFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVmFilter {
		return vs[0].([]GetVmFilter)[vs[1].(int)]
	}).(GetVmFilterOutput)
}

type GetVmNic struct {
	// The account ID of the owner of the NIC.
	AccountId string `pulumi:"accountId"`
	// If true, the NIC is deleted when the VM is terminated.
	DeleteOnVmDeletion bool `pulumi:"deleteOnVmDeletion"`
	// The description of the NIC.
	Description string `pulumi:"description"`
	// The device index for the NIC attachment (between `1` and `7`, both included).
	DeviceNumber int `pulumi:"deviceNumber"`
	// (Net only) If true, the source/destination check is enabled. If false, it is disabled.
	IsSourceDestChecked bool `pulumi:"isSourceDestChecked"`
	// Information about the network interface card (NIC).
	LinkNics []GetVmNicLinkNic `pulumi:"linkNics"`
	// Information about the public IP associated with the NIC.
	LinkPublicIps []GetVmNicLinkPublicIp `pulumi:"linkPublicIps"`
	// The Media Access Control (MAC) address of the NIC.
	MacAddress string `pulumi:"macAddress"`
	// The ID of the Net for the NIC.
	NetId string `pulumi:"netId"`
	// The ID of the NIC.
	NicId string `pulumi:"nicId"`
	// The name of the private DNS.
	PrivateDnsName string `pulumi:"privateDnsName"`
	// The private IP or IPs of the NIC.
	PrivateIps              []GetVmNicPrivateIp `pulumi:"privateIps"`
	SecondaryPrivateIpCount int                 `pulumi:"secondaryPrivateIpCount"`
	// The IDs of the security groups for the VMs (only in the public Cloud).
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// One or more security groups associated with the VM.
	SecurityGroups      []GetVmNicSecurityGroup `pulumi:"securityGroups"`
	SecurityGroupsNames []string                `pulumi:"securityGroupsNames"`
	// The state of the VM (`pending` \| `running` \| `stopping` \| `stopped` \| `shutting-down` \| `terminated` \| `quarantine`).
	State string `pulumi:"state"`
	// The ID of the Subnet for the VM.
	SubnetId string `pulumi:"subnetId"`
}

// GetVmNicInput is an input type that accepts GetVmNicArgs and GetVmNicOutput values.
// You can construct a concrete instance of `GetVmNicInput` via:
//
//	GetVmNicArgs{...}
type GetVmNicInput interface {
	pulumi.Input

	ToGetVmNicOutput() GetVmNicOutput
	ToGetVmNicOutputWithContext(context.Context) GetVmNicOutput
}

type GetVmNicArgs struct {
	// The account ID of the owner of the NIC.
	AccountId pulumi.StringInput `pulumi:"accountId"`
	// If true, the NIC is deleted when the VM is terminated.
	DeleteOnVmDeletion pulumi.BoolInput `pulumi:"deleteOnVmDeletion"`
	// The description of the NIC.
	Description pulumi.StringInput `pulumi:"description"`
	// The device index for the NIC attachment (between `1` and `7`, both included).
	DeviceNumber pulumi.IntInput `pulumi:"deviceNumber"`
	// (Net only) If true, the source/destination check is enabled. If false, it is disabled.
	IsSourceDestChecked pulumi.BoolInput `pulumi:"isSourceDestChecked"`
	// Information about the network interface card (NIC).
	LinkNics GetVmNicLinkNicArrayInput `pulumi:"linkNics"`
	// Information about the public IP associated with the NIC.
	LinkPublicIps GetVmNicLinkPublicIpArrayInput `pulumi:"linkPublicIps"`
	// The Media Access Control (MAC) address of the NIC.
	MacAddress pulumi.StringInput `pulumi:"macAddress"`
	// The ID of the Net for the NIC.
	NetId pulumi.StringInput `pulumi:"netId"`
	// The ID of the NIC.
	NicId pulumi.StringInput `pulumi:"nicId"`
	// The name of the private DNS.
	PrivateDnsName pulumi.StringInput `pulumi:"privateDnsName"`
	// The private IP or IPs of the NIC.
	PrivateIps              GetVmNicPrivateIpArrayInput `pulumi:"privateIps"`
	SecondaryPrivateIpCount pulumi.IntInput             `pulumi:"secondaryPrivateIpCount"`
	// The IDs of the security groups for the VMs (only in the public Cloud).
	SecurityGroupIds pulumi.StringArrayInput `pulumi:"securityGroupIds"`
	// One or more security groups associated with the VM.
	SecurityGroups      GetVmNicSecurityGroupArrayInput `pulumi:"securityGroups"`
	SecurityGroupsNames pulumi.StringArrayInput         `pulumi:"securityGroupsNames"`
	// The state of the VM (`pending` \| `running` \| `stopping` \| `stopped` \| `shutting-down` \| `terminated` \| `quarantine`).
	State pulumi.StringInput `pulumi:"state"`
	// The ID of the Subnet for the VM.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
}

func (GetVmNicArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVmNic)(nil)).Elem()
}

func (i GetVmNicArgs) ToGetVmNicOutput() GetVmNicOutput {
	return i.ToGetVmNicOutputWithContext(context.Background())
}

func (i GetVmNicArgs) ToGetVmNicOutputWithContext(ctx context.Context) GetVmNicOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVmNicOutput)
}

// GetVmNicArrayInput is an input type that accepts GetVmNicArray and GetVmNicArrayOutput values.
// You can construct a concrete instance of `GetVmNicArrayInput` via:
//
//	GetVmNicArray{ GetVmNicArgs{...} }
type GetVmNicArrayInput interface {
	pulumi.Input

	ToGetVmNicArrayOutput() GetVmNicArrayOutput
	ToGetVmNicArrayOutputWithContext(context.Context) GetVmNicArrayOutput
}

type GetVmNicArray []GetVmNicInput

func (GetVmNicArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVmNic)(nil)).Elem()
}

func (i GetVmNicArray) ToGetVmNicArrayOutput() GetVmNicArrayOutput {
	return i.ToGetVmNicArrayOutputWithContext(context.Background())
}

func (i GetVmNicArray) ToGetVmNicArrayOutputWithContext(ctx context.Context) GetVmNicArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVmNicArrayOutput)
}

type GetVmNicOutput struct{ *pulumi.OutputState }

func (GetVmNicOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVmNic)(nil)).Elem()
}

func (o GetVmNicOutput) ToGetVmNicOutput() GetVmNicOutput {
	return o
}

func (o GetVmNicOutput) ToGetVmNicOutputWithContext(ctx context.Context) GetVmNicOutput {
	return o
}

// The account ID of the owner of the NIC.
func (o GetVmNicOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmNic) string { return v.AccountId }).(pulumi.StringOutput)
}

// If true, the NIC is deleted when the VM is terminated.
func (o GetVmNicOutput) DeleteOnVmDeletion() pulumi.BoolOutput {
	return o.ApplyT(func(v GetVmNic) bool { return v.DeleteOnVmDeletion }).(pulumi.BoolOutput)
}

// The description of the NIC.
func (o GetVmNicOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmNic) string { return v.Description }).(pulumi.StringOutput)
}

// The device index for the NIC attachment (between `1` and `7`, both included).
func (o GetVmNicOutput) DeviceNumber() pulumi.IntOutput {
	return o.ApplyT(func(v GetVmNic) int { return v.DeviceNumber }).(pulumi.IntOutput)
}

// (Net only) If true, the source/destination check is enabled. If false, it is disabled.
func (o GetVmNicOutput) IsSourceDestChecked() pulumi.BoolOutput {
	return o.ApplyT(func(v GetVmNic) bool { return v.IsSourceDestChecked }).(pulumi.BoolOutput)
}

// Information about the network interface card (NIC).
func (o GetVmNicOutput) LinkNics() GetVmNicLinkNicArrayOutput {
	return o.ApplyT(func(v GetVmNic) []GetVmNicLinkNic { return v.LinkNics }).(GetVmNicLinkNicArrayOutput)
}

// Information about the public IP associated with the NIC.
func (o GetVmNicOutput) LinkPublicIps() GetVmNicLinkPublicIpArrayOutput {
	return o.ApplyT(func(v GetVmNic) []GetVmNicLinkPublicIp { return v.LinkPublicIps }).(GetVmNicLinkPublicIpArrayOutput)
}

// The Media Access Control (MAC) address of the NIC.
func (o GetVmNicOutput) MacAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmNic) string { return v.MacAddress }).(pulumi.StringOutput)
}

// The ID of the Net for the NIC.
func (o GetVmNicOutput) NetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmNic) string { return v.NetId }).(pulumi.StringOutput)
}

// The ID of the NIC.
func (o GetVmNicOutput) NicId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmNic) string { return v.NicId }).(pulumi.StringOutput)
}

// The name of the private DNS.
func (o GetVmNicOutput) PrivateDnsName() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmNic) string { return v.PrivateDnsName }).(pulumi.StringOutput)
}

// The private IP or IPs of the NIC.
func (o GetVmNicOutput) PrivateIps() GetVmNicPrivateIpArrayOutput {
	return o.ApplyT(func(v GetVmNic) []GetVmNicPrivateIp { return v.PrivateIps }).(GetVmNicPrivateIpArrayOutput)
}

func (o GetVmNicOutput) SecondaryPrivateIpCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetVmNic) int { return v.SecondaryPrivateIpCount }).(pulumi.IntOutput)
}

// The IDs of the security groups for the VMs (only in the public Cloud).
func (o GetVmNicOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetVmNic) []string { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

// One or more security groups associated with the VM.
func (o GetVmNicOutput) SecurityGroups() GetVmNicSecurityGroupArrayOutput {
	return o.ApplyT(func(v GetVmNic) []GetVmNicSecurityGroup { return v.SecurityGroups }).(GetVmNicSecurityGroupArrayOutput)
}

func (o GetVmNicOutput) SecurityGroupsNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetVmNic) []string { return v.SecurityGroupsNames }).(pulumi.StringArrayOutput)
}

// The state of the VM (`pending` \| `running` \| `stopping` \| `stopped` \| `shutting-down` \| `terminated` \| `quarantine`).
func (o GetVmNicOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmNic) string { return v.State }).(pulumi.StringOutput)
}

// The ID of the Subnet for the VM.
func (o GetVmNicOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmNic) string { return v.SubnetId }).(pulumi.StringOutput)
}

type GetVmNicArrayOutput struct{ *pulumi.OutputState }

func (GetVmNicArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVmNic)(nil)).Elem()
}

func (o GetVmNicArrayOutput) ToGetVmNicArrayOutput() GetVmNicArrayOutput {
	return o
}

func (o GetVmNicArrayOutput) ToGetVmNicArrayOutputWithContext(ctx context.Context) GetVmNicArrayOutput {
	return o
}

func (o GetVmNicArrayOutput) Index(i pulumi.IntInput) GetVmNicOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVmNic {
		return vs[0].([]GetVmNic)[vs[1].(int)]
	}).(GetVmNicOutput)
}

type GetVmNicLinkNic struct {
	// If true, the NIC is deleted when the VM is terminated.
	DeleteOnVmDeletion bool `pulumi:"deleteOnVmDeletion"`
	// The device index for the NIC attachment (between `1` and `7`, both included).
	DeviceNumber string `pulumi:"deviceNumber"`
	// The ID of the NIC to attach.
	LinkNicId string `pulumi:"linkNicId"`
	// The state of the VM (`pending` \| `running` \| `stopping` \| `stopped` \| `shutting-down` \| `terminated` \| `quarantine`).
	State string `pulumi:"state"`
}

// GetVmNicLinkNicInput is an input type that accepts GetVmNicLinkNicArgs and GetVmNicLinkNicOutput values.
// You can construct a concrete instance of `GetVmNicLinkNicInput` via:
//
//	GetVmNicLinkNicArgs{...}
type GetVmNicLinkNicInput interface {
	pulumi.Input

	ToGetVmNicLinkNicOutput() GetVmNicLinkNicOutput
	ToGetVmNicLinkNicOutputWithContext(context.Context) GetVmNicLinkNicOutput
}

type GetVmNicLinkNicArgs struct {
	// If true, the NIC is deleted when the VM is terminated.
	DeleteOnVmDeletion pulumi.BoolInput `pulumi:"deleteOnVmDeletion"`
	// The device index for the NIC attachment (between `1` and `7`, both included).
	DeviceNumber pulumi.StringInput `pulumi:"deviceNumber"`
	// The ID of the NIC to attach.
	LinkNicId pulumi.StringInput `pulumi:"linkNicId"`
	// The state of the VM (`pending` \| `running` \| `stopping` \| `stopped` \| `shutting-down` \| `terminated` \| `quarantine`).
	State pulumi.StringInput `pulumi:"state"`
}

func (GetVmNicLinkNicArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVmNicLinkNic)(nil)).Elem()
}

func (i GetVmNicLinkNicArgs) ToGetVmNicLinkNicOutput() GetVmNicLinkNicOutput {
	return i.ToGetVmNicLinkNicOutputWithContext(context.Background())
}

func (i GetVmNicLinkNicArgs) ToGetVmNicLinkNicOutputWithContext(ctx context.Context) GetVmNicLinkNicOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVmNicLinkNicOutput)
}

// GetVmNicLinkNicArrayInput is an input type that accepts GetVmNicLinkNicArray and GetVmNicLinkNicArrayOutput values.
// You can construct a concrete instance of `GetVmNicLinkNicArrayInput` via:
//
//	GetVmNicLinkNicArray{ GetVmNicLinkNicArgs{...} }
type GetVmNicLinkNicArrayInput interface {
	pulumi.Input

	ToGetVmNicLinkNicArrayOutput() GetVmNicLinkNicArrayOutput
	ToGetVmNicLinkNicArrayOutputWithContext(context.Context) GetVmNicLinkNicArrayOutput
}

type GetVmNicLinkNicArray []GetVmNicLinkNicInput

func (GetVmNicLinkNicArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVmNicLinkNic)(nil)).Elem()
}

func (i GetVmNicLinkNicArray) ToGetVmNicLinkNicArrayOutput() GetVmNicLinkNicArrayOutput {
	return i.ToGetVmNicLinkNicArrayOutputWithContext(context.Background())
}

func (i GetVmNicLinkNicArray) ToGetVmNicLinkNicArrayOutputWithContext(ctx context.Context) GetVmNicLinkNicArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVmNicLinkNicArrayOutput)
}

type GetVmNicLinkNicOutput struct{ *pulumi.OutputState }

func (GetVmNicLinkNicOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVmNicLinkNic)(nil)).Elem()
}

func (o GetVmNicLinkNicOutput) ToGetVmNicLinkNicOutput() GetVmNicLinkNicOutput {
	return o
}

func (o GetVmNicLinkNicOutput) ToGetVmNicLinkNicOutputWithContext(ctx context.Context) GetVmNicLinkNicOutput {
	return o
}

// If true, the NIC is deleted when the VM is terminated.
func (o GetVmNicLinkNicOutput) DeleteOnVmDeletion() pulumi.BoolOutput {
	return o.ApplyT(func(v GetVmNicLinkNic) bool { return v.DeleteOnVmDeletion }).(pulumi.BoolOutput)
}

// The device index for the NIC attachment (between `1` and `7`, both included).
func (o GetVmNicLinkNicOutput) DeviceNumber() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmNicLinkNic) string { return v.DeviceNumber }).(pulumi.StringOutput)
}

// The ID of the NIC to attach.
func (o GetVmNicLinkNicOutput) LinkNicId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmNicLinkNic) string { return v.LinkNicId }).(pulumi.StringOutput)
}

// The state of the VM (`pending` \| `running` \| `stopping` \| `stopped` \| `shutting-down` \| `terminated` \| `quarantine`).
func (o GetVmNicLinkNicOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmNicLinkNic) string { return v.State }).(pulumi.StringOutput)
}

type GetVmNicLinkNicArrayOutput struct{ *pulumi.OutputState }

func (GetVmNicLinkNicArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVmNicLinkNic)(nil)).Elem()
}

func (o GetVmNicLinkNicArrayOutput) ToGetVmNicLinkNicArrayOutput() GetVmNicLinkNicArrayOutput {
	return o
}

func (o GetVmNicLinkNicArrayOutput) ToGetVmNicLinkNicArrayOutputWithContext(ctx context.Context) GetVmNicLinkNicArrayOutput {
	return o
}

func (o GetVmNicLinkNicArrayOutput) Index(i pulumi.IntInput) GetVmNicLinkNicOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVmNicLinkNic {
		return vs[0].([]GetVmNicLinkNic)[vs[1].(int)]
	}).(GetVmNicLinkNicOutput)
}

type GetVmNicLinkPublicIp struct {
	// The name of the public DNS.
	PublicDnsName string `pulumi:"publicDnsName"`
	// The public IP of the VM.
	PublicIp string `pulumi:"publicIp"`
	// The account ID of the owner of the public IP.
	PublicIpAccountId string `pulumi:"publicIpAccountId"`
}

// GetVmNicLinkPublicIpInput is an input type that accepts GetVmNicLinkPublicIpArgs and GetVmNicLinkPublicIpOutput values.
// You can construct a concrete instance of `GetVmNicLinkPublicIpInput` via:
//
//	GetVmNicLinkPublicIpArgs{...}
type GetVmNicLinkPublicIpInput interface {
	pulumi.Input

	ToGetVmNicLinkPublicIpOutput() GetVmNicLinkPublicIpOutput
	ToGetVmNicLinkPublicIpOutputWithContext(context.Context) GetVmNicLinkPublicIpOutput
}

type GetVmNicLinkPublicIpArgs struct {
	// The name of the public DNS.
	PublicDnsName pulumi.StringInput `pulumi:"publicDnsName"`
	// The public IP of the VM.
	PublicIp pulumi.StringInput `pulumi:"publicIp"`
	// The account ID of the owner of the public IP.
	PublicIpAccountId pulumi.StringInput `pulumi:"publicIpAccountId"`
}

func (GetVmNicLinkPublicIpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVmNicLinkPublicIp)(nil)).Elem()
}

func (i GetVmNicLinkPublicIpArgs) ToGetVmNicLinkPublicIpOutput() GetVmNicLinkPublicIpOutput {
	return i.ToGetVmNicLinkPublicIpOutputWithContext(context.Background())
}

func (i GetVmNicLinkPublicIpArgs) ToGetVmNicLinkPublicIpOutputWithContext(ctx context.Context) GetVmNicLinkPublicIpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVmNicLinkPublicIpOutput)
}

// GetVmNicLinkPublicIpArrayInput is an input type that accepts GetVmNicLinkPublicIpArray and GetVmNicLinkPublicIpArrayOutput values.
// You can construct a concrete instance of `GetVmNicLinkPublicIpArrayInput` via:
//
//	GetVmNicLinkPublicIpArray{ GetVmNicLinkPublicIpArgs{...} }
type GetVmNicLinkPublicIpArrayInput interface {
	pulumi.Input

	ToGetVmNicLinkPublicIpArrayOutput() GetVmNicLinkPublicIpArrayOutput
	ToGetVmNicLinkPublicIpArrayOutputWithContext(context.Context) GetVmNicLinkPublicIpArrayOutput
}

type GetVmNicLinkPublicIpArray []GetVmNicLinkPublicIpInput

func (GetVmNicLinkPublicIpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVmNicLinkPublicIp)(nil)).Elem()
}

func (i GetVmNicLinkPublicIpArray) ToGetVmNicLinkPublicIpArrayOutput() GetVmNicLinkPublicIpArrayOutput {
	return i.ToGetVmNicLinkPublicIpArrayOutputWithContext(context.Background())
}

func (i GetVmNicLinkPublicIpArray) ToGetVmNicLinkPublicIpArrayOutputWithContext(ctx context.Context) GetVmNicLinkPublicIpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVmNicLinkPublicIpArrayOutput)
}

type GetVmNicLinkPublicIpOutput struct{ *pulumi.OutputState }

func (GetVmNicLinkPublicIpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVmNicLinkPublicIp)(nil)).Elem()
}

func (o GetVmNicLinkPublicIpOutput) ToGetVmNicLinkPublicIpOutput() GetVmNicLinkPublicIpOutput {
	return o
}

func (o GetVmNicLinkPublicIpOutput) ToGetVmNicLinkPublicIpOutputWithContext(ctx context.Context) GetVmNicLinkPublicIpOutput {
	return o
}

// The name of the public DNS.
func (o GetVmNicLinkPublicIpOutput) PublicDnsName() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmNicLinkPublicIp) string { return v.PublicDnsName }).(pulumi.StringOutput)
}

// The public IP of the VM.
func (o GetVmNicLinkPublicIpOutput) PublicIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmNicLinkPublicIp) string { return v.PublicIp }).(pulumi.StringOutput)
}

// The account ID of the owner of the public IP.
func (o GetVmNicLinkPublicIpOutput) PublicIpAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmNicLinkPublicIp) string { return v.PublicIpAccountId }).(pulumi.StringOutput)
}

type GetVmNicLinkPublicIpArrayOutput struct{ *pulumi.OutputState }

func (GetVmNicLinkPublicIpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVmNicLinkPublicIp)(nil)).Elem()
}

func (o GetVmNicLinkPublicIpArrayOutput) ToGetVmNicLinkPublicIpArrayOutput() GetVmNicLinkPublicIpArrayOutput {
	return o
}

func (o GetVmNicLinkPublicIpArrayOutput) ToGetVmNicLinkPublicIpArrayOutputWithContext(ctx context.Context) GetVmNicLinkPublicIpArrayOutput {
	return o
}

func (o GetVmNicLinkPublicIpArrayOutput) Index(i pulumi.IntInput) GetVmNicLinkPublicIpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVmNicLinkPublicIp {
		return vs[0].([]GetVmNicLinkPublicIp)[vs[1].(int)]
	}).(GetVmNicLinkPublicIpOutput)
}

type GetVmNicPrivateIp struct {
	// If true, the IP is the primary private IP of the NIC.
	IsPrimary bool `pulumi:"isPrimary"`
	// Information about the public IP associated with the NIC.
	LinkPublicIps []GetVmNicPrivateIpLinkPublicIp `pulumi:"linkPublicIps"`
	// The name of the private DNS.
	PrivateDnsName string `pulumi:"privateDnsName"`
	// The primary private IP of the VM.
	PrivateIp string `pulumi:"privateIp"`
}

// GetVmNicPrivateIpInput is an input type that accepts GetVmNicPrivateIpArgs and GetVmNicPrivateIpOutput values.
// You can construct a concrete instance of `GetVmNicPrivateIpInput` via:
//
//	GetVmNicPrivateIpArgs{...}
type GetVmNicPrivateIpInput interface {
	pulumi.Input

	ToGetVmNicPrivateIpOutput() GetVmNicPrivateIpOutput
	ToGetVmNicPrivateIpOutputWithContext(context.Context) GetVmNicPrivateIpOutput
}

type GetVmNicPrivateIpArgs struct {
	// If true, the IP is the primary private IP of the NIC.
	IsPrimary pulumi.BoolInput `pulumi:"isPrimary"`
	// Information about the public IP associated with the NIC.
	LinkPublicIps GetVmNicPrivateIpLinkPublicIpArrayInput `pulumi:"linkPublicIps"`
	// The name of the private DNS.
	PrivateDnsName pulumi.StringInput `pulumi:"privateDnsName"`
	// The primary private IP of the VM.
	PrivateIp pulumi.StringInput `pulumi:"privateIp"`
}

func (GetVmNicPrivateIpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVmNicPrivateIp)(nil)).Elem()
}

func (i GetVmNicPrivateIpArgs) ToGetVmNicPrivateIpOutput() GetVmNicPrivateIpOutput {
	return i.ToGetVmNicPrivateIpOutputWithContext(context.Background())
}

func (i GetVmNicPrivateIpArgs) ToGetVmNicPrivateIpOutputWithContext(ctx context.Context) GetVmNicPrivateIpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVmNicPrivateIpOutput)
}

// GetVmNicPrivateIpArrayInput is an input type that accepts GetVmNicPrivateIpArray and GetVmNicPrivateIpArrayOutput values.
// You can construct a concrete instance of `GetVmNicPrivateIpArrayInput` via:
//
//	GetVmNicPrivateIpArray{ GetVmNicPrivateIpArgs{...} }
type GetVmNicPrivateIpArrayInput interface {
	pulumi.Input

	ToGetVmNicPrivateIpArrayOutput() GetVmNicPrivateIpArrayOutput
	ToGetVmNicPrivateIpArrayOutputWithContext(context.Context) GetVmNicPrivateIpArrayOutput
}

type GetVmNicPrivateIpArray []GetVmNicPrivateIpInput

func (GetVmNicPrivateIpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVmNicPrivateIp)(nil)).Elem()
}

func (i GetVmNicPrivateIpArray) ToGetVmNicPrivateIpArrayOutput() GetVmNicPrivateIpArrayOutput {
	return i.ToGetVmNicPrivateIpArrayOutputWithContext(context.Background())
}

func (i GetVmNicPrivateIpArray) ToGetVmNicPrivateIpArrayOutputWithContext(ctx context.Context) GetVmNicPrivateIpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVmNicPrivateIpArrayOutput)
}

type GetVmNicPrivateIpOutput struct{ *pulumi.OutputState }

func (GetVmNicPrivateIpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVmNicPrivateIp)(nil)).Elem()
}

func (o GetVmNicPrivateIpOutput) ToGetVmNicPrivateIpOutput() GetVmNicPrivateIpOutput {
	return o
}

func (o GetVmNicPrivateIpOutput) ToGetVmNicPrivateIpOutputWithContext(ctx context.Context) GetVmNicPrivateIpOutput {
	return o
}

// If true, the IP is the primary private IP of the NIC.
func (o GetVmNicPrivateIpOutput) IsPrimary() pulumi.BoolOutput {
	return o.ApplyT(func(v GetVmNicPrivateIp) bool { return v.IsPrimary }).(pulumi.BoolOutput)
}

// Information about the public IP associated with the NIC.
func (o GetVmNicPrivateIpOutput) LinkPublicIps() GetVmNicPrivateIpLinkPublicIpArrayOutput {
	return o.ApplyT(func(v GetVmNicPrivateIp) []GetVmNicPrivateIpLinkPublicIp { return v.LinkPublicIps }).(GetVmNicPrivateIpLinkPublicIpArrayOutput)
}

// The name of the private DNS.
func (o GetVmNicPrivateIpOutput) PrivateDnsName() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmNicPrivateIp) string { return v.PrivateDnsName }).(pulumi.StringOutput)
}

// The primary private IP of the VM.
func (o GetVmNicPrivateIpOutput) PrivateIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmNicPrivateIp) string { return v.PrivateIp }).(pulumi.StringOutput)
}

type GetVmNicPrivateIpArrayOutput struct{ *pulumi.OutputState }

func (GetVmNicPrivateIpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVmNicPrivateIp)(nil)).Elem()
}

func (o GetVmNicPrivateIpArrayOutput) ToGetVmNicPrivateIpArrayOutput() GetVmNicPrivateIpArrayOutput {
	return o
}

func (o GetVmNicPrivateIpArrayOutput) ToGetVmNicPrivateIpArrayOutputWithContext(ctx context.Context) GetVmNicPrivateIpArrayOutput {
	return o
}

func (o GetVmNicPrivateIpArrayOutput) Index(i pulumi.IntInput) GetVmNicPrivateIpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVmNicPrivateIp {
		return vs[0].([]GetVmNicPrivateIp)[vs[1].(int)]
	}).(GetVmNicPrivateIpOutput)
}

type GetVmNicPrivateIpLinkPublicIp struct {
	// The name of the public DNS.
	PublicDnsName string `pulumi:"publicDnsName"`
	// The public IP of the VM.
	PublicIp string `pulumi:"publicIp"`
	// The account ID of the owner of the public IP.
	PublicIpAccountId string `pulumi:"publicIpAccountId"`
}

// GetVmNicPrivateIpLinkPublicIpInput is an input type that accepts GetVmNicPrivateIpLinkPublicIpArgs and GetVmNicPrivateIpLinkPublicIpOutput values.
// You can construct a concrete instance of `GetVmNicPrivateIpLinkPublicIpInput` via:
//
//	GetVmNicPrivateIpLinkPublicIpArgs{...}
type GetVmNicPrivateIpLinkPublicIpInput interface {
	pulumi.Input

	ToGetVmNicPrivateIpLinkPublicIpOutput() GetVmNicPrivateIpLinkPublicIpOutput
	ToGetVmNicPrivateIpLinkPublicIpOutputWithContext(context.Context) GetVmNicPrivateIpLinkPublicIpOutput
}

type GetVmNicPrivateIpLinkPublicIpArgs struct {
	// The name of the public DNS.
	PublicDnsName pulumi.StringInput `pulumi:"publicDnsName"`
	// The public IP of the VM.
	PublicIp pulumi.StringInput `pulumi:"publicIp"`
	// The account ID of the owner of the public IP.
	PublicIpAccountId pulumi.StringInput `pulumi:"publicIpAccountId"`
}

func (GetVmNicPrivateIpLinkPublicIpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVmNicPrivateIpLinkPublicIp)(nil)).Elem()
}

func (i GetVmNicPrivateIpLinkPublicIpArgs) ToGetVmNicPrivateIpLinkPublicIpOutput() GetVmNicPrivateIpLinkPublicIpOutput {
	return i.ToGetVmNicPrivateIpLinkPublicIpOutputWithContext(context.Background())
}

func (i GetVmNicPrivateIpLinkPublicIpArgs) ToGetVmNicPrivateIpLinkPublicIpOutputWithContext(ctx context.Context) GetVmNicPrivateIpLinkPublicIpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVmNicPrivateIpLinkPublicIpOutput)
}

// GetVmNicPrivateIpLinkPublicIpArrayInput is an input type that accepts GetVmNicPrivateIpLinkPublicIpArray and GetVmNicPrivateIpLinkPublicIpArrayOutput values.
// You can construct a concrete instance of `GetVmNicPrivateIpLinkPublicIpArrayInput` via:
//
//	GetVmNicPrivateIpLinkPublicIpArray{ GetVmNicPrivateIpLinkPublicIpArgs{...} }
type GetVmNicPrivateIpLinkPublicIpArrayInput interface {
	pulumi.Input

	ToGetVmNicPrivateIpLinkPublicIpArrayOutput() GetVmNicPrivateIpLinkPublicIpArrayOutput
	ToGetVmNicPrivateIpLinkPublicIpArrayOutputWithContext(context.Context) GetVmNicPrivateIpLinkPublicIpArrayOutput
}

type GetVmNicPrivateIpLinkPublicIpArray []GetVmNicPrivateIpLinkPublicIpInput

func (GetVmNicPrivateIpLinkPublicIpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVmNicPrivateIpLinkPublicIp)(nil)).Elem()
}

func (i GetVmNicPrivateIpLinkPublicIpArray) ToGetVmNicPrivateIpLinkPublicIpArrayOutput() GetVmNicPrivateIpLinkPublicIpArrayOutput {
	return i.ToGetVmNicPrivateIpLinkPublicIpArrayOutputWithContext(context.Background())
}

func (i GetVmNicPrivateIpLinkPublicIpArray) ToGetVmNicPrivateIpLinkPublicIpArrayOutputWithContext(ctx context.Context) GetVmNicPrivateIpLinkPublicIpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVmNicPrivateIpLinkPublicIpArrayOutput)
}

type GetVmNicPrivateIpLinkPublicIpOutput struct{ *pulumi.OutputState }

func (GetVmNicPrivateIpLinkPublicIpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVmNicPrivateIpLinkPublicIp)(nil)).Elem()
}

func (o GetVmNicPrivateIpLinkPublicIpOutput) ToGetVmNicPrivateIpLinkPublicIpOutput() GetVmNicPrivateIpLinkPublicIpOutput {
	return o
}

func (o GetVmNicPrivateIpLinkPublicIpOutput) ToGetVmNicPrivateIpLinkPublicIpOutputWithContext(ctx context.Context) GetVmNicPrivateIpLinkPublicIpOutput {
	return o
}

// The name of the public DNS.
func (o GetVmNicPrivateIpLinkPublicIpOutput) PublicDnsName() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmNicPrivateIpLinkPublicIp) string { return v.PublicDnsName }).(pulumi.StringOutput)
}

// The public IP of the VM.
func (o GetVmNicPrivateIpLinkPublicIpOutput) PublicIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmNicPrivateIpLinkPublicIp) string { return v.PublicIp }).(pulumi.StringOutput)
}

// The account ID of the owner of the public IP.
func (o GetVmNicPrivateIpLinkPublicIpOutput) PublicIpAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmNicPrivateIpLinkPublicIp) string { return v.PublicIpAccountId }).(pulumi.StringOutput)
}

type GetVmNicPrivateIpLinkPublicIpArrayOutput struct{ *pulumi.OutputState }

func (GetVmNicPrivateIpLinkPublicIpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVmNicPrivateIpLinkPublicIp)(nil)).Elem()
}

func (o GetVmNicPrivateIpLinkPublicIpArrayOutput) ToGetVmNicPrivateIpLinkPublicIpArrayOutput() GetVmNicPrivateIpLinkPublicIpArrayOutput {
	return o
}

func (o GetVmNicPrivateIpLinkPublicIpArrayOutput) ToGetVmNicPrivateIpLinkPublicIpArrayOutputWithContext(ctx context.Context) GetVmNicPrivateIpLinkPublicIpArrayOutput {
	return o
}

func (o GetVmNicPrivateIpLinkPublicIpArrayOutput) Index(i pulumi.IntInput) GetVmNicPrivateIpLinkPublicIpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVmNicPrivateIpLinkPublicIp {
		return vs[0].([]GetVmNicPrivateIpLinkPublicIp)[vs[1].(int)]
	}).(GetVmNicPrivateIpLinkPublicIpOutput)
}

type GetVmNicSecurityGroup struct {
	// The ID of the security group.
	SecurityGroupId string `pulumi:"securityGroupId"`
	// The name of the security group.
	SecurityGroupName string `pulumi:"securityGroupName"`
}

// GetVmNicSecurityGroupInput is an input type that accepts GetVmNicSecurityGroupArgs and GetVmNicSecurityGroupOutput values.
// You can construct a concrete instance of `GetVmNicSecurityGroupInput` via:
//
//	GetVmNicSecurityGroupArgs{...}
type GetVmNicSecurityGroupInput interface {
	pulumi.Input

	ToGetVmNicSecurityGroupOutput() GetVmNicSecurityGroupOutput
	ToGetVmNicSecurityGroupOutputWithContext(context.Context) GetVmNicSecurityGroupOutput
}

type GetVmNicSecurityGroupArgs struct {
	// The ID of the security group.
	SecurityGroupId pulumi.StringInput `pulumi:"securityGroupId"`
	// The name of the security group.
	SecurityGroupName pulumi.StringInput `pulumi:"securityGroupName"`
}

func (GetVmNicSecurityGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVmNicSecurityGroup)(nil)).Elem()
}

func (i GetVmNicSecurityGroupArgs) ToGetVmNicSecurityGroupOutput() GetVmNicSecurityGroupOutput {
	return i.ToGetVmNicSecurityGroupOutputWithContext(context.Background())
}

func (i GetVmNicSecurityGroupArgs) ToGetVmNicSecurityGroupOutputWithContext(ctx context.Context) GetVmNicSecurityGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVmNicSecurityGroupOutput)
}

// GetVmNicSecurityGroupArrayInput is an input type that accepts GetVmNicSecurityGroupArray and GetVmNicSecurityGroupArrayOutput values.
// You can construct a concrete instance of `GetVmNicSecurityGroupArrayInput` via:
//
//	GetVmNicSecurityGroupArray{ GetVmNicSecurityGroupArgs{...} }
type GetVmNicSecurityGroupArrayInput interface {
	pulumi.Input

	ToGetVmNicSecurityGroupArrayOutput() GetVmNicSecurityGroupArrayOutput
	ToGetVmNicSecurityGroupArrayOutputWithContext(context.Context) GetVmNicSecurityGroupArrayOutput
}

type GetVmNicSecurityGroupArray []GetVmNicSecurityGroupInput

func (GetVmNicSecurityGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVmNicSecurityGroup)(nil)).Elem()
}

func (i GetVmNicSecurityGroupArray) ToGetVmNicSecurityGroupArrayOutput() GetVmNicSecurityGroupArrayOutput {
	return i.ToGetVmNicSecurityGroupArrayOutputWithContext(context.Background())
}

func (i GetVmNicSecurityGroupArray) ToGetVmNicSecurityGroupArrayOutputWithContext(ctx context.Context) GetVmNicSecurityGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVmNicSecurityGroupArrayOutput)
}

type GetVmNicSecurityGroupOutput struct{ *pulumi.OutputState }

func (GetVmNicSecurityGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVmNicSecurityGroup)(nil)).Elem()
}

func (o GetVmNicSecurityGroupOutput) ToGetVmNicSecurityGroupOutput() GetVmNicSecurityGroupOutput {
	return o
}

func (o GetVmNicSecurityGroupOutput) ToGetVmNicSecurityGroupOutputWithContext(ctx context.Context) GetVmNicSecurityGroupOutput {
	return o
}

// The ID of the security group.
func (o GetVmNicSecurityGroupOutput) SecurityGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmNicSecurityGroup) string { return v.SecurityGroupId }).(pulumi.StringOutput)
}

// The name of the security group.
func (o GetVmNicSecurityGroupOutput) SecurityGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmNicSecurityGroup) string { return v.SecurityGroupName }).(pulumi.StringOutput)
}

type GetVmNicSecurityGroupArrayOutput struct{ *pulumi.OutputState }

func (GetVmNicSecurityGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVmNicSecurityGroup)(nil)).Elem()
}

func (o GetVmNicSecurityGroupArrayOutput) ToGetVmNicSecurityGroupArrayOutput() GetVmNicSecurityGroupArrayOutput {
	return o
}

func (o GetVmNicSecurityGroupArrayOutput) ToGetVmNicSecurityGroupArrayOutputWithContext(ctx context.Context) GetVmNicSecurityGroupArrayOutput {
	return o
}

func (o GetVmNicSecurityGroupArrayOutput) Index(i pulumi.IntInput) GetVmNicSecurityGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVmNicSecurityGroup {
		return vs[0].([]GetVmNicSecurityGroup)[vs[1].(int)]
	}).(GetVmNicSecurityGroupOutput)
}

type GetVmPrimaryNic struct {
	// The account ID of the owner of the NIC.
	AccountId string `pulumi:"accountId"`
	// If true, the NIC is deleted when the VM is terminated.
	DeleteOnVmDeletion bool `pulumi:"deleteOnVmDeletion"`
	// The description of the NIC.
	Description string `pulumi:"description"`
	// The device index for the NIC attachment (between `1` and `7`, both included).
	DeviceNumber int `pulumi:"deviceNumber"`
	// (Net only) If true, the source/destination check is enabled. If false, it is disabled.
	IsSourceDestChecked bool `pulumi:"isSourceDestChecked"`
	// Information about the network interface card (NIC).
	LinkNics []GetVmPrimaryNicLinkNic `pulumi:"linkNics"`
	// Information about the public IP associated with the NIC.
	LinkPublicIps []GetVmPrimaryNicLinkPublicIp `pulumi:"linkPublicIps"`
	// The Media Access Control (MAC) address of the NIC.
	MacAddress string `pulumi:"macAddress"`
	// The ID of the Net for the NIC.
	NetId string `pulumi:"netId"`
	// The ID of the NIC.
	NicId string `pulumi:"nicId"`
	// The name of the private DNS.
	PrivateDnsName string `pulumi:"privateDnsName"`
	// The private IP or IPs of the NIC.
	PrivateIps              []GetVmPrimaryNicPrivateIp `pulumi:"privateIps"`
	SecondaryPrivateIpCount int                        `pulumi:"secondaryPrivateIpCount"`
	// The IDs of the security groups for the VMs (only in the public Cloud).
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// One or more security groups associated with the VM.
	SecurityGroups []GetVmPrimaryNicSecurityGroup `pulumi:"securityGroups"`
	// The state of the VM (`pending` \| `running` \| `stopping` \| `stopped` \| `shutting-down` \| `terminated` \| `quarantine`).
	State string `pulumi:"state"`
	// The ID of the Subnet for the VM.
	SubnetId string `pulumi:"subnetId"`
}

// GetVmPrimaryNicInput is an input type that accepts GetVmPrimaryNicArgs and GetVmPrimaryNicOutput values.
// You can construct a concrete instance of `GetVmPrimaryNicInput` via:
//
//	GetVmPrimaryNicArgs{...}
type GetVmPrimaryNicInput interface {
	pulumi.Input

	ToGetVmPrimaryNicOutput() GetVmPrimaryNicOutput
	ToGetVmPrimaryNicOutputWithContext(context.Context) GetVmPrimaryNicOutput
}

type GetVmPrimaryNicArgs struct {
	// The account ID of the owner of the NIC.
	AccountId pulumi.StringInput `pulumi:"accountId"`
	// If true, the NIC is deleted when the VM is terminated.
	DeleteOnVmDeletion pulumi.BoolInput `pulumi:"deleteOnVmDeletion"`
	// The description of the NIC.
	Description pulumi.StringInput `pulumi:"description"`
	// The device index for the NIC attachment (between `1` and `7`, both included).
	DeviceNumber pulumi.IntInput `pulumi:"deviceNumber"`
	// (Net only) If true, the source/destination check is enabled. If false, it is disabled.
	IsSourceDestChecked pulumi.BoolInput `pulumi:"isSourceDestChecked"`
	// Information about the network interface card (NIC).
	LinkNics GetVmPrimaryNicLinkNicArrayInput `pulumi:"linkNics"`
	// Information about the public IP associated with the NIC.
	LinkPublicIps GetVmPrimaryNicLinkPublicIpArrayInput `pulumi:"linkPublicIps"`
	// The Media Access Control (MAC) address of the NIC.
	MacAddress pulumi.StringInput `pulumi:"macAddress"`
	// The ID of the Net for the NIC.
	NetId pulumi.StringInput `pulumi:"netId"`
	// The ID of the NIC.
	NicId pulumi.StringInput `pulumi:"nicId"`
	// The name of the private DNS.
	PrivateDnsName pulumi.StringInput `pulumi:"privateDnsName"`
	// The private IP or IPs of the NIC.
	PrivateIps              GetVmPrimaryNicPrivateIpArrayInput `pulumi:"privateIps"`
	SecondaryPrivateIpCount pulumi.IntInput                    `pulumi:"secondaryPrivateIpCount"`
	// The IDs of the security groups for the VMs (only in the public Cloud).
	SecurityGroupIds pulumi.StringArrayInput `pulumi:"securityGroupIds"`
	// One or more security groups associated with the VM.
	SecurityGroups GetVmPrimaryNicSecurityGroupArrayInput `pulumi:"securityGroups"`
	// The state of the VM (`pending` \| `running` \| `stopping` \| `stopped` \| `shutting-down` \| `terminated` \| `quarantine`).
	State pulumi.StringInput `pulumi:"state"`
	// The ID of the Subnet for the VM.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
}

func (GetVmPrimaryNicArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVmPrimaryNic)(nil)).Elem()
}

func (i GetVmPrimaryNicArgs) ToGetVmPrimaryNicOutput() GetVmPrimaryNicOutput {
	return i.ToGetVmPrimaryNicOutputWithContext(context.Background())
}

func (i GetVmPrimaryNicArgs) ToGetVmPrimaryNicOutputWithContext(ctx context.Context) GetVmPrimaryNicOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVmPrimaryNicOutput)
}

// GetVmPrimaryNicArrayInput is an input type that accepts GetVmPrimaryNicArray and GetVmPrimaryNicArrayOutput values.
// You can construct a concrete instance of `GetVmPrimaryNicArrayInput` via:
//
//	GetVmPrimaryNicArray{ GetVmPrimaryNicArgs{...} }
type GetVmPrimaryNicArrayInput interface {
	pulumi.Input

	ToGetVmPrimaryNicArrayOutput() GetVmPrimaryNicArrayOutput
	ToGetVmPrimaryNicArrayOutputWithContext(context.Context) GetVmPrimaryNicArrayOutput
}

type GetVmPrimaryNicArray []GetVmPrimaryNicInput

func (GetVmPrimaryNicArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVmPrimaryNic)(nil)).Elem()
}

func (i GetVmPrimaryNicArray) ToGetVmPrimaryNicArrayOutput() GetVmPrimaryNicArrayOutput {
	return i.ToGetVmPrimaryNicArrayOutputWithContext(context.Background())
}

func (i GetVmPrimaryNicArray) ToGetVmPrimaryNicArrayOutputWithContext(ctx context.Context) GetVmPrimaryNicArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVmPrimaryNicArrayOutput)
}

type GetVmPrimaryNicOutput struct{ *pulumi.OutputState }

func (GetVmPrimaryNicOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVmPrimaryNic)(nil)).Elem()
}

func (o GetVmPrimaryNicOutput) ToGetVmPrimaryNicOutput() GetVmPrimaryNicOutput {
	return o
}

func (o GetVmPrimaryNicOutput) ToGetVmPrimaryNicOutputWithContext(ctx context.Context) GetVmPrimaryNicOutput {
	return o
}

// The account ID of the owner of the NIC.
func (o GetVmPrimaryNicOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmPrimaryNic) string { return v.AccountId }).(pulumi.StringOutput)
}

// If true, the NIC is deleted when the VM is terminated.
func (o GetVmPrimaryNicOutput) DeleteOnVmDeletion() pulumi.BoolOutput {
	return o.ApplyT(func(v GetVmPrimaryNic) bool { return v.DeleteOnVmDeletion }).(pulumi.BoolOutput)
}

// The description of the NIC.
func (o GetVmPrimaryNicOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmPrimaryNic) string { return v.Description }).(pulumi.StringOutput)
}

// The device index for the NIC attachment (between `1` and `7`, both included).
func (o GetVmPrimaryNicOutput) DeviceNumber() pulumi.IntOutput {
	return o.ApplyT(func(v GetVmPrimaryNic) int { return v.DeviceNumber }).(pulumi.IntOutput)
}

// (Net only) If true, the source/destination check is enabled. If false, it is disabled.
func (o GetVmPrimaryNicOutput) IsSourceDestChecked() pulumi.BoolOutput {
	return o.ApplyT(func(v GetVmPrimaryNic) bool { return v.IsSourceDestChecked }).(pulumi.BoolOutput)
}

// Information about the network interface card (NIC).
func (o GetVmPrimaryNicOutput) LinkNics() GetVmPrimaryNicLinkNicArrayOutput {
	return o.ApplyT(func(v GetVmPrimaryNic) []GetVmPrimaryNicLinkNic { return v.LinkNics }).(GetVmPrimaryNicLinkNicArrayOutput)
}

// Information about the public IP associated with the NIC.
func (o GetVmPrimaryNicOutput) LinkPublicIps() GetVmPrimaryNicLinkPublicIpArrayOutput {
	return o.ApplyT(func(v GetVmPrimaryNic) []GetVmPrimaryNicLinkPublicIp { return v.LinkPublicIps }).(GetVmPrimaryNicLinkPublicIpArrayOutput)
}

// The Media Access Control (MAC) address of the NIC.
func (o GetVmPrimaryNicOutput) MacAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmPrimaryNic) string { return v.MacAddress }).(pulumi.StringOutput)
}

// The ID of the Net for the NIC.
func (o GetVmPrimaryNicOutput) NetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmPrimaryNic) string { return v.NetId }).(pulumi.StringOutput)
}

// The ID of the NIC.
func (o GetVmPrimaryNicOutput) NicId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmPrimaryNic) string { return v.NicId }).(pulumi.StringOutput)
}

// The name of the private DNS.
func (o GetVmPrimaryNicOutput) PrivateDnsName() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmPrimaryNic) string { return v.PrivateDnsName }).(pulumi.StringOutput)
}

// The private IP or IPs of the NIC.
func (o GetVmPrimaryNicOutput) PrivateIps() GetVmPrimaryNicPrivateIpArrayOutput {
	return o.ApplyT(func(v GetVmPrimaryNic) []GetVmPrimaryNicPrivateIp { return v.PrivateIps }).(GetVmPrimaryNicPrivateIpArrayOutput)
}

func (o GetVmPrimaryNicOutput) SecondaryPrivateIpCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetVmPrimaryNic) int { return v.SecondaryPrivateIpCount }).(pulumi.IntOutput)
}

// The IDs of the security groups for the VMs (only in the public Cloud).
func (o GetVmPrimaryNicOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetVmPrimaryNic) []string { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

// One or more security groups associated with the VM.
func (o GetVmPrimaryNicOutput) SecurityGroups() GetVmPrimaryNicSecurityGroupArrayOutput {
	return o.ApplyT(func(v GetVmPrimaryNic) []GetVmPrimaryNicSecurityGroup { return v.SecurityGroups }).(GetVmPrimaryNicSecurityGroupArrayOutput)
}

// The state of the VM (`pending` \| `running` \| `stopping` \| `stopped` \| `shutting-down` \| `terminated` \| `quarantine`).
func (o GetVmPrimaryNicOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmPrimaryNic) string { return v.State }).(pulumi.StringOutput)
}

// The ID of the Subnet for the VM.
func (o GetVmPrimaryNicOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmPrimaryNic) string { return v.SubnetId }).(pulumi.StringOutput)
}

type GetVmPrimaryNicArrayOutput struct{ *pulumi.OutputState }

func (GetVmPrimaryNicArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVmPrimaryNic)(nil)).Elem()
}

func (o GetVmPrimaryNicArrayOutput) ToGetVmPrimaryNicArrayOutput() GetVmPrimaryNicArrayOutput {
	return o
}

func (o GetVmPrimaryNicArrayOutput) ToGetVmPrimaryNicArrayOutputWithContext(ctx context.Context) GetVmPrimaryNicArrayOutput {
	return o
}

func (o GetVmPrimaryNicArrayOutput) Index(i pulumi.IntInput) GetVmPrimaryNicOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVmPrimaryNic {
		return vs[0].([]GetVmPrimaryNic)[vs[1].(int)]
	}).(GetVmPrimaryNicOutput)
}

type GetVmPrimaryNicLinkNic struct {
	// If true, the NIC is deleted when the VM is terminated.
	DeleteOnVmDeletion bool `pulumi:"deleteOnVmDeletion"`
	// The device index for the NIC attachment (between `1` and `7`, both included).
	DeviceNumber string `pulumi:"deviceNumber"`
	// The ID of the NIC to attach.
	LinkNicId string `pulumi:"linkNicId"`
	// The state of the VM (`pending` \| `running` \| `stopping` \| `stopped` \| `shutting-down` \| `terminated` \| `quarantine`).
	State string `pulumi:"state"`
}

// GetVmPrimaryNicLinkNicInput is an input type that accepts GetVmPrimaryNicLinkNicArgs and GetVmPrimaryNicLinkNicOutput values.
// You can construct a concrete instance of `GetVmPrimaryNicLinkNicInput` via:
//
//	GetVmPrimaryNicLinkNicArgs{...}
type GetVmPrimaryNicLinkNicInput interface {
	pulumi.Input

	ToGetVmPrimaryNicLinkNicOutput() GetVmPrimaryNicLinkNicOutput
	ToGetVmPrimaryNicLinkNicOutputWithContext(context.Context) GetVmPrimaryNicLinkNicOutput
}

type GetVmPrimaryNicLinkNicArgs struct {
	// If true, the NIC is deleted when the VM is terminated.
	DeleteOnVmDeletion pulumi.BoolInput `pulumi:"deleteOnVmDeletion"`
	// The device index for the NIC attachment (between `1` and `7`, both included).
	DeviceNumber pulumi.StringInput `pulumi:"deviceNumber"`
	// The ID of the NIC to attach.
	LinkNicId pulumi.StringInput `pulumi:"linkNicId"`
	// The state of the VM (`pending` \| `running` \| `stopping` \| `stopped` \| `shutting-down` \| `terminated` \| `quarantine`).
	State pulumi.StringInput `pulumi:"state"`
}

func (GetVmPrimaryNicLinkNicArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVmPrimaryNicLinkNic)(nil)).Elem()
}

func (i GetVmPrimaryNicLinkNicArgs) ToGetVmPrimaryNicLinkNicOutput() GetVmPrimaryNicLinkNicOutput {
	return i.ToGetVmPrimaryNicLinkNicOutputWithContext(context.Background())
}

func (i GetVmPrimaryNicLinkNicArgs) ToGetVmPrimaryNicLinkNicOutputWithContext(ctx context.Context) GetVmPrimaryNicLinkNicOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVmPrimaryNicLinkNicOutput)
}

// GetVmPrimaryNicLinkNicArrayInput is an input type that accepts GetVmPrimaryNicLinkNicArray and GetVmPrimaryNicLinkNicArrayOutput values.
// You can construct a concrete instance of `GetVmPrimaryNicLinkNicArrayInput` via:
//
//	GetVmPrimaryNicLinkNicArray{ GetVmPrimaryNicLinkNicArgs{...} }
type GetVmPrimaryNicLinkNicArrayInput interface {
	pulumi.Input

	ToGetVmPrimaryNicLinkNicArrayOutput() GetVmPrimaryNicLinkNicArrayOutput
	ToGetVmPrimaryNicLinkNicArrayOutputWithContext(context.Context) GetVmPrimaryNicLinkNicArrayOutput
}

type GetVmPrimaryNicLinkNicArray []GetVmPrimaryNicLinkNicInput

func (GetVmPrimaryNicLinkNicArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVmPrimaryNicLinkNic)(nil)).Elem()
}

func (i GetVmPrimaryNicLinkNicArray) ToGetVmPrimaryNicLinkNicArrayOutput() GetVmPrimaryNicLinkNicArrayOutput {
	return i.ToGetVmPrimaryNicLinkNicArrayOutputWithContext(context.Background())
}

func (i GetVmPrimaryNicLinkNicArray) ToGetVmPrimaryNicLinkNicArrayOutputWithContext(ctx context.Context) GetVmPrimaryNicLinkNicArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVmPrimaryNicLinkNicArrayOutput)
}

type GetVmPrimaryNicLinkNicOutput struct{ *pulumi.OutputState }

func (GetVmPrimaryNicLinkNicOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVmPrimaryNicLinkNic)(nil)).Elem()
}

func (o GetVmPrimaryNicLinkNicOutput) ToGetVmPrimaryNicLinkNicOutput() GetVmPrimaryNicLinkNicOutput {
	return o
}

func (o GetVmPrimaryNicLinkNicOutput) ToGetVmPrimaryNicLinkNicOutputWithContext(ctx context.Context) GetVmPrimaryNicLinkNicOutput {
	return o
}

// If true, the NIC is deleted when the VM is terminated.
func (o GetVmPrimaryNicLinkNicOutput) DeleteOnVmDeletion() pulumi.BoolOutput {
	return o.ApplyT(func(v GetVmPrimaryNicLinkNic) bool { return v.DeleteOnVmDeletion }).(pulumi.BoolOutput)
}

// The device index for the NIC attachment (between `1` and `7`, both included).
func (o GetVmPrimaryNicLinkNicOutput) DeviceNumber() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmPrimaryNicLinkNic) string { return v.DeviceNumber }).(pulumi.StringOutput)
}

// The ID of the NIC to attach.
func (o GetVmPrimaryNicLinkNicOutput) LinkNicId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmPrimaryNicLinkNic) string { return v.LinkNicId }).(pulumi.StringOutput)
}

// The state of the VM (`pending` \| `running` \| `stopping` \| `stopped` \| `shutting-down` \| `terminated` \| `quarantine`).
func (o GetVmPrimaryNicLinkNicOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmPrimaryNicLinkNic) string { return v.State }).(pulumi.StringOutput)
}

type GetVmPrimaryNicLinkNicArrayOutput struct{ *pulumi.OutputState }

func (GetVmPrimaryNicLinkNicArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVmPrimaryNicLinkNic)(nil)).Elem()
}

func (o GetVmPrimaryNicLinkNicArrayOutput) ToGetVmPrimaryNicLinkNicArrayOutput() GetVmPrimaryNicLinkNicArrayOutput {
	return o
}

func (o GetVmPrimaryNicLinkNicArrayOutput) ToGetVmPrimaryNicLinkNicArrayOutputWithContext(ctx context.Context) GetVmPrimaryNicLinkNicArrayOutput {
	return o
}

func (o GetVmPrimaryNicLinkNicArrayOutput) Index(i pulumi.IntInput) GetVmPrimaryNicLinkNicOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVmPrimaryNicLinkNic {
		return vs[0].([]GetVmPrimaryNicLinkNic)[vs[1].(int)]
	}).(GetVmPrimaryNicLinkNicOutput)
}

type GetVmPrimaryNicLinkPublicIp struct {
	// The name of the public DNS.
	PublicDnsName string `pulumi:"publicDnsName"`
	// The public IP of the VM.
	PublicIp string `pulumi:"publicIp"`
	// The account ID of the owner of the public IP.
	PublicIpAccountId string `pulumi:"publicIpAccountId"`
}

// GetVmPrimaryNicLinkPublicIpInput is an input type that accepts GetVmPrimaryNicLinkPublicIpArgs and GetVmPrimaryNicLinkPublicIpOutput values.
// You can construct a concrete instance of `GetVmPrimaryNicLinkPublicIpInput` via:
//
//	GetVmPrimaryNicLinkPublicIpArgs{...}
type GetVmPrimaryNicLinkPublicIpInput interface {
	pulumi.Input

	ToGetVmPrimaryNicLinkPublicIpOutput() GetVmPrimaryNicLinkPublicIpOutput
	ToGetVmPrimaryNicLinkPublicIpOutputWithContext(context.Context) GetVmPrimaryNicLinkPublicIpOutput
}

type GetVmPrimaryNicLinkPublicIpArgs struct {
	// The name of the public DNS.
	PublicDnsName pulumi.StringInput `pulumi:"publicDnsName"`
	// The public IP of the VM.
	PublicIp pulumi.StringInput `pulumi:"publicIp"`
	// The account ID of the owner of the public IP.
	PublicIpAccountId pulumi.StringInput `pulumi:"publicIpAccountId"`
}

func (GetVmPrimaryNicLinkPublicIpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVmPrimaryNicLinkPublicIp)(nil)).Elem()
}

func (i GetVmPrimaryNicLinkPublicIpArgs) ToGetVmPrimaryNicLinkPublicIpOutput() GetVmPrimaryNicLinkPublicIpOutput {
	return i.ToGetVmPrimaryNicLinkPublicIpOutputWithContext(context.Background())
}

func (i GetVmPrimaryNicLinkPublicIpArgs) ToGetVmPrimaryNicLinkPublicIpOutputWithContext(ctx context.Context) GetVmPrimaryNicLinkPublicIpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVmPrimaryNicLinkPublicIpOutput)
}

// GetVmPrimaryNicLinkPublicIpArrayInput is an input type that accepts GetVmPrimaryNicLinkPublicIpArray and GetVmPrimaryNicLinkPublicIpArrayOutput values.
// You can construct a concrete instance of `GetVmPrimaryNicLinkPublicIpArrayInput` via:
//
//	GetVmPrimaryNicLinkPublicIpArray{ GetVmPrimaryNicLinkPublicIpArgs{...} }
type GetVmPrimaryNicLinkPublicIpArrayInput interface {
	pulumi.Input

	ToGetVmPrimaryNicLinkPublicIpArrayOutput() GetVmPrimaryNicLinkPublicIpArrayOutput
	ToGetVmPrimaryNicLinkPublicIpArrayOutputWithContext(context.Context) GetVmPrimaryNicLinkPublicIpArrayOutput
}

type GetVmPrimaryNicLinkPublicIpArray []GetVmPrimaryNicLinkPublicIpInput

func (GetVmPrimaryNicLinkPublicIpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVmPrimaryNicLinkPublicIp)(nil)).Elem()
}

func (i GetVmPrimaryNicLinkPublicIpArray) ToGetVmPrimaryNicLinkPublicIpArrayOutput() GetVmPrimaryNicLinkPublicIpArrayOutput {
	return i.ToGetVmPrimaryNicLinkPublicIpArrayOutputWithContext(context.Background())
}

func (i GetVmPrimaryNicLinkPublicIpArray) ToGetVmPrimaryNicLinkPublicIpArrayOutputWithContext(ctx context.Context) GetVmPrimaryNicLinkPublicIpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVmPrimaryNicLinkPublicIpArrayOutput)
}

type GetVmPrimaryNicLinkPublicIpOutput struct{ *pulumi.OutputState }

func (GetVmPrimaryNicLinkPublicIpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVmPrimaryNicLinkPublicIp)(nil)).Elem()
}

func (o GetVmPrimaryNicLinkPublicIpOutput) ToGetVmPrimaryNicLinkPublicIpOutput() GetVmPrimaryNicLinkPublicIpOutput {
	return o
}

func (o GetVmPrimaryNicLinkPublicIpOutput) ToGetVmPrimaryNicLinkPublicIpOutputWithContext(ctx context.Context) GetVmPrimaryNicLinkPublicIpOutput {
	return o
}

// The name of the public DNS.
func (o GetVmPrimaryNicLinkPublicIpOutput) PublicDnsName() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmPrimaryNicLinkPublicIp) string { return v.PublicDnsName }).(pulumi.StringOutput)
}

// The public IP of the VM.
func (o GetVmPrimaryNicLinkPublicIpOutput) PublicIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmPrimaryNicLinkPublicIp) string { return v.PublicIp }).(pulumi.StringOutput)
}

// The account ID of the owner of the public IP.
func (o GetVmPrimaryNicLinkPublicIpOutput) PublicIpAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmPrimaryNicLinkPublicIp) string { return v.PublicIpAccountId }).(pulumi.StringOutput)
}

type GetVmPrimaryNicLinkPublicIpArrayOutput struct{ *pulumi.OutputState }

func (GetVmPrimaryNicLinkPublicIpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVmPrimaryNicLinkPublicIp)(nil)).Elem()
}

func (o GetVmPrimaryNicLinkPublicIpArrayOutput) ToGetVmPrimaryNicLinkPublicIpArrayOutput() GetVmPrimaryNicLinkPublicIpArrayOutput {
	return o
}

func (o GetVmPrimaryNicLinkPublicIpArrayOutput) ToGetVmPrimaryNicLinkPublicIpArrayOutputWithContext(ctx context.Context) GetVmPrimaryNicLinkPublicIpArrayOutput {
	return o
}

func (o GetVmPrimaryNicLinkPublicIpArrayOutput) Index(i pulumi.IntInput) GetVmPrimaryNicLinkPublicIpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVmPrimaryNicLinkPublicIp {
		return vs[0].([]GetVmPrimaryNicLinkPublicIp)[vs[1].(int)]
	}).(GetVmPrimaryNicLinkPublicIpOutput)
}

type GetVmPrimaryNicPrivateIp struct {
	// If true, the IP is the primary private IP of the NIC.
	IsPrimary bool `pulumi:"isPrimary"`
	// Information about the public IP associated with the NIC.
	LinkPublicIps []GetVmPrimaryNicPrivateIpLinkPublicIp `pulumi:"linkPublicIps"`
	// The name of the private DNS.
	PrivateDnsName string `pulumi:"privateDnsName"`
	// The primary private IP of the VM.
	PrivateIp string `pulumi:"privateIp"`
}

// GetVmPrimaryNicPrivateIpInput is an input type that accepts GetVmPrimaryNicPrivateIpArgs and GetVmPrimaryNicPrivateIpOutput values.
// You can construct a concrete instance of `GetVmPrimaryNicPrivateIpInput` via:
//
//	GetVmPrimaryNicPrivateIpArgs{...}
type GetVmPrimaryNicPrivateIpInput interface {
	pulumi.Input

	ToGetVmPrimaryNicPrivateIpOutput() GetVmPrimaryNicPrivateIpOutput
	ToGetVmPrimaryNicPrivateIpOutputWithContext(context.Context) GetVmPrimaryNicPrivateIpOutput
}

type GetVmPrimaryNicPrivateIpArgs struct {
	// If true, the IP is the primary private IP of the NIC.
	IsPrimary pulumi.BoolInput `pulumi:"isPrimary"`
	// Information about the public IP associated with the NIC.
	LinkPublicIps GetVmPrimaryNicPrivateIpLinkPublicIpArrayInput `pulumi:"linkPublicIps"`
	// The name of the private DNS.
	PrivateDnsName pulumi.StringInput `pulumi:"privateDnsName"`
	// The primary private IP of the VM.
	PrivateIp pulumi.StringInput `pulumi:"privateIp"`
}

func (GetVmPrimaryNicPrivateIpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVmPrimaryNicPrivateIp)(nil)).Elem()
}

func (i GetVmPrimaryNicPrivateIpArgs) ToGetVmPrimaryNicPrivateIpOutput() GetVmPrimaryNicPrivateIpOutput {
	return i.ToGetVmPrimaryNicPrivateIpOutputWithContext(context.Background())
}

func (i GetVmPrimaryNicPrivateIpArgs) ToGetVmPrimaryNicPrivateIpOutputWithContext(ctx context.Context) GetVmPrimaryNicPrivateIpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVmPrimaryNicPrivateIpOutput)
}

// GetVmPrimaryNicPrivateIpArrayInput is an input type that accepts GetVmPrimaryNicPrivateIpArray and GetVmPrimaryNicPrivateIpArrayOutput values.
// You can construct a concrete instance of `GetVmPrimaryNicPrivateIpArrayInput` via:
//
//	GetVmPrimaryNicPrivateIpArray{ GetVmPrimaryNicPrivateIpArgs{...} }
type GetVmPrimaryNicPrivateIpArrayInput interface {
	pulumi.Input

	ToGetVmPrimaryNicPrivateIpArrayOutput() GetVmPrimaryNicPrivateIpArrayOutput
	ToGetVmPrimaryNicPrivateIpArrayOutputWithContext(context.Context) GetVmPrimaryNicPrivateIpArrayOutput
}

type GetVmPrimaryNicPrivateIpArray []GetVmPrimaryNicPrivateIpInput

func (GetVmPrimaryNicPrivateIpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVmPrimaryNicPrivateIp)(nil)).Elem()
}

func (i GetVmPrimaryNicPrivateIpArray) ToGetVmPrimaryNicPrivateIpArrayOutput() GetVmPrimaryNicPrivateIpArrayOutput {
	return i.ToGetVmPrimaryNicPrivateIpArrayOutputWithContext(context.Background())
}

func (i GetVmPrimaryNicPrivateIpArray) ToGetVmPrimaryNicPrivateIpArrayOutputWithContext(ctx context.Context) GetVmPrimaryNicPrivateIpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVmPrimaryNicPrivateIpArrayOutput)
}

type GetVmPrimaryNicPrivateIpOutput struct{ *pulumi.OutputState }

func (GetVmPrimaryNicPrivateIpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVmPrimaryNicPrivateIp)(nil)).Elem()
}

func (o GetVmPrimaryNicPrivateIpOutput) ToGetVmPrimaryNicPrivateIpOutput() GetVmPrimaryNicPrivateIpOutput {
	return o
}

func (o GetVmPrimaryNicPrivateIpOutput) ToGetVmPrimaryNicPrivateIpOutputWithContext(ctx context.Context) GetVmPrimaryNicPrivateIpOutput {
	return o
}

// If true, the IP is the primary private IP of the NIC.
func (o GetVmPrimaryNicPrivateIpOutput) IsPrimary() pulumi.BoolOutput {
	return o.ApplyT(func(v GetVmPrimaryNicPrivateIp) bool { return v.IsPrimary }).(pulumi.BoolOutput)
}

// Information about the public IP associated with the NIC.
func (o GetVmPrimaryNicPrivateIpOutput) LinkPublicIps() GetVmPrimaryNicPrivateIpLinkPublicIpArrayOutput {
	return o.ApplyT(func(v GetVmPrimaryNicPrivateIp) []GetVmPrimaryNicPrivateIpLinkPublicIp { return v.LinkPublicIps }).(GetVmPrimaryNicPrivateIpLinkPublicIpArrayOutput)
}

// The name of the private DNS.
func (o GetVmPrimaryNicPrivateIpOutput) PrivateDnsName() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmPrimaryNicPrivateIp) string { return v.PrivateDnsName }).(pulumi.StringOutput)
}

// The primary private IP of the VM.
func (o GetVmPrimaryNicPrivateIpOutput) PrivateIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmPrimaryNicPrivateIp) string { return v.PrivateIp }).(pulumi.StringOutput)
}

type GetVmPrimaryNicPrivateIpArrayOutput struct{ *pulumi.OutputState }

func (GetVmPrimaryNicPrivateIpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVmPrimaryNicPrivateIp)(nil)).Elem()
}

func (o GetVmPrimaryNicPrivateIpArrayOutput) ToGetVmPrimaryNicPrivateIpArrayOutput() GetVmPrimaryNicPrivateIpArrayOutput {
	return o
}

func (o GetVmPrimaryNicPrivateIpArrayOutput) ToGetVmPrimaryNicPrivateIpArrayOutputWithContext(ctx context.Context) GetVmPrimaryNicPrivateIpArrayOutput {
	return o
}

func (o GetVmPrimaryNicPrivateIpArrayOutput) Index(i pulumi.IntInput) GetVmPrimaryNicPrivateIpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVmPrimaryNicPrivateIp {
		return vs[0].([]GetVmPrimaryNicPrivateIp)[vs[1].(int)]
	}).(GetVmPrimaryNicPrivateIpOutput)
}

type GetVmPrimaryNicPrivateIpLinkPublicIp struct {
	// The name of the public DNS.
	PublicDnsName string `pulumi:"publicDnsName"`
	// The public IP of the VM.
	PublicIp string `pulumi:"publicIp"`
	// The account ID of the owner of the public IP.
	PublicIpAccountId string `pulumi:"publicIpAccountId"`
}

// GetVmPrimaryNicPrivateIpLinkPublicIpInput is an input type that accepts GetVmPrimaryNicPrivateIpLinkPublicIpArgs and GetVmPrimaryNicPrivateIpLinkPublicIpOutput values.
// You can construct a concrete instance of `GetVmPrimaryNicPrivateIpLinkPublicIpInput` via:
//
//	GetVmPrimaryNicPrivateIpLinkPublicIpArgs{...}
type GetVmPrimaryNicPrivateIpLinkPublicIpInput interface {
	pulumi.Input

	ToGetVmPrimaryNicPrivateIpLinkPublicIpOutput() GetVmPrimaryNicPrivateIpLinkPublicIpOutput
	ToGetVmPrimaryNicPrivateIpLinkPublicIpOutputWithContext(context.Context) GetVmPrimaryNicPrivateIpLinkPublicIpOutput
}

type GetVmPrimaryNicPrivateIpLinkPublicIpArgs struct {
	// The name of the public DNS.
	PublicDnsName pulumi.StringInput `pulumi:"publicDnsName"`
	// The public IP of the VM.
	PublicIp pulumi.StringInput `pulumi:"publicIp"`
	// The account ID of the owner of the public IP.
	PublicIpAccountId pulumi.StringInput `pulumi:"publicIpAccountId"`
}

func (GetVmPrimaryNicPrivateIpLinkPublicIpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVmPrimaryNicPrivateIpLinkPublicIp)(nil)).Elem()
}

func (i GetVmPrimaryNicPrivateIpLinkPublicIpArgs) ToGetVmPrimaryNicPrivateIpLinkPublicIpOutput() GetVmPrimaryNicPrivateIpLinkPublicIpOutput {
	return i.ToGetVmPrimaryNicPrivateIpLinkPublicIpOutputWithContext(context.Background())
}

func (i GetVmPrimaryNicPrivateIpLinkPublicIpArgs) ToGetVmPrimaryNicPrivateIpLinkPublicIpOutputWithContext(ctx context.Context) GetVmPrimaryNicPrivateIpLinkPublicIpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVmPrimaryNicPrivateIpLinkPublicIpOutput)
}

// GetVmPrimaryNicPrivateIpLinkPublicIpArrayInput is an input type that accepts GetVmPrimaryNicPrivateIpLinkPublicIpArray and GetVmPrimaryNicPrivateIpLinkPublicIpArrayOutput values.
// You can construct a concrete instance of `GetVmPrimaryNicPrivateIpLinkPublicIpArrayInput` via:
//
//	GetVmPrimaryNicPrivateIpLinkPublicIpArray{ GetVmPrimaryNicPrivateIpLinkPublicIpArgs{...} }
type GetVmPrimaryNicPrivateIpLinkPublicIpArrayInput interface {
	pulumi.Input

	ToGetVmPrimaryNicPrivateIpLinkPublicIpArrayOutput() GetVmPrimaryNicPrivateIpLinkPublicIpArrayOutput
	ToGetVmPrimaryNicPrivateIpLinkPublicIpArrayOutputWithContext(context.Context) GetVmPrimaryNicPrivateIpLinkPublicIpArrayOutput
}

type GetVmPrimaryNicPrivateIpLinkPublicIpArray []GetVmPrimaryNicPrivateIpLinkPublicIpInput

func (GetVmPrimaryNicPrivateIpLinkPublicIpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVmPrimaryNicPrivateIpLinkPublicIp)(nil)).Elem()
}

func (i GetVmPrimaryNicPrivateIpLinkPublicIpArray) ToGetVmPrimaryNicPrivateIpLinkPublicIpArrayOutput() GetVmPrimaryNicPrivateIpLinkPublicIpArrayOutput {
	return i.ToGetVmPrimaryNicPrivateIpLinkPublicIpArrayOutputWithContext(context.Background())
}

func (i GetVmPrimaryNicPrivateIpLinkPublicIpArray) ToGetVmPrimaryNicPrivateIpLinkPublicIpArrayOutputWithContext(ctx context.Context) GetVmPrimaryNicPrivateIpLinkPublicIpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVmPrimaryNicPrivateIpLinkPublicIpArrayOutput)
}

type GetVmPrimaryNicPrivateIpLinkPublicIpOutput struct{ *pulumi.OutputState }

func (GetVmPrimaryNicPrivateIpLinkPublicIpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVmPrimaryNicPrivateIpLinkPublicIp)(nil)).Elem()
}

func (o GetVmPrimaryNicPrivateIpLinkPublicIpOutput) ToGetVmPrimaryNicPrivateIpLinkPublicIpOutput() GetVmPrimaryNicPrivateIpLinkPublicIpOutput {
	return o
}

func (o GetVmPrimaryNicPrivateIpLinkPublicIpOutput) ToGetVmPrimaryNicPrivateIpLinkPublicIpOutputWithContext(ctx context.Context) GetVmPrimaryNicPrivateIpLinkPublicIpOutput {
	return o
}

// The name of the public DNS.
func (o GetVmPrimaryNicPrivateIpLinkPublicIpOutput) PublicDnsName() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmPrimaryNicPrivateIpLinkPublicIp) string { return v.PublicDnsName }).(pulumi.StringOutput)
}

// The public IP of the VM.
func (o GetVmPrimaryNicPrivateIpLinkPublicIpOutput) PublicIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmPrimaryNicPrivateIpLinkPublicIp) string { return v.PublicIp }).(pulumi.StringOutput)
}

// The account ID of the owner of the public IP.
func (o GetVmPrimaryNicPrivateIpLinkPublicIpOutput) PublicIpAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmPrimaryNicPrivateIpLinkPublicIp) string { return v.PublicIpAccountId }).(pulumi.StringOutput)
}

type GetVmPrimaryNicPrivateIpLinkPublicIpArrayOutput struct{ *pulumi.OutputState }

func (GetVmPrimaryNicPrivateIpLinkPublicIpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVmPrimaryNicPrivateIpLinkPublicIp)(nil)).Elem()
}

func (o GetVmPrimaryNicPrivateIpLinkPublicIpArrayOutput) ToGetVmPrimaryNicPrivateIpLinkPublicIpArrayOutput() GetVmPrimaryNicPrivateIpLinkPublicIpArrayOutput {
	return o
}

func (o GetVmPrimaryNicPrivateIpLinkPublicIpArrayOutput) ToGetVmPrimaryNicPrivateIpLinkPublicIpArrayOutputWithContext(ctx context.Context) GetVmPrimaryNicPrivateIpLinkPublicIpArrayOutput {
	return o
}

func (o GetVmPrimaryNicPrivateIpLinkPublicIpArrayOutput) Index(i pulumi.IntInput) GetVmPrimaryNicPrivateIpLinkPublicIpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVmPrimaryNicPrivateIpLinkPublicIp {
		return vs[0].([]GetVmPrimaryNicPrivateIpLinkPublicIp)[vs[1].(int)]
	}).(GetVmPrimaryNicPrivateIpLinkPublicIpOutput)
}

type GetVmPrimaryNicSecurityGroup struct {
	// The ID of the security group.
	SecurityGroupId string `pulumi:"securityGroupId"`
	// The name of the security group.
	SecurityGroupName string `pulumi:"securityGroupName"`
}

// GetVmPrimaryNicSecurityGroupInput is an input type that accepts GetVmPrimaryNicSecurityGroupArgs and GetVmPrimaryNicSecurityGroupOutput values.
// You can construct a concrete instance of `GetVmPrimaryNicSecurityGroupInput` via:
//
//	GetVmPrimaryNicSecurityGroupArgs{...}
type GetVmPrimaryNicSecurityGroupInput interface {
	pulumi.Input

	ToGetVmPrimaryNicSecurityGroupOutput() GetVmPrimaryNicSecurityGroupOutput
	ToGetVmPrimaryNicSecurityGroupOutputWithContext(context.Context) GetVmPrimaryNicSecurityGroupOutput
}

type GetVmPrimaryNicSecurityGroupArgs struct {
	// The ID of the security group.
	SecurityGroupId pulumi.StringInput `pulumi:"securityGroupId"`
	// The name of the security group.
	SecurityGroupName pulumi.StringInput `pulumi:"securityGroupName"`
}

func (GetVmPrimaryNicSecurityGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVmPrimaryNicSecurityGroup)(nil)).Elem()
}

func (i GetVmPrimaryNicSecurityGroupArgs) ToGetVmPrimaryNicSecurityGroupOutput() GetVmPrimaryNicSecurityGroupOutput {
	return i.ToGetVmPrimaryNicSecurityGroupOutputWithContext(context.Background())
}

func (i GetVmPrimaryNicSecurityGroupArgs) ToGetVmPrimaryNicSecurityGroupOutputWithContext(ctx context.Context) GetVmPrimaryNicSecurityGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVmPrimaryNicSecurityGroupOutput)
}

// GetVmPrimaryNicSecurityGroupArrayInput is an input type that accepts GetVmPrimaryNicSecurityGroupArray and GetVmPrimaryNicSecurityGroupArrayOutput values.
// You can construct a concrete instance of `GetVmPrimaryNicSecurityGroupArrayInput` via:
//
//	GetVmPrimaryNicSecurityGroupArray{ GetVmPrimaryNicSecurityGroupArgs{...} }
type GetVmPrimaryNicSecurityGroupArrayInput interface {
	pulumi.Input

	ToGetVmPrimaryNicSecurityGroupArrayOutput() GetVmPrimaryNicSecurityGroupArrayOutput
	ToGetVmPrimaryNicSecurityGroupArrayOutputWithContext(context.Context) GetVmPrimaryNicSecurityGroupArrayOutput
}

type GetVmPrimaryNicSecurityGroupArray []GetVmPrimaryNicSecurityGroupInput

func (GetVmPrimaryNicSecurityGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVmPrimaryNicSecurityGroup)(nil)).Elem()
}

func (i GetVmPrimaryNicSecurityGroupArray) ToGetVmPrimaryNicSecurityGroupArrayOutput() GetVmPrimaryNicSecurityGroupArrayOutput {
	return i.ToGetVmPrimaryNicSecurityGroupArrayOutputWithContext(context.Background())
}

func (i GetVmPrimaryNicSecurityGroupArray) ToGetVmPrimaryNicSecurityGroupArrayOutputWithContext(ctx context.Context) GetVmPrimaryNicSecurityGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVmPrimaryNicSecurityGroupArrayOutput)
}

type GetVmPrimaryNicSecurityGroupOutput struct{ *pulumi.OutputState }

func (GetVmPrimaryNicSecurityGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVmPrimaryNicSecurityGroup)(nil)).Elem()
}

func (o GetVmPrimaryNicSecurityGroupOutput) ToGetVmPrimaryNicSecurityGroupOutput() GetVmPrimaryNicSecurityGroupOutput {
	return o
}

func (o GetVmPrimaryNicSecurityGroupOutput) ToGetVmPrimaryNicSecurityGroupOutputWithContext(ctx context.Context) GetVmPrimaryNicSecurityGroupOutput {
	return o
}

// The ID of the security group.
func (o GetVmPrimaryNicSecurityGroupOutput) SecurityGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmPrimaryNicSecurityGroup) string { return v.SecurityGroupId }).(pulumi.StringOutput)
}

// The name of the security group.
func (o GetVmPrimaryNicSecurityGroupOutput) SecurityGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmPrimaryNicSecurityGroup) string { return v.SecurityGroupName }).(pulumi.StringOutput)
}

type GetVmPrimaryNicSecurityGroupArrayOutput struct{ *pulumi.OutputState }

func (GetVmPrimaryNicSecurityGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVmPrimaryNicSecurityGroup)(nil)).Elem()
}

func (o GetVmPrimaryNicSecurityGroupArrayOutput) ToGetVmPrimaryNicSecurityGroupArrayOutput() GetVmPrimaryNicSecurityGroupArrayOutput {
	return o
}

func (o GetVmPrimaryNicSecurityGroupArrayOutput) ToGetVmPrimaryNicSecurityGroupArrayOutputWithContext(ctx context.Context) GetVmPrimaryNicSecurityGroupArrayOutput {
	return o
}

func (o GetVmPrimaryNicSecurityGroupArrayOutput) Index(i pulumi.IntInput) GetVmPrimaryNicSecurityGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVmPrimaryNicSecurityGroup {
		return vs[0].([]GetVmPrimaryNicSecurityGroup)[vs[1].(int)]
	}).(GetVmPrimaryNicSecurityGroupOutput)
}

type GetVmSecurityGroup struct {
	// The ID of the security group.
	SecurityGroupId string `pulumi:"securityGroupId"`
	// The name of the security group.
	SecurityGroupName string `pulumi:"securityGroupName"`
}

// GetVmSecurityGroupInput is an input type that accepts GetVmSecurityGroupArgs and GetVmSecurityGroupOutput values.
// You can construct a concrete instance of `GetVmSecurityGroupInput` via:
//
//	GetVmSecurityGroupArgs{...}
type GetVmSecurityGroupInput interface {
	pulumi.Input

	ToGetVmSecurityGroupOutput() GetVmSecurityGroupOutput
	ToGetVmSecurityGroupOutputWithContext(context.Context) GetVmSecurityGroupOutput
}

type GetVmSecurityGroupArgs struct {
	// The ID of the security group.
	SecurityGroupId pulumi.StringInput `pulumi:"securityGroupId"`
	// The name of the security group.
	SecurityGroupName pulumi.StringInput `pulumi:"securityGroupName"`
}

func (GetVmSecurityGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVmSecurityGroup)(nil)).Elem()
}

func (i GetVmSecurityGroupArgs) ToGetVmSecurityGroupOutput() GetVmSecurityGroupOutput {
	return i.ToGetVmSecurityGroupOutputWithContext(context.Background())
}

func (i GetVmSecurityGroupArgs) ToGetVmSecurityGroupOutputWithContext(ctx context.Context) GetVmSecurityGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVmSecurityGroupOutput)
}

// GetVmSecurityGroupArrayInput is an input type that accepts GetVmSecurityGroupArray and GetVmSecurityGroupArrayOutput values.
// You can construct a concrete instance of `GetVmSecurityGroupArrayInput` via:
//
//	GetVmSecurityGroupArray{ GetVmSecurityGroupArgs{...} }
type GetVmSecurityGroupArrayInput interface {
	pulumi.Input

	ToGetVmSecurityGroupArrayOutput() GetVmSecurityGroupArrayOutput
	ToGetVmSecurityGroupArrayOutputWithContext(context.Context) GetVmSecurityGroupArrayOutput
}

type GetVmSecurityGroupArray []GetVmSecurityGroupInput

func (GetVmSecurityGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVmSecurityGroup)(nil)).Elem()
}

func (i GetVmSecurityGroupArray) ToGetVmSecurityGroupArrayOutput() GetVmSecurityGroupArrayOutput {
	return i.ToGetVmSecurityGroupArrayOutputWithContext(context.Background())
}

func (i GetVmSecurityGroupArray) ToGetVmSecurityGroupArrayOutputWithContext(ctx context.Context) GetVmSecurityGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVmSecurityGroupArrayOutput)
}

type GetVmSecurityGroupOutput struct{ *pulumi.OutputState }

func (GetVmSecurityGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVmSecurityGroup)(nil)).Elem()
}

func (o GetVmSecurityGroupOutput) ToGetVmSecurityGroupOutput() GetVmSecurityGroupOutput {
	return o
}

func (o GetVmSecurityGroupOutput) ToGetVmSecurityGroupOutputWithContext(ctx context.Context) GetVmSecurityGroupOutput {
	return o
}

// The ID of the security group.
func (o GetVmSecurityGroupOutput) SecurityGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmSecurityGroup) string { return v.SecurityGroupId }).(pulumi.StringOutput)
}

// The name of the security group.
func (o GetVmSecurityGroupOutput) SecurityGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmSecurityGroup) string { return v.SecurityGroupName }).(pulumi.StringOutput)
}

type GetVmSecurityGroupArrayOutput struct{ *pulumi.OutputState }

func (GetVmSecurityGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVmSecurityGroup)(nil)).Elem()
}

func (o GetVmSecurityGroupArrayOutput) ToGetVmSecurityGroupArrayOutput() GetVmSecurityGroupArrayOutput {
	return o
}

func (o GetVmSecurityGroupArrayOutput) ToGetVmSecurityGroupArrayOutputWithContext(ctx context.Context) GetVmSecurityGroupArrayOutput {
	return o
}

func (o GetVmSecurityGroupArrayOutput) Index(i pulumi.IntInput) GetVmSecurityGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVmSecurityGroup {
		return vs[0].([]GetVmSecurityGroup)[vs[1].(int)]
	}).(GetVmSecurityGroupOutput)
}

type GetVmStateFilter struct {
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// GetVmStateFilterInput is an input type that accepts GetVmStateFilterArgs and GetVmStateFilterOutput values.
// You can construct a concrete instance of `GetVmStateFilterInput` via:
//
//	GetVmStateFilterArgs{...}
type GetVmStateFilterInput interface {
	pulumi.Input

	ToGetVmStateFilterOutput() GetVmStateFilterOutput
	ToGetVmStateFilterOutputWithContext(context.Context) GetVmStateFilterOutput
}

type GetVmStateFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetVmStateFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVmStateFilter)(nil)).Elem()
}

func (i GetVmStateFilterArgs) ToGetVmStateFilterOutput() GetVmStateFilterOutput {
	return i.ToGetVmStateFilterOutputWithContext(context.Background())
}

func (i GetVmStateFilterArgs) ToGetVmStateFilterOutputWithContext(ctx context.Context) GetVmStateFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVmStateFilterOutput)
}

// GetVmStateFilterArrayInput is an input type that accepts GetVmStateFilterArray and GetVmStateFilterArrayOutput values.
// You can construct a concrete instance of `GetVmStateFilterArrayInput` via:
//
//	GetVmStateFilterArray{ GetVmStateFilterArgs{...} }
type GetVmStateFilterArrayInput interface {
	pulumi.Input

	ToGetVmStateFilterArrayOutput() GetVmStateFilterArrayOutput
	ToGetVmStateFilterArrayOutputWithContext(context.Context) GetVmStateFilterArrayOutput
}

type GetVmStateFilterArray []GetVmStateFilterInput

func (GetVmStateFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVmStateFilter)(nil)).Elem()
}

func (i GetVmStateFilterArray) ToGetVmStateFilterArrayOutput() GetVmStateFilterArrayOutput {
	return i.ToGetVmStateFilterArrayOutputWithContext(context.Background())
}

func (i GetVmStateFilterArray) ToGetVmStateFilterArrayOutputWithContext(ctx context.Context) GetVmStateFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVmStateFilterArrayOutput)
}

type GetVmStateFilterOutput struct{ *pulumi.OutputState }

func (GetVmStateFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVmStateFilter)(nil)).Elem()
}

func (o GetVmStateFilterOutput) ToGetVmStateFilterOutput() GetVmStateFilterOutput {
	return o
}

func (o GetVmStateFilterOutput) ToGetVmStateFilterOutputWithContext(ctx context.Context) GetVmStateFilterOutput {
	return o
}

func (o GetVmStateFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmStateFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetVmStateFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetVmStateFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetVmStateFilterArrayOutput struct{ *pulumi.OutputState }

func (GetVmStateFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVmStateFilter)(nil)).Elem()
}

func (o GetVmStateFilterArrayOutput) ToGetVmStateFilterArrayOutput() GetVmStateFilterArrayOutput {
	return o
}

func (o GetVmStateFilterArrayOutput) ToGetVmStateFilterArrayOutputWithContext(ctx context.Context) GetVmStateFilterArrayOutput {
	return o
}

func (o GetVmStateFilterArrayOutput) Index(i pulumi.IntInput) GetVmStateFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVmStateFilter {
		return vs[0].([]GetVmStateFilter)[vs[1].(int)]
	}).(GetVmStateFilterOutput)
}

type GetVmStateMaintenanceEvent struct {
	// The code of the event (`system-reboot` \| `system-maintenance`).
	Code string `pulumi:"code"`
	// The description of the event.
	Description string `pulumi:"description"`
	// The latest scheduled end date and time (UTC) for the event.
	NotAfter string `pulumi:"notAfter"`
	// The earliest scheduled start date and time (UTC) for the event.
	NotBefore string `pulumi:"notBefore"`
}

// GetVmStateMaintenanceEventInput is an input type that accepts GetVmStateMaintenanceEventArgs and GetVmStateMaintenanceEventOutput values.
// You can construct a concrete instance of `GetVmStateMaintenanceEventInput` via:
//
//	GetVmStateMaintenanceEventArgs{...}
type GetVmStateMaintenanceEventInput interface {
	pulumi.Input

	ToGetVmStateMaintenanceEventOutput() GetVmStateMaintenanceEventOutput
	ToGetVmStateMaintenanceEventOutputWithContext(context.Context) GetVmStateMaintenanceEventOutput
}

type GetVmStateMaintenanceEventArgs struct {
	// The code of the event (`system-reboot` \| `system-maintenance`).
	Code pulumi.StringInput `pulumi:"code"`
	// The description of the event.
	Description pulumi.StringInput `pulumi:"description"`
	// The latest scheduled end date and time (UTC) for the event.
	NotAfter pulumi.StringInput `pulumi:"notAfter"`
	// The earliest scheduled start date and time (UTC) for the event.
	NotBefore pulumi.StringInput `pulumi:"notBefore"`
}

func (GetVmStateMaintenanceEventArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVmStateMaintenanceEvent)(nil)).Elem()
}

func (i GetVmStateMaintenanceEventArgs) ToGetVmStateMaintenanceEventOutput() GetVmStateMaintenanceEventOutput {
	return i.ToGetVmStateMaintenanceEventOutputWithContext(context.Background())
}

func (i GetVmStateMaintenanceEventArgs) ToGetVmStateMaintenanceEventOutputWithContext(ctx context.Context) GetVmStateMaintenanceEventOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVmStateMaintenanceEventOutput)
}

// GetVmStateMaintenanceEventArrayInput is an input type that accepts GetVmStateMaintenanceEventArray and GetVmStateMaintenanceEventArrayOutput values.
// You can construct a concrete instance of `GetVmStateMaintenanceEventArrayInput` via:
//
//	GetVmStateMaintenanceEventArray{ GetVmStateMaintenanceEventArgs{...} }
type GetVmStateMaintenanceEventArrayInput interface {
	pulumi.Input

	ToGetVmStateMaintenanceEventArrayOutput() GetVmStateMaintenanceEventArrayOutput
	ToGetVmStateMaintenanceEventArrayOutputWithContext(context.Context) GetVmStateMaintenanceEventArrayOutput
}

type GetVmStateMaintenanceEventArray []GetVmStateMaintenanceEventInput

func (GetVmStateMaintenanceEventArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVmStateMaintenanceEvent)(nil)).Elem()
}

func (i GetVmStateMaintenanceEventArray) ToGetVmStateMaintenanceEventArrayOutput() GetVmStateMaintenanceEventArrayOutput {
	return i.ToGetVmStateMaintenanceEventArrayOutputWithContext(context.Background())
}

func (i GetVmStateMaintenanceEventArray) ToGetVmStateMaintenanceEventArrayOutputWithContext(ctx context.Context) GetVmStateMaintenanceEventArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVmStateMaintenanceEventArrayOutput)
}

type GetVmStateMaintenanceEventOutput struct{ *pulumi.OutputState }

func (GetVmStateMaintenanceEventOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVmStateMaintenanceEvent)(nil)).Elem()
}

func (o GetVmStateMaintenanceEventOutput) ToGetVmStateMaintenanceEventOutput() GetVmStateMaintenanceEventOutput {
	return o
}

func (o GetVmStateMaintenanceEventOutput) ToGetVmStateMaintenanceEventOutputWithContext(ctx context.Context) GetVmStateMaintenanceEventOutput {
	return o
}

// The code of the event (`system-reboot` \| `system-maintenance`).
func (o GetVmStateMaintenanceEventOutput) Code() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmStateMaintenanceEvent) string { return v.Code }).(pulumi.StringOutput)
}

// The description of the event.
func (o GetVmStateMaintenanceEventOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmStateMaintenanceEvent) string { return v.Description }).(pulumi.StringOutput)
}

// The latest scheduled end date and time (UTC) for the event.
func (o GetVmStateMaintenanceEventOutput) NotAfter() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmStateMaintenanceEvent) string { return v.NotAfter }).(pulumi.StringOutput)
}

// The earliest scheduled start date and time (UTC) for the event.
func (o GetVmStateMaintenanceEventOutput) NotBefore() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmStateMaintenanceEvent) string { return v.NotBefore }).(pulumi.StringOutput)
}

type GetVmStateMaintenanceEventArrayOutput struct{ *pulumi.OutputState }

func (GetVmStateMaintenanceEventArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVmStateMaintenanceEvent)(nil)).Elem()
}

func (o GetVmStateMaintenanceEventArrayOutput) ToGetVmStateMaintenanceEventArrayOutput() GetVmStateMaintenanceEventArrayOutput {
	return o
}

func (o GetVmStateMaintenanceEventArrayOutput) ToGetVmStateMaintenanceEventArrayOutputWithContext(ctx context.Context) GetVmStateMaintenanceEventArrayOutput {
	return o
}

func (o GetVmStateMaintenanceEventArrayOutput) Index(i pulumi.IntInput) GetVmStateMaintenanceEventOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVmStateMaintenanceEvent {
		return vs[0].([]GetVmStateMaintenanceEvent)[vs[1].(int)]
	}).(GetVmStateMaintenanceEventOutput)
}

type GetVmStatesFilter struct {
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// GetVmStatesFilterInput is an input type that accepts GetVmStatesFilterArgs and GetVmStatesFilterOutput values.
// You can construct a concrete instance of `GetVmStatesFilterInput` via:
//
//	GetVmStatesFilterArgs{...}
type GetVmStatesFilterInput interface {
	pulumi.Input

	ToGetVmStatesFilterOutput() GetVmStatesFilterOutput
	ToGetVmStatesFilterOutputWithContext(context.Context) GetVmStatesFilterOutput
}

type GetVmStatesFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetVmStatesFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVmStatesFilter)(nil)).Elem()
}

func (i GetVmStatesFilterArgs) ToGetVmStatesFilterOutput() GetVmStatesFilterOutput {
	return i.ToGetVmStatesFilterOutputWithContext(context.Background())
}

func (i GetVmStatesFilterArgs) ToGetVmStatesFilterOutputWithContext(ctx context.Context) GetVmStatesFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVmStatesFilterOutput)
}

// GetVmStatesFilterArrayInput is an input type that accepts GetVmStatesFilterArray and GetVmStatesFilterArrayOutput values.
// You can construct a concrete instance of `GetVmStatesFilterArrayInput` via:
//
//	GetVmStatesFilterArray{ GetVmStatesFilterArgs{...} }
type GetVmStatesFilterArrayInput interface {
	pulumi.Input

	ToGetVmStatesFilterArrayOutput() GetVmStatesFilterArrayOutput
	ToGetVmStatesFilterArrayOutputWithContext(context.Context) GetVmStatesFilterArrayOutput
}

type GetVmStatesFilterArray []GetVmStatesFilterInput

func (GetVmStatesFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVmStatesFilter)(nil)).Elem()
}

func (i GetVmStatesFilterArray) ToGetVmStatesFilterArrayOutput() GetVmStatesFilterArrayOutput {
	return i.ToGetVmStatesFilterArrayOutputWithContext(context.Background())
}

func (i GetVmStatesFilterArray) ToGetVmStatesFilterArrayOutputWithContext(ctx context.Context) GetVmStatesFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVmStatesFilterArrayOutput)
}

type GetVmStatesFilterOutput struct{ *pulumi.OutputState }

func (GetVmStatesFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVmStatesFilter)(nil)).Elem()
}

func (o GetVmStatesFilterOutput) ToGetVmStatesFilterOutput() GetVmStatesFilterOutput {
	return o
}

func (o GetVmStatesFilterOutput) ToGetVmStatesFilterOutputWithContext(ctx context.Context) GetVmStatesFilterOutput {
	return o
}

func (o GetVmStatesFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmStatesFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetVmStatesFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetVmStatesFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetVmStatesFilterArrayOutput struct{ *pulumi.OutputState }

func (GetVmStatesFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVmStatesFilter)(nil)).Elem()
}

func (o GetVmStatesFilterArrayOutput) ToGetVmStatesFilterArrayOutput() GetVmStatesFilterArrayOutput {
	return o
}

func (o GetVmStatesFilterArrayOutput) ToGetVmStatesFilterArrayOutputWithContext(ctx context.Context) GetVmStatesFilterArrayOutput {
	return o
}

func (o GetVmStatesFilterArrayOutput) Index(i pulumi.IntInput) GetVmStatesFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVmStatesFilter {
		return vs[0].([]GetVmStatesFilter)[vs[1].(int)]
	}).(GetVmStatesFilterOutput)
}

type GetVmStatesVmState struct {
	// If true, includes the status of all VMs. By default or if set to false, only includes the status of running VMs.
	AllVms *bool `pulumi:"allVms"`
	// One or more scheduled events associated with the VM.
	MaintenanceEvents []GetVmStatesVmStateMaintenanceEvent `pulumi:"maintenanceEvents"`
	// The name of the Subregion of the VM.
	SubregionName string `pulumi:"subregionName"`
	// The ID of the VM.
	VmId *string `pulumi:"vmId"`
	// The state of the VM (`pending` \| `running` \| `stopping` \| `stopped` \| `shutting-down` \| `terminated` \| `quarantine`).
	VmState string `pulumi:"vmState"`
}

// GetVmStatesVmStateInput is an input type that accepts GetVmStatesVmStateArgs and GetVmStatesVmStateOutput values.
// You can construct a concrete instance of `GetVmStatesVmStateInput` via:
//
//	GetVmStatesVmStateArgs{...}
type GetVmStatesVmStateInput interface {
	pulumi.Input

	ToGetVmStatesVmStateOutput() GetVmStatesVmStateOutput
	ToGetVmStatesVmStateOutputWithContext(context.Context) GetVmStatesVmStateOutput
}

type GetVmStatesVmStateArgs struct {
	// If true, includes the status of all VMs. By default or if set to false, only includes the status of running VMs.
	AllVms pulumi.BoolPtrInput `pulumi:"allVms"`
	// One or more scheduled events associated with the VM.
	MaintenanceEvents GetVmStatesVmStateMaintenanceEventArrayInput `pulumi:"maintenanceEvents"`
	// The name of the Subregion of the VM.
	SubregionName pulumi.StringInput `pulumi:"subregionName"`
	// The ID of the VM.
	VmId pulumi.StringPtrInput `pulumi:"vmId"`
	// The state of the VM (`pending` \| `running` \| `stopping` \| `stopped` \| `shutting-down` \| `terminated` \| `quarantine`).
	VmState pulumi.StringInput `pulumi:"vmState"`
}

func (GetVmStatesVmStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVmStatesVmState)(nil)).Elem()
}

func (i GetVmStatesVmStateArgs) ToGetVmStatesVmStateOutput() GetVmStatesVmStateOutput {
	return i.ToGetVmStatesVmStateOutputWithContext(context.Background())
}

func (i GetVmStatesVmStateArgs) ToGetVmStatesVmStateOutputWithContext(ctx context.Context) GetVmStatesVmStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVmStatesVmStateOutput)
}

// GetVmStatesVmStateArrayInput is an input type that accepts GetVmStatesVmStateArray and GetVmStatesVmStateArrayOutput values.
// You can construct a concrete instance of `GetVmStatesVmStateArrayInput` via:
//
//	GetVmStatesVmStateArray{ GetVmStatesVmStateArgs{...} }
type GetVmStatesVmStateArrayInput interface {
	pulumi.Input

	ToGetVmStatesVmStateArrayOutput() GetVmStatesVmStateArrayOutput
	ToGetVmStatesVmStateArrayOutputWithContext(context.Context) GetVmStatesVmStateArrayOutput
}

type GetVmStatesVmStateArray []GetVmStatesVmStateInput

func (GetVmStatesVmStateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVmStatesVmState)(nil)).Elem()
}

func (i GetVmStatesVmStateArray) ToGetVmStatesVmStateArrayOutput() GetVmStatesVmStateArrayOutput {
	return i.ToGetVmStatesVmStateArrayOutputWithContext(context.Background())
}

func (i GetVmStatesVmStateArray) ToGetVmStatesVmStateArrayOutputWithContext(ctx context.Context) GetVmStatesVmStateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVmStatesVmStateArrayOutput)
}

type GetVmStatesVmStateOutput struct{ *pulumi.OutputState }

func (GetVmStatesVmStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVmStatesVmState)(nil)).Elem()
}

func (o GetVmStatesVmStateOutput) ToGetVmStatesVmStateOutput() GetVmStatesVmStateOutput {
	return o
}

func (o GetVmStatesVmStateOutput) ToGetVmStatesVmStateOutputWithContext(ctx context.Context) GetVmStatesVmStateOutput {
	return o
}

// If true, includes the status of all VMs. By default or if set to false, only includes the status of running VMs.
func (o GetVmStatesVmStateOutput) AllVms() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetVmStatesVmState) *bool { return v.AllVms }).(pulumi.BoolPtrOutput)
}

// One or more scheduled events associated with the VM.
func (o GetVmStatesVmStateOutput) MaintenanceEvents() GetVmStatesVmStateMaintenanceEventArrayOutput {
	return o.ApplyT(func(v GetVmStatesVmState) []GetVmStatesVmStateMaintenanceEvent { return v.MaintenanceEvents }).(GetVmStatesVmStateMaintenanceEventArrayOutput)
}

// The name of the Subregion of the VM.
func (o GetVmStatesVmStateOutput) SubregionName() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmStatesVmState) string { return v.SubregionName }).(pulumi.StringOutput)
}

// The ID of the VM.
func (o GetVmStatesVmStateOutput) VmId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetVmStatesVmState) *string { return v.VmId }).(pulumi.StringPtrOutput)
}

// The state of the VM (`pending` \| `running` \| `stopping` \| `stopped` \| `shutting-down` \| `terminated` \| `quarantine`).
func (o GetVmStatesVmStateOutput) VmState() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmStatesVmState) string { return v.VmState }).(pulumi.StringOutput)
}

type GetVmStatesVmStateArrayOutput struct{ *pulumi.OutputState }

func (GetVmStatesVmStateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVmStatesVmState)(nil)).Elem()
}

func (o GetVmStatesVmStateArrayOutput) ToGetVmStatesVmStateArrayOutput() GetVmStatesVmStateArrayOutput {
	return o
}

func (o GetVmStatesVmStateArrayOutput) ToGetVmStatesVmStateArrayOutputWithContext(ctx context.Context) GetVmStatesVmStateArrayOutput {
	return o
}

func (o GetVmStatesVmStateArrayOutput) Index(i pulumi.IntInput) GetVmStatesVmStateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVmStatesVmState {
		return vs[0].([]GetVmStatesVmState)[vs[1].(int)]
	}).(GetVmStatesVmStateOutput)
}

type GetVmStatesVmStateMaintenanceEvent struct {
	// The code of the event (`system-reboot` \| `system-maintenance`).
	Code string `pulumi:"code"`
	// The description of the event.
	Description string `pulumi:"description"`
	// The latest scheduled end date and time (UTC) for the event.
	NotAfter string `pulumi:"notAfter"`
	// The earliest scheduled start date and time (UTC) for the event.
	NotBefore string `pulumi:"notBefore"`
}

// GetVmStatesVmStateMaintenanceEventInput is an input type that accepts GetVmStatesVmStateMaintenanceEventArgs and GetVmStatesVmStateMaintenanceEventOutput values.
// You can construct a concrete instance of `GetVmStatesVmStateMaintenanceEventInput` via:
//
//	GetVmStatesVmStateMaintenanceEventArgs{...}
type GetVmStatesVmStateMaintenanceEventInput interface {
	pulumi.Input

	ToGetVmStatesVmStateMaintenanceEventOutput() GetVmStatesVmStateMaintenanceEventOutput
	ToGetVmStatesVmStateMaintenanceEventOutputWithContext(context.Context) GetVmStatesVmStateMaintenanceEventOutput
}

type GetVmStatesVmStateMaintenanceEventArgs struct {
	// The code of the event (`system-reboot` \| `system-maintenance`).
	Code pulumi.StringInput `pulumi:"code"`
	// The description of the event.
	Description pulumi.StringInput `pulumi:"description"`
	// The latest scheduled end date and time (UTC) for the event.
	NotAfter pulumi.StringInput `pulumi:"notAfter"`
	// The earliest scheduled start date and time (UTC) for the event.
	NotBefore pulumi.StringInput `pulumi:"notBefore"`
}

func (GetVmStatesVmStateMaintenanceEventArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVmStatesVmStateMaintenanceEvent)(nil)).Elem()
}

func (i GetVmStatesVmStateMaintenanceEventArgs) ToGetVmStatesVmStateMaintenanceEventOutput() GetVmStatesVmStateMaintenanceEventOutput {
	return i.ToGetVmStatesVmStateMaintenanceEventOutputWithContext(context.Background())
}

func (i GetVmStatesVmStateMaintenanceEventArgs) ToGetVmStatesVmStateMaintenanceEventOutputWithContext(ctx context.Context) GetVmStatesVmStateMaintenanceEventOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVmStatesVmStateMaintenanceEventOutput)
}

// GetVmStatesVmStateMaintenanceEventArrayInput is an input type that accepts GetVmStatesVmStateMaintenanceEventArray and GetVmStatesVmStateMaintenanceEventArrayOutput values.
// You can construct a concrete instance of `GetVmStatesVmStateMaintenanceEventArrayInput` via:
//
//	GetVmStatesVmStateMaintenanceEventArray{ GetVmStatesVmStateMaintenanceEventArgs{...} }
type GetVmStatesVmStateMaintenanceEventArrayInput interface {
	pulumi.Input

	ToGetVmStatesVmStateMaintenanceEventArrayOutput() GetVmStatesVmStateMaintenanceEventArrayOutput
	ToGetVmStatesVmStateMaintenanceEventArrayOutputWithContext(context.Context) GetVmStatesVmStateMaintenanceEventArrayOutput
}

type GetVmStatesVmStateMaintenanceEventArray []GetVmStatesVmStateMaintenanceEventInput

func (GetVmStatesVmStateMaintenanceEventArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVmStatesVmStateMaintenanceEvent)(nil)).Elem()
}

func (i GetVmStatesVmStateMaintenanceEventArray) ToGetVmStatesVmStateMaintenanceEventArrayOutput() GetVmStatesVmStateMaintenanceEventArrayOutput {
	return i.ToGetVmStatesVmStateMaintenanceEventArrayOutputWithContext(context.Background())
}

func (i GetVmStatesVmStateMaintenanceEventArray) ToGetVmStatesVmStateMaintenanceEventArrayOutputWithContext(ctx context.Context) GetVmStatesVmStateMaintenanceEventArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVmStatesVmStateMaintenanceEventArrayOutput)
}

type GetVmStatesVmStateMaintenanceEventOutput struct{ *pulumi.OutputState }

func (GetVmStatesVmStateMaintenanceEventOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVmStatesVmStateMaintenanceEvent)(nil)).Elem()
}

func (o GetVmStatesVmStateMaintenanceEventOutput) ToGetVmStatesVmStateMaintenanceEventOutput() GetVmStatesVmStateMaintenanceEventOutput {
	return o
}

func (o GetVmStatesVmStateMaintenanceEventOutput) ToGetVmStatesVmStateMaintenanceEventOutputWithContext(ctx context.Context) GetVmStatesVmStateMaintenanceEventOutput {
	return o
}

// The code of the event (`system-reboot` \| `system-maintenance`).
func (o GetVmStatesVmStateMaintenanceEventOutput) Code() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmStatesVmStateMaintenanceEvent) string { return v.Code }).(pulumi.StringOutput)
}

// The description of the event.
func (o GetVmStatesVmStateMaintenanceEventOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmStatesVmStateMaintenanceEvent) string { return v.Description }).(pulumi.StringOutput)
}

// The latest scheduled end date and time (UTC) for the event.
func (o GetVmStatesVmStateMaintenanceEventOutput) NotAfter() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmStatesVmStateMaintenanceEvent) string { return v.NotAfter }).(pulumi.StringOutput)
}

// The earliest scheduled start date and time (UTC) for the event.
func (o GetVmStatesVmStateMaintenanceEventOutput) NotBefore() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmStatesVmStateMaintenanceEvent) string { return v.NotBefore }).(pulumi.StringOutput)
}

type GetVmStatesVmStateMaintenanceEventArrayOutput struct{ *pulumi.OutputState }

func (GetVmStatesVmStateMaintenanceEventArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVmStatesVmStateMaintenanceEvent)(nil)).Elem()
}

func (o GetVmStatesVmStateMaintenanceEventArrayOutput) ToGetVmStatesVmStateMaintenanceEventArrayOutput() GetVmStatesVmStateMaintenanceEventArrayOutput {
	return o
}

func (o GetVmStatesVmStateMaintenanceEventArrayOutput) ToGetVmStatesVmStateMaintenanceEventArrayOutputWithContext(ctx context.Context) GetVmStatesVmStateMaintenanceEventArrayOutput {
	return o
}

func (o GetVmStatesVmStateMaintenanceEventArrayOutput) Index(i pulumi.IntInput) GetVmStatesVmStateMaintenanceEventOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVmStatesVmStateMaintenanceEvent {
		return vs[0].([]GetVmStatesVmStateMaintenanceEvent)[vs[1].(int)]
	}).(GetVmStatesVmStateMaintenanceEventOutput)
}

type GetVmTag struct {
	// The key of the tag, with a minimum of 1 character.
	Key string `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value string `pulumi:"value"`
}

// GetVmTagInput is an input type that accepts GetVmTagArgs and GetVmTagOutput values.
// You can construct a concrete instance of `GetVmTagInput` via:
//
//	GetVmTagArgs{...}
type GetVmTagInput interface {
	pulumi.Input

	ToGetVmTagOutput() GetVmTagOutput
	ToGetVmTagOutputWithContext(context.Context) GetVmTagOutput
}

type GetVmTagArgs struct {
	// The key of the tag, with a minimum of 1 character.
	Key pulumi.StringInput `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetVmTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVmTag)(nil)).Elem()
}

func (i GetVmTagArgs) ToGetVmTagOutput() GetVmTagOutput {
	return i.ToGetVmTagOutputWithContext(context.Background())
}

func (i GetVmTagArgs) ToGetVmTagOutputWithContext(ctx context.Context) GetVmTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVmTagOutput)
}

// GetVmTagArrayInput is an input type that accepts GetVmTagArray and GetVmTagArrayOutput values.
// You can construct a concrete instance of `GetVmTagArrayInput` via:
//
//	GetVmTagArray{ GetVmTagArgs{...} }
type GetVmTagArrayInput interface {
	pulumi.Input

	ToGetVmTagArrayOutput() GetVmTagArrayOutput
	ToGetVmTagArrayOutputWithContext(context.Context) GetVmTagArrayOutput
}

type GetVmTagArray []GetVmTagInput

func (GetVmTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVmTag)(nil)).Elem()
}

func (i GetVmTagArray) ToGetVmTagArrayOutput() GetVmTagArrayOutput {
	return i.ToGetVmTagArrayOutputWithContext(context.Background())
}

func (i GetVmTagArray) ToGetVmTagArrayOutputWithContext(ctx context.Context) GetVmTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVmTagArrayOutput)
}

type GetVmTagOutput struct{ *pulumi.OutputState }

func (GetVmTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVmTag)(nil)).Elem()
}

func (o GetVmTagOutput) ToGetVmTagOutput() GetVmTagOutput {
	return o
}

func (o GetVmTagOutput) ToGetVmTagOutputWithContext(ctx context.Context) GetVmTagOutput {
	return o
}

// The key of the tag, with a minimum of 1 character.
func (o GetVmTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmTag) string { return v.Key }).(pulumi.StringOutput)
}

// The value of the tag, between 0 and 255 characters.
func (o GetVmTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmTag) string { return v.Value }).(pulumi.StringOutput)
}

type GetVmTagArrayOutput struct{ *pulumi.OutputState }

func (GetVmTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVmTag)(nil)).Elem()
}

func (o GetVmTagArrayOutput) ToGetVmTagArrayOutput() GetVmTagArrayOutput {
	return o
}

func (o GetVmTagArrayOutput) ToGetVmTagArrayOutputWithContext(ctx context.Context) GetVmTagArrayOutput {
	return o
}

func (o GetVmTagArrayOutput) Index(i pulumi.IntInput) GetVmTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVmTag {
		return vs[0].([]GetVmTag)[vs[1].(int)]
	}).(GetVmTagOutput)
}

type GetVmTypesFilter struct {
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// GetVmTypesFilterInput is an input type that accepts GetVmTypesFilterArgs and GetVmTypesFilterOutput values.
// You can construct a concrete instance of `GetVmTypesFilterInput` via:
//
//	GetVmTypesFilterArgs{...}
type GetVmTypesFilterInput interface {
	pulumi.Input

	ToGetVmTypesFilterOutput() GetVmTypesFilterOutput
	ToGetVmTypesFilterOutputWithContext(context.Context) GetVmTypesFilterOutput
}

type GetVmTypesFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetVmTypesFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVmTypesFilter)(nil)).Elem()
}

func (i GetVmTypesFilterArgs) ToGetVmTypesFilterOutput() GetVmTypesFilterOutput {
	return i.ToGetVmTypesFilterOutputWithContext(context.Background())
}

func (i GetVmTypesFilterArgs) ToGetVmTypesFilterOutputWithContext(ctx context.Context) GetVmTypesFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVmTypesFilterOutput)
}

// GetVmTypesFilterArrayInput is an input type that accepts GetVmTypesFilterArray and GetVmTypesFilterArrayOutput values.
// You can construct a concrete instance of `GetVmTypesFilterArrayInput` via:
//
//	GetVmTypesFilterArray{ GetVmTypesFilterArgs{...} }
type GetVmTypesFilterArrayInput interface {
	pulumi.Input

	ToGetVmTypesFilterArrayOutput() GetVmTypesFilterArrayOutput
	ToGetVmTypesFilterArrayOutputWithContext(context.Context) GetVmTypesFilterArrayOutput
}

type GetVmTypesFilterArray []GetVmTypesFilterInput

func (GetVmTypesFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVmTypesFilter)(nil)).Elem()
}

func (i GetVmTypesFilterArray) ToGetVmTypesFilterArrayOutput() GetVmTypesFilterArrayOutput {
	return i.ToGetVmTypesFilterArrayOutputWithContext(context.Background())
}

func (i GetVmTypesFilterArray) ToGetVmTypesFilterArrayOutputWithContext(ctx context.Context) GetVmTypesFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVmTypesFilterArrayOutput)
}

type GetVmTypesFilterOutput struct{ *pulumi.OutputState }

func (GetVmTypesFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVmTypesFilter)(nil)).Elem()
}

func (o GetVmTypesFilterOutput) ToGetVmTypesFilterOutput() GetVmTypesFilterOutput {
	return o
}

func (o GetVmTypesFilterOutput) ToGetVmTypesFilterOutputWithContext(ctx context.Context) GetVmTypesFilterOutput {
	return o
}

func (o GetVmTypesFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmTypesFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetVmTypesFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetVmTypesFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetVmTypesFilterArrayOutput struct{ *pulumi.OutputState }

func (GetVmTypesFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVmTypesFilter)(nil)).Elem()
}

func (o GetVmTypesFilterArrayOutput) ToGetVmTypesFilterArrayOutput() GetVmTypesFilterArrayOutput {
	return o
}

func (o GetVmTypesFilterArrayOutput) ToGetVmTypesFilterArrayOutputWithContext(ctx context.Context) GetVmTypesFilterArrayOutput {
	return o
}

func (o GetVmTypesFilterArrayOutput) Index(i pulumi.IntInput) GetVmTypesFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVmTypesFilter {
		return vs[0].([]GetVmTypesFilter)[vs[1].(int)]
	}).(GetVmTypesFilterOutput)
}

type GetVmTypesVmType struct {
	// This parameter is not available. It is present in our API for the sake of historical compatibility with AWS.
	BsuOptimized bool `pulumi:"bsuOptimized"`
	// The maximum number of private IPs per network interface card (NIC).
	MaxPrivateIps int `pulumi:"maxPrivateIps"`
	// The amount of memory, in gibibytes.
	MemorySize int `pulumi:"memorySize"`
	// The number of vCores.
	VcoreCount int `pulumi:"vcoreCount"`
	// The name of the VM type.
	VmTypeName string `pulumi:"vmTypeName"`
	// The maximum number of ephemeral storage disks.
	VolumeCount int `pulumi:"volumeCount"`
	// The size of one ephemeral storage disk, in gibibytes (GiB).
	VolumeSize int `pulumi:"volumeSize"`
}

// GetVmTypesVmTypeInput is an input type that accepts GetVmTypesVmTypeArgs and GetVmTypesVmTypeOutput values.
// You can construct a concrete instance of `GetVmTypesVmTypeInput` via:
//
//	GetVmTypesVmTypeArgs{...}
type GetVmTypesVmTypeInput interface {
	pulumi.Input

	ToGetVmTypesVmTypeOutput() GetVmTypesVmTypeOutput
	ToGetVmTypesVmTypeOutputWithContext(context.Context) GetVmTypesVmTypeOutput
}

type GetVmTypesVmTypeArgs struct {
	// This parameter is not available. It is present in our API for the sake of historical compatibility with AWS.
	BsuOptimized pulumi.BoolInput `pulumi:"bsuOptimized"`
	// The maximum number of private IPs per network interface card (NIC).
	MaxPrivateIps pulumi.IntInput `pulumi:"maxPrivateIps"`
	// The amount of memory, in gibibytes.
	MemorySize pulumi.IntInput `pulumi:"memorySize"`
	// The number of vCores.
	VcoreCount pulumi.IntInput `pulumi:"vcoreCount"`
	// The name of the VM type.
	VmTypeName pulumi.StringInput `pulumi:"vmTypeName"`
	// The maximum number of ephemeral storage disks.
	VolumeCount pulumi.IntInput `pulumi:"volumeCount"`
	// The size of one ephemeral storage disk, in gibibytes (GiB).
	VolumeSize pulumi.IntInput `pulumi:"volumeSize"`
}

func (GetVmTypesVmTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVmTypesVmType)(nil)).Elem()
}

func (i GetVmTypesVmTypeArgs) ToGetVmTypesVmTypeOutput() GetVmTypesVmTypeOutput {
	return i.ToGetVmTypesVmTypeOutputWithContext(context.Background())
}

func (i GetVmTypesVmTypeArgs) ToGetVmTypesVmTypeOutputWithContext(ctx context.Context) GetVmTypesVmTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVmTypesVmTypeOutput)
}

// GetVmTypesVmTypeArrayInput is an input type that accepts GetVmTypesVmTypeArray and GetVmTypesVmTypeArrayOutput values.
// You can construct a concrete instance of `GetVmTypesVmTypeArrayInput` via:
//
//	GetVmTypesVmTypeArray{ GetVmTypesVmTypeArgs{...} }
type GetVmTypesVmTypeArrayInput interface {
	pulumi.Input

	ToGetVmTypesVmTypeArrayOutput() GetVmTypesVmTypeArrayOutput
	ToGetVmTypesVmTypeArrayOutputWithContext(context.Context) GetVmTypesVmTypeArrayOutput
}

type GetVmTypesVmTypeArray []GetVmTypesVmTypeInput

func (GetVmTypesVmTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVmTypesVmType)(nil)).Elem()
}

func (i GetVmTypesVmTypeArray) ToGetVmTypesVmTypeArrayOutput() GetVmTypesVmTypeArrayOutput {
	return i.ToGetVmTypesVmTypeArrayOutputWithContext(context.Background())
}

func (i GetVmTypesVmTypeArray) ToGetVmTypesVmTypeArrayOutputWithContext(ctx context.Context) GetVmTypesVmTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVmTypesVmTypeArrayOutput)
}

type GetVmTypesVmTypeOutput struct{ *pulumi.OutputState }

func (GetVmTypesVmTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVmTypesVmType)(nil)).Elem()
}

func (o GetVmTypesVmTypeOutput) ToGetVmTypesVmTypeOutput() GetVmTypesVmTypeOutput {
	return o
}

func (o GetVmTypesVmTypeOutput) ToGetVmTypesVmTypeOutputWithContext(ctx context.Context) GetVmTypesVmTypeOutput {
	return o
}

// This parameter is not available. It is present in our API for the sake of historical compatibility with AWS.
func (o GetVmTypesVmTypeOutput) BsuOptimized() pulumi.BoolOutput {
	return o.ApplyT(func(v GetVmTypesVmType) bool { return v.BsuOptimized }).(pulumi.BoolOutput)
}

// The maximum number of private IPs per network interface card (NIC).
func (o GetVmTypesVmTypeOutput) MaxPrivateIps() pulumi.IntOutput {
	return o.ApplyT(func(v GetVmTypesVmType) int { return v.MaxPrivateIps }).(pulumi.IntOutput)
}

// The amount of memory, in gibibytes.
func (o GetVmTypesVmTypeOutput) MemorySize() pulumi.IntOutput {
	return o.ApplyT(func(v GetVmTypesVmType) int { return v.MemorySize }).(pulumi.IntOutput)
}

// The number of vCores.
func (o GetVmTypesVmTypeOutput) VcoreCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetVmTypesVmType) int { return v.VcoreCount }).(pulumi.IntOutput)
}

// The name of the VM type.
func (o GetVmTypesVmTypeOutput) VmTypeName() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmTypesVmType) string { return v.VmTypeName }).(pulumi.StringOutput)
}

// The maximum number of ephemeral storage disks.
func (o GetVmTypesVmTypeOutput) VolumeCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetVmTypesVmType) int { return v.VolumeCount }).(pulumi.IntOutput)
}

// The size of one ephemeral storage disk, in gibibytes (GiB).
func (o GetVmTypesVmTypeOutput) VolumeSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetVmTypesVmType) int { return v.VolumeSize }).(pulumi.IntOutput)
}

type GetVmTypesVmTypeArrayOutput struct{ *pulumi.OutputState }

func (GetVmTypesVmTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVmTypesVmType)(nil)).Elem()
}

func (o GetVmTypesVmTypeArrayOutput) ToGetVmTypesVmTypeArrayOutput() GetVmTypesVmTypeArrayOutput {
	return o
}

func (o GetVmTypesVmTypeArrayOutput) ToGetVmTypesVmTypeArrayOutputWithContext(ctx context.Context) GetVmTypesVmTypeArrayOutput {
	return o
}

func (o GetVmTypesVmTypeArrayOutput) Index(i pulumi.IntInput) GetVmTypesVmTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVmTypesVmType {
		return vs[0].([]GetVmTypesVmType)[vs[1].(int)]
	}).(GetVmTypesVmTypeOutput)
}

type GetVmsFilter struct {
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// GetVmsFilterInput is an input type that accepts GetVmsFilterArgs and GetVmsFilterOutput values.
// You can construct a concrete instance of `GetVmsFilterInput` via:
//
//	GetVmsFilterArgs{...}
type GetVmsFilterInput interface {
	pulumi.Input

	ToGetVmsFilterOutput() GetVmsFilterOutput
	ToGetVmsFilterOutputWithContext(context.Context) GetVmsFilterOutput
}

type GetVmsFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetVmsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVmsFilter)(nil)).Elem()
}

func (i GetVmsFilterArgs) ToGetVmsFilterOutput() GetVmsFilterOutput {
	return i.ToGetVmsFilterOutputWithContext(context.Background())
}

func (i GetVmsFilterArgs) ToGetVmsFilterOutputWithContext(ctx context.Context) GetVmsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVmsFilterOutput)
}

// GetVmsFilterArrayInput is an input type that accepts GetVmsFilterArray and GetVmsFilterArrayOutput values.
// You can construct a concrete instance of `GetVmsFilterArrayInput` via:
//
//	GetVmsFilterArray{ GetVmsFilterArgs{...} }
type GetVmsFilterArrayInput interface {
	pulumi.Input

	ToGetVmsFilterArrayOutput() GetVmsFilterArrayOutput
	ToGetVmsFilterArrayOutputWithContext(context.Context) GetVmsFilterArrayOutput
}

type GetVmsFilterArray []GetVmsFilterInput

func (GetVmsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVmsFilter)(nil)).Elem()
}

func (i GetVmsFilterArray) ToGetVmsFilterArrayOutput() GetVmsFilterArrayOutput {
	return i.ToGetVmsFilterArrayOutputWithContext(context.Background())
}

func (i GetVmsFilterArray) ToGetVmsFilterArrayOutputWithContext(ctx context.Context) GetVmsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVmsFilterArrayOutput)
}

type GetVmsFilterOutput struct{ *pulumi.OutputState }

func (GetVmsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVmsFilter)(nil)).Elem()
}

func (o GetVmsFilterOutput) ToGetVmsFilterOutput() GetVmsFilterOutput {
	return o
}

func (o GetVmsFilterOutput) ToGetVmsFilterOutputWithContext(ctx context.Context) GetVmsFilterOutput {
	return o
}

func (o GetVmsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetVmsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetVmsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetVmsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetVmsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVmsFilter)(nil)).Elem()
}

func (o GetVmsFilterArrayOutput) ToGetVmsFilterArrayOutput() GetVmsFilterArrayOutput {
	return o
}

func (o GetVmsFilterArrayOutput) ToGetVmsFilterArrayOutputWithContext(ctx context.Context) GetVmsFilterArrayOutput {
	return o
}

func (o GetVmsFilterArrayOutput) Index(i pulumi.IntInput) GetVmsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVmsFilter {
		return vs[0].([]GetVmsFilter)[vs[1].(int)]
	}).(GetVmsFilterOutput)
}

type GetVmsVm struct {
	ActionsOnNextBoots []GetVmsVmActionsOnNextBoot `pulumi:"actionsOnNextBoots"`
	// The architecture of the VM (`i386` \| `x8664`).
	Architecture string `pulumi:"architecture"`
	// The block device mapping of the VM.
	BlockDeviceMappingsCreateds []GetVmsVmBlockDeviceMappingsCreated `pulumi:"blockDeviceMappingsCreateds"`
	BootMode                    string                               `pulumi:"bootMode"`
	BsuOptimized                bool                                 `pulumi:"bsuOptimized"`
	// The idempotency token provided when launching the VM.
	ClientToken string `pulumi:"clientToken"`
	// The date and time (UTC) at which the VM was created.
	CreationDate string `pulumi:"creationDate"`
	// If true, you cannot delete the VM unless you change this parameter back to false.
	DeletionProtection bool `pulumi:"deletionProtection"`
	// The hypervisor type of the VMs (`ovm` \| `xen`).
	Hypervisor string `pulumi:"hypervisor"`
	// The ID of the OMI used to create the VM.
	ImageId string `pulumi:"imageId"`
	// (Net only) If true, the source/destination check is enabled. If false, it is disabled.
	IsSourceDestChecked bool `pulumi:"isSourceDestChecked"`
	// The name of the keypair used when launching the VM.
	KeypairName string `pulumi:"keypairName"`
	// The number for the VM when launching a group of several VMs (for example, `0`, `1`, `2`, and so on).
	LaunchNumber int `pulumi:"launchNumber"`
	// If true, nested virtualization is enabled. If false, it is disabled.
	NestedVirtualization bool `pulumi:"nestedVirtualization"`
	// The ID of the Net for the NIC.
	NetId string `pulumi:"netId"`
	// (Net only) The network interface cards (NICs) the VMs are attached to.
	Nics []GetVmsVmNic `pulumi:"nics"`
	// Indicates the operating system (OS) of the VM.
	OsFamily string `pulumi:"osFamily"`
	// The performance of the VM (`medium` \| `high` \|  `highest`).
	Performance            string               `pulumi:"performance"`
	PlacementSubregionName string               `pulumi:"placementSubregionName"`
	PlacementTenancy       string               `pulumi:"placementTenancy"`
	PrimaryNics            []GetVmsVmPrimaryNic `pulumi:"primaryNics"`
	// The name of the private DNS.
	PrivateDnsName string `pulumi:"privateDnsName"`
	// The primary private IP of the VM.
	PrivateIp string `pulumi:"privateIp"`
	// The private IP or IPs of the NIC.
	PrivateIps []string `pulumi:"privateIps"`
	// The product codes associated with the OMI used to create the VM.
	ProductCodes []string `pulumi:"productCodes"`
	// The name of the public DNS.
	PublicDnsName string `pulumi:"publicDnsName"`
	// The public IP of the VM.
	PublicIp  string `pulumi:"publicIp"`
	RequestId string `pulumi:"requestId"`
	// The reservation ID of the VM.
	ReservationId string `pulumi:"reservationId"`
	// The name of the root device for the VM (for example, `/dev/sda1`).
	RootDeviceName string `pulumi:"rootDeviceName"`
	// The type of root device used by the VM (always `bsu`).
	RootDeviceType string `pulumi:"rootDeviceType"`
	// The IDs of the security groups for the VMs (only in the public Cloud).
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// The names of the security groups for the VMs (only in the public Cloud).
	SecurityGroupNames []string `pulumi:"securityGroupNames"`
	// One or more security groups associated with the VM.
	SecurityGroups []GetVmsVmSecurityGroup `pulumi:"securityGroups"`
	// The state of the VM (`pending` \| `running` \| `stopping` \| `stopped` \| `shutting-down` \| `terminated` \| `quarantine`).
	State string `pulumi:"state"`
	// The reason explaining the current state of the VM.
	StateReason string `pulumi:"stateReason"`
	// The ID of the Subnet for the VM.
	SubnetId string `pulumi:"subnetId"`
	// One or more tags associated with the VM.
	Tags []GetVmsVmTag `pulumi:"tags"`
	// The Base64-encoded MIME user data.
	UserData string `pulumi:"userData"`
	// The ID of the VM.
	VmId string `pulumi:"vmId"`
	// The VM behavior when you stop it. If set to `stop`, the VM stops. If set to `restart`, the VM stops then automatically restarts. If set to `terminate`, the VM stops and is deleted.
	VmInitiatedShutdownBehavior string `pulumi:"vmInitiatedShutdownBehavior"`
	// The type of VM. For more information, see [VM Types](https://docs.outscale.com/en/userguide/VM-Types.html).
	VmType string `pulumi:"vmType"`
}

// GetVmsVmInput is an input type that accepts GetVmsVmArgs and GetVmsVmOutput values.
// You can construct a concrete instance of `GetVmsVmInput` via:
//
//	GetVmsVmArgs{...}
type GetVmsVmInput interface {
	pulumi.Input

	ToGetVmsVmOutput() GetVmsVmOutput
	ToGetVmsVmOutputWithContext(context.Context) GetVmsVmOutput
}

type GetVmsVmArgs struct {
	ActionsOnNextBoots GetVmsVmActionsOnNextBootArrayInput `pulumi:"actionsOnNextBoots"`
	// The architecture of the VM (`i386` \| `x8664`).
	Architecture pulumi.StringInput `pulumi:"architecture"`
	// The block device mapping of the VM.
	BlockDeviceMappingsCreateds GetVmsVmBlockDeviceMappingsCreatedArrayInput `pulumi:"blockDeviceMappingsCreateds"`
	BootMode                    pulumi.StringInput                           `pulumi:"bootMode"`
	BsuOptimized                pulumi.BoolInput                             `pulumi:"bsuOptimized"`
	// The idempotency token provided when launching the VM.
	ClientToken pulumi.StringInput `pulumi:"clientToken"`
	// The date and time (UTC) at which the VM was created.
	CreationDate pulumi.StringInput `pulumi:"creationDate"`
	// If true, you cannot delete the VM unless you change this parameter back to false.
	DeletionProtection pulumi.BoolInput `pulumi:"deletionProtection"`
	// The hypervisor type of the VMs (`ovm` \| `xen`).
	Hypervisor pulumi.StringInput `pulumi:"hypervisor"`
	// The ID of the OMI used to create the VM.
	ImageId pulumi.StringInput `pulumi:"imageId"`
	// (Net only) If true, the source/destination check is enabled. If false, it is disabled.
	IsSourceDestChecked pulumi.BoolInput `pulumi:"isSourceDestChecked"`
	// The name of the keypair used when launching the VM.
	KeypairName pulumi.StringInput `pulumi:"keypairName"`
	// The number for the VM when launching a group of several VMs (for example, `0`, `1`, `2`, and so on).
	LaunchNumber pulumi.IntInput `pulumi:"launchNumber"`
	// If true, nested virtualization is enabled. If false, it is disabled.
	NestedVirtualization pulumi.BoolInput `pulumi:"nestedVirtualization"`
	// The ID of the Net for the NIC.
	NetId pulumi.StringInput `pulumi:"netId"`
	// (Net only) The network interface cards (NICs) the VMs are attached to.
	Nics GetVmsVmNicArrayInput `pulumi:"nics"`
	// Indicates the operating system (OS) of the VM.
	OsFamily pulumi.StringInput `pulumi:"osFamily"`
	// The performance of the VM (`medium` \| `high` \|  `highest`).
	Performance            pulumi.StringInput           `pulumi:"performance"`
	PlacementSubregionName pulumi.StringInput           `pulumi:"placementSubregionName"`
	PlacementTenancy       pulumi.StringInput           `pulumi:"placementTenancy"`
	PrimaryNics            GetVmsVmPrimaryNicArrayInput `pulumi:"primaryNics"`
	// The name of the private DNS.
	PrivateDnsName pulumi.StringInput `pulumi:"privateDnsName"`
	// The primary private IP of the VM.
	PrivateIp pulumi.StringInput `pulumi:"privateIp"`
	// The private IP or IPs of the NIC.
	PrivateIps pulumi.StringArrayInput `pulumi:"privateIps"`
	// The product codes associated with the OMI used to create the VM.
	ProductCodes pulumi.StringArrayInput `pulumi:"productCodes"`
	// The name of the public DNS.
	PublicDnsName pulumi.StringInput `pulumi:"publicDnsName"`
	// The public IP of the VM.
	PublicIp  pulumi.StringInput `pulumi:"publicIp"`
	RequestId pulumi.StringInput `pulumi:"requestId"`
	// The reservation ID of the VM.
	ReservationId pulumi.StringInput `pulumi:"reservationId"`
	// The name of the root device for the VM (for example, `/dev/sda1`).
	RootDeviceName pulumi.StringInput `pulumi:"rootDeviceName"`
	// The type of root device used by the VM (always `bsu`).
	RootDeviceType pulumi.StringInput `pulumi:"rootDeviceType"`
	// The IDs of the security groups for the VMs (only in the public Cloud).
	SecurityGroupIds pulumi.StringArrayInput `pulumi:"securityGroupIds"`
	// The names of the security groups for the VMs (only in the public Cloud).
	SecurityGroupNames pulumi.StringArrayInput `pulumi:"securityGroupNames"`
	// One or more security groups associated with the VM.
	SecurityGroups GetVmsVmSecurityGroupArrayInput `pulumi:"securityGroups"`
	// The state of the VM (`pending` \| `running` \| `stopping` \| `stopped` \| `shutting-down` \| `terminated` \| `quarantine`).
	State pulumi.StringInput `pulumi:"state"`
	// The reason explaining the current state of the VM.
	StateReason pulumi.StringInput `pulumi:"stateReason"`
	// The ID of the Subnet for the VM.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
	// One or more tags associated with the VM.
	Tags GetVmsVmTagArrayInput `pulumi:"tags"`
	// The Base64-encoded MIME user data.
	UserData pulumi.StringInput `pulumi:"userData"`
	// The ID of the VM.
	VmId pulumi.StringInput `pulumi:"vmId"`
	// The VM behavior when you stop it. If set to `stop`, the VM stops. If set to `restart`, the VM stops then automatically restarts. If set to `terminate`, the VM stops and is deleted.
	VmInitiatedShutdownBehavior pulumi.StringInput `pulumi:"vmInitiatedShutdownBehavior"`
	// The type of VM. For more information, see [VM Types](https://docs.outscale.com/en/userguide/VM-Types.html).
	VmType pulumi.StringInput `pulumi:"vmType"`
}

func (GetVmsVmArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVmsVm)(nil)).Elem()
}

func (i GetVmsVmArgs) ToGetVmsVmOutput() GetVmsVmOutput {
	return i.ToGetVmsVmOutputWithContext(context.Background())
}

func (i GetVmsVmArgs) ToGetVmsVmOutputWithContext(ctx context.Context) GetVmsVmOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVmsVmOutput)
}

// GetVmsVmArrayInput is an input type that accepts GetVmsVmArray and GetVmsVmArrayOutput values.
// You can construct a concrete instance of `GetVmsVmArrayInput` via:
//
//	GetVmsVmArray{ GetVmsVmArgs{...} }
type GetVmsVmArrayInput interface {
	pulumi.Input

	ToGetVmsVmArrayOutput() GetVmsVmArrayOutput
	ToGetVmsVmArrayOutputWithContext(context.Context) GetVmsVmArrayOutput
}

type GetVmsVmArray []GetVmsVmInput

func (GetVmsVmArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVmsVm)(nil)).Elem()
}

func (i GetVmsVmArray) ToGetVmsVmArrayOutput() GetVmsVmArrayOutput {
	return i.ToGetVmsVmArrayOutputWithContext(context.Background())
}

func (i GetVmsVmArray) ToGetVmsVmArrayOutputWithContext(ctx context.Context) GetVmsVmArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVmsVmArrayOutput)
}

type GetVmsVmOutput struct{ *pulumi.OutputState }

func (GetVmsVmOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVmsVm)(nil)).Elem()
}

func (o GetVmsVmOutput) ToGetVmsVmOutput() GetVmsVmOutput {
	return o
}

func (o GetVmsVmOutput) ToGetVmsVmOutputWithContext(ctx context.Context) GetVmsVmOutput {
	return o
}

func (o GetVmsVmOutput) ActionsOnNextBoots() GetVmsVmActionsOnNextBootArrayOutput {
	return o.ApplyT(func(v GetVmsVm) []GetVmsVmActionsOnNextBoot { return v.ActionsOnNextBoots }).(GetVmsVmActionsOnNextBootArrayOutput)
}

// The architecture of the VM (`i386` \| `x8664`).
func (o GetVmsVmOutput) Architecture() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmsVm) string { return v.Architecture }).(pulumi.StringOutput)
}

// The block device mapping of the VM.
func (o GetVmsVmOutput) BlockDeviceMappingsCreateds() GetVmsVmBlockDeviceMappingsCreatedArrayOutput {
	return o.ApplyT(func(v GetVmsVm) []GetVmsVmBlockDeviceMappingsCreated { return v.BlockDeviceMappingsCreateds }).(GetVmsVmBlockDeviceMappingsCreatedArrayOutput)
}

func (o GetVmsVmOutput) BootMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmsVm) string { return v.BootMode }).(pulumi.StringOutput)
}

func (o GetVmsVmOutput) BsuOptimized() pulumi.BoolOutput {
	return o.ApplyT(func(v GetVmsVm) bool { return v.BsuOptimized }).(pulumi.BoolOutput)
}

// The idempotency token provided when launching the VM.
func (o GetVmsVmOutput) ClientToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmsVm) string { return v.ClientToken }).(pulumi.StringOutput)
}

// The date and time (UTC) at which the VM was created.
func (o GetVmsVmOutput) CreationDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmsVm) string { return v.CreationDate }).(pulumi.StringOutput)
}

// If true, you cannot delete the VM unless you change this parameter back to false.
func (o GetVmsVmOutput) DeletionProtection() pulumi.BoolOutput {
	return o.ApplyT(func(v GetVmsVm) bool { return v.DeletionProtection }).(pulumi.BoolOutput)
}

// The hypervisor type of the VMs (`ovm` \| `xen`).
func (o GetVmsVmOutput) Hypervisor() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmsVm) string { return v.Hypervisor }).(pulumi.StringOutput)
}

// The ID of the OMI used to create the VM.
func (o GetVmsVmOutput) ImageId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmsVm) string { return v.ImageId }).(pulumi.StringOutput)
}

// (Net only) If true, the source/destination check is enabled. If false, it is disabled.
func (o GetVmsVmOutput) IsSourceDestChecked() pulumi.BoolOutput {
	return o.ApplyT(func(v GetVmsVm) bool { return v.IsSourceDestChecked }).(pulumi.BoolOutput)
}

// The name of the keypair used when launching the VM.
func (o GetVmsVmOutput) KeypairName() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmsVm) string { return v.KeypairName }).(pulumi.StringOutput)
}

// The number for the VM when launching a group of several VMs (for example, `0`, `1`, `2`, and so on).
func (o GetVmsVmOutput) LaunchNumber() pulumi.IntOutput {
	return o.ApplyT(func(v GetVmsVm) int { return v.LaunchNumber }).(pulumi.IntOutput)
}

// If true, nested virtualization is enabled. If false, it is disabled.
func (o GetVmsVmOutput) NestedVirtualization() pulumi.BoolOutput {
	return o.ApplyT(func(v GetVmsVm) bool { return v.NestedVirtualization }).(pulumi.BoolOutput)
}

// The ID of the Net for the NIC.
func (o GetVmsVmOutput) NetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmsVm) string { return v.NetId }).(pulumi.StringOutput)
}

// (Net only) The network interface cards (NICs) the VMs are attached to.
func (o GetVmsVmOutput) Nics() GetVmsVmNicArrayOutput {
	return o.ApplyT(func(v GetVmsVm) []GetVmsVmNic { return v.Nics }).(GetVmsVmNicArrayOutput)
}

// Indicates the operating system (OS) of the VM.
func (o GetVmsVmOutput) OsFamily() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmsVm) string { return v.OsFamily }).(pulumi.StringOutput)
}

// The performance of the VM (`medium` \| `high` \|  `highest`).
func (o GetVmsVmOutput) Performance() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmsVm) string { return v.Performance }).(pulumi.StringOutput)
}

func (o GetVmsVmOutput) PlacementSubregionName() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmsVm) string { return v.PlacementSubregionName }).(pulumi.StringOutput)
}

func (o GetVmsVmOutput) PlacementTenancy() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmsVm) string { return v.PlacementTenancy }).(pulumi.StringOutput)
}

func (o GetVmsVmOutput) PrimaryNics() GetVmsVmPrimaryNicArrayOutput {
	return o.ApplyT(func(v GetVmsVm) []GetVmsVmPrimaryNic { return v.PrimaryNics }).(GetVmsVmPrimaryNicArrayOutput)
}

// The name of the private DNS.
func (o GetVmsVmOutput) PrivateDnsName() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmsVm) string { return v.PrivateDnsName }).(pulumi.StringOutput)
}

// The primary private IP of the VM.
func (o GetVmsVmOutput) PrivateIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmsVm) string { return v.PrivateIp }).(pulumi.StringOutput)
}

// The private IP or IPs of the NIC.
func (o GetVmsVmOutput) PrivateIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetVmsVm) []string { return v.PrivateIps }).(pulumi.StringArrayOutput)
}

// The product codes associated with the OMI used to create the VM.
func (o GetVmsVmOutput) ProductCodes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetVmsVm) []string { return v.ProductCodes }).(pulumi.StringArrayOutput)
}

// The name of the public DNS.
func (o GetVmsVmOutput) PublicDnsName() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmsVm) string { return v.PublicDnsName }).(pulumi.StringOutput)
}

// The public IP of the VM.
func (o GetVmsVmOutput) PublicIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmsVm) string { return v.PublicIp }).(pulumi.StringOutput)
}

func (o GetVmsVmOutput) RequestId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmsVm) string { return v.RequestId }).(pulumi.StringOutput)
}

// The reservation ID of the VM.
func (o GetVmsVmOutput) ReservationId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmsVm) string { return v.ReservationId }).(pulumi.StringOutput)
}

// The name of the root device for the VM (for example, `/dev/sda1`).
func (o GetVmsVmOutput) RootDeviceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmsVm) string { return v.RootDeviceName }).(pulumi.StringOutput)
}

// The type of root device used by the VM (always `bsu`).
func (o GetVmsVmOutput) RootDeviceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmsVm) string { return v.RootDeviceType }).(pulumi.StringOutput)
}

// The IDs of the security groups for the VMs (only in the public Cloud).
func (o GetVmsVmOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetVmsVm) []string { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

// The names of the security groups for the VMs (only in the public Cloud).
func (o GetVmsVmOutput) SecurityGroupNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetVmsVm) []string { return v.SecurityGroupNames }).(pulumi.StringArrayOutput)
}

// One or more security groups associated with the VM.
func (o GetVmsVmOutput) SecurityGroups() GetVmsVmSecurityGroupArrayOutput {
	return o.ApplyT(func(v GetVmsVm) []GetVmsVmSecurityGroup { return v.SecurityGroups }).(GetVmsVmSecurityGroupArrayOutput)
}

// The state of the VM (`pending` \| `running` \| `stopping` \| `stopped` \| `shutting-down` \| `terminated` \| `quarantine`).
func (o GetVmsVmOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmsVm) string { return v.State }).(pulumi.StringOutput)
}

// The reason explaining the current state of the VM.
func (o GetVmsVmOutput) StateReason() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmsVm) string { return v.StateReason }).(pulumi.StringOutput)
}

// The ID of the Subnet for the VM.
func (o GetVmsVmOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmsVm) string { return v.SubnetId }).(pulumi.StringOutput)
}

// One or more tags associated with the VM.
func (o GetVmsVmOutput) Tags() GetVmsVmTagArrayOutput {
	return o.ApplyT(func(v GetVmsVm) []GetVmsVmTag { return v.Tags }).(GetVmsVmTagArrayOutput)
}

// The Base64-encoded MIME user data.
func (o GetVmsVmOutput) UserData() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmsVm) string { return v.UserData }).(pulumi.StringOutput)
}

// The ID of the VM.
func (o GetVmsVmOutput) VmId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmsVm) string { return v.VmId }).(pulumi.StringOutput)
}

// The VM behavior when you stop it. If set to `stop`, the VM stops. If set to `restart`, the VM stops then automatically restarts. If set to `terminate`, the VM stops and is deleted.
func (o GetVmsVmOutput) VmInitiatedShutdownBehavior() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmsVm) string { return v.VmInitiatedShutdownBehavior }).(pulumi.StringOutput)
}

// The type of VM. For more information, see [VM Types](https://docs.outscale.com/en/userguide/VM-Types.html).
func (o GetVmsVmOutput) VmType() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmsVm) string { return v.VmType }).(pulumi.StringOutput)
}

type GetVmsVmArrayOutput struct{ *pulumi.OutputState }

func (GetVmsVmArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVmsVm)(nil)).Elem()
}

func (o GetVmsVmArrayOutput) ToGetVmsVmArrayOutput() GetVmsVmArrayOutput {
	return o
}

func (o GetVmsVmArrayOutput) ToGetVmsVmArrayOutputWithContext(ctx context.Context) GetVmsVmArrayOutput {
	return o
}

func (o GetVmsVmArrayOutput) Index(i pulumi.IntInput) GetVmsVmOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVmsVm {
		return vs[0].([]GetVmsVm)[vs[1].(int)]
	}).(GetVmsVmOutput)
}

type GetVmsVmActionsOnNextBoot struct {
	SecureBoot string `pulumi:"secureBoot"`
}

// GetVmsVmActionsOnNextBootInput is an input type that accepts GetVmsVmActionsOnNextBootArgs and GetVmsVmActionsOnNextBootOutput values.
// You can construct a concrete instance of `GetVmsVmActionsOnNextBootInput` via:
//
//	GetVmsVmActionsOnNextBootArgs{...}
type GetVmsVmActionsOnNextBootInput interface {
	pulumi.Input

	ToGetVmsVmActionsOnNextBootOutput() GetVmsVmActionsOnNextBootOutput
	ToGetVmsVmActionsOnNextBootOutputWithContext(context.Context) GetVmsVmActionsOnNextBootOutput
}

type GetVmsVmActionsOnNextBootArgs struct {
	SecureBoot pulumi.StringInput `pulumi:"secureBoot"`
}

func (GetVmsVmActionsOnNextBootArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVmsVmActionsOnNextBoot)(nil)).Elem()
}

func (i GetVmsVmActionsOnNextBootArgs) ToGetVmsVmActionsOnNextBootOutput() GetVmsVmActionsOnNextBootOutput {
	return i.ToGetVmsVmActionsOnNextBootOutputWithContext(context.Background())
}

func (i GetVmsVmActionsOnNextBootArgs) ToGetVmsVmActionsOnNextBootOutputWithContext(ctx context.Context) GetVmsVmActionsOnNextBootOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVmsVmActionsOnNextBootOutput)
}

// GetVmsVmActionsOnNextBootArrayInput is an input type that accepts GetVmsVmActionsOnNextBootArray and GetVmsVmActionsOnNextBootArrayOutput values.
// You can construct a concrete instance of `GetVmsVmActionsOnNextBootArrayInput` via:
//
//	GetVmsVmActionsOnNextBootArray{ GetVmsVmActionsOnNextBootArgs{...} }
type GetVmsVmActionsOnNextBootArrayInput interface {
	pulumi.Input

	ToGetVmsVmActionsOnNextBootArrayOutput() GetVmsVmActionsOnNextBootArrayOutput
	ToGetVmsVmActionsOnNextBootArrayOutputWithContext(context.Context) GetVmsVmActionsOnNextBootArrayOutput
}

type GetVmsVmActionsOnNextBootArray []GetVmsVmActionsOnNextBootInput

func (GetVmsVmActionsOnNextBootArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVmsVmActionsOnNextBoot)(nil)).Elem()
}

func (i GetVmsVmActionsOnNextBootArray) ToGetVmsVmActionsOnNextBootArrayOutput() GetVmsVmActionsOnNextBootArrayOutput {
	return i.ToGetVmsVmActionsOnNextBootArrayOutputWithContext(context.Background())
}

func (i GetVmsVmActionsOnNextBootArray) ToGetVmsVmActionsOnNextBootArrayOutputWithContext(ctx context.Context) GetVmsVmActionsOnNextBootArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVmsVmActionsOnNextBootArrayOutput)
}

type GetVmsVmActionsOnNextBootOutput struct{ *pulumi.OutputState }

func (GetVmsVmActionsOnNextBootOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVmsVmActionsOnNextBoot)(nil)).Elem()
}

func (o GetVmsVmActionsOnNextBootOutput) ToGetVmsVmActionsOnNextBootOutput() GetVmsVmActionsOnNextBootOutput {
	return o
}

func (o GetVmsVmActionsOnNextBootOutput) ToGetVmsVmActionsOnNextBootOutputWithContext(ctx context.Context) GetVmsVmActionsOnNextBootOutput {
	return o
}

func (o GetVmsVmActionsOnNextBootOutput) SecureBoot() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmsVmActionsOnNextBoot) string { return v.SecureBoot }).(pulumi.StringOutput)
}

type GetVmsVmActionsOnNextBootArrayOutput struct{ *pulumi.OutputState }

func (GetVmsVmActionsOnNextBootArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVmsVmActionsOnNextBoot)(nil)).Elem()
}

func (o GetVmsVmActionsOnNextBootArrayOutput) ToGetVmsVmActionsOnNextBootArrayOutput() GetVmsVmActionsOnNextBootArrayOutput {
	return o
}

func (o GetVmsVmActionsOnNextBootArrayOutput) ToGetVmsVmActionsOnNextBootArrayOutputWithContext(ctx context.Context) GetVmsVmActionsOnNextBootArrayOutput {
	return o
}

func (o GetVmsVmActionsOnNextBootArrayOutput) Index(i pulumi.IntInput) GetVmsVmActionsOnNextBootOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVmsVmActionsOnNextBoot {
		return vs[0].([]GetVmsVmActionsOnNextBoot)[vs[1].(int)]
	}).(GetVmsVmActionsOnNextBootOutput)
}

type GetVmsVmBlockDeviceMappingsCreated struct {
	// Information about the created BSU volume.
	Bsus []GetVmsVmBlockDeviceMappingsCreatedBsus `pulumi:"bsus"`
	// The name of the device.
	DeviceName string `pulumi:"deviceName"`
}

// GetVmsVmBlockDeviceMappingsCreatedInput is an input type that accepts GetVmsVmBlockDeviceMappingsCreatedArgs and GetVmsVmBlockDeviceMappingsCreatedOutput values.
// You can construct a concrete instance of `GetVmsVmBlockDeviceMappingsCreatedInput` via:
//
//	GetVmsVmBlockDeviceMappingsCreatedArgs{...}
type GetVmsVmBlockDeviceMappingsCreatedInput interface {
	pulumi.Input

	ToGetVmsVmBlockDeviceMappingsCreatedOutput() GetVmsVmBlockDeviceMappingsCreatedOutput
	ToGetVmsVmBlockDeviceMappingsCreatedOutputWithContext(context.Context) GetVmsVmBlockDeviceMappingsCreatedOutput
}

type GetVmsVmBlockDeviceMappingsCreatedArgs struct {
	// Information about the created BSU volume.
	Bsus GetVmsVmBlockDeviceMappingsCreatedBsusArrayInput `pulumi:"bsus"`
	// The name of the device.
	DeviceName pulumi.StringInput `pulumi:"deviceName"`
}

func (GetVmsVmBlockDeviceMappingsCreatedArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVmsVmBlockDeviceMappingsCreated)(nil)).Elem()
}

func (i GetVmsVmBlockDeviceMappingsCreatedArgs) ToGetVmsVmBlockDeviceMappingsCreatedOutput() GetVmsVmBlockDeviceMappingsCreatedOutput {
	return i.ToGetVmsVmBlockDeviceMappingsCreatedOutputWithContext(context.Background())
}

func (i GetVmsVmBlockDeviceMappingsCreatedArgs) ToGetVmsVmBlockDeviceMappingsCreatedOutputWithContext(ctx context.Context) GetVmsVmBlockDeviceMappingsCreatedOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVmsVmBlockDeviceMappingsCreatedOutput)
}

// GetVmsVmBlockDeviceMappingsCreatedArrayInput is an input type that accepts GetVmsVmBlockDeviceMappingsCreatedArray and GetVmsVmBlockDeviceMappingsCreatedArrayOutput values.
// You can construct a concrete instance of `GetVmsVmBlockDeviceMappingsCreatedArrayInput` via:
//
//	GetVmsVmBlockDeviceMappingsCreatedArray{ GetVmsVmBlockDeviceMappingsCreatedArgs{...} }
type GetVmsVmBlockDeviceMappingsCreatedArrayInput interface {
	pulumi.Input

	ToGetVmsVmBlockDeviceMappingsCreatedArrayOutput() GetVmsVmBlockDeviceMappingsCreatedArrayOutput
	ToGetVmsVmBlockDeviceMappingsCreatedArrayOutputWithContext(context.Context) GetVmsVmBlockDeviceMappingsCreatedArrayOutput
}

type GetVmsVmBlockDeviceMappingsCreatedArray []GetVmsVmBlockDeviceMappingsCreatedInput

func (GetVmsVmBlockDeviceMappingsCreatedArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVmsVmBlockDeviceMappingsCreated)(nil)).Elem()
}

func (i GetVmsVmBlockDeviceMappingsCreatedArray) ToGetVmsVmBlockDeviceMappingsCreatedArrayOutput() GetVmsVmBlockDeviceMappingsCreatedArrayOutput {
	return i.ToGetVmsVmBlockDeviceMappingsCreatedArrayOutputWithContext(context.Background())
}

func (i GetVmsVmBlockDeviceMappingsCreatedArray) ToGetVmsVmBlockDeviceMappingsCreatedArrayOutputWithContext(ctx context.Context) GetVmsVmBlockDeviceMappingsCreatedArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVmsVmBlockDeviceMappingsCreatedArrayOutput)
}

type GetVmsVmBlockDeviceMappingsCreatedOutput struct{ *pulumi.OutputState }

func (GetVmsVmBlockDeviceMappingsCreatedOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVmsVmBlockDeviceMappingsCreated)(nil)).Elem()
}

func (o GetVmsVmBlockDeviceMappingsCreatedOutput) ToGetVmsVmBlockDeviceMappingsCreatedOutput() GetVmsVmBlockDeviceMappingsCreatedOutput {
	return o
}

func (o GetVmsVmBlockDeviceMappingsCreatedOutput) ToGetVmsVmBlockDeviceMappingsCreatedOutputWithContext(ctx context.Context) GetVmsVmBlockDeviceMappingsCreatedOutput {
	return o
}

// Information about the created BSU volume.
func (o GetVmsVmBlockDeviceMappingsCreatedOutput) Bsus() GetVmsVmBlockDeviceMappingsCreatedBsusArrayOutput {
	return o.ApplyT(func(v GetVmsVmBlockDeviceMappingsCreated) []GetVmsVmBlockDeviceMappingsCreatedBsus { return v.Bsus }).(GetVmsVmBlockDeviceMappingsCreatedBsusArrayOutput)
}

// The name of the device.
func (o GetVmsVmBlockDeviceMappingsCreatedOutput) DeviceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmsVmBlockDeviceMappingsCreated) string { return v.DeviceName }).(pulumi.StringOutput)
}

type GetVmsVmBlockDeviceMappingsCreatedArrayOutput struct{ *pulumi.OutputState }

func (GetVmsVmBlockDeviceMappingsCreatedArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVmsVmBlockDeviceMappingsCreated)(nil)).Elem()
}

func (o GetVmsVmBlockDeviceMappingsCreatedArrayOutput) ToGetVmsVmBlockDeviceMappingsCreatedArrayOutput() GetVmsVmBlockDeviceMappingsCreatedArrayOutput {
	return o
}

func (o GetVmsVmBlockDeviceMappingsCreatedArrayOutput) ToGetVmsVmBlockDeviceMappingsCreatedArrayOutputWithContext(ctx context.Context) GetVmsVmBlockDeviceMappingsCreatedArrayOutput {
	return o
}

func (o GetVmsVmBlockDeviceMappingsCreatedArrayOutput) Index(i pulumi.IntInput) GetVmsVmBlockDeviceMappingsCreatedOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVmsVmBlockDeviceMappingsCreated {
		return vs[0].([]GetVmsVmBlockDeviceMappingsCreated)[vs[1].(int)]
	}).(GetVmsVmBlockDeviceMappingsCreatedOutput)
}

type GetVmsVmBlockDeviceMappingsCreatedBsus struct {
	// If true, the NIC is deleted when the VM is terminated.
	DeleteOnVmDeletion bool `pulumi:"deleteOnVmDeletion"`
	// The date and time (UTC) at which the volume was attached to the VM, in ISO 8601 date-time format.
	LinkDate string `pulumi:"linkDate"`
	// The state of the VM (`pending` \| `running` \| `stopping` \| `stopped` \| `shutting-down` \| `terminated` \| `quarantine`).
	State string `pulumi:"state"`
	// One or more tags associated with the VM.
	Tags []GetVmsVmBlockDeviceMappingsCreatedBsusTag `pulumi:"tags"`
	// The ID of the volume.
	VolumeId string `pulumi:"volumeId"`
}

// GetVmsVmBlockDeviceMappingsCreatedBsusInput is an input type that accepts GetVmsVmBlockDeviceMappingsCreatedBsusArgs and GetVmsVmBlockDeviceMappingsCreatedBsusOutput values.
// You can construct a concrete instance of `GetVmsVmBlockDeviceMappingsCreatedBsusInput` via:
//
//	GetVmsVmBlockDeviceMappingsCreatedBsusArgs{...}
type GetVmsVmBlockDeviceMappingsCreatedBsusInput interface {
	pulumi.Input

	ToGetVmsVmBlockDeviceMappingsCreatedBsusOutput() GetVmsVmBlockDeviceMappingsCreatedBsusOutput
	ToGetVmsVmBlockDeviceMappingsCreatedBsusOutputWithContext(context.Context) GetVmsVmBlockDeviceMappingsCreatedBsusOutput
}

type GetVmsVmBlockDeviceMappingsCreatedBsusArgs struct {
	// If true, the NIC is deleted when the VM is terminated.
	DeleteOnVmDeletion pulumi.BoolInput `pulumi:"deleteOnVmDeletion"`
	// The date and time (UTC) at which the volume was attached to the VM, in ISO 8601 date-time format.
	LinkDate pulumi.StringInput `pulumi:"linkDate"`
	// The state of the VM (`pending` \| `running` \| `stopping` \| `stopped` \| `shutting-down` \| `terminated` \| `quarantine`).
	State pulumi.StringInput `pulumi:"state"`
	// One or more tags associated with the VM.
	Tags GetVmsVmBlockDeviceMappingsCreatedBsusTagArrayInput `pulumi:"tags"`
	// The ID of the volume.
	VolumeId pulumi.StringInput `pulumi:"volumeId"`
}

func (GetVmsVmBlockDeviceMappingsCreatedBsusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVmsVmBlockDeviceMappingsCreatedBsus)(nil)).Elem()
}

func (i GetVmsVmBlockDeviceMappingsCreatedBsusArgs) ToGetVmsVmBlockDeviceMappingsCreatedBsusOutput() GetVmsVmBlockDeviceMappingsCreatedBsusOutput {
	return i.ToGetVmsVmBlockDeviceMappingsCreatedBsusOutputWithContext(context.Background())
}

func (i GetVmsVmBlockDeviceMappingsCreatedBsusArgs) ToGetVmsVmBlockDeviceMappingsCreatedBsusOutputWithContext(ctx context.Context) GetVmsVmBlockDeviceMappingsCreatedBsusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVmsVmBlockDeviceMappingsCreatedBsusOutput)
}

// GetVmsVmBlockDeviceMappingsCreatedBsusArrayInput is an input type that accepts GetVmsVmBlockDeviceMappingsCreatedBsusArray and GetVmsVmBlockDeviceMappingsCreatedBsusArrayOutput values.
// You can construct a concrete instance of `GetVmsVmBlockDeviceMappingsCreatedBsusArrayInput` via:
//
//	GetVmsVmBlockDeviceMappingsCreatedBsusArray{ GetVmsVmBlockDeviceMappingsCreatedBsusArgs{...} }
type GetVmsVmBlockDeviceMappingsCreatedBsusArrayInput interface {
	pulumi.Input

	ToGetVmsVmBlockDeviceMappingsCreatedBsusArrayOutput() GetVmsVmBlockDeviceMappingsCreatedBsusArrayOutput
	ToGetVmsVmBlockDeviceMappingsCreatedBsusArrayOutputWithContext(context.Context) GetVmsVmBlockDeviceMappingsCreatedBsusArrayOutput
}

type GetVmsVmBlockDeviceMappingsCreatedBsusArray []GetVmsVmBlockDeviceMappingsCreatedBsusInput

func (GetVmsVmBlockDeviceMappingsCreatedBsusArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVmsVmBlockDeviceMappingsCreatedBsus)(nil)).Elem()
}

func (i GetVmsVmBlockDeviceMappingsCreatedBsusArray) ToGetVmsVmBlockDeviceMappingsCreatedBsusArrayOutput() GetVmsVmBlockDeviceMappingsCreatedBsusArrayOutput {
	return i.ToGetVmsVmBlockDeviceMappingsCreatedBsusArrayOutputWithContext(context.Background())
}

func (i GetVmsVmBlockDeviceMappingsCreatedBsusArray) ToGetVmsVmBlockDeviceMappingsCreatedBsusArrayOutputWithContext(ctx context.Context) GetVmsVmBlockDeviceMappingsCreatedBsusArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVmsVmBlockDeviceMappingsCreatedBsusArrayOutput)
}

type GetVmsVmBlockDeviceMappingsCreatedBsusOutput struct{ *pulumi.OutputState }

func (GetVmsVmBlockDeviceMappingsCreatedBsusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVmsVmBlockDeviceMappingsCreatedBsus)(nil)).Elem()
}

func (o GetVmsVmBlockDeviceMappingsCreatedBsusOutput) ToGetVmsVmBlockDeviceMappingsCreatedBsusOutput() GetVmsVmBlockDeviceMappingsCreatedBsusOutput {
	return o
}

func (o GetVmsVmBlockDeviceMappingsCreatedBsusOutput) ToGetVmsVmBlockDeviceMappingsCreatedBsusOutputWithContext(ctx context.Context) GetVmsVmBlockDeviceMappingsCreatedBsusOutput {
	return o
}

// If true, the NIC is deleted when the VM is terminated.
func (o GetVmsVmBlockDeviceMappingsCreatedBsusOutput) DeleteOnVmDeletion() pulumi.BoolOutput {
	return o.ApplyT(func(v GetVmsVmBlockDeviceMappingsCreatedBsus) bool { return v.DeleteOnVmDeletion }).(pulumi.BoolOutput)
}

// The date and time (UTC) at which the volume was attached to the VM, in ISO 8601 date-time format.
func (o GetVmsVmBlockDeviceMappingsCreatedBsusOutput) LinkDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmsVmBlockDeviceMappingsCreatedBsus) string { return v.LinkDate }).(pulumi.StringOutput)
}

// The state of the VM (`pending` \| `running` \| `stopping` \| `stopped` \| `shutting-down` \| `terminated` \| `quarantine`).
func (o GetVmsVmBlockDeviceMappingsCreatedBsusOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmsVmBlockDeviceMappingsCreatedBsus) string { return v.State }).(pulumi.StringOutput)
}

// One or more tags associated with the VM.
func (o GetVmsVmBlockDeviceMappingsCreatedBsusOutput) Tags() GetVmsVmBlockDeviceMappingsCreatedBsusTagArrayOutput {
	return o.ApplyT(func(v GetVmsVmBlockDeviceMappingsCreatedBsus) []GetVmsVmBlockDeviceMappingsCreatedBsusTag {
		return v.Tags
	}).(GetVmsVmBlockDeviceMappingsCreatedBsusTagArrayOutput)
}

// The ID of the volume.
func (o GetVmsVmBlockDeviceMappingsCreatedBsusOutput) VolumeId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmsVmBlockDeviceMappingsCreatedBsus) string { return v.VolumeId }).(pulumi.StringOutput)
}

type GetVmsVmBlockDeviceMappingsCreatedBsusArrayOutput struct{ *pulumi.OutputState }

func (GetVmsVmBlockDeviceMappingsCreatedBsusArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVmsVmBlockDeviceMappingsCreatedBsus)(nil)).Elem()
}

func (o GetVmsVmBlockDeviceMappingsCreatedBsusArrayOutput) ToGetVmsVmBlockDeviceMappingsCreatedBsusArrayOutput() GetVmsVmBlockDeviceMappingsCreatedBsusArrayOutput {
	return o
}

func (o GetVmsVmBlockDeviceMappingsCreatedBsusArrayOutput) ToGetVmsVmBlockDeviceMappingsCreatedBsusArrayOutputWithContext(ctx context.Context) GetVmsVmBlockDeviceMappingsCreatedBsusArrayOutput {
	return o
}

func (o GetVmsVmBlockDeviceMappingsCreatedBsusArrayOutput) Index(i pulumi.IntInput) GetVmsVmBlockDeviceMappingsCreatedBsusOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVmsVmBlockDeviceMappingsCreatedBsus {
		return vs[0].([]GetVmsVmBlockDeviceMappingsCreatedBsus)[vs[1].(int)]
	}).(GetVmsVmBlockDeviceMappingsCreatedBsusOutput)
}

type GetVmsVmBlockDeviceMappingsCreatedBsusTag struct {
	// The key of the tag, with a minimum of 1 character.
	Key string `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value string `pulumi:"value"`
}

// GetVmsVmBlockDeviceMappingsCreatedBsusTagInput is an input type that accepts GetVmsVmBlockDeviceMappingsCreatedBsusTagArgs and GetVmsVmBlockDeviceMappingsCreatedBsusTagOutput values.
// You can construct a concrete instance of `GetVmsVmBlockDeviceMappingsCreatedBsusTagInput` via:
//
//	GetVmsVmBlockDeviceMappingsCreatedBsusTagArgs{...}
type GetVmsVmBlockDeviceMappingsCreatedBsusTagInput interface {
	pulumi.Input

	ToGetVmsVmBlockDeviceMappingsCreatedBsusTagOutput() GetVmsVmBlockDeviceMappingsCreatedBsusTagOutput
	ToGetVmsVmBlockDeviceMappingsCreatedBsusTagOutputWithContext(context.Context) GetVmsVmBlockDeviceMappingsCreatedBsusTagOutput
}

type GetVmsVmBlockDeviceMappingsCreatedBsusTagArgs struct {
	// The key of the tag, with a minimum of 1 character.
	Key pulumi.StringInput `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetVmsVmBlockDeviceMappingsCreatedBsusTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVmsVmBlockDeviceMappingsCreatedBsusTag)(nil)).Elem()
}

func (i GetVmsVmBlockDeviceMappingsCreatedBsusTagArgs) ToGetVmsVmBlockDeviceMappingsCreatedBsusTagOutput() GetVmsVmBlockDeviceMappingsCreatedBsusTagOutput {
	return i.ToGetVmsVmBlockDeviceMappingsCreatedBsusTagOutputWithContext(context.Background())
}

func (i GetVmsVmBlockDeviceMappingsCreatedBsusTagArgs) ToGetVmsVmBlockDeviceMappingsCreatedBsusTagOutputWithContext(ctx context.Context) GetVmsVmBlockDeviceMappingsCreatedBsusTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVmsVmBlockDeviceMappingsCreatedBsusTagOutput)
}

// GetVmsVmBlockDeviceMappingsCreatedBsusTagArrayInput is an input type that accepts GetVmsVmBlockDeviceMappingsCreatedBsusTagArray and GetVmsVmBlockDeviceMappingsCreatedBsusTagArrayOutput values.
// You can construct a concrete instance of `GetVmsVmBlockDeviceMappingsCreatedBsusTagArrayInput` via:
//
//	GetVmsVmBlockDeviceMappingsCreatedBsusTagArray{ GetVmsVmBlockDeviceMappingsCreatedBsusTagArgs{...} }
type GetVmsVmBlockDeviceMappingsCreatedBsusTagArrayInput interface {
	pulumi.Input

	ToGetVmsVmBlockDeviceMappingsCreatedBsusTagArrayOutput() GetVmsVmBlockDeviceMappingsCreatedBsusTagArrayOutput
	ToGetVmsVmBlockDeviceMappingsCreatedBsusTagArrayOutputWithContext(context.Context) GetVmsVmBlockDeviceMappingsCreatedBsusTagArrayOutput
}

type GetVmsVmBlockDeviceMappingsCreatedBsusTagArray []GetVmsVmBlockDeviceMappingsCreatedBsusTagInput

func (GetVmsVmBlockDeviceMappingsCreatedBsusTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVmsVmBlockDeviceMappingsCreatedBsusTag)(nil)).Elem()
}

func (i GetVmsVmBlockDeviceMappingsCreatedBsusTagArray) ToGetVmsVmBlockDeviceMappingsCreatedBsusTagArrayOutput() GetVmsVmBlockDeviceMappingsCreatedBsusTagArrayOutput {
	return i.ToGetVmsVmBlockDeviceMappingsCreatedBsusTagArrayOutputWithContext(context.Background())
}

func (i GetVmsVmBlockDeviceMappingsCreatedBsusTagArray) ToGetVmsVmBlockDeviceMappingsCreatedBsusTagArrayOutputWithContext(ctx context.Context) GetVmsVmBlockDeviceMappingsCreatedBsusTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVmsVmBlockDeviceMappingsCreatedBsusTagArrayOutput)
}

type GetVmsVmBlockDeviceMappingsCreatedBsusTagOutput struct{ *pulumi.OutputState }

func (GetVmsVmBlockDeviceMappingsCreatedBsusTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVmsVmBlockDeviceMappingsCreatedBsusTag)(nil)).Elem()
}

func (o GetVmsVmBlockDeviceMappingsCreatedBsusTagOutput) ToGetVmsVmBlockDeviceMappingsCreatedBsusTagOutput() GetVmsVmBlockDeviceMappingsCreatedBsusTagOutput {
	return o
}

func (o GetVmsVmBlockDeviceMappingsCreatedBsusTagOutput) ToGetVmsVmBlockDeviceMappingsCreatedBsusTagOutputWithContext(ctx context.Context) GetVmsVmBlockDeviceMappingsCreatedBsusTagOutput {
	return o
}

// The key of the tag, with a minimum of 1 character.
func (o GetVmsVmBlockDeviceMappingsCreatedBsusTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmsVmBlockDeviceMappingsCreatedBsusTag) string { return v.Key }).(pulumi.StringOutput)
}

// The value of the tag, between 0 and 255 characters.
func (o GetVmsVmBlockDeviceMappingsCreatedBsusTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmsVmBlockDeviceMappingsCreatedBsusTag) string { return v.Value }).(pulumi.StringOutput)
}

type GetVmsVmBlockDeviceMappingsCreatedBsusTagArrayOutput struct{ *pulumi.OutputState }

func (GetVmsVmBlockDeviceMappingsCreatedBsusTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVmsVmBlockDeviceMappingsCreatedBsusTag)(nil)).Elem()
}

func (o GetVmsVmBlockDeviceMappingsCreatedBsusTagArrayOutput) ToGetVmsVmBlockDeviceMappingsCreatedBsusTagArrayOutput() GetVmsVmBlockDeviceMappingsCreatedBsusTagArrayOutput {
	return o
}

func (o GetVmsVmBlockDeviceMappingsCreatedBsusTagArrayOutput) ToGetVmsVmBlockDeviceMappingsCreatedBsusTagArrayOutputWithContext(ctx context.Context) GetVmsVmBlockDeviceMappingsCreatedBsusTagArrayOutput {
	return o
}

func (o GetVmsVmBlockDeviceMappingsCreatedBsusTagArrayOutput) Index(i pulumi.IntInput) GetVmsVmBlockDeviceMappingsCreatedBsusTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVmsVmBlockDeviceMappingsCreatedBsusTag {
		return vs[0].([]GetVmsVmBlockDeviceMappingsCreatedBsusTag)[vs[1].(int)]
	}).(GetVmsVmBlockDeviceMappingsCreatedBsusTagOutput)
}

type GetVmsVmNic struct {
	// The account ID of the owner of the NIC.
	AccountId string `pulumi:"accountId"`
	// If true, the NIC is deleted when the VM is terminated.
	DeleteOnVmDeletion bool `pulumi:"deleteOnVmDeletion"`
	// The description of the NIC.
	Description string `pulumi:"description"`
	// The device index for the NIC attachment (between `1` and `7`, both included).
	DeviceNumber int `pulumi:"deviceNumber"`
	// (Net only) If true, the source/destination check is enabled. If false, it is disabled.
	IsSourceDestChecked bool `pulumi:"isSourceDestChecked"`
	// Information about the network interface card (NIC).
	LinkNics []GetVmsVmNicLinkNic `pulumi:"linkNics"`
	// Information about the public IP associated with the NIC.
	LinkPublicIps []GetVmsVmNicLinkPublicIp `pulumi:"linkPublicIps"`
	// The Media Access Control (MAC) address of the NIC.
	MacAddress string `pulumi:"macAddress"`
	// The ID of the Net for the NIC.
	NetId string `pulumi:"netId"`
	// The ID of the NIC.
	NicId string `pulumi:"nicId"`
	// The name of the private DNS.
	PrivateDnsName string `pulumi:"privateDnsName"`
	// The private IP or IPs of the NIC.
	PrivateIps              []GetVmsVmNicPrivateIp `pulumi:"privateIps"`
	SecondaryPrivateIpCount int                    `pulumi:"secondaryPrivateIpCount"`
	// The IDs of the security groups for the VMs (only in the public Cloud).
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// One or more security groups associated with the VM.
	SecurityGroups      []GetVmsVmNicSecurityGroup `pulumi:"securityGroups"`
	SecurityGroupsNames []string                   `pulumi:"securityGroupsNames"`
	// The state of the VM (`pending` \| `running` \| `stopping` \| `stopped` \| `shutting-down` \| `terminated` \| `quarantine`).
	State string `pulumi:"state"`
	// The ID of the Subnet for the VM.
	SubnetId string `pulumi:"subnetId"`
}

// GetVmsVmNicInput is an input type that accepts GetVmsVmNicArgs and GetVmsVmNicOutput values.
// You can construct a concrete instance of `GetVmsVmNicInput` via:
//
//	GetVmsVmNicArgs{...}
type GetVmsVmNicInput interface {
	pulumi.Input

	ToGetVmsVmNicOutput() GetVmsVmNicOutput
	ToGetVmsVmNicOutputWithContext(context.Context) GetVmsVmNicOutput
}

type GetVmsVmNicArgs struct {
	// The account ID of the owner of the NIC.
	AccountId pulumi.StringInput `pulumi:"accountId"`
	// If true, the NIC is deleted when the VM is terminated.
	DeleteOnVmDeletion pulumi.BoolInput `pulumi:"deleteOnVmDeletion"`
	// The description of the NIC.
	Description pulumi.StringInput `pulumi:"description"`
	// The device index for the NIC attachment (between `1` and `7`, both included).
	DeviceNumber pulumi.IntInput `pulumi:"deviceNumber"`
	// (Net only) If true, the source/destination check is enabled. If false, it is disabled.
	IsSourceDestChecked pulumi.BoolInput `pulumi:"isSourceDestChecked"`
	// Information about the network interface card (NIC).
	LinkNics GetVmsVmNicLinkNicArrayInput `pulumi:"linkNics"`
	// Information about the public IP associated with the NIC.
	LinkPublicIps GetVmsVmNicLinkPublicIpArrayInput `pulumi:"linkPublicIps"`
	// The Media Access Control (MAC) address of the NIC.
	MacAddress pulumi.StringInput `pulumi:"macAddress"`
	// The ID of the Net for the NIC.
	NetId pulumi.StringInput `pulumi:"netId"`
	// The ID of the NIC.
	NicId pulumi.StringInput `pulumi:"nicId"`
	// The name of the private DNS.
	PrivateDnsName pulumi.StringInput `pulumi:"privateDnsName"`
	// The private IP or IPs of the NIC.
	PrivateIps              GetVmsVmNicPrivateIpArrayInput `pulumi:"privateIps"`
	SecondaryPrivateIpCount pulumi.IntInput                `pulumi:"secondaryPrivateIpCount"`
	// The IDs of the security groups for the VMs (only in the public Cloud).
	SecurityGroupIds pulumi.StringArrayInput `pulumi:"securityGroupIds"`
	// One or more security groups associated with the VM.
	SecurityGroups      GetVmsVmNicSecurityGroupArrayInput `pulumi:"securityGroups"`
	SecurityGroupsNames pulumi.StringArrayInput            `pulumi:"securityGroupsNames"`
	// The state of the VM (`pending` \| `running` \| `stopping` \| `stopped` \| `shutting-down` \| `terminated` \| `quarantine`).
	State pulumi.StringInput `pulumi:"state"`
	// The ID of the Subnet for the VM.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
}

func (GetVmsVmNicArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVmsVmNic)(nil)).Elem()
}

func (i GetVmsVmNicArgs) ToGetVmsVmNicOutput() GetVmsVmNicOutput {
	return i.ToGetVmsVmNicOutputWithContext(context.Background())
}

func (i GetVmsVmNicArgs) ToGetVmsVmNicOutputWithContext(ctx context.Context) GetVmsVmNicOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVmsVmNicOutput)
}

// GetVmsVmNicArrayInput is an input type that accepts GetVmsVmNicArray and GetVmsVmNicArrayOutput values.
// You can construct a concrete instance of `GetVmsVmNicArrayInput` via:
//
//	GetVmsVmNicArray{ GetVmsVmNicArgs{...} }
type GetVmsVmNicArrayInput interface {
	pulumi.Input

	ToGetVmsVmNicArrayOutput() GetVmsVmNicArrayOutput
	ToGetVmsVmNicArrayOutputWithContext(context.Context) GetVmsVmNicArrayOutput
}

type GetVmsVmNicArray []GetVmsVmNicInput

func (GetVmsVmNicArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVmsVmNic)(nil)).Elem()
}

func (i GetVmsVmNicArray) ToGetVmsVmNicArrayOutput() GetVmsVmNicArrayOutput {
	return i.ToGetVmsVmNicArrayOutputWithContext(context.Background())
}

func (i GetVmsVmNicArray) ToGetVmsVmNicArrayOutputWithContext(ctx context.Context) GetVmsVmNicArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVmsVmNicArrayOutput)
}

type GetVmsVmNicOutput struct{ *pulumi.OutputState }

func (GetVmsVmNicOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVmsVmNic)(nil)).Elem()
}

func (o GetVmsVmNicOutput) ToGetVmsVmNicOutput() GetVmsVmNicOutput {
	return o
}

func (o GetVmsVmNicOutput) ToGetVmsVmNicOutputWithContext(ctx context.Context) GetVmsVmNicOutput {
	return o
}

// The account ID of the owner of the NIC.
func (o GetVmsVmNicOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmsVmNic) string { return v.AccountId }).(pulumi.StringOutput)
}

// If true, the NIC is deleted when the VM is terminated.
func (o GetVmsVmNicOutput) DeleteOnVmDeletion() pulumi.BoolOutput {
	return o.ApplyT(func(v GetVmsVmNic) bool { return v.DeleteOnVmDeletion }).(pulumi.BoolOutput)
}

// The description of the NIC.
func (o GetVmsVmNicOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmsVmNic) string { return v.Description }).(pulumi.StringOutput)
}

// The device index for the NIC attachment (between `1` and `7`, both included).
func (o GetVmsVmNicOutput) DeviceNumber() pulumi.IntOutput {
	return o.ApplyT(func(v GetVmsVmNic) int { return v.DeviceNumber }).(pulumi.IntOutput)
}

// (Net only) If true, the source/destination check is enabled. If false, it is disabled.
func (o GetVmsVmNicOutput) IsSourceDestChecked() pulumi.BoolOutput {
	return o.ApplyT(func(v GetVmsVmNic) bool { return v.IsSourceDestChecked }).(pulumi.BoolOutput)
}

// Information about the network interface card (NIC).
func (o GetVmsVmNicOutput) LinkNics() GetVmsVmNicLinkNicArrayOutput {
	return o.ApplyT(func(v GetVmsVmNic) []GetVmsVmNicLinkNic { return v.LinkNics }).(GetVmsVmNicLinkNicArrayOutput)
}

// Information about the public IP associated with the NIC.
func (o GetVmsVmNicOutput) LinkPublicIps() GetVmsVmNicLinkPublicIpArrayOutput {
	return o.ApplyT(func(v GetVmsVmNic) []GetVmsVmNicLinkPublicIp { return v.LinkPublicIps }).(GetVmsVmNicLinkPublicIpArrayOutput)
}

// The Media Access Control (MAC) address of the NIC.
func (o GetVmsVmNicOutput) MacAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmsVmNic) string { return v.MacAddress }).(pulumi.StringOutput)
}

// The ID of the Net for the NIC.
func (o GetVmsVmNicOutput) NetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmsVmNic) string { return v.NetId }).(pulumi.StringOutput)
}

// The ID of the NIC.
func (o GetVmsVmNicOutput) NicId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmsVmNic) string { return v.NicId }).(pulumi.StringOutput)
}

// The name of the private DNS.
func (o GetVmsVmNicOutput) PrivateDnsName() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmsVmNic) string { return v.PrivateDnsName }).(pulumi.StringOutput)
}

// The private IP or IPs of the NIC.
func (o GetVmsVmNicOutput) PrivateIps() GetVmsVmNicPrivateIpArrayOutput {
	return o.ApplyT(func(v GetVmsVmNic) []GetVmsVmNicPrivateIp { return v.PrivateIps }).(GetVmsVmNicPrivateIpArrayOutput)
}

func (o GetVmsVmNicOutput) SecondaryPrivateIpCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetVmsVmNic) int { return v.SecondaryPrivateIpCount }).(pulumi.IntOutput)
}

// The IDs of the security groups for the VMs (only in the public Cloud).
func (o GetVmsVmNicOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetVmsVmNic) []string { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

// One or more security groups associated with the VM.
func (o GetVmsVmNicOutput) SecurityGroups() GetVmsVmNicSecurityGroupArrayOutput {
	return o.ApplyT(func(v GetVmsVmNic) []GetVmsVmNicSecurityGroup { return v.SecurityGroups }).(GetVmsVmNicSecurityGroupArrayOutput)
}

func (o GetVmsVmNicOutput) SecurityGroupsNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetVmsVmNic) []string { return v.SecurityGroupsNames }).(pulumi.StringArrayOutput)
}

// The state of the VM (`pending` \| `running` \| `stopping` \| `stopped` \| `shutting-down` \| `terminated` \| `quarantine`).
func (o GetVmsVmNicOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmsVmNic) string { return v.State }).(pulumi.StringOutput)
}

// The ID of the Subnet for the VM.
func (o GetVmsVmNicOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmsVmNic) string { return v.SubnetId }).(pulumi.StringOutput)
}

type GetVmsVmNicArrayOutput struct{ *pulumi.OutputState }

func (GetVmsVmNicArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVmsVmNic)(nil)).Elem()
}

func (o GetVmsVmNicArrayOutput) ToGetVmsVmNicArrayOutput() GetVmsVmNicArrayOutput {
	return o
}

func (o GetVmsVmNicArrayOutput) ToGetVmsVmNicArrayOutputWithContext(ctx context.Context) GetVmsVmNicArrayOutput {
	return o
}

func (o GetVmsVmNicArrayOutput) Index(i pulumi.IntInput) GetVmsVmNicOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVmsVmNic {
		return vs[0].([]GetVmsVmNic)[vs[1].(int)]
	}).(GetVmsVmNicOutput)
}

type GetVmsVmNicLinkNic struct {
	// If true, the NIC is deleted when the VM is terminated.
	DeleteOnVmDeletion bool `pulumi:"deleteOnVmDeletion"`
	// The device index for the NIC attachment (between `1` and `7`, both included).
	DeviceNumber string `pulumi:"deviceNumber"`
	// The ID of the NIC to attach.
	LinkNicId string `pulumi:"linkNicId"`
	// The state of the VM (`pending` \| `running` \| `stopping` \| `stopped` \| `shutting-down` \| `terminated` \| `quarantine`).
	State string `pulumi:"state"`
}

// GetVmsVmNicLinkNicInput is an input type that accepts GetVmsVmNicLinkNicArgs and GetVmsVmNicLinkNicOutput values.
// You can construct a concrete instance of `GetVmsVmNicLinkNicInput` via:
//
//	GetVmsVmNicLinkNicArgs{...}
type GetVmsVmNicLinkNicInput interface {
	pulumi.Input

	ToGetVmsVmNicLinkNicOutput() GetVmsVmNicLinkNicOutput
	ToGetVmsVmNicLinkNicOutputWithContext(context.Context) GetVmsVmNicLinkNicOutput
}

type GetVmsVmNicLinkNicArgs struct {
	// If true, the NIC is deleted when the VM is terminated.
	DeleteOnVmDeletion pulumi.BoolInput `pulumi:"deleteOnVmDeletion"`
	// The device index for the NIC attachment (between `1` and `7`, both included).
	DeviceNumber pulumi.StringInput `pulumi:"deviceNumber"`
	// The ID of the NIC to attach.
	LinkNicId pulumi.StringInput `pulumi:"linkNicId"`
	// The state of the VM (`pending` \| `running` \| `stopping` \| `stopped` \| `shutting-down` \| `terminated` \| `quarantine`).
	State pulumi.StringInput `pulumi:"state"`
}

func (GetVmsVmNicLinkNicArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVmsVmNicLinkNic)(nil)).Elem()
}

func (i GetVmsVmNicLinkNicArgs) ToGetVmsVmNicLinkNicOutput() GetVmsVmNicLinkNicOutput {
	return i.ToGetVmsVmNicLinkNicOutputWithContext(context.Background())
}

func (i GetVmsVmNicLinkNicArgs) ToGetVmsVmNicLinkNicOutputWithContext(ctx context.Context) GetVmsVmNicLinkNicOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVmsVmNicLinkNicOutput)
}

// GetVmsVmNicLinkNicArrayInput is an input type that accepts GetVmsVmNicLinkNicArray and GetVmsVmNicLinkNicArrayOutput values.
// You can construct a concrete instance of `GetVmsVmNicLinkNicArrayInput` via:
//
//	GetVmsVmNicLinkNicArray{ GetVmsVmNicLinkNicArgs{...} }
type GetVmsVmNicLinkNicArrayInput interface {
	pulumi.Input

	ToGetVmsVmNicLinkNicArrayOutput() GetVmsVmNicLinkNicArrayOutput
	ToGetVmsVmNicLinkNicArrayOutputWithContext(context.Context) GetVmsVmNicLinkNicArrayOutput
}

type GetVmsVmNicLinkNicArray []GetVmsVmNicLinkNicInput

func (GetVmsVmNicLinkNicArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVmsVmNicLinkNic)(nil)).Elem()
}

func (i GetVmsVmNicLinkNicArray) ToGetVmsVmNicLinkNicArrayOutput() GetVmsVmNicLinkNicArrayOutput {
	return i.ToGetVmsVmNicLinkNicArrayOutputWithContext(context.Background())
}

func (i GetVmsVmNicLinkNicArray) ToGetVmsVmNicLinkNicArrayOutputWithContext(ctx context.Context) GetVmsVmNicLinkNicArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVmsVmNicLinkNicArrayOutput)
}

type GetVmsVmNicLinkNicOutput struct{ *pulumi.OutputState }

func (GetVmsVmNicLinkNicOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVmsVmNicLinkNic)(nil)).Elem()
}

func (o GetVmsVmNicLinkNicOutput) ToGetVmsVmNicLinkNicOutput() GetVmsVmNicLinkNicOutput {
	return o
}

func (o GetVmsVmNicLinkNicOutput) ToGetVmsVmNicLinkNicOutputWithContext(ctx context.Context) GetVmsVmNicLinkNicOutput {
	return o
}

// If true, the NIC is deleted when the VM is terminated.
func (o GetVmsVmNicLinkNicOutput) DeleteOnVmDeletion() pulumi.BoolOutput {
	return o.ApplyT(func(v GetVmsVmNicLinkNic) bool { return v.DeleteOnVmDeletion }).(pulumi.BoolOutput)
}

// The device index for the NIC attachment (between `1` and `7`, both included).
func (o GetVmsVmNicLinkNicOutput) DeviceNumber() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmsVmNicLinkNic) string { return v.DeviceNumber }).(pulumi.StringOutput)
}

// The ID of the NIC to attach.
func (o GetVmsVmNicLinkNicOutput) LinkNicId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmsVmNicLinkNic) string { return v.LinkNicId }).(pulumi.StringOutput)
}

// The state of the VM (`pending` \| `running` \| `stopping` \| `stopped` \| `shutting-down` \| `terminated` \| `quarantine`).
func (o GetVmsVmNicLinkNicOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmsVmNicLinkNic) string { return v.State }).(pulumi.StringOutput)
}

type GetVmsVmNicLinkNicArrayOutput struct{ *pulumi.OutputState }

func (GetVmsVmNicLinkNicArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVmsVmNicLinkNic)(nil)).Elem()
}

func (o GetVmsVmNicLinkNicArrayOutput) ToGetVmsVmNicLinkNicArrayOutput() GetVmsVmNicLinkNicArrayOutput {
	return o
}

func (o GetVmsVmNicLinkNicArrayOutput) ToGetVmsVmNicLinkNicArrayOutputWithContext(ctx context.Context) GetVmsVmNicLinkNicArrayOutput {
	return o
}

func (o GetVmsVmNicLinkNicArrayOutput) Index(i pulumi.IntInput) GetVmsVmNicLinkNicOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVmsVmNicLinkNic {
		return vs[0].([]GetVmsVmNicLinkNic)[vs[1].(int)]
	}).(GetVmsVmNicLinkNicOutput)
}

type GetVmsVmNicLinkPublicIp struct {
	// The name of the public DNS.
	PublicDnsName string `pulumi:"publicDnsName"`
	// The public IP of the VM.
	PublicIp string `pulumi:"publicIp"`
	// The account ID of the owner of the public IP.
	PublicIpAccountId string `pulumi:"publicIpAccountId"`
}

// GetVmsVmNicLinkPublicIpInput is an input type that accepts GetVmsVmNicLinkPublicIpArgs and GetVmsVmNicLinkPublicIpOutput values.
// You can construct a concrete instance of `GetVmsVmNicLinkPublicIpInput` via:
//
//	GetVmsVmNicLinkPublicIpArgs{...}
type GetVmsVmNicLinkPublicIpInput interface {
	pulumi.Input

	ToGetVmsVmNicLinkPublicIpOutput() GetVmsVmNicLinkPublicIpOutput
	ToGetVmsVmNicLinkPublicIpOutputWithContext(context.Context) GetVmsVmNicLinkPublicIpOutput
}

type GetVmsVmNicLinkPublicIpArgs struct {
	// The name of the public DNS.
	PublicDnsName pulumi.StringInput `pulumi:"publicDnsName"`
	// The public IP of the VM.
	PublicIp pulumi.StringInput `pulumi:"publicIp"`
	// The account ID of the owner of the public IP.
	PublicIpAccountId pulumi.StringInput `pulumi:"publicIpAccountId"`
}

func (GetVmsVmNicLinkPublicIpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVmsVmNicLinkPublicIp)(nil)).Elem()
}

func (i GetVmsVmNicLinkPublicIpArgs) ToGetVmsVmNicLinkPublicIpOutput() GetVmsVmNicLinkPublicIpOutput {
	return i.ToGetVmsVmNicLinkPublicIpOutputWithContext(context.Background())
}

func (i GetVmsVmNicLinkPublicIpArgs) ToGetVmsVmNicLinkPublicIpOutputWithContext(ctx context.Context) GetVmsVmNicLinkPublicIpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVmsVmNicLinkPublicIpOutput)
}

// GetVmsVmNicLinkPublicIpArrayInput is an input type that accepts GetVmsVmNicLinkPublicIpArray and GetVmsVmNicLinkPublicIpArrayOutput values.
// You can construct a concrete instance of `GetVmsVmNicLinkPublicIpArrayInput` via:
//
//	GetVmsVmNicLinkPublicIpArray{ GetVmsVmNicLinkPublicIpArgs{...} }
type GetVmsVmNicLinkPublicIpArrayInput interface {
	pulumi.Input

	ToGetVmsVmNicLinkPublicIpArrayOutput() GetVmsVmNicLinkPublicIpArrayOutput
	ToGetVmsVmNicLinkPublicIpArrayOutputWithContext(context.Context) GetVmsVmNicLinkPublicIpArrayOutput
}

type GetVmsVmNicLinkPublicIpArray []GetVmsVmNicLinkPublicIpInput

func (GetVmsVmNicLinkPublicIpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVmsVmNicLinkPublicIp)(nil)).Elem()
}

func (i GetVmsVmNicLinkPublicIpArray) ToGetVmsVmNicLinkPublicIpArrayOutput() GetVmsVmNicLinkPublicIpArrayOutput {
	return i.ToGetVmsVmNicLinkPublicIpArrayOutputWithContext(context.Background())
}

func (i GetVmsVmNicLinkPublicIpArray) ToGetVmsVmNicLinkPublicIpArrayOutputWithContext(ctx context.Context) GetVmsVmNicLinkPublicIpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVmsVmNicLinkPublicIpArrayOutput)
}

type GetVmsVmNicLinkPublicIpOutput struct{ *pulumi.OutputState }

func (GetVmsVmNicLinkPublicIpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVmsVmNicLinkPublicIp)(nil)).Elem()
}

func (o GetVmsVmNicLinkPublicIpOutput) ToGetVmsVmNicLinkPublicIpOutput() GetVmsVmNicLinkPublicIpOutput {
	return o
}

func (o GetVmsVmNicLinkPublicIpOutput) ToGetVmsVmNicLinkPublicIpOutputWithContext(ctx context.Context) GetVmsVmNicLinkPublicIpOutput {
	return o
}

// The name of the public DNS.
func (o GetVmsVmNicLinkPublicIpOutput) PublicDnsName() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmsVmNicLinkPublicIp) string { return v.PublicDnsName }).(pulumi.StringOutput)
}

// The public IP of the VM.
func (o GetVmsVmNicLinkPublicIpOutput) PublicIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmsVmNicLinkPublicIp) string { return v.PublicIp }).(pulumi.StringOutput)
}

// The account ID of the owner of the public IP.
func (o GetVmsVmNicLinkPublicIpOutput) PublicIpAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmsVmNicLinkPublicIp) string { return v.PublicIpAccountId }).(pulumi.StringOutput)
}

type GetVmsVmNicLinkPublicIpArrayOutput struct{ *pulumi.OutputState }

func (GetVmsVmNicLinkPublicIpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVmsVmNicLinkPublicIp)(nil)).Elem()
}

func (o GetVmsVmNicLinkPublicIpArrayOutput) ToGetVmsVmNicLinkPublicIpArrayOutput() GetVmsVmNicLinkPublicIpArrayOutput {
	return o
}

func (o GetVmsVmNicLinkPublicIpArrayOutput) ToGetVmsVmNicLinkPublicIpArrayOutputWithContext(ctx context.Context) GetVmsVmNicLinkPublicIpArrayOutput {
	return o
}

func (o GetVmsVmNicLinkPublicIpArrayOutput) Index(i pulumi.IntInput) GetVmsVmNicLinkPublicIpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVmsVmNicLinkPublicIp {
		return vs[0].([]GetVmsVmNicLinkPublicIp)[vs[1].(int)]
	}).(GetVmsVmNicLinkPublicIpOutput)
}

type GetVmsVmNicPrivateIp struct {
	// If true, the IP is the primary private IP of the NIC.
	IsPrimary bool `pulumi:"isPrimary"`
	// Information about the public IP associated with the NIC.
	LinkPublicIps []GetVmsVmNicPrivateIpLinkPublicIp `pulumi:"linkPublicIps"`
	// The name of the private DNS.
	PrivateDnsName string `pulumi:"privateDnsName"`
	// The primary private IP of the VM.
	PrivateIp string `pulumi:"privateIp"`
}

// GetVmsVmNicPrivateIpInput is an input type that accepts GetVmsVmNicPrivateIpArgs and GetVmsVmNicPrivateIpOutput values.
// You can construct a concrete instance of `GetVmsVmNicPrivateIpInput` via:
//
//	GetVmsVmNicPrivateIpArgs{...}
type GetVmsVmNicPrivateIpInput interface {
	pulumi.Input

	ToGetVmsVmNicPrivateIpOutput() GetVmsVmNicPrivateIpOutput
	ToGetVmsVmNicPrivateIpOutputWithContext(context.Context) GetVmsVmNicPrivateIpOutput
}

type GetVmsVmNicPrivateIpArgs struct {
	// If true, the IP is the primary private IP of the NIC.
	IsPrimary pulumi.BoolInput `pulumi:"isPrimary"`
	// Information about the public IP associated with the NIC.
	LinkPublicIps GetVmsVmNicPrivateIpLinkPublicIpArrayInput `pulumi:"linkPublicIps"`
	// The name of the private DNS.
	PrivateDnsName pulumi.StringInput `pulumi:"privateDnsName"`
	// The primary private IP of the VM.
	PrivateIp pulumi.StringInput `pulumi:"privateIp"`
}

func (GetVmsVmNicPrivateIpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVmsVmNicPrivateIp)(nil)).Elem()
}

func (i GetVmsVmNicPrivateIpArgs) ToGetVmsVmNicPrivateIpOutput() GetVmsVmNicPrivateIpOutput {
	return i.ToGetVmsVmNicPrivateIpOutputWithContext(context.Background())
}

func (i GetVmsVmNicPrivateIpArgs) ToGetVmsVmNicPrivateIpOutputWithContext(ctx context.Context) GetVmsVmNicPrivateIpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVmsVmNicPrivateIpOutput)
}

// GetVmsVmNicPrivateIpArrayInput is an input type that accepts GetVmsVmNicPrivateIpArray and GetVmsVmNicPrivateIpArrayOutput values.
// You can construct a concrete instance of `GetVmsVmNicPrivateIpArrayInput` via:
//
//	GetVmsVmNicPrivateIpArray{ GetVmsVmNicPrivateIpArgs{...} }
type GetVmsVmNicPrivateIpArrayInput interface {
	pulumi.Input

	ToGetVmsVmNicPrivateIpArrayOutput() GetVmsVmNicPrivateIpArrayOutput
	ToGetVmsVmNicPrivateIpArrayOutputWithContext(context.Context) GetVmsVmNicPrivateIpArrayOutput
}

type GetVmsVmNicPrivateIpArray []GetVmsVmNicPrivateIpInput

func (GetVmsVmNicPrivateIpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVmsVmNicPrivateIp)(nil)).Elem()
}

func (i GetVmsVmNicPrivateIpArray) ToGetVmsVmNicPrivateIpArrayOutput() GetVmsVmNicPrivateIpArrayOutput {
	return i.ToGetVmsVmNicPrivateIpArrayOutputWithContext(context.Background())
}

func (i GetVmsVmNicPrivateIpArray) ToGetVmsVmNicPrivateIpArrayOutputWithContext(ctx context.Context) GetVmsVmNicPrivateIpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVmsVmNicPrivateIpArrayOutput)
}

type GetVmsVmNicPrivateIpOutput struct{ *pulumi.OutputState }

func (GetVmsVmNicPrivateIpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVmsVmNicPrivateIp)(nil)).Elem()
}

func (o GetVmsVmNicPrivateIpOutput) ToGetVmsVmNicPrivateIpOutput() GetVmsVmNicPrivateIpOutput {
	return o
}

func (o GetVmsVmNicPrivateIpOutput) ToGetVmsVmNicPrivateIpOutputWithContext(ctx context.Context) GetVmsVmNicPrivateIpOutput {
	return o
}

// If true, the IP is the primary private IP of the NIC.
func (o GetVmsVmNicPrivateIpOutput) IsPrimary() pulumi.BoolOutput {
	return o.ApplyT(func(v GetVmsVmNicPrivateIp) bool { return v.IsPrimary }).(pulumi.BoolOutput)
}

// Information about the public IP associated with the NIC.
func (o GetVmsVmNicPrivateIpOutput) LinkPublicIps() GetVmsVmNicPrivateIpLinkPublicIpArrayOutput {
	return o.ApplyT(func(v GetVmsVmNicPrivateIp) []GetVmsVmNicPrivateIpLinkPublicIp { return v.LinkPublicIps }).(GetVmsVmNicPrivateIpLinkPublicIpArrayOutput)
}

// The name of the private DNS.
func (o GetVmsVmNicPrivateIpOutput) PrivateDnsName() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmsVmNicPrivateIp) string { return v.PrivateDnsName }).(pulumi.StringOutput)
}

// The primary private IP of the VM.
func (o GetVmsVmNicPrivateIpOutput) PrivateIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmsVmNicPrivateIp) string { return v.PrivateIp }).(pulumi.StringOutput)
}

type GetVmsVmNicPrivateIpArrayOutput struct{ *pulumi.OutputState }

func (GetVmsVmNicPrivateIpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVmsVmNicPrivateIp)(nil)).Elem()
}

func (o GetVmsVmNicPrivateIpArrayOutput) ToGetVmsVmNicPrivateIpArrayOutput() GetVmsVmNicPrivateIpArrayOutput {
	return o
}

func (o GetVmsVmNicPrivateIpArrayOutput) ToGetVmsVmNicPrivateIpArrayOutputWithContext(ctx context.Context) GetVmsVmNicPrivateIpArrayOutput {
	return o
}

func (o GetVmsVmNicPrivateIpArrayOutput) Index(i pulumi.IntInput) GetVmsVmNicPrivateIpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVmsVmNicPrivateIp {
		return vs[0].([]GetVmsVmNicPrivateIp)[vs[1].(int)]
	}).(GetVmsVmNicPrivateIpOutput)
}

type GetVmsVmNicPrivateIpLinkPublicIp struct {
	// The name of the public DNS.
	PublicDnsName string `pulumi:"publicDnsName"`
	// The public IP of the VM.
	PublicIp string `pulumi:"publicIp"`
	// The account ID of the owner of the public IP.
	PublicIpAccountId string `pulumi:"publicIpAccountId"`
}

// GetVmsVmNicPrivateIpLinkPublicIpInput is an input type that accepts GetVmsVmNicPrivateIpLinkPublicIpArgs and GetVmsVmNicPrivateIpLinkPublicIpOutput values.
// You can construct a concrete instance of `GetVmsVmNicPrivateIpLinkPublicIpInput` via:
//
//	GetVmsVmNicPrivateIpLinkPublicIpArgs{...}
type GetVmsVmNicPrivateIpLinkPublicIpInput interface {
	pulumi.Input

	ToGetVmsVmNicPrivateIpLinkPublicIpOutput() GetVmsVmNicPrivateIpLinkPublicIpOutput
	ToGetVmsVmNicPrivateIpLinkPublicIpOutputWithContext(context.Context) GetVmsVmNicPrivateIpLinkPublicIpOutput
}

type GetVmsVmNicPrivateIpLinkPublicIpArgs struct {
	// The name of the public DNS.
	PublicDnsName pulumi.StringInput `pulumi:"publicDnsName"`
	// The public IP of the VM.
	PublicIp pulumi.StringInput `pulumi:"publicIp"`
	// The account ID of the owner of the public IP.
	PublicIpAccountId pulumi.StringInput `pulumi:"publicIpAccountId"`
}

func (GetVmsVmNicPrivateIpLinkPublicIpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVmsVmNicPrivateIpLinkPublicIp)(nil)).Elem()
}

func (i GetVmsVmNicPrivateIpLinkPublicIpArgs) ToGetVmsVmNicPrivateIpLinkPublicIpOutput() GetVmsVmNicPrivateIpLinkPublicIpOutput {
	return i.ToGetVmsVmNicPrivateIpLinkPublicIpOutputWithContext(context.Background())
}

func (i GetVmsVmNicPrivateIpLinkPublicIpArgs) ToGetVmsVmNicPrivateIpLinkPublicIpOutputWithContext(ctx context.Context) GetVmsVmNicPrivateIpLinkPublicIpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVmsVmNicPrivateIpLinkPublicIpOutput)
}

// GetVmsVmNicPrivateIpLinkPublicIpArrayInput is an input type that accepts GetVmsVmNicPrivateIpLinkPublicIpArray and GetVmsVmNicPrivateIpLinkPublicIpArrayOutput values.
// You can construct a concrete instance of `GetVmsVmNicPrivateIpLinkPublicIpArrayInput` via:
//
//	GetVmsVmNicPrivateIpLinkPublicIpArray{ GetVmsVmNicPrivateIpLinkPublicIpArgs{...} }
type GetVmsVmNicPrivateIpLinkPublicIpArrayInput interface {
	pulumi.Input

	ToGetVmsVmNicPrivateIpLinkPublicIpArrayOutput() GetVmsVmNicPrivateIpLinkPublicIpArrayOutput
	ToGetVmsVmNicPrivateIpLinkPublicIpArrayOutputWithContext(context.Context) GetVmsVmNicPrivateIpLinkPublicIpArrayOutput
}

type GetVmsVmNicPrivateIpLinkPublicIpArray []GetVmsVmNicPrivateIpLinkPublicIpInput

func (GetVmsVmNicPrivateIpLinkPublicIpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVmsVmNicPrivateIpLinkPublicIp)(nil)).Elem()
}

func (i GetVmsVmNicPrivateIpLinkPublicIpArray) ToGetVmsVmNicPrivateIpLinkPublicIpArrayOutput() GetVmsVmNicPrivateIpLinkPublicIpArrayOutput {
	return i.ToGetVmsVmNicPrivateIpLinkPublicIpArrayOutputWithContext(context.Background())
}

func (i GetVmsVmNicPrivateIpLinkPublicIpArray) ToGetVmsVmNicPrivateIpLinkPublicIpArrayOutputWithContext(ctx context.Context) GetVmsVmNicPrivateIpLinkPublicIpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVmsVmNicPrivateIpLinkPublicIpArrayOutput)
}

type GetVmsVmNicPrivateIpLinkPublicIpOutput struct{ *pulumi.OutputState }

func (GetVmsVmNicPrivateIpLinkPublicIpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVmsVmNicPrivateIpLinkPublicIp)(nil)).Elem()
}

func (o GetVmsVmNicPrivateIpLinkPublicIpOutput) ToGetVmsVmNicPrivateIpLinkPublicIpOutput() GetVmsVmNicPrivateIpLinkPublicIpOutput {
	return o
}

func (o GetVmsVmNicPrivateIpLinkPublicIpOutput) ToGetVmsVmNicPrivateIpLinkPublicIpOutputWithContext(ctx context.Context) GetVmsVmNicPrivateIpLinkPublicIpOutput {
	return o
}

// The name of the public DNS.
func (o GetVmsVmNicPrivateIpLinkPublicIpOutput) PublicDnsName() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmsVmNicPrivateIpLinkPublicIp) string { return v.PublicDnsName }).(pulumi.StringOutput)
}

// The public IP of the VM.
func (o GetVmsVmNicPrivateIpLinkPublicIpOutput) PublicIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmsVmNicPrivateIpLinkPublicIp) string { return v.PublicIp }).(pulumi.StringOutput)
}

// The account ID of the owner of the public IP.
func (o GetVmsVmNicPrivateIpLinkPublicIpOutput) PublicIpAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmsVmNicPrivateIpLinkPublicIp) string { return v.PublicIpAccountId }).(pulumi.StringOutput)
}

type GetVmsVmNicPrivateIpLinkPublicIpArrayOutput struct{ *pulumi.OutputState }

func (GetVmsVmNicPrivateIpLinkPublicIpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVmsVmNicPrivateIpLinkPublicIp)(nil)).Elem()
}

func (o GetVmsVmNicPrivateIpLinkPublicIpArrayOutput) ToGetVmsVmNicPrivateIpLinkPublicIpArrayOutput() GetVmsVmNicPrivateIpLinkPublicIpArrayOutput {
	return o
}

func (o GetVmsVmNicPrivateIpLinkPublicIpArrayOutput) ToGetVmsVmNicPrivateIpLinkPublicIpArrayOutputWithContext(ctx context.Context) GetVmsVmNicPrivateIpLinkPublicIpArrayOutput {
	return o
}

func (o GetVmsVmNicPrivateIpLinkPublicIpArrayOutput) Index(i pulumi.IntInput) GetVmsVmNicPrivateIpLinkPublicIpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVmsVmNicPrivateIpLinkPublicIp {
		return vs[0].([]GetVmsVmNicPrivateIpLinkPublicIp)[vs[1].(int)]
	}).(GetVmsVmNicPrivateIpLinkPublicIpOutput)
}

type GetVmsVmNicSecurityGroup struct {
	// The ID of the security group.
	SecurityGroupId string `pulumi:"securityGroupId"`
	// The name of the security group.
	SecurityGroupName string `pulumi:"securityGroupName"`
}

// GetVmsVmNicSecurityGroupInput is an input type that accepts GetVmsVmNicSecurityGroupArgs and GetVmsVmNicSecurityGroupOutput values.
// You can construct a concrete instance of `GetVmsVmNicSecurityGroupInput` via:
//
//	GetVmsVmNicSecurityGroupArgs{...}
type GetVmsVmNicSecurityGroupInput interface {
	pulumi.Input

	ToGetVmsVmNicSecurityGroupOutput() GetVmsVmNicSecurityGroupOutput
	ToGetVmsVmNicSecurityGroupOutputWithContext(context.Context) GetVmsVmNicSecurityGroupOutput
}

type GetVmsVmNicSecurityGroupArgs struct {
	// The ID of the security group.
	SecurityGroupId pulumi.StringInput `pulumi:"securityGroupId"`
	// The name of the security group.
	SecurityGroupName pulumi.StringInput `pulumi:"securityGroupName"`
}

func (GetVmsVmNicSecurityGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVmsVmNicSecurityGroup)(nil)).Elem()
}

func (i GetVmsVmNicSecurityGroupArgs) ToGetVmsVmNicSecurityGroupOutput() GetVmsVmNicSecurityGroupOutput {
	return i.ToGetVmsVmNicSecurityGroupOutputWithContext(context.Background())
}

func (i GetVmsVmNicSecurityGroupArgs) ToGetVmsVmNicSecurityGroupOutputWithContext(ctx context.Context) GetVmsVmNicSecurityGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVmsVmNicSecurityGroupOutput)
}

// GetVmsVmNicSecurityGroupArrayInput is an input type that accepts GetVmsVmNicSecurityGroupArray and GetVmsVmNicSecurityGroupArrayOutput values.
// You can construct a concrete instance of `GetVmsVmNicSecurityGroupArrayInput` via:
//
//	GetVmsVmNicSecurityGroupArray{ GetVmsVmNicSecurityGroupArgs{...} }
type GetVmsVmNicSecurityGroupArrayInput interface {
	pulumi.Input

	ToGetVmsVmNicSecurityGroupArrayOutput() GetVmsVmNicSecurityGroupArrayOutput
	ToGetVmsVmNicSecurityGroupArrayOutputWithContext(context.Context) GetVmsVmNicSecurityGroupArrayOutput
}

type GetVmsVmNicSecurityGroupArray []GetVmsVmNicSecurityGroupInput

func (GetVmsVmNicSecurityGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVmsVmNicSecurityGroup)(nil)).Elem()
}

func (i GetVmsVmNicSecurityGroupArray) ToGetVmsVmNicSecurityGroupArrayOutput() GetVmsVmNicSecurityGroupArrayOutput {
	return i.ToGetVmsVmNicSecurityGroupArrayOutputWithContext(context.Background())
}

func (i GetVmsVmNicSecurityGroupArray) ToGetVmsVmNicSecurityGroupArrayOutputWithContext(ctx context.Context) GetVmsVmNicSecurityGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVmsVmNicSecurityGroupArrayOutput)
}

type GetVmsVmNicSecurityGroupOutput struct{ *pulumi.OutputState }

func (GetVmsVmNicSecurityGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVmsVmNicSecurityGroup)(nil)).Elem()
}

func (o GetVmsVmNicSecurityGroupOutput) ToGetVmsVmNicSecurityGroupOutput() GetVmsVmNicSecurityGroupOutput {
	return o
}

func (o GetVmsVmNicSecurityGroupOutput) ToGetVmsVmNicSecurityGroupOutputWithContext(ctx context.Context) GetVmsVmNicSecurityGroupOutput {
	return o
}

// The ID of the security group.
func (o GetVmsVmNicSecurityGroupOutput) SecurityGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmsVmNicSecurityGroup) string { return v.SecurityGroupId }).(pulumi.StringOutput)
}

// The name of the security group.
func (o GetVmsVmNicSecurityGroupOutput) SecurityGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmsVmNicSecurityGroup) string { return v.SecurityGroupName }).(pulumi.StringOutput)
}

type GetVmsVmNicSecurityGroupArrayOutput struct{ *pulumi.OutputState }

func (GetVmsVmNicSecurityGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVmsVmNicSecurityGroup)(nil)).Elem()
}

func (o GetVmsVmNicSecurityGroupArrayOutput) ToGetVmsVmNicSecurityGroupArrayOutput() GetVmsVmNicSecurityGroupArrayOutput {
	return o
}

func (o GetVmsVmNicSecurityGroupArrayOutput) ToGetVmsVmNicSecurityGroupArrayOutputWithContext(ctx context.Context) GetVmsVmNicSecurityGroupArrayOutput {
	return o
}

func (o GetVmsVmNicSecurityGroupArrayOutput) Index(i pulumi.IntInput) GetVmsVmNicSecurityGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVmsVmNicSecurityGroup {
		return vs[0].([]GetVmsVmNicSecurityGroup)[vs[1].(int)]
	}).(GetVmsVmNicSecurityGroupOutput)
}

type GetVmsVmPrimaryNic struct {
	// The account ID of the owner of the NIC.
	AccountId string `pulumi:"accountId"`
	// If true, the NIC is deleted when the VM is terminated.
	DeleteOnVmDeletion bool `pulumi:"deleteOnVmDeletion"`
	// The description of the NIC.
	Description string `pulumi:"description"`
	// The device index for the NIC attachment (between `1` and `7`, both included).
	DeviceNumber int `pulumi:"deviceNumber"`
	// (Net only) If true, the source/destination check is enabled. If false, it is disabled.
	IsSourceDestChecked bool `pulumi:"isSourceDestChecked"`
	// Information about the network interface card (NIC).
	LinkNics []GetVmsVmPrimaryNicLinkNic `pulumi:"linkNics"`
	// Information about the public IP associated with the NIC.
	LinkPublicIps []GetVmsVmPrimaryNicLinkPublicIp `pulumi:"linkPublicIps"`
	// The Media Access Control (MAC) address of the NIC.
	MacAddress string `pulumi:"macAddress"`
	// The ID of the Net for the NIC.
	NetId string `pulumi:"netId"`
	// The ID of the NIC.
	NicId string `pulumi:"nicId"`
	// The name of the private DNS.
	PrivateDnsName string `pulumi:"privateDnsName"`
	// The private IP or IPs of the NIC.
	PrivateIps              []GetVmsVmPrimaryNicPrivateIp `pulumi:"privateIps"`
	SecondaryPrivateIpCount int                           `pulumi:"secondaryPrivateIpCount"`
	// The IDs of the security groups for the VMs (only in the public Cloud).
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// One or more security groups associated with the VM.
	SecurityGroups []GetVmsVmPrimaryNicSecurityGroup `pulumi:"securityGroups"`
	// The state of the VM (`pending` \| `running` \| `stopping` \| `stopped` \| `shutting-down` \| `terminated` \| `quarantine`).
	State string `pulumi:"state"`
	// The ID of the Subnet for the VM.
	SubnetId string `pulumi:"subnetId"`
}

// GetVmsVmPrimaryNicInput is an input type that accepts GetVmsVmPrimaryNicArgs and GetVmsVmPrimaryNicOutput values.
// You can construct a concrete instance of `GetVmsVmPrimaryNicInput` via:
//
//	GetVmsVmPrimaryNicArgs{...}
type GetVmsVmPrimaryNicInput interface {
	pulumi.Input

	ToGetVmsVmPrimaryNicOutput() GetVmsVmPrimaryNicOutput
	ToGetVmsVmPrimaryNicOutputWithContext(context.Context) GetVmsVmPrimaryNicOutput
}

type GetVmsVmPrimaryNicArgs struct {
	// The account ID of the owner of the NIC.
	AccountId pulumi.StringInput `pulumi:"accountId"`
	// If true, the NIC is deleted when the VM is terminated.
	DeleteOnVmDeletion pulumi.BoolInput `pulumi:"deleteOnVmDeletion"`
	// The description of the NIC.
	Description pulumi.StringInput `pulumi:"description"`
	// The device index for the NIC attachment (between `1` and `7`, both included).
	DeviceNumber pulumi.IntInput `pulumi:"deviceNumber"`
	// (Net only) If true, the source/destination check is enabled. If false, it is disabled.
	IsSourceDestChecked pulumi.BoolInput `pulumi:"isSourceDestChecked"`
	// Information about the network interface card (NIC).
	LinkNics GetVmsVmPrimaryNicLinkNicArrayInput `pulumi:"linkNics"`
	// Information about the public IP associated with the NIC.
	LinkPublicIps GetVmsVmPrimaryNicLinkPublicIpArrayInput `pulumi:"linkPublicIps"`
	// The Media Access Control (MAC) address of the NIC.
	MacAddress pulumi.StringInput `pulumi:"macAddress"`
	// The ID of the Net for the NIC.
	NetId pulumi.StringInput `pulumi:"netId"`
	// The ID of the NIC.
	NicId pulumi.StringInput `pulumi:"nicId"`
	// The name of the private DNS.
	PrivateDnsName pulumi.StringInput `pulumi:"privateDnsName"`
	// The private IP or IPs of the NIC.
	PrivateIps              GetVmsVmPrimaryNicPrivateIpArrayInput `pulumi:"privateIps"`
	SecondaryPrivateIpCount pulumi.IntInput                       `pulumi:"secondaryPrivateIpCount"`
	// The IDs of the security groups for the VMs (only in the public Cloud).
	SecurityGroupIds pulumi.StringArrayInput `pulumi:"securityGroupIds"`
	// One or more security groups associated with the VM.
	SecurityGroups GetVmsVmPrimaryNicSecurityGroupArrayInput `pulumi:"securityGroups"`
	// The state of the VM (`pending` \| `running` \| `stopping` \| `stopped` \| `shutting-down` \| `terminated` \| `quarantine`).
	State pulumi.StringInput `pulumi:"state"`
	// The ID of the Subnet for the VM.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
}

func (GetVmsVmPrimaryNicArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVmsVmPrimaryNic)(nil)).Elem()
}

func (i GetVmsVmPrimaryNicArgs) ToGetVmsVmPrimaryNicOutput() GetVmsVmPrimaryNicOutput {
	return i.ToGetVmsVmPrimaryNicOutputWithContext(context.Background())
}

func (i GetVmsVmPrimaryNicArgs) ToGetVmsVmPrimaryNicOutputWithContext(ctx context.Context) GetVmsVmPrimaryNicOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVmsVmPrimaryNicOutput)
}

// GetVmsVmPrimaryNicArrayInput is an input type that accepts GetVmsVmPrimaryNicArray and GetVmsVmPrimaryNicArrayOutput values.
// You can construct a concrete instance of `GetVmsVmPrimaryNicArrayInput` via:
//
//	GetVmsVmPrimaryNicArray{ GetVmsVmPrimaryNicArgs{...} }
type GetVmsVmPrimaryNicArrayInput interface {
	pulumi.Input

	ToGetVmsVmPrimaryNicArrayOutput() GetVmsVmPrimaryNicArrayOutput
	ToGetVmsVmPrimaryNicArrayOutputWithContext(context.Context) GetVmsVmPrimaryNicArrayOutput
}

type GetVmsVmPrimaryNicArray []GetVmsVmPrimaryNicInput

func (GetVmsVmPrimaryNicArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVmsVmPrimaryNic)(nil)).Elem()
}

func (i GetVmsVmPrimaryNicArray) ToGetVmsVmPrimaryNicArrayOutput() GetVmsVmPrimaryNicArrayOutput {
	return i.ToGetVmsVmPrimaryNicArrayOutputWithContext(context.Background())
}

func (i GetVmsVmPrimaryNicArray) ToGetVmsVmPrimaryNicArrayOutputWithContext(ctx context.Context) GetVmsVmPrimaryNicArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVmsVmPrimaryNicArrayOutput)
}

type GetVmsVmPrimaryNicOutput struct{ *pulumi.OutputState }

func (GetVmsVmPrimaryNicOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVmsVmPrimaryNic)(nil)).Elem()
}

func (o GetVmsVmPrimaryNicOutput) ToGetVmsVmPrimaryNicOutput() GetVmsVmPrimaryNicOutput {
	return o
}

func (o GetVmsVmPrimaryNicOutput) ToGetVmsVmPrimaryNicOutputWithContext(ctx context.Context) GetVmsVmPrimaryNicOutput {
	return o
}

// The account ID of the owner of the NIC.
func (o GetVmsVmPrimaryNicOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmsVmPrimaryNic) string { return v.AccountId }).(pulumi.StringOutput)
}

// If true, the NIC is deleted when the VM is terminated.
func (o GetVmsVmPrimaryNicOutput) DeleteOnVmDeletion() pulumi.BoolOutput {
	return o.ApplyT(func(v GetVmsVmPrimaryNic) bool { return v.DeleteOnVmDeletion }).(pulumi.BoolOutput)
}

// The description of the NIC.
func (o GetVmsVmPrimaryNicOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmsVmPrimaryNic) string { return v.Description }).(pulumi.StringOutput)
}

// The device index for the NIC attachment (between `1` and `7`, both included).
func (o GetVmsVmPrimaryNicOutput) DeviceNumber() pulumi.IntOutput {
	return o.ApplyT(func(v GetVmsVmPrimaryNic) int { return v.DeviceNumber }).(pulumi.IntOutput)
}

// (Net only) If true, the source/destination check is enabled. If false, it is disabled.
func (o GetVmsVmPrimaryNicOutput) IsSourceDestChecked() pulumi.BoolOutput {
	return o.ApplyT(func(v GetVmsVmPrimaryNic) bool { return v.IsSourceDestChecked }).(pulumi.BoolOutput)
}

// Information about the network interface card (NIC).
func (o GetVmsVmPrimaryNicOutput) LinkNics() GetVmsVmPrimaryNicLinkNicArrayOutput {
	return o.ApplyT(func(v GetVmsVmPrimaryNic) []GetVmsVmPrimaryNicLinkNic { return v.LinkNics }).(GetVmsVmPrimaryNicLinkNicArrayOutput)
}

// Information about the public IP associated with the NIC.
func (o GetVmsVmPrimaryNicOutput) LinkPublicIps() GetVmsVmPrimaryNicLinkPublicIpArrayOutput {
	return o.ApplyT(func(v GetVmsVmPrimaryNic) []GetVmsVmPrimaryNicLinkPublicIp { return v.LinkPublicIps }).(GetVmsVmPrimaryNicLinkPublicIpArrayOutput)
}

// The Media Access Control (MAC) address of the NIC.
func (o GetVmsVmPrimaryNicOutput) MacAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmsVmPrimaryNic) string { return v.MacAddress }).(pulumi.StringOutput)
}

// The ID of the Net for the NIC.
func (o GetVmsVmPrimaryNicOutput) NetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmsVmPrimaryNic) string { return v.NetId }).(pulumi.StringOutput)
}

// The ID of the NIC.
func (o GetVmsVmPrimaryNicOutput) NicId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmsVmPrimaryNic) string { return v.NicId }).(pulumi.StringOutput)
}

// The name of the private DNS.
func (o GetVmsVmPrimaryNicOutput) PrivateDnsName() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmsVmPrimaryNic) string { return v.PrivateDnsName }).(pulumi.StringOutput)
}

// The private IP or IPs of the NIC.
func (o GetVmsVmPrimaryNicOutput) PrivateIps() GetVmsVmPrimaryNicPrivateIpArrayOutput {
	return o.ApplyT(func(v GetVmsVmPrimaryNic) []GetVmsVmPrimaryNicPrivateIp { return v.PrivateIps }).(GetVmsVmPrimaryNicPrivateIpArrayOutput)
}

func (o GetVmsVmPrimaryNicOutput) SecondaryPrivateIpCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetVmsVmPrimaryNic) int { return v.SecondaryPrivateIpCount }).(pulumi.IntOutput)
}

// The IDs of the security groups for the VMs (only in the public Cloud).
func (o GetVmsVmPrimaryNicOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetVmsVmPrimaryNic) []string { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

// One or more security groups associated with the VM.
func (o GetVmsVmPrimaryNicOutput) SecurityGroups() GetVmsVmPrimaryNicSecurityGroupArrayOutput {
	return o.ApplyT(func(v GetVmsVmPrimaryNic) []GetVmsVmPrimaryNicSecurityGroup { return v.SecurityGroups }).(GetVmsVmPrimaryNicSecurityGroupArrayOutput)
}

// The state of the VM (`pending` \| `running` \| `stopping` \| `stopped` \| `shutting-down` \| `terminated` \| `quarantine`).
func (o GetVmsVmPrimaryNicOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmsVmPrimaryNic) string { return v.State }).(pulumi.StringOutput)
}

// The ID of the Subnet for the VM.
func (o GetVmsVmPrimaryNicOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmsVmPrimaryNic) string { return v.SubnetId }).(pulumi.StringOutput)
}

type GetVmsVmPrimaryNicArrayOutput struct{ *pulumi.OutputState }

func (GetVmsVmPrimaryNicArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVmsVmPrimaryNic)(nil)).Elem()
}

func (o GetVmsVmPrimaryNicArrayOutput) ToGetVmsVmPrimaryNicArrayOutput() GetVmsVmPrimaryNicArrayOutput {
	return o
}

func (o GetVmsVmPrimaryNicArrayOutput) ToGetVmsVmPrimaryNicArrayOutputWithContext(ctx context.Context) GetVmsVmPrimaryNicArrayOutput {
	return o
}

func (o GetVmsVmPrimaryNicArrayOutput) Index(i pulumi.IntInput) GetVmsVmPrimaryNicOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVmsVmPrimaryNic {
		return vs[0].([]GetVmsVmPrimaryNic)[vs[1].(int)]
	}).(GetVmsVmPrimaryNicOutput)
}

type GetVmsVmPrimaryNicLinkNic struct {
	// If true, the NIC is deleted when the VM is terminated.
	DeleteOnVmDeletion bool `pulumi:"deleteOnVmDeletion"`
	// The device index for the NIC attachment (between `1` and `7`, both included).
	DeviceNumber string `pulumi:"deviceNumber"`
	// The ID of the NIC to attach.
	LinkNicId string `pulumi:"linkNicId"`
	// The state of the VM (`pending` \| `running` \| `stopping` \| `stopped` \| `shutting-down` \| `terminated` \| `quarantine`).
	State string `pulumi:"state"`
}

// GetVmsVmPrimaryNicLinkNicInput is an input type that accepts GetVmsVmPrimaryNicLinkNicArgs and GetVmsVmPrimaryNicLinkNicOutput values.
// You can construct a concrete instance of `GetVmsVmPrimaryNicLinkNicInput` via:
//
//	GetVmsVmPrimaryNicLinkNicArgs{...}
type GetVmsVmPrimaryNicLinkNicInput interface {
	pulumi.Input

	ToGetVmsVmPrimaryNicLinkNicOutput() GetVmsVmPrimaryNicLinkNicOutput
	ToGetVmsVmPrimaryNicLinkNicOutputWithContext(context.Context) GetVmsVmPrimaryNicLinkNicOutput
}

type GetVmsVmPrimaryNicLinkNicArgs struct {
	// If true, the NIC is deleted when the VM is terminated.
	DeleteOnVmDeletion pulumi.BoolInput `pulumi:"deleteOnVmDeletion"`
	// The device index for the NIC attachment (between `1` and `7`, both included).
	DeviceNumber pulumi.StringInput `pulumi:"deviceNumber"`
	// The ID of the NIC to attach.
	LinkNicId pulumi.StringInput `pulumi:"linkNicId"`
	// The state of the VM (`pending` \| `running` \| `stopping` \| `stopped` \| `shutting-down` \| `terminated` \| `quarantine`).
	State pulumi.StringInput `pulumi:"state"`
}

func (GetVmsVmPrimaryNicLinkNicArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVmsVmPrimaryNicLinkNic)(nil)).Elem()
}

func (i GetVmsVmPrimaryNicLinkNicArgs) ToGetVmsVmPrimaryNicLinkNicOutput() GetVmsVmPrimaryNicLinkNicOutput {
	return i.ToGetVmsVmPrimaryNicLinkNicOutputWithContext(context.Background())
}

func (i GetVmsVmPrimaryNicLinkNicArgs) ToGetVmsVmPrimaryNicLinkNicOutputWithContext(ctx context.Context) GetVmsVmPrimaryNicLinkNicOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVmsVmPrimaryNicLinkNicOutput)
}

// GetVmsVmPrimaryNicLinkNicArrayInput is an input type that accepts GetVmsVmPrimaryNicLinkNicArray and GetVmsVmPrimaryNicLinkNicArrayOutput values.
// You can construct a concrete instance of `GetVmsVmPrimaryNicLinkNicArrayInput` via:
//
//	GetVmsVmPrimaryNicLinkNicArray{ GetVmsVmPrimaryNicLinkNicArgs{...} }
type GetVmsVmPrimaryNicLinkNicArrayInput interface {
	pulumi.Input

	ToGetVmsVmPrimaryNicLinkNicArrayOutput() GetVmsVmPrimaryNicLinkNicArrayOutput
	ToGetVmsVmPrimaryNicLinkNicArrayOutputWithContext(context.Context) GetVmsVmPrimaryNicLinkNicArrayOutput
}

type GetVmsVmPrimaryNicLinkNicArray []GetVmsVmPrimaryNicLinkNicInput

func (GetVmsVmPrimaryNicLinkNicArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVmsVmPrimaryNicLinkNic)(nil)).Elem()
}

func (i GetVmsVmPrimaryNicLinkNicArray) ToGetVmsVmPrimaryNicLinkNicArrayOutput() GetVmsVmPrimaryNicLinkNicArrayOutput {
	return i.ToGetVmsVmPrimaryNicLinkNicArrayOutputWithContext(context.Background())
}

func (i GetVmsVmPrimaryNicLinkNicArray) ToGetVmsVmPrimaryNicLinkNicArrayOutputWithContext(ctx context.Context) GetVmsVmPrimaryNicLinkNicArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVmsVmPrimaryNicLinkNicArrayOutput)
}

type GetVmsVmPrimaryNicLinkNicOutput struct{ *pulumi.OutputState }

func (GetVmsVmPrimaryNicLinkNicOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVmsVmPrimaryNicLinkNic)(nil)).Elem()
}

func (o GetVmsVmPrimaryNicLinkNicOutput) ToGetVmsVmPrimaryNicLinkNicOutput() GetVmsVmPrimaryNicLinkNicOutput {
	return o
}

func (o GetVmsVmPrimaryNicLinkNicOutput) ToGetVmsVmPrimaryNicLinkNicOutputWithContext(ctx context.Context) GetVmsVmPrimaryNicLinkNicOutput {
	return o
}

// If true, the NIC is deleted when the VM is terminated.
func (o GetVmsVmPrimaryNicLinkNicOutput) DeleteOnVmDeletion() pulumi.BoolOutput {
	return o.ApplyT(func(v GetVmsVmPrimaryNicLinkNic) bool { return v.DeleteOnVmDeletion }).(pulumi.BoolOutput)
}

// The device index for the NIC attachment (between `1` and `7`, both included).
func (o GetVmsVmPrimaryNicLinkNicOutput) DeviceNumber() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmsVmPrimaryNicLinkNic) string { return v.DeviceNumber }).(pulumi.StringOutput)
}

// The ID of the NIC to attach.
func (o GetVmsVmPrimaryNicLinkNicOutput) LinkNicId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmsVmPrimaryNicLinkNic) string { return v.LinkNicId }).(pulumi.StringOutput)
}

// The state of the VM (`pending` \| `running` \| `stopping` \| `stopped` \| `shutting-down` \| `terminated` \| `quarantine`).
func (o GetVmsVmPrimaryNicLinkNicOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmsVmPrimaryNicLinkNic) string { return v.State }).(pulumi.StringOutput)
}

type GetVmsVmPrimaryNicLinkNicArrayOutput struct{ *pulumi.OutputState }

func (GetVmsVmPrimaryNicLinkNicArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVmsVmPrimaryNicLinkNic)(nil)).Elem()
}

func (o GetVmsVmPrimaryNicLinkNicArrayOutput) ToGetVmsVmPrimaryNicLinkNicArrayOutput() GetVmsVmPrimaryNicLinkNicArrayOutput {
	return o
}

func (o GetVmsVmPrimaryNicLinkNicArrayOutput) ToGetVmsVmPrimaryNicLinkNicArrayOutputWithContext(ctx context.Context) GetVmsVmPrimaryNicLinkNicArrayOutput {
	return o
}

func (o GetVmsVmPrimaryNicLinkNicArrayOutput) Index(i pulumi.IntInput) GetVmsVmPrimaryNicLinkNicOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVmsVmPrimaryNicLinkNic {
		return vs[0].([]GetVmsVmPrimaryNicLinkNic)[vs[1].(int)]
	}).(GetVmsVmPrimaryNicLinkNicOutput)
}

type GetVmsVmPrimaryNicLinkPublicIp struct {
	// The name of the public DNS.
	PublicDnsName string `pulumi:"publicDnsName"`
	// The public IP of the VM.
	PublicIp string `pulumi:"publicIp"`
	// The account ID of the owner of the public IP.
	PublicIpAccountId string `pulumi:"publicIpAccountId"`
}

// GetVmsVmPrimaryNicLinkPublicIpInput is an input type that accepts GetVmsVmPrimaryNicLinkPublicIpArgs and GetVmsVmPrimaryNicLinkPublicIpOutput values.
// You can construct a concrete instance of `GetVmsVmPrimaryNicLinkPublicIpInput` via:
//
//	GetVmsVmPrimaryNicLinkPublicIpArgs{...}
type GetVmsVmPrimaryNicLinkPublicIpInput interface {
	pulumi.Input

	ToGetVmsVmPrimaryNicLinkPublicIpOutput() GetVmsVmPrimaryNicLinkPublicIpOutput
	ToGetVmsVmPrimaryNicLinkPublicIpOutputWithContext(context.Context) GetVmsVmPrimaryNicLinkPublicIpOutput
}

type GetVmsVmPrimaryNicLinkPublicIpArgs struct {
	// The name of the public DNS.
	PublicDnsName pulumi.StringInput `pulumi:"publicDnsName"`
	// The public IP of the VM.
	PublicIp pulumi.StringInput `pulumi:"publicIp"`
	// The account ID of the owner of the public IP.
	PublicIpAccountId pulumi.StringInput `pulumi:"publicIpAccountId"`
}

func (GetVmsVmPrimaryNicLinkPublicIpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVmsVmPrimaryNicLinkPublicIp)(nil)).Elem()
}

func (i GetVmsVmPrimaryNicLinkPublicIpArgs) ToGetVmsVmPrimaryNicLinkPublicIpOutput() GetVmsVmPrimaryNicLinkPublicIpOutput {
	return i.ToGetVmsVmPrimaryNicLinkPublicIpOutputWithContext(context.Background())
}

func (i GetVmsVmPrimaryNicLinkPublicIpArgs) ToGetVmsVmPrimaryNicLinkPublicIpOutputWithContext(ctx context.Context) GetVmsVmPrimaryNicLinkPublicIpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVmsVmPrimaryNicLinkPublicIpOutput)
}

// GetVmsVmPrimaryNicLinkPublicIpArrayInput is an input type that accepts GetVmsVmPrimaryNicLinkPublicIpArray and GetVmsVmPrimaryNicLinkPublicIpArrayOutput values.
// You can construct a concrete instance of `GetVmsVmPrimaryNicLinkPublicIpArrayInput` via:
//
//	GetVmsVmPrimaryNicLinkPublicIpArray{ GetVmsVmPrimaryNicLinkPublicIpArgs{...} }
type GetVmsVmPrimaryNicLinkPublicIpArrayInput interface {
	pulumi.Input

	ToGetVmsVmPrimaryNicLinkPublicIpArrayOutput() GetVmsVmPrimaryNicLinkPublicIpArrayOutput
	ToGetVmsVmPrimaryNicLinkPublicIpArrayOutputWithContext(context.Context) GetVmsVmPrimaryNicLinkPublicIpArrayOutput
}

type GetVmsVmPrimaryNicLinkPublicIpArray []GetVmsVmPrimaryNicLinkPublicIpInput

func (GetVmsVmPrimaryNicLinkPublicIpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVmsVmPrimaryNicLinkPublicIp)(nil)).Elem()
}

func (i GetVmsVmPrimaryNicLinkPublicIpArray) ToGetVmsVmPrimaryNicLinkPublicIpArrayOutput() GetVmsVmPrimaryNicLinkPublicIpArrayOutput {
	return i.ToGetVmsVmPrimaryNicLinkPublicIpArrayOutputWithContext(context.Background())
}

func (i GetVmsVmPrimaryNicLinkPublicIpArray) ToGetVmsVmPrimaryNicLinkPublicIpArrayOutputWithContext(ctx context.Context) GetVmsVmPrimaryNicLinkPublicIpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVmsVmPrimaryNicLinkPublicIpArrayOutput)
}

type GetVmsVmPrimaryNicLinkPublicIpOutput struct{ *pulumi.OutputState }

func (GetVmsVmPrimaryNicLinkPublicIpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVmsVmPrimaryNicLinkPublicIp)(nil)).Elem()
}

func (o GetVmsVmPrimaryNicLinkPublicIpOutput) ToGetVmsVmPrimaryNicLinkPublicIpOutput() GetVmsVmPrimaryNicLinkPublicIpOutput {
	return o
}

func (o GetVmsVmPrimaryNicLinkPublicIpOutput) ToGetVmsVmPrimaryNicLinkPublicIpOutputWithContext(ctx context.Context) GetVmsVmPrimaryNicLinkPublicIpOutput {
	return o
}

// The name of the public DNS.
func (o GetVmsVmPrimaryNicLinkPublicIpOutput) PublicDnsName() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmsVmPrimaryNicLinkPublicIp) string { return v.PublicDnsName }).(pulumi.StringOutput)
}

// The public IP of the VM.
func (o GetVmsVmPrimaryNicLinkPublicIpOutput) PublicIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmsVmPrimaryNicLinkPublicIp) string { return v.PublicIp }).(pulumi.StringOutput)
}

// The account ID of the owner of the public IP.
func (o GetVmsVmPrimaryNicLinkPublicIpOutput) PublicIpAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmsVmPrimaryNicLinkPublicIp) string { return v.PublicIpAccountId }).(pulumi.StringOutput)
}

type GetVmsVmPrimaryNicLinkPublicIpArrayOutput struct{ *pulumi.OutputState }

func (GetVmsVmPrimaryNicLinkPublicIpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVmsVmPrimaryNicLinkPublicIp)(nil)).Elem()
}

func (o GetVmsVmPrimaryNicLinkPublicIpArrayOutput) ToGetVmsVmPrimaryNicLinkPublicIpArrayOutput() GetVmsVmPrimaryNicLinkPublicIpArrayOutput {
	return o
}

func (o GetVmsVmPrimaryNicLinkPublicIpArrayOutput) ToGetVmsVmPrimaryNicLinkPublicIpArrayOutputWithContext(ctx context.Context) GetVmsVmPrimaryNicLinkPublicIpArrayOutput {
	return o
}

func (o GetVmsVmPrimaryNicLinkPublicIpArrayOutput) Index(i pulumi.IntInput) GetVmsVmPrimaryNicLinkPublicIpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVmsVmPrimaryNicLinkPublicIp {
		return vs[0].([]GetVmsVmPrimaryNicLinkPublicIp)[vs[1].(int)]
	}).(GetVmsVmPrimaryNicLinkPublicIpOutput)
}

type GetVmsVmPrimaryNicPrivateIp struct {
	// If true, the IP is the primary private IP of the NIC.
	IsPrimary bool `pulumi:"isPrimary"`
	// Information about the public IP associated with the NIC.
	LinkPublicIps []GetVmsVmPrimaryNicPrivateIpLinkPublicIp `pulumi:"linkPublicIps"`
	// The name of the private DNS.
	PrivateDnsName string `pulumi:"privateDnsName"`
	// The primary private IP of the VM.
	PrivateIp string `pulumi:"privateIp"`
}

// GetVmsVmPrimaryNicPrivateIpInput is an input type that accepts GetVmsVmPrimaryNicPrivateIpArgs and GetVmsVmPrimaryNicPrivateIpOutput values.
// You can construct a concrete instance of `GetVmsVmPrimaryNicPrivateIpInput` via:
//
//	GetVmsVmPrimaryNicPrivateIpArgs{...}
type GetVmsVmPrimaryNicPrivateIpInput interface {
	pulumi.Input

	ToGetVmsVmPrimaryNicPrivateIpOutput() GetVmsVmPrimaryNicPrivateIpOutput
	ToGetVmsVmPrimaryNicPrivateIpOutputWithContext(context.Context) GetVmsVmPrimaryNicPrivateIpOutput
}

type GetVmsVmPrimaryNicPrivateIpArgs struct {
	// If true, the IP is the primary private IP of the NIC.
	IsPrimary pulumi.BoolInput `pulumi:"isPrimary"`
	// Information about the public IP associated with the NIC.
	LinkPublicIps GetVmsVmPrimaryNicPrivateIpLinkPublicIpArrayInput `pulumi:"linkPublicIps"`
	// The name of the private DNS.
	PrivateDnsName pulumi.StringInput `pulumi:"privateDnsName"`
	// The primary private IP of the VM.
	PrivateIp pulumi.StringInput `pulumi:"privateIp"`
}

func (GetVmsVmPrimaryNicPrivateIpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVmsVmPrimaryNicPrivateIp)(nil)).Elem()
}

func (i GetVmsVmPrimaryNicPrivateIpArgs) ToGetVmsVmPrimaryNicPrivateIpOutput() GetVmsVmPrimaryNicPrivateIpOutput {
	return i.ToGetVmsVmPrimaryNicPrivateIpOutputWithContext(context.Background())
}

func (i GetVmsVmPrimaryNicPrivateIpArgs) ToGetVmsVmPrimaryNicPrivateIpOutputWithContext(ctx context.Context) GetVmsVmPrimaryNicPrivateIpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVmsVmPrimaryNicPrivateIpOutput)
}

// GetVmsVmPrimaryNicPrivateIpArrayInput is an input type that accepts GetVmsVmPrimaryNicPrivateIpArray and GetVmsVmPrimaryNicPrivateIpArrayOutput values.
// You can construct a concrete instance of `GetVmsVmPrimaryNicPrivateIpArrayInput` via:
//
//	GetVmsVmPrimaryNicPrivateIpArray{ GetVmsVmPrimaryNicPrivateIpArgs{...} }
type GetVmsVmPrimaryNicPrivateIpArrayInput interface {
	pulumi.Input

	ToGetVmsVmPrimaryNicPrivateIpArrayOutput() GetVmsVmPrimaryNicPrivateIpArrayOutput
	ToGetVmsVmPrimaryNicPrivateIpArrayOutputWithContext(context.Context) GetVmsVmPrimaryNicPrivateIpArrayOutput
}

type GetVmsVmPrimaryNicPrivateIpArray []GetVmsVmPrimaryNicPrivateIpInput

func (GetVmsVmPrimaryNicPrivateIpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVmsVmPrimaryNicPrivateIp)(nil)).Elem()
}

func (i GetVmsVmPrimaryNicPrivateIpArray) ToGetVmsVmPrimaryNicPrivateIpArrayOutput() GetVmsVmPrimaryNicPrivateIpArrayOutput {
	return i.ToGetVmsVmPrimaryNicPrivateIpArrayOutputWithContext(context.Background())
}

func (i GetVmsVmPrimaryNicPrivateIpArray) ToGetVmsVmPrimaryNicPrivateIpArrayOutputWithContext(ctx context.Context) GetVmsVmPrimaryNicPrivateIpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVmsVmPrimaryNicPrivateIpArrayOutput)
}

type GetVmsVmPrimaryNicPrivateIpOutput struct{ *pulumi.OutputState }

func (GetVmsVmPrimaryNicPrivateIpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVmsVmPrimaryNicPrivateIp)(nil)).Elem()
}

func (o GetVmsVmPrimaryNicPrivateIpOutput) ToGetVmsVmPrimaryNicPrivateIpOutput() GetVmsVmPrimaryNicPrivateIpOutput {
	return o
}

func (o GetVmsVmPrimaryNicPrivateIpOutput) ToGetVmsVmPrimaryNicPrivateIpOutputWithContext(ctx context.Context) GetVmsVmPrimaryNicPrivateIpOutput {
	return o
}

// If true, the IP is the primary private IP of the NIC.
func (o GetVmsVmPrimaryNicPrivateIpOutput) IsPrimary() pulumi.BoolOutput {
	return o.ApplyT(func(v GetVmsVmPrimaryNicPrivateIp) bool { return v.IsPrimary }).(pulumi.BoolOutput)
}

// Information about the public IP associated with the NIC.
func (o GetVmsVmPrimaryNicPrivateIpOutput) LinkPublicIps() GetVmsVmPrimaryNicPrivateIpLinkPublicIpArrayOutput {
	return o.ApplyT(func(v GetVmsVmPrimaryNicPrivateIp) []GetVmsVmPrimaryNicPrivateIpLinkPublicIp { return v.LinkPublicIps }).(GetVmsVmPrimaryNicPrivateIpLinkPublicIpArrayOutput)
}

// The name of the private DNS.
func (o GetVmsVmPrimaryNicPrivateIpOutput) PrivateDnsName() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmsVmPrimaryNicPrivateIp) string { return v.PrivateDnsName }).(pulumi.StringOutput)
}

// The primary private IP of the VM.
func (o GetVmsVmPrimaryNicPrivateIpOutput) PrivateIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmsVmPrimaryNicPrivateIp) string { return v.PrivateIp }).(pulumi.StringOutput)
}

type GetVmsVmPrimaryNicPrivateIpArrayOutput struct{ *pulumi.OutputState }

func (GetVmsVmPrimaryNicPrivateIpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVmsVmPrimaryNicPrivateIp)(nil)).Elem()
}

func (o GetVmsVmPrimaryNicPrivateIpArrayOutput) ToGetVmsVmPrimaryNicPrivateIpArrayOutput() GetVmsVmPrimaryNicPrivateIpArrayOutput {
	return o
}

func (o GetVmsVmPrimaryNicPrivateIpArrayOutput) ToGetVmsVmPrimaryNicPrivateIpArrayOutputWithContext(ctx context.Context) GetVmsVmPrimaryNicPrivateIpArrayOutput {
	return o
}

func (o GetVmsVmPrimaryNicPrivateIpArrayOutput) Index(i pulumi.IntInput) GetVmsVmPrimaryNicPrivateIpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVmsVmPrimaryNicPrivateIp {
		return vs[0].([]GetVmsVmPrimaryNicPrivateIp)[vs[1].(int)]
	}).(GetVmsVmPrimaryNicPrivateIpOutput)
}

type GetVmsVmPrimaryNicPrivateIpLinkPublicIp struct {
	// The name of the public DNS.
	PublicDnsName string `pulumi:"publicDnsName"`
	// The public IP of the VM.
	PublicIp string `pulumi:"publicIp"`
	// The account ID of the owner of the public IP.
	PublicIpAccountId string `pulumi:"publicIpAccountId"`
}

// GetVmsVmPrimaryNicPrivateIpLinkPublicIpInput is an input type that accepts GetVmsVmPrimaryNicPrivateIpLinkPublicIpArgs and GetVmsVmPrimaryNicPrivateIpLinkPublicIpOutput values.
// You can construct a concrete instance of `GetVmsVmPrimaryNicPrivateIpLinkPublicIpInput` via:
//
//	GetVmsVmPrimaryNicPrivateIpLinkPublicIpArgs{...}
type GetVmsVmPrimaryNicPrivateIpLinkPublicIpInput interface {
	pulumi.Input

	ToGetVmsVmPrimaryNicPrivateIpLinkPublicIpOutput() GetVmsVmPrimaryNicPrivateIpLinkPublicIpOutput
	ToGetVmsVmPrimaryNicPrivateIpLinkPublicIpOutputWithContext(context.Context) GetVmsVmPrimaryNicPrivateIpLinkPublicIpOutput
}

type GetVmsVmPrimaryNicPrivateIpLinkPublicIpArgs struct {
	// The name of the public DNS.
	PublicDnsName pulumi.StringInput `pulumi:"publicDnsName"`
	// The public IP of the VM.
	PublicIp pulumi.StringInput `pulumi:"publicIp"`
	// The account ID of the owner of the public IP.
	PublicIpAccountId pulumi.StringInput `pulumi:"publicIpAccountId"`
}

func (GetVmsVmPrimaryNicPrivateIpLinkPublicIpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVmsVmPrimaryNicPrivateIpLinkPublicIp)(nil)).Elem()
}

func (i GetVmsVmPrimaryNicPrivateIpLinkPublicIpArgs) ToGetVmsVmPrimaryNicPrivateIpLinkPublicIpOutput() GetVmsVmPrimaryNicPrivateIpLinkPublicIpOutput {
	return i.ToGetVmsVmPrimaryNicPrivateIpLinkPublicIpOutputWithContext(context.Background())
}

func (i GetVmsVmPrimaryNicPrivateIpLinkPublicIpArgs) ToGetVmsVmPrimaryNicPrivateIpLinkPublicIpOutputWithContext(ctx context.Context) GetVmsVmPrimaryNicPrivateIpLinkPublicIpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVmsVmPrimaryNicPrivateIpLinkPublicIpOutput)
}

// GetVmsVmPrimaryNicPrivateIpLinkPublicIpArrayInput is an input type that accepts GetVmsVmPrimaryNicPrivateIpLinkPublicIpArray and GetVmsVmPrimaryNicPrivateIpLinkPublicIpArrayOutput values.
// You can construct a concrete instance of `GetVmsVmPrimaryNicPrivateIpLinkPublicIpArrayInput` via:
//
//	GetVmsVmPrimaryNicPrivateIpLinkPublicIpArray{ GetVmsVmPrimaryNicPrivateIpLinkPublicIpArgs{...} }
type GetVmsVmPrimaryNicPrivateIpLinkPublicIpArrayInput interface {
	pulumi.Input

	ToGetVmsVmPrimaryNicPrivateIpLinkPublicIpArrayOutput() GetVmsVmPrimaryNicPrivateIpLinkPublicIpArrayOutput
	ToGetVmsVmPrimaryNicPrivateIpLinkPublicIpArrayOutputWithContext(context.Context) GetVmsVmPrimaryNicPrivateIpLinkPublicIpArrayOutput
}

type GetVmsVmPrimaryNicPrivateIpLinkPublicIpArray []GetVmsVmPrimaryNicPrivateIpLinkPublicIpInput

func (GetVmsVmPrimaryNicPrivateIpLinkPublicIpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVmsVmPrimaryNicPrivateIpLinkPublicIp)(nil)).Elem()
}

func (i GetVmsVmPrimaryNicPrivateIpLinkPublicIpArray) ToGetVmsVmPrimaryNicPrivateIpLinkPublicIpArrayOutput() GetVmsVmPrimaryNicPrivateIpLinkPublicIpArrayOutput {
	return i.ToGetVmsVmPrimaryNicPrivateIpLinkPublicIpArrayOutputWithContext(context.Background())
}

func (i GetVmsVmPrimaryNicPrivateIpLinkPublicIpArray) ToGetVmsVmPrimaryNicPrivateIpLinkPublicIpArrayOutputWithContext(ctx context.Context) GetVmsVmPrimaryNicPrivateIpLinkPublicIpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVmsVmPrimaryNicPrivateIpLinkPublicIpArrayOutput)
}

type GetVmsVmPrimaryNicPrivateIpLinkPublicIpOutput struct{ *pulumi.OutputState }

func (GetVmsVmPrimaryNicPrivateIpLinkPublicIpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVmsVmPrimaryNicPrivateIpLinkPublicIp)(nil)).Elem()
}

func (o GetVmsVmPrimaryNicPrivateIpLinkPublicIpOutput) ToGetVmsVmPrimaryNicPrivateIpLinkPublicIpOutput() GetVmsVmPrimaryNicPrivateIpLinkPublicIpOutput {
	return o
}

func (o GetVmsVmPrimaryNicPrivateIpLinkPublicIpOutput) ToGetVmsVmPrimaryNicPrivateIpLinkPublicIpOutputWithContext(ctx context.Context) GetVmsVmPrimaryNicPrivateIpLinkPublicIpOutput {
	return o
}

// The name of the public DNS.
func (o GetVmsVmPrimaryNicPrivateIpLinkPublicIpOutput) PublicDnsName() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmsVmPrimaryNicPrivateIpLinkPublicIp) string { return v.PublicDnsName }).(pulumi.StringOutput)
}

// The public IP of the VM.
func (o GetVmsVmPrimaryNicPrivateIpLinkPublicIpOutput) PublicIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmsVmPrimaryNicPrivateIpLinkPublicIp) string { return v.PublicIp }).(pulumi.StringOutput)
}

// The account ID of the owner of the public IP.
func (o GetVmsVmPrimaryNicPrivateIpLinkPublicIpOutput) PublicIpAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmsVmPrimaryNicPrivateIpLinkPublicIp) string { return v.PublicIpAccountId }).(pulumi.StringOutput)
}

type GetVmsVmPrimaryNicPrivateIpLinkPublicIpArrayOutput struct{ *pulumi.OutputState }

func (GetVmsVmPrimaryNicPrivateIpLinkPublicIpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVmsVmPrimaryNicPrivateIpLinkPublicIp)(nil)).Elem()
}

func (o GetVmsVmPrimaryNicPrivateIpLinkPublicIpArrayOutput) ToGetVmsVmPrimaryNicPrivateIpLinkPublicIpArrayOutput() GetVmsVmPrimaryNicPrivateIpLinkPublicIpArrayOutput {
	return o
}

func (o GetVmsVmPrimaryNicPrivateIpLinkPublicIpArrayOutput) ToGetVmsVmPrimaryNicPrivateIpLinkPublicIpArrayOutputWithContext(ctx context.Context) GetVmsVmPrimaryNicPrivateIpLinkPublicIpArrayOutput {
	return o
}

func (o GetVmsVmPrimaryNicPrivateIpLinkPublicIpArrayOutput) Index(i pulumi.IntInput) GetVmsVmPrimaryNicPrivateIpLinkPublicIpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVmsVmPrimaryNicPrivateIpLinkPublicIp {
		return vs[0].([]GetVmsVmPrimaryNicPrivateIpLinkPublicIp)[vs[1].(int)]
	}).(GetVmsVmPrimaryNicPrivateIpLinkPublicIpOutput)
}

type GetVmsVmPrimaryNicSecurityGroup struct {
	// The ID of the security group.
	SecurityGroupId string `pulumi:"securityGroupId"`
	// The name of the security group.
	SecurityGroupName string `pulumi:"securityGroupName"`
}

// GetVmsVmPrimaryNicSecurityGroupInput is an input type that accepts GetVmsVmPrimaryNicSecurityGroupArgs and GetVmsVmPrimaryNicSecurityGroupOutput values.
// You can construct a concrete instance of `GetVmsVmPrimaryNicSecurityGroupInput` via:
//
//	GetVmsVmPrimaryNicSecurityGroupArgs{...}
type GetVmsVmPrimaryNicSecurityGroupInput interface {
	pulumi.Input

	ToGetVmsVmPrimaryNicSecurityGroupOutput() GetVmsVmPrimaryNicSecurityGroupOutput
	ToGetVmsVmPrimaryNicSecurityGroupOutputWithContext(context.Context) GetVmsVmPrimaryNicSecurityGroupOutput
}

type GetVmsVmPrimaryNicSecurityGroupArgs struct {
	// The ID of the security group.
	SecurityGroupId pulumi.StringInput `pulumi:"securityGroupId"`
	// The name of the security group.
	SecurityGroupName pulumi.StringInput `pulumi:"securityGroupName"`
}

func (GetVmsVmPrimaryNicSecurityGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVmsVmPrimaryNicSecurityGroup)(nil)).Elem()
}

func (i GetVmsVmPrimaryNicSecurityGroupArgs) ToGetVmsVmPrimaryNicSecurityGroupOutput() GetVmsVmPrimaryNicSecurityGroupOutput {
	return i.ToGetVmsVmPrimaryNicSecurityGroupOutputWithContext(context.Background())
}

func (i GetVmsVmPrimaryNicSecurityGroupArgs) ToGetVmsVmPrimaryNicSecurityGroupOutputWithContext(ctx context.Context) GetVmsVmPrimaryNicSecurityGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVmsVmPrimaryNicSecurityGroupOutput)
}

// GetVmsVmPrimaryNicSecurityGroupArrayInput is an input type that accepts GetVmsVmPrimaryNicSecurityGroupArray and GetVmsVmPrimaryNicSecurityGroupArrayOutput values.
// You can construct a concrete instance of `GetVmsVmPrimaryNicSecurityGroupArrayInput` via:
//
//	GetVmsVmPrimaryNicSecurityGroupArray{ GetVmsVmPrimaryNicSecurityGroupArgs{...} }
type GetVmsVmPrimaryNicSecurityGroupArrayInput interface {
	pulumi.Input

	ToGetVmsVmPrimaryNicSecurityGroupArrayOutput() GetVmsVmPrimaryNicSecurityGroupArrayOutput
	ToGetVmsVmPrimaryNicSecurityGroupArrayOutputWithContext(context.Context) GetVmsVmPrimaryNicSecurityGroupArrayOutput
}

type GetVmsVmPrimaryNicSecurityGroupArray []GetVmsVmPrimaryNicSecurityGroupInput

func (GetVmsVmPrimaryNicSecurityGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVmsVmPrimaryNicSecurityGroup)(nil)).Elem()
}

func (i GetVmsVmPrimaryNicSecurityGroupArray) ToGetVmsVmPrimaryNicSecurityGroupArrayOutput() GetVmsVmPrimaryNicSecurityGroupArrayOutput {
	return i.ToGetVmsVmPrimaryNicSecurityGroupArrayOutputWithContext(context.Background())
}

func (i GetVmsVmPrimaryNicSecurityGroupArray) ToGetVmsVmPrimaryNicSecurityGroupArrayOutputWithContext(ctx context.Context) GetVmsVmPrimaryNicSecurityGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVmsVmPrimaryNicSecurityGroupArrayOutput)
}

type GetVmsVmPrimaryNicSecurityGroupOutput struct{ *pulumi.OutputState }

func (GetVmsVmPrimaryNicSecurityGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVmsVmPrimaryNicSecurityGroup)(nil)).Elem()
}

func (o GetVmsVmPrimaryNicSecurityGroupOutput) ToGetVmsVmPrimaryNicSecurityGroupOutput() GetVmsVmPrimaryNicSecurityGroupOutput {
	return o
}

func (o GetVmsVmPrimaryNicSecurityGroupOutput) ToGetVmsVmPrimaryNicSecurityGroupOutputWithContext(ctx context.Context) GetVmsVmPrimaryNicSecurityGroupOutput {
	return o
}

// The ID of the security group.
func (o GetVmsVmPrimaryNicSecurityGroupOutput) SecurityGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmsVmPrimaryNicSecurityGroup) string { return v.SecurityGroupId }).(pulumi.StringOutput)
}

// The name of the security group.
func (o GetVmsVmPrimaryNicSecurityGroupOutput) SecurityGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmsVmPrimaryNicSecurityGroup) string { return v.SecurityGroupName }).(pulumi.StringOutput)
}

type GetVmsVmPrimaryNicSecurityGroupArrayOutput struct{ *pulumi.OutputState }

func (GetVmsVmPrimaryNicSecurityGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVmsVmPrimaryNicSecurityGroup)(nil)).Elem()
}

func (o GetVmsVmPrimaryNicSecurityGroupArrayOutput) ToGetVmsVmPrimaryNicSecurityGroupArrayOutput() GetVmsVmPrimaryNicSecurityGroupArrayOutput {
	return o
}

func (o GetVmsVmPrimaryNicSecurityGroupArrayOutput) ToGetVmsVmPrimaryNicSecurityGroupArrayOutputWithContext(ctx context.Context) GetVmsVmPrimaryNicSecurityGroupArrayOutput {
	return o
}

func (o GetVmsVmPrimaryNicSecurityGroupArrayOutput) Index(i pulumi.IntInput) GetVmsVmPrimaryNicSecurityGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVmsVmPrimaryNicSecurityGroup {
		return vs[0].([]GetVmsVmPrimaryNicSecurityGroup)[vs[1].(int)]
	}).(GetVmsVmPrimaryNicSecurityGroupOutput)
}

type GetVmsVmSecurityGroup struct {
	// The ID of the security group.
	SecurityGroupId string `pulumi:"securityGroupId"`
	// The name of the security group.
	SecurityGroupName string `pulumi:"securityGroupName"`
}

// GetVmsVmSecurityGroupInput is an input type that accepts GetVmsVmSecurityGroupArgs and GetVmsVmSecurityGroupOutput values.
// You can construct a concrete instance of `GetVmsVmSecurityGroupInput` via:
//
//	GetVmsVmSecurityGroupArgs{...}
type GetVmsVmSecurityGroupInput interface {
	pulumi.Input

	ToGetVmsVmSecurityGroupOutput() GetVmsVmSecurityGroupOutput
	ToGetVmsVmSecurityGroupOutputWithContext(context.Context) GetVmsVmSecurityGroupOutput
}

type GetVmsVmSecurityGroupArgs struct {
	// The ID of the security group.
	SecurityGroupId pulumi.StringInput `pulumi:"securityGroupId"`
	// The name of the security group.
	SecurityGroupName pulumi.StringInput `pulumi:"securityGroupName"`
}

func (GetVmsVmSecurityGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVmsVmSecurityGroup)(nil)).Elem()
}

func (i GetVmsVmSecurityGroupArgs) ToGetVmsVmSecurityGroupOutput() GetVmsVmSecurityGroupOutput {
	return i.ToGetVmsVmSecurityGroupOutputWithContext(context.Background())
}

func (i GetVmsVmSecurityGroupArgs) ToGetVmsVmSecurityGroupOutputWithContext(ctx context.Context) GetVmsVmSecurityGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVmsVmSecurityGroupOutput)
}

// GetVmsVmSecurityGroupArrayInput is an input type that accepts GetVmsVmSecurityGroupArray and GetVmsVmSecurityGroupArrayOutput values.
// You can construct a concrete instance of `GetVmsVmSecurityGroupArrayInput` via:
//
//	GetVmsVmSecurityGroupArray{ GetVmsVmSecurityGroupArgs{...} }
type GetVmsVmSecurityGroupArrayInput interface {
	pulumi.Input

	ToGetVmsVmSecurityGroupArrayOutput() GetVmsVmSecurityGroupArrayOutput
	ToGetVmsVmSecurityGroupArrayOutputWithContext(context.Context) GetVmsVmSecurityGroupArrayOutput
}

type GetVmsVmSecurityGroupArray []GetVmsVmSecurityGroupInput

func (GetVmsVmSecurityGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVmsVmSecurityGroup)(nil)).Elem()
}

func (i GetVmsVmSecurityGroupArray) ToGetVmsVmSecurityGroupArrayOutput() GetVmsVmSecurityGroupArrayOutput {
	return i.ToGetVmsVmSecurityGroupArrayOutputWithContext(context.Background())
}

func (i GetVmsVmSecurityGroupArray) ToGetVmsVmSecurityGroupArrayOutputWithContext(ctx context.Context) GetVmsVmSecurityGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVmsVmSecurityGroupArrayOutput)
}

type GetVmsVmSecurityGroupOutput struct{ *pulumi.OutputState }

func (GetVmsVmSecurityGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVmsVmSecurityGroup)(nil)).Elem()
}

func (o GetVmsVmSecurityGroupOutput) ToGetVmsVmSecurityGroupOutput() GetVmsVmSecurityGroupOutput {
	return o
}

func (o GetVmsVmSecurityGroupOutput) ToGetVmsVmSecurityGroupOutputWithContext(ctx context.Context) GetVmsVmSecurityGroupOutput {
	return o
}

// The ID of the security group.
func (o GetVmsVmSecurityGroupOutput) SecurityGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmsVmSecurityGroup) string { return v.SecurityGroupId }).(pulumi.StringOutput)
}

// The name of the security group.
func (o GetVmsVmSecurityGroupOutput) SecurityGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmsVmSecurityGroup) string { return v.SecurityGroupName }).(pulumi.StringOutput)
}

type GetVmsVmSecurityGroupArrayOutput struct{ *pulumi.OutputState }

func (GetVmsVmSecurityGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVmsVmSecurityGroup)(nil)).Elem()
}

func (o GetVmsVmSecurityGroupArrayOutput) ToGetVmsVmSecurityGroupArrayOutput() GetVmsVmSecurityGroupArrayOutput {
	return o
}

func (o GetVmsVmSecurityGroupArrayOutput) ToGetVmsVmSecurityGroupArrayOutputWithContext(ctx context.Context) GetVmsVmSecurityGroupArrayOutput {
	return o
}

func (o GetVmsVmSecurityGroupArrayOutput) Index(i pulumi.IntInput) GetVmsVmSecurityGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVmsVmSecurityGroup {
		return vs[0].([]GetVmsVmSecurityGroup)[vs[1].(int)]
	}).(GetVmsVmSecurityGroupOutput)
}

type GetVmsVmTag struct {
	// The key of the tag, with a minimum of 1 character.
	Key string `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value string `pulumi:"value"`
}

// GetVmsVmTagInput is an input type that accepts GetVmsVmTagArgs and GetVmsVmTagOutput values.
// You can construct a concrete instance of `GetVmsVmTagInput` via:
//
//	GetVmsVmTagArgs{...}
type GetVmsVmTagInput interface {
	pulumi.Input

	ToGetVmsVmTagOutput() GetVmsVmTagOutput
	ToGetVmsVmTagOutputWithContext(context.Context) GetVmsVmTagOutput
}

type GetVmsVmTagArgs struct {
	// The key of the tag, with a minimum of 1 character.
	Key pulumi.StringInput `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetVmsVmTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVmsVmTag)(nil)).Elem()
}

func (i GetVmsVmTagArgs) ToGetVmsVmTagOutput() GetVmsVmTagOutput {
	return i.ToGetVmsVmTagOutputWithContext(context.Background())
}

func (i GetVmsVmTagArgs) ToGetVmsVmTagOutputWithContext(ctx context.Context) GetVmsVmTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVmsVmTagOutput)
}

// GetVmsVmTagArrayInput is an input type that accepts GetVmsVmTagArray and GetVmsVmTagArrayOutput values.
// You can construct a concrete instance of `GetVmsVmTagArrayInput` via:
//
//	GetVmsVmTagArray{ GetVmsVmTagArgs{...} }
type GetVmsVmTagArrayInput interface {
	pulumi.Input

	ToGetVmsVmTagArrayOutput() GetVmsVmTagArrayOutput
	ToGetVmsVmTagArrayOutputWithContext(context.Context) GetVmsVmTagArrayOutput
}

type GetVmsVmTagArray []GetVmsVmTagInput

func (GetVmsVmTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVmsVmTag)(nil)).Elem()
}

func (i GetVmsVmTagArray) ToGetVmsVmTagArrayOutput() GetVmsVmTagArrayOutput {
	return i.ToGetVmsVmTagArrayOutputWithContext(context.Background())
}

func (i GetVmsVmTagArray) ToGetVmsVmTagArrayOutputWithContext(ctx context.Context) GetVmsVmTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVmsVmTagArrayOutput)
}

type GetVmsVmTagOutput struct{ *pulumi.OutputState }

func (GetVmsVmTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVmsVmTag)(nil)).Elem()
}

func (o GetVmsVmTagOutput) ToGetVmsVmTagOutput() GetVmsVmTagOutput {
	return o
}

func (o GetVmsVmTagOutput) ToGetVmsVmTagOutputWithContext(ctx context.Context) GetVmsVmTagOutput {
	return o
}

// The key of the tag, with a minimum of 1 character.
func (o GetVmsVmTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmsVmTag) string { return v.Key }).(pulumi.StringOutput)
}

// The value of the tag, between 0 and 255 characters.
func (o GetVmsVmTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmsVmTag) string { return v.Value }).(pulumi.StringOutput)
}

type GetVmsVmTagArrayOutput struct{ *pulumi.OutputState }

func (GetVmsVmTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVmsVmTag)(nil)).Elem()
}

func (o GetVmsVmTagArrayOutput) ToGetVmsVmTagArrayOutput() GetVmsVmTagArrayOutput {
	return o
}

func (o GetVmsVmTagArrayOutput) ToGetVmsVmTagArrayOutputWithContext(ctx context.Context) GetVmsVmTagArrayOutput {
	return o
}

func (o GetVmsVmTagArrayOutput) Index(i pulumi.IntInput) GetVmsVmTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVmsVmTag {
		return vs[0].([]GetVmsVmTag)[vs[1].(int)]
	}).(GetVmsVmTagOutput)
}

type GetVolumeFilter struct {
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// GetVolumeFilterInput is an input type that accepts GetVolumeFilterArgs and GetVolumeFilterOutput values.
// You can construct a concrete instance of `GetVolumeFilterInput` via:
//
//	GetVolumeFilterArgs{...}
type GetVolumeFilterInput interface {
	pulumi.Input

	ToGetVolumeFilterOutput() GetVolumeFilterOutput
	ToGetVolumeFilterOutputWithContext(context.Context) GetVolumeFilterOutput
}

type GetVolumeFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetVolumeFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVolumeFilter)(nil)).Elem()
}

func (i GetVolumeFilterArgs) ToGetVolumeFilterOutput() GetVolumeFilterOutput {
	return i.ToGetVolumeFilterOutputWithContext(context.Background())
}

func (i GetVolumeFilterArgs) ToGetVolumeFilterOutputWithContext(ctx context.Context) GetVolumeFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVolumeFilterOutput)
}

// GetVolumeFilterArrayInput is an input type that accepts GetVolumeFilterArray and GetVolumeFilterArrayOutput values.
// You can construct a concrete instance of `GetVolumeFilterArrayInput` via:
//
//	GetVolumeFilterArray{ GetVolumeFilterArgs{...} }
type GetVolumeFilterArrayInput interface {
	pulumi.Input

	ToGetVolumeFilterArrayOutput() GetVolumeFilterArrayOutput
	ToGetVolumeFilterArrayOutputWithContext(context.Context) GetVolumeFilterArrayOutput
}

type GetVolumeFilterArray []GetVolumeFilterInput

func (GetVolumeFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVolumeFilter)(nil)).Elem()
}

func (i GetVolumeFilterArray) ToGetVolumeFilterArrayOutput() GetVolumeFilterArrayOutput {
	return i.ToGetVolumeFilterArrayOutputWithContext(context.Background())
}

func (i GetVolumeFilterArray) ToGetVolumeFilterArrayOutputWithContext(ctx context.Context) GetVolumeFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVolumeFilterArrayOutput)
}

type GetVolumeFilterOutput struct{ *pulumi.OutputState }

func (GetVolumeFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVolumeFilter)(nil)).Elem()
}

func (o GetVolumeFilterOutput) ToGetVolumeFilterOutput() GetVolumeFilterOutput {
	return o
}

func (o GetVolumeFilterOutput) ToGetVolumeFilterOutputWithContext(ctx context.Context) GetVolumeFilterOutput {
	return o
}

func (o GetVolumeFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetVolumeFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetVolumeFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetVolumeFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetVolumeFilterArrayOutput struct{ *pulumi.OutputState }

func (GetVolumeFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVolumeFilter)(nil)).Elem()
}

func (o GetVolumeFilterArrayOutput) ToGetVolumeFilterArrayOutput() GetVolumeFilterArrayOutput {
	return o
}

func (o GetVolumeFilterArrayOutput) ToGetVolumeFilterArrayOutputWithContext(ctx context.Context) GetVolumeFilterArrayOutput {
	return o
}

func (o GetVolumeFilterArrayOutput) Index(i pulumi.IntInput) GetVolumeFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVolumeFilter {
		return vs[0].([]GetVolumeFilter)[vs[1].(int)]
	}).(GetVolumeFilterOutput)
}

type GetVolumeLinkedVolume struct {
	// If true, the volume is deleted when terminating the VM. If false, the volume is not deleted when terminating the VM.
	DeleteOnVmDeletion bool `pulumi:"deleteOnVmDeletion"`
	// The name of the device.
	DeviceName string `pulumi:"deviceName"`
	// The state of the volume (`creating` \| `available` \| `in-use` \| `updating` \| `deleting` \| `error`).
	State string `pulumi:"state"`
	// The ID of the VM.
	VmId string `pulumi:"vmId"`
	// The ID of the volume.
	VolumeId string `pulumi:"volumeId"`
}

// GetVolumeLinkedVolumeInput is an input type that accepts GetVolumeLinkedVolumeArgs and GetVolumeLinkedVolumeOutput values.
// You can construct a concrete instance of `GetVolumeLinkedVolumeInput` via:
//
//	GetVolumeLinkedVolumeArgs{...}
type GetVolumeLinkedVolumeInput interface {
	pulumi.Input

	ToGetVolumeLinkedVolumeOutput() GetVolumeLinkedVolumeOutput
	ToGetVolumeLinkedVolumeOutputWithContext(context.Context) GetVolumeLinkedVolumeOutput
}

type GetVolumeLinkedVolumeArgs struct {
	// If true, the volume is deleted when terminating the VM. If false, the volume is not deleted when terminating the VM.
	DeleteOnVmDeletion pulumi.BoolInput `pulumi:"deleteOnVmDeletion"`
	// The name of the device.
	DeviceName pulumi.StringInput `pulumi:"deviceName"`
	// The state of the volume (`creating` \| `available` \| `in-use` \| `updating` \| `deleting` \| `error`).
	State pulumi.StringInput `pulumi:"state"`
	// The ID of the VM.
	VmId pulumi.StringInput `pulumi:"vmId"`
	// The ID of the volume.
	VolumeId pulumi.StringInput `pulumi:"volumeId"`
}

func (GetVolumeLinkedVolumeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVolumeLinkedVolume)(nil)).Elem()
}

func (i GetVolumeLinkedVolumeArgs) ToGetVolumeLinkedVolumeOutput() GetVolumeLinkedVolumeOutput {
	return i.ToGetVolumeLinkedVolumeOutputWithContext(context.Background())
}

func (i GetVolumeLinkedVolumeArgs) ToGetVolumeLinkedVolumeOutputWithContext(ctx context.Context) GetVolumeLinkedVolumeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVolumeLinkedVolumeOutput)
}

// GetVolumeLinkedVolumeArrayInput is an input type that accepts GetVolumeLinkedVolumeArray and GetVolumeLinkedVolumeArrayOutput values.
// You can construct a concrete instance of `GetVolumeLinkedVolumeArrayInput` via:
//
//	GetVolumeLinkedVolumeArray{ GetVolumeLinkedVolumeArgs{...} }
type GetVolumeLinkedVolumeArrayInput interface {
	pulumi.Input

	ToGetVolumeLinkedVolumeArrayOutput() GetVolumeLinkedVolumeArrayOutput
	ToGetVolumeLinkedVolumeArrayOutputWithContext(context.Context) GetVolumeLinkedVolumeArrayOutput
}

type GetVolumeLinkedVolumeArray []GetVolumeLinkedVolumeInput

func (GetVolumeLinkedVolumeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVolumeLinkedVolume)(nil)).Elem()
}

func (i GetVolumeLinkedVolumeArray) ToGetVolumeLinkedVolumeArrayOutput() GetVolumeLinkedVolumeArrayOutput {
	return i.ToGetVolumeLinkedVolumeArrayOutputWithContext(context.Background())
}

func (i GetVolumeLinkedVolumeArray) ToGetVolumeLinkedVolumeArrayOutputWithContext(ctx context.Context) GetVolumeLinkedVolumeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVolumeLinkedVolumeArrayOutput)
}

type GetVolumeLinkedVolumeOutput struct{ *pulumi.OutputState }

func (GetVolumeLinkedVolumeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVolumeLinkedVolume)(nil)).Elem()
}

func (o GetVolumeLinkedVolumeOutput) ToGetVolumeLinkedVolumeOutput() GetVolumeLinkedVolumeOutput {
	return o
}

func (o GetVolumeLinkedVolumeOutput) ToGetVolumeLinkedVolumeOutputWithContext(ctx context.Context) GetVolumeLinkedVolumeOutput {
	return o
}

// If true, the volume is deleted when terminating the VM. If false, the volume is not deleted when terminating the VM.
func (o GetVolumeLinkedVolumeOutput) DeleteOnVmDeletion() pulumi.BoolOutput {
	return o.ApplyT(func(v GetVolumeLinkedVolume) bool { return v.DeleteOnVmDeletion }).(pulumi.BoolOutput)
}

// The name of the device.
func (o GetVolumeLinkedVolumeOutput) DeviceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetVolumeLinkedVolume) string { return v.DeviceName }).(pulumi.StringOutput)
}

// The state of the volume (`creating` \| `available` \| `in-use` \| `updating` \| `deleting` \| `error`).
func (o GetVolumeLinkedVolumeOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetVolumeLinkedVolume) string { return v.State }).(pulumi.StringOutput)
}

// The ID of the VM.
func (o GetVolumeLinkedVolumeOutput) VmId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVolumeLinkedVolume) string { return v.VmId }).(pulumi.StringOutput)
}

// The ID of the volume.
func (o GetVolumeLinkedVolumeOutput) VolumeId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVolumeLinkedVolume) string { return v.VolumeId }).(pulumi.StringOutput)
}

type GetVolumeLinkedVolumeArrayOutput struct{ *pulumi.OutputState }

func (GetVolumeLinkedVolumeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVolumeLinkedVolume)(nil)).Elem()
}

func (o GetVolumeLinkedVolumeArrayOutput) ToGetVolumeLinkedVolumeArrayOutput() GetVolumeLinkedVolumeArrayOutput {
	return o
}

func (o GetVolumeLinkedVolumeArrayOutput) ToGetVolumeLinkedVolumeArrayOutputWithContext(ctx context.Context) GetVolumeLinkedVolumeArrayOutput {
	return o
}

func (o GetVolumeLinkedVolumeArrayOutput) Index(i pulumi.IntInput) GetVolumeLinkedVolumeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVolumeLinkedVolume {
		return vs[0].([]GetVolumeLinkedVolume)[vs[1].(int)]
	}).(GetVolumeLinkedVolumeOutput)
}

type GetVolumeTag struct {
	// The key of the tag, with a minimum of 1 character.
	Key string `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value string `pulumi:"value"`
}

// GetVolumeTagInput is an input type that accepts GetVolumeTagArgs and GetVolumeTagOutput values.
// You can construct a concrete instance of `GetVolumeTagInput` via:
//
//	GetVolumeTagArgs{...}
type GetVolumeTagInput interface {
	pulumi.Input

	ToGetVolumeTagOutput() GetVolumeTagOutput
	ToGetVolumeTagOutputWithContext(context.Context) GetVolumeTagOutput
}

type GetVolumeTagArgs struct {
	// The key of the tag, with a minimum of 1 character.
	Key pulumi.StringInput `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetVolumeTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVolumeTag)(nil)).Elem()
}

func (i GetVolumeTagArgs) ToGetVolumeTagOutput() GetVolumeTagOutput {
	return i.ToGetVolumeTagOutputWithContext(context.Background())
}

func (i GetVolumeTagArgs) ToGetVolumeTagOutputWithContext(ctx context.Context) GetVolumeTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVolumeTagOutput)
}

// GetVolumeTagArrayInput is an input type that accepts GetVolumeTagArray and GetVolumeTagArrayOutput values.
// You can construct a concrete instance of `GetVolumeTagArrayInput` via:
//
//	GetVolumeTagArray{ GetVolumeTagArgs{...} }
type GetVolumeTagArrayInput interface {
	pulumi.Input

	ToGetVolumeTagArrayOutput() GetVolumeTagArrayOutput
	ToGetVolumeTagArrayOutputWithContext(context.Context) GetVolumeTagArrayOutput
}

type GetVolumeTagArray []GetVolumeTagInput

func (GetVolumeTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVolumeTag)(nil)).Elem()
}

func (i GetVolumeTagArray) ToGetVolumeTagArrayOutput() GetVolumeTagArrayOutput {
	return i.ToGetVolumeTagArrayOutputWithContext(context.Background())
}

func (i GetVolumeTagArray) ToGetVolumeTagArrayOutputWithContext(ctx context.Context) GetVolumeTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVolumeTagArrayOutput)
}

type GetVolumeTagOutput struct{ *pulumi.OutputState }

func (GetVolumeTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVolumeTag)(nil)).Elem()
}

func (o GetVolumeTagOutput) ToGetVolumeTagOutput() GetVolumeTagOutput {
	return o
}

func (o GetVolumeTagOutput) ToGetVolumeTagOutputWithContext(ctx context.Context) GetVolumeTagOutput {
	return o
}

// The key of the tag, with a minimum of 1 character.
func (o GetVolumeTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetVolumeTag) string { return v.Key }).(pulumi.StringOutput)
}

// The value of the tag, between 0 and 255 characters.
func (o GetVolumeTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetVolumeTag) string { return v.Value }).(pulumi.StringOutput)
}

type GetVolumeTagArrayOutput struct{ *pulumi.OutputState }

func (GetVolumeTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVolumeTag)(nil)).Elem()
}

func (o GetVolumeTagArrayOutput) ToGetVolumeTagArrayOutput() GetVolumeTagArrayOutput {
	return o
}

func (o GetVolumeTagArrayOutput) ToGetVolumeTagArrayOutputWithContext(ctx context.Context) GetVolumeTagArrayOutput {
	return o
}

func (o GetVolumeTagArrayOutput) Index(i pulumi.IntInput) GetVolumeTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVolumeTag {
		return vs[0].([]GetVolumeTag)[vs[1].(int)]
	}).(GetVolumeTagOutput)
}

type GetVolumesFilter struct {
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// GetVolumesFilterInput is an input type that accepts GetVolumesFilterArgs and GetVolumesFilterOutput values.
// You can construct a concrete instance of `GetVolumesFilterInput` via:
//
//	GetVolumesFilterArgs{...}
type GetVolumesFilterInput interface {
	pulumi.Input

	ToGetVolumesFilterOutput() GetVolumesFilterOutput
	ToGetVolumesFilterOutputWithContext(context.Context) GetVolumesFilterOutput
}

type GetVolumesFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetVolumesFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVolumesFilter)(nil)).Elem()
}

func (i GetVolumesFilterArgs) ToGetVolumesFilterOutput() GetVolumesFilterOutput {
	return i.ToGetVolumesFilterOutputWithContext(context.Background())
}

func (i GetVolumesFilterArgs) ToGetVolumesFilterOutputWithContext(ctx context.Context) GetVolumesFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVolumesFilterOutput)
}

// GetVolumesFilterArrayInput is an input type that accepts GetVolumesFilterArray and GetVolumesFilterArrayOutput values.
// You can construct a concrete instance of `GetVolumesFilterArrayInput` via:
//
//	GetVolumesFilterArray{ GetVolumesFilterArgs{...} }
type GetVolumesFilterArrayInput interface {
	pulumi.Input

	ToGetVolumesFilterArrayOutput() GetVolumesFilterArrayOutput
	ToGetVolumesFilterArrayOutputWithContext(context.Context) GetVolumesFilterArrayOutput
}

type GetVolumesFilterArray []GetVolumesFilterInput

func (GetVolumesFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVolumesFilter)(nil)).Elem()
}

func (i GetVolumesFilterArray) ToGetVolumesFilterArrayOutput() GetVolumesFilterArrayOutput {
	return i.ToGetVolumesFilterArrayOutputWithContext(context.Background())
}

func (i GetVolumesFilterArray) ToGetVolumesFilterArrayOutputWithContext(ctx context.Context) GetVolumesFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVolumesFilterArrayOutput)
}

type GetVolumesFilterOutput struct{ *pulumi.OutputState }

func (GetVolumesFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVolumesFilter)(nil)).Elem()
}

func (o GetVolumesFilterOutput) ToGetVolumesFilterOutput() GetVolumesFilterOutput {
	return o
}

func (o GetVolumesFilterOutput) ToGetVolumesFilterOutputWithContext(ctx context.Context) GetVolumesFilterOutput {
	return o
}

func (o GetVolumesFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetVolumesFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetVolumesFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetVolumesFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetVolumesFilterArrayOutput struct{ *pulumi.OutputState }

func (GetVolumesFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVolumesFilter)(nil)).Elem()
}

func (o GetVolumesFilterArrayOutput) ToGetVolumesFilterArrayOutput() GetVolumesFilterArrayOutput {
	return o
}

func (o GetVolumesFilterArrayOutput) ToGetVolumesFilterArrayOutputWithContext(ctx context.Context) GetVolumesFilterArrayOutput {
	return o
}

func (o GetVolumesFilterArrayOutput) Index(i pulumi.IntInput) GetVolumesFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVolumesFilter {
		return vs[0].([]GetVolumesFilter)[vs[1].(int)]
	}).(GetVolumesFilterOutput)
}

type GetVolumesVolume struct {
	// The date and time (UTC) at which the volume was created.
	CreationDate string `pulumi:"creationDate"`
	// The number of I/O operations per second (IOPS):<br />- For `io1` volumes, the number of provisioned IOPS.<br />- For `gp2` volumes, the baseline performance of the volume.
	Iops int `pulumi:"iops"`
	// Information about your volume attachment.
	LinkedVolumes []GetVolumesVolumeLinkedVolume `pulumi:"linkedVolumes"`
	// The size of the volume, in gibibytes (GiB).
	Size int `pulumi:"size"`
	// The snapshot from which the volume was created.
	SnapshotId string `pulumi:"snapshotId"`
	// The state of the volume (`creating` \| `available` \| `in-use` \| `updating` \| `deleting` \| `error`).
	State string `pulumi:"state"`
	// The Subregion in which the volume was created.
	SubregionName string `pulumi:"subregionName"`
	// One or more tags associated with the volume.
	Tags []GetVolumesVolumeTag `pulumi:"tags"`
	// The ID of the volume.
	VolumeId string `pulumi:"volumeId"`
	// The type of the volume (`standard` \| `gp2` \| `io1`).
	VolumeType string `pulumi:"volumeType"`
}

// GetVolumesVolumeInput is an input type that accepts GetVolumesVolumeArgs and GetVolumesVolumeOutput values.
// You can construct a concrete instance of `GetVolumesVolumeInput` via:
//
//	GetVolumesVolumeArgs{...}
type GetVolumesVolumeInput interface {
	pulumi.Input

	ToGetVolumesVolumeOutput() GetVolumesVolumeOutput
	ToGetVolumesVolumeOutputWithContext(context.Context) GetVolumesVolumeOutput
}

type GetVolumesVolumeArgs struct {
	// The date and time (UTC) at which the volume was created.
	CreationDate pulumi.StringInput `pulumi:"creationDate"`
	// The number of I/O operations per second (IOPS):<br />- For `io1` volumes, the number of provisioned IOPS.<br />- For `gp2` volumes, the baseline performance of the volume.
	Iops pulumi.IntInput `pulumi:"iops"`
	// Information about your volume attachment.
	LinkedVolumes GetVolumesVolumeLinkedVolumeArrayInput `pulumi:"linkedVolumes"`
	// The size of the volume, in gibibytes (GiB).
	Size pulumi.IntInput `pulumi:"size"`
	// The snapshot from which the volume was created.
	SnapshotId pulumi.StringInput `pulumi:"snapshotId"`
	// The state of the volume (`creating` \| `available` \| `in-use` \| `updating` \| `deleting` \| `error`).
	State pulumi.StringInput `pulumi:"state"`
	// The Subregion in which the volume was created.
	SubregionName pulumi.StringInput `pulumi:"subregionName"`
	// One or more tags associated with the volume.
	Tags GetVolumesVolumeTagArrayInput `pulumi:"tags"`
	// The ID of the volume.
	VolumeId pulumi.StringInput `pulumi:"volumeId"`
	// The type of the volume (`standard` \| `gp2` \| `io1`).
	VolumeType pulumi.StringInput `pulumi:"volumeType"`
}

func (GetVolumesVolumeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVolumesVolume)(nil)).Elem()
}

func (i GetVolumesVolumeArgs) ToGetVolumesVolumeOutput() GetVolumesVolumeOutput {
	return i.ToGetVolumesVolumeOutputWithContext(context.Background())
}

func (i GetVolumesVolumeArgs) ToGetVolumesVolumeOutputWithContext(ctx context.Context) GetVolumesVolumeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVolumesVolumeOutput)
}

// GetVolumesVolumeArrayInput is an input type that accepts GetVolumesVolumeArray and GetVolumesVolumeArrayOutput values.
// You can construct a concrete instance of `GetVolumesVolumeArrayInput` via:
//
//	GetVolumesVolumeArray{ GetVolumesVolumeArgs{...} }
type GetVolumesVolumeArrayInput interface {
	pulumi.Input

	ToGetVolumesVolumeArrayOutput() GetVolumesVolumeArrayOutput
	ToGetVolumesVolumeArrayOutputWithContext(context.Context) GetVolumesVolumeArrayOutput
}

type GetVolumesVolumeArray []GetVolumesVolumeInput

func (GetVolumesVolumeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVolumesVolume)(nil)).Elem()
}

func (i GetVolumesVolumeArray) ToGetVolumesVolumeArrayOutput() GetVolumesVolumeArrayOutput {
	return i.ToGetVolumesVolumeArrayOutputWithContext(context.Background())
}

func (i GetVolumesVolumeArray) ToGetVolumesVolumeArrayOutputWithContext(ctx context.Context) GetVolumesVolumeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVolumesVolumeArrayOutput)
}

type GetVolumesVolumeOutput struct{ *pulumi.OutputState }

func (GetVolumesVolumeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVolumesVolume)(nil)).Elem()
}

func (o GetVolumesVolumeOutput) ToGetVolumesVolumeOutput() GetVolumesVolumeOutput {
	return o
}

func (o GetVolumesVolumeOutput) ToGetVolumesVolumeOutputWithContext(ctx context.Context) GetVolumesVolumeOutput {
	return o
}

// The date and time (UTC) at which the volume was created.
func (o GetVolumesVolumeOutput) CreationDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetVolumesVolume) string { return v.CreationDate }).(pulumi.StringOutput)
}

// The number of I/O operations per second (IOPS):<br />- For `io1` volumes, the number of provisioned IOPS.<br />- For `gp2` volumes, the baseline performance of the volume.
func (o GetVolumesVolumeOutput) Iops() pulumi.IntOutput {
	return o.ApplyT(func(v GetVolumesVolume) int { return v.Iops }).(pulumi.IntOutput)
}

// Information about your volume attachment.
func (o GetVolumesVolumeOutput) LinkedVolumes() GetVolumesVolumeLinkedVolumeArrayOutput {
	return o.ApplyT(func(v GetVolumesVolume) []GetVolumesVolumeLinkedVolume { return v.LinkedVolumes }).(GetVolumesVolumeLinkedVolumeArrayOutput)
}

// The size of the volume, in gibibytes (GiB).
func (o GetVolumesVolumeOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v GetVolumesVolume) int { return v.Size }).(pulumi.IntOutput)
}

// The snapshot from which the volume was created.
func (o GetVolumesVolumeOutput) SnapshotId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVolumesVolume) string { return v.SnapshotId }).(pulumi.StringOutput)
}

// The state of the volume (`creating` \| `available` \| `in-use` \| `updating` \| `deleting` \| `error`).
func (o GetVolumesVolumeOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetVolumesVolume) string { return v.State }).(pulumi.StringOutput)
}

// The Subregion in which the volume was created.
func (o GetVolumesVolumeOutput) SubregionName() pulumi.StringOutput {
	return o.ApplyT(func(v GetVolumesVolume) string { return v.SubregionName }).(pulumi.StringOutput)
}

// One or more tags associated with the volume.
func (o GetVolumesVolumeOutput) Tags() GetVolumesVolumeTagArrayOutput {
	return o.ApplyT(func(v GetVolumesVolume) []GetVolumesVolumeTag { return v.Tags }).(GetVolumesVolumeTagArrayOutput)
}

// The ID of the volume.
func (o GetVolumesVolumeOutput) VolumeId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVolumesVolume) string { return v.VolumeId }).(pulumi.StringOutput)
}

// The type of the volume (`standard` \| `gp2` \| `io1`).
func (o GetVolumesVolumeOutput) VolumeType() pulumi.StringOutput {
	return o.ApplyT(func(v GetVolumesVolume) string { return v.VolumeType }).(pulumi.StringOutput)
}

type GetVolumesVolumeArrayOutput struct{ *pulumi.OutputState }

func (GetVolumesVolumeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVolumesVolume)(nil)).Elem()
}

func (o GetVolumesVolumeArrayOutput) ToGetVolumesVolumeArrayOutput() GetVolumesVolumeArrayOutput {
	return o
}

func (o GetVolumesVolumeArrayOutput) ToGetVolumesVolumeArrayOutputWithContext(ctx context.Context) GetVolumesVolumeArrayOutput {
	return o
}

func (o GetVolumesVolumeArrayOutput) Index(i pulumi.IntInput) GetVolumesVolumeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVolumesVolume {
		return vs[0].([]GetVolumesVolume)[vs[1].(int)]
	}).(GetVolumesVolumeOutput)
}

type GetVolumesVolumeLinkedVolume struct {
	// If true, the volume is deleted when terminating the VM. If false, the volume is not deleted when terminating the VM.
	DeleteOnVmDeletion bool `pulumi:"deleteOnVmDeletion"`
	// The name of the device.
	DeviceName string `pulumi:"deviceName"`
	// The state of the volume (`creating` \| `available` \| `in-use` \| `updating` \| `deleting` \| `error`).
	State string `pulumi:"state"`
	// The ID of the VM.
	VmId string `pulumi:"vmId"`
	// The ID of the volume.
	VolumeId string `pulumi:"volumeId"`
}

// GetVolumesVolumeLinkedVolumeInput is an input type that accepts GetVolumesVolumeLinkedVolumeArgs and GetVolumesVolumeLinkedVolumeOutput values.
// You can construct a concrete instance of `GetVolumesVolumeLinkedVolumeInput` via:
//
//	GetVolumesVolumeLinkedVolumeArgs{...}
type GetVolumesVolumeLinkedVolumeInput interface {
	pulumi.Input

	ToGetVolumesVolumeLinkedVolumeOutput() GetVolumesVolumeLinkedVolumeOutput
	ToGetVolumesVolumeLinkedVolumeOutputWithContext(context.Context) GetVolumesVolumeLinkedVolumeOutput
}

type GetVolumesVolumeLinkedVolumeArgs struct {
	// If true, the volume is deleted when terminating the VM. If false, the volume is not deleted when terminating the VM.
	DeleteOnVmDeletion pulumi.BoolInput `pulumi:"deleteOnVmDeletion"`
	// The name of the device.
	DeviceName pulumi.StringInput `pulumi:"deviceName"`
	// The state of the volume (`creating` \| `available` \| `in-use` \| `updating` \| `deleting` \| `error`).
	State pulumi.StringInput `pulumi:"state"`
	// The ID of the VM.
	VmId pulumi.StringInput `pulumi:"vmId"`
	// The ID of the volume.
	VolumeId pulumi.StringInput `pulumi:"volumeId"`
}

func (GetVolumesVolumeLinkedVolumeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVolumesVolumeLinkedVolume)(nil)).Elem()
}

func (i GetVolumesVolumeLinkedVolumeArgs) ToGetVolumesVolumeLinkedVolumeOutput() GetVolumesVolumeLinkedVolumeOutput {
	return i.ToGetVolumesVolumeLinkedVolumeOutputWithContext(context.Background())
}

func (i GetVolumesVolumeLinkedVolumeArgs) ToGetVolumesVolumeLinkedVolumeOutputWithContext(ctx context.Context) GetVolumesVolumeLinkedVolumeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVolumesVolumeLinkedVolumeOutput)
}

// GetVolumesVolumeLinkedVolumeArrayInput is an input type that accepts GetVolumesVolumeLinkedVolumeArray and GetVolumesVolumeLinkedVolumeArrayOutput values.
// You can construct a concrete instance of `GetVolumesVolumeLinkedVolumeArrayInput` via:
//
//	GetVolumesVolumeLinkedVolumeArray{ GetVolumesVolumeLinkedVolumeArgs{...} }
type GetVolumesVolumeLinkedVolumeArrayInput interface {
	pulumi.Input

	ToGetVolumesVolumeLinkedVolumeArrayOutput() GetVolumesVolumeLinkedVolumeArrayOutput
	ToGetVolumesVolumeLinkedVolumeArrayOutputWithContext(context.Context) GetVolumesVolumeLinkedVolumeArrayOutput
}

type GetVolumesVolumeLinkedVolumeArray []GetVolumesVolumeLinkedVolumeInput

func (GetVolumesVolumeLinkedVolumeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVolumesVolumeLinkedVolume)(nil)).Elem()
}

func (i GetVolumesVolumeLinkedVolumeArray) ToGetVolumesVolumeLinkedVolumeArrayOutput() GetVolumesVolumeLinkedVolumeArrayOutput {
	return i.ToGetVolumesVolumeLinkedVolumeArrayOutputWithContext(context.Background())
}

func (i GetVolumesVolumeLinkedVolumeArray) ToGetVolumesVolumeLinkedVolumeArrayOutputWithContext(ctx context.Context) GetVolumesVolumeLinkedVolumeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVolumesVolumeLinkedVolumeArrayOutput)
}

type GetVolumesVolumeLinkedVolumeOutput struct{ *pulumi.OutputState }

func (GetVolumesVolumeLinkedVolumeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVolumesVolumeLinkedVolume)(nil)).Elem()
}

func (o GetVolumesVolumeLinkedVolumeOutput) ToGetVolumesVolumeLinkedVolumeOutput() GetVolumesVolumeLinkedVolumeOutput {
	return o
}

func (o GetVolumesVolumeLinkedVolumeOutput) ToGetVolumesVolumeLinkedVolumeOutputWithContext(ctx context.Context) GetVolumesVolumeLinkedVolumeOutput {
	return o
}

// If true, the volume is deleted when terminating the VM. If false, the volume is not deleted when terminating the VM.
func (o GetVolumesVolumeLinkedVolumeOutput) DeleteOnVmDeletion() pulumi.BoolOutput {
	return o.ApplyT(func(v GetVolumesVolumeLinkedVolume) bool { return v.DeleteOnVmDeletion }).(pulumi.BoolOutput)
}

// The name of the device.
func (o GetVolumesVolumeLinkedVolumeOutput) DeviceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetVolumesVolumeLinkedVolume) string { return v.DeviceName }).(pulumi.StringOutput)
}

// The state of the volume (`creating` \| `available` \| `in-use` \| `updating` \| `deleting` \| `error`).
func (o GetVolumesVolumeLinkedVolumeOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetVolumesVolumeLinkedVolume) string { return v.State }).(pulumi.StringOutput)
}

// The ID of the VM.
func (o GetVolumesVolumeLinkedVolumeOutput) VmId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVolumesVolumeLinkedVolume) string { return v.VmId }).(pulumi.StringOutput)
}

// The ID of the volume.
func (o GetVolumesVolumeLinkedVolumeOutput) VolumeId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVolumesVolumeLinkedVolume) string { return v.VolumeId }).(pulumi.StringOutput)
}

type GetVolumesVolumeLinkedVolumeArrayOutput struct{ *pulumi.OutputState }

func (GetVolumesVolumeLinkedVolumeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVolumesVolumeLinkedVolume)(nil)).Elem()
}

func (o GetVolumesVolumeLinkedVolumeArrayOutput) ToGetVolumesVolumeLinkedVolumeArrayOutput() GetVolumesVolumeLinkedVolumeArrayOutput {
	return o
}

func (o GetVolumesVolumeLinkedVolumeArrayOutput) ToGetVolumesVolumeLinkedVolumeArrayOutputWithContext(ctx context.Context) GetVolumesVolumeLinkedVolumeArrayOutput {
	return o
}

func (o GetVolumesVolumeLinkedVolumeArrayOutput) Index(i pulumi.IntInput) GetVolumesVolumeLinkedVolumeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVolumesVolumeLinkedVolume {
		return vs[0].([]GetVolumesVolumeLinkedVolume)[vs[1].(int)]
	}).(GetVolumesVolumeLinkedVolumeOutput)
}

type GetVolumesVolumeTag struct {
	// The key of the tag, with a minimum of 1 character.
	Key string `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value string `pulumi:"value"`
}

// GetVolumesVolumeTagInput is an input type that accepts GetVolumesVolumeTagArgs and GetVolumesVolumeTagOutput values.
// You can construct a concrete instance of `GetVolumesVolumeTagInput` via:
//
//	GetVolumesVolumeTagArgs{...}
type GetVolumesVolumeTagInput interface {
	pulumi.Input

	ToGetVolumesVolumeTagOutput() GetVolumesVolumeTagOutput
	ToGetVolumesVolumeTagOutputWithContext(context.Context) GetVolumesVolumeTagOutput
}

type GetVolumesVolumeTagArgs struct {
	// The key of the tag, with a minimum of 1 character.
	Key pulumi.StringInput `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetVolumesVolumeTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVolumesVolumeTag)(nil)).Elem()
}

func (i GetVolumesVolumeTagArgs) ToGetVolumesVolumeTagOutput() GetVolumesVolumeTagOutput {
	return i.ToGetVolumesVolumeTagOutputWithContext(context.Background())
}

func (i GetVolumesVolumeTagArgs) ToGetVolumesVolumeTagOutputWithContext(ctx context.Context) GetVolumesVolumeTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVolumesVolumeTagOutput)
}

// GetVolumesVolumeTagArrayInput is an input type that accepts GetVolumesVolumeTagArray and GetVolumesVolumeTagArrayOutput values.
// You can construct a concrete instance of `GetVolumesVolumeTagArrayInput` via:
//
//	GetVolumesVolumeTagArray{ GetVolumesVolumeTagArgs{...} }
type GetVolumesVolumeTagArrayInput interface {
	pulumi.Input

	ToGetVolumesVolumeTagArrayOutput() GetVolumesVolumeTagArrayOutput
	ToGetVolumesVolumeTagArrayOutputWithContext(context.Context) GetVolumesVolumeTagArrayOutput
}

type GetVolumesVolumeTagArray []GetVolumesVolumeTagInput

func (GetVolumesVolumeTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVolumesVolumeTag)(nil)).Elem()
}

func (i GetVolumesVolumeTagArray) ToGetVolumesVolumeTagArrayOutput() GetVolumesVolumeTagArrayOutput {
	return i.ToGetVolumesVolumeTagArrayOutputWithContext(context.Background())
}

func (i GetVolumesVolumeTagArray) ToGetVolumesVolumeTagArrayOutputWithContext(ctx context.Context) GetVolumesVolumeTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVolumesVolumeTagArrayOutput)
}

type GetVolumesVolumeTagOutput struct{ *pulumi.OutputState }

func (GetVolumesVolumeTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVolumesVolumeTag)(nil)).Elem()
}

func (o GetVolumesVolumeTagOutput) ToGetVolumesVolumeTagOutput() GetVolumesVolumeTagOutput {
	return o
}

func (o GetVolumesVolumeTagOutput) ToGetVolumesVolumeTagOutputWithContext(ctx context.Context) GetVolumesVolumeTagOutput {
	return o
}

// The key of the tag, with a minimum of 1 character.
func (o GetVolumesVolumeTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetVolumesVolumeTag) string { return v.Key }).(pulumi.StringOutput)
}

// The value of the tag, between 0 and 255 characters.
func (o GetVolumesVolumeTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetVolumesVolumeTag) string { return v.Value }).(pulumi.StringOutput)
}

type GetVolumesVolumeTagArrayOutput struct{ *pulumi.OutputState }

func (GetVolumesVolumeTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVolumesVolumeTag)(nil)).Elem()
}

func (o GetVolumesVolumeTagArrayOutput) ToGetVolumesVolumeTagArrayOutput() GetVolumesVolumeTagArrayOutput {
	return o
}

func (o GetVolumesVolumeTagArrayOutput) ToGetVolumesVolumeTagArrayOutputWithContext(ctx context.Context) GetVolumesVolumeTagArrayOutput {
	return o
}

func (o GetVolumesVolumeTagArrayOutput) Index(i pulumi.IntInput) GetVolumesVolumeTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVolumesVolumeTag {
		return vs[0].([]GetVolumesVolumeTag)[vs[1].(int)]
	}).(GetVolumesVolumeTagOutput)
}

type GetVpnConnectionFilter struct {
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// GetVpnConnectionFilterInput is an input type that accepts GetVpnConnectionFilterArgs and GetVpnConnectionFilterOutput values.
// You can construct a concrete instance of `GetVpnConnectionFilterInput` via:
//
//	GetVpnConnectionFilterArgs{...}
type GetVpnConnectionFilterInput interface {
	pulumi.Input

	ToGetVpnConnectionFilterOutput() GetVpnConnectionFilterOutput
	ToGetVpnConnectionFilterOutputWithContext(context.Context) GetVpnConnectionFilterOutput
}

type GetVpnConnectionFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetVpnConnectionFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpnConnectionFilter)(nil)).Elem()
}

func (i GetVpnConnectionFilterArgs) ToGetVpnConnectionFilterOutput() GetVpnConnectionFilterOutput {
	return i.ToGetVpnConnectionFilterOutputWithContext(context.Background())
}

func (i GetVpnConnectionFilterArgs) ToGetVpnConnectionFilterOutputWithContext(ctx context.Context) GetVpnConnectionFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpnConnectionFilterOutput)
}

// GetVpnConnectionFilterArrayInput is an input type that accepts GetVpnConnectionFilterArray and GetVpnConnectionFilterArrayOutput values.
// You can construct a concrete instance of `GetVpnConnectionFilterArrayInput` via:
//
//	GetVpnConnectionFilterArray{ GetVpnConnectionFilterArgs{...} }
type GetVpnConnectionFilterArrayInput interface {
	pulumi.Input

	ToGetVpnConnectionFilterArrayOutput() GetVpnConnectionFilterArrayOutput
	ToGetVpnConnectionFilterArrayOutputWithContext(context.Context) GetVpnConnectionFilterArrayOutput
}

type GetVpnConnectionFilterArray []GetVpnConnectionFilterInput

func (GetVpnConnectionFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpnConnectionFilter)(nil)).Elem()
}

func (i GetVpnConnectionFilterArray) ToGetVpnConnectionFilterArrayOutput() GetVpnConnectionFilterArrayOutput {
	return i.ToGetVpnConnectionFilterArrayOutputWithContext(context.Background())
}

func (i GetVpnConnectionFilterArray) ToGetVpnConnectionFilterArrayOutputWithContext(ctx context.Context) GetVpnConnectionFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpnConnectionFilterArrayOutput)
}

type GetVpnConnectionFilterOutput struct{ *pulumi.OutputState }

func (GetVpnConnectionFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpnConnectionFilter)(nil)).Elem()
}

func (o GetVpnConnectionFilterOutput) ToGetVpnConnectionFilterOutput() GetVpnConnectionFilterOutput {
	return o
}

func (o GetVpnConnectionFilterOutput) ToGetVpnConnectionFilterOutputWithContext(ctx context.Context) GetVpnConnectionFilterOutput {
	return o
}

func (o GetVpnConnectionFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpnConnectionFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetVpnConnectionFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetVpnConnectionFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetVpnConnectionFilterArrayOutput struct{ *pulumi.OutputState }

func (GetVpnConnectionFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpnConnectionFilter)(nil)).Elem()
}

func (o GetVpnConnectionFilterArrayOutput) ToGetVpnConnectionFilterArrayOutput() GetVpnConnectionFilterArrayOutput {
	return o
}

func (o GetVpnConnectionFilterArrayOutput) ToGetVpnConnectionFilterArrayOutputWithContext(ctx context.Context) GetVpnConnectionFilterArrayOutput {
	return o
}

func (o GetVpnConnectionFilterArrayOutput) Index(i pulumi.IntInput) GetVpnConnectionFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVpnConnectionFilter {
		return vs[0].([]GetVpnConnectionFilter)[vs[1].(int)]
	}).(GetVpnConnectionFilterOutput)
}

type GetVpnConnectionRouteType struct {
	// The IP range used for the destination match, in CIDR notation (for example, `10.0.0.0/24`).
	DestinationIpRange string `pulumi:"destinationIpRange"`
	// The type of route (always `static`).
	RouteType string `pulumi:"routeType"`
	// The state of the IPSEC tunnel (`UP` \| `DOWN`).
	State string `pulumi:"state"`
}

// GetVpnConnectionRouteTypeInput is an input type that accepts GetVpnConnectionRouteTypeArgs and GetVpnConnectionRouteTypeOutput values.
// You can construct a concrete instance of `GetVpnConnectionRouteTypeInput` via:
//
//	GetVpnConnectionRouteTypeArgs{...}
type GetVpnConnectionRouteTypeInput interface {
	pulumi.Input

	ToGetVpnConnectionRouteTypeOutput() GetVpnConnectionRouteTypeOutput
	ToGetVpnConnectionRouteTypeOutputWithContext(context.Context) GetVpnConnectionRouteTypeOutput
}

type GetVpnConnectionRouteTypeArgs struct {
	// The IP range used for the destination match, in CIDR notation (for example, `10.0.0.0/24`).
	DestinationIpRange pulumi.StringInput `pulumi:"destinationIpRange"`
	// The type of route (always `static`).
	RouteType pulumi.StringInput `pulumi:"routeType"`
	// The state of the IPSEC tunnel (`UP` \| `DOWN`).
	State pulumi.StringInput `pulumi:"state"`
}

func (GetVpnConnectionRouteTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpnConnectionRouteType)(nil)).Elem()
}

func (i GetVpnConnectionRouteTypeArgs) ToGetVpnConnectionRouteTypeOutput() GetVpnConnectionRouteTypeOutput {
	return i.ToGetVpnConnectionRouteTypeOutputWithContext(context.Background())
}

func (i GetVpnConnectionRouteTypeArgs) ToGetVpnConnectionRouteTypeOutputWithContext(ctx context.Context) GetVpnConnectionRouteTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpnConnectionRouteTypeOutput)
}

// GetVpnConnectionRouteTypeArrayInput is an input type that accepts GetVpnConnectionRouteTypeArray and GetVpnConnectionRouteTypeArrayOutput values.
// You can construct a concrete instance of `GetVpnConnectionRouteTypeArrayInput` via:
//
//	GetVpnConnectionRouteTypeArray{ GetVpnConnectionRouteTypeArgs{...} }
type GetVpnConnectionRouteTypeArrayInput interface {
	pulumi.Input

	ToGetVpnConnectionRouteTypeArrayOutput() GetVpnConnectionRouteTypeArrayOutput
	ToGetVpnConnectionRouteTypeArrayOutputWithContext(context.Context) GetVpnConnectionRouteTypeArrayOutput
}

type GetVpnConnectionRouteTypeArray []GetVpnConnectionRouteTypeInput

func (GetVpnConnectionRouteTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpnConnectionRouteType)(nil)).Elem()
}

func (i GetVpnConnectionRouteTypeArray) ToGetVpnConnectionRouteTypeArrayOutput() GetVpnConnectionRouteTypeArrayOutput {
	return i.ToGetVpnConnectionRouteTypeArrayOutputWithContext(context.Background())
}

func (i GetVpnConnectionRouteTypeArray) ToGetVpnConnectionRouteTypeArrayOutputWithContext(ctx context.Context) GetVpnConnectionRouteTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpnConnectionRouteTypeArrayOutput)
}

type GetVpnConnectionRouteTypeOutput struct{ *pulumi.OutputState }

func (GetVpnConnectionRouteTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpnConnectionRouteType)(nil)).Elem()
}

func (o GetVpnConnectionRouteTypeOutput) ToGetVpnConnectionRouteTypeOutput() GetVpnConnectionRouteTypeOutput {
	return o
}

func (o GetVpnConnectionRouteTypeOutput) ToGetVpnConnectionRouteTypeOutputWithContext(ctx context.Context) GetVpnConnectionRouteTypeOutput {
	return o
}

// The IP range used for the destination match, in CIDR notation (for example, `10.0.0.0/24`).
func (o GetVpnConnectionRouteTypeOutput) DestinationIpRange() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpnConnectionRouteType) string { return v.DestinationIpRange }).(pulumi.StringOutput)
}

// The type of route (always `static`).
func (o GetVpnConnectionRouteTypeOutput) RouteType() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpnConnectionRouteType) string { return v.RouteType }).(pulumi.StringOutput)
}

// The state of the IPSEC tunnel (`UP` \| `DOWN`).
func (o GetVpnConnectionRouteTypeOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpnConnectionRouteType) string { return v.State }).(pulumi.StringOutput)
}

type GetVpnConnectionRouteTypeArrayOutput struct{ *pulumi.OutputState }

func (GetVpnConnectionRouteTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpnConnectionRouteType)(nil)).Elem()
}

func (o GetVpnConnectionRouteTypeArrayOutput) ToGetVpnConnectionRouteTypeArrayOutput() GetVpnConnectionRouteTypeArrayOutput {
	return o
}

func (o GetVpnConnectionRouteTypeArrayOutput) ToGetVpnConnectionRouteTypeArrayOutputWithContext(ctx context.Context) GetVpnConnectionRouteTypeArrayOutput {
	return o
}

func (o GetVpnConnectionRouteTypeArrayOutput) Index(i pulumi.IntInput) GetVpnConnectionRouteTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVpnConnectionRouteType {
		return vs[0].([]GetVpnConnectionRouteType)[vs[1].(int)]
	}).(GetVpnConnectionRouteTypeOutput)
}

type GetVpnConnectionTag struct {
	// The key of the tag, with a minimum of 1 character.
	Key string `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value string `pulumi:"value"`
}

// GetVpnConnectionTagInput is an input type that accepts GetVpnConnectionTagArgs and GetVpnConnectionTagOutput values.
// You can construct a concrete instance of `GetVpnConnectionTagInput` via:
//
//	GetVpnConnectionTagArgs{...}
type GetVpnConnectionTagInput interface {
	pulumi.Input

	ToGetVpnConnectionTagOutput() GetVpnConnectionTagOutput
	ToGetVpnConnectionTagOutputWithContext(context.Context) GetVpnConnectionTagOutput
}

type GetVpnConnectionTagArgs struct {
	// The key of the tag, with a minimum of 1 character.
	Key pulumi.StringInput `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetVpnConnectionTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpnConnectionTag)(nil)).Elem()
}

func (i GetVpnConnectionTagArgs) ToGetVpnConnectionTagOutput() GetVpnConnectionTagOutput {
	return i.ToGetVpnConnectionTagOutputWithContext(context.Background())
}

func (i GetVpnConnectionTagArgs) ToGetVpnConnectionTagOutputWithContext(ctx context.Context) GetVpnConnectionTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpnConnectionTagOutput)
}

// GetVpnConnectionTagArrayInput is an input type that accepts GetVpnConnectionTagArray and GetVpnConnectionTagArrayOutput values.
// You can construct a concrete instance of `GetVpnConnectionTagArrayInput` via:
//
//	GetVpnConnectionTagArray{ GetVpnConnectionTagArgs{...} }
type GetVpnConnectionTagArrayInput interface {
	pulumi.Input

	ToGetVpnConnectionTagArrayOutput() GetVpnConnectionTagArrayOutput
	ToGetVpnConnectionTagArrayOutputWithContext(context.Context) GetVpnConnectionTagArrayOutput
}

type GetVpnConnectionTagArray []GetVpnConnectionTagInput

func (GetVpnConnectionTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpnConnectionTag)(nil)).Elem()
}

func (i GetVpnConnectionTagArray) ToGetVpnConnectionTagArrayOutput() GetVpnConnectionTagArrayOutput {
	return i.ToGetVpnConnectionTagArrayOutputWithContext(context.Background())
}

func (i GetVpnConnectionTagArray) ToGetVpnConnectionTagArrayOutputWithContext(ctx context.Context) GetVpnConnectionTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpnConnectionTagArrayOutput)
}

type GetVpnConnectionTagOutput struct{ *pulumi.OutputState }

func (GetVpnConnectionTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpnConnectionTag)(nil)).Elem()
}

func (o GetVpnConnectionTagOutput) ToGetVpnConnectionTagOutput() GetVpnConnectionTagOutput {
	return o
}

func (o GetVpnConnectionTagOutput) ToGetVpnConnectionTagOutputWithContext(ctx context.Context) GetVpnConnectionTagOutput {
	return o
}

// The key of the tag, with a minimum of 1 character.
func (o GetVpnConnectionTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpnConnectionTag) string { return v.Key }).(pulumi.StringOutput)
}

// The value of the tag, between 0 and 255 characters.
func (o GetVpnConnectionTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpnConnectionTag) string { return v.Value }).(pulumi.StringOutput)
}

type GetVpnConnectionTagArrayOutput struct{ *pulumi.OutputState }

func (GetVpnConnectionTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpnConnectionTag)(nil)).Elem()
}

func (o GetVpnConnectionTagArrayOutput) ToGetVpnConnectionTagArrayOutput() GetVpnConnectionTagArrayOutput {
	return o
}

func (o GetVpnConnectionTagArrayOutput) ToGetVpnConnectionTagArrayOutputWithContext(ctx context.Context) GetVpnConnectionTagArrayOutput {
	return o
}

func (o GetVpnConnectionTagArrayOutput) Index(i pulumi.IntInput) GetVpnConnectionTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVpnConnectionTag {
		return vs[0].([]GetVpnConnectionTag)[vs[1].(int)]
	}).(GetVpnConnectionTagOutput)
}

type GetVpnConnectionVgwTelemetry struct {
	// The number of routes accepted through BGP (Border Gateway Protocol) route exchanges.
	AcceptedRouteCount int `pulumi:"acceptedRouteCount"`
	// The date and time (UTC) of the latest state update.
	LastStateChangeDate string `pulumi:"lastStateChangeDate"`
	// The IP on the OUTSCALE side of the tunnel.
	OutsideIpAddress string `pulumi:"outsideIpAddress"`
	// The state of the IPSEC tunnel (`UP` \| `DOWN`).
	State string `pulumi:"state"`
	// A description of the current state of the tunnel.
	StateDescription string `pulumi:"stateDescription"`
}

// GetVpnConnectionVgwTelemetryInput is an input type that accepts GetVpnConnectionVgwTelemetryArgs and GetVpnConnectionVgwTelemetryOutput values.
// You can construct a concrete instance of `GetVpnConnectionVgwTelemetryInput` via:
//
//	GetVpnConnectionVgwTelemetryArgs{...}
type GetVpnConnectionVgwTelemetryInput interface {
	pulumi.Input

	ToGetVpnConnectionVgwTelemetryOutput() GetVpnConnectionVgwTelemetryOutput
	ToGetVpnConnectionVgwTelemetryOutputWithContext(context.Context) GetVpnConnectionVgwTelemetryOutput
}

type GetVpnConnectionVgwTelemetryArgs struct {
	// The number of routes accepted through BGP (Border Gateway Protocol) route exchanges.
	AcceptedRouteCount pulumi.IntInput `pulumi:"acceptedRouteCount"`
	// The date and time (UTC) of the latest state update.
	LastStateChangeDate pulumi.StringInput `pulumi:"lastStateChangeDate"`
	// The IP on the OUTSCALE side of the tunnel.
	OutsideIpAddress pulumi.StringInput `pulumi:"outsideIpAddress"`
	// The state of the IPSEC tunnel (`UP` \| `DOWN`).
	State pulumi.StringInput `pulumi:"state"`
	// A description of the current state of the tunnel.
	StateDescription pulumi.StringInput `pulumi:"stateDescription"`
}

func (GetVpnConnectionVgwTelemetryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpnConnectionVgwTelemetry)(nil)).Elem()
}

func (i GetVpnConnectionVgwTelemetryArgs) ToGetVpnConnectionVgwTelemetryOutput() GetVpnConnectionVgwTelemetryOutput {
	return i.ToGetVpnConnectionVgwTelemetryOutputWithContext(context.Background())
}

func (i GetVpnConnectionVgwTelemetryArgs) ToGetVpnConnectionVgwTelemetryOutputWithContext(ctx context.Context) GetVpnConnectionVgwTelemetryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpnConnectionVgwTelemetryOutput)
}

// GetVpnConnectionVgwTelemetryArrayInput is an input type that accepts GetVpnConnectionVgwTelemetryArray and GetVpnConnectionVgwTelemetryArrayOutput values.
// You can construct a concrete instance of `GetVpnConnectionVgwTelemetryArrayInput` via:
//
//	GetVpnConnectionVgwTelemetryArray{ GetVpnConnectionVgwTelemetryArgs{...} }
type GetVpnConnectionVgwTelemetryArrayInput interface {
	pulumi.Input

	ToGetVpnConnectionVgwTelemetryArrayOutput() GetVpnConnectionVgwTelemetryArrayOutput
	ToGetVpnConnectionVgwTelemetryArrayOutputWithContext(context.Context) GetVpnConnectionVgwTelemetryArrayOutput
}

type GetVpnConnectionVgwTelemetryArray []GetVpnConnectionVgwTelemetryInput

func (GetVpnConnectionVgwTelemetryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpnConnectionVgwTelemetry)(nil)).Elem()
}

func (i GetVpnConnectionVgwTelemetryArray) ToGetVpnConnectionVgwTelemetryArrayOutput() GetVpnConnectionVgwTelemetryArrayOutput {
	return i.ToGetVpnConnectionVgwTelemetryArrayOutputWithContext(context.Background())
}

func (i GetVpnConnectionVgwTelemetryArray) ToGetVpnConnectionVgwTelemetryArrayOutputWithContext(ctx context.Context) GetVpnConnectionVgwTelemetryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpnConnectionVgwTelemetryArrayOutput)
}

type GetVpnConnectionVgwTelemetryOutput struct{ *pulumi.OutputState }

func (GetVpnConnectionVgwTelemetryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpnConnectionVgwTelemetry)(nil)).Elem()
}

func (o GetVpnConnectionVgwTelemetryOutput) ToGetVpnConnectionVgwTelemetryOutput() GetVpnConnectionVgwTelemetryOutput {
	return o
}

func (o GetVpnConnectionVgwTelemetryOutput) ToGetVpnConnectionVgwTelemetryOutputWithContext(ctx context.Context) GetVpnConnectionVgwTelemetryOutput {
	return o
}

// The number of routes accepted through BGP (Border Gateway Protocol) route exchanges.
func (o GetVpnConnectionVgwTelemetryOutput) AcceptedRouteCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetVpnConnectionVgwTelemetry) int { return v.AcceptedRouteCount }).(pulumi.IntOutput)
}

// The date and time (UTC) of the latest state update.
func (o GetVpnConnectionVgwTelemetryOutput) LastStateChangeDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpnConnectionVgwTelemetry) string { return v.LastStateChangeDate }).(pulumi.StringOutput)
}

// The IP on the OUTSCALE side of the tunnel.
func (o GetVpnConnectionVgwTelemetryOutput) OutsideIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpnConnectionVgwTelemetry) string { return v.OutsideIpAddress }).(pulumi.StringOutput)
}

// The state of the IPSEC tunnel (`UP` \| `DOWN`).
func (o GetVpnConnectionVgwTelemetryOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpnConnectionVgwTelemetry) string { return v.State }).(pulumi.StringOutput)
}

// A description of the current state of the tunnel.
func (o GetVpnConnectionVgwTelemetryOutput) StateDescription() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpnConnectionVgwTelemetry) string { return v.StateDescription }).(pulumi.StringOutput)
}

type GetVpnConnectionVgwTelemetryArrayOutput struct{ *pulumi.OutputState }

func (GetVpnConnectionVgwTelemetryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpnConnectionVgwTelemetry)(nil)).Elem()
}

func (o GetVpnConnectionVgwTelemetryArrayOutput) ToGetVpnConnectionVgwTelemetryArrayOutput() GetVpnConnectionVgwTelemetryArrayOutput {
	return o
}

func (o GetVpnConnectionVgwTelemetryArrayOutput) ToGetVpnConnectionVgwTelemetryArrayOutputWithContext(ctx context.Context) GetVpnConnectionVgwTelemetryArrayOutput {
	return o
}

func (o GetVpnConnectionVgwTelemetryArrayOutput) Index(i pulumi.IntInput) GetVpnConnectionVgwTelemetryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVpnConnectionVgwTelemetry {
		return vs[0].([]GetVpnConnectionVgwTelemetry)[vs[1].(int)]
	}).(GetVpnConnectionVgwTelemetryOutput)
}

type GetVpnConnectionsFilter struct {
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// GetVpnConnectionsFilterInput is an input type that accepts GetVpnConnectionsFilterArgs and GetVpnConnectionsFilterOutput values.
// You can construct a concrete instance of `GetVpnConnectionsFilterInput` via:
//
//	GetVpnConnectionsFilterArgs{...}
type GetVpnConnectionsFilterInput interface {
	pulumi.Input

	ToGetVpnConnectionsFilterOutput() GetVpnConnectionsFilterOutput
	ToGetVpnConnectionsFilterOutputWithContext(context.Context) GetVpnConnectionsFilterOutput
}

type GetVpnConnectionsFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetVpnConnectionsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpnConnectionsFilter)(nil)).Elem()
}

func (i GetVpnConnectionsFilterArgs) ToGetVpnConnectionsFilterOutput() GetVpnConnectionsFilterOutput {
	return i.ToGetVpnConnectionsFilterOutputWithContext(context.Background())
}

func (i GetVpnConnectionsFilterArgs) ToGetVpnConnectionsFilterOutputWithContext(ctx context.Context) GetVpnConnectionsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpnConnectionsFilterOutput)
}

// GetVpnConnectionsFilterArrayInput is an input type that accepts GetVpnConnectionsFilterArray and GetVpnConnectionsFilterArrayOutput values.
// You can construct a concrete instance of `GetVpnConnectionsFilterArrayInput` via:
//
//	GetVpnConnectionsFilterArray{ GetVpnConnectionsFilterArgs{...} }
type GetVpnConnectionsFilterArrayInput interface {
	pulumi.Input

	ToGetVpnConnectionsFilterArrayOutput() GetVpnConnectionsFilterArrayOutput
	ToGetVpnConnectionsFilterArrayOutputWithContext(context.Context) GetVpnConnectionsFilterArrayOutput
}

type GetVpnConnectionsFilterArray []GetVpnConnectionsFilterInput

func (GetVpnConnectionsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpnConnectionsFilter)(nil)).Elem()
}

func (i GetVpnConnectionsFilterArray) ToGetVpnConnectionsFilterArrayOutput() GetVpnConnectionsFilterArrayOutput {
	return i.ToGetVpnConnectionsFilterArrayOutputWithContext(context.Background())
}

func (i GetVpnConnectionsFilterArray) ToGetVpnConnectionsFilterArrayOutputWithContext(ctx context.Context) GetVpnConnectionsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpnConnectionsFilterArrayOutput)
}

type GetVpnConnectionsFilterOutput struct{ *pulumi.OutputState }

func (GetVpnConnectionsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpnConnectionsFilter)(nil)).Elem()
}

func (o GetVpnConnectionsFilterOutput) ToGetVpnConnectionsFilterOutput() GetVpnConnectionsFilterOutput {
	return o
}

func (o GetVpnConnectionsFilterOutput) ToGetVpnConnectionsFilterOutputWithContext(ctx context.Context) GetVpnConnectionsFilterOutput {
	return o
}

func (o GetVpnConnectionsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpnConnectionsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetVpnConnectionsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetVpnConnectionsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetVpnConnectionsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetVpnConnectionsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpnConnectionsFilter)(nil)).Elem()
}

func (o GetVpnConnectionsFilterArrayOutput) ToGetVpnConnectionsFilterArrayOutput() GetVpnConnectionsFilterArrayOutput {
	return o
}

func (o GetVpnConnectionsFilterArrayOutput) ToGetVpnConnectionsFilterArrayOutputWithContext(ctx context.Context) GetVpnConnectionsFilterArrayOutput {
	return o
}

func (o GetVpnConnectionsFilterArrayOutput) Index(i pulumi.IntInput) GetVpnConnectionsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVpnConnectionsFilter {
		return vs[0].([]GetVpnConnectionsFilter)[vs[1].(int)]
	}).(GetVpnConnectionsFilterOutput)
}

type GetVpnConnectionsVpnConnection struct {
	// Example configuration for the client gateway.
	ClientGatewayConfiguration string `pulumi:"clientGatewayConfiguration"`
	// The ID of the client gateway used on the client end of the connection.
	ClientGatewayId string `pulumi:"clientGatewayId"`
	// The type of VPN connection (always `ipsec.1`).
	ConnectionType string `pulumi:"connectionType"`
	// Information about one or more static routes associated with the VPN connection, if any.
	Routes []GetVpnConnectionsVpnConnectionRoute `pulumi:"routes"`
	// The state of the IPSEC tunnel (`UP` \| `DOWN`).
	State string `pulumi:"state"`
	// If false, the VPN connection uses dynamic routing with Border Gateway Protocol (BGP). If true, routing is controlled using static routes. For more information about how to create and delete static routes, see [CreateVpnConnectionRoute](https://docs.outscale.com/api#createvpnconnectionroute) and [DeleteVpnConnectionRoute](https://docs.outscale.com/api#deletevpnconnectionroute).
	StaticRoutesOnly *bool `pulumi:"staticRoutesOnly"`
	// One or more tags associated with the VPN connection.
	Tags []GetVpnConnectionsVpnConnectionTag `pulumi:"tags"`
	// Information about the current state of one or more of the VPN tunnels.
	VgwTelemetries []GetVpnConnectionsVpnConnectionVgwTelemetry `pulumi:"vgwTelemetries"`
	// The ID of the virtual gateway used on the OUTSCALE end of the connection.
	VirtualGatewayId string `pulumi:"virtualGatewayId"`
	// The ID of the VPN connection.
	VpnConnectionId string `pulumi:"vpnConnectionId"`
}

// GetVpnConnectionsVpnConnectionInput is an input type that accepts GetVpnConnectionsVpnConnectionArgs and GetVpnConnectionsVpnConnectionOutput values.
// You can construct a concrete instance of `GetVpnConnectionsVpnConnectionInput` via:
//
//	GetVpnConnectionsVpnConnectionArgs{...}
type GetVpnConnectionsVpnConnectionInput interface {
	pulumi.Input

	ToGetVpnConnectionsVpnConnectionOutput() GetVpnConnectionsVpnConnectionOutput
	ToGetVpnConnectionsVpnConnectionOutputWithContext(context.Context) GetVpnConnectionsVpnConnectionOutput
}

type GetVpnConnectionsVpnConnectionArgs struct {
	// Example configuration for the client gateway.
	ClientGatewayConfiguration pulumi.StringInput `pulumi:"clientGatewayConfiguration"`
	// The ID of the client gateway used on the client end of the connection.
	ClientGatewayId pulumi.StringInput `pulumi:"clientGatewayId"`
	// The type of VPN connection (always `ipsec.1`).
	ConnectionType pulumi.StringInput `pulumi:"connectionType"`
	// Information about one or more static routes associated with the VPN connection, if any.
	Routes GetVpnConnectionsVpnConnectionRouteArrayInput `pulumi:"routes"`
	// The state of the IPSEC tunnel (`UP` \| `DOWN`).
	State pulumi.StringInput `pulumi:"state"`
	// If false, the VPN connection uses dynamic routing with Border Gateway Protocol (BGP). If true, routing is controlled using static routes. For more information about how to create and delete static routes, see [CreateVpnConnectionRoute](https://docs.outscale.com/api#createvpnconnectionroute) and [DeleteVpnConnectionRoute](https://docs.outscale.com/api#deletevpnconnectionroute).
	StaticRoutesOnly pulumi.BoolPtrInput `pulumi:"staticRoutesOnly"`
	// One or more tags associated with the VPN connection.
	Tags GetVpnConnectionsVpnConnectionTagArrayInput `pulumi:"tags"`
	// Information about the current state of one or more of the VPN tunnels.
	VgwTelemetries GetVpnConnectionsVpnConnectionVgwTelemetryArrayInput `pulumi:"vgwTelemetries"`
	// The ID of the virtual gateway used on the OUTSCALE end of the connection.
	VirtualGatewayId pulumi.StringInput `pulumi:"virtualGatewayId"`
	// The ID of the VPN connection.
	VpnConnectionId pulumi.StringInput `pulumi:"vpnConnectionId"`
}

func (GetVpnConnectionsVpnConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpnConnectionsVpnConnection)(nil)).Elem()
}

func (i GetVpnConnectionsVpnConnectionArgs) ToGetVpnConnectionsVpnConnectionOutput() GetVpnConnectionsVpnConnectionOutput {
	return i.ToGetVpnConnectionsVpnConnectionOutputWithContext(context.Background())
}

func (i GetVpnConnectionsVpnConnectionArgs) ToGetVpnConnectionsVpnConnectionOutputWithContext(ctx context.Context) GetVpnConnectionsVpnConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpnConnectionsVpnConnectionOutput)
}

// GetVpnConnectionsVpnConnectionArrayInput is an input type that accepts GetVpnConnectionsVpnConnectionArray and GetVpnConnectionsVpnConnectionArrayOutput values.
// You can construct a concrete instance of `GetVpnConnectionsVpnConnectionArrayInput` via:
//
//	GetVpnConnectionsVpnConnectionArray{ GetVpnConnectionsVpnConnectionArgs{...} }
type GetVpnConnectionsVpnConnectionArrayInput interface {
	pulumi.Input

	ToGetVpnConnectionsVpnConnectionArrayOutput() GetVpnConnectionsVpnConnectionArrayOutput
	ToGetVpnConnectionsVpnConnectionArrayOutputWithContext(context.Context) GetVpnConnectionsVpnConnectionArrayOutput
}

type GetVpnConnectionsVpnConnectionArray []GetVpnConnectionsVpnConnectionInput

func (GetVpnConnectionsVpnConnectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpnConnectionsVpnConnection)(nil)).Elem()
}

func (i GetVpnConnectionsVpnConnectionArray) ToGetVpnConnectionsVpnConnectionArrayOutput() GetVpnConnectionsVpnConnectionArrayOutput {
	return i.ToGetVpnConnectionsVpnConnectionArrayOutputWithContext(context.Background())
}

func (i GetVpnConnectionsVpnConnectionArray) ToGetVpnConnectionsVpnConnectionArrayOutputWithContext(ctx context.Context) GetVpnConnectionsVpnConnectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpnConnectionsVpnConnectionArrayOutput)
}

type GetVpnConnectionsVpnConnectionOutput struct{ *pulumi.OutputState }

func (GetVpnConnectionsVpnConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpnConnectionsVpnConnection)(nil)).Elem()
}

func (o GetVpnConnectionsVpnConnectionOutput) ToGetVpnConnectionsVpnConnectionOutput() GetVpnConnectionsVpnConnectionOutput {
	return o
}

func (o GetVpnConnectionsVpnConnectionOutput) ToGetVpnConnectionsVpnConnectionOutputWithContext(ctx context.Context) GetVpnConnectionsVpnConnectionOutput {
	return o
}

// Example configuration for the client gateway.
func (o GetVpnConnectionsVpnConnectionOutput) ClientGatewayConfiguration() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpnConnectionsVpnConnection) string { return v.ClientGatewayConfiguration }).(pulumi.StringOutput)
}

// The ID of the client gateway used on the client end of the connection.
func (o GetVpnConnectionsVpnConnectionOutput) ClientGatewayId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpnConnectionsVpnConnection) string { return v.ClientGatewayId }).(pulumi.StringOutput)
}

// The type of VPN connection (always `ipsec.1`).
func (o GetVpnConnectionsVpnConnectionOutput) ConnectionType() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpnConnectionsVpnConnection) string { return v.ConnectionType }).(pulumi.StringOutput)
}

// Information about one or more static routes associated with the VPN connection, if any.
func (o GetVpnConnectionsVpnConnectionOutput) Routes() GetVpnConnectionsVpnConnectionRouteArrayOutput {
	return o.ApplyT(func(v GetVpnConnectionsVpnConnection) []GetVpnConnectionsVpnConnectionRoute { return v.Routes }).(GetVpnConnectionsVpnConnectionRouteArrayOutput)
}

// The state of the IPSEC tunnel (`UP` \| `DOWN`).
func (o GetVpnConnectionsVpnConnectionOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpnConnectionsVpnConnection) string { return v.State }).(pulumi.StringOutput)
}

// If false, the VPN connection uses dynamic routing with Border Gateway Protocol (BGP). If true, routing is controlled using static routes. For more information about how to create and delete static routes, see [CreateVpnConnectionRoute](https://docs.outscale.com/api#createvpnconnectionroute) and [DeleteVpnConnectionRoute](https://docs.outscale.com/api#deletevpnconnectionroute).
func (o GetVpnConnectionsVpnConnectionOutput) StaticRoutesOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetVpnConnectionsVpnConnection) *bool { return v.StaticRoutesOnly }).(pulumi.BoolPtrOutput)
}

// One or more tags associated with the VPN connection.
func (o GetVpnConnectionsVpnConnectionOutput) Tags() GetVpnConnectionsVpnConnectionTagArrayOutput {
	return o.ApplyT(func(v GetVpnConnectionsVpnConnection) []GetVpnConnectionsVpnConnectionTag { return v.Tags }).(GetVpnConnectionsVpnConnectionTagArrayOutput)
}

// Information about the current state of one or more of the VPN tunnels.
func (o GetVpnConnectionsVpnConnectionOutput) VgwTelemetries() GetVpnConnectionsVpnConnectionVgwTelemetryArrayOutput {
	return o.ApplyT(func(v GetVpnConnectionsVpnConnection) []GetVpnConnectionsVpnConnectionVgwTelemetry {
		return v.VgwTelemetries
	}).(GetVpnConnectionsVpnConnectionVgwTelemetryArrayOutput)
}

// The ID of the virtual gateway used on the OUTSCALE end of the connection.
func (o GetVpnConnectionsVpnConnectionOutput) VirtualGatewayId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpnConnectionsVpnConnection) string { return v.VirtualGatewayId }).(pulumi.StringOutput)
}

// The ID of the VPN connection.
func (o GetVpnConnectionsVpnConnectionOutput) VpnConnectionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpnConnectionsVpnConnection) string { return v.VpnConnectionId }).(pulumi.StringOutput)
}

type GetVpnConnectionsVpnConnectionArrayOutput struct{ *pulumi.OutputState }

func (GetVpnConnectionsVpnConnectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpnConnectionsVpnConnection)(nil)).Elem()
}

func (o GetVpnConnectionsVpnConnectionArrayOutput) ToGetVpnConnectionsVpnConnectionArrayOutput() GetVpnConnectionsVpnConnectionArrayOutput {
	return o
}

func (o GetVpnConnectionsVpnConnectionArrayOutput) ToGetVpnConnectionsVpnConnectionArrayOutputWithContext(ctx context.Context) GetVpnConnectionsVpnConnectionArrayOutput {
	return o
}

func (o GetVpnConnectionsVpnConnectionArrayOutput) Index(i pulumi.IntInput) GetVpnConnectionsVpnConnectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVpnConnectionsVpnConnection {
		return vs[0].([]GetVpnConnectionsVpnConnection)[vs[1].(int)]
	}).(GetVpnConnectionsVpnConnectionOutput)
}

type GetVpnConnectionsVpnConnectionRoute struct {
	// The IP range used for the destination match, in CIDR notation (for example, `10.0.0.0/24`).
	DestinationIpRange string `pulumi:"destinationIpRange"`
	// The type of route (always `static`).
	RouteType string `pulumi:"routeType"`
	// The state of the IPSEC tunnel (`UP` \| `DOWN`).
	State string `pulumi:"state"`
}

// GetVpnConnectionsVpnConnectionRouteInput is an input type that accepts GetVpnConnectionsVpnConnectionRouteArgs and GetVpnConnectionsVpnConnectionRouteOutput values.
// You can construct a concrete instance of `GetVpnConnectionsVpnConnectionRouteInput` via:
//
//	GetVpnConnectionsVpnConnectionRouteArgs{...}
type GetVpnConnectionsVpnConnectionRouteInput interface {
	pulumi.Input

	ToGetVpnConnectionsVpnConnectionRouteOutput() GetVpnConnectionsVpnConnectionRouteOutput
	ToGetVpnConnectionsVpnConnectionRouteOutputWithContext(context.Context) GetVpnConnectionsVpnConnectionRouteOutput
}

type GetVpnConnectionsVpnConnectionRouteArgs struct {
	// The IP range used for the destination match, in CIDR notation (for example, `10.0.0.0/24`).
	DestinationIpRange pulumi.StringInput `pulumi:"destinationIpRange"`
	// The type of route (always `static`).
	RouteType pulumi.StringInput `pulumi:"routeType"`
	// The state of the IPSEC tunnel (`UP` \| `DOWN`).
	State pulumi.StringInput `pulumi:"state"`
}

func (GetVpnConnectionsVpnConnectionRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpnConnectionsVpnConnectionRoute)(nil)).Elem()
}

func (i GetVpnConnectionsVpnConnectionRouteArgs) ToGetVpnConnectionsVpnConnectionRouteOutput() GetVpnConnectionsVpnConnectionRouteOutput {
	return i.ToGetVpnConnectionsVpnConnectionRouteOutputWithContext(context.Background())
}

func (i GetVpnConnectionsVpnConnectionRouteArgs) ToGetVpnConnectionsVpnConnectionRouteOutputWithContext(ctx context.Context) GetVpnConnectionsVpnConnectionRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpnConnectionsVpnConnectionRouteOutput)
}

// GetVpnConnectionsVpnConnectionRouteArrayInput is an input type that accepts GetVpnConnectionsVpnConnectionRouteArray and GetVpnConnectionsVpnConnectionRouteArrayOutput values.
// You can construct a concrete instance of `GetVpnConnectionsVpnConnectionRouteArrayInput` via:
//
//	GetVpnConnectionsVpnConnectionRouteArray{ GetVpnConnectionsVpnConnectionRouteArgs{...} }
type GetVpnConnectionsVpnConnectionRouteArrayInput interface {
	pulumi.Input

	ToGetVpnConnectionsVpnConnectionRouteArrayOutput() GetVpnConnectionsVpnConnectionRouteArrayOutput
	ToGetVpnConnectionsVpnConnectionRouteArrayOutputWithContext(context.Context) GetVpnConnectionsVpnConnectionRouteArrayOutput
}

type GetVpnConnectionsVpnConnectionRouteArray []GetVpnConnectionsVpnConnectionRouteInput

func (GetVpnConnectionsVpnConnectionRouteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpnConnectionsVpnConnectionRoute)(nil)).Elem()
}

func (i GetVpnConnectionsVpnConnectionRouteArray) ToGetVpnConnectionsVpnConnectionRouteArrayOutput() GetVpnConnectionsVpnConnectionRouteArrayOutput {
	return i.ToGetVpnConnectionsVpnConnectionRouteArrayOutputWithContext(context.Background())
}

func (i GetVpnConnectionsVpnConnectionRouteArray) ToGetVpnConnectionsVpnConnectionRouteArrayOutputWithContext(ctx context.Context) GetVpnConnectionsVpnConnectionRouteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpnConnectionsVpnConnectionRouteArrayOutput)
}

type GetVpnConnectionsVpnConnectionRouteOutput struct{ *pulumi.OutputState }

func (GetVpnConnectionsVpnConnectionRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpnConnectionsVpnConnectionRoute)(nil)).Elem()
}

func (o GetVpnConnectionsVpnConnectionRouteOutput) ToGetVpnConnectionsVpnConnectionRouteOutput() GetVpnConnectionsVpnConnectionRouteOutput {
	return o
}

func (o GetVpnConnectionsVpnConnectionRouteOutput) ToGetVpnConnectionsVpnConnectionRouteOutputWithContext(ctx context.Context) GetVpnConnectionsVpnConnectionRouteOutput {
	return o
}

// The IP range used for the destination match, in CIDR notation (for example, `10.0.0.0/24`).
func (o GetVpnConnectionsVpnConnectionRouteOutput) DestinationIpRange() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpnConnectionsVpnConnectionRoute) string { return v.DestinationIpRange }).(pulumi.StringOutput)
}

// The type of route (always `static`).
func (o GetVpnConnectionsVpnConnectionRouteOutput) RouteType() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpnConnectionsVpnConnectionRoute) string { return v.RouteType }).(pulumi.StringOutput)
}

// The state of the IPSEC tunnel (`UP` \| `DOWN`).
func (o GetVpnConnectionsVpnConnectionRouteOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpnConnectionsVpnConnectionRoute) string { return v.State }).(pulumi.StringOutput)
}

type GetVpnConnectionsVpnConnectionRouteArrayOutput struct{ *pulumi.OutputState }

func (GetVpnConnectionsVpnConnectionRouteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpnConnectionsVpnConnectionRoute)(nil)).Elem()
}

func (o GetVpnConnectionsVpnConnectionRouteArrayOutput) ToGetVpnConnectionsVpnConnectionRouteArrayOutput() GetVpnConnectionsVpnConnectionRouteArrayOutput {
	return o
}

func (o GetVpnConnectionsVpnConnectionRouteArrayOutput) ToGetVpnConnectionsVpnConnectionRouteArrayOutputWithContext(ctx context.Context) GetVpnConnectionsVpnConnectionRouteArrayOutput {
	return o
}

func (o GetVpnConnectionsVpnConnectionRouteArrayOutput) Index(i pulumi.IntInput) GetVpnConnectionsVpnConnectionRouteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVpnConnectionsVpnConnectionRoute {
		return vs[0].([]GetVpnConnectionsVpnConnectionRoute)[vs[1].(int)]
	}).(GetVpnConnectionsVpnConnectionRouteOutput)
}

type GetVpnConnectionsVpnConnectionTag struct {
	// The key of the tag, with a minimum of 1 character.
	Key string `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value string `pulumi:"value"`
}

// GetVpnConnectionsVpnConnectionTagInput is an input type that accepts GetVpnConnectionsVpnConnectionTagArgs and GetVpnConnectionsVpnConnectionTagOutput values.
// You can construct a concrete instance of `GetVpnConnectionsVpnConnectionTagInput` via:
//
//	GetVpnConnectionsVpnConnectionTagArgs{...}
type GetVpnConnectionsVpnConnectionTagInput interface {
	pulumi.Input

	ToGetVpnConnectionsVpnConnectionTagOutput() GetVpnConnectionsVpnConnectionTagOutput
	ToGetVpnConnectionsVpnConnectionTagOutputWithContext(context.Context) GetVpnConnectionsVpnConnectionTagOutput
}

type GetVpnConnectionsVpnConnectionTagArgs struct {
	// The key of the tag, with a minimum of 1 character.
	Key pulumi.StringInput `pulumi:"key"`
	// The value of the tag, between 0 and 255 characters.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetVpnConnectionsVpnConnectionTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpnConnectionsVpnConnectionTag)(nil)).Elem()
}

func (i GetVpnConnectionsVpnConnectionTagArgs) ToGetVpnConnectionsVpnConnectionTagOutput() GetVpnConnectionsVpnConnectionTagOutput {
	return i.ToGetVpnConnectionsVpnConnectionTagOutputWithContext(context.Background())
}

func (i GetVpnConnectionsVpnConnectionTagArgs) ToGetVpnConnectionsVpnConnectionTagOutputWithContext(ctx context.Context) GetVpnConnectionsVpnConnectionTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpnConnectionsVpnConnectionTagOutput)
}

// GetVpnConnectionsVpnConnectionTagArrayInput is an input type that accepts GetVpnConnectionsVpnConnectionTagArray and GetVpnConnectionsVpnConnectionTagArrayOutput values.
// You can construct a concrete instance of `GetVpnConnectionsVpnConnectionTagArrayInput` via:
//
//	GetVpnConnectionsVpnConnectionTagArray{ GetVpnConnectionsVpnConnectionTagArgs{...} }
type GetVpnConnectionsVpnConnectionTagArrayInput interface {
	pulumi.Input

	ToGetVpnConnectionsVpnConnectionTagArrayOutput() GetVpnConnectionsVpnConnectionTagArrayOutput
	ToGetVpnConnectionsVpnConnectionTagArrayOutputWithContext(context.Context) GetVpnConnectionsVpnConnectionTagArrayOutput
}

type GetVpnConnectionsVpnConnectionTagArray []GetVpnConnectionsVpnConnectionTagInput

func (GetVpnConnectionsVpnConnectionTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpnConnectionsVpnConnectionTag)(nil)).Elem()
}

func (i GetVpnConnectionsVpnConnectionTagArray) ToGetVpnConnectionsVpnConnectionTagArrayOutput() GetVpnConnectionsVpnConnectionTagArrayOutput {
	return i.ToGetVpnConnectionsVpnConnectionTagArrayOutputWithContext(context.Background())
}

func (i GetVpnConnectionsVpnConnectionTagArray) ToGetVpnConnectionsVpnConnectionTagArrayOutputWithContext(ctx context.Context) GetVpnConnectionsVpnConnectionTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpnConnectionsVpnConnectionTagArrayOutput)
}

type GetVpnConnectionsVpnConnectionTagOutput struct{ *pulumi.OutputState }

func (GetVpnConnectionsVpnConnectionTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpnConnectionsVpnConnectionTag)(nil)).Elem()
}

func (o GetVpnConnectionsVpnConnectionTagOutput) ToGetVpnConnectionsVpnConnectionTagOutput() GetVpnConnectionsVpnConnectionTagOutput {
	return o
}

func (o GetVpnConnectionsVpnConnectionTagOutput) ToGetVpnConnectionsVpnConnectionTagOutputWithContext(ctx context.Context) GetVpnConnectionsVpnConnectionTagOutput {
	return o
}

// The key of the tag, with a minimum of 1 character.
func (o GetVpnConnectionsVpnConnectionTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpnConnectionsVpnConnectionTag) string { return v.Key }).(pulumi.StringOutput)
}

// The value of the tag, between 0 and 255 characters.
func (o GetVpnConnectionsVpnConnectionTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpnConnectionsVpnConnectionTag) string { return v.Value }).(pulumi.StringOutput)
}

type GetVpnConnectionsVpnConnectionTagArrayOutput struct{ *pulumi.OutputState }

func (GetVpnConnectionsVpnConnectionTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpnConnectionsVpnConnectionTag)(nil)).Elem()
}

func (o GetVpnConnectionsVpnConnectionTagArrayOutput) ToGetVpnConnectionsVpnConnectionTagArrayOutput() GetVpnConnectionsVpnConnectionTagArrayOutput {
	return o
}

func (o GetVpnConnectionsVpnConnectionTagArrayOutput) ToGetVpnConnectionsVpnConnectionTagArrayOutputWithContext(ctx context.Context) GetVpnConnectionsVpnConnectionTagArrayOutput {
	return o
}

func (o GetVpnConnectionsVpnConnectionTagArrayOutput) Index(i pulumi.IntInput) GetVpnConnectionsVpnConnectionTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVpnConnectionsVpnConnectionTag {
		return vs[0].([]GetVpnConnectionsVpnConnectionTag)[vs[1].(int)]
	}).(GetVpnConnectionsVpnConnectionTagOutput)
}

type GetVpnConnectionsVpnConnectionVgwTelemetry struct {
	// The number of routes accepted through BGP (Border Gateway Protocol) route exchanges.
	AcceptedRouteCount int `pulumi:"acceptedRouteCount"`
	// The date and time (UTC) of the latest state update.
	LastStateChangeDate string `pulumi:"lastStateChangeDate"`
	// The IP on the OUTSCALE side of the tunnel.
	OutsideIpAddress string `pulumi:"outsideIpAddress"`
	// The state of the IPSEC tunnel (`UP` \| `DOWN`).
	State string `pulumi:"state"`
	// A description of the current state of the tunnel.
	StateDescription string `pulumi:"stateDescription"`
}

// GetVpnConnectionsVpnConnectionVgwTelemetryInput is an input type that accepts GetVpnConnectionsVpnConnectionVgwTelemetryArgs and GetVpnConnectionsVpnConnectionVgwTelemetryOutput values.
// You can construct a concrete instance of `GetVpnConnectionsVpnConnectionVgwTelemetryInput` via:
//
//	GetVpnConnectionsVpnConnectionVgwTelemetryArgs{...}
type GetVpnConnectionsVpnConnectionVgwTelemetryInput interface {
	pulumi.Input

	ToGetVpnConnectionsVpnConnectionVgwTelemetryOutput() GetVpnConnectionsVpnConnectionVgwTelemetryOutput
	ToGetVpnConnectionsVpnConnectionVgwTelemetryOutputWithContext(context.Context) GetVpnConnectionsVpnConnectionVgwTelemetryOutput
}

type GetVpnConnectionsVpnConnectionVgwTelemetryArgs struct {
	// The number of routes accepted through BGP (Border Gateway Protocol) route exchanges.
	AcceptedRouteCount pulumi.IntInput `pulumi:"acceptedRouteCount"`
	// The date and time (UTC) of the latest state update.
	LastStateChangeDate pulumi.StringInput `pulumi:"lastStateChangeDate"`
	// The IP on the OUTSCALE side of the tunnel.
	OutsideIpAddress pulumi.StringInput `pulumi:"outsideIpAddress"`
	// The state of the IPSEC tunnel (`UP` \| `DOWN`).
	State pulumi.StringInput `pulumi:"state"`
	// A description of the current state of the tunnel.
	StateDescription pulumi.StringInput `pulumi:"stateDescription"`
}

func (GetVpnConnectionsVpnConnectionVgwTelemetryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpnConnectionsVpnConnectionVgwTelemetry)(nil)).Elem()
}

func (i GetVpnConnectionsVpnConnectionVgwTelemetryArgs) ToGetVpnConnectionsVpnConnectionVgwTelemetryOutput() GetVpnConnectionsVpnConnectionVgwTelemetryOutput {
	return i.ToGetVpnConnectionsVpnConnectionVgwTelemetryOutputWithContext(context.Background())
}

func (i GetVpnConnectionsVpnConnectionVgwTelemetryArgs) ToGetVpnConnectionsVpnConnectionVgwTelemetryOutputWithContext(ctx context.Context) GetVpnConnectionsVpnConnectionVgwTelemetryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpnConnectionsVpnConnectionVgwTelemetryOutput)
}

// GetVpnConnectionsVpnConnectionVgwTelemetryArrayInput is an input type that accepts GetVpnConnectionsVpnConnectionVgwTelemetryArray and GetVpnConnectionsVpnConnectionVgwTelemetryArrayOutput values.
// You can construct a concrete instance of `GetVpnConnectionsVpnConnectionVgwTelemetryArrayInput` via:
//
//	GetVpnConnectionsVpnConnectionVgwTelemetryArray{ GetVpnConnectionsVpnConnectionVgwTelemetryArgs{...} }
type GetVpnConnectionsVpnConnectionVgwTelemetryArrayInput interface {
	pulumi.Input

	ToGetVpnConnectionsVpnConnectionVgwTelemetryArrayOutput() GetVpnConnectionsVpnConnectionVgwTelemetryArrayOutput
	ToGetVpnConnectionsVpnConnectionVgwTelemetryArrayOutputWithContext(context.Context) GetVpnConnectionsVpnConnectionVgwTelemetryArrayOutput
}

type GetVpnConnectionsVpnConnectionVgwTelemetryArray []GetVpnConnectionsVpnConnectionVgwTelemetryInput

func (GetVpnConnectionsVpnConnectionVgwTelemetryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpnConnectionsVpnConnectionVgwTelemetry)(nil)).Elem()
}

func (i GetVpnConnectionsVpnConnectionVgwTelemetryArray) ToGetVpnConnectionsVpnConnectionVgwTelemetryArrayOutput() GetVpnConnectionsVpnConnectionVgwTelemetryArrayOutput {
	return i.ToGetVpnConnectionsVpnConnectionVgwTelemetryArrayOutputWithContext(context.Background())
}

func (i GetVpnConnectionsVpnConnectionVgwTelemetryArray) ToGetVpnConnectionsVpnConnectionVgwTelemetryArrayOutputWithContext(ctx context.Context) GetVpnConnectionsVpnConnectionVgwTelemetryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpnConnectionsVpnConnectionVgwTelemetryArrayOutput)
}

type GetVpnConnectionsVpnConnectionVgwTelemetryOutput struct{ *pulumi.OutputState }

func (GetVpnConnectionsVpnConnectionVgwTelemetryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpnConnectionsVpnConnectionVgwTelemetry)(nil)).Elem()
}

func (o GetVpnConnectionsVpnConnectionVgwTelemetryOutput) ToGetVpnConnectionsVpnConnectionVgwTelemetryOutput() GetVpnConnectionsVpnConnectionVgwTelemetryOutput {
	return o
}

func (o GetVpnConnectionsVpnConnectionVgwTelemetryOutput) ToGetVpnConnectionsVpnConnectionVgwTelemetryOutputWithContext(ctx context.Context) GetVpnConnectionsVpnConnectionVgwTelemetryOutput {
	return o
}

// The number of routes accepted through BGP (Border Gateway Protocol) route exchanges.
func (o GetVpnConnectionsVpnConnectionVgwTelemetryOutput) AcceptedRouteCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetVpnConnectionsVpnConnectionVgwTelemetry) int { return v.AcceptedRouteCount }).(pulumi.IntOutput)
}

// The date and time (UTC) of the latest state update.
func (o GetVpnConnectionsVpnConnectionVgwTelemetryOutput) LastStateChangeDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpnConnectionsVpnConnectionVgwTelemetry) string { return v.LastStateChangeDate }).(pulumi.StringOutput)
}

// The IP on the OUTSCALE side of the tunnel.
func (o GetVpnConnectionsVpnConnectionVgwTelemetryOutput) OutsideIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpnConnectionsVpnConnectionVgwTelemetry) string { return v.OutsideIpAddress }).(pulumi.StringOutput)
}

// The state of the IPSEC tunnel (`UP` \| `DOWN`).
func (o GetVpnConnectionsVpnConnectionVgwTelemetryOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpnConnectionsVpnConnectionVgwTelemetry) string { return v.State }).(pulumi.StringOutput)
}

// A description of the current state of the tunnel.
func (o GetVpnConnectionsVpnConnectionVgwTelemetryOutput) StateDescription() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpnConnectionsVpnConnectionVgwTelemetry) string { return v.StateDescription }).(pulumi.StringOutput)
}

type GetVpnConnectionsVpnConnectionVgwTelemetryArrayOutput struct{ *pulumi.OutputState }

func (GetVpnConnectionsVpnConnectionVgwTelemetryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpnConnectionsVpnConnectionVgwTelemetry)(nil)).Elem()
}

func (o GetVpnConnectionsVpnConnectionVgwTelemetryArrayOutput) ToGetVpnConnectionsVpnConnectionVgwTelemetryArrayOutput() GetVpnConnectionsVpnConnectionVgwTelemetryArrayOutput {
	return o
}

func (o GetVpnConnectionsVpnConnectionVgwTelemetryArrayOutput) ToGetVpnConnectionsVpnConnectionVgwTelemetryArrayOutputWithContext(ctx context.Context) GetVpnConnectionsVpnConnectionVgwTelemetryArrayOutput {
	return o
}

func (o GetVpnConnectionsVpnConnectionVgwTelemetryArrayOutput) Index(i pulumi.IntInput) GetVpnConnectionsVpnConnectionVgwTelemetryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVpnConnectionsVpnConnectionVgwTelemetry {
		return vs[0].([]GetVpnConnectionsVpnConnectionVgwTelemetry)[vs[1].(int)]
	}).(GetVpnConnectionsVpnConnectionVgwTelemetryOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AccessKeyTimeoutsInput)(nil)).Elem(), AccessKeyTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessKeyTimeoutsPtrInput)(nil)).Elem(), AccessKeyTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientGatewayTagInput)(nil)).Elem(), ClientGatewayTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientGatewayTagArrayInput)(nil)).Elem(), ClientGatewayTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DhcpOptionTagInput)(nil)).Elem(), DhcpOptionTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DhcpOptionTagArrayInput)(nil)).Elem(), DhcpOptionTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlexibleGpuTimeoutsInput)(nil)).Elem(), FlexibleGpuTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlexibleGpuTimeoutsPtrInput)(nil)).Elem(), FlexibleGpuTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ImageBlockDeviceMappingInput)(nil)).Elem(), ImageBlockDeviceMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ImageBlockDeviceMappingArrayInput)(nil)).Elem(), ImageBlockDeviceMappingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ImageBlockDeviceMappingBsusInput)(nil)).Elem(), ImageBlockDeviceMappingBsusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ImageBlockDeviceMappingBsusArrayInput)(nil)).Elem(), ImageBlockDeviceMappingBsusArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ImageExportTaskOsuExportInput)(nil)).Elem(), ImageExportTaskOsuExportArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ImageExportTaskOsuExportArrayInput)(nil)).Elem(), ImageExportTaskOsuExportArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ImageExportTaskOsuExportOsuApiKeyInput)(nil)).Elem(), ImageExportTaskOsuExportOsuApiKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ImageExportTaskOsuExportOsuApiKeyArrayInput)(nil)).Elem(), ImageExportTaskOsuExportOsuApiKeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ImageExportTaskTagInput)(nil)).Elem(), ImageExportTaskTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ImageExportTaskTagArrayInput)(nil)).Elem(), ImageExportTaskTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ImageLaunchPermissionPermissionAdditionsInput)(nil)).Elem(), ImageLaunchPermissionPermissionAdditionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ImageLaunchPermissionPermissionAdditionsPtrInput)(nil)).Elem(), ImageLaunchPermissionPermissionAdditionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ImageLaunchPermissionPermissionRemovalsInput)(nil)).Elem(), ImageLaunchPermissionPermissionRemovalsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ImageLaunchPermissionPermissionRemovalsPtrInput)(nil)).Elem(), ImageLaunchPermissionPermissionRemovalsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ImageLaunchPermissionPermissionsToLaunchInput)(nil)).Elem(), ImageLaunchPermissionPermissionsToLaunchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ImageLaunchPermissionPermissionsToLaunchArrayInput)(nil)).Elem(), ImageLaunchPermissionPermissionsToLaunchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ImagePermissionsToLaunchInput)(nil)).Elem(), ImagePermissionsToLaunchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ImagePermissionsToLaunchArrayInput)(nil)).Elem(), ImagePermissionsToLaunchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ImageStateCommentInput)(nil)).Elem(), ImageStateCommentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ImageStateCommentArrayInput)(nil)).Elem(), ImageStateCommentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ImageTagInput)(nil)).Elem(), ImageTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ImageTagArrayInput)(nil)).Elem(), ImageTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InternetServiceLinkTagInput)(nil)).Elem(), InternetServiceLinkTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InternetServiceLinkTagArrayInput)(nil)).Elem(), InternetServiceLinkTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InternetServiceLinkTimeoutsInput)(nil)).Elem(), InternetServiceLinkTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InternetServiceLinkTimeoutsPtrInput)(nil)).Elem(), InternetServiceLinkTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InternetServiceTagInput)(nil)).Elem(), InternetServiceTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InternetServiceTagArrayInput)(nil)).Elem(), InternetServiceTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InternetServiceTimeoutsInput)(nil)).Elem(), InternetServiceTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InternetServiceTimeoutsPtrInput)(nil)).Elem(), InternetServiceTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KeypairTagInput)(nil)).Elem(), KeypairTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KeypairTagArrayInput)(nil)).Elem(), KeypairTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KeypairTimeoutsInput)(nil)).Elem(), KeypairTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KeypairTimeoutsPtrInput)(nil)).Elem(), KeypairTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadBalancerAccessLogInput)(nil)).Elem(), LoadBalancerAccessLogArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadBalancerAccessLogArrayInput)(nil)).Elem(), LoadBalancerAccessLogArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadBalancerApplicationStickyCookiePolicyInput)(nil)).Elem(), LoadBalancerApplicationStickyCookiePolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadBalancerApplicationStickyCookiePolicyArrayInput)(nil)).Elem(), LoadBalancerApplicationStickyCookiePolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadBalancerAttributesAccessLogInput)(nil)).Elem(), LoadBalancerAttributesAccessLogArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadBalancerAttributesAccessLogPtrInput)(nil)).Elem(), LoadBalancerAttributesAccessLogArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadBalancerAttributesApplicationStickyCookiePolicyInput)(nil)).Elem(), LoadBalancerAttributesApplicationStickyCookiePolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadBalancerAttributesApplicationStickyCookiePolicyArrayInput)(nil)).Elem(), LoadBalancerAttributesApplicationStickyCookiePolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadBalancerAttributesHealthCheckInput)(nil)).Elem(), LoadBalancerAttributesHealthCheckArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadBalancerAttributesHealthCheckPtrInput)(nil)).Elem(), LoadBalancerAttributesHealthCheckArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadBalancerAttributesListenerInput)(nil)).Elem(), LoadBalancerAttributesListenerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadBalancerAttributesListenerArrayInput)(nil)).Elem(), LoadBalancerAttributesListenerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadBalancerAttributesLoadBalancerStickyCookiePolicyInput)(nil)).Elem(), LoadBalancerAttributesLoadBalancerStickyCookiePolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadBalancerAttributesLoadBalancerStickyCookiePolicyArrayInput)(nil)).Elem(), LoadBalancerAttributesLoadBalancerStickyCookiePolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadBalancerAttributesSourceSecurityGroupInput)(nil)).Elem(), LoadBalancerAttributesSourceSecurityGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadBalancerAttributesSourceSecurityGroupArrayInput)(nil)).Elem(), LoadBalancerAttributesSourceSecurityGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadBalancerAttributesTagInput)(nil)).Elem(), LoadBalancerAttributesTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadBalancerAttributesTagArrayInput)(nil)).Elem(), LoadBalancerAttributesTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadBalancerHealthCheckInput)(nil)).Elem(), LoadBalancerHealthCheckArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadBalancerHealthCheckArrayInput)(nil)).Elem(), LoadBalancerHealthCheckArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadBalancerListenerInput)(nil)).Elem(), LoadBalancerListenerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadBalancerListenerArrayInput)(nil)).Elem(), LoadBalancerListenerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadBalancerListenerRuleListenerInput)(nil)).Elem(), LoadBalancerListenerRuleListenerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadBalancerListenerRuleListenerPtrInput)(nil)).Elem(), LoadBalancerListenerRuleListenerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadBalancerListenerRuleListenerRuleInput)(nil)).Elem(), LoadBalancerListenerRuleListenerRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadBalancerListenerRuleListenerRulePtrInput)(nil)).Elem(), LoadBalancerListenerRuleListenerRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadBalancerLoadBalancerStickyCookiePolicyInput)(nil)).Elem(), LoadBalancerLoadBalancerStickyCookiePolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadBalancerLoadBalancerStickyCookiePolicyArrayInput)(nil)).Elem(), LoadBalancerLoadBalancerStickyCookiePolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadBalancerPolicyAccessLogInput)(nil)).Elem(), LoadBalancerPolicyAccessLogArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadBalancerPolicyAccessLogArrayInput)(nil)).Elem(), LoadBalancerPolicyAccessLogArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadBalancerPolicyApplicationStickyCookiePolicyInput)(nil)).Elem(), LoadBalancerPolicyApplicationStickyCookiePolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadBalancerPolicyApplicationStickyCookiePolicyArrayInput)(nil)).Elem(), LoadBalancerPolicyApplicationStickyCookiePolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadBalancerPolicyHealthCheckInput)(nil)).Elem(), LoadBalancerPolicyHealthCheckArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadBalancerPolicyHealthCheckArrayInput)(nil)).Elem(), LoadBalancerPolicyHealthCheckArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadBalancerPolicyListenerInput)(nil)).Elem(), LoadBalancerPolicyListenerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadBalancerPolicyListenerArrayInput)(nil)).Elem(), LoadBalancerPolicyListenerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadBalancerPolicyLoadBalancerStickyCookiePolicyInput)(nil)).Elem(), LoadBalancerPolicyLoadBalancerStickyCookiePolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadBalancerPolicyLoadBalancerStickyCookiePolicyArrayInput)(nil)).Elem(), LoadBalancerPolicyLoadBalancerStickyCookiePolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadBalancerPolicySourceSecurityGroupInput)(nil)).Elem(), LoadBalancerPolicySourceSecurityGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadBalancerPolicySourceSecurityGroupArrayInput)(nil)).Elem(), LoadBalancerPolicySourceSecurityGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadBalancerPolicyTagInput)(nil)).Elem(), LoadBalancerPolicyTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadBalancerPolicyTagArrayInput)(nil)).Elem(), LoadBalancerPolicyTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadBalancerSourceSecurityGroupInput)(nil)).Elem(), LoadBalancerSourceSecurityGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadBalancerSourceSecurityGroupArrayInput)(nil)).Elem(), LoadBalancerSourceSecurityGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadBalancerTagInput)(nil)).Elem(), LoadBalancerTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadBalancerTagArrayInput)(nil)).Elem(), LoadBalancerTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadBalancerVmsTimeoutsInput)(nil)).Elem(), LoadBalancerVmsTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadBalancerVmsTimeoutsPtrInput)(nil)).Elem(), LoadBalancerVmsTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MainRouteTableLinkTimeoutsInput)(nil)).Elem(), MainRouteTableLinkTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MainRouteTableLinkTimeoutsPtrInput)(nil)).Elem(), MainRouteTableLinkTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NatServicePublicIpInput)(nil)).Elem(), NatServicePublicIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NatServicePublicIpArrayInput)(nil)).Elem(), NatServicePublicIpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NatServiceTagInput)(nil)).Elem(), NatServiceTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NatServiceTagArrayInput)(nil)).Elem(), NatServiceTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetAccessPointTagInput)(nil)).Elem(), NetAccessPointTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetAccessPointTagArrayInput)(nil)).Elem(), NetAccessPointTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetAccessPointTimeoutsInput)(nil)).Elem(), NetAccessPointTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetAccessPointTimeoutsPtrInput)(nil)).Elem(), NetAccessPointTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetAttributesTagInput)(nil)).Elem(), NetAttributesTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetAttributesTagArrayInput)(nil)).Elem(), NetAttributesTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetAttributesTimeoutsInput)(nil)).Elem(), NetAttributesTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetAttributesTimeoutsPtrInput)(nil)).Elem(), NetAttributesTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetPeeringAcceptationAccepterNetInput)(nil)).Elem(), NetPeeringAcceptationAccepterNetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetPeeringAcceptationAccepterNetArrayInput)(nil)).Elem(), NetPeeringAcceptationAccepterNetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetPeeringAcceptationSourceNetInput)(nil)).Elem(), NetPeeringAcceptationSourceNetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetPeeringAcceptationSourceNetArrayInput)(nil)).Elem(), NetPeeringAcceptationSourceNetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetPeeringAcceptationStateTypeInput)(nil)).Elem(), NetPeeringAcceptationStateTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetPeeringAcceptationStateTypeArrayInput)(nil)).Elem(), NetPeeringAcceptationStateTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetPeeringAcceptationTagInput)(nil)).Elem(), NetPeeringAcceptationTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetPeeringAcceptationTagArrayInput)(nil)).Elem(), NetPeeringAcceptationTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetPeeringAcceptationTimeoutsInput)(nil)).Elem(), NetPeeringAcceptationTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetPeeringAcceptationTimeoutsPtrInput)(nil)).Elem(), NetPeeringAcceptationTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetPeeringAccepterNetInput)(nil)).Elem(), NetPeeringAccepterNetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetPeeringAccepterNetArrayInput)(nil)).Elem(), NetPeeringAccepterNetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetPeeringSourceNetInput)(nil)).Elem(), NetPeeringSourceNetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetPeeringSourceNetArrayInput)(nil)).Elem(), NetPeeringSourceNetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetPeeringStateTypeInput)(nil)).Elem(), NetPeeringStateTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetPeeringStateTypeArrayInput)(nil)).Elem(), NetPeeringStateTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetPeeringTagInput)(nil)).Elem(), NetPeeringTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetPeeringTagArrayInput)(nil)).Elem(), NetPeeringTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetPeeringTimeoutsInput)(nil)).Elem(), NetPeeringTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetPeeringTimeoutsPtrInput)(nil)).Elem(), NetPeeringTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetTagInput)(nil)).Elem(), NetTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetTagArrayInput)(nil)).Elem(), NetTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetTimeoutsInput)(nil)).Elem(), NetTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetTimeoutsPtrInput)(nil)).Elem(), NetTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NicLinkNicInput)(nil)).Elem(), NicLinkNicArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NicLinkNicArrayInput)(nil)).Elem(), NicLinkNicArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NicLinkPublicIpInput)(nil)).Elem(), NicLinkPublicIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NicLinkPublicIpArrayInput)(nil)).Elem(), NicLinkPublicIpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NicPrivateIpTypeInput)(nil)).Elem(), NicPrivateIpTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NicPrivateIpTypeArrayInput)(nil)).Elem(), NicPrivateIpTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NicPrivateIpLinkPublicIpInput)(nil)).Elem(), NicPrivateIpLinkPublicIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NicPrivateIpLinkPublicIpArrayInput)(nil)).Elem(), NicPrivateIpLinkPublicIpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NicSecurityGroupInput)(nil)).Elem(), NicSecurityGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NicSecurityGroupArrayInput)(nil)).Elem(), NicSecurityGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NicTagInput)(nil)).Elem(), NicTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NicTagArrayInput)(nil)).Elem(), NicTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OutboundRuleRuleInput)(nil)).Elem(), OutboundRuleRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OutboundRuleRuleArrayInput)(nil)).Elem(), OutboundRuleRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OutboundRuleRuleSecurityGroupsMemberInput)(nil)).Elem(), OutboundRuleRuleSecurityGroupsMemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OutboundRuleRuleSecurityGroupsMemberArrayInput)(nil)).Elem(), OutboundRuleRuleSecurityGroupsMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderEndpointInput)(nil)).Elem(), ProviderEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderEndpointArrayInput)(nil)).Elem(), ProviderEndpointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PublicIpLinkTagInput)(nil)).Elem(), PublicIpLinkTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PublicIpLinkTagArrayInput)(nil)).Elem(), PublicIpLinkTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PublicIpTagInput)(nil)).Elem(), PublicIpTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PublicIpTagArrayInput)(nil)).Elem(), PublicIpTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteTableLinkRouteTableInput)(nil)).Elem(), RouteTableLinkRouteTableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteTableLinkRouteTableArrayInput)(nil)).Elem(), RouteTableLinkRouteTableArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteTableLinkTimeoutsInput)(nil)).Elem(), RouteTableLinkTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteTableLinkTimeoutsPtrInput)(nil)).Elem(), RouteTableLinkTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteTableRouteInput)(nil)).Elem(), RouteTableRouteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteTableRouteArrayInput)(nil)).Elem(), RouteTableRouteArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteTableRoutePropagatingVirtualGatewayInput)(nil)).Elem(), RouteTableRoutePropagatingVirtualGatewayArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteTableRoutePropagatingVirtualGatewayArrayInput)(nil)).Elem(), RouteTableRoutePropagatingVirtualGatewayArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteTableTagInput)(nil)).Elem(), RouteTableTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteTableTagArrayInput)(nil)).Elem(), RouteTableTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteTableTimeoutsInput)(nil)).Elem(), RouteTableTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteTableTimeoutsPtrInput)(nil)).Elem(), RouteTableTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteTimeoutsInput)(nil)).Elem(), RouteTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteTimeoutsPtrInput)(nil)).Elem(), RouteTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityGroupInboundRuleInput)(nil)).Elem(), SecurityGroupInboundRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityGroupInboundRuleArrayInput)(nil)).Elem(), SecurityGroupInboundRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityGroupOutboundRuleInput)(nil)).Elem(), SecurityGroupOutboundRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityGroupOutboundRuleArrayInput)(nil)).Elem(), SecurityGroupOutboundRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityGroupRuleRuleInput)(nil)).Elem(), SecurityGroupRuleRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityGroupRuleRuleArrayInput)(nil)).Elem(), SecurityGroupRuleRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityGroupRuleRuleSecurityGroupsMemberInput)(nil)).Elem(), SecurityGroupRuleRuleSecurityGroupsMemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityGroupRuleRuleSecurityGroupsMemberArrayInput)(nil)).Elem(), SecurityGroupRuleRuleSecurityGroupsMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityGroupTagInput)(nil)).Elem(), SecurityGroupTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityGroupTagArrayInput)(nil)).Elem(), SecurityGroupTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SnapshotAttributesPermissionsToCreateVolumeAdditionsInput)(nil)).Elem(), SnapshotAttributesPermissionsToCreateVolumeAdditionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SnapshotAttributesPermissionsToCreateVolumeAdditionsPtrInput)(nil)).Elem(), SnapshotAttributesPermissionsToCreateVolumeAdditionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SnapshotAttributesPermissionsToCreateVolumeRemovalInput)(nil)).Elem(), SnapshotAttributesPermissionsToCreateVolumeRemovalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SnapshotAttributesPermissionsToCreateVolumeRemovalArrayInput)(nil)).Elem(), SnapshotAttributesPermissionsToCreateVolumeRemovalArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SnapshotExportTaskOsuExportInput)(nil)).Elem(), SnapshotExportTaskOsuExportArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SnapshotExportTaskOsuExportArrayInput)(nil)).Elem(), SnapshotExportTaskOsuExportArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SnapshotExportTaskOsuExportOsuApiKeyInput)(nil)).Elem(), SnapshotExportTaskOsuExportOsuApiKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SnapshotExportTaskOsuExportOsuApiKeyArrayInput)(nil)).Elem(), SnapshotExportTaskOsuExportOsuApiKeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SnapshotExportTaskTagInput)(nil)).Elem(), SnapshotExportTaskTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SnapshotExportTaskTagArrayInput)(nil)).Elem(), SnapshotExportTaskTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SnapshotPermissionsToCreateVolumeInput)(nil)).Elem(), SnapshotPermissionsToCreateVolumeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SnapshotPermissionsToCreateVolumeArrayInput)(nil)).Elem(), SnapshotPermissionsToCreateVolumeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SnapshotTagInput)(nil)).Elem(), SnapshotTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SnapshotTagArrayInput)(nil)).Elem(), SnapshotTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetTagInput)(nil)).Elem(), SubnetTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetTagArrayInput)(nil)).Elem(), SubnetTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetTimeoutsInput)(nil)).Elem(), SubnetTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetTimeoutsPtrInput)(nil)).Elem(), SubnetTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TagTagInput)(nil)).Elem(), TagTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TagTagArrayInput)(nil)).Elem(), TagTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserGroupPolicyInput)(nil)).Elem(), UserGroupPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserGroupPolicyArrayInput)(nil)).Elem(), UserGroupPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserGroupUserInput)(nil)).Elem(), UserGroupUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserGroupUserArrayInput)(nil)).Elem(), UserGroupUserArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserPolicyInput)(nil)).Elem(), UserPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserPolicyArrayInput)(nil)).Elem(), UserPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewayLinkNetToVirtualGatewayLinkInput)(nil)).Elem(), VirtualGatewayLinkNetToVirtualGatewayLinkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewayLinkNetToVirtualGatewayLinkArrayInput)(nil)).Elem(), VirtualGatewayLinkNetToVirtualGatewayLinkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewayNetToVirtualGatewayLinkInput)(nil)).Elem(), VirtualGatewayNetToVirtualGatewayLinkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewayNetToVirtualGatewayLinkArrayInput)(nil)).Elem(), VirtualGatewayNetToVirtualGatewayLinkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewayTagInput)(nil)).Elem(), VirtualGatewayTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewayTagArrayInput)(nil)).Elem(), VirtualGatewayTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VmActionsOnNextBootInput)(nil)).Elem(), VmActionsOnNextBootArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VmActionsOnNextBootArrayInput)(nil)).Elem(), VmActionsOnNextBootArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VmBlockDeviceMappingInput)(nil)).Elem(), VmBlockDeviceMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VmBlockDeviceMappingArrayInput)(nil)).Elem(), VmBlockDeviceMappingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VmBlockDeviceMappingBsuInput)(nil)).Elem(), VmBlockDeviceMappingBsuArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VmBlockDeviceMappingBsuPtrInput)(nil)).Elem(), VmBlockDeviceMappingBsuArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VmBlockDeviceMappingBsuTagInput)(nil)).Elem(), VmBlockDeviceMappingBsuTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VmBlockDeviceMappingBsuTagArrayInput)(nil)).Elem(), VmBlockDeviceMappingBsuTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VmBlockDeviceMappingsCreatedInput)(nil)).Elem(), VmBlockDeviceMappingsCreatedArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VmBlockDeviceMappingsCreatedArrayInput)(nil)).Elem(), VmBlockDeviceMappingsCreatedArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VmBlockDeviceMappingsCreatedBsusInput)(nil)).Elem(), VmBlockDeviceMappingsCreatedBsusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VmBlockDeviceMappingsCreatedBsusArrayInput)(nil)).Elem(), VmBlockDeviceMappingsCreatedBsusArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VmBlockDeviceMappingsCreatedBsusTagInput)(nil)).Elem(), VmBlockDeviceMappingsCreatedBsusTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VmBlockDeviceMappingsCreatedBsusTagArrayInput)(nil)).Elem(), VmBlockDeviceMappingsCreatedBsusTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VmNicInput)(nil)).Elem(), VmNicArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VmNicArrayInput)(nil)).Elem(), VmNicArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VmNicLinkNicInput)(nil)).Elem(), VmNicLinkNicArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VmNicLinkNicArrayInput)(nil)).Elem(), VmNicLinkNicArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VmNicLinkPublicIpInput)(nil)).Elem(), VmNicLinkPublicIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VmNicLinkPublicIpArrayInput)(nil)).Elem(), VmNicLinkPublicIpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VmNicPrivateIpInput)(nil)).Elem(), VmNicPrivateIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VmNicPrivateIpArrayInput)(nil)).Elem(), VmNicPrivateIpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VmNicPrivateIpLinkPublicIpInput)(nil)).Elem(), VmNicPrivateIpLinkPublicIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VmNicPrivateIpLinkPublicIpArrayInput)(nil)).Elem(), VmNicPrivateIpLinkPublicIpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VmNicSecurityGroupInput)(nil)).Elem(), VmNicSecurityGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VmNicSecurityGroupArrayInput)(nil)).Elem(), VmNicSecurityGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VmPrimaryNicInput)(nil)).Elem(), VmPrimaryNicArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VmPrimaryNicArrayInput)(nil)).Elem(), VmPrimaryNicArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VmPrimaryNicLinkNicInput)(nil)).Elem(), VmPrimaryNicLinkNicArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VmPrimaryNicLinkNicArrayInput)(nil)).Elem(), VmPrimaryNicLinkNicArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VmPrimaryNicLinkPublicIpInput)(nil)).Elem(), VmPrimaryNicLinkPublicIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VmPrimaryNicLinkPublicIpArrayInput)(nil)).Elem(), VmPrimaryNicLinkPublicIpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VmPrimaryNicPrivateIpInput)(nil)).Elem(), VmPrimaryNicPrivateIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VmPrimaryNicPrivateIpArrayInput)(nil)).Elem(), VmPrimaryNicPrivateIpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VmPrimaryNicPrivateIpLinkPublicIpInput)(nil)).Elem(), VmPrimaryNicPrivateIpLinkPublicIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VmPrimaryNicPrivateIpLinkPublicIpArrayInput)(nil)).Elem(), VmPrimaryNicPrivateIpLinkPublicIpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VmPrimaryNicSecurityGroupInput)(nil)).Elem(), VmPrimaryNicSecurityGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VmPrimaryNicSecurityGroupArrayInput)(nil)).Elem(), VmPrimaryNicSecurityGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VmSecurityGroupInput)(nil)).Elem(), VmSecurityGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VmSecurityGroupArrayInput)(nil)).Elem(), VmSecurityGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VmTagInput)(nil)).Elem(), VmTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VmTagArrayInput)(nil)).Elem(), VmTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VolumeLinkTimeoutsInput)(nil)).Elem(), VolumeLinkTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VolumeLinkTimeoutsPtrInput)(nil)).Elem(), VolumeLinkTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VolumeLinkedVolumeInput)(nil)).Elem(), VolumeLinkedVolumeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VolumeLinkedVolumeArrayInput)(nil)).Elem(), VolumeLinkedVolumeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VolumeTagInput)(nil)).Elem(), VolumeTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VolumeTagArrayInput)(nil)).Elem(), VolumeTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VolumeTimeoutsInput)(nil)).Elem(), VolumeTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VolumeTimeoutsPtrInput)(nil)).Elem(), VolumeTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnConnectionRouteTypeInput)(nil)).Elem(), VpnConnectionRouteTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnConnectionRouteTypeArrayInput)(nil)).Elem(), VpnConnectionRouteTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnConnectionTagInput)(nil)).Elem(), VpnConnectionTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnConnectionTagArrayInput)(nil)).Elem(), VpnConnectionTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnConnectionVgwTelemetryInput)(nil)).Elem(), VpnConnectionVgwTelemetryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnConnectionVgwTelemetryArrayInput)(nil)).Elem(), VpnConnectionVgwTelemetryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAccessKeyFilterInput)(nil)).Elem(), GetAccessKeyFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAccessKeyFilterArrayInput)(nil)).Elem(), GetAccessKeyFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAccessKeysAccessKeyInput)(nil)).Elem(), GetAccessKeysAccessKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAccessKeysAccessKeyArrayInput)(nil)).Elem(), GetAccessKeysAccessKeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAccessKeysFilterInput)(nil)).Elem(), GetAccessKeysFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAccessKeysFilterArrayInput)(nil)).Elem(), GetAccessKeysFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAccountsAccountInput)(nil)).Elem(), GetAccountsAccountArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAccountsAccountArrayInput)(nil)).Elem(), GetAccountsAccountArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApiAccessRuleFilterInput)(nil)).Elem(), GetApiAccessRuleFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApiAccessRuleFilterArrayInput)(nil)).Elem(), GetApiAccessRuleFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApiAccessRulesApiAccessRuleInput)(nil)).Elem(), GetApiAccessRulesApiAccessRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApiAccessRulesApiAccessRuleArrayInput)(nil)).Elem(), GetApiAccessRulesApiAccessRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApiAccessRulesFilterInput)(nil)).Elem(), GetApiAccessRulesFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApiAccessRulesFilterArrayInput)(nil)).Elem(), GetApiAccessRulesFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCaFilterInput)(nil)).Elem(), GetCaFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCaFilterArrayInput)(nil)).Elem(), GetCaFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCasCaInput)(nil)).Elem(), GetCasCaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCasCaArrayInput)(nil)).Elem(), GetCasCaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCasFilterInput)(nil)).Elem(), GetCasFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCasFilterArrayInput)(nil)).Elem(), GetCasFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientGatewayFilterInput)(nil)).Elem(), GetClientGatewayFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientGatewayFilterArrayInput)(nil)).Elem(), GetClientGatewayFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientGatewayTagInput)(nil)).Elem(), GetClientGatewayTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientGatewayTagArrayInput)(nil)).Elem(), GetClientGatewayTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientGatewaysClientGatewayInput)(nil)).Elem(), GetClientGatewaysClientGatewayArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientGatewaysClientGatewayArrayInput)(nil)).Elem(), GetClientGatewaysClientGatewayArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientGatewaysClientGatewayTagInput)(nil)).Elem(), GetClientGatewaysClientGatewayTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientGatewaysClientGatewayTagArrayInput)(nil)).Elem(), GetClientGatewaysClientGatewayTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientGatewaysFilterInput)(nil)).Elem(), GetClientGatewaysFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientGatewaysFilterArrayInput)(nil)).Elem(), GetClientGatewaysFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDhcpOptionFilterInput)(nil)).Elem(), GetDhcpOptionFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDhcpOptionFilterArrayInput)(nil)).Elem(), GetDhcpOptionFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDhcpOptionTagInput)(nil)).Elem(), GetDhcpOptionTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDhcpOptionTagArrayInput)(nil)).Elem(), GetDhcpOptionTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDhcpOptionsDhcpOptionInput)(nil)).Elem(), GetDhcpOptionsDhcpOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDhcpOptionsDhcpOptionArrayInput)(nil)).Elem(), GetDhcpOptionsDhcpOptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDhcpOptionsDhcpOptionTagInput)(nil)).Elem(), GetDhcpOptionsDhcpOptionTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDhcpOptionsDhcpOptionTagArrayInput)(nil)).Elem(), GetDhcpOptionsDhcpOptionTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDhcpOptionsFilterInput)(nil)).Elem(), GetDhcpOptionsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDhcpOptionsFilterArrayInput)(nil)).Elem(), GetDhcpOptionsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEntitiesLinkedToPolicyPolicyEntityInput)(nil)).Elem(), GetEntitiesLinkedToPolicyPolicyEntityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEntitiesLinkedToPolicyPolicyEntityArrayInput)(nil)).Elem(), GetEntitiesLinkedToPolicyPolicyEntityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEntitiesLinkedToPolicyPolicyEntityAccountInput)(nil)).Elem(), GetEntitiesLinkedToPolicyPolicyEntityAccountArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEntitiesLinkedToPolicyPolicyEntityAccountArrayInput)(nil)).Elem(), GetEntitiesLinkedToPolicyPolicyEntityAccountArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEntitiesLinkedToPolicyPolicyEntityGroupInput)(nil)).Elem(), GetEntitiesLinkedToPolicyPolicyEntityGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEntitiesLinkedToPolicyPolicyEntityGroupArrayInput)(nil)).Elem(), GetEntitiesLinkedToPolicyPolicyEntityGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEntitiesLinkedToPolicyPolicyEntityUserInput)(nil)).Elem(), GetEntitiesLinkedToPolicyPolicyEntityUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEntitiesLinkedToPolicyPolicyEntityUserArrayInput)(nil)).Elem(), GetEntitiesLinkedToPolicyPolicyEntityUserArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFlexibleGpuCatalogFilterInput)(nil)).Elem(), GetFlexibleGpuCatalogFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFlexibleGpuCatalogFilterArrayInput)(nil)).Elem(), GetFlexibleGpuCatalogFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFlexibleGpuCatalogFlexibleGpuCatalogInput)(nil)).Elem(), GetFlexibleGpuCatalogFlexibleGpuCatalogArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFlexibleGpuCatalogFlexibleGpuCatalogArrayInput)(nil)).Elem(), GetFlexibleGpuCatalogFlexibleGpuCatalogArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFlexibleGpuFilterInput)(nil)).Elem(), GetFlexibleGpuFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFlexibleGpuFilterArrayInput)(nil)).Elem(), GetFlexibleGpuFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFlexibleGpusFilterInput)(nil)).Elem(), GetFlexibleGpusFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFlexibleGpusFilterArrayInput)(nil)).Elem(), GetFlexibleGpusFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFlexibleGpusFlexibleGpusInput)(nil)).Elem(), GetFlexibleGpusFlexibleGpusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFlexibleGpusFlexibleGpusArrayInput)(nil)).Elem(), GetFlexibleGpusFlexibleGpusArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetImageBlockDeviceMappingInput)(nil)).Elem(), GetImageBlockDeviceMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetImageBlockDeviceMappingArrayInput)(nil)).Elem(), GetImageBlockDeviceMappingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetImageBlockDeviceMappingBsusInput)(nil)).Elem(), GetImageBlockDeviceMappingBsusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetImageBlockDeviceMappingBsusArrayInput)(nil)).Elem(), GetImageBlockDeviceMappingBsusArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetImageExportTaskFilterInput)(nil)).Elem(), GetImageExportTaskFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetImageExportTaskFilterArrayInput)(nil)).Elem(), GetImageExportTaskFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetImageExportTaskOsuExportInput)(nil)).Elem(), GetImageExportTaskOsuExportArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetImageExportTaskOsuExportArrayInput)(nil)).Elem(), GetImageExportTaskOsuExportArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetImageExportTaskTagInput)(nil)).Elem(), GetImageExportTaskTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetImageExportTaskTagArrayInput)(nil)).Elem(), GetImageExportTaskTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetImageExportTasksFilterInput)(nil)).Elem(), GetImageExportTasksFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetImageExportTasksFilterArrayInput)(nil)).Elem(), GetImageExportTasksFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetImageExportTasksImageExportTaskInput)(nil)).Elem(), GetImageExportTasksImageExportTaskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetImageExportTasksImageExportTaskArrayInput)(nil)).Elem(), GetImageExportTasksImageExportTaskArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetImageExportTasksImageExportTaskOsuExportInput)(nil)).Elem(), GetImageExportTasksImageExportTaskOsuExportArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetImageExportTasksImageExportTaskOsuExportArrayInput)(nil)).Elem(), GetImageExportTasksImageExportTaskOsuExportArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetImageExportTasksImageExportTaskTagInput)(nil)).Elem(), GetImageExportTasksImageExportTaskTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetImageExportTasksImageExportTaskTagArrayInput)(nil)).Elem(), GetImageExportTasksImageExportTaskTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetImageFilterInput)(nil)).Elem(), GetImageFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetImageFilterArrayInput)(nil)).Elem(), GetImageFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetImagePermissionsToLaunchInput)(nil)).Elem(), GetImagePermissionsToLaunchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetImagePermissionsToLaunchArrayInput)(nil)).Elem(), GetImagePermissionsToLaunchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetImageStateCommentInput)(nil)).Elem(), GetImageStateCommentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetImageStateCommentArrayInput)(nil)).Elem(), GetImageStateCommentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetImageTagInput)(nil)).Elem(), GetImageTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetImageTagArrayInput)(nil)).Elem(), GetImageTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetImagesFilterInput)(nil)).Elem(), GetImagesFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetImagesFilterArrayInput)(nil)).Elem(), GetImagesFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetImagesImageInput)(nil)).Elem(), GetImagesImageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetImagesImageArrayInput)(nil)).Elem(), GetImagesImageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetImagesImageBlockDeviceMappingInput)(nil)).Elem(), GetImagesImageBlockDeviceMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetImagesImageBlockDeviceMappingArrayInput)(nil)).Elem(), GetImagesImageBlockDeviceMappingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetImagesImageBlockDeviceMappingBsusInput)(nil)).Elem(), GetImagesImageBlockDeviceMappingBsusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetImagesImageBlockDeviceMappingBsusArrayInput)(nil)).Elem(), GetImagesImageBlockDeviceMappingBsusArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetImagesImagePermissionsToLaunchInput)(nil)).Elem(), GetImagesImagePermissionsToLaunchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetImagesImagePermissionsToLaunchArrayInput)(nil)).Elem(), GetImagesImagePermissionsToLaunchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetImagesImageStateCommentInput)(nil)).Elem(), GetImagesImageStateCommentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetImagesImageStateCommentArrayInput)(nil)).Elem(), GetImagesImageStateCommentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetImagesImageTagInput)(nil)).Elem(), GetImagesImageTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetImagesImageTagArrayInput)(nil)).Elem(), GetImagesImageTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInternetServiceFilterInput)(nil)).Elem(), GetInternetServiceFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInternetServiceFilterArrayInput)(nil)).Elem(), GetInternetServiceFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInternetServiceTagInput)(nil)).Elem(), GetInternetServiceTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInternetServiceTagArrayInput)(nil)).Elem(), GetInternetServiceTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInternetServicesFilterInput)(nil)).Elem(), GetInternetServicesFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInternetServicesFilterArrayInput)(nil)).Elem(), GetInternetServicesFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInternetServicesInternetServiceInput)(nil)).Elem(), GetInternetServicesInternetServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInternetServicesInternetServiceArrayInput)(nil)).Elem(), GetInternetServicesInternetServiceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInternetServicesInternetServiceTagInput)(nil)).Elem(), GetInternetServicesInternetServiceTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInternetServicesInternetServiceTagArrayInput)(nil)).Elem(), GetInternetServicesInternetServiceTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKeypairFilterInput)(nil)).Elem(), GetKeypairFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKeypairFilterArrayInput)(nil)).Elem(), GetKeypairFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKeypairTagInput)(nil)).Elem(), GetKeypairTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKeypairTagArrayInput)(nil)).Elem(), GetKeypairTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKeypairsFilterInput)(nil)).Elem(), GetKeypairsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKeypairsFilterArrayInput)(nil)).Elem(), GetKeypairsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKeypairsKeypairInput)(nil)).Elem(), GetKeypairsKeypairArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKeypairsKeypairArrayInput)(nil)).Elem(), GetKeypairsKeypairArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKeypairsKeypairTagInput)(nil)).Elem(), GetKeypairsKeypairTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKeypairsKeypairTagArrayInput)(nil)).Elem(), GetKeypairsKeypairTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLoadBalancerAccessLogInput)(nil)).Elem(), GetLoadBalancerAccessLogArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLoadBalancerAccessLogArrayInput)(nil)).Elem(), GetLoadBalancerAccessLogArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLoadBalancerApplicationStickyCookiePolicyInput)(nil)).Elem(), GetLoadBalancerApplicationStickyCookiePolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLoadBalancerApplicationStickyCookiePolicyArrayInput)(nil)).Elem(), GetLoadBalancerApplicationStickyCookiePolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLoadBalancerFilterInput)(nil)).Elem(), GetLoadBalancerFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLoadBalancerFilterArrayInput)(nil)).Elem(), GetLoadBalancerFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLoadBalancerHealthCheckInput)(nil)).Elem(), GetLoadBalancerHealthCheckArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLoadBalancerHealthCheckArrayInput)(nil)).Elem(), GetLoadBalancerHealthCheckArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLoadBalancerListenerInput)(nil)).Elem(), GetLoadBalancerListenerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLoadBalancerListenerArrayInput)(nil)).Elem(), GetLoadBalancerListenerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLoadBalancerListenerRuleFilterInput)(nil)).Elem(), GetLoadBalancerListenerRuleFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLoadBalancerListenerRuleFilterArrayInput)(nil)).Elem(), GetLoadBalancerListenerRuleFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLoadBalancerListenerRulesFilterInput)(nil)).Elem(), GetLoadBalancerListenerRulesFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLoadBalancerListenerRulesFilterArrayInput)(nil)).Elem(), GetLoadBalancerListenerRulesFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLoadBalancerListenerRulesListenerRuleInput)(nil)).Elem(), GetLoadBalancerListenerRulesListenerRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLoadBalancerListenerRulesListenerRuleArrayInput)(nil)).Elem(), GetLoadBalancerListenerRulesListenerRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLoadBalancerLoadBalancerStickyCookiePolicyInput)(nil)).Elem(), GetLoadBalancerLoadBalancerStickyCookiePolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLoadBalancerLoadBalancerStickyCookiePolicyArrayInput)(nil)).Elem(), GetLoadBalancerLoadBalancerStickyCookiePolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLoadBalancerSourceSecurityGroupInput)(nil)).Elem(), GetLoadBalancerSourceSecurityGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLoadBalancerSourceSecurityGroupArrayInput)(nil)).Elem(), GetLoadBalancerSourceSecurityGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLoadBalancerTagInput)(nil)).Elem(), GetLoadBalancerTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLoadBalancerTagArrayInput)(nil)).Elem(), GetLoadBalancerTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLoadBalancerTagsFilterInput)(nil)).Elem(), GetLoadBalancerTagsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLoadBalancerTagsFilterArrayInput)(nil)).Elem(), GetLoadBalancerTagsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLoadBalancerTagsTagInput)(nil)).Elem(), GetLoadBalancerTagsTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLoadBalancerTagsTagArrayInput)(nil)).Elem(), GetLoadBalancerTagsTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLoadBalancerVmHealthBackendVmHealthInput)(nil)).Elem(), GetLoadBalancerVmHealthBackendVmHealthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLoadBalancerVmHealthBackendVmHealthArrayInput)(nil)).Elem(), GetLoadBalancerVmHealthBackendVmHealthArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLoadBalancerVmHealthFilterInput)(nil)).Elem(), GetLoadBalancerVmHealthFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLoadBalancerVmHealthFilterArrayInput)(nil)).Elem(), GetLoadBalancerVmHealthFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLoadBalancersFilterInput)(nil)).Elem(), GetLoadBalancersFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLoadBalancersFilterArrayInput)(nil)).Elem(), GetLoadBalancersFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLoadBalancersLoadBalancerInput)(nil)).Elem(), GetLoadBalancersLoadBalancerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLoadBalancersLoadBalancerArrayInput)(nil)).Elem(), GetLoadBalancersLoadBalancerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLoadBalancersLoadBalancerAccessLogInput)(nil)).Elem(), GetLoadBalancersLoadBalancerAccessLogArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLoadBalancersLoadBalancerAccessLogArrayInput)(nil)).Elem(), GetLoadBalancersLoadBalancerAccessLogArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLoadBalancersLoadBalancerApplicationStickyCookiePolicyInput)(nil)).Elem(), GetLoadBalancersLoadBalancerApplicationStickyCookiePolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLoadBalancersLoadBalancerApplicationStickyCookiePolicyArrayInput)(nil)).Elem(), GetLoadBalancersLoadBalancerApplicationStickyCookiePolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLoadBalancersLoadBalancerBackendVmIdInput)(nil)).Elem(), GetLoadBalancersLoadBalancerBackendVmIdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLoadBalancersLoadBalancerBackendVmIdArrayInput)(nil)).Elem(), GetLoadBalancersLoadBalancerBackendVmIdArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLoadBalancersLoadBalancerHealthCheckInput)(nil)).Elem(), GetLoadBalancersLoadBalancerHealthCheckArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLoadBalancersLoadBalancerHealthCheckArrayInput)(nil)).Elem(), GetLoadBalancersLoadBalancerHealthCheckArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLoadBalancersLoadBalancerListenerInput)(nil)).Elem(), GetLoadBalancersLoadBalancerListenerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLoadBalancersLoadBalancerListenerArrayInput)(nil)).Elem(), GetLoadBalancersLoadBalancerListenerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLoadBalancersLoadBalancerLoadBalancerStickyCookiePolicyInput)(nil)).Elem(), GetLoadBalancersLoadBalancerLoadBalancerStickyCookiePolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLoadBalancersLoadBalancerLoadBalancerStickyCookiePolicyArrayInput)(nil)).Elem(), GetLoadBalancersLoadBalancerLoadBalancerStickyCookiePolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLoadBalancersLoadBalancerSourceSecurityGroupInput)(nil)).Elem(), GetLoadBalancersLoadBalancerSourceSecurityGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLoadBalancersLoadBalancerSourceSecurityGroupArrayInput)(nil)).Elem(), GetLoadBalancersLoadBalancerSourceSecurityGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLoadBalancersLoadBalancerTagInput)(nil)).Elem(), GetLoadBalancersLoadBalancerTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLoadBalancersLoadBalancerTagArrayInput)(nil)).Elem(), GetLoadBalancersLoadBalancerTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNatServiceFilterInput)(nil)).Elem(), GetNatServiceFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNatServiceFilterArrayInput)(nil)).Elem(), GetNatServiceFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNatServicePublicIpInput)(nil)).Elem(), GetNatServicePublicIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNatServicePublicIpArrayInput)(nil)).Elem(), GetNatServicePublicIpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNatServiceTagInput)(nil)).Elem(), GetNatServiceTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNatServiceTagArrayInput)(nil)).Elem(), GetNatServiceTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNatServicesFilterInput)(nil)).Elem(), GetNatServicesFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNatServicesFilterArrayInput)(nil)).Elem(), GetNatServicesFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNatServicesNatServiceInput)(nil)).Elem(), GetNatServicesNatServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNatServicesNatServiceArrayInput)(nil)).Elem(), GetNatServicesNatServiceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNatServicesNatServicePublicIpInput)(nil)).Elem(), GetNatServicesNatServicePublicIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNatServicesNatServicePublicIpArrayInput)(nil)).Elem(), GetNatServicesNatServicePublicIpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNatServicesNatServiceTagInput)(nil)).Elem(), GetNatServicesNatServiceTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNatServicesNatServiceTagArrayInput)(nil)).Elem(), GetNatServicesNatServiceTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetAccessPointFilterInput)(nil)).Elem(), GetNetAccessPointFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetAccessPointFilterArrayInput)(nil)).Elem(), GetNetAccessPointFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetAccessPointServicesFilterInput)(nil)).Elem(), GetNetAccessPointServicesFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetAccessPointServicesFilterArrayInput)(nil)).Elem(), GetNetAccessPointServicesFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetAccessPointServicesServiceInput)(nil)).Elem(), GetNetAccessPointServicesServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetAccessPointServicesServiceArrayInput)(nil)).Elem(), GetNetAccessPointServicesServiceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetAccessPointTagInput)(nil)).Elem(), GetNetAccessPointTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetAccessPointTagArrayInput)(nil)).Elem(), GetNetAccessPointTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetAccessPointsFilterInput)(nil)).Elem(), GetNetAccessPointsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetAccessPointsFilterArrayInput)(nil)).Elem(), GetNetAccessPointsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetAccessPointsNetAccessPointInput)(nil)).Elem(), GetNetAccessPointsNetAccessPointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetAccessPointsNetAccessPointArrayInput)(nil)).Elem(), GetNetAccessPointsNetAccessPointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetAccessPointsNetAccessPointTagInput)(nil)).Elem(), GetNetAccessPointsNetAccessPointTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetAccessPointsNetAccessPointTagArrayInput)(nil)).Elem(), GetNetAccessPointsNetAccessPointTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetAttributesTagInput)(nil)).Elem(), GetNetAttributesTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetAttributesTagArrayInput)(nil)).Elem(), GetNetAttributesTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetFilterInput)(nil)).Elem(), GetNetFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetFilterArrayInput)(nil)).Elem(), GetNetFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetPeeringAccepterNetInput)(nil)).Elem(), GetNetPeeringAccepterNetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetPeeringAccepterNetArrayInput)(nil)).Elem(), GetNetPeeringAccepterNetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetPeeringFilterInput)(nil)).Elem(), GetNetPeeringFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetPeeringFilterArrayInput)(nil)).Elem(), GetNetPeeringFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetPeeringSourceNetInput)(nil)).Elem(), GetNetPeeringSourceNetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetPeeringSourceNetArrayInput)(nil)).Elem(), GetNetPeeringSourceNetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetPeeringStateInput)(nil)).Elem(), GetNetPeeringStateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetPeeringStateArrayInput)(nil)).Elem(), GetNetPeeringStateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetPeeringTagInput)(nil)).Elem(), GetNetPeeringTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetPeeringTagArrayInput)(nil)).Elem(), GetNetPeeringTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetPeeringsFilterInput)(nil)).Elem(), GetNetPeeringsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetPeeringsFilterArrayInput)(nil)).Elem(), GetNetPeeringsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetPeeringsNetPeeringInput)(nil)).Elem(), GetNetPeeringsNetPeeringArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetPeeringsNetPeeringArrayInput)(nil)).Elem(), GetNetPeeringsNetPeeringArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetPeeringsNetPeeringAccepterNetInput)(nil)).Elem(), GetNetPeeringsNetPeeringAccepterNetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetPeeringsNetPeeringAccepterNetArrayInput)(nil)).Elem(), GetNetPeeringsNetPeeringAccepterNetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetPeeringsNetPeeringSourceNetInput)(nil)).Elem(), GetNetPeeringsNetPeeringSourceNetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetPeeringsNetPeeringSourceNetArrayInput)(nil)).Elem(), GetNetPeeringsNetPeeringSourceNetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetPeeringsNetPeeringStateInput)(nil)).Elem(), GetNetPeeringsNetPeeringStateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetPeeringsNetPeeringStateArrayInput)(nil)).Elem(), GetNetPeeringsNetPeeringStateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetPeeringsNetPeeringTagInput)(nil)).Elem(), GetNetPeeringsNetPeeringTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetPeeringsNetPeeringTagArrayInput)(nil)).Elem(), GetNetPeeringsNetPeeringTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetTagInput)(nil)).Elem(), GetNetTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetTagArrayInput)(nil)).Elem(), GetNetTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetsFilterInput)(nil)).Elem(), GetNetsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetsFilterArrayInput)(nil)).Elem(), GetNetsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetsNetInput)(nil)).Elem(), GetNetsNetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetsNetArrayInput)(nil)).Elem(), GetNetsNetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetsNetTagInput)(nil)).Elem(), GetNetsNetTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetsNetTagArrayInput)(nil)).Elem(), GetNetsNetTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNicFilterInput)(nil)).Elem(), GetNicFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNicFilterArrayInput)(nil)).Elem(), GetNicFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNicLinkNicInput)(nil)).Elem(), GetNicLinkNicArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNicLinkNicArrayInput)(nil)).Elem(), GetNicLinkNicArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNicLinkPublicIpInput)(nil)).Elem(), GetNicLinkPublicIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNicLinkPublicIpArrayInput)(nil)).Elem(), GetNicLinkPublicIpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNicPrivateIpTypeInput)(nil)).Elem(), GetNicPrivateIpTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNicPrivateIpTypeArrayInput)(nil)).Elem(), GetNicPrivateIpTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNicPrivateIpLinkPublicIpInput)(nil)).Elem(), GetNicPrivateIpLinkPublicIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNicPrivateIpLinkPublicIpArrayInput)(nil)).Elem(), GetNicPrivateIpLinkPublicIpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNicSecurityGroupInput)(nil)).Elem(), GetNicSecurityGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNicSecurityGroupArrayInput)(nil)).Elem(), GetNicSecurityGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNicTagInput)(nil)).Elem(), GetNicTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNicTagArrayInput)(nil)).Elem(), GetNicTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNicsFilterInput)(nil)).Elem(), GetNicsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNicsFilterArrayInput)(nil)).Elem(), GetNicsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNicsNicInput)(nil)).Elem(), GetNicsNicArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNicsNicArrayInput)(nil)).Elem(), GetNicsNicArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNicsNicLinkNicInput)(nil)).Elem(), GetNicsNicLinkNicArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNicsNicLinkNicArrayInput)(nil)).Elem(), GetNicsNicLinkNicArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNicsNicLinkPublicIpInput)(nil)).Elem(), GetNicsNicLinkPublicIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNicsNicLinkPublicIpArrayInput)(nil)).Elem(), GetNicsNicLinkPublicIpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNicsNicPrivateIpInput)(nil)).Elem(), GetNicsNicPrivateIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNicsNicPrivateIpArrayInput)(nil)).Elem(), GetNicsNicPrivateIpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNicsNicPrivateIpLinkPublicIpInput)(nil)).Elem(), GetNicsNicPrivateIpLinkPublicIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNicsNicPrivateIpLinkPublicIpArrayInput)(nil)).Elem(), GetNicsNicPrivateIpLinkPublicIpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNicsNicSecurityGroupInput)(nil)).Elem(), GetNicsNicSecurityGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNicsNicSecurityGroupArrayInput)(nil)).Elem(), GetNicsNicSecurityGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNicsNicTagInput)(nil)).Elem(), GetNicsNicTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNicsNicTagArrayInput)(nil)).Elem(), GetNicsNicTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPoliciesFilterInput)(nil)).Elem(), GetPoliciesFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPoliciesFilterArrayInput)(nil)).Elem(), GetPoliciesFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPoliciesLinkedToUserGroupFilterInput)(nil)).Elem(), GetPoliciesLinkedToUserGroupFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPoliciesLinkedToUserGroupFilterArrayInput)(nil)).Elem(), GetPoliciesLinkedToUserGroupFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPoliciesLinkedToUserGroupPolicyInput)(nil)).Elem(), GetPoliciesLinkedToUserGroupPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPoliciesLinkedToUserGroupPolicyArrayInput)(nil)).Elem(), GetPoliciesLinkedToUserGroupPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPoliciesLinkedToUserPolicyInput)(nil)).Elem(), GetPoliciesLinkedToUserPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPoliciesLinkedToUserPolicyArrayInput)(nil)).Elem(), GetPoliciesLinkedToUserPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPoliciesPolicyInput)(nil)).Elem(), GetPoliciesPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPoliciesPolicyArrayInput)(nil)).Elem(), GetPoliciesPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProductTypeFilterInput)(nil)).Elem(), GetProductTypeFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProductTypeFilterArrayInput)(nil)).Elem(), GetProductTypeFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProductTypesFilterInput)(nil)).Elem(), GetProductTypesFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProductTypesFilterArrayInput)(nil)).Elem(), GetProductTypesFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProductTypesProductTypeInput)(nil)).Elem(), GetProductTypesProductTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProductTypesProductTypeArrayInput)(nil)).Elem(), GetProductTypesProductTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPublicCatalogCatalogInput)(nil)).Elem(), GetPublicCatalogCatalogArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPublicCatalogCatalogArrayInput)(nil)).Elem(), GetPublicCatalogCatalogArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPublicCatalogCatalogEntryInput)(nil)).Elem(), GetPublicCatalogCatalogEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPublicCatalogCatalogEntryArrayInput)(nil)).Elem(), GetPublicCatalogCatalogEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPublicIpFilterInput)(nil)).Elem(), GetPublicIpFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPublicIpFilterArrayInput)(nil)).Elem(), GetPublicIpFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPublicIpTagInput)(nil)).Elem(), GetPublicIpTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPublicIpTagArrayInput)(nil)).Elem(), GetPublicIpTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPublicIpsFilterInput)(nil)).Elem(), GetPublicIpsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPublicIpsFilterArrayInput)(nil)).Elem(), GetPublicIpsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPublicIpsPublicIpInput)(nil)).Elem(), GetPublicIpsPublicIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPublicIpsPublicIpArrayInput)(nil)).Elem(), GetPublicIpsPublicIpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPublicIpsPublicIpTagInput)(nil)).Elem(), GetPublicIpsPublicIpTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPublicIpsPublicIpTagArrayInput)(nil)).Elem(), GetPublicIpsPublicIpTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetQuotaFilterInput)(nil)).Elem(), GetQuotaFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetQuotaFilterArrayInput)(nil)).Elem(), GetQuotaFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetQuotasFilterInput)(nil)).Elem(), GetQuotasFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetQuotasFilterArrayInput)(nil)).Elem(), GetQuotasFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetQuotasQuotaInput)(nil)).Elem(), GetQuotasQuotaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetQuotasQuotaArrayInput)(nil)).Elem(), GetQuotasQuotaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRegionsRegionInput)(nil)).Elem(), GetRegionsRegionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRegionsRegionArrayInput)(nil)).Elem(), GetRegionsRegionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteTableFilterInput)(nil)).Elem(), GetRouteTableFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteTableFilterArrayInput)(nil)).Elem(), GetRouteTableFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteTableLinkRouteTableInput)(nil)).Elem(), GetRouteTableLinkRouteTableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteTableLinkRouteTableArrayInput)(nil)).Elem(), GetRouteTableLinkRouteTableArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteTableRouteInput)(nil)).Elem(), GetRouteTableRouteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteTableRouteArrayInput)(nil)).Elem(), GetRouteTableRouteArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteTableRoutePropagatingVirtualGatewayInput)(nil)).Elem(), GetRouteTableRoutePropagatingVirtualGatewayArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteTableRoutePropagatingVirtualGatewayArrayInput)(nil)).Elem(), GetRouteTableRoutePropagatingVirtualGatewayArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteTableTagInput)(nil)).Elem(), GetRouteTableTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteTableTagArrayInput)(nil)).Elem(), GetRouteTableTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteTablesFilterInput)(nil)).Elem(), GetRouteTablesFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteTablesFilterArrayInput)(nil)).Elem(), GetRouteTablesFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteTablesRouteTableInput)(nil)).Elem(), GetRouteTablesRouteTableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteTablesRouteTableArrayInput)(nil)).Elem(), GetRouteTablesRouteTableArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteTablesRouteTableLinkRouteTableInput)(nil)).Elem(), GetRouteTablesRouteTableLinkRouteTableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteTablesRouteTableLinkRouteTableArrayInput)(nil)).Elem(), GetRouteTablesRouteTableLinkRouteTableArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteTablesRouteTableRouteInput)(nil)).Elem(), GetRouteTablesRouteTableRouteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteTablesRouteTableRouteArrayInput)(nil)).Elem(), GetRouteTablesRouteTableRouteArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteTablesRouteTableRoutePropagatingVirtualGatewayInput)(nil)).Elem(), GetRouteTablesRouteTableRoutePropagatingVirtualGatewayArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteTablesRouteTableRoutePropagatingVirtualGatewayArrayInput)(nil)).Elem(), GetRouteTablesRouteTableRoutePropagatingVirtualGatewayArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteTablesRouteTableTagInput)(nil)).Elem(), GetRouteTablesRouteTableTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteTablesRouteTableTagArrayInput)(nil)).Elem(), GetRouteTablesRouteTableTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityGroupFilterInput)(nil)).Elem(), GetSecurityGroupFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityGroupFilterArrayInput)(nil)).Elem(), GetSecurityGroupFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityGroupInboundRuleInput)(nil)).Elem(), GetSecurityGroupInboundRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityGroupInboundRuleArrayInput)(nil)).Elem(), GetSecurityGroupInboundRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityGroupInboundRuleSecurityGroupsMemberInput)(nil)).Elem(), GetSecurityGroupInboundRuleSecurityGroupsMemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityGroupInboundRuleSecurityGroupsMemberArrayInput)(nil)).Elem(), GetSecurityGroupInboundRuleSecurityGroupsMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityGroupOutboundRuleInput)(nil)).Elem(), GetSecurityGroupOutboundRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityGroupOutboundRuleArrayInput)(nil)).Elem(), GetSecurityGroupOutboundRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityGroupOutboundRuleSecurityGroupsMemberInput)(nil)).Elem(), GetSecurityGroupOutboundRuleSecurityGroupsMemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityGroupOutboundRuleSecurityGroupsMemberArrayInput)(nil)).Elem(), GetSecurityGroupOutboundRuleSecurityGroupsMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityGroupTagInput)(nil)).Elem(), GetSecurityGroupTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityGroupTagArrayInput)(nil)).Elem(), GetSecurityGroupTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityGroupsFilterInput)(nil)).Elem(), GetSecurityGroupsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityGroupsFilterArrayInput)(nil)).Elem(), GetSecurityGroupsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityGroupsSecurityGroupInput)(nil)).Elem(), GetSecurityGroupsSecurityGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityGroupsSecurityGroupArrayInput)(nil)).Elem(), GetSecurityGroupsSecurityGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityGroupsSecurityGroupInboundRuleInput)(nil)).Elem(), GetSecurityGroupsSecurityGroupInboundRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityGroupsSecurityGroupInboundRuleArrayInput)(nil)).Elem(), GetSecurityGroupsSecurityGroupInboundRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityGroupsSecurityGroupInboundRuleSecurityGroupsMemberInput)(nil)).Elem(), GetSecurityGroupsSecurityGroupInboundRuleSecurityGroupsMemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityGroupsSecurityGroupInboundRuleSecurityGroupsMemberArrayInput)(nil)).Elem(), GetSecurityGroupsSecurityGroupInboundRuleSecurityGroupsMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityGroupsSecurityGroupOutboundRuleInput)(nil)).Elem(), GetSecurityGroupsSecurityGroupOutboundRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityGroupsSecurityGroupOutboundRuleArrayInput)(nil)).Elem(), GetSecurityGroupsSecurityGroupOutboundRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityGroupsSecurityGroupOutboundRuleSecurityGroupsMemberInput)(nil)).Elem(), GetSecurityGroupsSecurityGroupOutboundRuleSecurityGroupsMemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityGroupsSecurityGroupOutboundRuleSecurityGroupsMemberArrayInput)(nil)).Elem(), GetSecurityGroupsSecurityGroupOutboundRuleSecurityGroupsMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityGroupsSecurityGroupTagInput)(nil)).Elem(), GetSecurityGroupsSecurityGroupTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityGroupsSecurityGroupTagArrayInput)(nil)).Elem(), GetSecurityGroupsSecurityGroupTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServerCertificateFilterInput)(nil)).Elem(), GetServerCertificateFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServerCertificateFilterArrayInput)(nil)).Elem(), GetServerCertificateFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServerCertificatesFilterInput)(nil)).Elem(), GetServerCertificatesFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServerCertificatesFilterArrayInput)(nil)).Elem(), GetServerCertificatesFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServerCertificatesServerCertificateInput)(nil)).Elem(), GetServerCertificatesServerCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServerCertificatesServerCertificateArrayInput)(nil)).Elem(), GetServerCertificatesServerCertificateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSnapshotExportTaskFilterInput)(nil)).Elem(), GetSnapshotExportTaskFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSnapshotExportTaskFilterArrayInput)(nil)).Elem(), GetSnapshotExportTaskFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSnapshotExportTaskOsuExportInput)(nil)).Elem(), GetSnapshotExportTaskOsuExportArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSnapshotExportTaskOsuExportArrayInput)(nil)).Elem(), GetSnapshotExportTaskOsuExportArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSnapshotExportTaskTagInput)(nil)).Elem(), GetSnapshotExportTaskTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSnapshotExportTaskTagArrayInput)(nil)).Elem(), GetSnapshotExportTaskTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSnapshotExportTasksFilterInput)(nil)).Elem(), GetSnapshotExportTasksFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSnapshotExportTasksFilterArrayInput)(nil)).Elem(), GetSnapshotExportTasksFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSnapshotExportTasksSnapshotExportTaskInput)(nil)).Elem(), GetSnapshotExportTasksSnapshotExportTaskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSnapshotExportTasksSnapshotExportTaskArrayInput)(nil)).Elem(), GetSnapshotExportTasksSnapshotExportTaskArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSnapshotExportTasksSnapshotExportTaskOsuExportInput)(nil)).Elem(), GetSnapshotExportTasksSnapshotExportTaskOsuExportArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSnapshotExportTasksSnapshotExportTaskOsuExportArrayInput)(nil)).Elem(), GetSnapshotExportTasksSnapshotExportTaskOsuExportArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSnapshotExportTasksSnapshotExportTaskTagInput)(nil)).Elem(), GetSnapshotExportTasksSnapshotExportTaskTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSnapshotExportTasksSnapshotExportTaskTagArrayInput)(nil)).Elem(), GetSnapshotExportTasksSnapshotExportTaskTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSnapshotFilterInput)(nil)).Elem(), GetSnapshotFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSnapshotFilterArrayInput)(nil)).Elem(), GetSnapshotFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSnapshotPermissionsToCreateVolumeInput)(nil)).Elem(), GetSnapshotPermissionsToCreateVolumeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSnapshotPermissionsToCreateVolumeArrayInput)(nil)).Elem(), GetSnapshotPermissionsToCreateVolumeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSnapshotTagInput)(nil)).Elem(), GetSnapshotTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSnapshotTagArrayInput)(nil)).Elem(), GetSnapshotTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSnapshotsFilterInput)(nil)).Elem(), GetSnapshotsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSnapshotsFilterArrayInput)(nil)).Elem(), GetSnapshotsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSnapshotsSnapshotInput)(nil)).Elem(), GetSnapshotsSnapshotArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSnapshotsSnapshotArrayInput)(nil)).Elem(), GetSnapshotsSnapshotArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSnapshotsSnapshotPermissionsToCreateVolumeInput)(nil)).Elem(), GetSnapshotsSnapshotPermissionsToCreateVolumeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSnapshotsSnapshotPermissionsToCreateVolumeArrayInput)(nil)).Elem(), GetSnapshotsSnapshotPermissionsToCreateVolumeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSnapshotsSnapshotTagInput)(nil)).Elem(), GetSnapshotsSnapshotTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSnapshotsSnapshotTagArrayInput)(nil)).Elem(), GetSnapshotsSnapshotTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubnetFilterInput)(nil)).Elem(), GetSubnetFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubnetFilterArrayInput)(nil)).Elem(), GetSubnetFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubnetTagInput)(nil)).Elem(), GetSubnetTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubnetTagArrayInput)(nil)).Elem(), GetSubnetTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubnetsFilterInput)(nil)).Elem(), GetSubnetsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubnetsFilterArrayInput)(nil)).Elem(), GetSubnetsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubnetsSubnetInput)(nil)).Elem(), GetSubnetsSubnetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubnetsSubnetArrayInput)(nil)).Elem(), GetSubnetsSubnetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubnetsSubnetTagInput)(nil)).Elem(), GetSubnetsSubnetTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubnetsSubnetTagArrayInput)(nil)).Elem(), GetSubnetsSubnetTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubregionsFilterInput)(nil)).Elem(), GetSubregionsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubregionsFilterArrayInput)(nil)).Elem(), GetSubregionsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubregionsSubregionInput)(nil)).Elem(), GetSubregionsSubregionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubregionsSubregionArrayInput)(nil)).Elem(), GetSubregionsSubregionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTagFilterInput)(nil)).Elem(), GetTagFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTagFilterArrayInput)(nil)).Elem(), GetTagFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTagsFilterInput)(nil)).Elem(), GetTagsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTagsFilterArrayInput)(nil)).Elem(), GetTagsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTagsTagInput)(nil)).Elem(), GetTagsTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTagsTagArrayInput)(nil)).Elem(), GetTagsTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUserFilterInput)(nil)).Elem(), GetUserFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUserFilterArrayInput)(nil)).Elem(), GetUserFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUserGroupUserInput)(nil)).Elem(), GetUserGroupUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUserGroupUserArrayInput)(nil)).Elem(), GetUserGroupUserArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUserGroupsFilterInput)(nil)).Elem(), GetUserGroupsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUserGroupsFilterArrayInput)(nil)).Elem(), GetUserGroupsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUserGroupsPerUserUserGroupInput)(nil)).Elem(), GetUserGroupsPerUserUserGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUserGroupsPerUserUserGroupArrayInput)(nil)).Elem(), GetUserGroupsPerUserUserGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUserGroupsUserGroupInput)(nil)).Elem(), GetUserGroupsUserGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUserGroupsUserGroupArrayInput)(nil)).Elem(), GetUserGroupsUserGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUsersFilterInput)(nil)).Elem(), GetUsersFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUsersFilterArrayInput)(nil)).Elem(), GetUsersFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUsersUserInput)(nil)).Elem(), GetUsersUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUsersUserArrayInput)(nil)).Elem(), GetUsersUserArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualGatewayFilterInput)(nil)).Elem(), GetVirtualGatewayFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualGatewayFilterArrayInput)(nil)).Elem(), GetVirtualGatewayFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualGatewayNetToVirtualGatewayLinkInput)(nil)).Elem(), GetVirtualGatewayNetToVirtualGatewayLinkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualGatewayNetToVirtualGatewayLinkArrayInput)(nil)).Elem(), GetVirtualGatewayNetToVirtualGatewayLinkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualGatewayTagInput)(nil)).Elem(), GetVirtualGatewayTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualGatewayTagArrayInput)(nil)).Elem(), GetVirtualGatewayTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualGatewaysFilterInput)(nil)).Elem(), GetVirtualGatewaysFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualGatewaysFilterArrayInput)(nil)).Elem(), GetVirtualGatewaysFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualGatewaysVirtualGatewayInput)(nil)).Elem(), GetVirtualGatewaysVirtualGatewayArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualGatewaysVirtualGatewayArrayInput)(nil)).Elem(), GetVirtualGatewaysVirtualGatewayArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualGatewaysVirtualGatewayNetToVirtualGatewayLinkInput)(nil)).Elem(), GetVirtualGatewaysVirtualGatewayNetToVirtualGatewayLinkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualGatewaysVirtualGatewayNetToVirtualGatewayLinkArrayInput)(nil)).Elem(), GetVirtualGatewaysVirtualGatewayNetToVirtualGatewayLinkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualGatewaysVirtualGatewayTagInput)(nil)).Elem(), GetVirtualGatewaysVirtualGatewayTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualGatewaysVirtualGatewayTagArrayInput)(nil)).Elem(), GetVirtualGatewaysVirtualGatewayTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVmActionsOnNextBootInput)(nil)).Elem(), GetVmActionsOnNextBootArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVmActionsOnNextBootArrayInput)(nil)).Elem(), GetVmActionsOnNextBootArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVmBlockDeviceMappingsCreatedInput)(nil)).Elem(), GetVmBlockDeviceMappingsCreatedArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVmBlockDeviceMappingsCreatedArrayInput)(nil)).Elem(), GetVmBlockDeviceMappingsCreatedArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVmBlockDeviceMappingsCreatedBsusInput)(nil)).Elem(), GetVmBlockDeviceMappingsCreatedBsusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVmBlockDeviceMappingsCreatedBsusArrayInput)(nil)).Elem(), GetVmBlockDeviceMappingsCreatedBsusArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVmBlockDeviceMappingsCreatedBsusTagInput)(nil)).Elem(), GetVmBlockDeviceMappingsCreatedBsusTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVmBlockDeviceMappingsCreatedBsusTagArrayInput)(nil)).Elem(), GetVmBlockDeviceMappingsCreatedBsusTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVmFilterInput)(nil)).Elem(), GetVmFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVmFilterArrayInput)(nil)).Elem(), GetVmFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVmNicInput)(nil)).Elem(), GetVmNicArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVmNicArrayInput)(nil)).Elem(), GetVmNicArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVmNicLinkNicInput)(nil)).Elem(), GetVmNicLinkNicArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVmNicLinkNicArrayInput)(nil)).Elem(), GetVmNicLinkNicArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVmNicLinkPublicIpInput)(nil)).Elem(), GetVmNicLinkPublicIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVmNicLinkPublicIpArrayInput)(nil)).Elem(), GetVmNicLinkPublicIpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVmNicPrivateIpInput)(nil)).Elem(), GetVmNicPrivateIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVmNicPrivateIpArrayInput)(nil)).Elem(), GetVmNicPrivateIpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVmNicPrivateIpLinkPublicIpInput)(nil)).Elem(), GetVmNicPrivateIpLinkPublicIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVmNicPrivateIpLinkPublicIpArrayInput)(nil)).Elem(), GetVmNicPrivateIpLinkPublicIpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVmNicSecurityGroupInput)(nil)).Elem(), GetVmNicSecurityGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVmNicSecurityGroupArrayInput)(nil)).Elem(), GetVmNicSecurityGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVmPrimaryNicInput)(nil)).Elem(), GetVmPrimaryNicArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVmPrimaryNicArrayInput)(nil)).Elem(), GetVmPrimaryNicArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVmPrimaryNicLinkNicInput)(nil)).Elem(), GetVmPrimaryNicLinkNicArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVmPrimaryNicLinkNicArrayInput)(nil)).Elem(), GetVmPrimaryNicLinkNicArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVmPrimaryNicLinkPublicIpInput)(nil)).Elem(), GetVmPrimaryNicLinkPublicIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVmPrimaryNicLinkPublicIpArrayInput)(nil)).Elem(), GetVmPrimaryNicLinkPublicIpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVmPrimaryNicPrivateIpInput)(nil)).Elem(), GetVmPrimaryNicPrivateIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVmPrimaryNicPrivateIpArrayInput)(nil)).Elem(), GetVmPrimaryNicPrivateIpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVmPrimaryNicPrivateIpLinkPublicIpInput)(nil)).Elem(), GetVmPrimaryNicPrivateIpLinkPublicIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVmPrimaryNicPrivateIpLinkPublicIpArrayInput)(nil)).Elem(), GetVmPrimaryNicPrivateIpLinkPublicIpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVmPrimaryNicSecurityGroupInput)(nil)).Elem(), GetVmPrimaryNicSecurityGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVmPrimaryNicSecurityGroupArrayInput)(nil)).Elem(), GetVmPrimaryNicSecurityGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVmSecurityGroupInput)(nil)).Elem(), GetVmSecurityGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVmSecurityGroupArrayInput)(nil)).Elem(), GetVmSecurityGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVmStateFilterInput)(nil)).Elem(), GetVmStateFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVmStateFilterArrayInput)(nil)).Elem(), GetVmStateFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVmStateMaintenanceEventInput)(nil)).Elem(), GetVmStateMaintenanceEventArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVmStateMaintenanceEventArrayInput)(nil)).Elem(), GetVmStateMaintenanceEventArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVmStatesFilterInput)(nil)).Elem(), GetVmStatesFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVmStatesFilterArrayInput)(nil)).Elem(), GetVmStatesFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVmStatesVmStateInput)(nil)).Elem(), GetVmStatesVmStateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVmStatesVmStateArrayInput)(nil)).Elem(), GetVmStatesVmStateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVmStatesVmStateMaintenanceEventInput)(nil)).Elem(), GetVmStatesVmStateMaintenanceEventArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVmStatesVmStateMaintenanceEventArrayInput)(nil)).Elem(), GetVmStatesVmStateMaintenanceEventArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVmTagInput)(nil)).Elem(), GetVmTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVmTagArrayInput)(nil)).Elem(), GetVmTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVmTypesFilterInput)(nil)).Elem(), GetVmTypesFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVmTypesFilterArrayInput)(nil)).Elem(), GetVmTypesFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVmTypesVmTypeInput)(nil)).Elem(), GetVmTypesVmTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVmTypesVmTypeArrayInput)(nil)).Elem(), GetVmTypesVmTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVmsFilterInput)(nil)).Elem(), GetVmsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVmsFilterArrayInput)(nil)).Elem(), GetVmsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVmsVmInput)(nil)).Elem(), GetVmsVmArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVmsVmArrayInput)(nil)).Elem(), GetVmsVmArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVmsVmActionsOnNextBootInput)(nil)).Elem(), GetVmsVmActionsOnNextBootArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVmsVmActionsOnNextBootArrayInput)(nil)).Elem(), GetVmsVmActionsOnNextBootArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVmsVmBlockDeviceMappingsCreatedInput)(nil)).Elem(), GetVmsVmBlockDeviceMappingsCreatedArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVmsVmBlockDeviceMappingsCreatedArrayInput)(nil)).Elem(), GetVmsVmBlockDeviceMappingsCreatedArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVmsVmBlockDeviceMappingsCreatedBsusInput)(nil)).Elem(), GetVmsVmBlockDeviceMappingsCreatedBsusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVmsVmBlockDeviceMappingsCreatedBsusArrayInput)(nil)).Elem(), GetVmsVmBlockDeviceMappingsCreatedBsusArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVmsVmBlockDeviceMappingsCreatedBsusTagInput)(nil)).Elem(), GetVmsVmBlockDeviceMappingsCreatedBsusTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVmsVmBlockDeviceMappingsCreatedBsusTagArrayInput)(nil)).Elem(), GetVmsVmBlockDeviceMappingsCreatedBsusTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVmsVmNicInput)(nil)).Elem(), GetVmsVmNicArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVmsVmNicArrayInput)(nil)).Elem(), GetVmsVmNicArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVmsVmNicLinkNicInput)(nil)).Elem(), GetVmsVmNicLinkNicArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVmsVmNicLinkNicArrayInput)(nil)).Elem(), GetVmsVmNicLinkNicArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVmsVmNicLinkPublicIpInput)(nil)).Elem(), GetVmsVmNicLinkPublicIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVmsVmNicLinkPublicIpArrayInput)(nil)).Elem(), GetVmsVmNicLinkPublicIpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVmsVmNicPrivateIpInput)(nil)).Elem(), GetVmsVmNicPrivateIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVmsVmNicPrivateIpArrayInput)(nil)).Elem(), GetVmsVmNicPrivateIpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVmsVmNicPrivateIpLinkPublicIpInput)(nil)).Elem(), GetVmsVmNicPrivateIpLinkPublicIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVmsVmNicPrivateIpLinkPublicIpArrayInput)(nil)).Elem(), GetVmsVmNicPrivateIpLinkPublicIpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVmsVmNicSecurityGroupInput)(nil)).Elem(), GetVmsVmNicSecurityGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVmsVmNicSecurityGroupArrayInput)(nil)).Elem(), GetVmsVmNicSecurityGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVmsVmPrimaryNicInput)(nil)).Elem(), GetVmsVmPrimaryNicArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVmsVmPrimaryNicArrayInput)(nil)).Elem(), GetVmsVmPrimaryNicArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVmsVmPrimaryNicLinkNicInput)(nil)).Elem(), GetVmsVmPrimaryNicLinkNicArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVmsVmPrimaryNicLinkNicArrayInput)(nil)).Elem(), GetVmsVmPrimaryNicLinkNicArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVmsVmPrimaryNicLinkPublicIpInput)(nil)).Elem(), GetVmsVmPrimaryNicLinkPublicIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVmsVmPrimaryNicLinkPublicIpArrayInput)(nil)).Elem(), GetVmsVmPrimaryNicLinkPublicIpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVmsVmPrimaryNicPrivateIpInput)(nil)).Elem(), GetVmsVmPrimaryNicPrivateIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVmsVmPrimaryNicPrivateIpArrayInput)(nil)).Elem(), GetVmsVmPrimaryNicPrivateIpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVmsVmPrimaryNicPrivateIpLinkPublicIpInput)(nil)).Elem(), GetVmsVmPrimaryNicPrivateIpLinkPublicIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVmsVmPrimaryNicPrivateIpLinkPublicIpArrayInput)(nil)).Elem(), GetVmsVmPrimaryNicPrivateIpLinkPublicIpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVmsVmPrimaryNicSecurityGroupInput)(nil)).Elem(), GetVmsVmPrimaryNicSecurityGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVmsVmPrimaryNicSecurityGroupArrayInput)(nil)).Elem(), GetVmsVmPrimaryNicSecurityGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVmsVmSecurityGroupInput)(nil)).Elem(), GetVmsVmSecurityGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVmsVmSecurityGroupArrayInput)(nil)).Elem(), GetVmsVmSecurityGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVmsVmTagInput)(nil)).Elem(), GetVmsVmTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVmsVmTagArrayInput)(nil)).Elem(), GetVmsVmTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVolumeFilterInput)(nil)).Elem(), GetVolumeFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVolumeFilterArrayInput)(nil)).Elem(), GetVolumeFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVolumeLinkedVolumeInput)(nil)).Elem(), GetVolumeLinkedVolumeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVolumeLinkedVolumeArrayInput)(nil)).Elem(), GetVolumeLinkedVolumeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVolumeTagInput)(nil)).Elem(), GetVolumeTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVolumeTagArrayInput)(nil)).Elem(), GetVolumeTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVolumesFilterInput)(nil)).Elem(), GetVolumesFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVolumesFilterArrayInput)(nil)).Elem(), GetVolumesFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVolumesVolumeInput)(nil)).Elem(), GetVolumesVolumeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVolumesVolumeArrayInput)(nil)).Elem(), GetVolumesVolumeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVolumesVolumeLinkedVolumeInput)(nil)).Elem(), GetVolumesVolumeLinkedVolumeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVolumesVolumeLinkedVolumeArrayInput)(nil)).Elem(), GetVolumesVolumeLinkedVolumeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVolumesVolumeTagInput)(nil)).Elem(), GetVolumesVolumeTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVolumesVolumeTagArrayInput)(nil)).Elem(), GetVolumesVolumeTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVpnConnectionFilterInput)(nil)).Elem(), GetVpnConnectionFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVpnConnectionFilterArrayInput)(nil)).Elem(), GetVpnConnectionFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVpnConnectionRouteTypeInput)(nil)).Elem(), GetVpnConnectionRouteTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVpnConnectionRouteTypeArrayInput)(nil)).Elem(), GetVpnConnectionRouteTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVpnConnectionTagInput)(nil)).Elem(), GetVpnConnectionTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVpnConnectionTagArrayInput)(nil)).Elem(), GetVpnConnectionTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVpnConnectionVgwTelemetryInput)(nil)).Elem(), GetVpnConnectionVgwTelemetryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVpnConnectionVgwTelemetryArrayInput)(nil)).Elem(), GetVpnConnectionVgwTelemetryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVpnConnectionsFilterInput)(nil)).Elem(), GetVpnConnectionsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVpnConnectionsFilterArrayInput)(nil)).Elem(), GetVpnConnectionsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVpnConnectionsVpnConnectionInput)(nil)).Elem(), GetVpnConnectionsVpnConnectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVpnConnectionsVpnConnectionArrayInput)(nil)).Elem(), GetVpnConnectionsVpnConnectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVpnConnectionsVpnConnectionRouteInput)(nil)).Elem(), GetVpnConnectionsVpnConnectionRouteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVpnConnectionsVpnConnectionRouteArrayInput)(nil)).Elem(), GetVpnConnectionsVpnConnectionRouteArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVpnConnectionsVpnConnectionTagInput)(nil)).Elem(), GetVpnConnectionsVpnConnectionTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVpnConnectionsVpnConnectionTagArrayInput)(nil)).Elem(), GetVpnConnectionsVpnConnectionTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVpnConnectionsVpnConnectionVgwTelemetryInput)(nil)).Elem(), GetVpnConnectionsVpnConnectionVgwTelemetryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVpnConnectionsVpnConnectionVgwTelemetryArrayInput)(nil)).Elem(), GetVpnConnectionsVpnConnectionVgwTelemetryArray{})
	pulumi.RegisterOutputType(AccessKeyTimeoutsOutput{})
	pulumi.RegisterOutputType(AccessKeyTimeoutsPtrOutput{})
	pulumi.RegisterOutputType(ClientGatewayTagOutput{})
	pulumi.RegisterOutputType(ClientGatewayTagArrayOutput{})
	pulumi.RegisterOutputType(DhcpOptionTagOutput{})
	pulumi.RegisterOutputType(DhcpOptionTagArrayOutput{})
	pulumi.RegisterOutputType(FlexibleGpuTimeoutsOutput{})
	pulumi.RegisterOutputType(FlexibleGpuTimeoutsPtrOutput{})
	pulumi.RegisterOutputType(ImageBlockDeviceMappingOutput{})
	pulumi.RegisterOutputType(ImageBlockDeviceMappingArrayOutput{})
	pulumi.RegisterOutputType(ImageBlockDeviceMappingBsusOutput{})
	pulumi.RegisterOutputType(ImageBlockDeviceMappingBsusArrayOutput{})
	pulumi.RegisterOutputType(ImageExportTaskOsuExportOutput{})
	pulumi.RegisterOutputType(ImageExportTaskOsuExportArrayOutput{})
	pulumi.RegisterOutputType(ImageExportTaskOsuExportOsuApiKeyOutput{})
	pulumi.RegisterOutputType(ImageExportTaskOsuExportOsuApiKeyArrayOutput{})
	pulumi.RegisterOutputType(ImageExportTaskTagOutput{})
	pulumi.RegisterOutputType(ImageExportTaskTagArrayOutput{})
	pulumi.RegisterOutputType(ImageLaunchPermissionPermissionAdditionsOutput{})
	pulumi.RegisterOutputType(ImageLaunchPermissionPermissionAdditionsPtrOutput{})
	pulumi.RegisterOutputType(ImageLaunchPermissionPermissionRemovalsOutput{})
	pulumi.RegisterOutputType(ImageLaunchPermissionPermissionRemovalsPtrOutput{})
	pulumi.RegisterOutputType(ImageLaunchPermissionPermissionsToLaunchOutput{})
	pulumi.RegisterOutputType(ImageLaunchPermissionPermissionsToLaunchArrayOutput{})
	pulumi.RegisterOutputType(ImagePermissionsToLaunchOutput{})
	pulumi.RegisterOutputType(ImagePermissionsToLaunchArrayOutput{})
	pulumi.RegisterOutputType(ImageStateCommentOutput{})
	pulumi.RegisterOutputType(ImageStateCommentArrayOutput{})
	pulumi.RegisterOutputType(ImageTagOutput{})
	pulumi.RegisterOutputType(ImageTagArrayOutput{})
	pulumi.RegisterOutputType(InternetServiceLinkTagOutput{})
	pulumi.RegisterOutputType(InternetServiceLinkTagArrayOutput{})
	pulumi.RegisterOutputType(InternetServiceLinkTimeoutsOutput{})
	pulumi.RegisterOutputType(InternetServiceLinkTimeoutsPtrOutput{})
	pulumi.RegisterOutputType(InternetServiceTagOutput{})
	pulumi.RegisterOutputType(InternetServiceTagArrayOutput{})
	pulumi.RegisterOutputType(InternetServiceTimeoutsOutput{})
	pulumi.RegisterOutputType(InternetServiceTimeoutsPtrOutput{})
	pulumi.RegisterOutputType(KeypairTagOutput{})
	pulumi.RegisterOutputType(KeypairTagArrayOutput{})
	pulumi.RegisterOutputType(KeypairTimeoutsOutput{})
	pulumi.RegisterOutputType(KeypairTimeoutsPtrOutput{})
	pulumi.RegisterOutputType(LoadBalancerAccessLogOutput{})
	pulumi.RegisterOutputType(LoadBalancerAccessLogArrayOutput{})
	pulumi.RegisterOutputType(LoadBalancerApplicationStickyCookiePolicyOutput{})
	pulumi.RegisterOutputType(LoadBalancerApplicationStickyCookiePolicyArrayOutput{})
	pulumi.RegisterOutputType(LoadBalancerAttributesAccessLogOutput{})
	pulumi.RegisterOutputType(LoadBalancerAttributesAccessLogPtrOutput{})
	pulumi.RegisterOutputType(LoadBalancerAttributesApplicationStickyCookiePolicyOutput{})
	pulumi.RegisterOutputType(LoadBalancerAttributesApplicationStickyCookiePolicyArrayOutput{})
	pulumi.RegisterOutputType(LoadBalancerAttributesHealthCheckOutput{})
	pulumi.RegisterOutputType(LoadBalancerAttributesHealthCheckPtrOutput{})
	pulumi.RegisterOutputType(LoadBalancerAttributesListenerOutput{})
	pulumi.RegisterOutputType(LoadBalancerAttributesListenerArrayOutput{})
	pulumi.RegisterOutputType(LoadBalancerAttributesLoadBalancerStickyCookiePolicyOutput{})
	pulumi.RegisterOutputType(LoadBalancerAttributesLoadBalancerStickyCookiePolicyArrayOutput{})
	pulumi.RegisterOutputType(LoadBalancerAttributesSourceSecurityGroupOutput{})
	pulumi.RegisterOutputType(LoadBalancerAttributesSourceSecurityGroupArrayOutput{})
	pulumi.RegisterOutputType(LoadBalancerAttributesTagOutput{})
	pulumi.RegisterOutputType(LoadBalancerAttributesTagArrayOutput{})
	pulumi.RegisterOutputType(LoadBalancerHealthCheckOutput{})
	pulumi.RegisterOutputType(LoadBalancerHealthCheckArrayOutput{})
	pulumi.RegisterOutputType(LoadBalancerListenerOutput{})
	pulumi.RegisterOutputType(LoadBalancerListenerArrayOutput{})
	pulumi.RegisterOutputType(LoadBalancerListenerRuleListenerOutput{})
	pulumi.RegisterOutputType(LoadBalancerListenerRuleListenerPtrOutput{})
	pulumi.RegisterOutputType(LoadBalancerListenerRuleListenerRuleOutput{})
	pulumi.RegisterOutputType(LoadBalancerListenerRuleListenerRulePtrOutput{})
	pulumi.RegisterOutputType(LoadBalancerLoadBalancerStickyCookiePolicyOutput{})
	pulumi.RegisterOutputType(LoadBalancerLoadBalancerStickyCookiePolicyArrayOutput{})
	pulumi.RegisterOutputType(LoadBalancerPolicyAccessLogOutput{})
	pulumi.RegisterOutputType(LoadBalancerPolicyAccessLogArrayOutput{})
	pulumi.RegisterOutputType(LoadBalancerPolicyApplicationStickyCookiePolicyOutput{})
	pulumi.RegisterOutputType(LoadBalancerPolicyApplicationStickyCookiePolicyArrayOutput{})
	pulumi.RegisterOutputType(LoadBalancerPolicyHealthCheckOutput{})
	pulumi.RegisterOutputType(LoadBalancerPolicyHealthCheckArrayOutput{})
	pulumi.RegisterOutputType(LoadBalancerPolicyListenerOutput{})
	pulumi.RegisterOutputType(LoadBalancerPolicyListenerArrayOutput{})
	pulumi.RegisterOutputType(LoadBalancerPolicyLoadBalancerStickyCookiePolicyOutput{})
	pulumi.RegisterOutputType(LoadBalancerPolicyLoadBalancerStickyCookiePolicyArrayOutput{})
	pulumi.RegisterOutputType(LoadBalancerPolicySourceSecurityGroupOutput{})
	pulumi.RegisterOutputType(LoadBalancerPolicySourceSecurityGroupArrayOutput{})
	pulumi.RegisterOutputType(LoadBalancerPolicyTagOutput{})
	pulumi.RegisterOutputType(LoadBalancerPolicyTagArrayOutput{})
	pulumi.RegisterOutputType(LoadBalancerSourceSecurityGroupOutput{})
	pulumi.RegisterOutputType(LoadBalancerSourceSecurityGroupArrayOutput{})
	pulumi.RegisterOutputType(LoadBalancerTagOutput{})
	pulumi.RegisterOutputType(LoadBalancerTagArrayOutput{})
	pulumi.RegisterOutputType(LoadBalancerVmsTimeoutsOutput{})
	pulumi.RegisterOutputType(LoadBalancerVmsTimeoutsPtrOutput{})
	pulumi.RegisterOutputType(MainRouteTableLinkTimeoutsOutput{})
	pulumi.RegisterOutputType(MainRouteTableLinkTimeoutsPtrOutput{})
	pulumi.RegisterOutputType(NatServicePublicIpOutput{})
	pulumi.RegisterOutputType(NatServicePublicIpArrayOutput{})
	pulumi.RegisterOutputType(NatServiceTagOutput{})
	pulumi.RegisterOutputType(NatServiceTagArrayOutput{})
	pulumi.RegisterOutputType(NetAccessPointTagOutput{})
	pulumi.RegisterOutputType(NetAccessPointTagArrayOutput{})
	pulumi.RegisterOutputType(NetAccessPointTimeoutsOutput{})
	pulumi.RegisterOutputType(NetAccessPointTimeoutsPtrOutput{})
	pulumi.RegisterOutputType(NetAttributesTagOutput{})
	pulumi.RegisterOutputType(NetAttributesTagArrayOutput{})
	pulumi.RegisterOutputType(NetAttributesTimeoutsOutput{})
	pulumi.RegisterOutputType(NetAttributesTimeoutsPtrOutput{})
	pulumi.RegisterOutputType(NetPeeringAcceptationAccepterNetOutput{})
	pulumi.RegisterOutputType(NetPeeringAcceptationAccepterNetArrayOutput{})
	pulumi.RegisterOutputType(NetPeeringAcceptationSourceNetOutput{})
	pulumi.RegisterOutputType(NetPeeringAcceptationSourceNetArrayOutput{})
	pulumi.RegisterOutputType(NetPeeringAcceptationStateTypeOutput{})
	pulumi.RegisterOutputType(NetPeeringAcceptationStateTypeArrayOutput{})
	pulumi.RegisterOutputType(NetPeeringAcceptationTagOutput{})
	pulumi.RegisterOutputType(NetPeeringAcceptationTagArrayOutput{})
	pulumi.RegisterOutputType(NetPeeringAcceptationTimeoutsOutput{})
	pulumi.RegisterOutputType(NetPeeringAcceptationTimeoutsPtrOutput{})
	pulumi.RegisterOutputType(NetPeeringAccepterNetOutput{})
	pulumi.RegisterOutputType(NetPeeringAccepterNetArrayOutput{})
	pulumi.RegisterOutputType(NetPeeringSourceNetOutput{})
	pulumi.RegisterOutputType(NetPeeringSourceNetArrayOutput{})
	pulumi.RegisterOutputType(NetPeeringStateTypeOutput{})
	pulumi.RegisterOutputType(NetPeeringStateTypeArrayOutput{})
	pulumi.RegisterOutputType(NetPeeringTagOutput{})
	pulumi.RegisterOutputType(NetPeeringTagArrayOutput{})
	pulumi.RegisterOutputType(NetPeeringTimeoutsOutput{})
	pulumi.RegisterOutputType(NetPeeringTimeoutsPtrOutput{})
	pulumi.RegisterOutputType(NetTagOutput{})
	pulumi.RegisterOutputType(NetTagArrayOutput{})
	pulumi.RegisterOutputType(NetTimeoutsOutput{})
	pulumi.RegisterOutputType(NetTimeoutsPtrOutput{})
	pulumi.RegisterOutputType(NicLinkNicOutput{})
	pulumi.RegisterOutputType(NicLinkNicArrayOutput{})
	pulumi.RegisterOutputType(NicLinkPublicIpOutput{})
	pulumi.RegisterOutputType(NicLinkPublicIpArrayOutput{})
	pulumi.RegisterOutputType(NicPrivateIpTypeOutput{})
	pulumi.RegisterOutputType(NicPrivateIpTypeArrayOutput{})
	pulumi.RegisterOutputType(NicPrivateIpLinkPublicIpOutput{})
	pulumi.RegisterOutputType(NicPrivateIpLinkPublicIpArrayOutput{})
	pulumi.RegisterOutputType(NicSecurityGroupOutput{})
	pulumi.RegisterOutputType(NicSecurityGroupArrayOutput{})
	pulumi.RegisterOutputType(NicTagOutput{})
	pulumi.RegisterOutputType(NicTagArrayOutput{})
	pulumi.RegisterOutputType(OutboundRuleRuleOutput{})
	pulumi.RegisterOutputType(OutboundRuleRuleArrayOutput{})
	pulumi.RegisterOutputType(OutboundRuleRuleSecurityGroupsMemberOutput{})
	pulumi.RegisterOutputType(OutboundRuleRuleSecurityGroupsMemberArrayOutput{})
	pulumi.RegisterOutputType(ProviderEndpointOutput{})
	pulumi.RegisterOutputType(ProviderEndpointArrayOutput{})
	pulumi.RegisterOutputType(PublicIpLinkTagOutput{})
	pulumi.RegisterOutputType(PublicIpLinkTagArrayOutput{})
	pulumi.RegisterOutputType(PublicIpTagOutput{})
	pulumi.RegisterOutputType(PublicIpTagArrayOutput{})
	pulumi.RegisterOutputType(RouteTableLinkRouteTableOutput{})
	pulumi.RegisterOutputType(RouteTableLinkRouteTableArrayOutput{})
	pulumi.RegisterOutputType(RouteTableLinkTimeoutsOutput{})
	pulumi.RegisterOutputType(RouteTableLinkTimeoutsPtrOutput{})
	pulumi.RegisterOutputType(RouteTableRouteOutput{})
	pulumi.RegisterOutputType(RouteTableRouteArrayOutput{})
	pulumi.RegisterOutputType(RouteTableRoutePropagatingVirtualGatewayOutput{})
	pulumi.RegisterOutputType(RouteTableRoutePropagatingVirtualGatewayArrayOutput{})
	pulumi.RegisterOutputType(RouteTableTagOutput{})
	pulumi.RegisterOutputType(RouteTableTagArrayOutput{})
	pulumi.RegisterOutputType(RouteTableTimeoutsOutput{})
	pulumi.RegisterOutputType(RouteTableTimeoutsPtrOutput{})
	pulumi.RegisterOutputType(RouteTimeoutsOutput{})
	pulumi.RegisterOutputType(RouteTimeoutsPtrOutput{})
	pulumi.RegisterOutputType(SecurityGroupInboundRuleOutput{})
	pulumi.RegisterOutputType(SecurityGroupInboundRuleArrayOutput{})
	pulumi.RegisterOutputType(SecurityGroupOutboundRuleOutput{})
	pulumi.RegisterOutputType(SecurityGroupOutboundRuleArrayOutput{})
	pulumi.RegisterOutputType(SecurityGroupRuleRuleOutput{})
	pulumi.RegisterOutputType(SecurityGroupRuleRuleArrayOutput{})
	pulumi.RegisterOutputType(SecurityGroupRuleRuleSecurityGroupsMemberOutput{})
	pulumi.RegisterOutputType(SecurityGroupRuleRuleSecurityGroupsMemberArrayOutput{})
	pulumi.RegisterOutputType(SecurityGroupTagOutput{})
	pulumi.RegisterOutputType(SecurityGroupTagArrayOutput{})
	pulumi.RegisterOutputType(SnapshotAttributesPermissionsToCreateVolumeAdditionsOutput{})
	pulumi.RegisterOutputType(SnapshotAttributesPermissionsToCreateVolumeAdditionsPtrOutput{})
	pulumi.RegisterOutputType(SnapshotAttributesPermissionsToCreateVolumeRemovalOutput{})
	pulumi.RegisterOutputType(SnapshotAttributesPermissionsToCreateVolumeRemovalArrayOutput{})
	pulumi.RegisterOutputType(SnapshotExportTaskOsuExportOutput{})
	pulumi.RegisterOutputType(SnapshotExportTaskOsuExportArrayOutput{})
	pulumi.RegisterOutputType(SnapshotExportTaskOsuExportOsuApiKeyOutput{})
	pulumi.RegisterOutputType(SnapshotExportTaskOsuExportOsuApiKeyArrayOutput{})
	pulumi.RegisterOutputType(SnapshotExportTaskTagOutput{})
	pulumi.RegisterOutputType(SnapshotExportTaskTagArrayOutput{})
	pulumi.RegisterOutputType(SnapshotPermissionsToCreateVolumeOutput{})
	pulumi.RegisterOutputType(SnapshotPermissionsToCreateVolumeArrayOutput{})
	pulumi.RegisterOutputType(SnapshotTagOutput{})
	pulumi.RegisterOutputType(SnapshotTagArrayOutput{})
	pulumi.RegisterOutputType(SubnetTagOutput{})
	pulumi.RegisterOutputType(SubnetTagArrayOutput{})
	pulumi.RegisterOutputType(SubnetTimeoutsOutput{})
	pulumi.RegisterOutputType(SubnetTimeoutsPtrOutput{})
	pulumi.RegisterOutputType(TagTagOutput{})
	pulumi.RegisterOutputType(TagTagArrayOutput{})
	pulumi.RegisterOutputType(UserGroupPolicyOutput{})
	pulumi.RegisterOutputType(UserGroupPolicyArrayOutput{})
	pulumi.RegisterOutputType(UserGroupUserOutput{})
	pulumi.RegisterOutputType(UserGroupUserArrayOutput{})
	pulumi.RegisterOutputType(UserPolicyOutput{})
	pulumi.RegisterOutputType(UserPolicyArrayOutput{})
	pulumi.RegisterOutputType(VirtualGatewayLinkNetToVirtualGatewayLinkOutput{})
	pulumi.RegisterOutputType(VirtualGatewayLinkNetToVirtualGatewayLinkArrayOutput{})
	pulumi.RegisterOutputType(VirtualGatewayNetToVirtualGatewayLinkOutput{})
	pulumi.RegisterOutputType(VirtualGatewayNetToVirtualGatewayLinkArrayOutput{})
	pulumi.RegisterOutputType(VirtualGatewayTagOutput{})
	pulumi.RegisterOutputType(VirtualGatewayTagArrayOutput{})
	pulumi.RegisterOutputType(VmActionsOnNextBootOutput{})
	pulumi.RegisterOutputType(VmActionsOnNextBootArrayOutput{})
	pulumi.RegisterOutputType(VmBlockDeviceMappingOutput{})
	pulumi.RegisterOutputType(VmBlockDeviceMappingArrayOutput{})
	pulumi.RegisterOutputType(VmBlockDeviceMappingBsuOutput{})
	pulumi.RegisterOutputType(VmBlockDeviceMappingBsuPtrOutput{})
	pulumi.RegisterOutputType(VmBlockDeviceMappingBsuTagOutput{})
	pulumi.RegisterOutputType(VmBlockDeviceMappingBsuTagArrayOutput{})
	pulumi.RegisterOutputType(VmBlockDeviceMappingsCreatedOutput{})
	pulumi.RegisterOutputType(VmBlockDeviceMappingsCreatedArrayOutput{})
	pulumi.RegisterOutputType(VmBlockDeviceMappingsCreatedBsusOutput{})
	pulumi.RegisterOutputType(VmBlockDeviceMappingsCreatedBsusArrayOutput{})
	pulumi.RegisterOutputType(VmBlockDeviceMappingsCreatedBsusTagOutput{})
	pulumi.RegisterOutputType(VmBlockDeviceMappingsCreatedBsusTagArrayOutput{})
	pulumi.RegisterOutputType(VmNicOutput{})
	pulumi.RegisterOutputType(VmNicArrayOutput{})
	pulumi.RegisterOutputType(VmNicLinkNicOutput{})
	pulumi.RegisterOutputType(VmNicLinkNicArrayOutput{})
	pulumi.RegisterOutputType(VmNicLinkPublicIpOutput{})
	pulumi.RegisterOutputType(VmNicLinkPublicIpArrayOutput{})
	pulumi.RegisterOutputType(VmNicPrivateIpOutput{})
	pulumi.RegisterOutputType(VmNicPrivateIpArrayOutput{})
	pulumi.RegisterOutputType(VmNicPrivateIpLinkPublicIpOutput{})
	pulumi.RegisterOutputType(VmNicPrivateIpLinkPublicIpArrayOutput{})
	pulumi.RegisterOutputType(VmNicSecurityGroupOutput{})
	pulumi.RegisterOutputType(VmNicSecurityGroupArrayOutput{})
	pulumi.RegisterOutputType(VmPrimaryNicOutput{})
	pulumi.RegisterOutputType(VmPrimaryNicArrayOutput{})
	pulumi.RegisterOutputType(VmPrimaryNicLinkNicOutput{})
	pulumi.RegisterOutputType(VmPrimaryNicLinkNicArrayOutput{})
	pulumi.RegisterOutputType(VmPrimaryNicLinkPublicIpOutput{})
	pulumi.RegisterOutputType(VmPrimaryNicLinkPublicIpArrayOutput{})
	pulumi.RegisterOutputType(VmPrimaryNicPrivateIpOutput{})
	pulumi.RegisterOutputType(VmPrimaryNicPrivateIpArrayOutput{})
	pulumi.RegisterOutputType(VmPrimaryNicPrivateIpLinkPublicIpOutput{})
	pulumi.RegisterOutputType(VmPrimaryNicPrivateIpLinkPublicIpArrayOutput{})
	pulumi.RegisterOutputType(VmPrimaryNicSecurityGroupOutput{})
	pulumi.RegisterOutputType(VmPrimaryNicSecurityGroupArrayOutput{})
	pulumi.RegisterOutputType(VmSecurityGroupOutput{})
	pulumi.RegisterOutputType(VmSecurityGroupArrayOutput{})
	pulumi.RegisterOutputType(VmTagOutput{})
	pulumi.RegisterOutputType(VmTagArrayOutput{})
	pulumi.RegisterOutputType(VolumeLinkTimeoutsOutput{})
	pulumi.RegisterOutputType(VolumeLinkTimeoutsPtrOutput{})
	pulumi.RegisterOutputType(VolumeLinkedVolumeOutput{})
	pulumi.RegisterOutputType(VolumeLinkedVolumeArrayOutput{})
	pulumi.RegisterOutputType(VolumeTagOutput{})
	pulumi.RegisterOutputType(VolumeTagArrayOutput{})
	pulumi.RegisterOutputType(VolumeTimeoutsOutput{})
	pulumi.RegisterOutputType(VolumeTimeoutsPtrOutput{})
	pulumi.RegisterOutputType(VpnConnectionRouteTypeOutput{})
	pulumi.RegisterOutputType(VpnConnectionRouteTypeArrayOutput{})
	pulumi.RegisterOutputType(VpnConnectionTagOutput{})
	pulumi.RegisterOutputType(VpnConnectionTagArrayOutput{})
	pulumi.RegisterOutputType(VpnConnectionVgwTelemetryOutput{})
	pulumi.RegisterOutputType(VpnConnectionVgwTelemetryArrayOutput{})
	pulumi.RegisterOutputType(GetAccessKeyFilterOutput{})
	pulumi.RegisterOutputType(GetAccessKeyFilterArrayOutput{})
	pulumi.RegisterOutputType(GetAccessKeysAccessKeyOutput{})
	pulumi.RegisterOutputType(GetAccessKeysAccessKeyArrayOutput{})
	pulumi.RegisterOutputType(GetAccessKeysFilterOutput{})
	pulumi.RegisterOutputType(GetAccessKeysFilterArrayOutput{})
	pulumi.RegisterOutputType(GetAccountsAccountOutput{})
	pulumi.RegisterOutputType(GetAccountsAccountArrayOutput{})
	pulumi.RegisterOutputType(GetApiAccessRuleFilterOutput{})
	pulumi.RegisterOutputType(GetApiAccessRuleFilterArrayOutput{})
	pulumi.RegisterOutputType(GetApiAccessRulesApiAccessRuleOutput{})
	pulumi.RegisterOutputType(GetApiAccessRulesApiAccessRuleArrayOutput{})
	pulumi.RegisterOutputType(GetApiAccessRulesFilterOutput{})
	pulumi.RegisterOutputType(GetApiAccessRulesFilterArrayOutput{})
	pulumi.RegisterOutputType(GetCaFilterOutput{})
	pulumi.RegisterOutputType(GetCaFilterArrayOutput{})
	pulumi.RegisterOutputType(GetCasCaOutput{})
	pulumi.RegisterOutputType(GetCasCaArrayOutput{})
	pulumi.RegisterOutputType(GetCasFilterOutput{})
	pulumi.RegisterOutputType(GetCasFilterArrayOutput{})
	pulumi.RegisterOutputType(GetClientGatewayFilterOutput{})
	pulumi.RegisterOutputType(GetClientGatewayFilterArrayOutput{})
	pulumi.RegisterOutputType(GetClientGatewayTagOutput{})
	pulumi.RegisterOutputType(GetClientGatewayTagArrayOutput{})
	pulumi.RegisterOutputType(GetClientGatewaysClientGatewayOutput{})
	pulumi.RegisterOutputType(GetClientGatewaysClientGatewayArrayOutput{})
	pulumi.RegisterOutputType(GetClientGatewaysClientGatewayTagOutput{})
	pulumi.RegisterOutputType(GetClientGatewaysClientGatewayTagArrayOutput{})
	pulumi.RegisterOutputType(GetClientGatewaysFilterOutput{})
	pulumi.RegisterOutputType(GetClientGatewaysFilterArrayOutput{})
	pulumi.RegisterOutputType(GetDhcpOptionFilterOutput{})
	pulumi.RegisterOutputType(GetDhcpOptionFilterArrayOutput{})
	pulumi.RegisterOutputType(GetDhcpOptionTagOutput{})
	pulumi.RegisterOutputType(GetDhcpOptionTagArrayOutput{})
	pulumi.RegisterOutputType(GetDhcpOptionsDhcpOptionOutput{})
	pulumi.RegisterOutputType(GetDhcpOptionsDhcpOptionArrayOutput{})
	pulumi.RegisterOutputType(GetDhcpOptionsDhcpOptionTagOutput{})
	pulumi.RegisterOutputType(GetDhcpOptionsDhcpOptionTagArrayOutput{})
	pulumi.RegisterOutputType(GetDhcpOptionsFilterOutput{})
	pulumi.RegisterOutputType(GetDhcpOptionsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetEntitiesLinkedToPolicyPolicyEntityOutput{})
	pulumi.RegisterOutputType(GetEntitiesLinkedToPolicyPolicyEntityArrayOutput{})
	pulumi.RegisterOutputType(GetEntitiesLinkedToPolicyPolicyEntityAccountOutput{})
	pulumi.RegisterOutputType(GetEntitiesLinkedToPolicyPolicyEntityAccountArrayOutput{})
	pulumi.RegisterOutputType(GetEntitiesLinkedToPolicyPolicyEntityGroupOutput{})
	pulumi.RegisterOutputType(GetEntitiesLinkedToPolicyPolicyEntityGroupArrayOutput{})
	pulumi.RegisterOutputType(GetEntitiesLinkedToPolicyPolicyEntityUserOutput{})
	pulumi.RegisterOutputType(GetEntitiesLinkedToPolicyPolicyEntityUserArrayOutput{})
	pulumi.RegisterOutputType(GetFlexibleGpuCatalogFilterOutput{})
	pulumi.RegisterOutputType(GetFlexibleGpuCatalogFilterArrayOutput{})
	pulumi.RegisterOutputType(GetFlexibleGpuCatalogFlexibleGpuCatalogOutput{})
	pulumi.RegisterOutputType(GetFlexibleGpuCatalogFlexibleGpuCatalogArrayOutput{})
	pulumi.RegisterOutputType(GetFlexibleGpuFilterOutput{})
	pulumi.RegisterOutputType(GetFlexibleGpuFilterArrayOutput{})
	pulumi.RegisterOutputType(GetFlexibleGpusFilterOutput{})
	pulumi.RegisterOutputType(GetFlexibleGpusFilterArrayOutput{})
	pulumi.RegisterOutputType(GetFlexibleGpusFlexibleGpusOutput{})
	pulumi.RegisterOutputType(GetFlexibleGpusFlexibleGpusArrayOutput{})
	pulumi.RegisterOutputType(GetImageBlockDeviceMappingOutput{})
	pulumi.RegisterOutputType(GetImageBlockDeviceMappingArrayOutput{})
	pulumi.RegisterOutputType(GetImageBlockDeviceMappingBsusOutput{})
	pulumi.RegisterOutputType(GetImageBlockDeviceMappingBsusArrayOutput{})
	pulumi.RegisterOutputType(GetImageExportTaskFilterOutput{})
	pulumi.RegisterOutputType(GetImageExportTaskFilterArrayOutput{})
	pulumi.RegisterOutputType(GetImageExportTaskOsuExportOutput{})
	pulumi.RegisterOutputType(GetImageExportTaskOsuExportArrayOutput{})
	pulumi.RegisterOutputType(GetImageExportTaskTagOutput{})
	pulumi.RegisterOutputType(GetImageExportTaskTagArrayOutput{})
	pulumi.RegisterOutputType(GetImageExportTasksFilterOutput{})
	pulumi.RegisterOutputType(GetImageExportTasksFilterArrayOutput{})
	pulumi.RegisterOutputType(GetImageExportTasksImageExportTaskOutput{})
	pulumi.RegisterOutputType(GetImageExportTasksImageExportTaskArrayOutput{})
	pulumi.RegisterOutputType(GetImageExportTasksImageExportTaskOsuExportOutput{})
	pulumi.RegisterOutputType(GetImageExportTasksImageExportTaskOsuExportArrayOutput{})
	pulumi.RegisterOutputType(GetImageExportTasksImageExportTaskTagOutput{})
	pulumi.RegisterOutputType(GetImageExportTasksImageExportTaskTagArrayOutput{})
	pulumi.RegisterOutputType(GetImageFilterOutput{})
	pulumi.RegisterOutputType(GetImageFilterArrayOutput{})
	pulumi.RegisterOutputType(GetImagePermissionsToLaunchOutput{})
	pulumi.RegisterOutputType(GetImagePermissionsToLaunchArrayOutput{})
	pulumi.RegisterOutputType(GetImageStateCommentOutput{})
	pulumi.RegisterOutputType(GetImageStateCommentArrayOutput{})
	pulumi.RegisterOutputType(GetImageTagOutput{})
	pulumi.RegisterOutputType(GetImageTagArrayOutput{})
	pulumi.RegisterOutputType(GetImagesFilterOutput{})
	pulumi.RegisterOutputType(GetImagesFilterArrayOutput{})
	pulumi.RegisterOutputType(GetImagesImageOutput{})
	pulumi.RegisterOutputType(GetImagesImageArrayOutput{})
	pulumi.RegisterOutputType(GetImagesImageBlockDeviceMappingOutput{})
	pulumi.RegisterOutputType(GetImagesImageBlockDeviceMappingArrayOutput{})
	pulumi.RegisterOutputType(GetImagesImageBlockDeviceMappingBsusOutput{})
	pulumi.RegisterOutputType(GetImagesImageBlockDeviceMappingBsusArrayOutput{})
	pulumi.RegisterOutputType(GetImagesImagePermissionsToLaunchOutput{})
	pulumi.RegisterOutputType(GetImagesImagePermissionsToLaunchArrayOutput{})
	pulumi.RegisterOutputType(GetImagesImageStateCommentOutput{})
	pulumi.RegisterOutputType(GetImagesImageStateCommentArrayOutput{})
	pulumi.RegisterOutputType(GetImagesImageTagOutput{})
	pulumi.RegisterOutputType(GetImagesImageTagArrayOutput{})
	pulumi.RegisterOutputType(GetInternetServiceFilterOutput{})
	pulumi.RegisterOutputType(GetInternetServiceFilterArrayOutput{})
	pulumi.RegisterOutputType(GetInternetServiceTagOutput{})
	pulumi.RegisterOutputType(GetInternetServiceTagArrayOutput{})
	pulumi.RegisterOutputType(GetInternetServicesFilterOutput{})
	pulumi.RegisterOutputType(GetInternetServicesFilterArrayOutput{})
	pulumi.RegisterOutputType(GetInternetServicesInternetServiceOutput{})
	pulumi.RegisterOutputType(GetInternetServicesInternetServiceArrayOutput{})
	pulumi.RegisterOutputType(GetInternetServicesInternetServiceTagOutput{})
	pulumi.RegisterOutputType(GetInternetServicesInternetServiceTagArrayOutput{})
	pulumi.RegisterOutputType(GetKeypairFilterOutput{})
	pulumi.RegisterOutputType(GetKeypairFilterArrayOutput{})
	pulumi.RegisterOutputType(GetKeypairTagOutput{})
	pulumi.RegisterOutputType(GetKeypairTagArrayOutput{})
	pulumi.RegisterOutputType(GetKeypairsFilterOutput{})
	pulumi.RegisterOutputType(GetKeypairsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetKeypairsKeypairOutput{})
	pulumi.RegisterOutputType(GetKeypairsKeypairArrayOutput{})
	pulumi.RegisterOutputType(GetKeypairsKeypairTagOutput{})
	pulumi.RegisterOutputType(GetKeypairsKeypairTagArrayOutput{})
	pulumi.RegisterOutputType(GetLoadBalancerAccessLogOutput{})
	pulumi.RegisterOutputType(GetLoadBalancerAccessLogArrayOutput{})
	pulumi.RegisterOutputType(GetLoadBalancerApplicationStickyCookiePolicyOutput{})
	pulumi.RegisterOutputType(GetLoadBalancerApplicationStickyCookiePolicyArrayOutput{})
	pulumi.RegisterOutputType(GetLoadBalancerFilterOutput{})
	pulumi.RegisterOutputType(GetLoadBalancerFilterArrayOutput{})
	pulumi.RegisterOutputType(GetLoadBalancerHealthCheckOutput{})
	pulumi.RegisterOutputType(GetLoadBalancerHealthCheckArrayOutput{})
	pulumi.RegisterOutputType(GetLoadBalancerListenerOutput{})
	pulumi.RegisterOutputType(GetLoadBalancerListenerArrayOutput{})
	pulumi.RegisterOutputType(GetLoadBalancerListenerRuleFilterOutput{})
	pulumi.RegisterOutputType(GetLoadBalancerListenerRuleFilterArrayOutput{})
	pulumi.RegisterOutputType(GetLoadBalancerListenerRulesFilterOutput{})
	pulumi.RegisterOutputType(GetLoadBalancerListenerRulesFilterArrayOutput{})
	pulumi.RegisterOutputType(GetLoadBalancerListenerRulesListenerRuleOutput{})
	pulumi.RegisterOutputType(GetLoadBalancerListenerRulesListenerRuleArrayOutput{})
	pulumi.RegisterOutputType(GetLoadBalancerLoadBalancerStickyCookiePolicyOutput{})
	pulumi.RegisterOutputType(GetLoadBalancerLoadBalancerStickyCookiePolicyArrayOutput{})
	pulumi.RegisterOutputType(GetLoadBalancerSourceSecurityGroupOutput{})
	pulumi.RegisterOutputType(GetLoadBalancerSourceSecurityGroupArrayOutput{})
	pulumi.RegisterOutputType(GetLoadBalancerTagOutput{})
	pulumi.RegisterOutputType(GetLoadBalancerTagArrayOutput{})
	pulumi.RegisterOutputType(GetLoadBalancerTagsFilterOutput{})
	pulumi.RegisterOutputType(GetLoadBalancerTagsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetLoadBalancerTagsTagOutput{})
	pulumi.RegisterOutputType(GetLoadBalancerTagsTagArrayOutput{})
	pulumi.RegisterOutputType(GetLoadBalancerVmHealthBackendVmHealthOutput{})
	pulumi.RegisterOutputType(GetLoadBalancerVmHealthBackendVmHealthArrayOutput{})
	pulumi.RegisterOutputType(GetLoadBalancerVmHealthFilterOutput{})
	pulumi.RegisterOutputType(GetLoadBalancerVmHealthFilterArrayOutput{})
	pulumi.RegisterOutputType(GetLoadBalancersFilterOutput{})
	pulumi.RegisterOutputType(GetLoadBalancersFilterArrayOutput{})
	pulumi.RegisterOutputType(GetLoadBalancersLoadBalancerOutput{})
	pulumi.RegisterOutputType(GetLoadBalancersLoadBalancerArrayOutput{})
	pulumi.RegisterOutputType(GetLoadBalancersLoadBalancerAccessLogOutput{})
	pulumi.RegisterOutputType(GetLoadBalancersLoadBalancerAccessLogArrayOutput{})
	pulumi.RegisterOutputType(GetLoadBalancersLoadBalancerApplicationStickyCookiePolicyOutput{})
	pulumi.RegisterOutputType(GetLoadBalancersLoadBalancerApplicationStickyCookiePolicyArrayOutput{})
	pulumi.RegisterOutputType(GetLoadBalancersLoadBalancerBackendVmIdOutput{})
	pulumi.RegisterOutputType(GetLoadBalancersLoadBalancerBackendVmIdArrayOutput{})
	pulumi.RegisterOutputType(GetLoadBalancersLoadBalancerHealthCheckOutput{})
	pulumi.RegisterOutputType(GetLoadBalancersLoadBalancerHealthCheckArrayOutput{})
	pulumi.RegisterOutputType(GetLoadBalancersLoadBalancerListenerOutput{})
	pulumi.RegisterOutputType(GetLoadBalancersLoadBalancerListenerArrayOutput{})
	pulumi.RegisterOutputType(GetLoadBalancersLoadBalancerLoadBalancerStickyCookiePolicyOutput{})
	pulumi.RegisterOutputType(GetLoadBalancersLoadBalancerLoadBalancerStickyCookiePolicyArrayOutput{})
	pulumi.RegisterOutputType(GetLoadBalancersLoadBalancerSourceSecurityGroupOutput{})
	pulumi.RegisterOutputType(GetLoadBalancersLoadBalancerSourceSecurityGroupArrayOutput{})
	pulumi.RegisterOutputType(GetLoadBalancersLoadBalancerTagOutput{})
	pulumi.RegisterOutputType(GetLoadBalancersLoadBalancerTagArrayOutput{})
	pulumi.RegisterOutputType(GetNatServiceFilterOutput{})
	pulumi.RegisterOutputType(GetNatServiceFilterArrayOutput{})
	pulumi.RegisterOutputType(GetNatServicePublicIpOutput{})
	pulumi.RegisterOutputType(GetNatServicePublicIpArrayOutput{})
	pulumi.RegisterOutputType(GetNatServiceTagOutput{})
	pulumi.RegisterOutputType(GetNatServiceTagArrayOutput{})
	pulumi.RegisterOutputType(GetNatServicesFilterOutput{})
	pulumi.RegisterOutputType(GetNatServicesFilterArrayOutput{})
	pulumi.RegisterOutputType(GetNatServicesNatServiceOutput{})
	pulumi.RegisterOutputType(GetNatServicesNatServiceArrayOutput{})
	pulumi.RegisterOutputType(GetNatServicesNatServicePublicIpOutput{})
	pulumi.RegisterOutputType(GetNatServicesNatServicePublicIpArrayOutput{})
	pulumi.RegisterOutputType(GetNatServicesNatServiceTagOutput{})
	pulumi.RegisterOutputType(GetNatServicesNatServiceTagArrayOutput{})
	pulumi.RegisterOutputType(GetNetAccessPointFilterOutput{})
	pulumi.RegisterOutputType(GetNetAccessPointFilterArrayOutput{})
	pulumi.RegisterOutputType(GetNetAccessPointServicesFilterOutput{})
	pulumi.RegisterOutputType(GetNetAccessPointServicesFilterArrayOutput{})
	pulumi.RegisterOutputType(GetNetAccessPointServicesServiceOutput{})
	pulumi.RegisterOutputType(GetNetAccessPointServicesServiceArrayOutput{})
	pulumi.RegisterOutputType(GetNetAccessPointTagOutput{})
	pulumi.RegisterOutputType(GetNetAccessPointTagArrayOutput{})
	pulumi.RegisterOutputType(GetNetAccessPointsFilterOutput{})
	pulumi.RegisterOutputType(GetNetAccessPointsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetNetAccessPointsNetAccessPointOutput{})
	pulumi.RegisterOutputType(GetNetAccessPointsNetAccessPointArrayOutput{})
	pulumi.RegisterOutputType(GetNetAccessPointsNetAccessPointTagOutput{})
	pulumi.RegisterOutputType(GetNetAccessPointsNetAccessPointTagArrayOutput{})
	pulumi.RegisterOutputType(GetNetAttributesTagOutput{})
	pulumi.RegisterOutputType(GetNetAttributesTagArrayOutput{})
	pulumi.RegisterOutputType(GetNetFilterOutput{})
	pulumi.RegisterOutputType(GetNetFilterArrayOutput{})
	pulumi.RegisterOutputType(GetNetPeeringAccepterNetOutput{})
	pulumi.RegisterOutputType(GetNetPeeringAccepterNetArrayOutput{})
	pulumi.RegisterOutputType(GetNetPeeringFilterOutput{})
	pulumi.RegisterOutputType(GetNetPeeringFilterArrayOutput{})
	pulumi.RegisterOutputType(GetNetPeeringSourceNetOutput{})
	pulumi.RegisterOutputType(GetNetPeeringSourceNetArrayOutput{})
	pulumi.RegisterOutputType(GetNetPeeringStateOutput{})
	pulumi.RegisterOutputType(GetNetPeeringStateArrayOutput{})
	pulumi.RegisterOutputType(GetNetPeeringTagOutput{})
	pulumi.RegisterOutputType(GetNetPeeringTagArrayOutput{})
	pulumi.RegisterOutputType(GetNetPeeringsFilterOutput{})
	pulumi.RegisterOutputType(GetNetPeeringsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetNetPeeringsNetPeeringOutput{})
	pulumi.RegisterOutputType(GetNetPeeringsNetPeeringArrayOutput{})
	pulumi.RegisterOutputType(GetNetPeeringsNetPeeringAccepterNetOutput{})
	pulumi.RegisterOutputType(GetNetPeeringsNetPeeringAccepterNetArrayOutput{})
	pulumi.RegisterOutputType(GetNetPeeringsNetPeeringSourceNetOutput{})
	pulumi.RegisterOutputType(GetNetPeeringsNetPeeringSourceNetArrayOutput{})
	pulumi.RegisterOutputType(GetNetPeeringsNetPeeringStateOutput{})
	pulumi.RegisterOutputType(GetNetPeeringsNetPeeringStateArrayOutput{})
	pulumi.RegisterOutputType(GetNetPeeringsNetPeeringTagOutput{})
	pulumi.RegisterOutputType(GetNetPeeringsNetPeeringTagArrayOutput{})
	pulumi.RegisterOutputType(GetNetTagOutput{})
	pulumi.RegisterOutputType(GetNetTagArrayOutput{})
	pulumi.RegisterOutputType(GetNetsFilterOutput{})
	pulumi.RegisterOutputType(GetNetsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetNetsNetOutput{})
	pulumi.RegisterOutputType(GetNetsNetArrayOutput{})
	pulumi.RegisterOutputType(GetNetsNetTagOutput{})
	pulumi.RegisterOutputType(GetNetsNetTagArrayOutput{})
	pulumi.RegisterOutputType(GetNicFilterOutput{})
	pulumi.RegisterOutputType(GetNicFilterArrayOutput{})
	pulumi.RegisterOutputType(GetNicLinkNicOutput{})
	pulumi.RegisterOutputType(GetNicLinkNicArrayOutput{})
	pulumi.RegisterOutputType(GetNicLinkPublicIpOutput{})
	pulumi.RegisterOutputType(GetNicLinkPublicIpArrayOutput{})
	pulumi.RegisterOutputType(GetNicPrivateIpTypeOutput{})
	pulumi.RegisterOutputType(GetNicPrivateIpTypeArrayOutput{})
	pulumi.RegisterOutputType(GetNicPrivateIpLinkPublicIpOutput{})
	pulumi.RegisterOutputType(GetNicPrivateIpLinkPublicIpArrayOutput{})
	pulumi.RegisterOutputType(GetNicSecurityGroupOutput{})
	pulumi.RegisterOutputType(GetNicSecurityGroupArrayOutput{})
	pulumi.RegisterOutputType(GetNicTagOutput{})
	pulumi.RegisterOutputType(GetNicTagArrayOutput{})
	pulumi.RegisterOutputType(GetNicsFilterOutput{})
	pulumi.RegisterOutputType(GetNicsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetNicsNicOutput{})
	pulumi.RegisterOutputType(GetNicsNicArrayOutput{})
	pulumi.RegisterOutputType(GetNicsNicLinkNicOutput{})
	pulumi.RegisterOutputType(GetNicsNicLinkNicArrayOutput{})
	pulumi.RegisterOutputType(GetNicsNicLinkPublicIpOutput{})
	pulumi.RegisterOutputType(GetNicsNicLinkPublicIpArrayOutput{})
	pulumi.RegisterOutputType(GetNicsNicPrivateIpOutput{})
	pulumi.RegisterOutputType(GetNicsNicPrivateIpArrayOutput{})
	pulumi.RegisterOutputType(GetNicsNicPrivateIpLinkPublicIpOutput{})
	pulumi.RegisterOutputType(GetNicsNicPrivateIpLinkPublicIpArrayOutput{})
	pulumi.RegisterOutputType(GetNicsNicSecurityGroupOutput{})
	pulumi.RegisterOutputType(GetNicsNicSecurityGroupArrayOutput{})
	pulumi.RegisterOutputType(GetNicsNicTagOutput{})
	pulumi.RegisterOutputType(GetNicsNicTagArrayOutput{})
	pulumi.RegisterOutputType(GetPoliciesFilterOutput{})
	pulumi.RegisterOutputType(GetPoliciesFilterArrayOutput{})
	pulumi.RegisterOutputType(GetPoliciesLinkedToUserGroupFilterOutput{})
	pulumi.RegisterOutputType(GetPoliciesLinkedToUserGroupFilterArrayOutput{})
	pulumi.RegisterOutputType(GetPoliciesLinkedToUserGroupPolicyOutput{})
	pulumi.RegisterOutputType(GetPoliciesLinkedToUserGroupPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetPoliciesLinkedToUserPolicyOutput{})
	pulumi.RegisterOutputType(GetPoliciesLinkedToUserPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetPoliciesPolicyOutput{})
	pulumi.RegisterOutputType(GetPoliciesPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetProductTypeFilterOutput{})
	pulumi.RegisterOutputType(GetProductTypeFilterArrayOutput{})
	pulumi.RegisterOutputType(GetProductTypesFilterOutput{})
	pulumi.RegisterOutputType(GetProductTypesFilterArrayOutput{})
	pulumi.RegisterOutputType(GetProductTypesProductTypeOutput{})
	pulumi.RegisterOutputType(GetProductTypesProductTypeArrayOutput{})
	pulumi.RegisterOutputType(GetPublicCatalogCatalogOutput{})
	pulumi.RegisterOutputType(GetPublicCatalogCatalogArrayOutput{})
	pulumi.RegisterOutputType(GetPublicCatalogCatalogEntryOutput{})
	pulumi.RegisterOutputType(GetPublicCatalogCatalogEntryArrayOutput{})
	pulumi.RegisterOutputType(GetPublicIpFilterOutput{})
	pulumi.RegisterOutputType(GetPublicIpFilterArrayOutput{})
	pulumi.RegisterOutputType(GetPublicIpTagOutput{})
	pulumi.RegisterOutputType(GetPublicIpTagArrayOutput{})
	pulumi.RegisterOutputType(GetPublicIpsFilterOutput{})
	pulumi.RegisterOutputType(GetPublicIpsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetPublicIpsPublicIpOutput{})
	pulumi.RegisterOutputType(GetPublicIpsPublicIpArrayOutput{})
	pulumi.RegisterOutputType(GetPublicIpsPublicIpTagOutput{})
	pulumi.RegisterOutputType(GetPublicIpsPublicIpTagArrayOutput{})
	pulumi.RegisterOutputType(GetQuotaFilterOutput{})
	pulumi.RegisterOutputType(GetQuotaFilterArrayOutput{})
	pulumi.RegisterOutputType(GetQuotasFilterOutput{})
	pulumi.RegisterOutputType(GetQuotasFilterArrayOutput{})
	pulumi.RegisterOutputType(GetQuotasQuotaOutput{})
	pulumi.RegisterOutputType(GetQuotasQuotaArrayOutput{})
	pulumi.RegisterOutputType(GetRegionsRegionOutput{})
	pulumi.RegisterOutputType(GetRegionsRegionArrayOutput{})
	pulumi.RegisterOutputType(GetRouteTableFilterOutput{})
	pulumi.RegisterOutputType(GetRouteTableFilterArrayOutput{})
	pulumi.RegisterOutputType(GetRouteTableLinkRouteTableOutput{})
	pulumi.RegisterOutputType(GetRouteTableLinkRouteTableArrayOutput{})
	pulumi.RegisterOutputType(GetRouteTableRouteOutput{})
	pulumi.RegisterOutputType(GetRouteTableRouteArrayOutput{})
	pulumi.RegisterOutputType(GetRouteTableRoutePropagatingVirtualGatewayOutput{})
	pulumi.RegisterOutputType(GetRouteTableRoutePropagatingVirtualGatewayArrayOutput{})
	pulumi.RegisterOutputType(GetRouteTableTagOutput{})
	pulumi.RegisterOutputType(GetRouteTableTagArrayOutput{})
	pulumi.RegisterOutputType(GetRouteTablesFilterOutput{})
	pulumi.RegisterOutputType(GetRouteTablesFilterArrayOutput{})
	pulumi.RegisterOutputType(GetRouteTablesRouteTableOutput{})
	pulumi.RegisterOutputType(GetRouteTablesRouteTableArrayOutput{})
	pulumi.RegisterOutputType(GetRouteTablesRouteTableLinkRouteTableOutput{})
	pulumi.RegisterOutputType(GetRouteTablesRouteTableLinkRouteTableArrayOutput{})
	pulumi.RegisterOutputType(GetRouteTablesRouteTableRouteOutput{})
	pulumi.RegisterOutputType(GetRouteTablesRouteTableRouteArrayOutput{})
	pulumi.RegisterOutputType(GetRouteTablesRouteTableRoutePropagatingVirtualGatewayOutput{})
	pulumi.RegisterOutputType(GetRouteTablesRouteTableRoutePropagatingVirtualGatewayArrayOutput{})
	pulumi.RegisterOutputType(GetRouteTablesRouteTableTagOutput{})
	pulumi.RegisterOutputType(GetRouteTablesRouteTableTagArrayOutput{})
	pulumi.RegisterOutputType(GetSecurityGroupFilterOutput{})
	pulumi.RegisterOutputType(GetSecurityGroupFilterArrayOutput{})
	pulumi.RegisterOutputType(GetSecurityGroupInboundRuleOutput{})
	pulumi.RegisterOutputType(GetSecurityGroupInboundRuleArrayOutput{})
	pulumi.RegisterOutputType(GetSecurityGroupInboundRuleSecurityGroupsMemberOutput{})
	pulumi.RegisterOutputType(GetSecurityGroupInboundRuleSecurityGroupsMemberArrayOutput{})
	pulumi.RegisterOutputType(GetSecurityGroupOutboundRuleOutput{})
	pulumi.RegisterOutputType(GetSecurityGroupOutboundRuleArrayOutput{})
	pulumi.RegisterOutputType(GetSecurityGroupOutboundRuleSecurityGroupsMemberOutput{})
	pulumi.RegisterOutputType(GetSecurityGroupOutboundRuleSecurityGroupsMemberArrayOutput{})
	pulumi.RegisterOutputType(GetSecurityGroupTagOutput{})
	pulumi.RegisterOutputType(GetSecurityGroupTagArrayOutput{})
	pulumi.RegisterOutputType(GetSecurityGroupsFilterOutput{})
	pulumi.RegisterOutputType(GetSecurityGroupsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetSecurityGroupsSecurityGroupOutput{})
	pulumi.RegisterOutputType(GetSecurityGroupsSecurityGroupArrayOutput{})
	pulumi.RegisterOutputType(GetSecurityGroupsSecurityGroupInboundRuleOutput{})
	pulumi.RegisterOutputType(GetSecurityGroupsSecurityGroupInboundRuleArrayOutput{})
	pulumi.RegisterOutputType(GetSecurityGroupsSecurityGroupInboundRuleSecurityGroupsMemberOutput{})
	pulumi.RegisterOutputType(GetSecurityGroupsSecurityGroupInboundRuleSecurityGroupsMemberArrayOutput{})
	pulumi.RegisterOutputType(GetSecurityGroupsSecurityGroupOutboundRuleOutput{})
	pulumi.RegisterOutputType(GetSecurityGroupsSecurityGroupOutboundRuleArrayOutput{})
	pulumi.RegisterOutputType(GetSecurityGroupsSecurityGroupOutboundRuleSecurityGroupsMemberOutput{})
	pulumi.RegisterOutputType(GetSecurityGroupsSecurityGroupOutboundRuleSecurityGroupsMemberArrayOutput{})
	pulumi.RegisterOutputType(GetSecurityGroupsSecurityGroupTagOutput{})
	pulumi.RegisterOutputType(GetSecurityGroupsSecurityGroupTagArrayOutput{})
	pulumi.RegisterOutputType(GetServerCertificateFilterOutput{})
	pulumi.RegisterOutputType(GetServerCertificateFilterArrayOutput{})
	pulumi.RegisterOutputType(GetServerCertificatesFilterOutput{})
	pulumi.RegisterOutputType(GetServerCertificatesFilterArrayOutput{})
	pulumi.RegisterOutputType(GetServerCertificatesServerCertificateOutput{})
	pulumi.RegisterOutputType(GetServerCertificatesServerCertificateArrayOutput{})
	pulumi.RegisterOutputType(GetSnapshotExportTaskFilterOutput{})
	pulumi.RegisterOutputType(GetSnapshotExportTaskFilterArrayOutput{})
	pulumi.RegisterOutputType(GetSnapshotExportTaskOsuExportOutput{})
	pulumi.RegisterOutputType(GetSnapshotExportTaskOsuExportArrayOutput{})
	pulumi.RegisterOutputType(GetSnapshotExportTaskTagOutput{})
	pulumi.RegisterOutputType(GetSnapshotExportTaskTagArrayOutput{})
	pulumi.RegisterOutputType(GetSnapshotExportTasksFilterOutput{})
	pulumi.RegisterOutputType(GetSnapshotExportTasksFilterArrayOutput{})
	pulumi.RegisterOutputType(GetSnapshotExportTasksSnapshotExportTaskOutput{})
	pulumi.RegisterOutputType(GetSnapshotExportTasksSnapshotExportTaskArrayOutput{})
	pulumi.RegisterOutputType(GetSnapshotExportTasksSnapshotExportTaskOsuExportOutput{})
	pulumi.RegisterOutputType(GetSnapshotExportTasksSnapshotExportTaskOsuExportArrayOutput{})
	pulumi.RegisterOutputType(GetSnapshotExportTasksSnapshotExportTaskTagOutput{})
	pulumi.RegisterOutputType(GetSnapshotExportTasksSnapshotExportTaskTagArrayOutput{})
	pulumi.RegisterOutputType(GetSnapshotFilterOutput{})
	pulumi.RegisterOutputType(GetSnapshotFilterArrayOutput{})
	pulumi.RegisterOutputType(GetSnapshotPermissionsToCreateVolumeOutput{})
	pulumi.RegisterOutputType(GetSnapshotPermissionsToCreateVolumeArrayOutput{})
	pulumi.RegisterOutputType(GetSnapshotTagOutput{})
	pulumi.RegisterOutputType(GetSnapshotTagArrayOutput{})
	pulumi.RegisterOutputType(GetSnapshotsFilterOutput{})
	pulumi.RegisterOutputType(GetSnapshotsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetSnapshotsSnapshotOutput{})
	pulumi.RegisterOutputType(GetSnapshotsSnapshotArrayOutput{})
	pulumi.RegisterOutputType(GetSnapshotsSnapshotPermissionsToCreateVolumeOutput{})
	pulumi.RegisterOutputType(GetSnapshotsSnapshotPermissionsToCreateVolumeArrayOutput{})
	pulumi.RegisterOutputType(GetSnapshotsSnapshotTagOutput{})
	pulumi.RegisterOutputType(GetSnapshotsSnapshotTagArrayOutput{})
	pulumi.RegisterOutputType(GetSubnetFilterOutput{})
	pulumi.RegisterOutputType(GetSubnetFilterArrayOutput{})
	pulumi.RegisterOutputType(GetSubnetTagOutput{})
	pulumi.RegisterOutputType(GetSubnetTagArrayOutput{})
	pulumi.RegisterOutputType(GetSubnetsFilterOutput{})
	pulumi.RegisterOutputType(GetSubnetsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetSubnetsSubnetOutput{})
	pulumi.RegisterOutputType(GetSubnetsSubnetArrayOutput{})
	pulumi.RegisterOutputType(GetSubnetsSubnetTagOutput{})
	pulumi.RegisterOutputType(GetSubnetsSubnetTagArrayOutput{})
	pulumi.RegisterOutputType(GetSubregionsFilterOutput{})
	pulumi.RegisterOutputType(GetSubregionsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetSubregionsSubregionOutput{})
	pulumi.RegisterOutputType(GetSubregionsSubregionArrayOutput{})
	pulumi.RegisterOutputType(GetTagFilterOutput{})
	pulumi.RegisterOutputType(GetTagFilterArrayOutput{})
	pulumi.RegisterOutputType(GetTagsFilterOutput{})
	pulumi.RegisterOutputType(GetTagsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetTagsTagOutput{})
	pulumi.RegisterOutputType(GetTagsTagArrayOutput{})
	pulumi.RegisterOutputType(GetUserFilterOutput{})
	pulumi.RegisterOutputType(GetUserFilterArrayOutput{})
	pulumi.RegisterOutputType(GetUserGroupUserOutput{})
	pulumi.RegisterOutputType(GetUserGroupUserArrayOutput{})
	pulumi.RegisterOutputType(GetUserGroupsFilterOutput{})
	pulumi.RegisterOutputType(GetUserGroupsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetUserGroupsPerUserUserGroupOutput{})
	pulumi.RegisterOutputType(GetUserGroupsPerUserUserGroupArrayOutput{})
	pulumi.RegisterOutputType(GetUserGroupsUserGroupOutput{})
	pulumi.RegisterOutputType(GetUserGroupsUserGroupArrayOutput{})
	pulumi.RegisterOutputType(GetUsersFilterOutput{})
	pulumi.RegisterOutputType(GetUsersFilterArrayOutput{})
	pulumi.RegisterOutputType(GetUsersUserOutput{})
	pulumi.RegisterOutputType(GetUsersUserArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualGatewayFilterOutput{})
	pulumi.RegisterOutputType(GetVirtualGatewayFilterArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualGatewayNetToVirtualGatewayLinkOutput{})
	pulumi.RegisterOutputType(GetVirtualGatewayNetToVirtualGatewayLinkArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualGatewayTagOutput{})
	pulumi.RegisterOutputType(GetVirtualGatewayTagArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualGatewaysFilterOutput{})
	pulumi.RegisterOutputType(GetVirtualGatewaysFilterArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualGatewaysVirtualGatewayOutput{})
	pulumi.RegisterOutputType(GetVirtualGatewaysVirtualGatewayArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualGatewaysVirtualGatewayNetToVirtualGatewayLinkOutput{})
	pulumi.RegisterOutputType(GetVirtualGatewaysVirtualGatewayNetToVirtualGatewayLinkArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualGatewaysVirtualGatewayTagOutput{})
	pulumi.RegisterOutputType(GetVirtualGatewaysVirtualGatewayTagArrayOutput{})
	pulumi.RegisterOutputType(GetVmActionsOnNextBootOutput{})
	pulumi.RegisterOutputType(GetVmActionsOnNextBootArrayOutput{})
	pulumi.RegisterOutputType(GetVmBlockDeviceMappingsCreatedOutput{})
	pulumi.RegisterOutputType(GetVmBlockDeviceMappingsCreatedArrayOutput{})
	pulumi.RegisterOutputType(GetVmBlockDeviceMappingsCreatedBsusOutput{})
	pulumi.RegisterOutputType(GetVmBlockDeviceMappingsCreatedBsusArrayOutput{})
	pulumi.RegisterOutputType(GetVmBlockDeviceMappingsCreatedBsusTagOutput{})
	pulumi.RegisterOutputType(GetVmBlockDeviceMappingsCreatedBsusTagArrayOutput{})
	pulumi.RegisterOutputType(GetVmFilterOutput{})
	pulumi.RegisterOutputType(GetVmFilterArrayOutput{})
	pulumi.RegisterOutputType(GetVmNicOutput{})
	pulumi.RegisterOutputType(GetVmNicArrayOutput{})
	pulumi.RegisterOutputType(GetVmNicLinkNicOutput{})
	pulumi.RegisterOutputType(GetVmNicLinkNicArrayOutput{})
	pulumi.RegisterOutputType(GetVmNicLinkPublicIpOutput{})
	pulumi.RegisterOutputType(GetVmNicLinkPublicIpArrayOutput{})
	pulumi.RegisterOutputType(GetVmNicPrivateIpOutput{})
	pulumi.RegisterOutputType(GetVmNicPrivateIpArrayOutput{})
	pulumi.RegisterOutputType(GetVmNicPrivateIpLinkPublicIpOutput{})
	pulumi.RegisterOutputType(GetVmNicPrivateIpLinkPublicIpArrayOutput{})
	pulumi.RegisterOutputType(GetVmNicSecurityGroupOutput{})
	pulumi.RegisterOutputType(GetVmNicSecurityGroupArrayOutput{})
	pulumi.RegisterOutputType(GetVmPrimaryNicOutput{})
	pulumi.RegisterOutputType(GetVmPrimaryNicArrayOutput{})
	pulumi.RegisterOutputType(GetVmPrimaryNicLinkNicOutput{})
	pulumi.RegisterOutputType(GetVmPrimaryNicLinkNicArrayOutput{})
	pulumi.RegisterOutputType(GetVmPrimaryNicLinkPublicIpOutput{})
	pulumi.RegisterOutputType(GetVmPrimaryNicLinkPublicIpArrayOutput{})
	pulumi.RegisterOutputType(GetVmPrimaryNicPrivateIpOutput{})
	pulumi.RegisterOutputType(GetVmPrimaryNicPrivateIpArrayOutput{})
	pulumi.RegisterOutputType(GetVmPrimaryNicPrivateIpLinkPublicIpOutput{})
	pulumi.RegisterOutputType(GetVmPrimaryNicPrivateIpLinkPublicIpArrayOutput{})
	pulumi.RegisterOutputType(GetVmPrimaryNicSecurityGroupOutput{})
	pulumi.RegisterOutputType(GetVmPrimaryNicSecurityGroupArrayOutput{})
	pulumi.RegisterOutputType(GetVmSecurityGroupOutput{})
	pulumi.RegisterOutputType(GetVmSecurityGroupArrayOutput{})
	pulumi.RegisterOutputType(GetVmStateFilterOutput{})
	pulumi.RegisterOutputType(GetVmStateFilterArrayOutput{})
	pulumi.RegisterOutputType(GetVmStateMaintenanceEventOutput{})
	pulumi.RegisterOutputType(GetVmStateMaintenanceEventArrayOutput{})
	pulumi.RegisterOutputType(GetVmStatesFilterOutput{})
	pulumi.RegisterOutputType(GetVmStatesFilterArrayOutput{})
	pulumi.RegisterOutputType(GetVmStatesVmStateOutput{})
	pulumi.RegisterOutputType(GetVmStatesVmStateArrayOutput{})
	pulumi.RegisterOutputType(GetVmStatesVmStateMaintenanceEventOutput{})
	pulumi.RegisterOutputType(GetVmStatesVmStateMaintenanceEventArrayOutput{})
	pulumi.RegisterOutputType(GetVmTagOutput{})
	pulumi.RegisterOutputType(GetVmTagArrayOutput{})
	pulumi.RegisterOutputType(GetVmTypesFilterOutput{})
	pulumi.RegisterOutputType(GetVmTypesFilterArrayOutput{})
	pulumi.RegisterOutputType(GetVmTypesVmTypeOutput{})
	pulumi.RegisterOutputType(GetVmTypesVmTypeArrayOutput{})
	pulumi.RegisterOutputType(GetVmsFilterOutput{})
	pulumi.RegisterOutputType(GetVmsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetVmsVmOutput{})
	pulumi.RegisterOutputType(GetVmsVmArrayOutput{})
	pulumi.RegisterOutputType(GetVmsVmActionsOnNextBootOutput{})
	pulumi.RegisterOutputType(GetVmsVmActionsOnNextBootArrayOutput{})
	pulumi.RegisterOutputType(GetVmsVmBlockDeviceMappingsCreatedOutput{})
	pulumi.RegisterOutputType(GetVmsVmBlockDeviceMappingsCreatedArrayOutput{})
	pulumi.RegisterOutputType(GetVmsVmBlockDeviceMappingsCreatedBsusOutput{})
	pulumi.RegisterOutputType(GetVmsVmBlockDeviceMappingsCreatedBsusArrayOutput{})
	pulumi.RegisterOutputType(GetVmsVmBlockDeviceMappingsCreatedBsusTagOutput{})
	pulumi.RegisterOutputType(GetVmsVmBlockDeviceMappingsCreatedBsusTagArrayOutput{})
	pulumi.RegisterOutputType(GetVmsVmNicOutput{})
	pulumi.RegisterOutputType(GetVmsVmNicArrayOutput{})
	pulumi.RegisterOutputType(GetVmsVmNicLinkNicOutput{})
	pulumi.RegisterOutputType(GetVmsVmNicLinkNicArrayOutput{})
	pulumi.RegisterOutputType(GetVmsVmNicLinkPublicIpOutput{})
	pulumi.RegisterOutputType(GetVmsVmNicLinkPublicIpArrayOutput{})
	pulumi.RegisterOutputType(GetVmsVmNicPrivateIpOutput{})
	pulumi.RegisterOutputType(GetVmsVmNicPrivateIpArrayOutput{})
	pulumi.RegisterOutputType(GetVmsVmNicPrivateIpLinkPublicIpOutput{})
	pulumi.RegisterOutputType(GetVmsVmNicPrivateIpLinkPublicIpArrayOutput{})
	pulumi.RegisterOutputType(GetVmsVmNicSecurityGroupOutput{})
	pulumi.RegisterOutputType(GetVmsVmNicSecurityGroupArrayOutput{})
	pulumi.RegisterOutputType(GetVmsVmPrimaryNicOutput{})
	pulumi.RegisterOutputType(GetVmsVmPrimaryNicArrayOutput{})
	pulumi.RegisterOutputType(GetVmsVmPrimaryNicLinkNicOutput{})
	pulumi.RegisterOutputType(GetVmsVmPrimaryNicLinkNicArrayOutput{})
	pulumi.RegisterOutputType(GetVmsVmPrimaryNicLinkPublicIpOutput{})
	pulumi.RegisterOutputType(GetVmsVmPrimaryNicLinkPublicIpArrayOutput{})
	pulumi.RegisterOutputType(GetVmsVmPrimaryNicPrivateIpOutput{})
	pulumi.RegisterOutputType(GetVmsVmPrimaryNicPrivateIpArrayOutput{})
	pulumi.RegisterOutputType(GetVmsVmPrimaryNicPrivateIpLinkPublicIpOutput{})
	pulumi.RegisterOutputType(GetVmsVmPrimaryNicPrivateIpLinkPublicIpArrayOutput{})
	pulumi.RegisterOutputType(GetVmsVmPrimaryNicSecurityGroupOutput{})
	pulumi.RegisterOutputType(GetVmsVmPrimaryNicSecurityGroupArrayOutput{})
	pulumi.RegisterOutputType(GetVmsVmSecurityGroupOutput{})
	pulumi.RegisterOutputType(GetVmsVmSecurityGroupArrayOutput{})
	pulumi.RegisterOutputType(GetVmsVmTagOutput{})
	pulumi.RegisterOutputType(GetVmsVmTagArrayOutput{})
	pulumi.RegisterOutputType(GetVolumeFilterOutput{})
	pulumi.RegisterOutputType(GetVolumeFilterArrayOutput{})
	pulumi.RegisterOutputType(GetVolumeLinkedVolumeOutput{})
	pulumi.RegisterOutputType(GetVolumeLinkedVolumeArrayOutput{})
	pulumi.RegisterOutputType(GetVolumeTagOutput{})
	pulumi.RegisterOutputType(GetVolumeTagArrayOutput{})
	pulumi.RegisterOutputType(GetVolumesFilterOutput{})
	pulumi.RegisterOutputType(GetVolumesFilterArrayOutput{})
	pulumi.RegisterOutputType(GetVolumesVolumeOutput{})
	pulumi.RegisterOutputType(GetVolumesVolumeArrayOutput{})
	pulumi.RegisterOutputType(GetVolumesVolumeLinkedVolumeOutput{})
	pulumi.RegisterOutputType(GetVolumesVolumeLinkedVolumeArrayOutput{})
	pulumi.RegisterOutputType(GetVolumesVolumeTagOutput{})
	pulumi.RegisterOutputType(GetVolumesVolumeTagArrayOutput{})
	pulumi.RegisterOutputType(GetVpnConnectionFilterOutput{})
	pulumi.RegisterOutputType(GetVpnConnectionFilterArrayOutput{})
	pulumi.RegisterOutputType(GetVpnConnectionRouteTypeOutput{})
	pulumi.RegisterOutputType(GetVpnConnectionRouteTypeArrayOutput{})
	pulumi.RegisterOutputType(GetVpnConnectionTagOutput{})
	pulumi.RegisterOutputType(GetVpnConnectionTagArrayOutput{})
	pulumi.RegisterOutputType(GetVpnConnectionVgwTelemetryOutput{})
	pulumi.RegisterOutputType(GetVpnConnectionVgwTelemetryArrayOutput{})
	pulumi.RegisterOutputType(GetVpnConnectionsFilterOutput{})
	pulumi.RegisterOutputType(GetVpnConnectionsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetVpnConnectionsVpnConnectionOutput{})
	pulumi.RegisterOutputType(GetVpnConnectionsVpnConnectionArrayOutput{})
	pulumi.RegisterOutputType(GetVpnConnectionsVpnConnectionRouteOutput{})
	pulumi.RegisterOutputType(GetVpnConnectionsVpnConnectionRouteArrayOutput{})
	pulumi.RegisterOutputType(GetVpnConnectionsVpnConnectionTagOutput{})
	pulumi.RegisterOutputType(GetVpnConnectionsVpnConnectionTagArrayOutput{})
	pulumi.RegisterOutputType(GetVpnConnectionsVpnConnectionVgwTelemetryOutput{})
	pulumi.RegisterOutputType(GetVpnConnectionsVpnConnectionVgwTelemetryArrayOutput{})
}
