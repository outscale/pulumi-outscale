// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package outscale

import (
	"context"
	"reflect"

	"github.com/outscale/pulumi-outscale/sdk/go/outscale/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides information about subregions.
//
// For more information on this resource, see the [User Guide](https://docs.outscale.com/en/userguide/About-Regions-Endpoints-and-Availability-Zones.html).\
// For more information on this resource actions, see the [API documentation](https://docs.outscale.com/api#readsubregions).
//
// ## Example Usage
func GetSubregions(ctx *pulumi.Context, args *GetSubregionsArgs, opts ...pulumi.InvokeOption) (*GetSubregionsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetSubregionsResult
	err := ctx.Invoke("outscale:index/getSubregions:getSubregions", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSubregions.
type GetSubregionsArgs struct {
	// A combination of a filter name and one or more filter values. You can specify this argument for as many filter names as you need. The filter name can be any of the following:
	Filters []GetSubregionsFilter `pulumi:"filters"`
}

// A collection of values returned by getSubregions.
type GetSubregionsResult struct {
	Filters []GetSubregionsFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id        string `pulumi:"id"`
	RequestId string `pulumi:"requestId"`
	// Information about one or more Subregions.
	Subregions []GetSubregionsSubregion `pulumi:"subregions"`
}

func GetSubregionsOutput(ctx *pulumi.Context, args GetSubregionsOutputArgs, opts ...pulumi.InvokeOption) GetSubregionsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetSubregionsResult, error) {
			args := v.(GetSubregionsArgs)
			r, err := GetSubregions(ctx, &args, opts...)
			var s GetSubregionsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetSubregionsResultOutput)
}

// A collection of arguments for invoking getSubregions.
type GetSubregionsOutputArgs struct {
	// A combination of a filter name and one or more filter values. You can specify this argument for as many filter names as you need. The filter name can be any of the following:
	Filters GetSubregionsFilterArrayInput `pulumi:"filters"`
}

func (GetSubregionsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubregionsArgs)(nil)).Elem()
}

// A collection of values returned by getSubregions.
type GetSubregionsResultOutput struct{ *pulumi.OutputState }

func (GetSubregionsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubregionsResult)(nil)).Elem()
}

func (o GetSubregionsResultOutput) ToGetSubregionsResultOutput() GetSubregionsResultOutput {
	return o
}

func (o GetSubregionsResultOutput) ToGetSubregionsResultOutputWithContext(ctx context.Context) GetSubregionsResultOutput {
	return o
}

func (o GetSubregionsResultOutput) ToOutput(ctx context.Context) pulumix.Output[GetSubregionsResult] {
	return pulumix.Output[GetSubregionsResult]{
		OutputState: o.OutputState,
	}
}

func (o GetSubregionsResultOutput) Filters() GetSubregionsFilterArrayOutput {
	return o.ApplyT(func(v GetSubregionsResult) []GetSubregionsFilter { return v.Filters }).(GetSubregionsFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetSubregionsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubregionsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetSubregionsResultOutput) RequestId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubregionsResult) string { return v.RequestId }).(pulumi.StringOutput)
}

// Information about one or more Subregions.
func (o GetSubregionsResultOutput) Subregions() GetSubregionsSubregionArrayOutput {
	return o.ApplyT(func(v GetSubregionsResult) []GetSubregionsSubregion { return v.Subregions }).(GetSubregionsSubregionArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetSubregionsResultOutput{})
}
