// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.outscale.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.outscale.outputs.GetPublicIpsPublicIpTag;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetPublicIpsPublicIp {
    /**
     * @return (Required in a Net) The ID representing the association of the public IP with the VM or the NIC.
     * 
     */
    private String linkPublicIpId;
    /**
     * @return The account ID of the owner of the NIC.
     * 
     */
    private String nicAccountId;
    /**
     * @return The ID of the NIC the public IP is associated with (if any).
     * 
     */
    private String nicId;
    /**
     * @return The private IP associated with the public IP.
     * 
     */
    private String privateIp;
    /**
     * @return The public IP.
     * 
     */
    private String publicIp;
    /**
     * @return The allocation ID of the public IP.
     * 
     */
    private String publicIpId;
    /**
     * @return The key/value combinations of the tags associated with the public IPs, in the following format: `TAGKEY=TAGVALUE`.
     * 
     */
    private List<GetPublicIpsPublicIpTag> tags;
    /**
     * @return The ID of the VM the public IP is associated with (if any).
     * 
     */
    private String vmId;

    private GetPublicIpsPublicIp() {}
    /**
     * @return (Required in a Net) The ID representing the association of the public IP with the VM or the NIC.
     * 
     */
    public String linkPublicIpId() {
        return this.linkPublicIpId;
    }
    /**
     * @return The account ID of the owner of the NIC.
     * 
     */
    public String nicAccountId() {
        return this.nicAccountId;
    }
    /**
     * @return The ID of the NIC the public IP is associated with (if any).
     * 
     */
    public String nicId() {
        return this.nicId;
    }
    /**
     * @return The private IP associated with the public IP.
     * 
     */
    public String privateIp() {
        return this.privateIp;
    }
    /**
     * @return The public IP.
     * 
     */
    public String publicIp() {
        return this.publicIp;
    }
    /**
     * @return The allocation ID of the public IP.
     * 
     */
    public String publicIpId() {
        return this.publicIpId;
    }
    /**
     * @return The key/value combinations of the tags associated with the public IPs, in the following format: `TAGKEY=TAGVALUE`.
     * 
     */
    public List<GetPublicIpsPublicIpTag> tags() {
        return this.tags;
    }
    /**
     * @return The ID of the VM the public IP is associated with (if any).
     * 
     */
    public String vmId() {
        return this.vmId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPublicIpsPublicIp defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String linkPublicIpId;
        private String nicAccountId;
        private String nicId;
        private String privateIp;
        private String publicIp;
        private String publicIpId;
        private List<GetPublicIpsPublicIpTag> tags;
        private String vmId;
        public Builder() {}
        public Builder(GetPublicIpsPublicIp defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.linkPublicIpId = defaults.linkPublicIpId;
    	      this.nicAccountId = defaults.nicAccountId;
    	      this.nicId = defaults.nicId;
    	      this.privateIp = defaults.privateIp;
    	      this.publicIp = defaults.publicIp;
    	      this.publicIpId = defaults.publicIpId;
    	      this.tags = defaults.tags;
    	      this.vmId = defaults.vmId;
        }

        @CustomType.Setter
        public Builder linkPublicIpId(String linkPublicIpId) {
            this.linkPublicIpId = Objects.requireNonNull(linkPublicIpId);
            return this;
        }
        @CustomType.Setter
        public Builder nicAccountId(String nicAccountId) {
            this.nicAccountId = Objects.requireNonNull(nicAccountId);
            return this;
        }
        @CustomType.Setter
        public Builder nicId(String nicId) {
            this.nicId = Objects.requireNonNull(nicId);
            return this;
        }
        @CustomType.Setter
        public Builder privateIp(String privateIp) {
            this.privateIp = Objects.requireNonNull(privateIp);
            return this;
        }
        @CustomType.Setter
        public Builder publicIp(String publicIp) {
            this.publicIp = Objects.requireNonNull(publicIp);
            return this;
        }
        @CustomType.Setter
        public Builder publicIpId(String publicIpId) {
            this.publicIpId = Objects.requireNonNull(publicIpId);
            return this;
        }
        @CustomType.Setter
        public Builder tags(List<GetPublicIpsPublicIpTag> tags) {
            this.tags = Objects.requireNonNull(tags);
            return this;
        }
        public Builder tags(GetPublicIpsPublicIpTag... tags) {
            return tags(List.of(tags));
        }
        @CustomType.Setter
        public Builder vmId(String vmId) {
            this.vmId = Objects.requireNonNull(vmId);
            return this;
        }
        public GetPublicIpsPublicIp build() {
            final var o = new GetPublicIpsPublicIp();
            o.linkPublicIpId = linkPublicIpId;
            o.nicAccountId = nicAccountId;
            o.nicId = nicId;
            o.privateIp = privateIp;
            o.publicIp = publicIp;
            o.publicIpId = publicIpId;
            o.tags = tags;
            o.vmId = vmId;
            return o;
        }
    }
}
