// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.outscale;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.outscale.inputs.SecurityGroupRuleRuleArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SecurityGroupRuleArgs extends com.pulumi.resources.ResourceArgs {

    public static final SecurityGroupRuleArgs Empty = new SecurityGroupRuleArgs();

    /**
     * The direction of the flow: `Inbound` or `Outbound`. You can specify `Outbound` for Nets only.
     * 
     */
    @Import(name="flow", required=true)
    private Output<String> flow;

    /**
     * @return The direction of the flow: `Inbound` or `Outbound`. You can specify `Outbound` for Nets only.
     * 
     */
    public Output<String> flow() {
        return this.flow;
    }

    /**
     * The beginning of the port range for the TCP and UDP protocols, or an ICMP type number.
     * 
     */
    @Import(name="fromPortRange")
    private @Nullable Output<Integer> fromPortRange;

    /**
     * @return The beginning of the port range for the TCP and UDP protocols, or an ICMP type number.
     * 
     */
    public Optional<Output<Integer>> fromPortRange() {
        return Optional.ofNullable(this.fromPortRange);
    }

    /**
     * The IP protocol name (`tcp`, `udp`, `icmp`, or `-1` for all protocols). By default, `-1`. In a Net, this can also be an IP protocol number. For more information, see the [IANA.org website](https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml).
     * 
     */
    @Import(name="ipProtocol")
    private @Nullable Output<String> ipProtocol;

    /**
     * @return The IP protocol name (`tcp`, `udp`, `icmp`, or `-1` for all protocols). By default, `-1`. In a Net, this can also be an IP protocol number. For more information, see the [IANA.org website](https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml).
     * 
     */
    public Optional<Output<String>> ipProtocol() {
        return Optional.ofNullable(this.ipProtocol);
    }

    /**
     * The IP range for the security group rule, in CIDR notation (for example, 10.0.0.0/16). If you specify this parameter, you cannot specify the `rules` parameter and its subparameters.
     * 
     */
    @Import(name="ipRange")
    private @Nullable Output<String> ipRange;

    /**
     * @return The IP range for the security group rule, in CIDR notation (for example, 10.0.0.0/16). If you specify this parameter, you cannot specify the `rules` parameter and its subparameters.
     * 
     */
    public Optional<Output<String>> ipRange() {
        return Optional.ofNullable(this.ipRange);
    }

    /**
     * Information about the security group rule to create. If you specify this parent parameter and its subparameters, you cannot specify the following parent parameters: `from_port_range`, `ip_protocol`, `ip_range`, and `to_port_range`.
     * 
     */
    @Import(name="rules")
    private @Nullable Output<List<SecurityGroupRuleRuleArgs>> rules;

    /**
     * @return Information about the security group rule to create. If you specify this parent parameter and its subparameters, you cannot specify the following parent parameters: `from_port_range`, `ip_protocol`, `ip_range`, and `to_port_range`.
     * 
     */
    public Optional<Output<List<SecurityGroupRuleRuleArgs>>> rules() {
        return Optional.ofNullable(this.rules);
    }

    /**
     * The account ID that owns the source or destination security group specified in the `security_group_name_to_link` parameter.
     * 
     */
    @Import(name="securityGroupAccountIdToLink")
    private @Nullable Output<String> securityGroupAccountIdToLink;

    /**
     * @return The account ID that owns the source or destination security group specified in the `security_group_name_to_link` parameter.
     * 
     */
    public Optional<Output<String>> securityGroupAccountIdToLink() {
        return Optional.ofNullable(this.securityGroupAccountIdToLink);
    }

    /**
     * The ID of the security group for which you want to create a rule.
     * 
     */
    @Import(name="securityGroupId", required=true)
    private Output<String> securityGroupId;

    /**
     * @return The ID of the security group for which you want to create a rule.
     * 
     */
    public Output<String> securityGroupId() {
        return this.securityGroupId;
    }

    /**
     * The ID of a source or destination security group that you want to link to the security group of the rule.
     * 
     */
    @Import(name="securityGroupNameToLink")
    private @Nullable Output<String> securityGroupNameToLink;

    /**
     * @return The ID of a source or destination security group that you want to link to the security group of the rule.
     * 
     */
    public Optional<Output<String>> securityGroupNameToLink() {
        return Optional.ofNullable(this.securityGroupNameToLink);
    }

    /**
     * The end of the port range for the TCP and UDP protocols, or an ICMP code number. If you specify this parameter, you cannot specify the `rules` parameter and its subparameters.
     * 
     */
    @Import(name="toPortRange")
    private @Nullable Output<Integer> toPortRange;

    /**
     * @return The end of the port range for the TCP and UDP protocols, or an ICMP code number. If you specify this parameter, you cannot specify the `rules` parameter and its subparameters.
     * 
     */
    public Optional<Output<Integer>> toPortRange() {
        return Optional.ofNullable(this.toPortRange);
    }

    private SecurityGroupRuleArgs() {}

    private SecurityGroupRuleArgs(SecurityGroupRuleArgs $) {
        this.flow = $.flow;
        this.fromPortRange = $.fromPortRange;
        this.ipProtocol = $.ipProtocol;
        this.ipRange = $.ipRange;
        this.rules = $.rules;
        this.securityGroupAccountIdToLink = $.securityGroupAccountIdToLink;
        this.securityGroupId = $.securityGroupId;
        this.securityGroupNameToLink = $.securityGroupNameToLink;
        this.toPortRange = $.toPortRange;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SecurityGroupRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SecurityGroupRuleArgs $;

        public Builder() {
            $ = new SecurityGroupRuleArgs();
        }

        public Builder(SecurityGroupRuleArgs defaults) {
            $ = new SecurityGroupRuleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param flow The direction of the flow: `Inbound` or `Outbound`. You can specify `Outbound` for Nets only.
         * 
         * @return builder
         * 
         */
        public Builder flow(Output<String> flow) {
            $.flow = flow;
            return this;
        }

        /**
         * @param flow The direction of the flow: `Inbound` or `Outbound`. You can specify `Outbound` for Nets only.
         * 
         * @return builder
         * 
         */
        public Builder flow(String flow) {
            return flow(Output.of(flow));
        }

        /**
         * @param fromPortRange The beginning of the port range for the TCP and UDP protocols, or an ICMP type number.
         * 
         * @return builder
         * 
         */
        public Builder fromPortRange(@Nullable Output<Integer> fromPortRange) {
            $.fromPortRange = fromPortRange;
            return this;
        }

        /**
         * @param fromPortRange The beginning of the port range for the TCP and UDP protocols, or an ICMP type number.
         * 
         * @return builder
         * 
         */
        public Builder fromPortRange(Integer fromPortRange) {
            return fromPortRange(Output.of(fromPortRange));
        }

        /**
         * @param ipProtocol The IP protocol name (`tcp`, `udp`, `icmp`, or `-1` for all protocols). By default, `-1`. In a Net, this can also be an IP protocol number. For more information, see the [IANA.org website](https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml).
         * 
         * @return builder
         * 
         */
        public Builder ipProtocol(@Nullable Output<String> ipProtocol) {
            $.ipProtocol = ipProtocol;
            return this;
        }

        /**
         * @param ipProtocol The IP protocol name (`tcp`, `udp`, `icmp`, or `-1` for all protocols). By default, `-1`. In a Net, this can also be an IP protocol number. For more information, see the [IANA.org website](https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml).
         * 
         * @return builder
         * 
         */
        public Builder ipProtocol(String ipProtocol) {
            return ipProtocol(Output.of(ipProtocol));
        }

        /**
         * @param ipRange The IP range for the security group rule, in CIDR notation (for example, 10.0.0.0/16). If you specify this parameter, you cannot specify the `rules` parameter and its subparameters.
         * 
         * @return builder
         * 
         */
        public Builder ipRange(@Nullable Output<String> ipRange) {
            $.ipRange = ipRange;
            return this;
        }

        /**
         * @param ipRange The IP range for the security group rule, in CIDR notation (for example, 10.0.0.0/16). If you specify this parameter, you cannot specify the `rules` parameter and its subparameters.
         * 
         * @return builder
         * 
         */
        public Builder ipRange(String ipRange) {
            return ipRange(Output.of(ipRange));
        }

        /**
         * @param rules Information about the security group rule to create. If you specify this parent parameter and its subparameters, you cannot specify the following parent parameters: `from_port_range`, `ip_protocol`, `ip_range`, and `to_port_range`.
         * 
         * @return builder
         * 
         */
        public Builder rules(@Nullable Output<List<SecurityGroupRuleRuleArgs>> rules) {
            $.rules = rules;
            return this;
        }

        /**
         * @param rules Information about the security group rule to create. If you specify this parent parameter and its subparameters, you cannot specify the following parent parameters: `from_port_range`, `ip_protocol`, `ip_range`, and `to_port_range`.
         * 
         * @return builder
         * 
         */
        public Builder rules(List<SecurityGroupRuleRuleArgs> rules) {
            return rules(Output.of(rules));
        }

        /**
         * @param rules Information about the security group rule to create. If you specify this parent parameter and its subparameters, you cannot specify the following parent parameters: `from_port_range`, `ip_protocol`, `ip_range`, and `to_port_range`.
         * 
         * @return builder
         * 
         */
        public Builder rules(SecurityGroupRuleRuleArgs... rules) {
            return rules(List.of(rules));
        }

        /**
         * @param securityGroupAccountIdToLink The account ID that owns the source or destination security group specified in the `security_group_name_to_link` parameter.
         * 
         * @return builder
         * 
         */
        public Builder securityGroupAccountIdToLink(@Nullable Output<String> securityGroupAccountIdToLink) {
            $.securityGroupAccountIdToLink = securityGroupAccountIdToLink;
            return this;
        }

        /**
         * @param securityGroupAccountIdToLink The account ID that owns the source or destination security group specified in the `security_group_name_to_link` parameter.
         * 
         * @return builder
         * 
         */
        public Builder securityGroupAccountIdToLink(String securityGroupAccountIdToLink) {
            return securityGroupAccountIdToLink(Output.of(securityGroupAccountIdToLink));
        }

        /**
         * @param securityGroupId The ID of the security group for which you want to create a rule.
         * 
         * @return builder
         * 
         */
        public Builder securityGroupId(Output<String> securityGroupId) {
            $.securityGroupId = securityGroupId;
            return this;
        }

        /**
         * @param securityGroupId The ID of the security group for which you want to create a rule.
         * 
         * @return builder
         * 
         */
        public Builder securityGroupId(String securityGroupId) {
            return securityGroupId(Output.of(securityGroupId));
        }

        /**
         * @param securityGroupNameToLink The ID of a source or destination security group that you want to link to the security group of the rule.
         * 
         * @return builder
         * 
         */
        public Builder securityGroupNameToLink(@Nullable Output<String> securityGroupNameToLink) {
            $.securityGroupNameToLink = securityGroupNameToLink;
            return this;
        }

        /**
         * @param securityGroupNameToLink The ID of a source or destination security group that you want to link to the security group of the rule.
         * 
         * @return builder
         * 
         */
        public Builder securityGroupNameToLink(String securityGroupNameToLink) {
            return securityGroupNameToLink(Output.of(securityGroupNameToLink));
        }

        /**
         * @param toPortRange The end of the port range for the TCP and UDP protocols, or an ICMP code number. If you specify this parameter, you cannot specify the `rules` parameter and its subparameters.
         * 
         * @return builder
         * 
         */
        public Builder toPortRange(@Nullable Output<Integer> toPortRange) {
            $.toPortRange = toPortRange;
            return this;
        }

        /**
         * @param toPortRange The end of the port range for the TCP and UDP protocols, or an ICMP code number. If you specify this parameter, you cannot specify the `rules` parameter and its subparameters.
         * 
         * @return builder
         * 
         */
        public Builder toPortRange(Integer toPortRange) {
            return toPortRange(Output.of(toPortRange));
        }

        public SecurityGroupRuleArgs build() {
            $.flow = Objects.requireNonNull($.flow, "expected parameter 'flow' to be non-null");
            $.securityGroupId = Objects.requireNonNull($.securityGroupId, "expected parameter 'securityGroupId' to be non-null");
            return $;
        }
    }

}
