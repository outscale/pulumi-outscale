// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.outscale.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class RouteTableRoute {
    /**
     * @return The method used to create the route.
     * 
     */
    private @Nullable String creationMethod;
    /**
     * @return The IP range used for the destination match, in CIDR notation (for example, `10.0.0.0/24`).
     * 
     */
    private @Nullable String destinationIpRange;
    /**
     * @return The ID of the OUTSCALE service.
     * 
     */
    private @Nullable String destinationServiceId;
    /**
     * @return The ID of the Internet service or virtual gateway attached to the Net.
     * 
     */
    private @Nullable String gatewayId;
    /**
     * @return The ID of a NAT service attached to the Net.
     * 
     */
    private @Nullable String natServiceId;
    /**
     * @return The ID of the Net access point.
     * 
     */
    private @Nullable String netAccessPointId;
    /**
     * @return The ID of the Net peering.
     * 
     */
    private @Nullable String netPeeringId;
    /**
     * @return The ID of the NIC.
     * 
     */
    private @Nullable String nicId;
    /**
     * @return The state of a route in the route table (always `active`).
     * 
     */
    private @Nullable String state;
    /**
     * @return The account ID of the owner of the VM.
     * 
     */
    private @Nullable String vmAccountId;
    /**
     * @return The ID of a VM specified in a route in the table.
     * 
     */
    private @Nullable String vmId;

    private RouteTableRoute() {}
    /**
     * @return The method used to create the route.
     * 
     */
    public Optional<String> creationMethod() {
        return Optional.ofNullable(this.creationMethod);
    }
    /**
     * @return The IP range used for the destination match, in CIDR notation (for example, `10.0.0.0/24`).
     * 
     */
    public Optional<String> destinationIpRange() {
        return Optional.ofNullable(this.destinationIpRange);
    }
    /**
     * @return The ID of the OUTSCALE service.
     * 
     */
    public Optional<String> destinationServiceId() {
        return Optional.ofNullable(this.destinationServiceId);
    }
    /**
     * @return The ID of the Internet service or virtual gateway attached to the Net.
     * 
     */
    public Optional<String> gatewayId() {
        return Optional.ofNullable(this.gatewayId);
    }
    /**
     * @return The ID of a NAT service attached to the Net.
     * 
     */
    public Optional<String> natServiceId() {
        return Optional.ofNullable(this.natServiceId);
    }
    /**
     * @return The ID of the Net access point.
     * 
     */
    public Optional<String> netAccessPointId() {
        return Optional.ofNullable(this.netAccessPointId);
    }
    /**
     * @return The ID of the Net peering.
     * 
     */
    public Optional<String> netPeeringId() {
        return Optional.ofNullable(this.netPeeringId);
    }
    /**
     * @return The ID of the NIC.
     * 
     */
    public Optional<String> nicId() {
        return Optional.ofNullable(this.nicId);
    }
    /**
     * @return The state of a route in the route table (always `active`).
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return The account ID of the owner of the VM.
     * 
     */
    public Optional<String> vmAccountId() {
        return Optional.ofNullable(this.vmAccountId);
    }
    /**
     * @return The ID of a VM specified in a route in the table.
     * 
     */
    public Optional<String> vmId() {
        return Optional.ofNullable(this.vmId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RouteTableRoute defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String creationMethod;
        private @Nullable String destinationIpRange;
        private @Nullable String destinationServiceId;
        private @Nullable String gatewayId;
        private @Nullable String natServiceId;
        private @Nullable String netAccessPointId;
        private @Nullable String netPeeringId;
        private @Nullable String nicId;
        private @Nullable String state;
        private @Nullable String vmAccountId;
        private @Nullable String vmId;
        public Builder() {}
        public Builder(RouteTableRoute defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.creationMethod = defaults.creationMethod;
    	      this.destinationIpRange = defaults.destinationIpRange;
    	      this.destinationServiceId = defaults.destinationServiceId;
    	      this.gatewayId = defaults.gatewayId;
    	      this.natServiceId = defaults.natServiceId;
    	      this.netAccessPointId = defaults.netAccessPointId;
    	      this.netPeeringId = defaults.netPeeringId;
    	      this.nicId = defaults.nicId;
    	      this.state = defaults.state;
    	      this.vmAccountId = defaults.vmAccountId;
    	      this.vmId = defaults.vmId;
        }

        @CustomType.Setter
        public Builder creationMethod(@Nullable String creationMethod) {
            this.creationMethod = creationMethod;
            return this;
        }
        @CustomType.Setter
        public Builder destinationIpRange(@Nullable String destinationIpRange) {
            this.destinationIpRange = destinationIpRange;
            return this;
        }
        @CustomType.Setter
        public Builder destinationServiceId(@Nullable String destinationServiceId) {
            this.destinationServiceId = destinationServiceId;
            return this;
        }
        @CustomType.Setter
        public Builder gatewayId(@Nullable String gatewayId) {
            this.gatewayId = gatewayId;
            return this;
        }
        @CustomType.Setter
        public Builder natServiceId(@Nullable String natServiceId) {
            this.natServiceId = natServiceId;
            return this;
        }
        @CustomType.Setter
        public Builder netAccessPointId(@Nullable String netAccessPointId) {
            this.netAccessPointId = netAccessPointId;
            return this;
        }
        @CustomType.Setter
        public Builder netPeeringId(@Nullable String netPeeringId) {
            this.netPeeringId = netPeeringId;
            return this;
        }
        @CustomType.Setter
        public Builder nicId(@Nullable String nicId) {
            this.nicId = nicId;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder vmAccountId(@Nullable String vmAccountId) {
            this.vmAccountId = vmAccountId;
            return this;
        }
        @CustomType.Setter
        public Builder vmId(@Nullable String vmId) {
            this.vmId = vmId;
            return this;
        }
        public RouteTableRoute build() {
            final var o = new RouteTableRoute();
            o.creationMethod = creationMethod;
            o.destinationIpRange = destinationIpRange;
            o.destinationServiceId = destinationServiceId;
            o.gatewayId = gatewayId;
            o.natServiceId = natServiceId;
            o.netAccessPointId = netAccessPointId;
            o.netPeeringId = netPeeringId;
            o.nicId = nicId;
            o.state = state;
            o.vmAccountId = vmAccountId;
            o.vmId = vmId;
            return o;
        }
    }
}
