// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.outscale;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.outscale.inputs.PublicIpTagArgs;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PublicIpArgs extends com.pulumi.resources.ResourceArgs {

    public static final PublicIpArgs Empty = new PublicIpArgs();

    /**
     * A tag to add to this resource. You can specify this argument several times.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<List<PublicIpTagArgs>> tags;

    /**
     * @return A tag to add to this resource. You can specify this argument several times.
     * 
     */
    public Optional<Output<List<PublicIpTagArgs>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private PublicIpArgs() {}

    private PublicIpArgs(PublicIpArgs $) {
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PublicIpArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PublicIpArgs $;

        public Builder() {
            $ = new PublicIpArgs();
        }

        public Builder(PublicIpArgs defaults) {
            $ = new PublicIpArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param tags A tag to add to this resource. You can specify this argument several times.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<List<PublicIpTagArgs>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A tag to add to this resource. You can specify this argument several times.
         * 
         * @return builder
         * 
         */
        public Builder tags(List<PublicIpTagArgs> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param tags A tag to add to this resource. You can specify this argument several times.
         * 
         * @return builder
         * 
         */
        public Builder tags(PublicIpTagArgs... tags) {
            return tags(List.of(tags));
        }

        public PublicIpArgs build() {
            return $;
        }
    }

}
