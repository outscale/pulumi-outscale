// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.outscale;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.outscale.NicArgs;
import com.pulumi.outscale.Utilities;
import com.pulumi.outscale.inputs.NicState;
import com.pulumi.outscale.outputs.NicLinkNic;
import com.pulumi.outscale.outputs.NicLinkPublicIp;
import com.pulumi.outscale.outputs.NicPrivateIp;
import com.pulumi.outscale.outputs.NicSecurityGroup;
import com.pulumi.outscale.outputs.NicTag;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages a network interface card (NIC).
 * 
 * For more information on this resource, see the [User Guide](https://docs.outscale.com/en/userguide/About-FNIs.html).\
 * For more information on this resource actions, see the [API documentation](https://docs.outscale.com/api#3ds-outscale-api-nic).
 * 
 * ## Example Usage
 * ### Required resources
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.outscale.Net;
 * import com.pulumi.outscale.NetArgs;
 * import com.pulumi.outscale.Subnet;
 * import com.pulumi.outscale.SubnetArgs;
 * import com.pulumi.outscale.SecurityGroup;
 * import com.pulumi.outscale.SecurityGroupArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var net01 = new Net(&#34;net01&#34;, NetArgs.builder()        
 *             .ipRange(&#34;10.0.0.0/16&#34;)
 *             .build());
 * 
 *         var subnet01 = new Subnet(&#34;subnet01&#34;, SubnetArgs.builder()        
 *             .subregionName(&#34;eu-west-2a&#34;)
 *             .ipRange(&#34;10.0.0.0/18&#34;)
 *             .netId(net01.netId())
 *             .build());
 * 
 *         var securityGroup01 = new SecurityGroup(&#34;securityGroup01&#34;, SecurityGroupArgs.builder()        
 *             .description(&#34;Terraform security group for nic with private IPs&#34;)
 *             .securityGroupName(&#34;terraform-security-group-nic-ips&#34;)
 *             .netId(net01.netId())
 *             .build());
 * 
 *     }
 * }
 * ```
 * ### Create a NIC
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.outscale.Nic;
 * import com.pulumi.outscale.NicArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var nic01 = new Nic(&#34;nic01&#34;, NicArgs.builder()        
 *             .subnetId(outscale_subnet.subnet01().subnet_id())
 *             .build());
 * 
 *     }
 * }
 * ```
 * ### Create a NIC with private IP addresses
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.outscale.Nic;
 * import com.pulumi.outscale.NicArgs;
 * import com.pulumi.outscale.inputs.NicPrivateIpArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var nic02 = new Nic(&#34;nic02&#34;, NicArgs.builder()        
 *             .description(&#34;Terraform nic with private IPs&#34;)
 *             .subnetId(outscale_subnet.subnet01().subnet_id())
 *             .securityGroupIds(outscale_security_group.security_group01().security_group_id())
 *             .privateIps(            
 *                 NicPrivateIpArgs.builder()
 *                     .isPrimary(true)
 *                     .privateIp(&#34;10.0.0.1&#34;)
 *                     .build(),
 *                 NicPrivateIpArgs.builder()
 *                     .isPrimary(false)
 *                     .privateIp(&#34;10.0.0.2&#34;)
 *                     .build())
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * A NIC can be imported using its ID. For exampleconsole
 * 
 * ```sh
 *  $ pulumi import outscale:index/nic:Nic ImportedNic eni-12345678
 * ```
 * 
 */
@ResourceType(type="outscale:index/nic:Nic")
public class Nic extends com.pulumi.resources.CustomResource {
    /**
     * The account ID of the owner of the NIC.
     * 
     */
    @Export(name="accountId", refs={String.class}, tree="[0]")
    private Output<String> accountId;

    /**
     * @return The account ID of the owner of the NIC.
     * 
     */
    public Output<String> accountId() {
        return this.accountId;
    }
    /**
     * A description for the NIC.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output<String> description;

    /**
     * @return A description for the NIC.
     * 
     */
    public Output<String> description() {
        return this.description;
    }
    /**
     * (Net only) If true, the source/destination check is enabled. If false, it is disabled. This value must be false for a NAT VM to perform network address translation (NAT) in a Net.
     * 
     */
    @Export(name="isSourceDestChecked", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> isSourceDestChecked;

    /**
     * @return (Net only) If true, the source/destination check is enabled. If false, it is disabled. This value must be false for a NAT VM to perform network address translation (NAT) in a Net.
     * 
     */
    public Output<Boolean> isSourceDestChecked() {
        return this.isSourceDestChecked;
    }
    /**
     * Information about the NIC attachment.
     * 
     */
    @Export(name="linkNics", refs={List.class,NicLinkNic.class}, tree="[0,1]")
    private Output<List<NicLinkNic>> linkNics;

    /**
     * @return Information about the NIC attachment.
     * 
     */
    public Output<List<NicLinkNic>> linkNics() {
        return this.linkNics;
    }
    /**
     * Information about the public IP association.
     * 
     */
    @Export(name="linkPublicIps", refs={List.class,NicLinkPublicIp.class}, tree="[0,1]")
    private Output<List<NicLinkPublicIp>> linkPublicIps;

    /**
     * @return Information about the public IP association.
     * 
     */
    public Output<List<NicLinkPublicIp>> linkPublicIps() {
        return this.linkPublicIps;
    }
    /**
     * The Media Access Control (MAC) address of the NIC.
     * 
     */
    @Export(name="macAddress", refs={String.class}, tree="[0]")
    private Output<String> macAddress;

    /**
     * @return The Media Access Control (MAC) address of the NIC.
     * 
     */
    public Output<String> macAddress() {
        return this.macAddress;
    }
    /**
     * The ID of the Net for the NIC.
     * 
     */
    @Export(name="netId", refs={String.class}, tree="[0]")
    private Output<String> netId;

    /**
     * @return The ID of the Net for the NIC.
     * 
     */
    public Output<String> netId() {
        return this.netId;
    }
    /**
     * The ID of the NIC.
     * 
     */
    @Export(name="nicId", refs={String.class}, tree="[0]")
    private Output<String> nicId;

    /**
     * @return The ID of the NIC.
     * 
     */
    public Output<String> nicId() {
        return this.nicId;
    }
    /**
     * The name of the private DNS.
     * 
     */
    @Export(name="privateDnsName", refs={String.class}, tree="[0]")
    private Output<String> privateDnsName;

    /**
     * @return The name of the private DNS.
     * 
     */
    public Output<String> privateDnsName() {
        return this.privateDnsName;
    }
    /**
     * The private IP of the NIC.
     * 
     */
    @Export(name="privateIp", refs={String.class}, tree="[0]")
    private Output<String> privateIp;

    /**
     * @return The private IP of the NIC.
     * 
     */
    public Output<String> privateIp() {
        return this.privateIp;
    }
    /**
     * The primary private IP for the NIC.&lt;br /&gt;
     * This IP must be within the IP range of the Subnet that you specify with the `subnet_id` attribute.&lt;br /&gt;
     * If you do not specify this attribute, a random private IP is selected within the IP range of the Subnet.
     * 
     */
    @Export(name="privateIps", refs={List.class,NicPrivateIp.class}, tree="[0,1]")
    private Output<List<NicPrivateIp>> privateIps;

    /**
     * @return The primary private IP for the NIC.&lt;br /&gt;
     * This IP must be within the IP range of the Subnet that you specify with the `subnet_id` attribute.&lt;br /&gt;
     * If you do not specify this attribute, a random private IP is selected within the IP range of the Subnet.
     * 
     */
    public Output<List<NicPrivateIp>> privateIps() {
        return this.privateIps;
    }
    @Export(name="requestId", refs={String.class}, tree="[0]")
    private Output<String> requestId;

    public Output<String> requestId() {
        return this.requestId;
    }
    @Export(name="requesterManaged", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> requesterManaged;

    public Output<Boolean> requesterManaged() {
        return this.requesterManaged;
    }
    /**
     * One or more IDs of security groups for the NIC.
     * 
     */
    @Export(name="securityGroupIds", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> securityGroupIds;

    /**
     * @return One or more IDs of security groups for the NIC.
     * 
     */
    public Output<Optional<List<String>>> securityGroupIds() {
        return Codegen.optional(this.securityGroupIds);
    }
    /**
     * One or more IDs of security groups for the NIC.
     * 
     */
    @Export(name="securityGroups", refs={List.class,NicSecurityGroup.class}, tree="[0,1]")
    private Output<List<NicSecurityGroup>> securityGroups;

    /**
     * @return One or more IDs of security groups for the NIC.
     * 
     */
    public Output<List<NicSecurityGroup>> securityGroups() {
        return this.securityGroups;
    }
    /**
     * The state of the NIC (`available` \| `attaching` \| `in-use` \| `detaching`).
     * 
     */
    @Export(name="state", refs={String.class}, tree="[0]")
    private Output<String> state;

    /**
     * @return The state of the NIC (`available` \| `attaching` \| `in-use` \| `detaching`).
     * 
     */
    public Output<String> state() {
        return this.state;
    }
    /**
     * The ID of the Subnet in which you want to create the NIC.
     * 
     */
    @Export(name="subnetId", refs={String.class}, tree="[0]")
    private Output<String> subnetId;

    /**
     * @return The ID of the Subnet in which you want to create the NIC.
     * 
     */
    public Output<String> subnetId() {
        return this.subnetId;
    }
    /**
     * The Subregion in which the NIC is located.
     * 
     */
    @Export(name="subregionName", refs={String.class}, tree="[0]")
    private Output<String> subregionName;

    /**
     * @return The Subregion in which the NIC is located.
     * 
     */
    public Output<String> subregionName() {
        return this.subregionName;
    }
    /**
     * A tag to add to this resource. You can specify this argument several times.
     * 
     */
    @Export(name="tags", refs={List.class,NicTag.class}, tree="[0,1]")
    private Output</* @Nullable */ List<NicTag>> tags;

    /**
     * @return A tag to add to this resource. You can specify this argument several times.
     * 
     */
    public Output<Optional<List<NicTag>>> tags() {
        return Codegen.optional(this.tags);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Nic(String name) {
        this(name, NicArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Nic(String name, NicArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Nic(String name, NicArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("outscale:index/nic:Nic", name, args == null ? NicArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Nic(String name, Output<String> id, @Nullable NicState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("outscale:index/nic:Nic", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Nic get(String name, Output<String> id, @Nullable NicState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Nic(name, id, state, options);
    }
}
