// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.outscale.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.outscale.inputs.GetPublicIpFilter;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetPublicIpPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetPublicIpPlainArgs Empty = new GetPublicIpPlainArgs();

    /**
     * A combination of a filter name and one or more filter values. You can specify this argument for as many filter names as you need. The filter name can be any of the following:
     * 
     */
    @Import(name="filters")
    private @Nullable List<GetPublicIpFilter> filters;

    /**
     * @return A combination of a filter name and one or more filter values. You can specify this argument for as many filter names as you need. The filter name can be any of the following:
     * 
     */
    public Optional<List<GetPublicIpFilter>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * The public IP.
     * 
     */
    @Import(name="publicIp")
    private @Nullable String publicIp;

    /**
     * @return The public IP.
     * 
     */
    public Optional<String> publicIp() {
        return Optional.ofNullable(this.publicIp);
    }

    /**
     * The allocation ID of the public IP.
     * 
     */
    @Import(name="publicIpId")
    private @Nullable String publicIpId;

    /**
     * @return The allocation ID of the public IP.
     * 
     */
    public Optional<String> publicIpId() {
        return Optional.ofNullable(this.publicIpId);
    }

    private GetPublicIpPlainArgs() {}

    private GetPublicIpPlainArgs(GetPublicIpPlainArgs $) {
        this.filters = $.filters;
        this.publicIp = $.publicIp;
        this.publicIpId = $.publicIpId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetPublicIpPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetPublicIpPlainArgs $;

        public Builder() {
            $ = new GetPublicIpPlainArgs();
        }

        public Builder(GetPublicIpPlainArgs defaults) {
            $ = new GetPublicIpPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param filters A combination of a filter name and one or more filter values. You can specify this argument for as many filter names as you need. The filter name can be any of the following:
         * 
         * @return builder
         * 
         */
        public Builder filters(@Nullable List<GetPublicIpFilter> filters) {
            $.filters = filters;
            return this;
        }

        /**
         * @param filters A combination of a filter name and one or more filter values. You can specify this argument for as many filter names as you need. The filter name can be any of the following:
         * 
         * @return builder
         * 
         */
        public Builder filters(GetPublicIpFilter... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param publicIp The public IP.
         * 
         * @return builder
         * 
         */
        public Builder publicIp(@Nullable String publicIp) {
            $.publicIp = publicIp;
            return this;
        }

        /**
         * @param publicIpId The allocation ID of the public IP.
         * 
         * @return builder
         * 
         */
        public Builder publicIpId(@Nullable String publicIpId) {
            $.publicIpId = publicIpId;
            return this;
        }

        public GetPublicIpPlainArgs build() {
            return $;
        }
    }

}
