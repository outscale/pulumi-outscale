// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.outscale.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.outscale.outputs.GetSecurityGroupFilter;
import com.pulumi.outscale.outputs.GetSecurityGroupInboundRule;
import com.pulumi.outscale.outputs.GetSecurityGroupOutboundRule;
import com.pulumi.outscale.outputs.GetSecurityGroupTag;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class GetSecurityGroupResult {
    /**
     * @return The account ID that owns the source or destination security group.
     * 
     */
    private String accountId;
    /**
     * @return The description of the security group.
     * 
     */
    private String description;
    private @Nullable List<GetSecurityGroupFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The inbound rules associated with the security group.
     * 
     */
    private List<GetSecurityGroupInboundRule> inboundRules;
    /**
     * @return The ID of the Net for the security group.
     * 
     */
    private String netId;
    /**
     * @return The outbound rules associated with the security group.
     * 
     */
    private List<GetSecurityGroupOutboundRule> outboundRules;
    private String requestId;
    /**
     * @return The ID of the security group.
     * 
     */
    private String securityGroupId;
    /**
     * @return The name of the security group.
     * 
     */
    private String securityGroupName;
    /**
     * @return One or more tags associated with the security group.
     * 
     */
    private List<GetSecurityGroupTag> tags;

    private GetSecurityGroupResult() {}
    /**
     * @return The account ID that owns the source or destination security group.
     * 
     */
    public String accountId() {
        return this.accountId;
    }
    /**
     * @return The description of the security group.
     * 
     */
    public String description() {
        return this.description;
    }
    public List<GetSecurityGroupFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The inbound rules associated with the security group.
     * 
     */
    public List<GetSecurityGroupInboundRule> inboundRules() {
        return this.inboundRules;
    }
    /**
     * @return The ID of the Net for the security group.
     * 
     */
    public String netId() {
        return this.netId;
    }
    /**
     * @return The outbound rules associated with the security group.
     * 
     */
    public List<GetSecurityGroupOutboundRule> outboundRules() {
        return this.outboundRules;
    }
    public String requestId() {
        return this.requestId;
    }
    /**
     * @return The ID of the security group.
     * 
     */
    public String securityGroupId() {
        return this.securityGroupId;
    }
    /**
     * @return The name of the security group.
     * 
     */
    public String securityGroupName() {
        return this.securityGroupName;
    }
    /**
     * @return One or more tags associated with the security group.
     * 
     */
    public List<GetSecurityGroupTag> tags() {
        return this.tags;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSecurityGroupResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String accountId;
        private String description;
        private @Nullable List<GetSecurityGroupFilter> filters;
        private String id;
        private List<GetSecurityGroupInboundRule> inboundRules;
        private String netId;
        private List<GetSecurityGroupOutboundRule> outboundRules;
        private String requestId;
        private String securityGroupId;
        private String securityGroupName;
        private List<GetSecurityGroupTag> tags;
        public Builder() {}
        public Builder(GetSecurityGroupResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountId = defaults.accountId;
    	      this.description = defaults.description;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.inboundRules = defaults.inboundRules;
    	      this.netId = defaults.netId;
    	      this.outboundRules = defaults.outboundRules;
    	      this.requestId = defaults.requestId;
    	      this.securityGroupId = defaults.securityGroupId;
    	      this.securityGroupName = defaults.securityGroupName;
    	      this.tags = defaults.tags;
        }

        @CustomType.Setter
        public Builder accountId(String accountId) {
            this.accountId = Objects.requireNonNull(accountId);
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetSecurityGroupFilter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(GetSecurityGroupFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder inboundRules(List<GetSecurityGroupInboundRule> inboundRules) {
            this.inboundRules = Objects.requireNonNull(inboundRules);
            return this;
        }
        public Builder inboundRules(GetSecurityGroupInboundRule... inboundRules) {
            return inboundRules(List.of(inboundRules));
        }
        @CustomType.Setter
        public Builder netId(String netId) {
            this.netId = Objects.requireNonNull(netId);
            return this;
        }
        @CustomType.Setter
        public Builder outboundRules(List<GetSecurityGroupOutboundRule> outboundRules) {
            this.outboundRules = Objects.requireNonNull(outboundRules);
            return this;
        }
        public Builder outboundRules(GetSecurityGroupOutboundRule... outboundRules) {
            return outboundRules(List.of(outboundRules));
        }
        @CustomType.Setter
        public Builder requestId(String requestId) {
            this.requestId = Objects.requireNonNull(requestId);
            return this;
        }
        @CustomType.Setter
        public Builder securityGroupId(String securityGroupId) {
            this.securityGroupId = Objects.requireNonNull(securityGroupId);
            return this;
        }
        @CustomType.Setter
        public Builder securityGroupName(String securityGroupName) {
            this.securityGroupName = Objects.requireNonNull(securityGroupName);
            return this;
        }
        @CustomType.Setter
        public Builder tags(List<GetSecurityGroupTag> tags) {
            this.tags = Objects.requireNonNull(tags);
            return this;
        }
        public Builder tags(GetSecurityGroupTag... tags) {
            return tags(List.of(tags));
        }
        public GetSecurityGroupResult build() {
            final var o = new GetSecurityGroupResult();
            o.accountId = accountId;
            o.description = description;
            o.filters = filters;
            o.id = id;
            o.inboundRules = inboundRules;
            o.netId = netId;
            o.outboundRules = outboundRules;
            o.requestId = requestId;
            o.securityGroupId = securityGroupId;
            o.securityGroupName = securityGroupName;
            o.tags = tags;
            return o;
        }
    }
}
