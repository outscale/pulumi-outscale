// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.outscale.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VirtualGatewayRoutePropagationState extends com.pulumi.resources.ResourceArgs {

    public static final VirtualGatewayRoutePropagationState Empty = new VirtualGatewayRoutePropagationState();

    /**
     * If true, a virtual gateway can propagate routes to a specified route table of a Net. If false, the propagation is disabled.
     * 
     */
    @Import(name="enable")
    private @Nullable Output<Boolean> enable;

    /**
     * @return If true, a virtual gateway can propagate routes to a specified route table of a Net. If false, the propagation is disabled.
     * 
     */
    public Optional<Output<Boolean>> enable() {
        return Optional.ofNullable(this.enable);
    }

    @Import(name="requestId")
    private @Nullable Output<String> requestId;

    public Optional<Output<String>> requestId() {
        return Optional.ofNullable(this.requestId);
    }

    /**
     * The ID of the route table.
     * 
     */
    @Import(name="routeTableId")
    private @Nullable Output<String> routeTableId;

    /**
     * @return The ID of the route table.
     * 
     */
    public Optional<Output<String>> routeTableId() {
        return Optional.ofNullable(this.routeTableId);
    }

    /**
     * The ID of the virtual gateway.
     * 
     */
    @Import(name="virtualGatewayId")
    private @Nullable Output<String> virtualGatewayId;

    /**
     * @return The ID of the virtual gateway.
     * 
     */
    public Optional<Output<String>> virtualGatewayId() {
        return Optional.ofNullable(this.virtualGatewayId);
    }

    private VirtualGatewayRoutePropagationState() {}

    private VirtualGatewayRoutePropagationState(VirtualGatewayRoutePropagationState $) {
        this.enable = $.enable;
        this.requestId = $.requestId;
        this.routeTableId = $.routeTableId;
        this.virtualGatewayId = $.virtualGatewayId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VirtualGatewayRoutePropagationState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VirtualGatewayRoutePropagationState $;

        public Builder() {
            $ = new VirtualGatewayRoutePropagationState();
        }

        public Builder(VirtualGatewayRoutePropagationState defaults) {
            $ = new VirtualGatewayRoutePropagationState(Objects.requireNonNull(defaults));
        }

        /**
         * @param enable If true, a virtual gateway can propagate routes to a specified route table of a Net. If false, the propagation is disabled.
         * 
         * @return builder
         * 
         */
        public Builder enable(@Nullable Output<Boolean> enable) {
            $.enable = enable;
            return this;
        }

        /**
         * @param enable If true, a virtual gateway can propagate routes to a specified route table of a Net. If false, the propagation is disabled.
         * 
         * @return builder
         * 
         */
        public Builder enable(Boolean enable) {
            return enable(Output.of(enable));
        }

        public Builder requestId(@Nullable Output<String> requestId) {
            $.requestId = requestId;
            return this;
        }

        public Builder requestId(String requestId) {
            return requestId(Output.of(requestId));
        }

        /**
         * @param routeTableId The ID of the route table.
         * 
         * @return builder
         * 
         */
        public Builder routeTableId(@Nullable Output<String> routeTableId) {
            $.routeTableId = routeTableId;
            return this;
        }

        /**
         * @param routeTableId The ID of the route table.
         * 
         * @return builder
         * 
         */
        public Builder routeTableId(String routeTableId) {
            return routeTableId(Output.of(routeTableId));
        }

        /**
         * @param virtualGatewayId The ID of the virtual gateway.
         * 
         * @return builder
         * 
         */
        public Builder virtualGatewayId(@Nullable Output<String> virtualGatewayId) {
            $.virtualGatewayId = virtualGatewayId;
            return this;
        }

        /**
         * @param virtualGatewayId The ID of the virtual gateway.
         * 
         * @return builder
         * 
         */
        public Builder virtualGatewayId(String virtualGatewayId) {
            return virtualGatewayId(Output.of(virtualGatewayId));
        }

        public VirtualGatewayRoutePropagationState build() {
            return $;
        }
    }

}
