// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.outscale.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetFlexibleGpusFlexibleGpus {
    /**
     * @return Indicates whether the fGPU is deleted when terminating the VM.
     * 
     */
    private Boolean deleteOnVmDeletion;
    /**
     * @return The ID of the fGPU.
     * 
     */
    private String flexibleGpuId;
    /**
     * @return The compatible processor generation.
     * 
     */
    private String generation;
    /**
     * @return The model of fGPU. For more information, see [About Flexible GPUs](https://docs.outscale.com/en/userguide/About-Flexible-GPUs.html).
     * 
     */
    private String modelName;
    /**
     * @return The state of the fGPU (`allocated` \| `attaching` \| `attached` \| `detaching`).
     * 
     */
    private String state;
    /**
     * @return The Subregion where the fGPU is located.
     * 
     */
    private String subregionName;
    /**
     * @return The ID of the VM the fGPU is attached to, if any.
     * 
     */
    private String vmId;

    private GetFlexibleGpusFlexibleGpus() {}
    /**
     * @return Indicates whether the fGPU is deleted when terminating the VM.
     * 
     */
    public Boolean deleteOnVmDeletion() {
        return this.deleteOnVmDeletion;
    }
    /**
     * @return The ID of the fGPU.
     * 
     */
    public String flexibleGpuId() {
        return this.flexibleGpuId;
    }
    /**
     * @return The compatible processor generation.
     * 
     */
    public String generation() {
        return this.generation;
    }
    /**
     * @return The model of fGPU. For more information, see [About Flexible GPUs](https://docs.outscale.com/en/userguide/About-Flexible-GPUs.html).
     * 
     */
    public String modelName() {
        return this.modelName;
    }
    /**
     * @return The state of the fGPU (`allocated` \| `attaching` \| `attached` \| `detaching`).
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return The Subregion where the fGPU is located.
     * 
     */
    public String subregionName() {
        return this.subregionName;
    }
    /**
     * @return The ID of the VM the fGPU is attached to, if any.
     * 
     */
    public String vmId() {
        return this.vmId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetFlexibleGpusFlexibleGpus defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean deleteOnVmDeletion;
        private String flexibleGpuId;
        private String generation;
        private String modelName;
        private String state;
        private String subregionName;
        private String vmId;
        public Builder() {}
        public Builder(GetFlexibleGpusFlexibleGpus defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.deleteOnVmDeletion = defaults.deleteOnVmDeletion;
    	      this.flexibleGpuId = defaults.flexibleGpuId;
    	      this.generation = defaults.generation;
    	      this.modelName = defaults.modelName;
    	      this.state = defaults.state;
    	      this.subregionName = defaults.subregionName;
    	      this.vmId = defaults.vmId;
        }

        @CustomType.Setter
        public Builder deleteOnVmDeletion(Boolean deleteOnVmDeletion) {
            this.deleteOnVmDeletion = Objects.requireNonNull(deleteOnVmDeletion);
            return this;
        }
        @CustomType.Setter
        public Builder flexibleGpuId(String flexibleGpuId) {
            this.flexibleGpuId = Objects.requireNonNull(flexibleGpuId);
            return this;
        }
        @CustomType.Setter
        public Builder generation(String generation) {
            this.generation = Objects.requireNonNull(generation);
            return this;
        }
        @CustomType.Setter
        public Builder modelName(String modelName) {
            this.modelName = Objects.requireNonNull(modelName);
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        @CustomType.Setter
        public Builder subregionName(String subregionName) {
            this.subregionName = Objects.requireNonNull(subregionName);
            return this;
        }
        @CustomType.Setter
        public Builder vmId(String vmId) {
            this.vmId = Objects.requireNonNull(vmId);
            return this;
        }
        public GetFlexibleGpusFlexibleGpus build() {
            final var o = new GetFlexibleGpusFlexibleGpus();
            o.deleteOnVmDeletion = deleteOnVmDeletion;
            o.flexibleGpuId = flexibleGpuId;
            o.generation = generation;
            o.modelName = modelName;
            o.state = state;
            o.subregionName = subregionName;
            o.vmId = vmId;
            return o;
        }
    }
}
