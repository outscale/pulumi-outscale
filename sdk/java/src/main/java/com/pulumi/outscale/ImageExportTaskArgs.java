// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.outscale;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.outscale.inputs.ImageExportTaskOsuExportArgs;
import com.pulumi.outscale.inputs.ImageExportTaskTagArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ImageExportTaskArgs extends com.pulumi.resources.ResourceArgs {

    public static final ImageExportTaskArgs Empty = new ImageExportTaskArgs();

    /**
     * The ID of the OMI to export.
     * 
     */
    @Import(name="imageId", required=true)
    private Output<String> imageId;

    /**
     * @return The ID of the OMI to export.
     * 
     */
    public Output<String> imageId() {
        return this.imageId;
    }

    /**
     * Information about the OOS export task to create.
     * 
     */
    @Import(name="osuExports", required=true)
    private Output<List<ImageExportTaskOsuExportArgs>> osuExports;

    /**
     * @return Information about the OOS export task to create.
     * 
     */
    public Output<List<ImageExportTaskOsuExportArgs>> osuExports() {
        return this.osuExports;
    }

    /**
     * A tag to add to this resource. You can specify this argument several times.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<List<ImageExportTaskTagArgs>> tags;

    /**
     * @return A tag to add to this resource. You can specify this argument several times.
     * 
     */
    public Optional<Output<List<ImageExportTaskTagArgs>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private ImageExportTaskArgs() {}

    private ImageExportTaskArgs(ImageExportTaskArgs $) {
        this.imageId = $.imageId;
        this.osuExports = $.osuExports;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ImageExportTaskArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ImageExportTaskArgs $;

        public Builder() {
            $ = new ImageExportTaskArgs();
        }

        public Builder(ImageExportTaskArgs defaults) {
            $ = new ImageExportTaskArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param imageId The ID of the OMI to export.
         * 
         * @return builder
         * 
         */
        public Builder imageId(Output<String> imageId) {
            $.imageId = imageId;
            return this;
        }

        /**
         * @param imageId The ID of the OMI to export.
         * 
         * @return builder
         * 
         */
        public Builder imageId(String imageId) {
            return imageId(Output.of(imageId));
        }

        /**
         * @param osuExports Information about the OOS export task to create.
         * 
         * @return builder
         * 
         */
        public Builder osuExports(Output<List<ImageExportTaskOsuExportArgs>> osuExports) {
            $.osuExports = osuExports;
            return this;
        }

        /**
         * @param osuExports Information about the OOS export task to create.
         * 
         * @return builder
         * 
         */
        public Builder osuExports(List<ImageExportTaskOsuExportArgs> osuExports) {
            return osuExports(Output.of(osuExports));
        }

        /**
         * @param osuExports Information about the OOS export task to create.
         * 
         * @return builder
         * 
         */
        public Builder osuExports(ImageExportTaskOsuExportArgs... osuExports) {
            return osuExports(List.of(osuExports));
        }

        /**
         * @param tags A tag to add to this resource. You can specify this argument several times.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<List<ImageExportTaskTagArgs>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A tag to add to this resource. You can specify this argument several times.
         * 
         * @return builder
         * 
         */
        public Builder tags(List<ImageExportTaskTagArgs> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param tags A tag to add to this resource. You can specify this argument several times.
         * 
         * @return builder
         * 
         */
        public Builder tags(ImageExportTaskTagArgs... tags) {
            return tags(List.of(tags));
        }

        public ImageExportTaskArgs build() {
            $.imageId = Objects.requireNonNull($.imageId, "expected parameter 'imageId' to be non-null");
            $.osuExports = Objects.requireNonNull($.osuExports, "expected parameter 'osuExports' to be non-null");
            return $;
        }
    }

}
