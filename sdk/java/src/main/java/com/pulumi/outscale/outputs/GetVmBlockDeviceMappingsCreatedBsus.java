// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.outscale.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.outscale.outputs.GetVmBlockDeviceMappingsCreatedBsusTag;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class GetVmBlockDeviceMappingsCreatedBsus {
    /**
     * @return If true, the NIC is deleted when the VM is terminated.
     * 
     */
    private Boolean deleteOnVmDeletion;
    /**
     * @return The date and time of attachment of the volume to the VM, in ISO 8601 date-time format.
     * 
     */
    private String linkDate;
    /**
     * @return The state of the VM (`pending` \| `running` \| `stopping` \| `stopped` \| `shutting-down` \| `terminated` \| `quarantine`).
     * 
     */
    private String state;
    /**
     * @return The key/value combinations of the tags associated with the VMs, in the following format: `TAGKEY=TAGVALUE`.
     * 
     */
    private @Nullable List<GetVmBlockDeviceMappingsCreatedBsusTag> tags;
    /**
     * @return The ID of the volume.
     * 
     */
    private String volumeId;

    private GetVmBlockDeviceMappingsCreatedBsus() {}
    /**
     * @return If true, the NIC is deleted when the VM is terminated.
     * 
     */
    public Boolean deleteOnVmDeletion() {
        return this.deleteOnVmDeletion;
    }
    /**
     * @return The date and time of attachment of the volume to the VM, in ISO 8601 date-time format.
     * 
     */
    public String linkDate() {
        return this.linkDate;
    }
    /**
     * @return The state of the VM (`pending` \| `running` \| `stopping` \| `stopped` \| `shutting-down` \| `terminated` \| `quarantine`).
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return The key/value combinations of the tags associated with the VMs, in the following format: `TAGKEY=TAGVALUE`.
     * 
     */
    public List<GetVmBlockDeviceMappingsCreatedBsusTag> tags() {
        return this.tags == null ? List.of() : this.tags;
    }
    /**
     * @return The ID of the volume.
     * 
     */
    public String volumeId() {
        return this.volumeId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetVmBlockDeviceMappingsCreatedBsus defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean deleteOnVmDeletion;
        private String linkDate;
        private String state;
        private @Nullable List<GetVmBlockDeviceMappingsCreatedBsusTag> tags;
        private String volumeId;
        public Builder() {}
        public Builder(GetVmBlockDeviceMappingsCreatedBsus defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.deleteOnVmDeletion = defaults.deleteOnVmDeletion;
    	      this.linkDate = defaults.linkDate;
    	      this.state = defaults.state;
    	      this.tags = defaults.tags;
    	      this.volumeId = defaults.volumeId;
        }

        @CustomType.Setter
        public Builder deleteOnVmDeletion(Boolean deleteOnVmDeletion) {
            this.deleteOnVmDeletion = Objects.requireNonNull(deleteOnVmDeletion);
            return this;
        }
        @CustomType.Setter
        public Builder linkDate(String linkDate) {
            this.linkDate = Objects.requireNonNull(linkDate);
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable List<GetVmBlockDeviceMappingsCreatedBsusTag> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(GetVmBlockDeviceMappingsCreatedBsusTag... tags) {
            return tags(List.of(tags));
        }
        @CustomType.Setter
        public Builder volumeId(String volumeId) {
            this.volumeId = Objects.requireNonNull(volumeId);
            return this;
        }
        public GetVmBlockDeviceMappingsCreatedBsus build() {
            final var o = new GetVmBlockDeviceMappingsCreatedBsus();
            o.deleteOnVmDeletion = deleteOnVmDeletion;
            o.linkDate = linkDate;
            o.state = state;
            o.tags = tags;
            o.volumeId = volumeId;
            return o;
        }
    }
}
