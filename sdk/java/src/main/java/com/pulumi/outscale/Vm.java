// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.outscale;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.outscale.Utilities;
import com.pulumi.outscale.VmArgs;
import com.pulumi.outscale.inputs.VmState;
import com.pulumi.outscale.outputs.VmBlockDeviceMapping;
import com.pulumi.outscale.outputs.VmBlockDeviceMappingsCreated;
import com.pulumi.outscale.outputs.VmNic;
import com.pulumi.outscale.outputs.VmPrimaryNic;
import com.pulumi.outscale.outputs.VmSecurityGroup;
import com.pulumi.outscale.outputs.VmTag;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages a virtual machine (VM).
 * 
 * For more information on this resource, see the [User Guide](https://docs.outscale.com/en/userguide/About-Instances.html).\
 * For more information on this resource actions, see the [API documentation](https://docs.outscale.com/api#3ds-outscale-api-vm).
 * 
 * ## Example Usage
 * ### Optional resource
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.outscale.Keypair;
 * import com.pulumi.outscale.KeypairArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var keypair01 = new Keypair(&#34;keypair01&#34;, KeypairArgs.builder()        
 *             .keypairName(&#34;terraform-keypair-for-vm&#34;)
 *             .build());
 * 
 *     }
 * }
 * ```
 * ### Create a VM with block device mappings
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.outscale.Vm;
 * import com.pulumi.outscale.VmArgs;
 * import com.pulumi.outscale.inputs.VmBlockDeviceMappingArgs;
 * import com.pulumi.outscale.inputs.VmBlockDeviceMappingBsuArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var vm02 = new Vm(&#34;vm02&#34;, VmArgs.builder()        
 *             .imageId(var_.image_id())
 *             .vmType(var_.vm_type())
 *             .keypairName(var_.keypair_name())
 *             .blockDeviceMappings(            
 *                 VmBlockDeviceMappingArgs.builder()
 *                     .deviceName(&#34;/dev/sda1&#34;)
 *                     .bsu(VmBlockDeviceMappingBsuArgs.builder()
 *                         .volumeSize(15)
 *                         .volumeType(&#34;gp2&#34;)
 *                         .snapshotId(var_.snapshot_id())
 *                         .build())
 *                     .build(),
 *                 VmBlockDeviceMappingArgs.builder()
 *                     .deviceName(&#34;/dev/sdb&#34;)
 *                     .bsu(VmBlockDeviceMappingBsuArgs.builder()
 *                         .volumeSize(22)
 *                         .volumeType(&#34;io1&#34;)
 *                         .iops(150)
 *                         .deleteOnVmDeletion(true)
 *                         .build())
 *                     .build())
 *             .build());
 * 
 *     }
 * }
 * ```
 * ### Create a VM in a Net with a network
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.outscale.Net;
 * import com.pulumi.outscale.NetArgs;
 * import com.pulumi.outscale.inputs.NetTagArgs;
 * import com.pulumi.outscale.Subnet;
 * import com.pulumi.outscale.SubnetArgs;
 * import com.pulumi.outscale.inputs.SubnetTagArgs;
 * import com.pulumi.outscale.SecurityGroup;
 * import com.pulumi.outscale.SecurityGroupArgs;
 * import com.pulumi.outscale.InternetService;
 * import com.pulumi.outscale.RouteTable;
 * import com.pulumi.outscale.RouteTableArgs;
 * import com.pulumi.outscale.inputs.RouteTableTagArgs;
 * import com.pulumi.outscale.RouteTableLink;
 * import com.pulumi.outscale.RouteTableLinkArgs;
 * import com.pulumi.outscale.InternetServiceLink;
 * import com.pulumi.outscale.InternetServiceLinkArgs;
 * import com.pulumi.outscale.Route;
 * import com.pulumi.outscale.RouteArgs;
 * import com.pulumi.outscale.Vm;
 * import com.pulumi.outscale.VmArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var net01 = new Net(&#34;net01&#34;, NetArgs.builder()        
 *             .ipRange(&#34;10.0.0.0/16&#34;)
 *             .tags(NetTagArgs.builder()
 *                 .key(&#34;name&#34;)
 *                 .value(&#34;terraform-net-for-vm&#34;)
 *                 .build())
 *             .build());
 * 
 *         var subnet01 = new Subnet(&#34;subnet01&#34;, SubnetArgs.builder()        
 *             .netId(net01.netId())
 *             .ipRange(&#34;10.0.0.0/24&#34;)
 *             .subregionName(&#34;eu-west-2b&#34;)
 *             .tags(SubnetTagArgs.builder()
 *                 .key(&#34;name&#34;)
 *                 .value(&#34;terraform-subnet-for-vm&#34;)
 *                 .build())
 *             .build());
 * 
 *         var securityGroup01 = new SecurityGroup(&#34;securityGroup01&#34;, SecurityGroupArgs.builder()        
 *             .description(&#34;Terraform security group for VM&#34;)
 *             .securityGroupName(&#34;terraform-security-group-for-vm&#34;)
 *             .netId(net01.netId())
 *             .build());
 * 
 *         var internetService01 = new InternetService(&#34;internetService01&#34;);
 * 
 *         var routeTable01 = new RouteTable(&#34;routeTable01&#34;, RouteTableArgs.builder()        
 *             .netId(net01.netId())
 *             .tags(RouteTableTagArgs.builder()
 *                 .key(&#34;name&#34;)
 *                 .value(&#34;terraform-route-table-for-vm&#34;)
 *                 .build())
 *             .build());
 * 
 *         var routeTableLink01 = new RouteTableLink(&#34;routeTableLink01&#34;, RouteTableLinkArgs.builder()        
 *             .routeTableId(routeTable01.routeTableId())
 *             .subnetId(subnet01.subnetId())
 *             .build());
 * 
 *         var internetServiceLink01 = new InternetServiceLink(&#34;internetServiceLink01&#34;, InternetServiceLinkArgs.builder()        
 *             .internetServiceId(internetService01.internetServiceId())
 *             .netId(net01.netId())
 *             .build());
 * 
 *         var route01 = new Route(&#34;route01&#34;, RouteArgs.builder()        
 *             .gatewayId(internetService01.internetServiceId())
 *             .destinationIpRange(&#34;0.0.0.0/0&#34;)
 *             .routeTableId(routeTable01.routeTableId())
 *             .build());
 * 
 *         var vm03 = new Vm(&#34;vm03&#34;, VmArgs.builder()        
 *             .imageId(var_.image_id())
 *             .vmType(var_.vm_type())
 *             .keypairName(var_.keypair_name())
 *             .securityGroupIds(securityGroup01.securityGroupId())
 *             .subnetId(subnet01.subnetId())
 *             .build());
 * 
 *     }
 * }
 * ```
 * ### Create a VM with a NIC
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.outscale.Net;
 * import com.pulumi.outscale.NetArgs;
 * import com.pulumi.outscale.inputs.NetTagArgs;
 * import com.pulumi.outscale.Subnet;
 * import com.pulumi.outscale.SubnetArgs;
 * import com.pulumi.outscale.inputs.SubnetTagArgs;
 * import com.pulumi.outscale.Nic;
 * import com.pulumi.outscale.NicArgs;
 * import com.pulumi.outscale.Vm;
 * import com.pulumi.outscale.VmArgs;
 * import com.pulumi.outscale.inputs.VmPrimaryNicArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var net02 = new Net(&#34;net02&#34;, NetArgs.builder()        
 *             .ipRange(&#34;10.0.0.0/16&#34;)
 *             .tags(NetTagArgs.builder()
 *                 .key(&#34;name&#34;)
 *                 .value(&#34;terraform-net-for-vm-with-nic&#34;)
 *                 .build())
 *             .build());
 * 
 *         var subnet02 = new Subnet(&#34;subnet02&#34;, SubnetArgs.builder()        
 *             .netId(net02.netId())
 *             .ipRange(&#34;10.0.0.0/24&#34;)
 *             .subregionName(&#34;eu-west-2a&#34;)
 *             .tags(SubnetTagArgs.builder()
 *                 .key(&#34;name&#34;)
 *                 .value(&#34;terraform-subnet-for-vm-with-nic&#34;)
 *                 .build())
 *             .build());
 * 
 *         var nic01 = new Nic(&#34;nic01&#34;, NicArgs.builder()        
 *             .subnetId(subnet02.subnetId())
 *             .build());
 * 
 *         var vm04 = new Vm(&#34;vm04&#34;, VmArgs.builder()        
 *             .imageId(var_.image_id())
 *             .vmType(&#34;c4.large&#34;)
 *             .keypairName(var_.keypair_name())
 *             .primaryNics(VmPrimaryNicArgs.builder()
 *                 .nicId(nic01.nicId())
 *                 .deviceNumber(&#34;0&#34;)
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * A VM can be imported using its ID. For exampleconsole
 * 
 * ```sh
 *  $ pulumi import outscale:index/vm:Vm ImportedVm i-12345678
 * ```
 * 
 */
@ResourceType(type="outscale:index/vm:Vm")
public class Vm extends com.pulumi.resources.CustomResource {
    @Export(name="adminPassword", refs={String.class}, tree="[0]")
    private Output<String> adminPassword;

    public Output<String> adminPassword() {
        return this.adminPassword;
    }
    /**
     * The architecture of the VM (`i386` \| `x86_64`).
     * 
     */
    @Export(name="architecture", refs={String.class}, tree="[0]")
    private Output<String> architecture;

    /**
     * @return The architecture of the VM (`i386` \| `x86_64`).
     * 
     */
    public Output<String> architecture() {
        return this.architecture;
    }
    /**
     * One or more block device mappings.
     * 
     */
    @Export(name="blockDeviceMappings", refs={List.class,VmBlockDeviceMapping.class}, tree="[0,1]")
    private Output</* @Nullable */ List<VmBlockDeviceMapping>> blockDeviceMappings;

    /**
     * @return One or more block device mappings.
     * 
     */
    public Output<Optional<List<VmBlockDeviceMapping>>> blockDeviceMappings() {
        return Codegen.optional(this.blockDeviceMappings);
    }
    /**
     * The block device mapping of the VM.
     * 
     */
    @Export(name="blockDeviceMappingsCreateds", refs={List.class,VmBlockDeviceMappingsCreated.class}, tree="[0,1]")
    private Output<List<VmBlockDeviceMappingsCreated>> blockDeviceMappingsCreateds;

    /**
     * @return The block device mapping of the VM.
     * 
     */
    public Output<List<VmBlockDeviceMappingsCreated>> blockDeviceMappingsCreateds() {
        return this.blockDeviceMappingsCreateds;
    }
    @Export(name="bsuOptimized", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> bsuOptimized;

    public Output<Boolean> bsuOptimized() {
        return this.bsuOptimized;
    }
    /**
     * A unique identifier which enables you to manage the idempotency.
     * 
     */
    @Export(name="clientToken", refs={String.class}, tree="[0]")
    private Output<String> clientToken;

    /**
     * @return A unique identifier which enables you to manage the idempotency.
     * 
     */
    public Output<String> clientToken() {
        return this.clientToken;
    }
    /**
     * The date and time of creation of the VM.
     * 
     */
    @Export(name="creationDate", refs={String.class}, tree="[0]")
    private Output<String> creationDate;

    /**
     * @return The date and time of creation of the VM.
     * 
     */
    public Output<String> creationDate() {
        return this.creationDate;
    }
    /**
     * If true, you cannot delete the VM unless you change this parameter back to false.
     * 
     */
    @Export(name="deletionProtection", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> deletionProtection;

    /**
     * @return If true, you cannot delete the VM unless you change this parameter back to false.
     * 
     */
    public Output<Boolean> deletionProtection() {
        return this.deletionProtection;
    }
    /**
     * (Windows VM only) If true, waits for the administrator password of the VM to become available in order to retrieve the VM. The password is exported to the `admin_password` attribute.
     * 
     */
    @Export(name="getAdminPassword", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> getAdminPassword;

    /**
     * @return (Windows VM only) If true, waits for the administrator password of the VM to become available in order to retrieve the VM. The password is exported to the `admin_password` attribute.
     * 
     */
    public Output<Optional<Boolean>> getAdminPassword() {
        return Codegen.optional(this.getAdminPassword);
    }
    /**
     * The hypervisor type of the VMs (`ovm` \| `xen`).
     * 
     */
    @Export(name="hypervisor", refs={String.class}, tree="[0]")
    private Output<String> hypervisor;

    /**
     * @return The hypervisor type of the VMs (`ovm` \| `xen`).
     * 
     */
    public Output<String> hypervisor() {
        return this.hypervisor;
    }
    /**
     * The ID of the OMI used to create the VM. You can find the list of OMIs by calling the [ReadImages](https://docs.outscale.com/api#readimages) method.
     * 
     */
    @Export(name="imageId", refs={String.class}, tree="[0]")
    private Output<String> imageId;

    /**
     * @return The ID of the OMI used to create the VM. You can find the list of OMIs by calling the [ReadImages](https://docs.outscale.com/api#readimages) method.
     * 
     */
    public Output<String> imageId() {
        return this.imageId;
    }
    /**
     * (Net only) If true, the source/destination check is enabled. If false, it is disabled. This value must be false for a NAT VM to perform network address translation (NAT) in a Net.
     * 
     */
    @Export(name="isSourceDestChecked", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> isSourceDestChecked;

    /**
     * @return (Net only) If true, the source/destination check is enabled. If false, it is disabled. This value must be false for a NAT VM to perform network address translation (NAT) in a Net.
     * 
     */
    public Output<Boolean> isSourceDestChecked() {
        return this.isSourceDestChecked;
    }
    /**
     * The name of the keypair.
     * 
     */
    @Export(name="keypairName", refs={String.class}, tree="[0]")
    private Output<String> keypairName;

    /**
     * @return The name of the keypair.
     * 
     */
    public Output<String> keypairName() {
        return this.keypairName;
    }
    /**
     * The number for the VM when launching a group of several VMs (for example, `0`, `1`, `2`, and so on).
     * 
     */
    @Export(name="launchNumber", refs={Integer.class}, tree="[0]")
    private Output<Integer> launchNumber;

    /**
     * @return The number for the VM when launching a group of several VMs (for example, `0`, `1`, `2`, and so on).
     * 
     */
    public Output<Integer> launchNumber() {
        return this.launchNumber;
    }
    /**
     * (dedicated tenancy only) If true, nested virtualization is enabled. If false, it is disabled.
     * 
     */
    @Export(name="nestedVirtualization", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> nestedVirtualization;

    /**
     * @return (dedicated tenancy only) If true, nested virtualization is enabled. If false, it is disabled.
     * 
     */
    public Output<Optional<Boolean>> nestedVirtualization() {
        return Codegen.optional(this.nestedVirtualization);
    }
    /**
     * The ID of the Net for the NIC.
     * 
     */
    @Export(name="netId", refs={String.class}, tree="[0]")
    private Output<String> netId;

    /**
     * @return The ID of the Net for the NIC.
     * 
     */
    public Output<String> netId() {
        return this.netId;
    }
    /**
     * One or more NICs. If you specify this parameter, you must not specify the `subnet_id` and `subregion_name` parameters. To define a NIC as the primary network interface of the VM, use the `primary_nic` argument.
     * 
     */
    @Export(name="nics", refs={List.class,VmNic.class}, tree="[0,1]")
    private Output<List<VmNic>> nics;

    /**
     * @return One or more NICs. If you specify this parameter, you must not specify the `subnet_id` and `subregion_name` parameters. To define a NIC as the primary network interface of the VM, use the `primary_nic` argument.
     * 
     */
    public Output<List<VmNic>> nics() {
        return this.nics;
    }
    /**
     * Indicates the operating system (OS) of the VM.
     * 
     */
    @Export(name="osFamily", refs={String.class}, tree="[0]")
    private Output<String> osFamily;

    /**
     * @return Indicates the operating system (OS) of the VM.
     * 
     */
    public Output<String> osFamily() {
        return this.osFamily;
    }
    /**
     * The performance of the VM (`medium` | `high` | `highest`). Updating this parameter will trigger a stop/start of the VM.
     * 
     */
    @Export(name="performance", refs={String.class}, tree="[0]")
    private Output<String> performance;

    /**
     * @return The performance of the VM (`medium` | `high` | `highest`). Updating this parameter will trigger a stop/start of the VM.
     * 
     */
    public Output<String> performance() {
        return this.performance;
    }
    /**
     * The name of the Subregion where the VM is placed.
     * 
     */
    @Export(name="placementSubregionName", refs={String.class}, tree="[0]")
    private Output<String> placementSubregionName;

    /**
     * @return The name of the Subregion where the VM is placed.
     * 
     */
    public Output<String> placementSubregionName() {
        return this.placementSubregionName;
    }
    /**
     * The tenancy of the VM (`default` | `dedicated`).
     * 
     */
    @Export(name="placementTenancy", refs={String.class}, tree="[0]")
    private Output<String> placementTenancy;

    /**
     * @return The tenancy of the VM (`default` | `dedicated`).
     * 
     */
    public Output<String> placementTenancy() {
        return this.placementTenancy;
    }
    /**
     * The primary network interface of the VM.
     * 
     */
    @Export(name="primaryNics", refs={List.class,VmPrimaryNic.class}, tree="[0,1]")
    private Output<List<VmPrimaryNic>> primaryNics;

    /**
     * @return The primary network interface of the VM.
     * 
     */
    public Output<List<VmPrimaryNic>> primaryNics() {
        return this.primaryNics;
    }
    /**
     * The name of the private DNS.
     * 
     */
    @Export(name="privateDnsName", refs={String.class}, tree="[0]")
    private Output<String> privateDnsName;

    /**
     * @return The name of the private DNS.
     * 
     */
    public Output<String> privateDnsName() {
        return this.privateDnsName;
    }
    /**
     * The private IP of the NIC.
     * 
     */
    @Export(name="privateIp", refs={String.class}, tree="[0]")
    private Output<String> privateIp;

    /**
     * @return The private IP of the NIC.
     * 
     */
    public Output<String> privateIp() {
        return this.privateIp;
    }
    /**
     * One or more private IPs of the VM.
     * 
     */
    @Export(name="privateIps", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> privateIps;

    /**
     * @return One or more private IPs of the VM.
     * 
     */
    public Output<Optional<List<String>>> privateIps() {
        return Codegen.optional(this.privateIps);
    }
    /**
     * The product codes associated with the OMI used to create the VM.
     * 
     */
    @Export(name="productCodes", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> productCodes;

    /**
     * @return The product codes associated with the OMI used to create the VM.
     * 
     */
    public Output<List<String>> productCodes() {
        return this.productCodes;
    }
    /**
     * The name of the public DNS.
     * 
     */
    @Export(name="publicDnsName", refs={String.class}, tree="[0]")
    private Output<String> publicDnsName;

    /**
     * @return The name of the public DNS.
     * 
     */
    public Output<String> publicDnsName() {
        return this.publicDnsName;
    }
    /**
     * The public IP of the VM.
     * 
     */
    @Export(name="publicIp", refs={String.class}, tree="[0]")
    private Output<String> publicIp;

    /**
     * @return The public IP of the VM.
     * 
     */
    public Output<String> publicIp() {
        return this.publicIp;
    }
    @Export(name="requestId", refs={String.class}, tree="[0]")
    private Output<String> requestId;

    public Output<String> requestId() {
        return this.requestId;
    }
    /**
     * The reservation ID of the VM.
     * 
     */
    @Export(name="reservationId", refs={String.class}, tree="[0]")
    private Output<String> reservationId;

    /**
     * @return The reservation ID of the VM.
     * 
     */
    public Output<String> reservationId() {
        return this.reservationId;
    }
    /**
     * The name of the root device for the VM (for example, `/dev/vda1`).
     * 
     */
    @Export(name="rootDeviceName", refs={String.class}, tree="[0]")
    private Output<String> rootDeviceName;

    /**
     * @return The name of the root device for the VM (for example, `/dev/vda1`).
     * 
     */
    public Output<String> rootDeviceName() {
        return this.rootDeviceName;
    }
    /**
     * The type of root device used by the VM (always `bsu`).
     * 
     */
    @Export(name="rootDeviceType", refs={String.class}, tree="[0]")
    private Output<String> rootDeviceType;

    /**
     * @return The type of root device used by the VM (always `bsu`).
     * 
     */
    public Output<String> rootDeviceType() {
        return this.rootDeviceType;
    }
    /**
     * One or more IDs of security group for the VMs.
     * 
     */
    @Export(name="securityGroupIds", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> securityGroupIds;

    /**
     * @return One or more IDs of security group for the VMs.
     * 
     */
    public Output<Optional<List<String>>> securityGroupIds() {
        return Codegen.optional(this.securityGroupIds);
    }
    /**
     * One or more names of security groups for the VMs.
     * 
     */
    @Export(name="securityGroupNames", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> securityGroupNames;

    /**
     * @return One or more names of security groups for the VMs.
     * 
     */
    public Output<Optional<List<String>>> securityGroupNames() {
        return Codegen.optional(this.securityGroupNames);
    }
    /**
     * One or more security groups associated with the VM.
     * 
     */
    @Export(name="securityGroups", refs={List.class,VmSecurityGroup.class}, tree="[0,1]")
    private Output<List<VmSecurityGroup>> securityGroups;

    /**
     * @return One or more security groups associated with the VM.
     * 
     */
    public Output<List<VmSecurityGroup>> securityGroups() {
        return this.securityGroups;
    }
    /**
     * The state of the VM (`running` | `stopped`). If set to `stopped`, the VM is stopped regardless of the value of the `vm_initiated_shutdown_behavior` argument.
     * 
     */
    @Export(name="state", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> state;

    /**
     * @return The state of the VM (`running` | `stopped`). If set to `stopped`, the VM is stopped regardless of the value of the `vm_initiated_shutdown_behavior` argument.
     * 
     */
    public Output<Optional<String>> state() {
        return Codegen.optional(this.state);
    }
    /**
     * The reason explaining the current state of the VM.
     * 
     */
    @Export(name="stateReason", refs={String.class}, tree="[0]")
    private Output<String> stateReason;

    /**
     * @return The reason explaining the current state of the VM.
     * 
     */
    public Output<String> stateReason() {
        return this.stateReason;
    }
    /**
     * The ID of the Subnet in which you want to create the VM. If you specify this parameter, you must not specify the `nics` parameter.
     * 
     */
    @Export(name="subnetId", refs={String.class}, tree="[0]")
    private Output<String> subnetId;

    /**
     * @return The ID of the Subnet in which you want to create the VM. If you specify this parameter, you must not specify the `nics` parameter.
     * 
     */
    public Output<String> subnetId() {
        return this.subnetId;
    }
    /**
     * A tag to add to this resource. You can specify this argument several times.
     * 
     */
    @Export(name="tags", refs={List.class,VmTag.class}, tree="[0,1]")
    private Output</* @Nullable */ List<VmTag>> tags;

    /**
     * @return A tag to add to this resource. You can specify this argument several times.
     * 
     */
    public Output<Optional<List<VmTag>>> tags() {
        return Codegen.optional(this.tags);
    }
    /**
     * Data or script used to add a specific configuration to the VM. It must be Base64-encoded, either directly or using the base64encode. Updating this parameter will trigger a stop/start of the VM.
     * 
     */
    @Export(name="userData", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> userData;

    /**
     * @return Data or script used to add a specific configuration to the VM. It must be Base64-encoded, either directly or using the base64encode. Updating this parameter will trigger a stop/start of the VM.
     * 
     */
    public Output<Optional<String>> userData() {
        return Codegen.optional(this.userData);
    }
    /**
     * The ID of the VM.
     * 
     */
    @Export(name="vmId", refs={String.class}, tree="[0]")
    private Output<String> vmId;

    /**
     * @return The ID of the VM.
     * 
     */
    public Output<String> vmId() {
        return this.vmId;
    }
    /**
     * The VM behavior when you stop it. By default or if set to `stop`, the VM stops. If set to `restart`, the VM stops then automatically restarts. If set to `terminate`, the VM stops and is terminated.
     * 
     */
    @Export(name="vmInitiatedShutdownBehavior", refs={String.class}, tree="[0]")
    private Output<String> vmInitiatedShutdownBehavior;

    /**
     * @return The VM behavior when you stop it. By default or if set to `stop`, the VM stops. If set to `restart`, the VM stops then automatically restarts. If set to `terminate`, the VM stops and is terminated.
     * 
     */
    public Output<String> vmInitiatedShutdownBehavior() {
        return this.vmInitiatedShutdownBehavior;
    }
    /**
     * The type of VM (`t2.small` by default). Updating this parameter will trigger a stop/start of the VM.&lt;br /&gt; For more information, see [Instance Types](https://docs.outscale.com/en/userguide/Instance-Types.html).
     * 
     */
    @Export(name="vmType", refs={String.class}, tree="[0]")
    private Output<String> vmType;

    /**
     * @return The type of VM (`t2.small` by default). Updating this parameter will trigger a stop/start of the VM.&lt;br /&gt; For more information, see [Instance Types](https://docs.outscale.com/en/userguide/Instance-Types.html).
     * 
     */
    public Output<String> vmType() {
        return this.vmType;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Vm(String name) {
        this(name, VmArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Vm(String name, VmArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Vm(String name, VmArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("outscale:index/vm:Vm", name, args == null ? VmArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Vm(String name, Output<String> id, @Nullable VmState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("outscale:index/vm:Vm", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Vm get(String name, Output<String> id, @Nullable VmState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Vm(name, id, state, options);
    }
}
