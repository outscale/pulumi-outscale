// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.outscale.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.outscale.outputs.GetSnapshotsFilter;
import com.pulumi.outscale.outputs.GetSnapshotsSnapshot;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class GetSnapshotsResult {
    /**
     * @return The account ID of the owner of the snapshot.
     * 
     */
    private @Nullable List<String> accountIds;
    private @Nullable List<GetSnapshotsFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private @Nullable List<String> permissionToCreateVolumes;
    private String requestId;
    /**
     * @return The ID of the snapshot.
     * 
     */
    private @Nullable List<String> snapshotIds;
    /**
     * @return Information about one or more snapshots and their permissions.
     * 
     */
    private List<GetSnapshotsSnapshot> snapshots;

    private GetSnapshotsResult() {}
    /**
     * @return The account ID of the owner of the snapshot.
     * 
     */
    public List<String> accountIds() {
        return this.accountIds == null ? List.of() : this.accountIds;
    }
    public List<GetSnapshotsFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public List<String> permissionToCreateVolumes() {
        return this.permissionToCreateVolumes == null ? List.of() : this.permissionToCreateVolumes;
    }
    public String requestId() {
        return this.requestId;
    }
    /**
     * @return The ID of the snapshot.
     * 
     */
    public List<String> snapshotIds() {
        return this.snapshotIds == null ? List.of() : this.snapshotIds;
    }
    /**
     * @return Information about one or more snapshots and their permissions.
     * 
     */
    public List<GetSnapshotsSnapshot> snapshots() {
        return this.snapshots;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSnapshotsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<String> accountIds;
        private @Nullable List<GetSnapshotsFilter> filters;
        private String id;
        private @Nullable List<String> permissionToCreateVolumes;
        private String requestId;
        private @Nullable List<String> snapshotIds;
        private List<GetSnapshotsSnapshot> snapshots;
        public Builder() {}
        public Builder(GetSnapshotsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountIds = defaults.accountIds;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.permissionToCreateVolumes = defaults.permissionToCreateVolumes;
    	      this.requestId = defaults.requestId;
    	      this.snapshotIds = defaults.snapshotIds;
    	      this.snapshots = defaults.snapshots;
        }

        @CustomType.Setter
        public Builder accountIds(@Nullable List<String> accountIds) {
            this.accountIds = accountIds;
            return this;
        }
        public Builder accountIds(String... accountIds) {
            return accountIds(List.of(accountIds));
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetSnapshotsFilter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(GetSnapshotsFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder permissionToCreateVolumes(@Nullable List<String> permissionToCreateVolumes) {
            this.permissionToCreateVolumes = permissionToCreateVolumes;
            return this;
        }
        public Builder permissionToCreateVolumes(String... permissionToCreateVolumes) {
            return permissionToCreateVolumes(List.of(permissionToCreateVolumes));
        }
        @CustomType.Setter
        public Builder requestId(String requestId) {
            this.requestId = Objects.requireNonNull(requestId);
            return this;
        }
        @CustomType.Setter
        public Builder snapshotIds(@Nullable List<String> snapshotIds) {
            this.snapshotIds = snapshotIds;
            return this;
        }
        public Builder snapshotIds(String... snapshotIds) {
            return snapshotIds(List.of(snapshotIds));
        }
        @CustomType.Setter
        public Builder snapshots(List<GetSnapshotsSnapshot> snapshots) {
            this.snapshots = Objects.requireNonNull(snapshots);
            return this;
        }
        public Builder snapshots(GetSnapshotsSnapshot... snapshots) {
            return snapshots(List.of(snapshots));
        }
        public GetSnapshotsResult build() {
            final var o = new GetSnapshotsResult();
            o.accountIds = accountIds;
            o.filters = filters;
            o.id = id;
            o.permissionToCreateVolumes = permissionToCreateVolumes;
            o.requestId = requestId;
            o.snapshotIds = snapshotIds;
            o.snapshots = snapshots;
            return o;
        }
    }
}
