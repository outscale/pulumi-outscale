// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.outscale;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.outscale.Utilities;
import com.pulumi.outscale.VpnConnectionArgs;
import com.pulumi.outscale.inputs.VpnConnectionState;
import com.pulumi.outscale.outputs.VpnConnectionRoute;
import com.pulumi.outscale.outputs.VpnConnectionTag;
import com.pulumi.outscale.outputs.VpnConnectionVgwTelemetry;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages a VPN connection.
 * 
 * For more information on this resource, see the [User Guide](https://docs.outscale.com/en/userguide/About-VPN-Connections.html).\
 * For more information on this resource actions, see the [API documentation](https://docs.outscale.com/api#3ds-outscale-api-vpnconnection).
 * 
 * ## Example Usage
 * ### Required resources
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.outscale.ClientGateway;
 * import com.pulumi.outscale.ClientGatewayArgs;
 * import com.pulumi.outscale.VirtualGateway;
 * import com.pulumi.outscale.VirtualGatewayArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var clientGateway01 = new ClientGateway(&#34;clientGateway01&#34;, ClientGatewayArgs.builder()        
 *             .bgpAsn(65000)
 *             .connectionType(&#34;ipsec.1&#34;)
 *             .publicIp(&#34;111.11.11.111&#34;)
 *             .build());
 * 
 *         var virtualGateway01 = new VirtualGateway(&#34;virtualGateway01&#34;, VirtualGatewayArgs.builder()        
 *             .connectionType(&#34;ipsec.1&#34;)
 *             .build());
 * 
 *     }
 * }
 * ```
 * ### Create a VPN connection
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.outscale.VpnConnection;
 * import com.pulumi.outscale.VpnConnectionArgs;
 * import com.pulumi.outscale.inputs.VpnConnectionTagArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var vpnConnection01 = new VpnConnection(&#34;vpnConnection01&#34;, VpnConnectionArgs.builder()        
 *             .clientGatewayId(outscale_client_gateway.client_gateway01().client_gateway_id())
 *             .virtualGatewayId(outscale_virtual_gateway.virtual_gateway01().virtual_gateway_id())
 *             .connectionType(&#34;ipsec.1&#34;)
 *             .staticRoutesOnly(true)
 *             .tags(VpnConnectionTagArgs.builder()
 *                 .key(&#34;Name&#34;)
 *                 .value(&#34;vpn01&#34;)
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * A VPN connection can be imported using its ID. For exampleconsole
 * 
 * ```sh
 *  $ pulumi import outscale:index/vpnConnection:VpnConnection ImportedVPN vpn-12345678
 * ```
 * 
 */
@ResourceType(type="outscale:index/vpnConnection:VpnConnection")
public class VpnConnection extends com.pulumi.resources.CustomResource {
    /**
     * Example configuration for the client gateway.
     * 
     */
    @Export(name="clientGatewayConfiguration", refs={String.class}, tree="[0]")
    private Output<String> clientGatewayConfiguration;

    /**
     * @return Example configuration for the client gateway.
     * 
     */
    public Output<String> clientGatewayConfiguration() {
        return this.clientGatewayConfiguration;
    }
    /**
     * The ID of the client gateway.
     * 
     */
    @Export(name="clientGatewayId", refs={String.class}, tree="[0]")
    private Output<String> clientGatewayId;

    /**
     * @return The ID of the client gateway.
     * 
     */
    public Output<String> clientGatewayId() {
        return this.clientGatewayId;
    }
    /**
     * The type of VPN connection (only `ipsec.1` is supported).
     * 
     */
    @Export(name="connectionType", refs={String.class}, tree="[0]")
    private Output<String> connectionType;

    /**
     * @return The type of VPN connection (only `ipsec.1` is supported).
     * 
     */
    public Output<String> connectionType() {
        return this.connectionType;
    }
    @Export(name="requestId", refs={String.class}, tree="[0]")
    private Output<String> requestId;

    public Output<String> requestId() {
        return this.requestId;
    }
    /**
     * Information about one or more static routes associated with the VPN connection, if any.
     * 
     */
    @Export(name="routes", refs={List.class,VpnConnectionRoute.class}, tree="[0,1]")
    private Output<List<VpnConnectionRoute>> routes;

    /**
     * @return Information about one or more static routes associated with the VPN connection, if any.
     * 
     */
    public Output<List<VpnConnectionRoute>> routes() {
        return this.routes;
    }
    /**
     * The state of the IPSEC tunnel (`UP` \| `DOWN`).
     * 
     */
    @Export(name="state", refs={String.class}, tree="[0]")
    private Output<String> state;

    /**
     * @return The state of the IPSEC tunnel (`UP` \| `DOWN`).
     * 
     */
    public Output<String> state() {
        return this.state;
    }
    /**
     * If false, the VPN connection uses dynamic routing with Border Gateway Protocol (BGP). If true, routing is controlled using static routes. For more information about how to create and delete static routes, see [CreateVpnConnectionRoute](https://docs.outscale.com/api#createvpnconnectionroute) and [DeleteVpnConnectionRoute](https://docs.outscale.com/api#deletevpnconnectionroute).
     * 
     */
    @Export(name="staticRoutesOnly", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> staticRoutesOnly;

    /**
     * @return If false, the VPN connection uses dynamic routing with Border Gateway Protocol (BGP). If true, routing is controlled using static routes. For more information about how to create and delete static routes, see [CreateVpnConnectionRoute](https://docs.outscale.com/api#createvpnconnectionroute) and [DeleteVpnConnectionRoute](https://docs.outscale.com/api#deletevpnconnectionroute).
     * 
     */
    public Output<Optional<Boolean>> staticRoutesOnly() {
        return Codegen.optional(this.staticRoutesOnly);
    }
    /**
     * A tag to add to this resource. You can specify this argument several times.
     * 
     */
    @Export(name="tags", refs={List.class,VpnConnectionTag.class}, tree="[0,1]")
    private Output</* @Nullable */ List<VpnConnectionTag>> tags;

    /**
     * @return A tag to add to this resource. You can specify this argument several times.
     * 
     */
    public Output<Optional<List<VpnConnectionTag>>> tags() {
        return Codegen.optional(this.tags);
    }
    /**
     * Information about the current state of one or more of the VPN tunnels.
     * 
     */
    @Export(name="vgwTelemetries", refs={List.class,VpnConnectionVgwTelemetry.class}, tree="[0,1]")
    private Output<List<VpnConnectionVgwTelemetry>> vgwTelemetries;

    /**
     * @return Information about the current state of one or more of the VPN tunnels.
     * 
     */
    public Output<List<VpnConnectionVgwTelemetry>> vgwTelemetries() {
        return this.vgwTelemetries;
    }
    /**
     * The ID of the virtual gateway.
     * 
     */
    @Export(name="virtualGatewayId", refs={String.class}, tree="[0]")
    private Output<String> virtualGatewayId;

    /**
     * @return The ID of the virtual gateway.
     * 
     */
    public Output<String> virtualGatewayId() {
        return this.virtualGatewayId;
    }
    /**
     * The ID of the VPN connection.
     * 
     */
    @Export(name="vpnConnectionId", refs={String.class}, tree="[0]")
    private Output<String> vpnConnectionId;

    /**
     * @return The ID of the VPN connection.
     * 
     */
    public Output<String> vpnConnectionId() {
        return this.vpnConnectionId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public VpnConnection(String name) {
        this(name, VpnConnectionArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public VpnConnection(String name, VpnConnectionArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public VpnConnection(String name, VpnConnectionArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("outscale:index/vpnConnection:VpnConnection", name, args == null ? VpnConnectionArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private VpnConnection(String name, Output<String> id, @Nullable VpnConnectionState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("outscale:index/vpnConnection:VpnConnection", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static VpnConnection get(String name, Output<String> id, @Nullable VpnConnectionState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new VpnConnection(name, id, state, options);
    }
}
