// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.outscale.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.outscale.outputs.VmBlockDeviceMappingBsuTag;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class VmBlockDeviceMappingBsu {
    /**
     * @return If true, the NIC is deleted when the VM is terminated. You can specify this parameter only for a new NIC. To modify this value for an existing NIC, see [UpdateNic](https://docs.outscale.com/api#updatenic).
     * 
     */
    private @Nullable Boolean deleteOnVmDeletion;
    /**
     * @return The number of I/O operations per second (IOPS). This parameter must be specified only if you create an `io1` volume. The maximum number of IOPS allowed for `io1` volumes is `13000` with a maximum performance ratio of 300 IOPS per gibibyte.
     * 
     */
    private @Nullable Integer iops;
    /**
     * @return The ID of the snapshot used to create the volume.
     * 
     */
    private @Nullable String snapshotId;
    /**
     * @return A tag to add to this resource. You can specify this argument several times.
     * 
     */
    private @Nullable List<VmBlockDeviceMappingBsuTag> tags;
    /**
     * @return The size of the volume, in gibibytes (GiB).&lt;br /&gt;
     * If you specify a snapshot ID, the volume size must be at least equal to the snapshot size.&lt;br /&gt;
     * If you specify a snapshot ID but no volume size, the volume is created with a size similar to the snapshot one.
     * 
     */
    private @Nullable Integer volumeSize;
    /**
     * @return The type of the volume (`standard` \| `io1` \| `gp2`). If not specified in the request, a `standard` volume is created.&lt;br /&gt;
     * For more information about volume types, see [About Volumes &gt; Volume Types and IOPS](https://docs.outscale.com/en/userguide/About-Volumes.html#_volume_types_and_iops).
     * 
     */
    private @Nullable String volumeType;

    private VmBlockDeviceMappingBsu() {}
    /**
     * @return If true, the NIC is deleted when the VM is terminated. You can specify this parameter only for a new NIC. To modify this value for an existing NIC, see [UpdateNic](https://docs.outscale.com/api#updatenic).
     * 
     */
    public Optional<Boolean> deleteOnVmDeletion() {
        return Optional.ofNullable(this.deleteOnVmDeletion);
    }
    /**
     * @return The number of I/O operations per second (IOPS). This parameter must be specified only if you create an `io1` volume. The maximum number of IOPS allowed for `io1` volumes is `13000` with a maximum performance ratio of 300 IOPS per gibibyte.
     * 
     */
    public Optional<Integer> iops() {
        return Optional.ofNullable(this.iops);
    }
    /**
     * @return The ID of the snapshot used to create the volume.
     * 
     */
    public Optional<String> snapshotId() {
        return Optional.ofNullable(this.snapshotId);
    }
    /**
     * @return A tag to add to this resource. You can specify this argument several times.
     * 
     */
    public List<VmBlockDeviceMappingBsuTag> tags() {
        return this.tags == null ? List.of() : this.tags;
    }
    /**
     * @return The size of the volume, in gibibytes (GiB).&lt;br /&gt;
     * If you specify a snapshot ID, the volume size must be at least equal to the snapshot size.&lt;br /&gt;
     * If you specify a snapshot ID but no volume size, the volume is created with a size similar to the snapshot one.
     * 
     */
    public Optional<Integer> volumeSize() {
        return Optional.ofNullable(this.volumeSize);
    }
    /**
     * @return The type of the volume (`standard` \| `io1` \| `gp2`). If not specified in the request, a `standard` volume is created.&lt;br /&gt;
     * For more information about volume types, see [About Volumes &gt; Volume Types and IOPS](https://docs.outscale.com/en/userguide/About-Volumes.html#_volume_types_and_iops).
     * 
     */
    public Optional<String> volumeType() {
        return Optional.ofNullable(this.volumeType);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VmBlockDeviceMappingBsu defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean deleteOnVmDeletion;
        private @Nullable Integer iops;
        private @Nullable String snapshotId;
        private @Nullable List<VmBlockDeviceMappingBsuTag> tags;
        private @Nullable Integer volumeSize;
        private @Nullable String volumeType;
        public Builder() {}
        public Builder(VmBlockDeviceMappingBsu defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.deleteOnVmDeletion = defaults.deleteOnVmDeletion;
    	      this.iops = defaults.iops;
    	      this.snapshotId = defaults.snapshotId;
    	      this.tags = defaults.tags;
    	      this.volumeSize = defaults.volumeSize;
    	      this.volumeType = defaults.volumeType;
        }

        @CustomType.Setter
        public Builder deleteOnVmDeletion(@Nullable Boolean deleteOnVmDeletion) {
            this.deleteOnVmDeletion = deleteOnVmDeletion;
            return this;
        }
        @CustomType.Setter
        public Builder iops(@Nullable Integer iops) {
            this.iops = iops;
            return this;
        }
        @CustomType.Setter
        public Builder snapshotId(@Nullable String snapshotId) {
            this.snapshotId = snapshotId;
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable List<VmBlockDeviceMappingBsuTag> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(VmBlockDeviceMappingBsuTag... tags) {
            return tags(List.of(tags));
        }
        @CustomType.Setter
        public Builder volumeSize(@Nullable Integer volumeSize) {
            this.volumeSize = volumeSize;
            return this;
        }
        @CustomType.Setter
        public Builder volumeType(@Nullable String volumeType) {
            this.volumeType = volumeType;
            return this;
        }
        public VmBlockDeviceMappingBsu build() {
            final var o = new VmBlockDeviceMappingBsu();
            o.deleteOnVmDeletion = deleteOnVmDeletion;
            o.iops = iops;
            o.snapshotId = snapshotId;
            o.tags = tags;
            o.volumeSize = volumeSize;
            o.volumeType = volumeType;
            return o;
        }
    }
}
