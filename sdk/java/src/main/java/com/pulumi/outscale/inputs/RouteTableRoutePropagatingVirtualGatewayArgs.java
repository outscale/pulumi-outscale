// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.outscale.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RouteTableRoutePropagatingVirtualGatewayArgs extends com.pulumi.resources.ResourceArgs {

    public static final RouteTableRoutePropagatingVirtualGatewayArgs Empty = new RouteTableRoutePropagatingVirtualGatewayArgs();

    /**
     * The ID of the virtual gateway.
     * 
     */
    @Import(name="virtualGatewayId")
    private @Nullable Output<String> virtualGatewayId;

    /**
     * @return The ID of the virtual gateway.
     * 
     */
    public Optional<Output<String>> virtualGatewayId() {
        return Optional.ofNullable(this.virtualGatewayId);
    }

    private RouteTableRoutePropagatingVirtualGatewayArgs() {}

    private RouteTableRoutePropagatingVirtualGatewayArgs(RouteTableRoutePropagatingVirtualGatewayArgs $) {
        this.virtualGatewayId = $.virtualGatewayId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RouteTableRoutePropagatingVirtualGatewayArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RouteTableRoutePropagatingVirtualGatewayArgs $;

        public Builder() {
            $ = new RouteTableRoutePropagatingVirtualGatewayArgs();
        }

        public Builder(RouteTableRoutePropagatingVirtualGatewayArgs defaults) {
            $ = new RouteTableRoutePropagatingVirtualGatewayArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param virtualGatewayId The ID of the virtual gateway.
         * 
         * @return builder
         * 
         */
        public Builder virtualGatewayId(@Nullable Output<String> virtualGatewayId) {
            $.virtualGatewayId = virtualGatewayId;
            return this;
        }

        /**
         * @param virtualGatewayId The ID of the virtual gateway.
         * 
         * @return builder
         * 
         */
        public Builder virtualGatewayId(String virtualGatewayId) {
            return virtualGatewayId(Output.of(virtualGatewayId));
        }

        public RouteTableRoutePropagatingVirtualGatewayArgs build() {
            return $;
        }
    }

}
