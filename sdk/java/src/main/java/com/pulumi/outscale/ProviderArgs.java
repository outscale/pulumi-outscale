// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.outscale;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import com.pulumi.outscale.inputs.ProviderEndpointArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ProviderArgs extends com.pulumi.resources.ResourceArgs {

    public static final ProviderArgs Empty = new ProviderArgs();

    /**
     * The Access Key ID for API operations
     * 
     */
    @Import(name="accessKeyId")
    private @Nullable Output<String> accessKeyId;

    /**
     * @return The Access Key ID for API operations
     * 
     */
    public Optional<Output<String>> accessKeyId() {
        return Optional.ofNullable(this.accessKeyId);
    }

    @Import(name="endpoints", json=true)
    private @Nullable Output<List<ProviderEndpointArgs>> endpoints;

    public Optional<Output<List<ProviderEndpointArgs>>> endpoints() {
        return Optional.ofNullable(this.endpoints);
    }

    /**
     * tls insecure connection
     * 
     */
    @Import(name="insecure", json=true)
    private @Nullable Output<Boolean> insecure;

    /**
     * @return tls insecure connection
     * 
     */
    public Optional<Output<Boolean>> insecure() {
        return Optional.ofNullable(this.insecure);
    }

    /**
     * The Region for API operations.
     * 
     */
    @Import(name="region")
    private @Nullable Output<String> region;

    /**
     * @return The Region for API operations.
     * 
     */
    public Optional<Output<String>> region() {
        return Optional.ofNullable(this.region);
    }

    /**
     * The Secret Key ID for API operations.
     * 
     */
    @Import(name="secretKeyId")
    private @Nullable Output<String> secretKeyId;

    /**
     * @return The Secret Key ID for API operations.
     * 
     */
    public Optional<Output<String>> secretKeyId() {
        return Optional.ofNullable(this.secretKeyId);
    }

    /**
     * The path to your x509 cert
     * 
     */
    @Import(name="x509CertPath")
    private @Nullable Output<String> x509CertPath;

    /**
     * @return The path to your x509 cert
     * 
     */
    public Optional<Output<String>> x509CertPath() {
        return Optional.ofNullable(this.x509CertPath);
    }

    /**
     * The path to your x509 key
     * 
     */
    @Import(name="x509KeyPath")
    private @Nullable Output<String> x509KeyPath;

    /**
     * @return The path to your x509 key
     * 
     */
    public Optional<Output<String>> x509KeyPath() {
        return Optional.ofNullable(this.x509KeyPath);
    }

    private ProviderArgs() {}

    private ProviderArgs(ProviderArgs $) {
        this.accessKeyId = $.accessKeyId;
        this.endpoints = $.endpoints;
        this.insecure = $.insecure;
        this.region = $.region;
        this.secretKeyId = $.secretKeyId;
        this.x509CertPath = $.x509CertPath;
        this.x509KeyPath = $.x509KeyPath;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ProviderArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ProviderArgs $;

        public Builder() {
            $ = new ProviderArgs();
        }

        public Builder(ProviderArgs defaults) {
            $ = new ProviderArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accessKeyId The Access Key ID for API operations
         * 
         * @return builder
         * 
         */
        public Builder accessKeyId(@Nullable Output<String> accessKeyId) {
            $.accessKeyId = accessKeyId;
            return this;
        }

        /**
         * @param accessKeyId The Access Key ID for API operations
         * 
         * @return builder
         * 
         */
        public Builder accessKeyId(String accessKeyId) {
            return accessKeyId(Output.of(accessKeyId));
        }

        public Builder endpoints(@Nullable Output<List<ProviderEndpointArgs>> endpoints) {
            $.endpoints = endpoints;
            return this;
        }

        public Builder endpoints(List<ProviderEndpointArgs> endpoints) {
            return endpoints(Output.of(endpoints));
        }

        public Builder endpoints(ProviderEndpointArgs... endpoints) {
            return endpoints(List.of(endpoints));
        }

        /**
         * @param insecure tls insecure connection
         * 
         * @return builder
         * 
         */
        public Builder insecure(@Nullable Output<Boolean> insecure) {
            $.insecure = insecure;
            return this;
        }

        /**
         * @param insecure tls insecure connection
         * 
         * @return builder
         * 
         */
        public Builder insecure(Boolean insecure) {
            return insecure(Output.of(insecure));
        }

        /**
         * @param region The Region for API operations.
         * 
         * @return builder
         * 
         */
        public Builder region(@Nullable Output<String> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region The Region for API operations.
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            return region(Output.of(region));
        }

        /**
         * @param secretKeyId The Secret Key ID for API operations.
         * 
         * @return builder
         * 
         */
        public Builder secretKeyId(@Nullable Output<String> secretKeyId) {
            $.secretKeyId = secretKeyId;
            return this;
        }

        /**
         * @param secretKeyId The Secret Key ID for API operations.
         * 
         * @return builder
         * 
         */
        public Builder secretKeyId(String secretKeyId) {
            return secretKeyId(Output.of(secretKeyId));
        }

        /**
         * @param x509CertPath The path to your x509 cert
         * 
         * @return builder
         * 
         */
        public Builder x509CertPath(@Nullable Output<String> x509CertPath) {
            $.x509CertPath = x509CertPath;
            return this;
        }

        /**
         * @param x509CertPath The path to your x509 cert
         * 
         * @return builder
         * 
         */
        public Builder x509CertPath(String x509CertPath) {
            return x509CertPath(Output.of(x509CertPath));
        }

        /**
         * @param x509KeyPath The path to your x509 key
         * 
         * @return builder
         * 
         */
        public Builder x509KeyPath(@Nullable Output<String> x509KeyPath) {
            $.x509KeyPath = x509KeyPath;
            return this;
        }

        /**
         * @param x509KeyPath The path to your x509 key
         * 
         * @return builder
         * 
         */
        public Builder x509KeyPath(String x509KeyPath) {
            return x509KeyPath(Output.of(x509KeyPath));
        }

        public ProviderArgs build() {
            $.accessKeyId = Codegen.stringProp("accessKeyId").output().arg($.accessKeyId).env("OUTSCALE_ACCESSKEYID").getNullable();
            $.region = Codegen.stringProp("region").output().arg($.region).env("OUTSCALE_REGION").getNullable();
            $.secretKeyId = Codegen.stringProp("secretKeyId").output().arg($.secretKeyId).env("OUTSCALE_SECRETKEYID").getNullable();
            return $;
        }
    }

}
