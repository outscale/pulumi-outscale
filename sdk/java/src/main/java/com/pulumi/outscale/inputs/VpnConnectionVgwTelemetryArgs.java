// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.outscale.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VpnConnectionVgwTelemetryArgs extends com.pulumi.resources.ResourceArgs {

    public static final VpnConnectionVgwTelemetryArgs Empty = new VpnConnectionVgwTelemetryArgs();

    /**
     * The number of routes accepted through BGP (Border Gateway Protocol) route exchanges.
     * 
     */
    @Import(name="acceptedRouteCount")
    private @Nullable Output<Integer> acceptedRouteCount;

    /**
     * @return The number of routes accepted through BGP (Border Gateway Protocol) route exchanges.
     * 
     */
    public Optional<Output<Integer>> acceptedRouteCount() {
        return Optional.ofNullable(this.acceptedRouteCount);
    }

    /**
     * The date and time (UTC) of the latest state update.
     * 
     */
    @Import(name="lastStateChangeDate")
    private @Nullable Output<String> lastStateChangeDate;

    /**
     * @return The date and time (UTC) of the latest state update.
     * 
     */
    public Optional<Output<String>> lastStateChangeDate() {
        return Optional.ofNullable(this.lastStateChangeDate);
    }

    /**
     * The IP on the OUTSCALE side of the tunnel.
     * 
     */
    @Import(name="outsideIpAddress")
    private @Nullable Output<String> outsideIpAddress;

    /**
     * @return The IP on the OUTSCALE side of the tunnel.
     * 
     */
    public Optional<Output<String>> outsideIpAddress() {
        return Optional.ofNullable(this.outsideIpAddress);
    }

    /**
     * The state of the IPSEC tunnel (`UP` \| `DOWN`).
     * 
     */
    @Import(name="state")
    private @Nullable Output<String> state;

    /**
     * @return The state of the IPSEC tunnel (`UP` \| `DOWN`).
     * 
     */
    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    /**
     * A description of the current state of the tunnel.
     * 
     */
    @Import(name="stateDescription")
    private @Nullable Output<String> stateDescription;

    /**
     * @return A description of the current state of the tunnel.
     * 
     */
    public Optional<Output<String>> stateDescription() {
        return Optional.ofNullable(this.stateDescription);
    }

    private VpnConnectionVgwTelemetryArgs() {}

    private VpnConnectionVgwTelemetryArgs(VpnConnectionVgwTelemetryArgs $) {
        this.acceptedRouteCount = $.acceptedRouteCount;
        this.lastStateChangeDate = $.lastStateChangeDate;
        this.outsideIpAddress = $.outsideIpAddress;
        this.state = $.state;
        this.stateDescription = $.stateDescription;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VpnConnectionVgwTelemetryArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VpnConnectionVgwTelemetryArgs $;

        public Builder() {
            $ = new VpnConnectionVgwTelemetryArgs();
        }

        public Builder(VpnConnectionVgwTelemetryArgs defaults) {
            $ = new VpnConnectionVgwTelemetryArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param acceptedRouteCount The number of routes accepted through BGP (Border Gateway Protocol) route exchanges.
         * 
         * @return builder
         * 
         */
        public Builder acceptedRouteCount(@Nullable Output<Integer> acceptedRouteCount) {
            $.acceptedRouteCount = acceptedRouteCount;
            return this;
        }

        /**
         * @param acceptedRouteCount The number of routes accepted through BGP (Border Gateway Protocol) route exchanges.
         * 
         * @return builder
         * 
         */
        public Builder acceptedRouteCount(Integer acceptedRouteCount) {
            return acceptedRouteCount(Output.of(acceptedRouteCount));
        }

        /**
         * @param lastStateChangeDate The date and time (UTC) of the latest state update.
         * 
         * @return builder
         * 
         */
        public Builder lastStateChangeDate(@Nullable Output<String> lastStateChangeDate) {
            $.lastStateChangeDate = lastStateChangeDate;
            return this;
        }

        /**
         * @param lastStateChangeDate The date and time (UTC) of the latest state update.
         * 
         * @return builder
         * 
         */
        public Builder lastStateChangeDate(String lastStateChangeDate) {
            return lastStateChangeDate(Output.of(lastStateChangeDate));
        }

        /**
         * @param outsideIpAddress The IP on the OUTSCALE side of the tunnel.
         * 
         * @return builder
         * 
         */
        public Builder outsideIpAddress(@Nullable Output<String> outsideIpAddress) {
            $.outsideIpAddress = outsideIpAddress;
            return this;
        }

        /**
         * @param outsideIpAddress The IP on the OUTSCALE side of the tunnel.
         * 
         * @return builder
         * 
         */
        public Builder outsideIpAddress(String outsideIpAddress) {
            return outsideIpAddress(Output.of(outsideIpAddress));
        }

        /**
         * @param state The state of the IPSEC tunnel (`UP` \| `DOWN`).
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state The state of the IPSEC tunnel (`UP` \| `DOWN`).
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            return state(Output.of(state));
        }

        /**
         * @param stateDescription A description of the current state of the tunnel.
         * 
         * @return builder
         * 
         */
        public Builder stateDescription(@Nullable Output<String> stateDescription) {
            $.stateDescription = stateDescription;
            return this;
        }

        /**
         * @param stateDescription A description of the current state of the tunnel.
         * 
         * @return builder
         * 
         */
        public Builder stateDescription(String stateDescription) {
            return stateDescription(Output.of(stateDescription));
        }

        public VpnConnectionVgwTelemetryArgs build() {
            return $;
        }
    }

}
