// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.outscale.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CaState extends com.pulumi.resources.ResourceArgs {

    public static final CaState Empty = new CaState();

    /**
     * The fingerprint of the CA.
     * 
     */
    @Import(name="caFingerprint")
    private @Nullable Output<String> caFingerprint;

    /**
     * @return The fingerprint of the CA.
     * 
     */
    public Optional<Output<String>> caFingerprint() {
        return Optional.ofNullable(this.caFingerprint);
    }

    /**
     * The ID of the CA.
     * 
     */
    @Import(name="caId")
    private @Nullable Output<String> caId;

    /**
     * @return The ID of the CA.
     * 
     */
    public Optional<Output<String>> caId() {
        return Optional.ofNullable(this.caId);
    }

    /**
     * The CA in PEM format.
     * 
     */
    @Import(name="caPem")
    private @Nullable Output<String> caPem;

    /**
     * @return The CA in PEM format.
     * 
     */
    public Optional<Output<String>> caPem() {
        return Optional.ofNullable(this.caPem);
    }

    /**
     * The description of the CA.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The description of the CA.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    @Import(name="requestId")
    private @Nullable Output<String> requestId;

    public Optional<Output<String>> requestId() {
        return Optional.ofNullable(this.requestId);
    }

    private CaState() {}

    private CaState(CaState $) {
        this.caFingerprint = $.caFingerprint;
        this.caId = $.caId;
        this.caPem = $.caPem;
        this.description = $.description;
        this.requestId = $.requestId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CaState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CaState $;

        public Builder() {
            $ = new CaState();
        }

        public Builder(CaState defaults) {
            $ = new CaState(Objects.requireNonNull(defaults));
        }

        /**
         * @param caFingerprint The fingerprint of the CA.
         * 
         * @return builder
         * 
         */
        public Builder caFingerprint(@Nullable Output<String> caFingerprint) {
            $.caFingerprint = caFingerprint;
            return this;
        }

        /**
         * @param caFingerprint The fingerprint of the CA.
         * 
         * @return builder
         * 
         */
        public Builder caFingerprint(String caFingerprint) {
            return caFingerprint(Output.of(caFingerprint));
        }

        /**
         * @param caId The ID of the CA.
         * 
         * @return builder
         * 
         */
        public Builder caId(@Nullable Output<String> caId) {
            $.caId = caId;
            return this;
        }

        /**
         * @param caId The ID of the CA.
         * 
         * @return builder
         * 
         */
        public Builder caId(String caId) {
            return caId(Output.of(caId));
        }

        /**
         * @param caPem The CA in PEM format.
         * 
         * @return builder
         * 
         */
        public Builder caPem(@Nullable Output<String> caPem) {
            $.caPem = caPem;
            return this;
        }

        /**
         * @param caPem The CA in PEM format.
         * 
         * @return builder
         * 
         */
        public Builder caPem(String caPem) {
            return caPem(Output.of(caPem));
        }

        /**
         * @param description The description of the CA.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description of the CA.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder requestId(@Nullable Output<String> requestId) {
            $.requestId = requestId;
            return this;
        }

        public Builder requestId(String requestId) {
            return requestId(Output.of(requestId));
        }

        public CaState build() {
            return $;
        }
    }

}
