// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.outscale.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.outscale.outputs.GetVmStatesFilter;
import com.pulumi.outscale.outputs.GetVmStatesVmState;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetVmStatesResult {
    private @Nullable Boolean allVms;
    private @Nullable List<GetVmStatesFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private String requestId;
    private @Nullable List<String> vmIds;
    /**
     * @return Information about one or more VM states.
     * 
     */
    private List<GetVmStatesVmState> vmStates;

    private GetVmStatesResult() {}
    public Optional<Boolean> allVms() {
        return Optional.ofNullable(this.allVms);
    }
    public List<GetVmStatesFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String requestId() {
        return this.requestId;
    }
    public List<String> vmIds() {
        return this.vmIds == null ? List.of() : this.vmIds;
    }
    /**
     * @return Information about one or more VM states.
     * 
     */
    public List<GetVmStatesVmState> vmStates() {
        return this.vmStates;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetVmStatesResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean allVms;
        private @Nullable List<GetVmStatesFilter> filters;
        private String id;
        private String requestId;
        private @Nullable List<String> vmIds;
        private List<GetVmStatesVmState> vmStates;
        public Builder() {}
        public Builder(GetVmStatesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allVms = defaults.allVms;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.requestId = defaults.requestId;
    	      this.vmIds = defaults.vmIds;
    	      this.vmStates = defaults.vmStates;
        }

        @CustomType.Setter
        public Builder allVms(@Nullable Boolean allVms) {
            this.allVms = allVms;
            return this;
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetVmStatesFilter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(GetVmStatesFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder requestId(String requestId) {
            this.requestId = Objects.requireNonNull(requestId);
            return this;
        }
        @CustomType.Setter
        public Builder vmIds(@Nullable List<String> vmIds) {
            this.vmIds = vmIds;
            return this;
        }
        public Builder vmIds(String... vmIds) {
            return vmIds(List.of(vmIds));
        }
        @CustomType.Setter
        public Builder vmStates(List<GetVmStatesVmState> vmStates) {
            this.vmStates = Objects.requireNonNull(vmStates);
            return this;
        }
        public Builder vmStates(GetVmStatesVmState... vmStates) {
            return vmStates(List.of(vmStates));
        }
        public GetVmStatesResult build() {
            final var o = new GetVmStatesResult();
            o.allVms = allVms;
            o.filters = filters;
            o.id = id;
            o.requestId = requestId;
            o.vmIds = vmIds;
            o.vmStates = vmStates;
            return o;
        }
    }
}
