// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.outscale;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.outscale.SnapshotArgs;
import com.pulumi.outscale.Utilities;
import com.pulumi.outscale.inputs.SnapshotState;
import com.pulumi.outscale.outputs.SnapshotPermissionsToCreateVolume;
import com.pulumi.outscale.outputs.SnapshotTag;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages a snapshot.
 * 
 * For more information on this resource, see the [User Guide](https://docs.outscale.com/en/userguide/About-Snapshots.html).\
 * For more information on this resource actions, see the [API documentation](https://docs.outscale.com/api#3ds-outscale-api-snapshot).
 * 
 * ## Example Usage
 * ### Required resource
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.outscale.Volume;
 * import com.pulumi.outscale.VolumeArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var volume01 = new Volume(&#34;volume01&#34;, VolumeArgs.builder()        
 *             .size(40)
 *             .subregionName(String.format(&#34;%sa&#34;, var_.region()))
 *             .build());
 * 
 *     }
 * }
 * ```
 * ### Create a snapshot
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.outscale.Snapshot;
 * import com.pulumi.outscale.SnapshotArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var snapshot01 = new Snapshot(&#34;snapshot01&#34;, SnapshotArgs.builder()        
 *             .volumeId(outscale_volume.volume01().volume_id())
 *             .build());
 * 
 *     }
 * }
 * ```
 * ### Copy a snapshot
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.outscale.Snapshot;
 * import com.pulumi.outscale.SnapshotArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var snapshot02 = new Snapshot(&#34;snapshot02&#34;, SnapshotArgs.builder()        
 *             .description(&#34;Terraform snapshot copy&#34;)
 *             .sourceRegionName(&#34;eu-west-2&#34;)
 *             .sourceSnapshotId(&#34;snap-12345678&#34;)
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * A snapshot can be imported using its ID. For exampleconsole
 * 
 * ```sh
 *  $ pulumi import outscale:index/snapshot:Snapshot ImportedSnapshot snap-12345678
 * ```
 * 
 */
@ResourceType(type="outscale:index/snapshot:Snapshot")
public class Snapshot extends com.pulumi.resources.CustomResource {
    /**
     * The account alias of the owner of the snapshot.
     * 
     */
    @Export(name="accountAlias", refs={String.class}, tree="[0]")
    private Output<String> accountAlias;

    /**
     * @return The account alias of the owner of the snapshot.
     * 
     */
    public Output<String> accountAlias() {
        return this.accountAlias;
    }
    /**
     * The account ID of the owner of the snapshot.
     * 
     */
    @Export(name="accountId", refs={String.class}, tree="[0]")
    private Output<String> accountId;

    /**
     * @return The account ID of the owner of the snapshot.
     * 
     */
    public Output<String> accountId() {
        return this.accountId;
    }
    /**
     * The date and time of creation of the snapshot.
     * 
     */
    @Export(name="creationDate", refs={String.class}, tree="[0]")
    private Output<String> creationDate;

    /**
     * @return The date and time of creation of the snapshot.
     * 
     */
    public Output<String> creationDate() {
        return this.creationDate;
    }
    /**
     * A description for the snapshot.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output<String> description;

    /**
     * @return A description for the snapshot.
     * 
     */
    public Output<String> description() {
        return this.description;
    }
    /**
     * (When importing) The pre-signed URL of the snapshot you want to import, or the normal URL of the snapshot if you have permission on the OOS bucket. For more information, see [Configuring a Pre-signed URL](https://docs.outscale.com/en/userguide/Configuring-a-Pre-signed-URL.html) or [Managing Access to Your Buckets and Objects](https://docs.outscale.com/en/userguide/Managing-Access-to-Your-Buckets-and-Objects.html).
     * 
     */
    @Export(name="fileLocation", refs={String.class}, tree="[0]")
    private Output<String> fileLocation;

    /**
     * @return (When importing) The pre-signed URL of the snapshot you want to import, or the normal URL of the snapshot if you have permission on the OOS bucket. For more information, see [Configuring a Pre-signed URL](https://docs.outscale.com/en/userguide/Configuring-a-Pre-signed-URL.html) or [Managing Access to Your Buckets and Objects](https://docs.outscale.com/en/userguide/Managing-Access-to-Your-Buckets-and-Objects.html).
     * 
     */
    public Output<String> fileLocation() {
        return this.fileLocation;
    }
    /**
     * Permissions for the resource.
     * 
     */
    @Export(name="permissionsToCreateVolumes", refs={List.class,SnapshotPermissionsToCreateVolume.class}, tree="[0,1]")
    private Output<List<SnapshotPermissionsToCreateVolume>> permissionsToCreateVolumes;

    /**
     * @return Permissions for the resource.
     * 
     */
    public Output<List<SnapshotPermissionsToCreateVolume>> permissionsToCreateVolumes() {
        return this.permissionsToCreateVolumes;
    }
    /**
     * The progress of the snapshot, as a percentage.
     * 
     */
    @Export(name="progress", refs={Integer.class}, tree="[0]")
    private Output<Integer> progress;

    /**
     * @return The progress of the snapshot, as a percentage.
     * 
     */
    public Output<Integer> progress() {
        return this.progress;
    }
    @Export(name="requestId", refs={String.class}, tree="[0]")
    private Output<String> requestId;

    public Output<String> requestId() {
        return this.requestId;
    }
    /**
     * The ID of the snapshot.
     * 
     */
    @Export(name="snapshotId", refs={String.class}, tree="[0]")
    private Output<String> snapshotId;

    /**
     * @return The ID of the snapshot.
     * 
     */
    public Output<String> snapshotId() {
        return this.snapshotId;
    }
    /**
     * (When importing) The size of the snapshot you want to create in your account, in bytes. This size must be greater than or equal to the size of the original, uncompressed snapshot.
     * 
     */
    @Export(name="snapshotSize", refs={Integer.class}, tree="[0]")
    private Output<Integer> snapshotSize;

    /**
     * @return (When importing) The size of the snapshot you want to create in your account, in bytes. This size must be greater than or equal to the size of the original, uncompressed snapshot.
     * 
     */
    public Output<Integer> snapshotSize() {
        return this.snapshotSize;
    }
    /**
     * (When copying) The name of the source Region, which must be the same as the Region of your account.
     * 
     */
    @Export(name="sourceRegionName", refs={String.class}, tree="[0]")
    private Output<String> sourceRegionName;

    /**
     * @return (When copying) The name of the source Region, which must be the same as the Region of your account.
     * 
     */
    public Output<String> sourceRegionName() {
        return this.sourceRegionName;
    }
    /**
     * (When copying) The ID of the snapshot you want to copy.
     * 
     */
    @Export(name="sourceSnapshotId", refs={String.class}, tree="[0]")
    private Output<String> sourceSnapshotId;

    /**
     * @return (When copying) The ID of the snapshot you want to copy.
     * 
     */
    public Output<String> sourceSnapshotId() {
        return this.sourceSnapshotId;
    }
    /**
     * The state of the snapshot (`in-queue` \| `completed` \| `error`).
     * 
     */
    @Export(name="state", refs={String.class}, tree="[0]")
    private Output<String> state;

    /**
     * @return The state of the snapshot (`in-queue` \| `completed` \| `error`).
     * 
     */
    public Output<String> state() {
        return this.state;
    }
    /**
     * A tag to add to this resource. You can specify this argument several times.
     * 
     */
    @Export(name="tags", refs={List.class,SnapshotTag.class}, tree="[0,1]")
    private Output</* @Nullable */ List<SnapshotTag>> tags;

    /**
     * @return A tag to add to this resource. You can specify this argument several times.
     * 
     */
    public Output<Optional<List<SnapshotTag>>> tags() {
        return Codegen.optional(this.tags);
    }
    /**
     * (When creating) The ID of the volume you want to create a snapshot of.
     * 
     */
    @Export(name="volumeId", refs={String.class}, tree="[0]")
    private Output<String> volumeId;

    /**
     * @return (When creating) The ID of the volume you want to create a snapshot of.
     * 
     */
    public Output<String> volumeId() {
        return this.volumeId;
    }
    /**
     * The size of the volume used to create the snapshot, in gibibytes (GiB).
     * 
     */
    @Export(name="volumeSize", refs={Integer.class}, tree="[0]")
    private Output<Integer> volumeSize;

    /**
     * @return The size of the volume used to create the snapshot, in gibibytes (GiB).
     * 
     */
    public Output<Integer> volumeSize() {
        return this.volumeSize;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Snapshot(String name) {
        this(name, SnapshotArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Snapshot(String name, @Nullable SnapshotArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Snapshot(String name, @Nullable SnapshotArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("outscale:index/snapshot:Snapshot", name, args == null ? SnapshotArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Snapshot(String name, Output<String> id, @Nullable SnapshotState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("outscale:index/snapshot:Snapshot", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Snapshot get(String name, Output<String> id, @Nullable SnapshotState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Snapshot(name, id, state, options);
    }
}
