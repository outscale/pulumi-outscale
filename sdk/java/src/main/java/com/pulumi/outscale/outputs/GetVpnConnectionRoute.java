// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.outscale.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetVpnConnectionRoute {
    /**
     * @return The IP range used for the destination match, in CIDR notation (for example, `10.0.0.0/24`).
     * 
     */
    private String destinationIpRange;
    /**
     * @return The type of route (always `static`).
     * 
     */
    private String routeType;
    /**
     * @return The state of the IPSEC tunnel (`UP` \| `DOWN`).
     * 
     */
    private String state;

    private GetVpnConnectionRoute() {}
    /**
     * @return The IP range used for the destination match, in CIDR notation (for example, `10.0.0.0/24`).
     * 
     */
    public String destinationIpRange() {
        return this.destinationIpRange;
    }
    /**
     * @return The type of route (always `static`).
     * 
     */
    public String routeType() {
        return this.routeType;
    }
    /**
     * @return The state of the IPSEC tunnel (`UP` \| `DOWN`).
     * 
     */
    public String state() {
        return this.state;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetVpnConnectionRoute defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String destinationIpRange;
        private String routeType;
        private String state;
        public Builder() {}
        public Builder(GetVpnConnectionRoute defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.destinationIpRange = defaults.destinationIpRange;
    	      this.routeType = defaults.routeType;
    	      this.state = defaults.state;
        }

        @CustomType.Setter
        public Builder destinationIpRange(String destinationIpRange) {
            this.destinationIpRange = Objects.requireNonNull(destinationIpRange);
            return this;
        }
        @CustomType.Setter
        public Builder routeType(String routeType) {
            this.routeType = Objects.requireNonNull(routeType);
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        public GetVpnConnectionRoute build() {
            final var o = new GetVpnConnectionRoute();
            o.destinationIpRange = destinationIpRange;
            o.routeType = routeType;
            o.state = state;
            return o;
        }
    }
}
