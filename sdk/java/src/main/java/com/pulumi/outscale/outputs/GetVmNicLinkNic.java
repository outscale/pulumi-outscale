// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.outscale.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetVmNicLinkNic {
    /**
     * @return If true, the NIC is deleted when the VM is terminated.
     * 
     */
    private Boolean deleteOnVmDeletion;
    /**
     * @return The device index for the NIC attachment (between `1` and `7`, both included).
     * 
     */
    private String deviceNumber;
    /**
     * @return The ID of the NIC to attach.
     * 
     */
    private String linkNicId;
    /**
     * @return The state of the VM (`pending` \| `running` \| `stopping` \| `stopped` \| `shutting-down` \| `terminated` \| `quarantine`).
     * 
     */
    private String state;

    private GetVmNicLinkNic() {}
    /**
     * @return If true, the NIC is deleted when the VM is terminated.
     * 
     */
    public Boolean deleteOnVmDeletion() {
        return this.deleteOnVmDeletion;
    }
    /**
     * @return The device index for the NIC attachment (between `1` and `7`, both included).
     * 
     */
    public String deviceNumber() {
        return this.deviceNumber;
    }
    /**
     * @return The ID of the NIC to attach.
     * 
     */
    public String linkNicId() {
        return this.linkNicId;
    }
    /**
     * @return The state of the VM (`pending` \| `running` \| `stopping` \| `stopped` \| `shutting-down` \| `terminated` \| `quarantine`).
     * 
     */
    public String state() {
        return this.state;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetVmNicLinkNic defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean deleteOnVmDeletion;
        private String deviceNumber;
        private String linkNicId;
        private String state;
        public Builder() {}
        public Builder(GetVmNicLinkNic defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.deleteOnVmDeletion = defaults.deleteOnVmDeletion;
    	      this.deviceNumber = defaults.deviceNumber;
    	      this.linkNicId = defaults.linkNicId;
    	      this.state = defaults.state;
        }

        @CustomType.Setter
        public Builder deleteOnVmDeletion(Boolean deleteOnVmDeletion) {
            this.deleteOnVmDeletion = Objects.requireNonNull(deleteOnVmDeletion);
            return this;
        }
        @CustomType.Setter
        public Builder deviceNumber(String deviceNumber) {
            this.deviceNumber = Objects.requireNonNull(deviceNumber);
            return this;
        }
        @CustomType.Setter
        public Builder linkNicId(String linkNicId) {
            this.linkNicId = Objects.requireNonNull(linkNicId);
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        public GetVmNicLinkNic build() {
            final var o = new GetVmNicLinkNic();
            o.deleteOnVmDeletion = deleteOnVmDeletion;
            o.deviceNumber = deviceNumber;
            o.linkNicId = linkNicId;
            o.state = state;
            return o;
        }
    }
}
