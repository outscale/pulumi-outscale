// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.outscale.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetProductTypesProductType {
    /**
     * @return The description of the product type.
     * 
     */
    private String description;
    /**
     * @return The ID of the product type.
     * 
     */
    private String productTypeId;
    /**
     * @return The vendor of the product type.
     * 
     */
    private String vendor;

    private GetProductTypesProductType() {}
    /**
     * @return The description of the product type.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return The ID of the product type.
     * 
     */
    public String productTypeId() {
        return this.productTypeId;
    }
    /**
     * @return The vendor of the product type.
     * 
     */
    public String vendor() {
        return this.vendor;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetProductTypesProductType defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String description;
        private String productTypeId;
        private String vendor;
        public Builder() {}
        public Builder(GetProductTypesProductType defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.productTypeId = defaults.productTypeId;
    	      this.vendor = defaults.vendor;
        }

        @CustomType.Setter
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        @CustomType.Setter
        public Builder productTypeId(String productTypeId) {
            this.productTypeId = Objects.requireNonNull(productTypeId);
            return this;
        }
        @CustomType.Setter
        public Builder vendor(String vendor) {
            this.vendor = Objects.requireNonNull(vendor);
            return this;
        }
        public GetProductTypesProductType build() {
            final var o = new GetProductTypesProductType();
            o.description = description;
            o.productTypeId = productTypeId;
            o.vendor = vendor;
            return o;
        }
    }
}
