// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.outscale.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.outscale.outputs.GetAccessKeysAccessKey;
import com.pulumi.outscale.outputs.GetAccessKeysFilter;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class GetAccessKeysResult {
    private @Nullable List<String> accessKeyIds;
    /**
     * @return A list of access keys.
     * 
     */
    private List<GetAccessKeysAccessKey> accessKeys;
    private @Nullable List<GetAccessKeysFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private String requestId;
    private @Nullable List<String> states;

    private GetAccessKeysResult() {}
    public List<String> accessKeyIds() {
        return this.accessKeyIds == null ? List.of() : this.accessKeyIds;
    }
    /**
     * @return A list of access keys.
     * 
     */
    public List<GetAccessKeysAccessKey> accessKeys() {
        return this.accessKeys;
    }
    public List<GetAccessKeysFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String requestId() {
        return this.requestId;
    }
    public List<String> states() {
        return this.states == null ? List.of() : this.states;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAccessKeysResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<String> accessKeyIds;
        private List<GetAccessKeysAccessKey> accessKeys;
        private @Nullable List<GetAccessKeysFilter> filters;
        private String id;
        private String requestId;
        private @Nullable List<String> states;
        public Builder() {}
        public Builder(GetAccessKeysResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessKeyIds = defaults.accessKeyIds;
    	      this.accessKeys = defaults.accessKeys;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.requestId = defaults.requestId;
    	      this.states = defaults.states;
        }

        @CustomType.Setter
        public Builder accessKeyIds(@Nullable List<String> accessKeyIds) {
            this.accessKeyIds = accessKeyIds;
            return this;
        }
        public Builder accessKeyIds(String... accessKeyIds) {
            return accessKeyIds(List.of(accessKeyIds));
        }
        @CustomType.Setter
        public Builder accessKeys(List<GetAccessKeysAccessKey> accessKeys) {
            this.accessKeys = Objects.requireNonNull(accessKeys);
            return this;
        }
        public Builder accessKeys(GetAccessKeysAccessKey... accessKeys) {
            return accessKeys(List.of(accessKeys));
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetAccessKeysFilter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(GetAccessKeysFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder requestId(String requestId) {
            this.requestId = Objects.requireNonNull(requestId);
            return this;
        }
        @CustomType.Setter
        public Builder states(@Nullable List<String> states) {
            this.states = states;
            return this;
        }
        public Builder states(String... states) {
            return states(List.of(states));
        }
        public GetAccessKeysResult build() {
            final var o = new GetAccessKeysResult();
            o.accessKeyIds = accessKeyIds;
            o.accessKeys = accessKeys;
            o.filters = filters;
            o.id = id;
            o.requestId = requestId;
            o.states = states;
            return o;
        }
    }
}
