// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.outscale.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VpnConnectionRouteState extends com.pulumi.resources.ResourceArgs {

    public static final VpnConnectionRouteState Empty = new VpnConnectionRouteState();

    /**
     * The network prefix of the route, in CIDR notation (for example, `10.12.0.0/16`).
     * 
     */
    @Import(name="destinationIpRange")
    private @Nullable Output<String> destinationIpRange;

    /**
     * @return The network prefix of the route, in CIDR notation (for example, `10.12.0.0/16`).
     * 
     */
    public Optional<Output<String>> destinationIpRange() {
        return Optional.ofNullable(this.destinationIpRange);
    }

    @Import(name="requestId")
    private @Nullable Output<String> requestId;

    public Optional<Output<String>> requestId() {
        return Optional.ofNullable(this.requestId);
    }

    /**
     * The ID of the target VPN connection of the static route.
     * 
     */
    @Import(name="vpnConnectionId")
    private @Nullable Output<String> vpnConnectionId;

    /**
     * @return The ID of the target VPN connection of the static route.
     * 
     */
    public Optional<Output<String>> vpnConnectionId() {
        return Optional.ofNullable(this.vpnConnectionId);
    }

    private VpnConnectionRouteState() {}

    private VpnConnectionRouteState(VpnConnectionRouteState $) {
        this.destinationIpRange = $.destinationIpRange;
        this.requestId = $.requestId;
        this.vpnConnectionId = $.vpnConnectionId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VpnConnectionRouteState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VpnConnectionRouteState $;

        public Builder() {
            $ = new VpnConnectionRouteState();
        }

        public Builder(VpnConnectionRouteState defaults) {
            $ = new VpnConnectionRouteState(Objects.requireNonNull(defaults));
        }

        /**
         * @param destinationIpRange The network prefix of the route, in CIDR notation (for example, `10.12.0.0/16`).
         * 
         * @return builder
         * 
         */
        public Builder destinationIpRange(@Nullable Output<String> destinationIpRange) {
            $.destinationIpRange = destinationIpRange;
            return this;
        }

        /**
         * @param destinationIpRange The network prefix of the route, in CIDR notation (for example, `10.12.0.0/16`).
         * 
         * @return builder
         * 
         */
        public Builder destinationIpRange(String destinationIpRange) {
            return destinationIpRange(Output.of(destinationIpRange));
        }

        public Builder requestId(@Nullable Output<String> requestId) {
            $.requestId = requestId;
            return this;
        }

        public Builder requestId(String requestId) {
            return requestId(Output.of(requestId));
        }

        /**
         * @param vpnConnectionId The ID of the target VPN connection of the static route.
         * 
         * @return builder
         * 
         */
        public Builder vpnConnectionId(@Nullable Output<String> vpnConnectionId) {
            $.vpnConnectionId = vpnConnectionId;
            return this;
        }

        /**
         * @param vpnConnectionId The ID of the target VPN connection of the static route.
         * 
         * @return builder
         * 
         */
        public Builder vpnConnectionId(String vpnConnectionId) {
            return vpnConnectionId(Output.of(vpnConnectionId));
        }

        public VpnConnectionRouteState build() {
            return $;
        }
    }

}
