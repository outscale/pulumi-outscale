// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.outscale.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.outscale.inputs.GetNetsFilter;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetNetsPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetNetsPlainArgs Empty = new GetNetsPlainArgs();

    /**
     * A combination of a filter name and one or more filter values. You can specify this argument for as many filter names as you need. The filter name can be any of the following:
     * 
     */
    @Import(name="filters")
    private @Nullable List<GetNetsFilter> filters;

    /**
     * @return A combination of a filter name and one or more filter values. You can specify this argument for as many filter names as you need. The filter name can be any of the following:
     * 
     */
    public Optional<List<GetNetsFilter>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * The ID of the Net.
     * 
     */
    @Import(name="netIds")
    private @Nullable List<String> netIds;

    /**
     * @return The ID of the Net.
     * 
     */
    public Optional<List<String>> netIds() {
        return Optional.ofNullable(this.netIds);
    }

    private GetNetsPlainArgs() {}

    private GetNetsPlainArgs(GetNetsPlainArgs $) {
        this.filters = $.filters;
        this.netIds = $.netIds;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetNetsPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetNetsPlainArgs $;

        public Builder() {
            $ = new GetNetsPlainArgs();
        }

        public Builder(GetNetsPlainArgs defaults) {
            $ = new GetNetsPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param filters A combination of a filter name and one or more filter values. You can specify this argument for as many filter names as you need. The filter name can be any of the following:
         * 
         * @return builder
         * 
         */
        public Builder filters(@Nullable List<GetNetsFilter> filters) {
            $.filters = filters;
            return this;
        }

        /**
         * @param filters A combination of a filter name and one or more filter values. You can specify this argument for as many filter names as you need. The filter name can be any of the following:
         * 
         * @return builder
         * 
         */
        public Builder filters(GetNetsFilter... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param netIds The ID of the Net.
         * 
         * @return builder
         * 
         */
        public Builder netIds(@Nullable List<String> netIds) {
            $.netIds = netIds;
            return this;
        }

        /**
         * @param netIds The ID of the Net.
         * 
         * @return builder
         * 
         */
        public Builder netIds(String... netIds) {
            return netIds(List.of(netIds));
        }

        public GetNetsPlainArgs build() {
            return $;
        }
    }

}
