// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.outscale;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class LoadBalancerVmsArgs extends com.pulumi.resources.ResourceArgs {

    public static final LoadBalancerVmsArgs Empty = new LoadBalancerVmsArgs();

    /**
     * One or more IDs of back-end VMs.&lt;br /&gt;
     * Specifying the same ID several times has no effect as each back-end VM has equal weight.
     * 
     */
    @Import(name="backendVmIds", required=true)
    private Output<List<String>> backendVmIds;

    /**
     * @return One or more IDs of back-end VMs.&lt;br /&gt;
     * Specifying the same ID several times has no effect as each back-end VM has equal weight.
     * 
     */
    public Output<List<String>> backendVmIds() {
        return this.backendVmIds;
    }

    /**
     * The name of the load balancer.
     * 
     */
    @Import(name="loadBalancerName", required=true)
    private Output<String> loadBalancerName;

    /**
     * @return The name of the load balancer.
     * 
     */
    public Output<String> loadBalancerName() {
        return this.loadBalancerName;
    }

    private LoadBalancerVmsArgs() {}

    private LoadBalancerVmsArgs(LoadBalancerVmsArgs $) {
        this.backendVmIds = $.backendVmIds;
        this.loadBalancerName = $.loadBalancerName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LoadBalancerVmsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LoadBalancerVmsArgs $;

        public Builder() {
            $ = new LoadBalancerVmsArgs();
        }

        public Builder(LoadBalancerVmsArgs defaults) {
            $ = new LoadBalancerVmsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param backendVmIds One or more IDs of back-end VMs.&lt;br /&gt;
         * Specifying the same ID several times has no effect as each back-end VM has equal weight.
         * 
         * @return builder
         * 
         */
        public Builder backendVmIds(Output<List<String>> backendVmIds) {
            $.backendVmIds = backendVmIds;
            return this;
        }

        /**
         * @param backendVmIds One or more IDs of back-end VMs.&lt;br /&gt;
         * Specifying the same ID several times has no effect as each back-end VM has equal weight.
         * 
         * @return builder
         * 
         */
        public Builder backendVmIds(List<String> backendVmIds) {
            return backendVmIds(Output.of(backendVmIds));
        }

        /**
         * @param backendVmIds One or more IDs of back-end VMs.&lt;br /&gt;
         * Specifying the same ID several times has no effect as each back-end VM has equal weight.
         * 
         * @return builder
         * 
         */
        public Builder backendVmIds(String... backendVmIds) {
            return backendVmIds(List.of(backendVmIds));
        }

        /**
         * @param loadBalancerName The name of the load balancer.
         * 
         * @return builder
         * 
         */
        public Builder loadBalancerName(Output<String> loadBalancerName) {
            $.loadBalancerName = loadBalancerName;
            return this;
        }

        /**
         * @param loadBalancerName The name of the load balancer.
         * 
         * @return builder
         * 
         */
        public Builder loadBalancerName(String loadBalancerName) {
            return loadBalancerName(Output.of(loadBalancerName));
        }

        public LoadBalancerVmsArgs build() {
            $.backendVmIds = Objects.requireNonNull($.backendVmIds, "expected parameter 'backendVmIds' to be non-null");
            $.loadBalancerName = Objects.requireNonNull($.loadBalancerName, "expected parameter 'loadBalancerName' to be non-null");
            return $;
        }
    }

}
