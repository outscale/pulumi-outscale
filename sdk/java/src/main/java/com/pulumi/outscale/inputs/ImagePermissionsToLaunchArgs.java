// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.outscale.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ImagePermissionsToLaunchArgs extends com.pulumi.resources.ResourceArgs {

    public static final ImagePermissionsToLaunchArgs Empty = new ImagePermissionsToLaunchArgs();

    /**
     * One or more account IDs that the permission is associated with.
     * 
     */
    @Import(name="accountIds")
    private @Nullable Output<List<String>> accountIds;

    /**
     * @return One or more account IDs that the permission is associated with.
     * 
     */
    public Optional<Output<List<String>>> accountIds() {
        return Optional.ofNullable(this.accountIds);
    }

    /**
     * A global permission for all accounts.&lt;br /&gt;
     * (Request) Set this parameter to true to make the resource public (if the parent parameter is `Additions`) or to make the resource private (if the parent parameter is `Removals`).&lt;br /&gt;
     * (Response) If true, the resource is public. If false, the resource is private.
     * 
     */
    @Import(name="globalPermission")
    private @Nullable Output<Boolean> globalPermission;

    /**
     * @return A global permission for all accounts.&lt;br /&gt;
     * (Request) Set this parameter to true to make the resource public (if the parent parameter is `Additions`) or to make the resource private (if the parent parameter is `Removals`).&lt;br /&gt;
     * (Response) If true, the resource is public. If false, the resource is private.
     * 
     */
    public Optional<Output<Boolean>> globalPermission() {
        return Optional.ofNullable(this.globalPermission);
    }

    private ImagePermissionsToLaunchArgs() {}

    private ImagePermissionsToLaunchArgs(ImagePermissionsToLaunchArgs $) {
        this.accountIds = $.accountIds;
        this.globalPermission = $.globalPermission;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ImagePermissionsToLaunchArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ImagePermissionsToLaunchArgs $;

        public Builder() {
            $ = new ImagePermissionsToLaunchArgs();
        }

        public Builder(ImagePermissionsToLaunchArgs defaults) {
            $ = new ImagePermissionsToLaunchArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accountIds One or more account IDs that the permission is associated with.
         * 
         * @return builder
         * 
         */
        public Builder accountIds(@Nullable Output<List<String>> accountIds) {
            $.accountIds = accountIds;
            return this;
        }

        /**
         * @param accountIds One or more account IDs that the permission is associated with.
         * 
         * @return builder
         * 
         */
        public Builder accountIds(List<String> accountIds) {
            return accountIds(Output.of(accountIds));
        }

        /**
         * @param accountIds One or more account IDs that the permission is associated with.
         * 
         * @return builder
         * 
         */
        public Builder accountIds(String... accountIds) {
            return accountIds(List.of(accountIds));
        }

        /**
         * @param globalPermission A global permission for all accounts.&lt;br /&gt;
         * (Request) Set this parameter to true to make the resource public (if the parent parameter is `Additions`) or to make the resource private (if the parent parameter is `Removals`).&lt;br /&gt;
         * (Response) If true, the resource is public. If false, the resource is private.
         * 
         * @return builder
         * 
         */
        public Builder globalPermission(@Nullable Output<Boolean> globalPermission) {
            $.globalPermission = globalPermission;
            return this;
        }

        /**
         * @param globalPermission A global permission for all accounts.&lt;br /&gt;
         * (Request) Set this parameter to true to make the resource public (if the parent parameter is `Additions`) or to make the resource private (if the parent parameter is `Removals`).&lt;br /&gt;
         * (Response) If true, the resource is public. If false, the resource is private.
         * 
         * @return builder
         * 
         */
        public Builder globalPermission(Boolean globalPermission) {
            return globalPermission(Output.of(globalPermission));
        }

        public ImagePermissionsToLaunchArgs build() {
            return $;
        }
    }

}
