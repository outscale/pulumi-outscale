// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.outscale.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class VolumeLinkedVolume {
    /**
     * @return If true, the volume is deleted when terminating the VM. If false, the volume is not deleted when terminating the VM.
     * 
     */
    private @Nullable Boolean deleteOnVmDeletion;
    /**
     * @return The name of the device.
     * 
     */
    private @Nullable String deviceName;
    /**
     * @return The state of the volume (`creating` \| `available` \| `in-use` \| `updating` \| `deleting` \| `error`).
     * 
     */
    private @Nullable String state;
    /**
     * @return The ID of the VM.
     * 
     */
    private @Nullable String vmId;
    /**
     * @return The ID of the volume.
     * 
     */
    private @Nullable String volumeId;

    private VolumeLinkedVolume() {}
    /**
     * @return If true, the volume is deleted when terminating the VM. If false, the volume is not deleted when terminating the VM.
     * 
     */
    public Optional<Boolean> deleteOnVmDeletion() {
        return Optional.ofNullable(this.deleteOnVmDeletion);
    }
    /**
     * @return The name of the device.
     * 
     */
    public Optional<String> deviceName() {
        return Optional.ofNullable(this.deviceName);
    }
    /**
     * @return The state of the volume (`creating` \| `available` \| `in-use` \| `updating` \| `deleting` \| `error`).
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return The ID of the VM.
     * 
     */
    public Optional<String> vmId() {
        return Optional.ofNullable(this.vmId);
    }
    /**
     * @return The ID of the volume.
     * 
     */
    public Optional<String> volumeId() {
        return Optional.ofNullable(this.volumeId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VolumeLinkedVolume defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean deleteOnVmDeletion;
        private @Nullable String deviceName;
        private @Nullable String state;
        private @Nullable String vmId;
        private @Nullable String volumeId;
        public Builder() {}
        public Builder(VolumeLinkedVolume defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.deleteOnVmDeletion = defaults.deleteOnVmDeletion;
    	      this.deviceName = defaults.deviceName;
    	      this.state = defaults.state;
    	      this.vmId = defaults.vmId;
    	      this.volumeId = defaults.volumeId;
        }

        @CustomType.Setter
        public Builder deleteOnVmDeletion(@Nullable Boolean deleteOnVmDeletion) {
            this.deleteOnVmDeletion = deleteOnVmDeletion;
            return this;
        }
        @CustomType.Setter
        public Builder deviceName(@Nullable String deviceName) {
            this.deviceName = deviceName;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder vmId(@Nullable String vmId) {
            this.vmId = vmId;
            return this;
        }
        @CustomType.Setter
        public Builder volumeId(@Nullable String volumeId) {
            this.volumeId = volumeId;
            return this;
        }
        public VolumeLinkedVolume build() {
            final var o = new VolumeLinkedVolume();
            o.deleteOnVmDeletion = deleteOnVmDeletion;
            o.deviceName = deviceName;
            o.state = state;
            o.vmId = vmId;
            o.volumeId = volumeId;
            return o;
        }
    }
}
