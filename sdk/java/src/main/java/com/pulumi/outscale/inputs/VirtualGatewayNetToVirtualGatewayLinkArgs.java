// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.outscale.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VirtualGatewayNetToVirtualGatewayLinkArgs extends com.pulumi.resources.ResourceArgs {

    public static final VirtualGatewayNetToVirtualGatewayLinkArgs Empty = new VirtualGatewayNetToVirtualGatewayLinkArgs();

    /**
     * The ID of the Net to which the virtual gateway is attached.
     * 
     */
    @Import(name="netId")
    private @Nullable Output<String> netId;

    /**
     * @return The ID of the Net to which the virtual gateway is attached.
     * 
     */
    public Optional<Output<String>> netId() {
        return Optional.ofNullable(this.netId);
    }

    /**
     * The state of the virtual gateway (`pending` \| `available` \| `deleting` \| `deleted`).
     * 
     */
    @Import(name="state")
    private @Nullable Output<String> state;

    /**
     * @return The state of the virtual gateway (`pending` \| `available` \| `deleting` \| `deleted`).
     * 
     */
    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    private VirtualGatewayNetToVirtualGatewayLinkArgs() {}

    private VirtualGatewayNetToVirtualGatewayLinkArgs(VirtualGatewayNetToVirtualGatewayLinkArgs $) {
        this.netId = $.netId;
        this.state = $.state;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VirtualGatewayNetToVirtualGatewayLinkArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VirtualGatewayNetToVirtualGatewayLinkArgs $;

        public Builder() {
            $ = new VirtualGatewayNetToVirtualGatewayLinkArgs();
        }

        public Builder(VirtualGatewayNetToVirtualGatewayLinkArgs defaults) {
            $ = new VirtualGatewayNetToVirtualGatewayLinkArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param netId The ID of the Net to which the virtual gateway is attached.
         * 
         * @return builder
         * 
         */
        public Builder netId(@Nullable Output<String> netId) {
            $.netId = netId;
            return this;
        }

        /**
         * @param netId The ID of the Net to which the virtual gateway is attached.
         * 
         * @return builder
         * 
         */
        public Builder netId(String netId) {
            return netId(Output.of(netId));
        }

        /**
         * @param state The state of the virtual gateway (`pending` \| `available` \| `deleting` \| `deleted`).
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state The state of the virtual gateway (`pending` \| `available` \| `deleting` \| `deleted`).
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            return state(Output.of(state));
        }

        public VirtualGatewayNetToVirtualGatewayLinkArgs build() {
            return $;
        }
    }

}
