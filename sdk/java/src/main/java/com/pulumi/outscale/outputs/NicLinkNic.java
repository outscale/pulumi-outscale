// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.outscale.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class NicLinkNic {
    /**
     * @return If true, the NIC is deleted when the VM is terminated.
     * 
     */
    private @Nullable String deleteOnVmDeletion;
    /**
     * @return The device index for the NIC attachment (between `1` and `7`, both included).
     * 
     */
    private @Nullable Integer deviceNumber;
    /**
     * @return The ID of the NIC to attach.
     * 
     */
    private @Nullable String linkNicId;
    /**
     * @return The state of the NIC (`available` \| `attaching` \| `in-use` \| `detaching`).
     * 
     */
    private @Nullable String state;
    /**
     * @return The account ID of the owner of the VM.
     * 
     */
    private @Nullable String vmAccountId;
    /**
     * @return The ID of the VM.
     * 
     */
    private @Nullable String vmId;

    private NicLinkNic() {}
    /**
     * @return If true, the NIC is deleted when the VM is terminated.
     * 
     */
    public Optional<String> deleteOnVmDeletion() {
        return Optional.ofNullable(this.deleteOnVmDeletion);
    }
    /**
     * @return The device index for the NIC attachment (between `1` and `7`, both included).
     * 
     */
    public Optional<Integer> deviceNumber() {
        return Optional.ofNullable(this.deviceNumber);
    }
    /**
     * @return The ID of the NIC to attach.
     * 
     */
    public Optional<String> linkNicId() {
        return Optional.ofNullable(this.linkNicId);
    }
    /**
     * @return The state of the NIC (`available` \| `attaching` \| `in-use` \| `detaching`).
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return The account ID of the owner of the VM.
     * 
     */
    public Optional<String> vmAccountId() {
        return Optional.ofNullable(this.vmAccountId);
    }
    /**
     * @return The ID of the VM.
     * 
     */
    public Optional<String> vmId() {
        return Optional.ofNullable(this.vmId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(NicLinkNic defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String deleteOnVmDeletion;
        private @Nullable Integer deviceNumber;
        private @Nullable String linkNicId;
        private @Nullable String state;
        private @Nullable String vmAccountId;
        private @Nullable String vmId;
        public Builder() {}
        public Builder(NicLinkNic defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.deleteOnVmDeletion = defaults.deleteOnVmDeletion;
    	      this.deviceNumber = defaults.deviceNumber;
    	      this.linkNicId = defaults.linkNicId;
    	      this.state = defaults.state;
    	      this.vmAccountId = defaults.vmAccountId;
    	      this.vmId = defaults.vmId;
        }

        @CustomType.Setter
        public Builder deleteOnVmDeletion(@Nullable String deleteOnVmDeletion) {
            this.deleteOnVmDeletion = deleteOnVmDeletion;
            return this;
        }
        @CustomType.Setter
        public Builder deviceNumber(@Nullable Integer deviceNumber) {
            this.deviceNumber = deviceNumber;
            return this;
        }
        @CustomType.Setter
        public Builder linkNicId(@Nullable String linkNicId) {
            this.linkNicId = linkNicId;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder vmAccountId(@Nullable String vmAccountId) {
            this.vmAccountId = vmAccountId;
            return this;
        }
        @CustomType.Setter
        public Builder vmId(@Nullable String vmId) {
            this.vmId = vmId;
            return this;
        }
        public NicLinkNic build() {
            final var o = new NicLinkNic();
            o.deleteOnVmDeletion = deleteOnVmDeletion;
            o.deviceNumber = deviceNumber;
            o.linkNicId = linkNicId;
            o.state = state;
            o.vmAccountId = vmAccountId;
            o.vmId = vmId;
            return o;
        }
    }
}
