// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.outscale.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.outscale.outputs.GetVirtualGatewaysFilter;
import com.pulumi.outscale.outputs.GetVirtualGatewaysVirtualGateway;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class GetVirtualGatewaysResult {
    private @Nullable List<GetVirtualGatewaysFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private String requestId;
    /**
     * @return The ID of the virtual gateway.
     * 
     */
    private List<String> virtualGatewayIds;
    /**
     * @return Information about one or more virtual gateways.
     * 
     */
    private List<GetVirtualGatewaysVirtualGateway> virtualGateways;

    private GetVirtualGatewaysResult() {}
    public List<GetVirtualGatewaysFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String requestId() {
        return this.requestId;
    }
    /**
     * @return The ID of the virtual gateway.
     * 
     */
    public List<String> virtualGatewayIds() {
        return this.virtualGatewayIds;
    }
    /**
     * @return Information about one or more virtual gateways.
     * 
     */
    public List<GetVirtualGatewaysVirtualGateway> virtualGateways() {
        return this.virtualGateways;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetVirtualGatewaysResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<GetVirtualGatewaysFilter> filters;
        private String id;
        private String requestId;
        private List<String> virtualGatewayIds;
        private List<GetVirtualGatewaysVirtualGateway> virtualGateways;
        public Builder() {}
        public Builder(GetVirtualGatewaysResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.requestId = defaults.requestId;
    	      this.virtualGatewayIds = defaults.virtualGatewayIds;
    	      this.virtualGateways = defaults.virtualGateways;
        }

        @CustomType.Setter
        public Builder filters(@Nullable List<GetVirtualGatewaysFilter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(GetVirtualGatewaysFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder requestId(String requestId) {
            this.requestId = Objects.requireNonNull(requestId);
            return this;
        }
        @CustomType.Setter
        public Builder virtualGatewayIds(List<String> virtualGatewayIds) {
            this.virtualGatewayIds = Objects.requireNonNull(virtualGatewayIds);
            return this;
        }
        public Builder virtualGatewayIds(String... virtualGatewayIds) {
            return virtualGatewayIds(List.of(virtualGatewayIds));
        }
        @CustomType.Setter
        public Builder virtualGateways(List<GetVirtualGatewaysVirtualGateway> virtualGateways) {
            this.virtualGateways = Objects.requireNonNull(virtualGateways);
            return this;
        }
        public Builder virtualGateways(GetVirtualGatewaysVirtualGateway... virtualGateways) {
            return virtualGateways(List.of(virtualGateways));
        }
        public GetVirtualGatewaysResult build() {
            final var o = new GetVirtualGatewaysResult();
            o.filters = filters;
            o.id = id;
            o.requestId = requestId;
            o.virtualGatewayIds = virtualGatewayIds;
            o.virtualGateways = virtualGateways;
            return o;
        }
    }
}
