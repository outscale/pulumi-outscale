// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.outscale;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.outscale.inputs.SecurityGroupTagArgs;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SecurityGroupArgs extends com.pulumi.resources.ResourceArgs {

    public static final SecurityGroupArgs Empty = new SecurityGroupArgs();

    /**
     * A description for the security group, with a maximum length of 255 [ASCII printable characters](https://en.wikipedia.org/wiki/ASCII#Printable_characters).
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return A description for the security group, with a maximum length of 255 [ASCII printable characters](https://en.wikipedia.org/wiki/ASCII#Printable_characters).
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The ID of the Net for the security group.
     * 
     */
    @Import(name="netId")
    private @Nullable Output<String> netId;

    /**
     * @return The ID of the Net for the security group.
     * 
     */
    public Optional<Output<String>> netId() {
        return Optional.ofNullable(this.netId);
    }

    /**
     * (Net only) By default or if set to false, the security group is created with a default outbound rule allowing all outbound flows. If set to true, the security group is created without a default outbound rule. For an existing security group, setting this parameter to true deletes the security group and creates a new one.
     * 
     */
    @Import(name="removeDefaultOutboundRule")
    private @Nullable Output<Boolean> removeDefaultOutboundRule;

    /**
     * @return (Net only) By default or if set to false, the security group is created with a default outbound rule allowing all outbound flows. If set to true, the security group is created without a default outbound rule. For an existing security group, setting this parameter to true deletes the security group and creates a new one.
     * 
     */
    public Optional<Output<Boolean>> removeDefaultOutboundRule() {
        return Optional.ofNullable(this.removeDefaultOutboundRule);
    }

    /**
     * The name of the security group.&lt;br /&gt;
     * This name must not start with `sg-`.&lt;/br&gt;
     * This name must be unique and contain between 1 and 255 ASCII characters. Accented letters are not allowed.
     * 
     */
    @Import(name="securityGroupName")
    private @Nullable Output<String> securityGroupName;

    /**
     * @return The name of the security group.&lt;br /&gt;
     * This name must not start with `sg-`.&lt;/br&gt;
     * This name must be unique and contain between 1 and 255 ASCII characters. Accented letters are not allowed.
     * 
     */
    public Optional<Output<String>> securityGroupName() {
        return Optional.ofNullable(this.securityGroupName);
    }

    @Import(name="tag")
    private @Nullable Output<Map<String,Object>> tag;

    public Optional<Output<Map<String,Object>>> tag() {
        return Optional.ofNullable(this.tag);
    }

    /**
     * A tag to add to this resource. You can specify this argument several times.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<List<SecurityGroupTagArgs>> tags;

    /**
     * @return A tag to add to this resource. You can specify this argument several times.
     * 
     */
    public Optional<Output<List<SecurityGroupTagArgs>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private SecurityGroupArgs() {}

    private SecurityGroupArgs(SecurityGroupArgs $) {
        this.description = $.description;
        this.netId = $.netId;
        this.removeDefaultOutboundRule = $.removeDefaultOutboundRule;
        this.securityGroupName = $.securityGroupName;
        this.tag = $.tag;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SecurityGroupArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SecurityGroupArgs $;

        public Builder() {
            $ = new SecurityGroupArgs();
        }

        public Builder(SecurityGroupArgs defaults) {
            $ = new SecurityGroupArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param description A description for the security group, with a maximum length of 255 [ASCII printable characters](https://en.wikipedia.org/wiki/ASCII#Printable_characters).
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description A description for the security group, with a maximum length of 255 [ASCII printable characters](https://en.wikipedia.org/wiki/ASCII#Printable_characters).
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param netId The ID of the Net for the security group.
         * 
         * @return builder
         * 
         */
        public Builder netId(@Nullable Output<String> netId) {
            $.netId = netId;
            return this;
        }

        /**
         * @param netId The ID of the Net for the security group.
         * 
         * @return builder
         * 
         */
        public Builder netId(String netId) {
            return netId(Output.of(netId));
        }

        /**
         * @param removeDefaultOutboundRule (Net only) By default or if set to false, the security group is created with a default outbound rule allowing all outbound flows. If set to true, the security group is created without a default outbound rule. For an existing security group, setting this parameter to true deletes the security group and creates a new one.
         * 
         * @return builder
         * 
         */
        public Builder removeDefaultOutboundRule(@Nullable Output<Boolean> removeDefaultOutboundRule) {
            $.removeDefaultOutboundRule = removeDefaultOutboundRule;
            return this;
        }

        /**
         * @param removeDefaultOutboundRule (Net only) By default or if set to false, the security group is created with a default outbound rule allowing all outbound flows. If set to true, the security group is created without a default outbound rule. For an existing security group, setting this parameter to true deletes the security group and creates a new one.
         * 
         * @return builder
         * 
         */
        public Builder removeDefaultOutboundRule(Boolean removeDefaultOutboundRule) {
            return removeDefaultOutboundRule(Output.of(removeDefaultOutboundRule));
        }

        /**
         * @param securityGroupName The name of the security group.&lt;br /&gt;
         * This name must not start with `sg-`.&lt;/br&gt;
         * This name must be unique and contain between 1 and 255 ASCII characters. Accented letters are not allowed.
         * 
         * @return builder
         * 
         */
        public Builder securityGroupName(@Nullable Output<String> securityGroupName) {
            $.securityGroupName = securityGroupName;
            return this;
        }

        /**
         * @param securityGroupName The name of the security group.&lt;br /&gt;
         * This name must not start with `sg-`.&lt;/br&gt;
         * This name must be unique and contain between 1 and 255 ASCII characters. Accented letters are not allowed.
         * 
         * @return builder
         * 
         */
        public Builder securityGroupName(String securityGroupName) {
            return securityGroupName(Output.of(securityGroupName));
        }

        public Builder tag(@Nullable Output<Map<String,Object>> tag) {
            $.tag = tag;
            return this;
        }

        public Builder tag(Map<String,Object> tag) {
            return tag(Output.of(tag));
        }

        /**
         * @param tags A tag to add to this resource. You can specify this argument several times.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<List<SecurityGroupTagArgs>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A tag to add to this resource. You can specify this argument several times.
         * 
         * @return builder
         * 
         */
        public Builder tags(List<SecurityGroupTagArgs> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param tags A tag to add to this resource. You can specify this argument several times.
         * 
         * @return builder
         * 
         */
        public Builder tags(SecurityGroupTagArgs... tags) {
            return tags(List.of(tags));
        }

        public SecurityGroupArgs build() {
            return $;
        }
    }

}
