// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.outscale.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetImagesImagePermissionsToLaunch {
    /**
     * @return The account ID of the owner of the OMI.
     * 
     */
    private String accountId;
    /**
     * @return A global permission for all accounts.&lt;br /&gt;
     * (Request) Set this parameter to true to make the resource public (if the parent parameter is `Additions`) or to make the resource private (if the parent parameter is `Removals`).&lt;br /&gt;
     * (Response) If true, the resource is public. If false, the resource is private.
     * 
     */
    private Boolean globalPermission;

    private GetImagesImagePermissionsToLaunch() {}
    /**
     * @return The account ID of the owner of the OMI.
     * 
     */
    public String accountId() {
        return this.accountId;
    }
    /**
     * @return A global permission for all accounts.&lt;br /&gt;
     * (Request) Set this parameter to true to make the resource public (if the parent parameter is `Additions`) or to make the resource private (if the parent parameter is `Removals`).&lt;br /&gt;
     * (Response) If true, the resource is public. If false, the resource is private.
     * 
     */
    public Boolean globalPermission() {
        return this.globalPermission;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetImagesImagePermissionsToLaunch defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String accountId;
        private Boolean globalPermission;
        public Builder() {}
        public Builder(GetImagesImagePermissionsToLaunch defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountId = defaults.accountId;
    	      this.globalPermission = defaults.globalPermission;
        }

        @CustomType.Setter
        public Builder accountId(String accountId) {
            this.accountId = Objects.requireNonNull(accountId);
            return this;
        }
        @CustomType.Setter
        public Builder globalPermission(Boolean globalPermission) {
            this.globalPermission = Objects.requireNonNull(globalPermission);
            return this;
        }
        public GetImagesImagePermissionsToLaunch build() {
            final var o = new GetImagesImagePermissionsToLaunch();
            o.accountId = accountId;
            o.globalPermission = globalPermission;
            return o;
        }
    }
}
