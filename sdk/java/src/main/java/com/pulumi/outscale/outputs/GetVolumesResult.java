// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.outscale.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.outscale.outputs.GetVolumesFilter;
import com.pulumi.outscale.outputs.GetVolumesVolume;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetVolumesResult {
    private @Nullable List<GetVolumesFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private @Nullable String requestId;
    /**
     * @return The ID of the volume.
     * 
     */
    private @Nullable String volumeId;
    /**
     * @return Information about one or more volumes.
     * 
     */
    private List<GetVolumesVolume> volumes;

    private GetVolumesResult() {}
    public List<GetVolumesFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public Optional<String> requestId() {
        return Optional.ofNullable(this.requestId);
    }
    /**
     * @return The ID of the volume.
     * 
     */
    public Optional<String> volumeId() {
        return Optional.ofNullable(this.volumeId);
    }
    /**
     * @return Information about one or more volumes.
     * 
     */
    public List<GetVolumesVolume> volumes() {
        return this.volumes;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetVolumesResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<GetVolumesFilter> filters;
        private String id;
        private @Nullable String requestId;
        private @Nullable String volumeId;
        private List<GetVolumesVolume> volumes;
        public Builder() {}
        public Builder(GetVolumesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.requestId = defaults.requestId;
    	      this.volumeId = defaults.volumeId;
    	      this.volumes = defaults.volumes;
        }

        @CustomType.Setter
        public Builder filters(@Nullable List<GetVolumesFilter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(GetVolumesFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder requestId(@Nullable String requestId) {
            this.requestId = requestId;
            return this;
        }
        @CustomType.Setter
        public Builder volumeId(@Nullable String volumeId) {
            this.volumeId = volumeId;
            return this;
        }
        @CustomType.Setter
        public Builder volumes(List<GetVolumesVolume> volumes) {
            this.volumes = Objects.requireNonNull(volumes);
            return this;
        }
        public Builder volumes(GetVolumesVolume... volumes) {
            return volumes(List.of(volumes));
        }
        public GetVolumesResult build() {
            final var o = new GetVolumesResult();
            o.filters = filters;
            o.id = id;
            o.requestId = requestId;
            o.volumeId = volumeId;
            o.volumes = volumes;
            return o;
        }
    }
}
