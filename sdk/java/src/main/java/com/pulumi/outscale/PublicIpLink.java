// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.outscale;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.outscale.PublicIpLinkArgs;
import com.pulumi.outscale.Utilities;
import com.pulumi.outscale.inputs.PublicIpLinkState;
import com.pulumi.outscale.outputs.PublicIpLinkTag;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages a public IP link.
 * 
 * For more information on this resource, see the [User Guide](https://docs.outscale.com/en/userguide/About-EIPs.html).\
 * For more information on this resource actions, see the [API documentation](https://docs.outscale.com/api#3ds-outscale-api-publicip).
 * 
 * ## Example Usage
 * ### Required resources
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.outscale.PublicIp;
 * import com.pulumi.outscale.Vm;
 * import com.pulumi.outscale.VmArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var publicIp01 = new PublicIp(&#34;publicIp01&#34;);
 * 
 *         var vm01 = new Vm(&#34;vm01&#34;, VmArgs.builder()        
 *             .imageId(var_.image_id())
 *             .vmType(var_.vm_type())
 *             .keypairName(var_.keypair_name())
 *             .securityGroupIds(var_.security_group_id())
 *             .build());
 * 
 *     }
 * }
 * ```
 * ### Link a public IP address to a VM
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.outscale.PublicIpLink;
 * import com.pulumi.outscale.PublicIpLinkArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var publicIpLink01 = new PublicIpLink(&#34;publicIpLink01&#34;, PublicIpLinkArgs.builder()        
 *             .vmId(outscale_vm.vm01().vm_id())
 *             .publicIp(outscale_public_ip.public_ip01().public_ip())
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * A public IP link can be imported using the public IP or the public IP link ID. For exampleconsole
 * 
 * ```sh
 *  $ pulumi import outscale:index/publicIpLink:PublicIpLink ImportedPublicIpLink eipassoc-12345678
 * ```
 * 
 */
@ResourceType(type="outscale:index/publicIpLink:PublicIpLink")
public class PublicIpLink extends com.pulumi.resources.CustomResource {
    /**
     * If true, allows the public IP to be associated with the VM or NIC that you specify even if it is already associated with another VM or NIC. If false, prevents the EIP from being associated with the VM or NIC that you specify if it is already associated with another VM or NIC. (By default, true in the public Cloud, false in a Net.)
     * 
     */
    @Export(name="allowRelink", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> allowRelink;

    /**
     * @return If true, allows the public IP to be associated with the VM or NIC that you specify even if it is already associated with another VM or NIC. If false, prevents the EIP from being associated with the VM or NIC that you specify if it is already associated with another VM or NIC. (By default, true in the public Cloud, false in a Net.)
     * 
     */
    public Output<Optional<Boolean>> allowRelink() {
        return Codegen.optional(this.allowRelink);
    }
    /**
     * (Net only) The ID representing the association of the public IP with the VM or the NIC.
     * 
     */
    @Export(name="linkPublicIpId", refs={String.class}, tree="[0]")
    private Output<String> linkPublicIpId;

    /**
     * @return (Net only) The ID representing the association of the public IP with the VM or the NIC.
     * 
     */
    public Output<String> linkPublicIpId() {
        return this.linkPublicIpId;
    }
    @Export(name="nicAccountId", refs={String.class}, tree="[0]")
    private Output<String> nicAccountId;

    public Output<String> nicAccountId() {
        return this.nicAccountId;
    }
    /**
     * (Net only) The ID of the NIC. This parameter is required if the VM has more than one NIC attached. Otherwise, you need to specify the `vm_id` parameter instead. You cannot specify both parameters at the same time.
     * 
     */
    @Export(name="nicId", refs={String.class}, tree="[0]")
    private Output<String> nicId;

    /**
     * @return (Net only) The ID of the NIC. This parameter is required if the VM has more than one NIC attached. Otherwise, you need to specify the `vm_id` parameter instead. You cannot specify both parameters at the same time.
     * 
     */
    public Output<String> nicId() {
        return this.nicId;
    }
    /**
     * (Net only) The primary or secondary private IP of the specified NIC. By default, the primary private IP.
     * 
     */
    @Export(name="privateIp", refs={String.class}, tree="[0]")
    private Output<String> privateIp;

    /**
     * @return (Net only) The primary or secondary private IP of the specified NIC. By default, the primary private IP.
     * 
     */
    public Output<String> privateIp() {
        return this.privateIp;
    }
    /**
     * The public IP. This parameter is required unless you use the `public_ip_id` parameter.
     * 
     */
    @Export(name="publicIp", refs={String.class}, tree="[0]")
    private Output<String> publicIp;

    /**
     * @return The public IP. This parameter is required unless you use the `public_ip_id` parameter.
     * 
     */
    public Output<String> publicIp() {
        return this.publicIp;
    }
    /**
     * The allocation ID of the public IP. This parameter is required unless you use the `public_ip` parameter.
     * 
     */
    @Export(name="publicIpId", refs={String.class}, tree="[0]")
    private Output<String> publicIpId;

    /**
     * @return The allocation ID of the public IP. This parameter is required unless you use the `public_ip` parameter.
     * 
     */
    public Output<String> publicIpId() {
        return this.publicIpId;
    }
    @Export(name="requestId", refs={String.class}, tree="[0]")
    private Output<String> requestId;

    public Output<String> requestId() {
        return this.requestId;
    }
    @Export(name="tags", refs={List.class,PublicIpLinkTag.class}, tree="[0,1]")
    private Output<List<PublicIpLinkTag>> tags;

    public Output<List<PublicIpLinkTag>> tags() {
        return this.tags;
    }
    /**
     * The ID of the VM.&lt;br /&gt;- In the public Cloud, this parameter is required.&lt;br /&gt;- In a Net, this parameter is required if the VM has only one NIC. Otherwise, you need to specify the `nic_id` parameter instead. You cannot specify both parameters at the same time.
     * 
     */
    @Export(name="vmId", refs={String.class}, tree="[0]")
    private Output<String> vmId;

    /**
     * @return The ID of the VM.&lt;br /&gt;- In the public Cloud, this parameter is required.&lt;br /&gt;- In a Net, this parameter is required if the VM has only one NIC. Otherwise, you need to specify the `nic_id` parameter instead. You cannot specify both parameters at the same time.
     * 
     */
    public Output<String> vmId() {
        return this.vmId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public PublicIpLink(String name) {
        this(name, PublicIpLinkArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public PublicIpLink(String name, @Nullable PublicIpLinkArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public PublicIpLink(String name, @Nullable PublicIpLinkArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("outscale:index/publicIpLink:PublicIpLink", name, args == null ? PublicIpLinkArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private PublicIpLink(String name, Output<String> id, @Nullable PublicIpLinkState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("outscale:index/publicIpLink:PublicIpLink", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static PublicIpLink get(String name, Output<String> id, @Nullable PublicIpLinkState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new PublicIpLink(name, id, state, options);
    }
}
