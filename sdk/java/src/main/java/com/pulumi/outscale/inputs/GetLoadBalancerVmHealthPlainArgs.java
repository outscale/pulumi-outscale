// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.outscale.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.outscale.inputs.GetLoadBalancerVmHealthFilter;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetLoadBalancerVmHealthPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetLoadBalancerVmHealthPlainArgs Empty = new GetLoadBalancerVmHealthPlainArgs();

    /**
     * One or more IDs of back-end VMs.
     * 
     */
    @Import(name="backendVmIds")
    private @Nullable List<String> backendVmIds;

    /**
     * @return One or more IDs of back-end VMs.
     * 
     */
    public Optional<List<String>> backendVmIds() {
        return Optional.ofNullable(this.backendVmIds);
    }

    @Import(name="filters")
    private @Nullable List<GetLoadBalancerVmHealthFilter> filters;

    public Optional<List<GetLoadBalancerVmHealthFilter>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * The name of the load balancer.
     * 
     */
    @Import(name="loadBalancerName", required=true)
    private String loadBalancerName;

    /**
     * @return The name of the load balancer.
     * 
     */
    public String loadBalancerName() {
        return this.loadBalancerName;
    }

    private GetLoadBalancerVmHealthPlainArgs() {}

    private GetLoadBalancerVmHealthPlainArgs(GetLoadBalancerVmHealthPlainArgs $) {
        this.backendVmIds = $.backendVmIds;
        this.filters = $.filters;
        this.loadBalancerName = $.loadBalancerName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetLoadBalancerVmHealthPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetLoadBalancerVmHealthPlainArgs $;

        public Builder() {
            $ = new GetLoadBalancerVmHealthPlainArgs();
        }

        public Builder(GetLoadBalancerVmHealthPlainArgs defaults) {
            $ = new GetLoadBalancerVmHealthPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param backendVmIds One or more IDs of back-end VMs.
         * 
         * @return builder
         * 
         */
        public Builder backendVmIds(@Nullable List<String> backendVmIds) {
            $.backendVmIds = backendVmIds;
            return this;
        }

        /**
         * @param backendVmIds One or more IDs of back-end VMs.
         * 
         * @return builder
         * 
         */
        public Builder backendVmIds(String... backendVmIds) {
            return backendVmIds(List.of(backendVmIds));
        }

        public Builder filters(@Nullable List<GetLoadBalancerVmHealthFilter> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(GetLoadBalancerVmHealthFilter... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param loadBalancerName The name of the load balancer.
         * 
         * @return builder
         * 
         */
        public Builder loadBalancerName(String loadBalancerName) {
            $.loadBalancerName = loadBalancerName;
            return this;
        }

        public GetLoadBalancerVmHealthPlainArgs build() {
            $.loadBalancerName = Objects.requireNonNull($.loadBalancerName, "expected parameter 'loadBalancerName' to be non-null");
            return $;
        }
    }

}
