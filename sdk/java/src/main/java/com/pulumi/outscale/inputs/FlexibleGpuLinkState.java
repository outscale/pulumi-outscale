// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.outscale.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FlexibleGpuLinkState extends com.pulumi.resources.ResourceArgs {

    public static final FlexibleGpuLinkState Empty = new FlexibleGpuLinkState();

    @Import(name="flexibleGpuIds")
    private @Nullable Output<List<String>> flexibleGpuIds;

    public Optional<Output<List<String>>> flexibleGpuIds() {
        return Optional.ofNullable(this.flexibleGpuIds);
    }

    @Import(name="requestId")
    private @Nullable Output<String> requestId;

    public Optional<Output<String>> requestId() {
        return Optional.ofNullable(this.requestId);
    }

    /**
     * The ID of the VM you want to attach the fGPU to.
     * 
     */
    @Import(name="vmId")
    private @Nullable Output<String> vmId;

    /**
     * @return The ID of the VM you want to attach the fGPU to.
     * 
     */
    public Optional<Output<String>> vmId() {
        return Optional.ofNullable(this.vmId);
    }

    private FlexibleGpuLinkState() {}

    private FlexibleGpuLinkState(FlexibleGpuLinkState $) {
        this.flexibleGpuIds = $.flexibleGpuIds;
        this.requestId = $.requestId;
        this.vmId = $.vmId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FlexibleGpuLinkState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FlexibleGpuLinkState $;

        public Builder() {
            $ = new FlexibleGpuLinkState();
        }

        public Builder(FlexibleGpuLinkState defaults) {
            $ = new FlexibleGpuLinkState(Objects.requireNonNull(defaults));
        }

        public Builder flexibleGpuIds(@Nullable Output<List<String>> flexibleGpuIds) {
            $.flexibleGpuIds = flexibleGpuIds;
            return this;
        }

        public Builder flexibleGpuIds(List<String> flexibleGpuIds) {
            return flexibleGpuIds(Output.of(flexibleGpuIds));
        }

        public Builder flexibleGpuIds(String... flexibleGpuIds) {
            return flexibleGpuIds(List.of(flexibleGpuIds));
        }

        public Builder requestId(@Nullable Output<String> requestId) {
            $.requestId = requestId;
            return this;
        }

        public Builder requestId(String requestId) {
            return requestId(Output.of(requestId));
        }

        /**
         * @param vmId The ID of the VM you want to attach the fGPU to.
         * 
         * @return builder
         * 
         */
        public Builder vmId(@Nullable Output<String> vmId) {
            $.vmId = vmId;
            return this;
        }

        /**
         * @param vmId The ID of the VM you want to attach the fGPU to.
         * 
         * @return builder
         * 
         */
        public Builder vmId(String vmId) {
            return vmId(Output.of(vmId));
        }

        public FlexibleGpuLinkState build() {
            return $;
        }
    }

}
