// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.outscale;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.outscale.inputs.NatServiceTagArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class NatServiceArgs extends com.pulumi.resources.ResourceArgs {

    public static final NatServiceArgs Empty = new NatServiceArgs();

    /**
     * The allocation ID of the public IP to associate with the NAT service.&lt;br /&gt;
     * If the public IP is already associated with another resource, you must first disassociate it.
     * 
     */
    @Import(name="publicIpId", required=true)
    private Output<String> publicIpId;

    /**
     * @return The allocation ID of the public IP to associate with the NAT service.&lt;br /&gt;
     * If the public IP is already associated with another resource, you must first disassociate it.
     * 
     */
    public Output<String> publicIpId() {
        return this.publicIpId;
    }

    /**
     * The ID of the Subnet in which you want to create the NAT service.
     * 
     */
    @Import(name="subnetId", required=true)
    private Output<String> subnetId;

    /**
     * @return The ID of the Subnet in which you want to create the NAT service.
     * 
     */
    public Output<String> subnetId() {
        return this.subnetId;
    }

    /**
     * A tag to add to this resource. You can specify this argument several times.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<List<NatServiceTagArgs>> tags;

    /**
     * @return A tag to add to this resource. You can specify this argument several times.
     * 
     */
    public Optional<Output<List<NatServiceTagArgs>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private NatServiceArgs() {}

    private NatServiceArgs(NatServiceArgs $) {
        this.publicIpId = $.publicIpId;
        this.subnetId = $.subnetId;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NatServiceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NatServiceArgs $;

        public Builder() {
            $ = new NatServiceArgs();
        }

        public Builder(NatServiceArgs defaults) {
            $ = new NatServiceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param publicIpId The allocation ID of the public IP to associate with the NAT service.&lt;br /&gt;
         * If the public IP is already associated with another resource, you must first disassociate it.
         * 
         * @return builder
         * 
         */
        public Builder publicIpId(Output<String> publicIpId) {
            $.publicIpId = publicIpId;
            return this;
        }

        /**
         * @param publicIpId The allocation ID of the public IP to associate with the NAT service.&lt;br /&gt;
         * If the public IP is already associated with another resource, you must first disassociate it.
         * 
         * @return builder
         * 
         */
        public Builder publicIpId(String publicIpId) {
            return publicIpId(Output.of(publicIpId));
        }

        /**
         * @param subnetId The ID of the Subnet in which you want to create the NAT service.
         * 
         * @return builder
         * 
         */
        public Builder subnetId(Output<String> subnetId) {
            $.subnetId = subnetId;
            return this;
        }

        /**
         * @param subnetId The ID of the Subnet in which you want to create the NAT service.
         * 
         * @return builder
         * 
         */
        public Builder subnetId(String subnetId) {
            return subnetId(Output.of(subnetId));
        }

        /**
         * @param tags A tag to add to this resource. You can specify this argument several times.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<List<NatServiceTagArgs>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A tag to add to this resource. You can specify this argument several times.
         * 
         * @return builder
         * 
         */
        public Builder tags(List<NatServiceTagArgs> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param tags A tag to add to this resource. You can specify this argument several times.
         * 
         * @return builder
         * 
         */
        public Builder tags(NatServiceTagArgs... tags) {
            return tags(List.of(tags));
        }

        public NatServiceArgs build() {
            $.publicIpId = Objects.requireNonNull($.publicIpId, "expected parameter 'publicIpId' to be non-null");
            $.subnetId = Objects.requireNonNull($.subnetId, "expected parameter 'subnetId' to be non-null");
            return $;
        }
    }

}
