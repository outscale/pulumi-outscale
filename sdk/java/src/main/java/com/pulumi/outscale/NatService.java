// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.outscale;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.outscale.NatServiceArgs;
import com.pulumi.outscale.Utilities;
import com.pulumi.outscale.inputs.NatServiceState;
import com.pulumi.outscale.outputs.NatServicePublicIp;
import com.pulumi.outscale.outputs.NatServiceTag;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages a NAT service.
 * 
 * For more information on this resource, see the [User Guide](https://docs.outscale.com/en/userguide/About-NAT-Gateways.html).\
 * For more information on this resource actions, see the [API documentation](https://docs.outscale.com/api#3ds-outscale-api-natservice).
 * 
 * ## Example Usage
 * ### Required resources
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.outscale.Net;
 * import com.pulumi.outscale.NetArgs;
 * import com.pulumi.outscale.Subnet;
 * import com.pulumi.outscale.SubnetArgs;
 * import com.pulumi.outscale.RouteTable;
 * import com.pulumi.outscale.RouteTableArgs;
 * import com.pulumi.outscale.RouteTableLink;
 * import com.pulumi.outscale.RouteTableLinkArgs;
 * import com.pulumi.outscale.InternetService;
 * import com.pulumi.outscale.InternetServiceLink;
 * import com.pulumi.outscale.InternetServiceLinkArgs;
 * import com.pulumi.outscale.Route;
 * import com.pulumi.outscale.RouteArgs;
 * import com.pulumi.outscale.PublicIp;
 * import com.pulumi.resources.CustomResourceOptions;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var net01 = new Net(&#34;net01&#34;, NetArgs.builder()        
 *             .ipRange(&#34;10.0.0.0/16&#34;)
 *             .build());
 * 
 *         var subnet01 = new Subnet(&#34;subnet01&#34;, SubnetArgs.builder()        
 *             .netId(net01.netId())
 *             .ipRange(&#34;10.0.0.0/18&#34;)
 *             .build());
 * 
 *         var routeTable01 = new RouteTable(&#34;routeTable01&#34;, RouteTableArgs.builder()        
 *             .netId(net01.netId())
 *             .build());
 * 
 *         var outscaleRouteTableLink01 = new RouteTableLink(&#34;outscaleRouteTableLink01&#34;, RouteTableLinkArgs.builder()        
 *             .subnetId(subnet01.subnetId())
 *             .routeTableId(routeTable01.routeTableId())
 *             .build());
 * 
 *         var internetService01 = new InternetService(&#34;internetService01&#34;);
 * 
 *         var internetServiceLink01 = new InternetServiceLink(&#34;internetServiceLink01&#34;, InternetServiceLinkArgs.builder()        
 *             .netId(net01.netId())
 *             .internetServiceId(internetService01.internetServiceId())
 *             .build());
 * 
 *         var route01 = new Route(&#34;route01&#34;, RouteArgs.builder()        
 *             .destinationIpRange(&#34;0.0.0.0/0&#34;)
 *             .gatewayId(internetService01.internetServiceId())
 *             .routeTableId(routeTable01.routeTableId())
 *             .build(), CustomResourceOptions.builder()
 *                 .dependsOn(internetServiceLink01)
 *                 .build());
 * 
 *         var publicIp01 = new PublicIp(&#34;publicIp01&#34;);
 * 
 *     }
 * }
 * ```
 * ### Create a NAT service
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.outscale.NatService;
 * import com.pulumi.outscale.NatServiceArgs;
 * import com.pulumi.resources.CustomResourceOptions;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var natService01 = new NatService(&#34;natService01&#34;, NatServiceArgs.builder()        
 *             .subnetId(outscale_subnet.subnet01().subnet_id())
 *             .publicIpId(outscale_public_ip.public_ip01().public_ip_id())
 *             .build(), CustomResourceOptions.builder()
 *                 .dependsOn(outscale_route.route01())
 *                 .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * A NAT service can be imported using its ID. For exampleconsole
 * 
 * ```sh
 *  $ pulumi import outscale:index/natService:NatService ImportedNatService nat-87654321
 * ```
 * 
 */
@ResourceType(type="outscale:index/natService:NatService")
public class NatService extends com.pulumi.resources.CustomResource {
    /**
     * The ID of the NAT service.
     * 
     */
    @Export(name="natServiceId", refs={String.class}, tree="[0]")
    private Output<String> natServiceId;

    /**
     * @return The ID of the NAT service.
     * 
     */
    public Output<String> natServiceId() {
        return this.natServiceId;
    }
    /**
     * The ID of the Net in which the NAT service is.
     * 
     */
    @Export(name="netId", refs={String.class}, tree="[0]")
    private Output<String> netId;

    /**
     * @return The ID of the Net in which the NAT service is.
     * 
     */
    public Output<String> netId() {
        return this.netId;
    }
    /**
     * The allocation ID of the public IP to associate with the NAT service.&lt;br /&gt;
     * If the public IP is already associated with another resource, you must first disassociate it.
     * 
     */
    @Export(name="publicIpId", refs={String.class}, tree="[0]")
    private Output<String> publicIpId;

    /**
     * @return The allocation ID of the public IP to associate with the NAT service.&lt;br /&gt;
     * If the public IP is already associated with another resource, you must first disassociate it.
     * 
     */
    public Output<String> publicIpId() {
        return this.publicIpId;
    }
    /**
     * Information about the public IP or IPs associated with the NAT service.
     * 
     */
    @Export(name="publicIps", refs={List.class,NatServicePublicIp.class}, tree="[0,1]")
    private Output<List<NatServicePublicIp>> publicIps;

    /**
     * @return Information about the public IP or IPs associated with the NAT service.
     * 
     */
    public Output<List<NatServicePublicIp>> publicIps() {
        return this.publicIps;
    }
    @Export(name="requestId", refs={String.class}, tree="[0]")
    private Output<String> requestId;

    public Output<String> requestId() {
        return this.requestId;
    }
    /**
     * The state of the NAT service (`pending` \| `available` \| `deleting` \| `deleted`).
     * 
     */
    @Export(name="state", refs={String.class}, tree="[0]")
    private Output<String> state;

    /**
     * @return The state of the NAT service (`pending` \| `available` \| `deleting` \| `deleted`).
     * 
     */
    public Output<String> state() {
        return this.state;
    }
    /**
     * The ID of the Subnet in which you want to create the NAT service.
     * 
     */
    @Export(name="subnetId", refs={String.class}, tree="[0]")
    private Output<String> subnetId;

    /**
     * @return The ID of the Subnet in which you want to create the NAT service.
     * 
     */
    public Output<String> subnetId() {
        return this.subnetId;
    }
    /**
     * A tag to add to this resource. You can specify this argument several times.
     * 
     */
    @Export(name="tags", refs={List.class,NatServiceTag.class}, tree="[0,1]")
    private Output</* @Nullable */ List<NatServiceTag>> tags;

    /**
     * @return A tag to add to this resource. You can specify this argument several times.
     * 
     */
    public Output<Optional<List<NatServiceTag>>> tags() {
        return Codegen.optional(this.tags);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public NatService(String name) {
        this(name, NatServiceArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public NatService(String name, NatServiceArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public NatService(String name, NatServiceArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("outscale:index/natService:NatService", name, args == null ? NatServiceArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private NatService(String name, Output<String> id, @Nullable NatServiceState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("outscale:index/natService:NatService", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static NatService get(String name, Output<String> id, @Nullable NatServiceState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new NatService(name, id, state, options);
    }
}
