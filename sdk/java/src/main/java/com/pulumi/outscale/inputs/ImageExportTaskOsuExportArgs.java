// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.outscale.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.outscale.inputs.ImageExportTaskOsuExportOsuApiKeyArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ImageExportTaskOsuExportArgs extends com.pulumi.resources.ResourceArgs {

    public static final ImageExportTaskOsuExportArgs Empty = new ImageExportTaskOsuExportArgs();

    /**
     * The format of the export disk (`qcow2` \| `raw`).
     * 
     */
    @Import(name="diskImageFormat", required=true)
    private Output<String> diskImageFormat;

    /**
     * @return The format of the export disk (`qcow2` \| `raw`).
     * 
     */
    public Output<String> diskImageFormat() {
        return this.diskImageFormat;
    }

    /**
     * Information about the OOS API key.
     * 
     */
    @Import(name="osuApiKeys")
    private @Nullable Output<List<ImageExportTaskOsuExportOsuApiKeyArgs>> osuApiKeys;

    /**
     * @return Information about the OOS API key.
     * 
     */
    public Optional<Output<List<ImageExportTaskOsuExportOsuApiKeyArgs>>> osuApiKeys() {
        return Optional.ofNullable(this.osuApiKeys);
    }

    /**
     * The name of the OOS bucket where you want to export the object.
     * 
     */
    @Import(name="osuBucket", required=true)
    private Output<String> osuBucket;

    /**
     * @return The name of the OOS bucket where you want to export the object.
     * 
     */
    public Output<String> osuBucket() {
        return this.osuBucket;
    }

    /**
     * The URL of the manifest file.
     * 
     */
    @Import(name="osuManifestUrl")
    private @Nullable Output<String> osuManifestUrl;

    /**
     * @return The URL of the manifest file.
     * 
     */
    public Optional<Output<String>> osuManifestUrl() {
        return Optional.ofNullable(this.osuManifestUrl);
    }

    /**
     * The prefix for the key of the OOS object.
     * 
     */
    @Import(name="osuPrefix")
    private @Nullable Output<String> osuPrefix;

    /**
     * @return The prefix for the key of the OOS object.
     * 
     */
    public Optional<Output<String>> osuPrefix() {
        return Optional.ofNullable(this.osuPrefix);
    }

    private ImageExportTaskOsuExportArgs() {}

    private ImageExportTaskOsuExportArgs(ImageExportTaskOsuExportArgs $) {
        this.diskImageFormat = $.diskImageFormat;
        this.osuApiKeys = $.osuApiKeys;
        this.osuBucket = $.osuBucket;
        this.osuManifestUrl = $.osuManifestUrl;
        this.osuPrefix = $.osuPrefix;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ImageExportTaskOsuExportArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ImageExportTaskOsuExportArgs $;

        public Builder() {
            $ = new ImageExportTaskOsuExportArgs();
        }

        public Builder(ImageExportTaskOsuExportArgs defaults) {
            $ = new ImageExportTaskOsuExportArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param diskImageFormat The format of the export disk (`qcow2` \| `raw`).
         * 
         * @return builder
         * 
         */
        public Builder diskImageFormat(Output<String> diskImageFormat) {
            $.diskImageFormat = diskImageFormat;
            return this;
        }

        /**
         * @param diskImageFormat The format of the export disk (`qcow2` \| `raw`).
         * 
         * @return builder
         * 
         */
        public Builder diskImageFormat(String diskImageFormat) {
            return diskImageFormat(Output.of(diskImageFormat));
        }

        /**
         * @param osuApiKeys Information about the OOS API key.
         * 
         * @return builder
         * 
         */
        public Builder osuApiKeys(@Nullable Output<List<ImageExportTaskOsuExportOsuApiKeyArgs>> osuApiKeys) {
            $.osuApiKeys = osuApiKeys;
            return this;
        }

        /**
         * @param osuApiKeys Information about the OOS API key.
         * 
         * @return builder
         * 
         */
        public Builder osuApiKeys(List<ImageExportTaskOsuExportOsuApiKeyArgs> osuApiKeys) {
            return osuApiKeys(Output.of(osuApiKeys));
        }

        /**
         * @param osuApiKeys Information about the OOS API key.
         * 
         * @return builder
         * 
         */
        public Builder osuApiKeys(ImageExportTaskOsuExportOsuApiKeyArgs... osuApiKeys) {
            return osuApiKeys(List.of(osuApiKeys));
        }

        /**
         * @param osuBucket The name of the OOS bucket where you want to export the object.
         * 
         * @return builder
         * 
         */
        public Builder osuBucket(Output<String> osuBucket) {
            $.osuBucket = osuBucket;
            return this;
        }

        /**
         * @param osuBucket The name of the OOS bucket where you want to export the object.
         * 
         * @return builder
         * 
         */
        public Builder osuBucket(String osuBucket) {
            return osuBucket(Output.of(osuBucket));
        }

        /**
         * @param osuManifestUrl The URL of the manifest file.
         * 
         * @return builder
         * 
         */
        public Builder osuManifestUrl(@Nullable Output<String> osuManifestUrl) {
            $.osuManifestUrl = osuManifestUrl;
            return this;
        }

        /**
         * @param osuManifestUrl The URL of the manifest file.
         * 
         * @return builder
         * 
         */
        public Builder osuManifestUrl(String osuManifestUrl) {
            return osuManifestUrl(Output.of(osuManifestUrl));
        }

        /**
         * @param osuPrefix The prefix for the key of the OOS object.
         * 
         * @return builder
         * 
         */
        public Builder osuPrefix(@Nullable Output<String> osuPrefix) {
            $.osuPrefix = osuPrefix;
            return this;
        }

        /**
         * @param osuPrefix The prefix for the key of the OOS object.
         * 
         * @return builder
         * 
         */
        public Builder osuPrefix(String osuPrefix) {
            return osuPrefix(Output.of(osuPrefix));
        }

        public ImageExportTaskOsuExportArgs build() {
            $.diskImageFormat = Objects.requireNonNull($.diskImageFormat, "expected parameter 'diskImageFormat' to be non-null");
            $.osuBucket = Objects.requireNonNull($.osuBucket, "expected parameter 'osuBucket' to be non-null");
            return $;
        }
    }

}
