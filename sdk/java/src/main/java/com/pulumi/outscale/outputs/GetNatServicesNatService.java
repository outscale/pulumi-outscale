// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.outscale.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.outscale.outputs.GetNatServicesNatServicePublicIp;
import com.pulumi.outscale.outputs.GetNatServicesNatServiceTag;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetNatServicesNatService {
    /**
     * @return The ID of the NAT service.
     * 
     */
    private String natServiceId;
    /**
     * @return The ID of the Net in which the NAT service is.
     * 
     */
    private String netId;
    /**
     * @return Information about the public IP or IPs associated with the NAT service.
     * 
     */
    private List<GetNatServicesNatServicePublicIp> publicIps;
    /**
     * @return The state of the NAT service (`pending` \| `available` \| `deleting` \| `deleted`).
     * 
     */
    private String state;
    /**
     * @return The ID of the Subnet in which the NAT service is.
     * 
     */
    private String subnetId;
    /**
     * @return The key/value combinations of the tags associated with the NAT services, in the following format: `TAGKEY=TAGVALUE`.
     * 
     */
    private List<GetNatServicesNatServiceTag> tags;

    private GetNatServicesNatService() {}
    /**
     * @return The ID of the NAT service.
     * 
     */
    public String natServiceId() {
        return this.natServiceId;
    }
    /**
     * @return The ID of the Net in which the NAT service is.
     * 
     */
    public String netId() {
        return this.netId;
    }
    /**
     * @return Information about the public IP or IPs associated with the NAT service.
     * 
     */
    public List<GetNatServicesNatServicePublicIp> publicIps() {
        return this.publicIps;
    }
    /**
     * @return The state of the NAT service (`pending` \| `available` \| `deleting` \| `deleted`).
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return The ID of the Subnet in which the NAT service is.
     * 
     */
    public String subnetId() {
        return this.subnetId;
    }
    /**
     * @return The key/value combinations of the tags associated with the NAT services, in the following format: `TAGKEY=TAGVALUE`.
     * 
     */
    public List<GetNatServicesNatServiceTag> tags() {
        return this.tags;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetNatServicesNatService defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String natServiceId;
        private String netId;
        private List<GetNatServicesNatServicePublicIp> publicIps;
        private String state;
        private String subnetId;
        private List<GetNatServicesNatServiceTag> tags;
        public Builder() {}
        public Builder(GetNatServicesNatService defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.natServiceId = defaults.natServiceId;
    	      this.netId = defaults.netId;
    	      this.publicIps = defaults.publicIps;
    	      this.state = defaults.state;
    	      this.subnetId = defaults.subnetId;
    	      this.tags = defaults.tags;
        }

        @CustomType.Setter
        public Builder natServiceId(String natServiceId) {
            this.natServiceId = Objects.requireNonNull(natServiceId);
            return this;
        }
        @CustomType.Setter
        public Builder netId(String netId) {
            this.netId = Objects.requireNonNull(netId);
            return this;
        }
        @CustomType.Setter
        public Builder publicIps(List<GetNatServicesNatServicePublicIp> publicIps) {
            this.publicIps = Objects.requireNonNull(publicIps);
            return this;
        }
        public Builder publicIps(GetNatServicesNatServicePublicIp... publicIps) {
            return publicIps(List.of(publicIps));
        }
        @CustomType.Setter
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        @CustomType.Setter
        public Builder subnetId(String subnetId) {
            this.subnetId = Objects.requireNonNull(subnetId);
            return this;
        }
        @CustomType.Setter
        public Builder tags(List<GetNatServicesNatServiceTag> tags) {
            this.tags = Objects.requireNonNull(tags);
            return this;
        }
        public Builder tags(GetNatServicesNatServiceTag... tags) {
            return tags(List.of(tags));
        }
        public GetNatServicesNatService build() {
            final var o = new GetNatServicesNatService();
            o.natServiceId = natServiceId;
            o.netId = netId;
            o.publicIps = publicIps;
            o.state = state;
            o.subnetId = subnetId;
            o.tags = tags;
            return o;
        }
    }
}
