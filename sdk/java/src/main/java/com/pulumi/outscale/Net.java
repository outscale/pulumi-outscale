// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.outscale;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.outscale.NetArgs;
import com.pulumi.outscale.Utilities;
import com.pulumi.outscale.inputs.NetState;
import com.pulumi.outscale.outputs.NetTag;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages a Net.
 * 
 * For more information on this resource, see the [User Guide](https://docs.outscale.com/en/userguide/About-VPCs.html).\
 * For more information on this resource actions, see the [API documentation](https://docs.outscale.com/api#3ds-outscale-api-net).
 * 
 * ## Example Usage
 * ### Create a Net
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.outscale.Net;
 * import com.pulumi.outscale.NetArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var net01 = new Net(&#34;net01&#34;, NetArgs.builder()        
 *             .ipRange(&#34;10.10.0.0/16&#34;)
 *             .tenancy(&#34;default&#34;)
 *             .build());
 * 
 *     }
 * }
 * ```
 * ### Create a Net with a network
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.outscale.Net;
 * import com.pulumi.outscale.NetArgs;
 * import com.pulumi.outscale.Subnet;
 * import com.pulumi.outscale.SubnetArgs;
 * import com.pulumi.outscale.PublicIp;
 * import com.pulumi.outscale.NatService;
 * import com.pulumi.outscale.NatServiceArgs;
 * import com.pulumi.outscale.RouteTable;
 * import com.pulumi.outscale.RouteTableArgs;
 * import com.pulumi.outscale.InternetService;
 * import com.pulumi.outscale.Route;
 * import com.pulumi.outscale.RouteArgs;
 * import com.pulumi.outscale.RouteTableLink;
 * import com.pulumi.outscale.RouteTableLinkArgs;
 * import com.pulumi.outscale.InternetServiceLink;
 * import com.pulumi.outscale.InternetServiceLinkArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var net02 = new Net(&#34;net02&#34;, NetArgs.builder()        
 *             .ipRange(&#34;10.0.0.0/16&#34;)
 *             .build());
 * 
 *         var subnet01 = new Subnet(&#34;subnet01&#34;, SubnetArgs.builder()        
 *             .netId(net02.netId())
 *             .ipRange(&#34;10.0.0.0/18&#34;)
 *             .build());
 * 
 *         var publicIp01 = new PublicIp(&#34;publicIp01&#34;);
 * 
 *         var natService01 = new NatService(&#34;natService01&#34;, NatServiceArgs.builder()        
 *             .subnetId(subnet01.subnetId())
 *             .publicIpId(publicIp01.publicIpId())
 *             .build());
 * 
 *         var routeTable01 = new RouteTable(&#34;routeTable01&#34;, RouteTableArgs.builder()        
 *             .netId(net02.netId())
 *             .build());
 * 
 *         var internetService01 = new InternetService(&#34;internetService01&#34;);
 * 
 *         var route01 = new Route(&#34;route01&#34;, RouteArgs.builder()        
 *             .destinationIpRange(&#34;0.0.0.0/0&#34;)
 *             .gatewayId(internetService01.internetServiceId())
 *             .routeTableId(routeTable01.routeTableId())
 *             .build());
 * 
 *         var routeTableLink01 = new RouteTableLink(&#34;routeTableLink01&#34;, RouteTableLinkArgs.builder()        
 *             .subnetId(subnet01.subnetId())
 *             .routeTableId(routeTable01.id())
 *             .build());
 * 
 *         var internetServiceLink01 = new InternetServiceLink(&#34;internetServiceLink01&#34;, InternetServiceLinkArgs.builder()        
 *             .netId(net02.netId())
 *             .internetServiceId(internetService01.id())
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * A Net can be imported using its ID. For exampleconsole
 * 
 * ```sh
 *  $ pulumi import outscale:index/net:Net ImportedNet vpc-87654321
 * ```
 * 
 */
@ResourceType(type="outscale:index/net:Net")
public class Net extends com.pulumi.resources.CustomResource {
    /**
     * The ID of the DHCP options set (or `default` if you want to associate the default one).
     * 
     */
    @Export(name="dhcpOptionsSetId", refs={String.class}, tree="[0]")
    private Output<String> dhcpOptionsSetId;

    /**
     * @return The ID of the DHCP options set (or `default` if you want to associate the default one).
     * 
     */
    public Output<String> dhcpOptionsSetId() {
        return this.dhcpOptionsSetId;
    }
    /**
     * The IP range for the Net, in CIDR notation (for example, `10.0.0.0/16`).
     * 
     */
    @Export(name="ipRange", refs={String.class}, tree="[0]")
    private Output<String> ipRange;

    /**
     * @return The IP range for the Net, in CIDR notation (for example, `10.0.0.0/16`).
     * 
     */
    public Output<String> ipRange() {
        return this.ipRange;
    }
    /**
     * The ID of the Net.
     * 
     */
    @Export(name="netId", refs={String.class}, tree="[0]")
    private Output<String> netId;

    /**
     * @return The ID of the Net.
     * 
     */
    public Output<String> netId() {
        return this.netId;
    }
    @Export(name="requestId", refs={String.class}, tree="[0]")
    private Output<String> requestId;

    public Output<String> requestId() {
        return this.requestId;
    }
    /**
     * The state of the Net (`pending` \| `available` \| `deleted`).
     * 
     */
    @Export(name="state", refs={String.class}, tree="[0]")
    private Output<String> state;

    /**
     * @return The state of the Net (`pending` \| `available` \| `deleted`).
     * 
     */
    public Output<String> state() {
        return this.state;
    }
    /**
     * A tag to add to this resource. You can specify this argument several times.
     * 
     */
    @Export(name="tags", refs={List.class,NetTag.class}, tree="[0,1]")
    private Output</* @Nullable */ List<NetTag>> tags;

    /**
     * @return A tag to add to this resource. You can specify this argument several times.
     * 
     */
    public Output<Optional<List<NetTag>>> tags() {
        return Codegen.optional(this.tags);
    }
    /**
     * The tenancy options for the VMs (`default` if a VM created in a Net can be launched with any tenancy, `dedicated` if it can be launched with dedicated tenancy VMs running on single-tenant hardware).
     * 
     */
    @Export(name="tenancy", refs={String.class}, tree="[0]")
    private Output<String> tenancy;

    /**
     * @return The tenancy options for the VMs (`default` if a VM created in a Net can be launched with any tenancy, `dedicated` if it can be launched with dedicated tenancy VMs running on single-tenant hardware).
     * 
     */
    public Output<String> tenancy() {
        return this.tenancy;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Net(String name) {
        this(name, NetArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Net(String name, NetArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Net(String name, NetArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("outscale:index/net:Net", name, args == null ? NetArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Net(String name, Output<String> id, @Nullable NetState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("outscale:index/net:Net", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Net get(String name, Output<String> id, @Nullable NetState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Net(name, id, state, options);
    }
}
