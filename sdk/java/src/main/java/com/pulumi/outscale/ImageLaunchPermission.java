// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.outscale;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.outscale.ImageLaunchPermissionArgs;
import com.pulumi.outscale.Utilities;
import com.pulumi.outscale.inputs.ImageLaunchPermissionState;
import com.pulumi.outscale.outputs.ImageLaunchPermissionPermissionAdditions;
import com.pulumi.outscale.outputs.ImageLaunchPermissionPermissionRemovals;
import com.pulumi.outscale.outputs.ImageLaunchPermissionPermissionsToLaunch;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages an image launch permission.
 * 
 * For more information on this resource, see the [User Guide](https://docs.outscale.com/en/userguide/About-OMIs.html).\
 * For more information on this resource actions, see the [API documentation](https://docs.outscale.com/api#updateimage).
 * 
 * ## Example Usage
 * ### Add permissions
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.outscale.ImageLaunchPermission;
 * import com.pulumi.outscale.ImageLaunchPermissionArgs;
 * import com.pulumi.outscale.inputs.ImageLaunchPermissionPermissionAdditionsArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var image01 = new ImageLaunchPermission(&#34;image01&#34;, ImageLaunchPermissionArgs.builder()        
 *             .imageId(&#34;ami-12345678&#34;)
 *             .permissionAdditions(ImageLaunchPermissionPermissionAdditionsArgs.builder()
 *                 .accountIds(&#34;012345678910&#34;)
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * ```
 * ### Remove permissions
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.outscale.ImageLaunchPermission;
 * import com.pulumi.outscale.ImageLaunchPermissionArgs;
 * import com.pulumi.outscale.inputs.ImageLaunchPermissionPermissionRemovalsArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var image02 = new ImageLaunchPermission(&#34;image02&#34;, ImageLaunchPermissionArgs.builder()        
 *             .imageId(&#34;ami-12345678&#34;)
 *             .permissionRemovals(ImageLaunchPermissionPermissionRemovalsArgs.builder()
 *                 .accountIds(&#34;012345678910&#34;)
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 */
@ResourceType(type="outscale:index/imageLaunchPermission:ImageLaunchPermission")
public class ImageLaunchPermission extends com.pulumi.resources.CustomResource {
    /**
     * The description of the OMI.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output<String> description;

    /**
     * @return The description of the OMI.
     * 
     */
    public Output<String> description() {
        return this.description;
    }
    /**
     * The ID of the OMI you want to modify.
     * 
     */
    @Export(name="imageId", refs={String.class}, tree="[0]")
    private Output<String> imageId;

    /**
     * @return The ID of the OMI you want to modify.
     * 
     */
    public Output<String> imageId() {
        return this.imageId;
    }
    /**
     * Information about the users to whom you want to give permissions for the resource.
     * 
     */
    @Export(name="permissionAdditions", refs={ImageLaunchPermissionPermissionAdditions.class}, tree="[0]")
    private Output</* @Nullable */ ImageLaunchPermissionPermissionAdditions> permissionAdditions;

    /**
     * @return Information about the users to whom you want to give permissions for the resource.
     * 
     */
    public Output<Optional<ImageLaunchPermissionPermissionAdditions>> permissionAdditions() {
        return Codegen.optional(this.permissionAdditions);
    }
    /**
     * Information about the users from whom you want to remove permissions for the resource.
     * 
     */
    @Export(name="permissionRemovals", refs={ImageLaunchPermissionPermissionRemovals.class}, tree="[0]")
    private Output</* @Nullable */ ImageLaunchPermissionPermissionRemovals> permissionRemovals;

    /**
     * @return Information about the users from whom you want to remove permissions for the resource.
     * 
     */
    public Output<Optional<ImageLaunchPermissionPermissionRemovals>> permissionRemovals() {
        return Codegen.optional(this.permissionRemovals);
    }
    /**
     * Permissions for the resource.
     * 
     */
    @Export(name="permissionsToLaunches", refs={List.class,ImageLaunchPermissionPermissionsToLaunch.class}, tree="[0,1]")
    private Output<List<ImageLaunchPermissionPermissionsToLaunch>> permissionsToLaunches;

    /**
     * @return Permissions for the resource.
     * 
     */
    public Output<List<ImageLaunchPermissionPermissionsToLaunch>> permissionsToLaunches() {
        return this.permissionsToLaunches;
    }
    @Export(name="requestId", refs={String.class}, tree="[0]")
    private Output<String> requestId;

    public Output<String> requestId() {
        return this.requestId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ImageLaunchPermission(String name) {
        this(name, ImageLaunchPermissionArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ImageLaunchPermission(String name, ImageLaunchPermissionArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ImageLaunchPermission(String name, ImageLaunchPermissionArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("outscale:index/imageLaunchPermission:ImageLaunchPermission", name, args == null ? ImageLaunchPermissionArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private ImageLaunchPermission(String name, Output<String> id, @Nullable ImageLaunchPermissionState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("outscale:index/imageLaunchPermission:ImageLaunchPermission", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ImageLaunchPermission get(String name, Output<String> id, @Nullable ImageLaunchPermissionState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ImageLaunchPermission(name, id, state, options);
    }
}
