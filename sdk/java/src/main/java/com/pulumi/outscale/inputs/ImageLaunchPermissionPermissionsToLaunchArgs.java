// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.outscale.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ImageLaunchPermissionPermissionsToLaunchArgs extends com.pulumi.resources.ResourceArgs {

    public static final ImageLaunchPermissionPermissionsToLaunchArgs Empty = new ImageLaunchPermissionPermissionsToLaunchArgs();

    /**
     * The account ID of one or more users from whom you want to remove permissions.
     * 
     */
    @Import(name="accountIds")
    private @Nullable Output<List<String>> accountIds;

    /**
     * @return The account ID of one or more users from whom you want to remove permissions.
     * 
     */
    public Optional<Output<List<String>>> accountIds() {
        return Optional.ofNullable(this.accountIds);
    }

    /**
     * If true, the resource is public. If false, the resource is private.
     * 
     */
    @Import(name="globalPermission")
    private @Nullable Output<String> globalPermission;

    /**
     * @return If true, the resource is public. If false, the resource is private.
     * 
     */
    public Optional<Output<String>> globalPermission() {
        return Optional.ofNullable(this.globalPermission);
    }

    private ImageLaunchPermissionPermissionsToLaunchArgs() {}

    private ImageLaunchPermissionPermissionsToLaunchArgs(ImageLaunchPermissionPermissionsToLaunchArgs $) {
        this.accountIds = $.accountIds;
        this.globalPermission = $.globalPermission;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ImageLaunchPermissionPermissionsToLaunchArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ImageLaunchPermissionPermissionsToLaunchArgs $;

        public Builder() {
            $ = new ImageLaunchPermissionPermissionsToLaunchArgs();
        }

        public Builder(ImageLaunchPermissionPermissionsToLaunchArgs defaults) {
            $ = new ImageLaunchPermissionPermissionsToLaunchArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accountIds The account ID of one or more users from whom you want to remove permissions.
         * 
         * @return builder
         * 
         */
        public Builder accountIds(@Nullable Output<List<String>> accountIds) {
            $.accountIds = accountIds;
            return this;
        }

        /**
         * @param accountIds The account ID of one or more users from whom you want to remove permissions.
         * 
         * @return builder
         * 
         */
        public Builder accountIds(List<String> accountIds) {
            return accountIds(Output.of(accountIds));
        }

        /**
         * @param accountIds The account ID of one or more users from whom you want to remove permissions.
         * 
         * @return builder
         * 
         */
        public Builder accountIds(String... accountIds) {
            return accountIds(List.of(accountIds));
        }

        /**
         * @param globalPermission If true, the resource is public. If false, the resource is private.
         * 
         * @return builder
         * 
         */
        public Builder globalPermission(@Nullable Output<String> globalPermission) {
            $.globalPermission = globalPermission;
            return this;
        }

        /**
         * @param globalPermission If true, the resource is public. If false, the resource is private.
         * 
         * @return builder
         * 
         */
        public Builder globalPermission(String globalPermission) {
            return globalPermission(Output.of(globalPermission));
        }

        public ImageLaunchPermissionPermissionsToLaunchArgs build() {
            return $;
        }
    }

}
