// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.outscale.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetVpnConnectionVgwTelemetry {
    /**
     * @return The number of routes accepted through BGP (Border Gateway Protocol) route exchanges.
     * 
     */
    private Integer acceptedRouteCount;
    /**
     * @return The date and time (UTC) of the latest state update.
     * 
     */
    private String lastStateChangeDate;
    /**
     * @return The IP on the OUTSCALE side of the tunnel.
     * 
     */
    private String outsideIpAddress;
    /**
     * @return The state of the IPSEC tunnel (`UP` \| `DOWN`).
     * 
     */
    private String state;
    /**
     * @return A description of the current state of the tunnel.
     * 
     */
    private String stateDescription;

    private GetVpnConnectionVgwTelemetry() {}
    /**
     * @return The number of routes accepted through BGP (Border Gateway Protocol) route exchanges.
     * 
     */
    public Integer acceptedRouteCount() {
        return this.acceptedRouteCount;
    }
    /**
     * @return The date and time (UTC) of the latest state update.
     * 
     */
    public String lastStateChangeDate() {
        return this.lastStateChangeDate;
    }
    /**
     * @return The IP on the OUTSCALE side of the tunnel.
     * 
     */
    public String outsideIpAddress() {
        return this.outsideIpAddress;
    }
    /**
     * @return The state of the IPSEC tunnel (`UP` \| `DOWN`).
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return A description of the current state of the tunnel.
     * 
     */
    public String stateDescription() {
        return this.stateDescription;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetVpnConnectionVgwTelemetry defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer acceptedRouteCount;
        private String lastStateChangeDate;
        private String outsideIpAddress;
        private String state;
        private String stateDescription;
        public Builder() {}
        public Builder(GetVpnConnectionVgwTelemetry defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.acceptedRouteCount = defaults.acceptedRouteCount;
    	      this.lastStateChangeDate = defaults.lastStateChangeDate;
    	      this.outsideIpAddress = defaults.outsideIpAddress;
    	      this.state = defaults.state;
    	      this.stateDescription = defaults.stateDescription;
        }

        @CustomType.Setter
        public Builder acceptedRouteCount(Integer acceptedRouteCount) {
            this.acceptedRouteCount = Objects.requireNonNull(acceptedRouteCount);
            return this;
        }
        @CustomType.Setter
        public Builder lastStateChangeDate(String lastStateChangeDate) {
            this.lastStateChangeDate = Objects.requireNonNull(lastStateChangeDate);
            return this;
        }
        @CustomType.Setter
        public Builder outsideIpAddress(String outsideIpAddress) {
            this.outsideIpAddress = Objects.requireNonNull(outsideIpAddress);
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        @CustomType.Setter
        public Builder stateDescription(String stateDescription) {
            this.stateDescription = Objects.requireNonNull(stateDescription);
            return this;
        }
        public GetVpnConnectionVgwTelemetry build() {
            final var o = new GetVpnConnectionVgwTelemetry();
            o.acceptedRouteCount = acceptedRouteCount;
            o.lastStateChangeDate = lastStateChangeDate;
            o.outsideIpAddress = outsideIpAddress;
            o.state = state;
            o.stateDescription = stateDescription;
            return o;
        }
    }
}
