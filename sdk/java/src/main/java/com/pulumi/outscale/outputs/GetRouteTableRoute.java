// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.outscale.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetRouteTableRoute {
    /**
     * @return The method used to create the route.
     * 
     */
    private String creationMethod;
    /**
     * @return The IP range used for the destination match, in CIDR notation (for example, `10.0.0.0/24`).
     * 
     */
    private String destinationIpRange;
    /**
     * @return The ID of the OUTSCALE service.
     * 
     */
    private String destinationServiceId;
    /**
     * @return The ID of the Internet service or virtual gateway attached to the Net.
     * 
     */
    private String gatewayId;
    /**
     * @return The ID of a NAT service attached to the Net.
     * 
     */
    private String natServiceId;
    /**
     * @return The ID of the Net access point.
     * 
     */
    private String netAccessPointId;
    /**
     * @return The ID of the Net peering.
     * 
     */
    private String netPeeringId;
    /**
     * @return The ID of the NIC.
     * 
     */
    private String nicId;
    /**
     * @return The state of a route in the route table (always `active`).
     * 
     */
    private String state;
    /**
     * @return The account ID of the owner of the VM.
     * 
     */
    private String vmAccountId;
    /**
     * @return The ID of a VM specified in a route in the table.
     * 
     */
    private String vmId;

    private GetRouteTableRoute() {}
    /**
     * @return The method used to create the route.
     * 
     */
    public String creationMethod() {
        return this.creationMethod;
    }
    /**
     * @return The IP range used for the destination match, in CIDR notation (for example, `10.0.0.0/24`).
     * 
     */
    public String destinationIpRange() {
        return this.destinationIpRange;
    }
    /**
     * @return The ID of the OUTSCALE service.
     * 
     */
    public String destinationServiceId() {
        return this.destinationServiceId;
    }
    /**
     * @return The ID of the Internet service or virtual gateway attached to the Net.
     * 
     */
    public String gatewayId() {
        return this.gatewayId;
    }
    /**
     * @return The ID of a NAT service attached to the Net.
     * 
     */
    public String natServiceId() {
        return this.natServiceId;
    }
    /**
     * @return The ID of the Net access point.
     * 
     */
    public String netAccessPointId() {
        return this.netAccessPointId;
    }
    /**
     * @return The ID of the Net peering.
     * 
     */
    public String netPeeringId() {
        return this.netPeeringId;
    }
    /**
     * @return The ID of the NIC.
     * 
     */
    public String nicId() {
        return this.nicId;
    }
    /**
     * @return The state of a route in the route table (always `active`).
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return The account ID of the owner of the VM.
     * 
     */
    public String vmAccountId() {
        return this.vmAccountId;
    }
    /**
     * @return The ID of a VM specified in a route in the table.
     * 
     */
    public String vmId() {
        return this.vmId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRouteTableRoute defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String creationMethod;
        private String destinationIpRange;
        private String destinationServiceId;
        private String gatewayId;
        private String natServiceId;
        private String netAccessPointId;
        private String netPeeringId;
        private String nicId;
        private String state;
        private String vmAccountId;
        private String vmId;
        public Builder() {}
        public Builder(GetRouteTableRoute defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.creationMethod = defaults.creationMethod;
    	      this.destinationIpRange = defaults.destinationIpRange;
    	      this.destinationServiceId = defaults.destinationServiceId;
    	      this.gatewayId = defaults.gatewayId;
    	      this.natServiceId = defaults.natServiceId;
    	      this.netAccessPointId = defaults.netAccessPointId;
    	      this.netPeeringId = defaults.netPeeringId;
    	      this.nicId = defaults.nicId;
    	      this.state = defaults.state;
    	      this.vmAccountId = defaults.vmAccountId;
    	      this.vmId = defaults.vmId;
        }

        @CustomType.Setter
        public Builder creationMethod(String creationMethod) {
            this.creationMethod = Objects.requireNonNull(creationMethod);
            return this;
        }
        @CustomType.Setter
        public Builder destinationIpRange(String destinationIpRange) {
            this.destinationIpRange = Objects.requireNonNull(destinationIpRange);
            return this;
        }
        @CustomType.Setter
        public Builder destinationServiceId(String destinationServiceId) {
            this.destinationServiceId = Objects.requireNonNull(destinationServiceId);
            return this;
        }
        @CustomType.Setter
        public Builder gatewayId(String gatewayId) {
            this.gatewayId = Objects.requireNonNull(gatewayId);
            return this;
        }
        @CustomType.Setter
        public Builder natServiceId(String natServiceId) {
            this.natServiceId = Objects.requireNonNull(natServiceId);
            return this;
        }
        @CustomType.Setter
        public Builder netAccessPointId(String netAccessPointId) {
            this.netAccessPointId = Objects.requireNonNull(netAccessPointId);
            return this;
        }
        @CustomType.Setter
        public Builder netPeeringId(String netPeeringId) {
            this.netPeeringId = Objects.requireNonNull(netPeeringId);
            return this;
        }
        @CustomType.Setter
        public Builder nicId(String nicId) {
            this.nicId = Objects.requireNonNull(nicId);
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        @CustomType.Setter
        public Builder vmAccountId(String vmAccountId) {
            this.vmAccountId = Objects.requireNonNull(vmAccountId);
            return this;
        }
        @CustomType.Setter
        public Builder vmId(String vmId) {
            this.vmId = Objects.requireNonNull(vmId);
            return this;
        }
        public GetRouteTableRoute build() {
            final var o = new GetRouteTableRoute();
            o.creationMethod = creationMethod;
            o.destinationIpRange = destinationIpRange;
            o.destinationServiceId = destinationServiceId;
            o.gatewayId = gatewayId;
            o.natServiceId = natServiceId;
            o.netAccessPointId = netAccessPointId;
            o.netPeeringId = netPeeringId;
            o.nicId = nicId;
            o.state = state;
            o.vmAccountId = vmAccountId;
            o.vmId = vmId;
            return o;
        }
    }
}
