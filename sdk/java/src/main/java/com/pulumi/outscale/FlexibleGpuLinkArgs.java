// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.outscale;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class FlexibleGpuLinkArgs extends com.pulumi.resources.ResourceArgs {

    public static final FlexibleGpuLinkArgs Empty = new FlexibleGpuLinkArgs();

    @Import(name="flexibleGpuIds", required=true)
    private Output<List<String>> flexibleGpuIds;

    public Output<List<String>> flexibleGpuIds() {
        return this.flexibleGpuIds;
    }

    /**
     * The ID of the VM you want to attach the fGPU to.
     * 
     */
    @Import(name="vmId", required=true)
    private Output<String> vmId;

    /**
     * @return The ID of the VM you want to attach the fGPU to.
     * 
     */
    public Output<String> vmId() {
        return this.vmId;
    }

    private FlexibleGpuLinkArgs() {}

    private FlexibleGpuLinkArgs(FlexibleGpuLinkArgs $) {
        this.flexibleGpuIds = $.flexibleGpuIds;
        this.vmId = $.vmId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FlexibleGpuLinkArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FlexibleGpuLinkArgs $;

        public Builder() {
            $ = new FlexibleGpuLinkArgs();
        }

        public Builder(FlexibleGpuLinkArgs defaults) {
            $ = new FlexibleGpuLinkArgs(Objects.requireNonNull(defaults));
        }

        public Builder flexibleGpuIds(Output<List<String>> flexibleGpuIds) {
            $.flexibleGpuIds = flexibleGpuIds;
            return this;
        }

        public Builder flexibleGpuIds(List<String> flexibleGpuIds) {
            return flexibleGpuIds(Output.of(flexibleGpuIds));
        }

        public Builder flexibleGpuIds(String... flexibleGpuIds) {
            return flexibleGpuIds(List.of(flexibleGpuIds));
        }

        /**
         * @param vmId The ID of the VM you want to attach the fGPU to.
         * 
         * @return builder
         * 
         */
        public Builder vmId(Output<String> vmId) {
            $.vmId = vmId;
            return this;
        }

        /**
         * @param vmId The ID of the VM you want to attach the fGPU to.
         * 
         * @return builder
         * 
         */
        public Builder vmId(String vmId) {
            return vmId(Output.of(vmId));
        }

        public FlexibleGpuLinkArgs build() {
            $.flexibleGpuIds = Objects.requireNonNull($.flexibleGpuIds, "expected parameter 'flexibleGpuIds' to be non-null");
            $.vmId = Objects.requireNonNull($.vmId, "expected parameter 'vmId' to be non-null");
            return $;
        }
    }

}
