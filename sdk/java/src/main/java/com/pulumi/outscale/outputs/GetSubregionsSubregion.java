// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.outscale.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetSubregionsSubregion {
    /**
     * @return The location code of the Subregion.
     * 
     */
    private String locationCode;
    /**
     * @return The name of the Region containing the Subregion.
     * 
     */
    private String regionName;
    /**
     * @return The state of the Subregion (`available` \| `information` \| `impaired` \| `unavailable`).
     * 
     */
    private String state;
    /**
     * @return The name of the Subregion.
     * 
     */
    private String subregionName;

    private GetSubregionsSubregion() {}
    /**
     * @return The location code of the Subregion.
     * 
     */
    public String locationCode() {
        return this.locationCode;
    }
    /**
     * @return The name of the Region containing the Subregion.
     * 
     */
    public String regionName() {
        return this.regionName;
    }
    /**
     * @return The state of the Subregion (`available` \| `information` \| `impaired` \| `unavailable`).
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return The name of the Subregion.
     * 
     */
    public String subregionName() {
        return this.subregionName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSubregionsSubregion defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String locationCode;
        private String regionName;
        private String state;
        private String subregionName;
        public Builder() {}
        public Builder(GetSubregionsSubregion defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.locationCode = defaults.locationCode;
    	      this.regionName = defaults.regionName;
    	      this.state = defaults.state;
    	      this.subregionName = defaults.subregionName;
        }

        @CustomType.Setter
        public Builder locationCode(String locationCode) {
            this.locationCode = Objects.requireNonNull(locationCode);
            return this;
        }
        @CustomType.Setter
        public Builder regionName(String regionName) {
            this.regionName = Objects.requireNonNull(regionName);
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        @CustomType.Setter
        public Builder subregionName(String subregionName) {
            this.subregionName = Objects.requireNonNull(subregionName);
            return this;
        }
        public GetSubregionsSubregion build() {
            final var o = new GetSubregionsSubregion();
            o.locationCode = locationCode;
            o.regionName = regionName;
            o.state = state;
            o.subregionName = subregionName;
            return o;
        }
    }
}
