// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.outscale;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.outscale.ApiAccessPolicyArgs;
import com.pulumi.outscale.Utilities;
import com.pulumi.outscale.inputs.ApiAccessPolicyState;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * Manages the API access policy.
 * 
 * To activate a trusted session, first you must:
 * * Set expiration dates to all your access keys.
 * * Specify a Certificate Authority (CA) in all your API access rules.
 * 
 * For more information on this resource, see the [User Guide](https://docs.outscale.com/en/userguide/About-Your-API-Access-Policy.html).\
 * For more information on this resource actions, see the [API documentation](https://docs.outscale.com/api#3ds-outscale-api-apiaccesspolicy).
 * 
 * ## Example Usage
 * ### Require expiration dates for your access keys
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.outscale.ApiAccessPolicy;
 * import com.pulumi.outscale.ApiAccessPolicyArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var unique = new ApiAccessPolicy(&#34;unique&#34;, ApiAccessPolicyArgs.builder()        
 *             .maxAccessKeyExpirationSeconds(31536000)
 *             .requireTrustedEnv(false)
 *             .build());
 * 
 *     }
 * }
 * ```
 * ### Activate a trusted session
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.outscale.ApiAccessPolicy;
 * import com.pulumi.outscale.ApiAccessPolicyArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var unique = new ApiAccessPolicy(&#34;unique&#34;, ApiAccessPolicyArgs.builder()        
 *             .maxAccessKeyExpirationSeconds(3153600000)
 *             .requireTrustedEnv(true)
 *             .build());
 * 
 *     }
 * }
 * ```
 * ### Deactivate a trusted session
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.outscale.ApiAccessPolicy;
 * import com.pulumi.outscale.ApiAccessPolicyArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var unique = new ApiAccessPolicy(&#34;unique&#34;, ApiAccessPolicyArgs.builder()        
 *             .maxAccessKeyExpirationSeconds(0)
 *             .requireTrustedEnv(false)
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 */
@ResourceType(type="outscale:index/apiAccessPolicy:ApiAccessPolicy")
public class ApiAccessPolicy extends com.pulumi.resources.CustomResource {
    /**
     * The maximum possible lifetime for your access keys, in seconds (between `0` and `3153600000`, both included). If set to `O`, your access keys can have unlimited lifetimes, but a trusted session cannot be activated. Otherwise, all your access keys must have an expiration date. This value must be greater than the remaining lifetime of each access key of your account.
     * 
     */
    @Export(name="maxAccessKeyExpirationSeconds", refs={Integer.class}, tree="[0]")
    private Output<Integer> maxAccessKeyExpirationSeconds;

    /**
     * @return The maximum possible lifetime for your access keys, in seconds (between `0` and `3153600000`, both included). If set to `O`, your access keys can have unlimited lifetimes, but a trusted session cannot be activated. Otherwise, all your access keys must have an expiration date. This value must be greater than the remaining lifetime of each access key of your account.
     * 
     */
    public Output<Integer> maxAccessKeyExpirationSeconds() {
        return this.maxAccessKeyExpirationSeconds;
    }
    @Export(name="requestId", refs={String.class}, tree="[0]")
    private Output<String> requestId;

    public Output<String> requestId() {
        return this.requestId;
    }
    /**
     * If true, a trusted session is activated, provided that you specify the `max_access_key_expiration_seconds` parameter with a value greater than `0`.
     * 
     */
    @Export(name="requireTrustedEnv", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> requireTrustedEnv;

    /**
     * @return If true, a trusted session is activated, provided that you specify the `max_access_key_expiration_seconds` parameter with a value greater than `0`.
     * 
     */
    public Output<Boolean> requireTrustedEnv() {
        return this.requireTrustedEnv;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ApiAccessPolicy(String name) {
        this(name, ApiAccessPolicyArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ApiAccessPolicy(String name, ApiAccessPolicyArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ApiAccessPolicy(String name, ApiAccessPolicyArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("outscale:index/apiAccessPolicy:ApiAccessPolicy", name, args == null ? ApiAccessPolicyArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private ApiAccessPolicy(String name, Output<String> id, @Nullable ApiAccessPolicyState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("outscale:index/apiAccessPolicy:ApiAccessPolicy", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ApiAccessPolicy get(String name, Output<String> id, @Nullable ApiAccessPolicyState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ApiAccessPolicy(name, id, state, options);
    }
}
