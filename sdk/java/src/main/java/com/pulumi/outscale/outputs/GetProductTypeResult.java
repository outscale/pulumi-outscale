// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.outscale.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.outscale.outputs.GetProductTypeFilter;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class GetProductTypeResult {
    /**
     * @return The description of the product type.
     * 
     */
    private String description;
    private @Nullable List<GetProductTypeFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The ID of the product type.
     * 
     */
    private String productTypeId;
    private String requestId;
    /**
     * @return The vendor of the product type.
     * 
     */
    private String vendor;

    private GetProductTypeResult() {}
    /**
     * @return The description of the product type.
     * 
     */
    public String description() {
        return this.description;
    }
    public List<GetProductTypeFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The ID of the product type.
     * 
     */
    public String productTypeId() {
        return this.productTypeId;
    }
    public String requestId() {
        return this.requestId;
    }
    /**
     * @return The vendor of the product type.
     * 
     */
    public String vendor() {
        return this.vendor;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetProductTypeResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String description;
        private @Nullable List<GetProductTypeFilter> filters;
        private String id;
        private String productTypeId;
        private String requestId;
        private String vendor;
        public Builder() {}
        public Builder(GetProductTypeResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.productTypeId = defaults.productTypeId;
    	      this.requestId = defaults.requestId;
    	      this.vendor = defaults.vendor;
        }

        @CustomType.Setter
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetProductTypeFilter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(GetProductTypeFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder productTypeId(String productTypeId) {
            this.productTypeId = Objects.requireNonNull(productTypeId);
            return this;
        }
        @CustomType.Setter
        public Builder requestId(String requestId) {
            this.requestId = Objects.requireNonNull(requestId);
            return this;
        }
        @CustomType.Setter
        public Builder vendor(String vendor) {
            this.vendor = Objects.requireNonNull(vendor);
            return this;
        }
        public GetProductTypeResult build() {
            final var o = new GetProductTypeResult();
            o.description = description;
            o.filters = filters;
            o.id = id;
            o.productTypeId = productTypeId;
            o.requestId = requestId;
            o.vendor = vendor;
            return o;
        }
    }
}
