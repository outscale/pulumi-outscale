// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.outscale.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class LoadBalancerVmsState extends com.pulumi.resources.ResourceArgs {

    public static final LoadBalancerVmsState Empty = new LoadBalancerVmsState();

    /**
     * One or more IDs of back-end VMs.&lt;br /&gt;
     * Specifying the same ID several times has no effect as each back-end VM has equal weight.
     * 
     */
    @Import(name="backendVmIds")
    private @Nullable Output<List<String>> backendVmIds;

    /**
     * @return One or more IDs of back-end VMs.&lt;br /&gt;
     * Specifying the same ID several times has no effect as each back-end VM has equal weight.
     * 
     */
    public Optional<Output<List<String>>> backendVmIds() {
        return Optional.ofNullable(this.backendVmIds);
    }

    /**
     * The name of the load balancer.
     * 
     */
    @Import(name="loadBalancerName")
    private @Nullable Output<String> loadBalancerName;

    /**
     * @return The name of the load balancer.
     * 
     */
    public Optional<Output<String>> loadBalancerName() {
        return Optional.ofNullable(this.loadBalancerName);
    }

    @Import(name="requestId")
    private @Nullable Output<String> requestId;

    public Optional<Output<String>> requestId() {
        return Optional.ofNullable(this.requestId);
    }

    private LoadBalancerVmsState() {}

    private LoadBalancerVmsState(LoadBalancerVmsState $) {
        this.backendVmIds = $.backendVmIds;
        this.loadBalancerName = $.loadBalancerName;
        this.requestId = $.requestId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LoadBalancerVmsState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LoadBalancerVmsState $;

        public Builder() {
            $ = new LoadBalancerVmsState();
        }

        public Builder(LoadBalancerVmsState defaults) {
            $ = new LoadBalancerVmsState(Objects.requireNonNull(defaults));
        }

        /**
         * @param backendVmIds One or more IDs of back-end VMs.&lt;br /&gt;
         * Specifying the same ID several times has no effect as each back-end VM has equal weight.
         * 
         * @return builder
         * 
         */
        public Builder backendVmIds(@Nullable Output<List<String>> backendVmIds) {
            $.backendVmIds = backendVmIds;
            return this;
        }

        /**
         * @param backendVmIds One or more IDs of back-end VMs.&lt;br /&gt;
         * Specifying the same ID several times has no effect as each back-end VM has equal weight.
         * 
         * @return builder
         * 
         */
        public Builder backendVmIds(List<String> backendVmIds) {
            return backendVmIds(Output.of(backendVmIds));
        }

        /**
         * @param backendVmIds One or more IDs of back-end VMs.&lt;br /&gt;
         * Specifying the same ID several times has no effect as each back-end VM has equal weight.
         * 
         * @return builder
         * 
         */
        public Builder backendVmIds(String... backendVmIds) {
            return backendVmIds(List.of(backendVmIds));
        }

        /**
         * @param loadBalancerName The name of the load balancer.
         * 
         * @return builder
         * 
         */
        public Builder loadBalancerName(@Nullable Output<String> loadBalancerName) {
            $.loadBalancerName = loadBalancerName;
            return this;
        }

        /**
         * @param loadBalancerName The name of the load balancer.
         * 
         * @return builder
         * 
         */
        public Builder loadBalancerName(String loadBalancerName) {
            return loadBalancerName(Output.of(loadBalancerName));
        }

        public Builder requestId(@Nullable Output<String> requestId) {
            $.requestId = requestId;
            return this;
        }

        public Builder requestId(String requestId) {
            return requestId(Output.of(requestId));
        }

        public LoadBalancerVmsState build() {
            return $;
        }
    }

}
