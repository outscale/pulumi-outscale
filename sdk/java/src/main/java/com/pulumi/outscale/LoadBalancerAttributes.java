// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.outscale;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.outscale.LoadBalancerAttributesArgs;
import com.pulumi.outscale.Utilities;
import com.pulumi.outscale.inputs.LoadBalancerAttributesState;
import com.pulumi.outscale.outputs.LoadBalancerAttributesAccessLog;
import com.pulumi.outscale.outputs.LoadBalancerAttributesApplicationStickyCookiePolicy;
import com.pulumi.outscale.outputs.LoadBalancerAttributesHealthCheck;
import com.pulumi.outscale.outputs.LoadBalancerAttributesListener;
import com.pulumi.outscale.outputs.LoadBalancerAttributesLoadBalancerStickyCookiePolicy;
import com.pulumi.outscale.outputs.LoadBalancerAttributesSourceSecurityGroup;
import com.pulumi.outscale.outputs.LoadBalancerAttributesTag;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages load balancer attributes.
 * 
 * For more information on this resource, see the [User Guide](https://docs.outscale.com/en/userguide/About-Load-Balancers.html).\
 * For more information on this resource actions, see the [API documentation](https://docs.outscale.com/api#updateloadbalancer).
 * 
 * ## Example Usage
 * ### Required resource
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.outscale.LoadBalancer;
 * import com.pulumi.outscale.LoadBalancerArgs;
 * import com.pulumi.outscale.inputs.LoadBalancerListenerArgs;
 * import com.pulumi.outscale.inputs.LoadBalancerTagArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var loadBalancer01 = new LoadBalancer(&#34;loadBalancer01&#34;, LoadBalancerArgs.builder()        
 *             .listeners(            
 *                 LoadBalancerListenerArgs.builder()
 *                     .backendPort(80)
 *                     .backendProtocol(&#34;HTTP&#34;)
 *                     .loadBalancerPort(80)
 *                     .loadBalancerProtocol(&#34;HTTP&#34;)
 *                     .build(),
 *                 LoadBalancerListenerArgs.builder()
 *                     .backendPort(8080)
 *                     .backendProtocol(&#34;HTTPS&#34;)
 *                     .loadBalancerPort(8080)
 *                     .loadBalancerProtocol(&#34;HTTPS&#34;)
 *                     .serverCertificateId(&#34;arn:aws:iam::012345678910:server-certificate/MyCertificates/Certificate&#34;)
 *                     .build(),
 *                 LoadBalancerListenerArgs.builder()
 *                     .backendPort(1024)
 *                     .backendProtocol(&#34;TCP&#34;)
 *                     .loadBalancerPort(1024)
 *                     .loadBalancerProtocol(&#34;TCP&#34;)
 *                     .build())
 *             .loadBalancerName(&#34;terraform-load-balancer&#34;)
 *             .subregionNames(&#34;eu-west-2a&#34;)
 *             .tags(            
 *                 LoadBalancerTagArgs.builder()
 *                     .key(&#34;name&#34;)
 *                     .value(&#34;terraform-load-balancer&#34;)
 *                     .build(),
 *                 LoadBalancerTagArgs.builder()
 *                     .key(&#34;platform&#34;)
 *                     .value(&#34;eu-west-2&#34;)
 *                     .build())
 *             .build());
 * 
 *     }
 * }
 * ```
 * ### Update health check
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.outscale.LoadBalancerAttributes;
 * import com.pulumi.outscale.LoadBalancerAttributesArgs;
 * import com.pulumi.outscale.inputs.LoadBalancerAttributesHealthCheckArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var attributes01 = new LoadBalancerAttributes(&#34;attributes01&#34;, LoadBalancerAttributesArgs.builder()        
 *             .loadBalancerName(outscale_load_balancer.load_balancer01().id())
 *             .healthCheck(LoadBalancerAttributesHealthCheckArgs.builder()
 *                 .healthyThreshold(10)
 *                 .checkInterval(30)
 *                 .path(&#34;/index.html&#34;)
 *                 .port(8080)
 *                 .protocol(&#34;HTTPS&#34;)
 *                 .timeout(5)
 *                 .unhealthyThreshold(5)
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * ```
 * ### Update access log
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.outscale.LoadBalancerAttributes;
 * import com.pulumi.outscale.LoadBalancerAttributesArgs;
 * import com.pulumi.outscale.inputs.LoadBalancerAttributesAccessLogArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var attributes02 = new LoadBalancerAttributes(&#34;attributes02&#34;, LoadBalancerAttributesArgs.builder()        
 *             .loadBalancerName(outscale_load_balancer.load_balancer01().id())
 *             .accessLog(LoadBalancerAttributesAccessLogArgs.builder()
 *                 .publicationInterval(5)
 *                 .isEnabled(true)
 *                 .osuBucketName(&#34;terraform-access-logs&#34;)
 *                 .osuBucketPrefix(&#34;access-logs-01234&#34;)
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * ```
 * ### Update policies
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.outscale.LoadBalancerAttributes;
 * import com.pulumi.outscale.LoadBalancerAttributesArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var attributes03 = new LoadBalancerAttributes(&#34;attributes03&#34;, LoadBalancerAttributesArgs.builder()        
 *             .loadBalancerName(outscale_load_balancer.load_balancer01().id())
 *             .loadBalancerPort(80)
 *             .policyNames(&#34;policy-name-01&#34;)
 *             .build());
 * 
 *     }
 * }
 * ```
 * ### Update SSL certificate
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.outscale.LoadBalancerAttributes;
 * import com.pulumi.outscale.LoadBalancerAttributesArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var attributes04 = new LoadBalancerAttributes(&#34;attributes04&#34;, LoadBalancerAttributesArgs.builder()        
 *             .loadBalancerName(outscale_load_balancer.load_balancer01().id())
 *             .loadBalancerPort(8080)
 *             .serverCertificateId(&#34;arn:aws:iam::012345678910:server-certificate/MyCertificates/Certificate&#34;)
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 */
@ResourceType(type="outscale:index/loadBalancerAttributes:LoadBalancerAttributes")
public class LoadBalancerAttributes extends com.pulumi.resources.CustomResource {
    /**
     * Information about access logs.
     * 
     */
    @Export(name="accessLog", refs={LoadBalancerAttributesAccessLog.class}, tree="[0]")
    private Output<LoadBalancerAttributesAccessLog> accessLog;

    /**
     * @return Information about access logs.
     * 
     */
    public Output<LoadBalancerAttributesAccessLog> accessLog() {
        return this.accessLog;
    }
    /**
     * The stickiness policies defined for the load balancer.
     * 
     */
    @Export(name="applicationStickyCookiePolicies", refs={List.class,LoadBalancerAttributesApplicationStickyCookiePolicy.class}, tree="[0,1]")
    private Output<List<LoadBalancerAttributesApplicationStickyCookiePolicy>> applicationStickyCookiePolicies;

    /**
     * @return The stickiness policies defined for the load balancer.
     * 
     */
    public Output<List<LoadBalancerAttributesApplicationStickyCookiePolicy>> applicationStickyCookiePolicies() {
        return this.applicationStickyCookiePolicies;
    }
    /**
     * One or more IDs of back-end VMs for the load balancer.
     * 
     */
    @Export(name="backendVmIds", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> backendVmIds;

    /**
     * @return One or more IDs of back-end VMs for the load balancer.
     * 
     */
    public Output<List<String>> backendVmIds() {
        return this.backendVmIds;
    }
    /**
     * The DNS name of the load balancer.
     * 
     */
    @Export(name="dnsName", refs={String.class}, tree="[0]")
    private Output<String> dnsName;

    /**
     * @return The DNS name of the load balancer.
     * 
     */
    public Output<String> dnsName() {
        return this.dnsName;
    }
    /**
     * Information about the health check configuration.
     * 
     */
    @Export(name="healthCheck", refs={LoadBalancerAttributesHealthCheck.class}, tree="[0]")
    private Output<LoadBalancerAttributesHealthCheck> healthCheck;

    /**
     * @return Information about the health check configuration.
     * 
     */
    public Output<LoadBalancerAttributesHealthCheck> healthCheck() {
        return this.healthCheck;
    }
    /**
     * The listeners for the load balancer.
     * 
     */
    @Export(name="listeners", refs={List.class,LoadBalancerAttributesListener.class}, tree="[0,1]")
    private Output<List<LoadBalancerAttributesListener>> listeners;

    /**
     * @return The listeners for the load balancer.
     * 
     */
    public Output<List<LoadBalancerAttributesListener>> listeners() {
        return this.listeners;
    }
    /**
     * The name of the load balancer.
     * 
     */
    @Export(name="loadBalancerName", refs={String.class}, tree="[0]")
    private Output<String> loadBalancerName;

    /**
     * @return The name of the load balancer.
     * 
     */
    public Output<String> loadBalancerName() {
        return this.loadBalancerName;
    }
    /**
     * The port on which the load balancer is listening (between `1` and `65535`, both included). This parameter is required if you want to update the server certificate.
     * 
     */
    @Export(name="loadBalancerPort", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> loadBalancerPort;

    /**
     * @return The port on which the load balancer is listening (between `1` and `65535`, both included). This parameter is required if you want to update the server certificate.
     * 
     */
    public Output<Optional<Integer>> loadBalancerPort() {
        return Codegen.optional(this.loadBalancerPort);
    }
    /**
     * The policies defined for the load balancer.
     * 
     */
    @Export(name="loadBalancerStickyCookiePolicies", refs={List.class,LoadBalancerAttributesLoadBalancerStickyCookiePolicy.class}, tree="[0,1]")
    private Output<List<LoadBalancerAttributesLoadBalancerStickyCookiePolicy>> loadBalancerStickyCookiePolicies;

    /**
     * @return The policies defined for the load balancer.
     * 
     */
    public Output<List<LoadBalancerAttributesLoadBalancerStickyCookiePolicy>> loadBalancerStickyCookiePolicies() {
        return this.loadBalancerStickyCookiePolicies;
    }
    /**
     * The type of load balancer. Valid only for load balancers in a Net.&lt;br /&gt;
     * If `load_balancer_type` is `internet-facing`, the load balancer has a public DNS name that resolves to a public IP.&lt;br /&gt;
     * If `load_balancer_type` is `internal`, the load balancer has a public DNS name that resolves to a private IP.
     * 
     */
    @Export(name="loadBalancerType", refs={String.class}, tree="[0]")
    private Output<String> loadBalancerType;

    /**
     * @return The type of load balancer. Valid only for load balancers in a Net.&lt;br /&gt;
     * If `load_balancer_type` is `internet-facing`, the load balancer has a public DNS name that resolves to a public IP.&lt;br /&gt;
     * If `load_balancer_type` is `internal`, the load balancer has a public DNS name that resolves to a private IP.
     * 
     */
    public Output<String> loadBalancerType() {
        return this.loadBalancerType;
    }
    /**
     * The name of the policy you want to enable for the listener.
     * 
     */
    @Export(name="policyNames", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> policyNames;

    /**
     * @return The name of the policy you want to enable for the listener.
     * 
     */
    public Output<Optional<List<String>>> policyNames() {
        return Codegen.optional(this.policyNames);
    }
    @Export(name="requestId", refs={String.class}, tree="[0]")
    private Output<String> requestId;

    public Output<String> requestId() {
        return this.requestId;
    }
    /**
     * One or more IDs of security groups for the load balancers. Valid only for load balancers in a Net.
     * 
     */
    @Export(name="securityGroups", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> securityGroups;

    /**
     * @return One or more IDs of security groups for the load balancers. Valid only for load balancers in a Net.
     * 
     */
    public Output<List<String>> securityGroups() {
        return this.securityGroups;
    }
    /**
     * The Outscale Resource Name (ORN) of the server certificate. For more information, see [Resource Identifiers &gt; Outscale Resource Names (ORNs)](https://docs.outscale.com/en/userguide/Resource-Identifiers.html#_outscale_resource_names_orns). If this parameter is specified, you must also specify the `load_balancer_port` parameter.
     * 
     */
    @Export(name="serverCertificateId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> serverCertificateId;

    /**
     * @return The Outscale Resource Name (ORN) of the server certificate. For more information, see [Resource Identifiers &gt; Outscale Resource Names (ORNs)](https://docs.outscale.com/en/userguide/Resource-Identifiers.html#_outscale_resource_names_orns). If this parameter is specified, you must also specify the `load_balancer_port` parameter.
     * 
     */
    public Output<Optional<String>> serverCertificateId() {
        return Codegen.optional(this.serverCertificateId);
    }
    /**
     * Information about the source security group of the load balancer, which you can use as part of your inbound rules for your registered VMs.&lt;br /&gt;
     * To only allow traffic from load balancers, add a security group rule that specifies this source security group as the inbound source.
     * 
     */
    @Export(name="sourceSecurityGroups", refs={List.class,LoadBalancerAttributesSourceSecurityGroup.class}, tree="[0,1]")
    private Output<List<LoadBalancerAttributesSourceSecurityGroup>> sourceSecurityGroups;

    /**
     * @return Information about the source security group of the load balancer, which you can use as part of your inbound rules for your registered VMs.&lt;br /&gt;
     * To only allow traffic from load balancers, add a security group rule that specifies this source security group as the inbound source.
     * 
     */
    public Output<List<LoadBalancerAttributesSourceSecurityGroup>> sourceSecurityGroups() {
        return this.sourceSecurityGroups;
    }
    /**
     * The ID of the Subnet in which the load balancer was created.
     * 
     */
    @Export(name="subnets", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> subnets;

    /**
     * @return The ID of the Subnet in which the load balancer was created.
     * 
     */
    public Output<List<String>> subnets() {
        return this.subnets;
    }
    /**
     * The ID of the Subregion in which the load balancer was created.
     * 
     */
    @Export(name="subregionNames", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> subregionNames;

    /**
     * @return The ID of the Subregion in which the load balancer was created.
     * 
     */
    public Output<List<String>> subregionNames() {
        return this.subregionNames;
    }
    /**
     * One or more tags associated with the load balancer.
     * 
     */
    @Export(name="tags", refs={List.class,LoadBalancerAttributesTag.class}, tree="[0,1]")
    private Output<List<LoadBalancerAttributesTag>> tags;

    /**
     * @return One or more tags associated with the load balancer.
     * 
     */
    public Output<List<LoadBalancerAttributesTag>> tags() {
        return this.tags;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public LoadBalancerAttributes(String name) {
        this(name, LoadBalancerAttributesArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public LoadBalancerAttributes(String name, LoadBalancerAttributesArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public LoadBalancerAttributes(String name, LoadBalancerAttributesArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("outscale:index/loadBalancerAttributes:LoadBalancerAttributes", name, args == null ? LoadBalancerAttributesArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private LoadBalancerAttributes(String name, Output<String> id, @Nullable LoadBalancerAttributesState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("outscale:index/loadBalancerAttributes:LoadBalancerAttributes", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static LoadBalancerAttributes get(String name, Output<String> id, @Nullable LoadBalancerAttributesState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new LoadBalancerAttributes(name, id, state, options);
    }
}
